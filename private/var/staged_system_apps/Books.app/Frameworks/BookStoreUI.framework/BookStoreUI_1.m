uint64_t sub_EA03C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2DED60();
  if (v1 <= 0x3F)
  {
    result = sub_2DDEA0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void ConvertRectFromGlobalHandler.callAsFunction(rect:)(double a1, double a2, double a3, double a4)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    id v10 = [Strong view];
    if (v10)
    {
      v11 = v10;
      [v10 convertRect:0 fromView:a1, a2, a3, a4];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_3C6588 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_2DF850();
    sub_58BA0(v12, (uint64_t)qword_3CD168);
    v13 = sub_2DF830();
    os_log_type_t v14 = sub_2E4900();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Failed to convert given frame to the one relative to the page's coordinate system becasue HostingViewController is nil.", v15, 2u);
      swift_slowDealloc();
    }
  }
}

ValueMetadata *type metadata accessor for ConvertRectFromGlobalHandler()
{
  return &type metadata for ConvertRectFromGlobalHandler;
}

uint64_t sub_EA2BC(uint64_t a1)
{
  return sub_9F708(a1, v1, &qword_3C8B80);
}

uint64_t sub_EA2E0()
{
  return sub_2E06A0();
}

uint64_t sub_EA308()
{
  sub_2E06E0();
  sub_71044(v1, v1[3]);
  sub_2DEC00();
  sub_2E4C10();
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v1);
}

uint64_t sub_EA394@<X0>(uint64_t a1@<X8>)
{
  sub_66444(v1, (uint64_t)v4, &qword_3C8B78);
  return sub_71900((uint64_t)v4, a1, &qword_3C8B80);
}

uint64_t sub_EA3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_66444(v2 + *(int *)(a1 + 24), a2, &qword_3CAD88);
}

uint64_t sub_EA410(uint64_t a1)
{
  uint64_t v2 = sub_EE748(&qword_3CAF18, (void (*)(uint64_t))type metadata accessor for RecommendationItemComponentModel);

  return LibraryAssetStateRequiring.assetIDsToObserveState.getter(a1, v2);
}

uint64_t sub_EA47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3C9EE0);
  __chkstk_darwin(v5 - 8);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66444(v2 + *(int *)(a1 + 20), (uint64_t)v7, &qword_3C9EE0);
  return sub_71900((uint64_t)v7, a2, &qword_3C7498);
}

uint64_t sub_EA528(unsigned __int8 *a1, char *a2)
{
  return sub_201CF8(*a1, *a2);
}

Swift::Int sub_EA534()
{
  return sub_297D0C();
}

uint64_t sub_EA53C()
{
  sub_2E44A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_EA5FC()
{
  return sub_298064();
}

uint64_t sub_EA604@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_EE6A8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_EA634(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656372756F736572;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6D65744964656573;
      goto LABEL_3;
    case 2:
      *a1 = 0x6575676573;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0xD00000000000001ELL;
      a1[1] = 0x80000000003141E0;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE800000000000000;
      break;
  }
}

unint64_t sub_EA6CC()
{
  unint64_t result = 0x656372756F736572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D65744964656573;
      break;
    case 2:
      unint64_t result = 0x6575676573;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_EA758@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_EE6A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_EA780(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_EA78C(uint64_t a1)
{
  unint64_t v2 = sub_EC1A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EA7C8(uint64_t a1)
{
  unint64_t v2 = sub_EC1A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_EA804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_2E38F0();
  __chkstk_darwin(v3 - 8);
  v74 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CAD88);
  __chkstk_darwin(v5 - 8);
  v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CAD90);
  __chkstk_darwin(v7 - 8);
  v78 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CAD98);
  __chkstk_darwin(v9 - 8);
  uint64_t v77 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CADA0);
  uint64_t v79 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v80 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_63BAC(&qword_3CADA8);
  uint64_t v81 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RecommendationItemComponentModel();
  __chkstk_darwin(v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v95 = 0;
  long long v93 = 0u;
  long long v94 = 0u;
  uint64_t v92 = 0;
  long long v91 = 0u;
  long long v90 = 0u;
  sub_9F64C((uint64_t)&v93, (uint64_t)&v90);
  long long v19 = v91;
  *(_OWORD *)v18 = v90;
  *((_OWORD *)v18 + 1) = v19;
  *((void *)v18 + 4) = v92;
  sub_662B4((uint64_t)&v93, &qword_3C8B80);
  v20 = &v18[*(int *)(v16 + 20)];
  uint64_t v21 = sub_2E3CC0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v82 = (uint64_t)v20;
  v22(v20, 1, 1, v21);
  v99 = (int *)v16;
  uint64_t v23 = *(int *)(v16 + 24);
  v85 = v18;
  v24 = &v18[v23];
  uint64_t v25 = sub_2E41C0();
  uint64_t v26 = *(void *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v28 = v26 + 56;
  uint64_t v83 = (uint64_t)v24;
  v27(v24, 1, 1, v25);
  uint64_t v29 = a1[3];
  v84 = a1;
  sub_71044(a1, v29);
  sub_EC1A8();
  uint64_t v30 = v86;
  sub_2E5220();
  if (!v30)
  {
    uint64_t v31 = v79;
    uint64_t v72 = v28;
    v73 = v27;
    uint64_t v86 = v25;
    LOBYTE(v93) = 0;
    sub_EC1FC();
    v32 = v80;
    sub_2E4F10();
    v33 = v15;
    v44 = (char *)sub_2E04E0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v11);
    sub_2DEFB0();
    uint64_t v40 = (uint64_t)v85;
    if (!*((void *)&v94 + 1))
    {
      sub_662B4((uint64_t)&v93, &qword_3C8950);
      uint64_t v48 = sub_2E4CB0();
      swift_allocError();
      v71 = v33;
      uint64_t v50 = v49;
      uint64_t v70 = v13;
      sub_2E4E70();
      uint64_t v51 = sub_2E09F0();
      sub_EE748(&qword_3CADC0, (void (*)(uint64_t))&type metadata accessor for ListItemDecodingError);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104))(v52, enum case for ListItemDecodingError.invalidMAPIResource(_:), v51);
      sub_2E4CA0();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, enum case for DecodingError.dataCorrupted(_:), v48);
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v81 + 8))(v71, v70);
      int v34 = 0;
      int v35 = 0;
      uint64_t v36 = (uint64_t)v84;
      uint64_t v37 = v83;
      v38 = v99;
LABEL_23:
      uint64_t v39 = v82;
      goto LABEL_4;
    }
    v80 = v44;
    sub_65CF4(&v93, (uint64_t)v98);
    v45 = v99;
    sub_2E0660();
    sub_63BAC(&qword_3CADC8);
    LOBYTE(v87) = 1;
    sub_EC294(&qword_3CADD0, &qword_3CADC8, (void (*)(void))sub_EC258);
    v46 = v33;
    sub_2E4EC0();
    uint64_t v47 = v81;
    v71 = v46;
    if (*((void *)&v90 + 1) == 1)
    {
      sub_662B4((uint64_t)&v90, &qword_3CADE8);
      long long v93 = 0u;
      long long v94 = 0u;
      long long v95 = 0u;
      long long v96 = 0u;
      uint64_t v97 = 0;
    }
    else
    {
      sub_66444((uint64_t)&v90, (uint64_t)&v93, &qword_3CAD80);
      sub_662B4((uint64_t)&v90, &qword_3CADC8);
    }
    uint64_t v37 = v83;
    sub_66444((uint64_t)&v93, v40 + v45[8], &qword_3CAD80);
    uint64_t v53 = sub_63BAC(&qword_3CADF0);
    LOBYTE(v87) = 2;
    sub_EC294(&qword_3CADF8, &qword_3CADF0, (void (*)(void))sub_EC354);
    uint64_t v54 = (uint64_t)v78;
    sub_2E4EC0();
    uint64_t v83 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v54, 1, v53) == 1)
    {
      v55 = &qword_3CAD90;
      uint64_t v56 = v54;
    }
    else
    {
      uint64_t v57 = v77;
      sub_66444(v54, v77, &qword_3CAD98);
      sub_662B4(v54, &qword_3CADF0);
      uint64_t v58 = sub_2E0770();
      uint64_t v59 = *(void *)(v58 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58) != 1)
      {
        sub_2E0760();
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
        goto LABEL_21;
      }
      v55 = &qword_3CAD98;
      uint64_t v56 = v57;
    }
    sub_662B4(v56, v55);
    uint64_t v92 = 0;
    long long v91 = 0u;
    long long v90 = 0u;
LABEL_21:
    v38 = v99;
    sub_662B4(v40, &qword_3C8B78);
    uint64_t v89 = 0;
    long long v88 = 0u;
    long long v87 = 0u;
    sub_9F64C((uint64_t)&v90, (uint64_t)&v87);
    long long v60 = v88;
    *(_OWORD *)uint64_t v40 = v87;
    *(_OWORD *)(v40 + 16) = v60;
    *(void *)(v40 + 32) = v89;
    sub_662B4((uint64_t)&v90, &qword_3C8B80);
    sub_63BAC(&qword_3CAE08);
    LOBYTE(v87) = 3;
    sub_EC3F8();
    v61 = v71;
    uint64_t v62 = v83;
    sub_2E4EC0();
    if (!v62)
    {
      if (v90 == 3) {
        char v63 = 1;
      }
      else {
        char v63 = (v90 == 2) | v90;
      }
      *(unsigned char *)(v40 + v38[9]) = v63 & 1;
      sub_63BAC(&qword_3CAE28);
      uint64_t v64 = *(void *)(sub_2E41B0() - 8);
      unint64_t v65 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_2FEFE0;
      v67 = (void *)(v66 + v65);
      void *v67 = 0xD000000000000037;
      v67[1] = 0x8000000000317180;
      (*(void (**)(void))(v64 + 104))();
      sub_2E38E0();
      uint64_t v68 = (uint64_t)v75;
      sub_2E41A0();

      sub_662B4((uint64_t)&v93, &qword_3CAD80);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v98);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v71, v13);
      v73((char *)v68, 0, 1, v86);
      sub_9F708(v68, v37, &qword_3CAD88);
      sub_EC498(v40, v76);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v84);
      return sub_EC4FC(v40);
    }

    sub_662B4((uint64_t)&v93, &qword_3CAD80);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v98);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v61, v13);
    int v34 = 1;
    int v35 = 1;
    uint64_t v36 = (uint64_t)v84;
    goto LABEL_23;
  }
  int v34 = 0;
  int v35 = 0;
  uint64_t v36 = (uint64_t)v84;
  uint64_t v37 = v83;
  v38 = v99;
  uint64_t v39 = v82;
  uint64_t v40 = (uint64_t)v85;
LABEL_4:
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v36);
  sub_662B4(v40, &qword_3C8B78);
  sub_662B4(v39, &qword_3C9EE0);
  uint64_t result = sub_662B4(v37, &qword_3CAD88);
  if (v34)
  {
    uint64_t v42 = v40 + v38[7];
    uint64_t v43 = sub_2E0700();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  }
  if (v35) {
    return sub_662B4(v40 + v38[8], &qword_3CAD80);
  }
  return result;
}

uint64_t sub_EB650@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_EA804(a1, a2);
}

uint64_t sub_EB668()
{
  return sub_2E06B0();
}

uint64_t sub_EB690(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20202C(*a1, *a2);
}

Swift::Int sub_EB69C()
{
  return sub_2E51E0();
}

uint64_t sub_EB740()
{
  sub_2E44A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_EB7D0()
{
  return sub_2E51E0();
}

uint64_t sub_EB870@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_EE65C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_EB8A0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE600000000000000;
  unint64_t v5 = 0x6E6F73616572;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000014;
    unint64_t v4 = 0x8000000000314130;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656372756F736572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_EB900()
{
  unint64_t v1 = 0x6E6F73616572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656372756F736572;
  }
}

uint64_t sub_EB95C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_EE65C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_EB984(uint64_t a1)
{
  unint64_t v2 = sub_EE6F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EB9C0(uint64_t a1)
{
  unint64_t v2 = sub_EE6F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_EB9FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_63BAC(&qword_3CADA0);
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CAF00);
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_EE6F4();
  sub_2E5220();
  if (v2) {
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v29 = a1;
  uint64_t v11 = v39;
  sub_63BAC(&qword_3CE350);
  LOBYTE(v32) = 2;
  sub_C9368(&qword_3CAF10, &qword_3CE350);
  sub_2E4F10();
  uint64_t v12 = v9;
  uint64_t v13 = v34[0];
  unint64_t v14 = v34[1];
  LOBYTE(v34[0]) = 1;
  *(void *)&long long v28 = sub_2E4ED0();
  *((void *)&v28 + 1) = v15;
  LOBYTE(v34[0]) = 0;
  sub_EC1FC();
  sub_2E4F10();
  uint64_t v27 = 0;
  uint64_t v17 = (void *)sub_2E04E0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v4);
  sub_2DEFB0();
  if (!v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_662B4((uint64_t)&v32, &qword_3C8950);
    uint64_t v22 = sub_2E4CB0();
    swift_allocError();
    uint64_t v24 = v23;
    uint64_t v31 = sub_2E4E70();
    uint64_t v25 = sub_2E09F0();
    sub_EE748(&qword_3CADC0, (void (*)(uint64_t))&type metadata accessor for ListItemDecodingError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for ListItemDecodingError.invalidMAPIResource(_:), v25);
    sub_2E4CA0();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, enum case for DecodingError.dataCorrupted(_:), v22);
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v7);
    a1 = v29;
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  }
  sub_65CF4(&v32, (uint64_t)v34);
  long long v36 = v28;
  sub_66310((uint64_t)v34, (uint64_t)v37);

  if (v14) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!v14) {
    unint64_t v14 = 0xE000000000000000;
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v34);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
  *(void *)&long long v35 = v18;
  *((void *)&v35 + 1) = v14;
  long long v19 = v37[1];
  uint64_t v20 = v30;
  *(_OWORD *)(v30 + 32) = v37[0];
  *(_OWORD *)(v20 + 48) = v19;
  *(void *)(v20 + 64) = v38;
  long long v21 = v36;
  *(_OWORD *)uint64_t v20 = v35;
  *(_OWORD *)(v20 + 16) = v21;
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v29);
}

uint64_t sub_EBF4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_EB9FC(a1, a2);
}

uint64_t sub_EBF64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3CE080);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RecommendationItemComponentModel();
  sub_66444(v1 + *(int *)(v6 + 32), (uint64_t)v14, &qword_3CAD80);
  if (!v14[1])
  {
    uint64_t v9 = &qword_3CAD80;
    uint64_t v10 = (char *)v14;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_EC178((uint64_t)v14);
  sub_2DE540();
  uint64_t v7 = sub_2DE550();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    uint64_t v9 = &qword_3CE080;
    uint64_t v10 = v5;
LABEL_5:
    sub_662B4((uint64_t)v10, v9);
    uint64_t v11 = sub_2DE550();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

uint64_t type metadata accessor for RecommendationItemComponentModel()
{
  uint64_t result = qword_3CAE88;
  if (!qword_3CAE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_EC178(uint64_t a1)
{
  return a1;
}

unint64_t sub_EC1A8()
{
  unint64_t result = qword_3CADB0;
  if (!qword_3CADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CADB0);
  }
  return result;
}

unint64_t sub_EC1FC()
{
  unint64_t result = qword_3CADB8;
  if (!qword_3CADB8)
  {
    sub_70ECC(&qword_3CADA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CADB8);
  }
  return result;
}

uint64_t sub_EC258()
{
  return sub_EC294(&qword_3CADD8, &qword_3CAD80, (void (*)(void))sub_EC300);
}

uint64_t sub_EC294(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_EC300()
{
  unint64_t result = qword_3CADE0;
  if (!qword_3CADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CADE0);
  }
  return result;
}

unint64_t sub_EC354()
{
  unint64_t result = qword_3CAE00;
  if (!qword_3CAE00)
  {
    sub_70ECC(&qword_3CAD98);
    sub_EE748((unint64_t *)&qword_3C8678, (void (*)(uint64_t))&type metadata accessor for CodeAnyActionModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAE00);
  }
  return result;
}

unint64_t sub_EC3F8()
{
  unint64_t result = qword_3CAE10;
  if (!qword_3CAE10)
  {
    sub_70ECC(&qword_3CAE08);
    sub_C9368(&qword_3CAE18, &qword_3CAE20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAE10);
  }
  return result;
}

uint64_t sub_EC498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecommendationItemComponentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EC4FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecommendationItemComponentModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for RecommendationItemComponentModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xEC624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationItemComponentModel.CodingKeys()
{
  return &type metadata for RecommendationItemComponentModel.CodingKeys;
}

uint64_t destroy for RecommendationSeedItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 32);
}

uint64_t initializeWithCopy for RecommendationSeedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v5, v7);
  return a1;
}

void *assignWithCopy for RecommendationSeedItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_6FA20(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for RecommendationSeedItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RecommendationSeedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationSeedItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationSeedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationSeedItem()
{
  return &type metadata for RecommendationSeedItem;
}

uint64_t *sub_EC8E8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (uint64_t *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_2E3CC0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_63BAC(&qword_3C7498);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)v4 + v17;
    long long v19 = (char *)a2 + v17;
    uint64_t v20 = sub_2E41C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_63BAC(&qword_3CAD88);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = sub_2E0700();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = a3[8];
    long long v28 = (char *)v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    uint64_t v30 = *(void *)(v29 + 8);
    if (v30)
    {
      *(void *)long long v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = *(void *)(v29 + 24);
      *((void *)v28 + 2) = *(void *)(v29 + 16);
      *((void *)v28 + 3) = v31;
      long long v32 = v28 + 32;
      uint64_t v33 = v29 + 32;
      long long v34 = *(_OWORD *)(v29 + 56);
      *(_OWORD *)(v28 + 56) = v34;
      uint64_t v35 = v34;
      long long v36 = **(void (***)(char *, uint64_t, uint64_t))(v34 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v32, v33, v35);
    }
    else
    {
      long long v37 = *(_OWORD *)(v29 + 48);
      *((_OWORD *)v28 + 2) = *(_OWORD *)(v29 + 32);
      *((_OWORD *)v28 + 3) = v37;
      *((void *)v28 + 8) = *(void *)(v29 + 64);
      long long v38 = *(_OWORD *)(v29 + 16);
      *(_OWORD *)long long v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v38;
    }
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t sub_ECC98(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 24)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_2E3CC0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_2E41C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = sub_2E0700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[8];
  uint64_t result = *(void *)(v12 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v12 + 32);
  }
  return result;
}

uint64_t sub_ECE80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_2E3CC0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_63BAC(&qword_3C7498);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_2E41C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_63BAC(&qword_3CAD88);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_2E0700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(v27 + 8);
  if (v28)
  {
    *(void *)uint64_t v26 = *(void *)v27;
    *(void *)(v26 + 8) = v28;
    uint64_t v29 = *(void *)(v27 + 24);
    *(void *)(v26 + 16) = *(void *)(v27 + 16);
    *(void *)(v26 + 24) = v29;
    uint64_t v30 = v26 + 32;
    uint64_t v31 = v27 + 32;
    long long v32 = *(_OWORD *)(v27 + 56);
    *(_OWORD *)(v26 + 56) = v32;
    uint64_t v33 = v32;
    long long v34 = **(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v30, v31, v33);
  }
  else
  {
    long long v35 = *(_OWORD *)(v27 + 48);
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
    *(_OWORD *)(v26 + 48) = v35;
    *(void *)(v26 + 64) = *(void *)(v27 + 64);
    long long v36 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v36;
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_ED1E0(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_6FA20((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_2E3CC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_13:
    uint64_t v17 = sub_63BAC(&qword_3C7498);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_14:
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_2E41C0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
LABEL_19:
    uint64_t v26 = sub_63BAC(&qword_3CAD88);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_20:
  uint64_t v27 = a3[7];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t)a2 + v27;
  uint64_t v30 = sub_2E0700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t)a2 + v31;
  uint64_t v34 = *(void *)(a1 + v31 + 8);
  uint64_t v35 = *(void *)((char *)a2 + v31 + 8);
  if (v34)
  {
    if (v35)
    {
      *(void *)uint64_t v32 = *(void *)v33;
      *(void *)(v32 + 8) = *(void *)(v33 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v32 + 16) = *(void *)(v33 + 16);
      *(void *)(v32 + 24) = *(void *)(v33 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_6FA20((uint64_t *)(v32 + 32), (uint64_t *)(v33 + 32));
    }
    else
    {
      sub_EC178(v32);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      long long v40 = *(_OWORD *)(v33 + 32);
      long long v39 = *(_OWORD *)(v33 + 48);
      long long v41 = *(_OWORD *)(v33 + 16);
      *(void *)(v32 + 64) = *(void *)(v33 + 64);
      *(_OWORD *)(v32 + 32) = v40;
      *(_OWORD *)(v32 + 48) = v39;
      *(_OWORD *)(v32 + 16) = v41;
    }
  }
  else if (v35)
  {
    *(void *)uint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = *(void *)(v33 + 8);
    *(void *)(v32 + 16) = *(void *)(v33 + 16);
    *(void *)(v32 + 24) = *(void *)(v33 + 24);
    uint64_t v36 = v33 + 32;
    uint64_t v37 = *(void *)(v33 + 56);
    *(void *)(v32 + 56) = v37;
    *(void *)(v32 + 64) = *(void *)(v33 + 64);
    long long v38 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v32 + 32, v36, v37);
  }
  else
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    long long v42 = *(_OWORD *)(v33 + 16);
    long long v43 = *(_OWORD *)(v33 + 32);
    long long v44 = *(_OWORD *)(v33 + 48);
    *(void *)(v32 + 64) = *(void *)(v33 + 64);
    *(_OWORD *)(v32 + 32) = v43;
    *(_OWORD *)(v32 + 48) = v44;
    *(_OWORD *)(v32 + 16) = v42;
  }
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_ED6D0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_2E3CC0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C7498);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_2E41C0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_63BAC(&qword_3CAD88);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_2E0700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  long long v27 = *(_OWORD *)(v26 + 48);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_OWORD *)(v25 + 48) = v27;
  *(void *)(v25 + 64) = *(void *)(v26 + 64);
  long long v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v28;
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  return a1;
}

uint64_t sub_ED95C(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_2E3CC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_8:
    uint64_t v15 = sub_63BAC(&qword_3C7498);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_9:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_2E41C0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_14:
    uint64_t v24 = sub_63BAC(&qword_3CAD88);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_15:
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_2E0700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = a3[8];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  if (!*(void *)(a1 + v29 + 8))
  {
LABEL_19:
    long long v35 = *(_OWORD *)(v31 + 48);
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    *(_OWORD *)(v30 + 48) = v35;
    *(void *)(v30 + 64) = *(void *)(v31 + 64);
    long long v36 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v36;
    goto LABEL_20;
  }
  uint64_t v32 = *(void *)(v31 + 8);
  if (!v32)
  {
    sub_EC178(v30);
    goto LABEL_19;
  }
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v31 + 24);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(void *)(v30 + 24) = v33;
  swift_bridgeObjectRelease();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v30 + 32);
  long long v34 = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v30 + 48) = v34;
  *(void *)(v30 + 64) = *(void *)(v31 + 64);
LABEL_20:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_EDD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EDD20);
}

uint64_t sub_EDD20(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = sub_63BAC(&qword_3C9EE0);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_63BAC(&qword_3CAD88);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_2E0700();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[7];

  return v16(v18, a2, v17);
}

uint64_t sub_EDEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EDEC0);
}

uint64_t sub_EDEC0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
    return result;
  }
  uint64_t v8 = sub_63BAC(&qword_3C9EE0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_63BAC(&qword_3CAD88);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_2E0700();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void sub_EE040()
{
  sub_EE19C(319, (unint64_t *)&qword_3C8AD0, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
  if (v0 <= 0x3F)
  {
    sub_EE19C(319, (unint64_t *)&unk_3CAE98, (void (*)(uint64_t))&type metadata accessor for Models.Menu);
    if (v1 <= 0x3F)
    {
      sub_2E0700();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_EE19C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2E4B10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_EE1F0()
{
  return sub_EE748(&qword_3CAED8, (void (*)(uint64_t))type metadata accessor for RecommendationItemComponentModel);
}

uint64_t sub_EE238()
{
  return sub_EE748(&qword_3C8088, (void (*)(uint64_t))type metadata accessor for RecommendationItemComponentModel);
}

unint64_t sub_EE284()
{
  unint64_t result = qword_3CAEE0;
  if (!qword_3CAEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAEE0);
  }
  return result;
}

unint64_t sub_EE2DC()
{
  unint64_t result = qword_3CAEE8;
  if (!qword_3CAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAEE8);
  }
  return result;
}

unint64_t sub_EE334()
{
  unint64_t result = qword_3CAEF0;
  if (!qword_3CAEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAEF0);
  }
  return result;
}

uint64_t sub_EE388()
{
  return sub_EE748(&qword_3CAEF8, (void (*)(uint64_t))type metadata accessor for RecommendationItemComponentModel);
}

uint64_t sub_EE3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3CE080);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2DE550();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20[-1] - v11;
  uint64_t v13 = type metadata accessor for RecommendationItemComponentModel();
  sub_66444(v1 + *(int *)(v13 + 32), (uint64_t)v20, &qword_3CAD80);
  if (!v20[1])
  {
    uint64_t v14 = &qword_3CAD80;
    uint64_t v15 = (char *)v20;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_EC178((uint64_t)v20);
  sub_2DE540();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t v14 = &qword_3CE080;
    uint64_t v15 = v5;
LABEL_5:
    sub_662B4((uint64_t)v15, v14);
    uint64_t v16 = sub_2DE440();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_2DE430();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  uint64_t v18 = sub_2DE440();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 0, 1, v18);
}

uint64_t sub_EE65C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_390768;
  v6._object = a2;
  unint64_t v4 = sub_2E4E50(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_EE6A8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_3908C0;
  v6._object = a2;
  unint64_t v4 = sub_2E4E50(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_EE6F4()
{
  unint64_t result = qword_3CAF08;
  if (!qword_3CAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAF08);
  }
  return result;
}

uint64_t sub_EE748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecommendationSeedItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xEE85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationSeedItem.CodingKeys()
{
  return &type metadata for RecommendationSeedItem.CodingKeys;
}

unint64_t sub_EE898()
{
  unint64_t result = qword_3CAF20;
  if (!qword_3CAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAF20);
  }
  return result;
}

unint64_t sub_EE8F0()
{
  unint64_t result = qword_3CAF28;
  if (!qword_3CAF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAF28);
  }
  return result;
}

unint64_t sub_EE948()
{
  unint64_t result = qword_3CAF30;
  if (!qword_3CAF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAF30);
  }
  return result;
}

uint64_t sub_EE99C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18[-1] - v10;
  uint64_t v12 = (int *)type metadata accessor for PageRootView();
  uint64_t v13 = a3 + v12[7];
  type metadata accessor for HostProxy(0);
  sub_FC65C(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  *(void *)uint64_t v13 = sub_2E1620();
  *(unsigned char *)(v13 + 8) = v14 & 1;
  uint64_t v15 = a3 + v12[8];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  sub_EEB74(a1, a2, (uint64_t)v11);
  sub_66310((uint64_t)a1, (uint64_t)v18);
  sub_66444((uint64_t)v11, (uint64_t)v8, &qword_3C97F0);
  PageContent.init(pageIntent:initialPage:)((uint64_t)v18, (uint64_t)v8, a3);
  *(void *)(a3 + v12[5]) = a2;
  sub_2E0860();
  swift_retain();
  sub_2E3A90();
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  uint64_t result = sub_662B4((uint64_t)v11, &qword_3C97F0);
  *(void *)(a3 + v12[6]) = v18[0];
  return result;
}

uint64_t sub_EEB74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v5 = sub_63BAC(&qword_3CB168);
  __chkstk_darwin(v5 - 8);
  long long v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2E3DF0();
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v41 = (char *)&v34 - v10;
  uint64_t v11 = type metadata accessor for Page();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v44 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2E11A0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_2E3790();
  sub_63BAC(&qword_3CB170);
  sub_63BAC(&qword_3CB178);
  if (!swift_dynamicCast()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v45, 1, 1, v11);
  }
  uint64_t v38 = v7;
  sub_65CF4(v47, (uint64_t)v50);
  sub_2E3A90();
  if (qword_3C6628 != -1) {
    swift_once();
  }
  uint64_t v37 = a2;
  uint64_t v18 = sub_2DF850();
  sub_58BA0(v18, (uint64_t)qword_3CD330);
  sub_66310((uint64_t)v50, (uint64_t)v48);
  uint64_t v19 = sub_2DF830();
  os_log_type_t v20 = sub_2E4910();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v36 = v12;
  uint64_t v35 = v15;
  uint64_t v34 = v14;
  long long v39 = v17;
  if (v21)
  {
    int v22 = (uint8_t *)swift_slowAlloc();
    *(void *)&v47[0] = swift_slowAlloc();
    *(_DWORD *)int v22 = 136315138;
    sub_71044(v48, v49);
    uint64_t v23 = sub_2E37A0();
    uint64_t v46 = sub_5F150(v23, v24, (uint64_t *)v47);
    uint64_t v17 = v39;
    sub_2E4B40();
    swift_bridgeObjectRelease();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
    _os_log_impl(&dword_0, v19, v20, "Trying to synchronously resolve page intent %s for initial page rendering", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
  }

  sub_71044(v50, v50[3]);
  uint64_t v26 = (uint64_t)v44;
  sub_2E1170();
  sub_66310((uint64_t)v50, (uint64_t)v48);
  uint64_t v27 = sub_2DF830();
  os_log_type_t v28 = sub_2E4910();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(void *)&v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    sub_71044(v48, v49);
    uint64_t v30 = sub_2E37A0();
    uint64_t v46 = sub_5F150(v30, v31, (uint64_t *)v47);
    sub_2E4B40();
    swift_bridgeObjectRelease();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
    _os_log_impl(&dword_0, v27, v28, "Successfully resolved page intent %s for initial page rendering", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = (uint64_t)v44;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v34);
  uint64_t v32 = v36;
  uint64_t v33 = v45;
  sub_FC5F4(v26, v45, (uint64_t (*)(void))type metadata accessor for Page);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v11);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v50);
}

uint64_t sub_EF740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v70 = sub_63BAC(&qword_3CB1A8);
  uint64_t v59 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v58 = (uint64_t)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_63BAC(&qword_3CB000);
  __chkstk_darwin(v64);
  uint64_t v57 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_63BAC(&qword_3CB1B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v56 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_63BAC(&qword_3CB1B8);
  __chkstk_darwin(v66);
  uint64_t v68 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_63BAC(&qword_3CB1C0);
  __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_63BAC(&qword_3CAFC8);
  __chkstk_darwin(v67);
  unint64_t v65 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2E4780();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PageRootView();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v60 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = sub_63BAC(&qword_3CAFE8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_63BAC(&qword_3CAFD8);
  uint64_t v18 = __chkstk_darwin(v61);
  os_log_type_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v55 = (uint64_t)&v52 - v21;
  uint64_t v22 = type metadata accessor for PageContent.ContentType(0);
  __chkstk_darwin(v22);
  unint64_t v24 = (uint64_t *)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  PageContent.contentType.getter(v24);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v26 = *v24;
      sub_FD5A8(v1, (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageRootView);
      unint64_t v27 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v28 = swift_allocObject();
      sub_FC5F4((uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, (uint64_t (*)(void))type metadata accessor for PageRootView);
      uint64_t v29 = v58;
      sub_F0D5C(v26, (uint64_t)sub_FC6B0, v28, v58);
      swift_release();
      uint64_t v30 = v59;
      uint64_t v31 = v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v68, v29, v70);
      swift_storeEnumTagMultiPayload();
      sub_F2D00();
      uint64_t v32 = sub_70ECC(&qword_3CB058);
      unint64_t v33 = sub_F3180();
      uint64_t v71 = v32;
      unint64_t v72 = v33;
      swift_getOpaqueTypeConformance2();
      sub_2E2330();
      swift_errorRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    }
    sub_2DF450();
    sub_FD5A8(v1, (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageRootView);
    unint64_t v42 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    uint64_t v43 = swift_allocObject();
    sub_FC5F4((uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42, (uint64_t (*)(void))type metadata accessor for PageRootView);
    sub_2E4750();
    long long v44 = &v20[*(int *)(v61 + 36)];
    uint64_t v45 = sub_2E18A0();
    uint64_t v47 = v53;
    uint64_t v46 = v54;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v44[*(int *)(v45 + 20)], v11, v54);
    *(void *)long long v44 = &unk_3CB1D0;
    *((void *)v44 + 1) = v43;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v14);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v46);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v35 = &qword_3CAFD8;
    uint64_t v48 = v55;
    sub_71900((uint64_t)v20, v55, &qword_3CAFD8);
    sub_66444(v48, v63, &qword_3CAFD8);
    swift_storeEnumTagMultiPayload();
    sub_F2D7C();
    sub_F2E4C();
    uint64_t v49 = (uint64_t)v65;
    sub_2E2330();
    sub_66444(v49, v68, &qword_3CAFC8);
    swift_storeEnumTagMultiPayload();
    sub_F2D00();
    uint64_t v50 = sub_70ECC(&qword_3CB058);
    unint64_t v51 = sub_F3180();
    uint64_t v71 = v50;
    unint64_t v72 = v51;
    swift_getOpaqueTypeConformance2();
    sub_2E2330();
    sub_662B4(v49, &qword_3CAFC8);
    uint64_t v41 = v48;
  }
  else
  {
    uint64_t v35 = &qword_3CB1B0;
    uint64_t v36 = v56;
    sub_71900((uint64_t)v24, v56, &qword_3CB1B0);
    uint64_t v37 = v57;
    sub_F0144(v36, v57);
    sub_66444(v37, v63, &qword_3CB000);
    swift_storeEnumTagMultiPayload();
    sub_F2D7C();
    sub_F2E4C();
    uint64_t v38 = (uint64_t)v65;
    sub_2E2330();
    sub_66444(v38, v68, &qword_3CAFC8);
    swift_storeEnumTagMultiPayload();
    sub_F2D00();
    uint64_t v39 = sub_70ECC(&qword_3CB058);
    unint64_t v40 = sub_F3180();
    uint64_t v71 = v39;
    unint64_t v72 = v40;
    swift_getOpaqueTypeConformance2();
    sub_2E2330();
    sub_662B4(v38, &qword_3CAFC8);
    sub_662B4(v37, &qword_3CB000);
    uint64_t v41 = v36;
  }
  return sub_662B4(v41, v35);
}

uint64_t sub_F007C(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for HostProxy.Event(0);
  void v1[4] = swift_task_alloc();
  sub_2E4740();
  v1[5] = sub_2E4730();
  uint64_t v3 = sub_2E46E0();
  return _swift_task_switch(sub_FE108, v3, v2);
}

uint64_t sub_F0144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v3 = sub_2E2470();
  uint64_t v100 = *(void *)(v3 - 8);
  uint64_t v101 = v3;
  __chkstk_darwin(v3);
  v99 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_2E4780();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PageRootView();
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v87 = *(void *)(v88 + 64);
  __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3CB1D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CB1B0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PageView();
  __chkstk_darwin(v14 - 8);
  uint64_t v79 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_63BAC(&qword_3CB028);
  __chkstk_darwin(v80);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_63BAC(&qword_3CB1E0);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  v104 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_63BAC(&qword_3CB018);
  __chkstk_darwin(v81);
  uint64_t v82 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_63BAC(&qword_3CB1E8);
  uint64_t v89 = *(void *)(v20 - 8);
  uint64_t v90 = v20;
  __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_63BAC(&qword_3CB008);
  __chkstk_darwin(v94);
  long long v95 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_63BAC(&qword_3CB1F0);
  uint64_t v97 = *(void *)(v23 - 8);
  uint64_t v98 = v23;
  __chkstk_darwin(v23);
  long long v96 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Page();
  uint64_t v77 = *(void *)(v25 - 8);
  uint64_t v26 = *(void *)(v77 + 64);
  uint64_t v78 = v25 - 8;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v76 = (uint64_t)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v75 - v28);
  sub_2E3280();
  uint64_t v30 = a1;
  uint64_t v31 = (uint64_t)v13;
  sub_66444(v30, (uint64_t)v13, &qword_3CB1B0);
  type metadata accessor for PageContent(0);
  uint64_t v32 = v103;
  sub_63BAC(&qword_3CB0A0);
  sub_2E3160();
  uint64_t v75 = v6;
  uint64_t v33 = *(void *)(v32 + *(int *)(v6 + 20));
  swift_retain();
  uint64_t v34 = v79;
  sub_226218(v31, (uint64_t)v10, v33, v79);
  uint64_t v35 = sub_2DE7E0();
  uint64_t v37 = v36;
  sub_FD5A8(v34, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PageView);
  uint64_t v38 = (uint64_t *)&v17[*(int *)(v80 + 36)];
  uint64_t *v38 = v35;
  v38[1] = v37;
  v38[2] = v33;
  swift_retain();
  sub_FD610(v34, (uint64_t (*)(void))type metadata accessor for PageView);
  sub_F3080();
  sub_2E2C10();
  sub_662B4((uint64_t)v17, &qword_3CB028);
  uint64_t v39 = v29[1];
  uint64_t v80 = *v29;
  uint64_t v40 = v32;
  uint64_t v41 = v85;
  sub_FD5A8(v40, v85, (uint64_t (*)(void))type metadata accessor for PageRootView);
  uint64_t v42 = v76;
  sub_FD5A8((uint64_t)v29, v76, (uint64_t (*)(void))type metadata accessor for Page);
  unint64_t v43 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  unint64_t v44 = (v87 + *(unsigned __int8 *)(v77 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  uint64_t v45 = swift_allocObject();
  sub_FC5F4(v41, v45 + v43, (uint64_t (*)(void))type metadata accessor for PageRootView);
  sub_FC5F4(v42, v45 + v44, (uint64_t (*)(void))type metadata accessor for Page);
  swift_bridgeObjectRetain();
  uint64_t v46 = v92;
  sub_2E4750();
  uint64_t v47 = (uint64_t)v82;
  uint64_t v48 = &v82[*(int *)(v81 + 36)];
  uint64_t v49 = sub_63BAC(&qword_3CB048);
  uint64_t v50 = v91;
  uint64_t v51 = v93;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(&v48[*(int *)(v49 + 36)], v46, v93);
  uint64_t v52 = (uint64_t *)&v48[*(int *)(v49 + 40)];
  *uint64_t v52 = v80;
  v52[1] = v39;
  *(void *)uint64_t v48 = &unk_3CB200;
  *((void *)v48 + 1) = v45;
  uint64_t v53 = v84;
  uint64_t v54 = v104;
  uint64_t v55 = v86;
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v47, v104, v86);
  uint64_t v56 = v50;
  uint64_t v57 = v83;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v51);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  sub_F2FAC();
  sub_2E2B20();
  sub_662B4(v47, &qword_3CB018);
  uint64_t v58 = sub_2E1A50();
  uint64_t v59 = *(int *)(v78 + 40);
  if (*((unsigned char *)v29 + v59) == 1) {
    char v60 = sub_2E2630();
  }
  else {
    char v60 = sub_2E2660();
  }
  char v61 = v60;
  uint64_t v63 = v89;
  uint64_t v62 = v90;
  uint64_t v64 = (uint64_t)v95;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v95, v57, v90);
  uint64_t v65 = v64 + *(int *)(v94 + 36);
  *(void *)uint64_t v65 = v58;
  *(unsigned char *)(v65 + 8) = v61;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v62);
  sub_2E2630();
  if (*((unsigned char *)v29 + v59) == 1)
  {
    char v66 = *(unsigned char *)(v103 + *(int *)(v75 + 28) + 8);
    uint64_t v67 = swift_retain();
    uint64_t v68 = sub_86BC8(v67, v66);
    swift_release();
    swift_getKeyPath();
    uint64_t v105 = v68;
    sub_FC65C(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
    sub_2DE010();
    swift_release();
    swift_beginAccess();
    swift_release();
  }
  uint64_t v69 = v99;
  sub_2E2460();
  sub_F2EFC();
  uint64_t v70 = v96;
  sub_2E2D70();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v69, v101);
  sub_662B4(v64, &qword_3CB008);
  uint64_t v72 = v97;
  uint64_t v71 = v98;
  uint64_t v73 = v102;
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 16))(v102, v70, v98);
  *(void *)(v73 + *(int *)(sub_63BAC(&qword_3CB000) + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v70, v71);
  return sub_FD610((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for Page);
}

uint64_t sub_F0C8C()
{
  uint64_t v0 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_63BAC(&qword_3CAF50);
  sub_2DF480(1);
  sub_12DA68();
  return sub_2E3150();
}

uint64_t sub_F0D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v41 = a2;
  uint64_t v46 = a4;
  uint64_t v6 = sub_2E4780();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  unint64_t v43 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageRootView();
  uint64_t v9 = v8 - 8;
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v42 + 64);
  __chkstk_darwin(v8);
  uint64_t v40 = (uint64_t)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PageErrorView();
  uint64_t v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_63BAC(&qword_3CB070);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_63BAC(&qword_3CB058);
  __chkstk_darwin(v39);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v4 + *(int *)(v9 + 28));
  uint64_t v22 = (uint64_t *)&v14[v12[10]];
  *uint64_t v22 = swift_getKeyPath();
  sub_63BAC(&qword_3C8180);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)&v14[v12[11]];
  *uint64_t v23 = swift_getKeyPath();
  sub_63BAC(&qword_3C82B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = &v14[v12[12]];
  char v47 = 0;
  swift_errorRetain();
  uint64_t v25 = v38;
  swift_retain();
  swift_retain();
  sub_2E3130();
  uint64_t v26 = v49;
  char *v24 = v48;
  *((void *)v24 + 1) = v26;
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 2) = v41;
  *((void *)v14 + 3) = v25;
  *((void *)v14 + 4) = v21;
  swift_errorRetain();
  v14[8] = sub_19672C(a1);
  sub_FD5A8((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v27 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v27 = 0x676150726F727245;
  *((void *)v27 + 1) = 0xE900000000000065;
  *((void *)v27 + 2) = v21;
  swift_retain();
  sub_FD610((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v28 = v40;
  sub_FD5A8(v37[1], v40, (uint64_t (*)(void))type metadata accessor for PageRootView);
  unint64_t v29 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v30 = swift_allocObject();
  sub_FC5F4(v28, v30 + v29, (uint64_t (*)(void))type metadata accessor for PageRootView);
  uint64_t v31 = v43;
  sub_2E4750();
  uint64_t v32 = &v20[*(int *)(v39 + 36)];
  uint64_t v33 = sub_2E18A0();
  uint64_t v35 = v44;
  uint64_t v34 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(&v32[*(int *)(v33 + 20)], v31, v45);
  *(void *)uint64_t v32 = &unk_3CB210;
  *((void *)v32 + 1) = v30;
  sub_66444((uint64_t)v18, (uint64_t)v20, &qword_3CB070);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
  sub_662B4((uint64_t)v18, &qword_3CB070);
  sub_F3180();
  sub_2E2C10();
  return sub_662B4((uint64_t)v20, &qword_3CB058);
}

uint64_t PageRootView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v108 = a1;
  uint64_t v2 = sub_63BAC(&qword_3CAF38);
  __chkstk_darwin(v2 - 8);
  v107 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_63BAC(&qword_3CAF40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v103 = v4;
  uint64_t v104 = v5;
  __chkstk_darwin(v4);
  uint64_t v102 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CAF48);
  uint64_t v105 = *(void *)(v7 - 8);
  uint64_t v106 = v7;
  __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageRootView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v111 = v9 - 8;
  uint64_t v100 = v10;
  uint64_t v99 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v98 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (uint64_t (*)(void))sub_2DE6C0();
  uint64_t v92 = *((void *)v94 - 1);
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_63BAC(&qword_3CAF50);
  uint64_t v13 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PageContent.PageInfo(0) - 8;
  uint64_t v82 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_63BAC(&qword_3C8298);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_63BAC(&qword_3CAF58);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_63BAC(&qword_3CAF60);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_63BAC(&qword_3CAF68);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_63BAC(&qword_3CAF70);
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_63BAC(&qword_3CAF78);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_63BAC(&qword_3CAF80) - 8;
  __chkstk_darwin(v87);
  uint64_t v110 = (uint64_t)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_63BAC(&qword_3CAF88);
  __chkstk_darwin(v93);
  uint64_t v90 = (uint64_t)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_63BAC(&qword_3CAF90);
  uint64_t v96 = *(void *)(v35 - 8);
  uint64_t v97 = v35;
  __chkstk_darwin(v35);
  long long v95 = (char *)&v80 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_EF740((uint64_t)v24);
  sub_F1F38((uint64_t)v27);
  sub_662B4((uint64_t)v24, &qword_3CAF58);
  uint64_t v109 = v1;
  sub_F23D0((uint64_t)v30);
  sub_662B4((uint64_t)v27, &qword_3CAF60);
  uint64_t KeyPath = swift_getKeyPath();
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  uint64_t v37 = &v18[*(int *)(v16 + 40)];
  uint64_t v38 = v86;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v37, v86);
  sub_FD610((uint64_t)v18, type metadata accessor for PageContent.PageInfo);
  sub_2DF470();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  uint64_t v39 = sub_2E0810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v21, 0, 1, v39);
  uint64_t v40 = (uint64_t)v83;
  uint64_t v41 = (uint64_t *)&v83[*(int *)(v84 + 36)];
  uint64_t v42 = sub_63BAC(&qword_3CAF98);
  sub_66444((uint64_t)v21, (uint64_t)v41 + *(int *)(v42 + 28), &qword_3C8298);
  *uint64_t v41 = KeyPath;
  sub_66444((uint64_t)v30, v40, &qword_3CAF68);
  sub_662B4((uint64_t)v21, &qword_3C8298);
  sub_662B4((uint64_t)v30, &qword_3CAF68);
  uint64_t v43 = v109;
  sub_2E3140();
  LODWORD(v27) = v18[*(int *)(v82 + 36)];
  sub_FD610((uint64_t)v18, type metadata accessor for PageContent.PageInfo);
  uint64_t v44 = v92;
  uint64_t v45 = (unsigned int *)&enum case for HostingControllerVisibilityStateManager.State.hidden(_:);
  if (!v27) {
    uint64_t v45 = (unsigned int *)&enum case for HostingControllerVisibilityStateManager.State.visible(_:);
  }
  uint64_t v46 = v91;
  char v47 = v94;
  (*(void (**)(char *, void, uint64_t (*)(void)))(v92 + 104))(v91, *v45, v94);
  sub_F2A34();
  char v48 = v85;
  sub_2E2C30();
  (*(void (**)(char *, uint64_t (*)(void)))(v44 + 8))(v46, v47);
  sub_662B4(v40, &qword_3CAF70);
  char v49 = *(unsigned char *)(v43 + *(int *)(v111 + 36) + 8);
  uint64_t v50 = swift_retain();
  uint64_t v51 = sub_86BC8(v50, v49);
  swift_release();
  uint64_t v112 = *(void *)(v51 + 16);
  sub_63BAC(&qword_3C7A88);
  sub_71AA4(&qword_3C7A90, &qword_3C7A88);
  uint64_t v52 = sub_2E14E0();
  swift_release();
  uint64_t v94 = (uint64_t (*)(void))type metadata accessor for PageRootView;
  uint64_t v53 = v98;
  sub_FD5A8(v43, v98, (uint64_t (*)(void))type metadata accessor for PageRootView);
  unint64_t v54 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v100 = v54 + v99;
  uint64_t v55 = swift_allocObject();
  sub_FC5F4(v53, v55 + v54, (uint64_t (*)(void))type metadata accessor for PageRootView);
  uint64_t v56 = v88;
  uint64_t v57 = v110;
  uint64_t v58 = v48;
  uint64_t v59 = v48;
  uint64_t v60 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v110, v59, v89);
  uint64_t v61 = v87;
  *(void *)(v57 + *(int *)(v87 + 60)) = v52;
  uint64_t v62 = (uint64_t (**)(uint64_t))(v57 + *(int *)(v61 + 64));
  *uint64_t v62 = sub_F41A0;
  v62[1] = (uint64_t (*)(uint64_t))v55;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v60);
  uint64_t v63 = v109;
  uint64_t v64 = v102;
  sub_2E0840();
  sub_71AA4(&qword_3CB0A8, &qword_3CAF40);
  uint64_t v65 = v101;
  uint64_t v66 = v103;
  sub_2E1520();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v66);
  sub_FD5A8(v63, v53, v94);
  uint64_t v67 = swift_allocObject();
  sub_FC5F4(v53, v67 + v54, (uint64_t (*)(void))type metadata accessor for PageRootView);
  uint64_t v68 = v110;
  uint64_t v69 = v90;
  sub_66444(v110, v90, &qword_3CAF80);
  uint64_t v70 = v93;
  uint64_t v72 = v105;
  uint64_t v71 = v106;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v69 + *(int *)(v93 + 52), v65, v106);
  uint64_t v73 = (uint64_t (**)())(v69 + *(int *)(v70 + 56));
  *uint64_t v73 = sub_F4214;
  v73[1] = (uint64_t (*)())v67;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v65, v71);
  sub_662B4(v68, &qword_3CAF80);
  uint64_t v74 = enum case for PresentationSource.stack(_:);
  uint64_t v75 = sub_2DF650();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = (uint64_t)v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 104))(v107, v74, v75);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0, 1, v75);
  sub_71AA4(&qword_3CB0B0, &qword_3CAF88);
  uint64_t v78 = v95;
  sub_2E2930();
  sub_662B4(v77, &qword_3CAF38);
  sub_662B4(v69, &qword_3CAF88);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v96 + 32))(v108, v78, v97);
}

uint64_t type metadata accessor for PageRootView()
{
  uint64_t result = qword_3CB120;
  if (!qword_3CB120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_F1F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_63BAC(&qword_3CB080);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  __chkstk_darwin(v1);
  uint64_t v27 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2E3230();
  uint64_t v4 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CB198);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_63BAC(&qword_3CB1A0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_66310((uint64_t)v18, (uint64_t)v31);
  sub_FD610((uint64_t)v18, type metadata accessor for PageContent.PageInfo);
  sub_2E3160();
  swift_getKeyPath();
  sub_2E32A0();
  swift_release();
  sub_662B4((uint64_t)v9, &qword_3CB198);
  sub_2E3220();
  sub_2E3490();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  sub_2E32D0();
  swift_release();
  sub_662B4((uint64_t)v13, &qword_3CB1A0);
  uint64_t v19 = sub_71044(v31, v31[3]);
  __chkstk_darwin(v19);
  (*(void (**)(char *))(v21 + 16))((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Page();
  uint64_t v22 = v27;
  sub_2E39A0();
  sub_63BAC(&qword_3CAF58);
  sub_F2C48();
  sub_71AA4(&qword_3CB088, &qword_3CB080);
  uint64_t v23 = v28;
  sub_2E29D0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
  sub_662B4((uint64_t)v15, &qword_3CB1A0);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v31);
}

uint64_t sub_F23D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v47 = sub_63BAC(&qword_3CAF60);
  __chkstk_darwin(v47);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_63BAC(&qword_3CB188);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2E3B20();
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_63BAC(&qword_3CB190);
  uint64_t v10 = *(void *)(v45 - 8);
  uint64_t v11 = __chkstk_darwin(v45);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  sub_2E3A90();
  if (v48 == 1)
  {
    uint64_t v16 = sub_2E1320();
    uint64_t v40 = v17;
    uint64_t v41 = v16;
    sub_2E3A90();
    unint64_t v18 = sub_F2C48();
    uint64_t v43 = v6;
    unint64_t v19 = v18;
    uint64_t v20 = sub_70ECC(&qword_3CAF58);
    uint64_t v42 = v20;
    uint64_t v21 = sub_70ECC(&qword_3CB080);
    uint64_t v39 = v1;
    uint64_t v22 = v21;
    uint64_t v23 = sub_71AA4(&qword_3CB088, &qword_3CB080);
    uint64_t v48 = v20;
    uint64_t v49 = v22;
    unint64_t v50 = v19;
    uint64_t v51 = v23;
    unint64_t v38 = v19;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v25 = sub_FC65C((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
    uint64_t v37 = v4;
    uint64_t v26 = v25;
    sub_2E1A30();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
    uint64_t v27 = v45;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v45);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v15, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = sub_70ECC(&qword_3CAFB0);
    uint64_t v48 = v42;
    uint64_t v49 = v28;
    unint64_t v50 = v38;
    uint64_t v51 = OpaqueTypeConformance2;
    uint64_t v52 = v26;
    swift_getOpaqueTypeConformance2();
    sub_F32D8();
    sub_2E2330();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v27);
  }
  else
  {
    sub_66444(v1, (uint64_t)v3, &qword_3CAF60);
    sub_66444((uint64_t)v3, (uint64_t)v6, &qword_3CAF60);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = sub_70ECC(&qword_3CAF58);
    uint64_t v31 = sub_70ECC(&qword_3CAFB0);
    unint64_t v32 = sub_F2C48();
    uint64_t v33 = sub_70ECC(&qword_3CB080);
    uint64_t v34 = sub_71AA4(&qword_3CB088, &qword_3CB080);
    uint64_t v48 = v30;
    uint64_t v49 = v33;
    unint64_t v50 = v32;
    uint64_t v51 = v34;
    uint64_t v35 = swift_getOpaqueTypeConformance2();
    uint64_t v36 = sub_FC65C((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
    uint64_t v48 = v30;
    uint64_t v49 = v31;
    unint64_t v50 = v32;
    uint64_t v51 = v35;
    uint64_t v52 = v36;
    swift_getOpaqueTypeConformance2();
    sub_F32D8();
    sub_2E2330();
    return sub_662B4((uint64_t)v3, &qword_3CAF60);
  }
}

uint64_t sub_F2954()
{
  return sub_2E1CA0();
}

uint64_t sub_F2978(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C8298);
  __chkstk_darwin(v2 - 8);
  sub_66444(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_3C8298);
  return sub_2E1CB0();
}

uint64_t sub_F2A0C()
{
  return sub_2E1CA0();
}

unint64_t sub_F2A34()
{
  unint64_t result = qword_3CAFA0;
  if (!qword_3CAFA0)
  {
    sub_70ECC(&qword_3CAF70);
    sub_F2AD4();
    sub_71AA4(&qword_3CB098, &qword_3CAF98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFA0);
  }
  return result;
}

unint64_t sub_F2AD4()
{
  unint64_t result = qword_3CAFA8;
  if (!qword_3CAFA8)
  {
    sub_70ECC(&qword_3CAF68);
    sub_70ECC(&qword_3CAF58);
    sub_70ECC(&qword_3CAFB0);
    sub_F2C48();
    sub_70ECC(&qword_3CB080);
    sub_71AA4(&qword_3CB088, &qword_3CB080);
    swift_getOpaqueTypeConformance2();
    sub_FC65C((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
    swift_getOpaqueTypeConformance2();
    sub_F32D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFA8);
  }
  return result;
}

unint64_t sub_F2C48()
{
  unint64_t result = qword_3CAFB8;
  if (!qword_3CAFB8)
  {
    sub_70ECC(&qword_3CAF58);
    sub_F2D00();
    sub_70ECC(&qword_3CB058);
    sub_F3180();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFB8);
  }
  return result;
}

unint64_t sub_F2D00()
{
  unint64_t result = qword_3CAFC0;
  if (!qword_3CAFC0)
  {
    sub_70ECC(&qword_3CAFC8);
    sub_F2D7C();
    sub_F2E4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFC0);
  }
  return result;
}

unint64_t sub_F2D7C()
{
  unint64_t result = qword_3CAFD0;
  if (!qword_3CAFD0)
  {
    sub_70ECC(&qword_3CAFD8);
    sub_71AA4(&qword_3CAFE0, &qword_3CAFE8);
    sub_FC65C(&qword_3CAFF0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFD0);
  }
  return result;
}

unint64_t sub_F2E4C()
{
  unint64_t result = qword_3CAFF8;
  if (!qword_3CAFF8)
  {
    sub_70ECC(&qword_3CB000);
    sub_70ECC(&qword_3CB008);
    sub_F2EFC();
    swift_getOpaqueTypeConformance2();
    sub_F312C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CAFF8);
  }
  return result;
}

unint64_t sub_F2EFC()
{
  unint64_t result = qword_3CB010;
  if (!qword_3CB010)
  {
    sub_70ECC(&qword_3CB008);
    sub_70ECC(&qword_3CB018);
    sub_F2FAC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB010);
  }
  return result;
}

unint64_t sub_F2FAC()
{
  unint64_t result = qword_3CB020;
  if (!qword_3CB020)
  {
    sub_70ECC(&qword_3CB018);
    sub_70ECC(&qword_3CB028);
    sub_F3080();
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CB040, &qword_3CB048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB020);
  }
  return result;
}

unint64_t sub_F3080()
{
  unint64_t result = qword_3CB030;
  if (!qword_3CB030)
  {
    sub_70ECC(&qword_3CB028);
    sub_FC65C(&qword_3CB038, (void (*)(uint64_t))type metadata accessor for PageView);
    sub_AC2E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB030);
  }
  return result;
}

unint64_t sub_F312C()
{
  unint64_t result = qword_3CB050;
  if (!qword_3CB050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB050);
  }
  return result;
}

unint64_t sub_F3180()
{
  unint64_t result = qword_3CB060;
  if (!qword_3CB060)
  {
    sub_70ECC(&qword_3CB058);
    sub_F322C();
    sub_FC65C(&qword_3CAFF0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB060);
  }
  return result;
}

unint64_t sub_F322C()
{
  unint64_t result = qword_3CB068;
  if (!qword_3CB068)
  {
    sub_70ECC(&qword_3CB070);
    sub_FC65C(&qword_3CB078, (void (*)(uint64_t))type metadata accessor for PageErrorView);
    sub_AC2E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB068);
  }
  return result;
}

unint64_t sub_F32D8()
{
  unint64_t result = qword_3CB090;
  if (!qword_3CB090)
  {
    sub_70ECC(&qword_3CAF60);
    sub_F2C48();
    sub_70ECC(&qword_3CAF58);
    sub_70ECC(&qword_3CB080);
    sub_71AA4(&qword_3CB088, &qword_3CB080);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB090);
  }
  return result;
}

uint64_t sub_F33D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2DE6F0();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  uint64_t v55 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_2DE6C0();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v52 = &v46[-v10];
  uint64_t v58 = type metadata accessor for PageRootView();
  __chkstk_darwin(v58);
  uint64_t v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v13);
  uint64_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_63BAC(&qword_3C6F10);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v54 = &v46[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v21 = &v46[-v20];
  sub_FD5A8(a1, (uint64_t)v15, type metadata accessor for HostProxy.Event);
  if (swift_getEnumCaseMultiPayload() != 3) {
    return sub_FD610((uint64_t)v15, type metadata accessor for HostProxy.Event);
  }
  int v47 = v15[*(int *)(sub_63BAC(&qword_3C9828) + 48)];
  uint64_t v48 = v17;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v21, v15, v16);
  uint64_t v49 = v16;
  uint64_t v51 = v21;
  char v22 = sub_2E0A70();
  uint64_t v50 = a2;
  sub_FD5A8(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRootView);
  if (v22)
  {
    char v23 = v12[*(int *)(v58 + 32) + 8];
    uint64_t v24 = swift_retain();
    sub_86754(v24, v23);
    swift_release();
    uint64_t v25 = v52;
    sub_2DE710();
    swift_release();
    uint64_t v26 = v53;
    (*(void (**)(unsigned char *, void, uint64_t))(v53 + 104))(v9, enum case for HostingControllerVisibilityStateManager.State.visible(_:), v6);
    sub_FC65C((unint64_t *)&qword_3CB180, (void (*)(uint64_t))&type metadata accessor for HostingControllerVisibilityStateManager.State);
    sub_2E45C0();
    sub_2E45C0();
    if (v61 == v59 && v62 == v60)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
      v27(v9, v6);
      v27(v25, v6);
      sub_FD610((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRootView);
      uint64_t v28 = v49;
      uint64_t v29 = v50;
      uint64_t v30 = v48;
LABEL_9:
      char v35 = *(unsigned char *)(v29 + *(int *)(v58 + 32) + 8);
      uint64_t v36 = swift_retain();
      sub_86754(v36, v35);
      swift_release();
      unint64_t v38 = v55;
      uint64_t v37 = v56;
      uint64_t v39 = v57;
      (*(void (**)(unsigned char *, void, uint64_t))(v56 + 104))(v55, enum case for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.onDisappear(_:), v57);
      sub_2DE730();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v38, v39);
      int v32 = 1;
      goto LABEL_10;
    }
    char v33 = sub_2E5020();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
    v34(v9, v6);
    v34(v25, v6);
    sub_FD610((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRootView);
    int v32 = 0;
    uint64_t v28 = v49;
    uint64_t v29 = v50;
    uint64_t v30 = v48;
    if (v33) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_FD610((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRootView);
    int v32 = 0;
    uint64_t v28 = v49;
    uint64_t v29 = v50;
    uint64_t v30 = v48;
  }
LABEL_10:
  uint64_t v40 = (uint64_t)v51;
  PageContent.update(with:animated:)((uint64_t)v51, v47);
  if (v32)
  {
    char v41 = *(unsigned char *)(v29 + *(int *)(v58 + 32) + 8);
    uint64_t v42 = swift_retain();
    sub_86754(v42, v41);
    swift_release();
    uint64_t v44 = v55;
    uint64_t v43 = v56;
    uint64_t v45 = v57;
    (*(void (**)(unsigned char *, void, uint64_t))(v56 + 104))(v55, enum case for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.onAppear(_:), v57);
    sub_2DE730();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v44, v45);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v40, v28);
}

uint64_t sub_F3D1C()
{
  uint64_t v0 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_63BAC(&qword_3CAF50);
  sub_2DF480(0);
  sub_12DA68();
  return sub_2E3150();
}

uint64_t sub_F3DEC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for HostProxy.Event(0);
  v2[5] = swift_task_alloc();
  sub_2E4740();
  v2[6] = sub_2E4730();
  uint64_t v4 = sub_2E46E0();
  return _swift_task_switch(sub_F3EB4, v4, v3);
}

uint64_t sub_F3EB4()
{
  uint64_t v1 = (unsigned char *)v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[2];
  swift_release();
  char v4 = *(unsigned char *)(v2 + *(int *)(type metadata accessor for Page() + 32));
  LOBYTE(v3) = *(unsigned char *)(v3 + *(int *)(type metadata accessor for PageRootView() + 28) + 8);
  uint64_t v5 = swift_retain();
  sub_86BC8(v5, v3);
  swift_release();
  swift_retain();
  swift_release();
  *uint64_t v1 = v4;
  swift_storeEnumTagMultiPayload();
  sub_2E14B0();
  swift_release();
  sub_FD610((uint64_t)v1, type metadata accessor for HostProxy.Event);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_F3FD0(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for HostProxy.Event(0);
  void v1[4] = swift_task_alloc();
  sub_2E4740();
  v1[5] = sub_2E4730();
  uint64_t v3 = sub_2E46E0();
  return _swift_task_switch(sub_F4098, v3, v2);
}

uint64_t sub_F4098()
{
  uint64_t v1 = (unsigned char *)v0[4];
  uint64_t v2 = v0[2];
  swift_release();
  char v3 = *(unsigned char *)(v2 + *(int *)(type metadata accessor for PageRootView() + 28) + 8);
  uint64_t v4 = swift_retain();
  sub_86BC8(v4, v3);
  swift_release();
  swift_retain();
  swift_release();
  *uint64_t v1 = 0;
  swift_storeEnumTagMultiPayload();
  sub_2E14B0();
  swift_release();
  sub_FD610((uint64_t)v1, type metadata accessor for HostProxy.Event);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_F41A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageRootView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_F33D4(a1, v4);
}

uint64_t sub_F4214()
{
  type metadata accessor for PageRootView();

  return sub_F3D1C();
}

uint64_t sub_F4284()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for PageRootView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
    uint64_t v7 = (int *)type metadata accessor for PageContent.PageInfo(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (void *)(v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)v3 + v8);
    uint64_t v11 = (int *)type metadata accessor for Page();
    uint64_t v173 = *((void *)v11 - 1);
    uint64_t v12 = *(unsigned int (**)(void, void, void))(v173 + 48);
    v174 = v3;
    uint64_t v175 = v4;
    v176 = v12;
    if (v12(v10, 1, v11))
    {
      uint64_t v13 = sub_63BAC(&qword_3C97F0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v169 = v7;
      uint64_t v15 = v10[1];
      void *v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v11[5];
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = sub_2DF5D0();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        uint64_t v22 = sub_63BAC(&qword_3C97E8);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v23 = v11[6];
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      if (v21((char *)v10 + v23, 1, v19))
      {
        uint64_t v26 = sub_63BAC(&qword_3C97E8);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
      }
      *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
      *((unsigned char *)v9 + v11[8]) = *((unsigned char *)v10 + v11[8]);
      uint64_t v27 = v11[9];
      uint64_t v28 = (char *)v9 + v27;
      uint64_t v29 = (char *)v10 + v27;
      uint64_t v30 = sub_2E0980();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_63BAC(&qword_3CB0B8);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
      *(void *)((char *)v9 + v11[11]) = *(void *)((char *)v10 + v11[11]);
      *((unsigned char *)v9 + v11[12]) = *((unsigned char *)v10 + v11[12]);
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      uint64_t v34 = (void *)((char *)v9 + v33);
      char v35 = (void *)((char *)v10 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v11[15];
      v165 = (char *)v10 + v37;
      v167 = (char *)v9 + v37;
      uint64_t v38 = sub_2DE7F0();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v167, v165, v38);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      uint64_t v40 = v11[17];
      char v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      uint64_t v43 = sub_2E38D0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      *((unsigned char *)v9 + v11[18]) = *((unsigned char *)v10 + v11[18]);
      *(void *)((char *)v9 + v11[19]) = *(void *)((char *)v10 + v11[19]);
      *(void *)((char *)v9 + v11[20]) = *(void *)((char *)v10 + v11[20]);
      *((unsigned char *)v9 + v11[21]) = *((unsigned char *)v10 + v11[21]);
      uint64_t v45 = v11[22];
      uint64_t v46 = (void *)((char *)v9 + v45);
      int v47 = (void *)((char *)v10 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v11[23];
      uint64_t v50 = (char *)v9 + v49;
      uint64_t v51 = (char *)v10 + v49;
      uint64_t v52 = *(void *)((char *)v10 + v49 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v52)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = v52;
        *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
        *((void *)v50 + 4) = *((void *)v51 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v53 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v53;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
      uint64_t v3 = v174;
      uint64_t v4 = v175;
      uint64_t v12 = v176;
      (*(void (**)(void *, void, uint64_t, int *))(v173 + 56))(v9, 0, 1, v11);
      uint64_t v7 = v169;
    }
    uint64_t v54 = v7[6];
    uint64_t v55 = (void *)(v4 + v54);
    uint64_t v56 = (uint64_t *)((char *)v3 + v54);
    if (v12((char *)v3 + v54, 1, v11))
    {
      uint64_t v57 = sub_63BAC(&qword_3C97F0);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      v170 = v7;
      uint64_t v58 = v56[1];
      void *v55 = *v56;
      v55[1] = v58;
      uint64_t v59 = v11[5];
      uint64_t v60 = (char *)v55 + v59;
      uint64_t v61 = (char *)v56 + v59;
      uint64_t v62 = sub_2DF5D0();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      swift_bridgeObjectRetain();
      if (v64(v61, 1, v62))
      {
        uint64_t v65 = sub_63BAC(&qword_3C97E8);
        memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v66 = v11[6];
      uint64_t v67 = (char *)v55 + v66;
      uint64_t v68 = (char *)v56 + v66;
      if (v64((char *)v56 + v66, 1, v62))
      {
        uint64_t v69 = sub_63BAC(&qword_3C97E8);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v67, v68, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v62);
      }
      *((unsigned char *)v55 + v11[7]) = *((unsigned char *)v56 + v11[7]);
      *((unsigned char *)v55 + v11[8]) = *((unsigned char *)v56 + v11[8]);
      uint64_t v70 = v11[9];
      uint64_t v71 = (char *)v55 + v70;
      uint64_t v72 = (char *)v56 + v70;
      uint64_t v73 = sub_2E0980();
      uint64_t v74 = *(void *)(v73 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        uint64_t v75 = sub_63BAC(&qword_3CB0B8);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      *(void *)((char *)v55 + v11[10]) = *(void *)((char *)v56 + v11[10]);
      *(void *)((char *)v55 + v11[11]) = *(void *)((char *)v56 + v11[11]);
      *((unsigned char *)v55 + v11[12]) = *((unsigned char *)v56 + v11[12]);
      *(void *)((char *)v55 + v11[13]) = *(void *)((char *)v56 + v11[13]);
      uint64_t v76 = v11[14];
      uint64_t v77 = (void *)((char *)v55 + v76);
      uint64_t v78 = (void *)((char *)v56 + v76);
      uint64_t v79 = v78[1];
      *uint64_t v77 = *v78;
      v77[1] = v79;
      uint64_t v80 = v11[15];
      v166 = (char *)v56 + v80;
      v168 = (char *)v55 + v80;
      uint64_t v81 = sub_2DE7F0();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v168, v166, v81);
      *(void *)((char *)v55 + v11[16]) = *(void *)((char *)v56 + v11[16]);
      uint64_t v83 = v11[17];
      uint64_t v84 = (char *)v55 + v83;
      uint64_t v85 = (char *)v56 + v83;
      uint64_t v86 = sub_2E38D0();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v86);
      *((unsigned char *)v55 + v11[18]) = *((unsigned char *)v56 + v11[18]);
      *(void *)((char *)v55 + v11[19]) = *(void *)((char *)v56 + v11[19]);
      *(void *)((char *)v55 + v11[20]) = *(void *)((char *)v56 + v11[20]);
      *((unsigned char *)v55 + v11[21]) = *((unsigned char *)v56 + v11[21]);
      uint64_t v88 = v11[22];
      uint64_t v89 = (void *)((char *)v55 + v88);
      uint64_t v90 = (void *)((char *)v56 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v11[23];
      uint64_t v93 = (char *)v55 + v92;
      uint64_t v94 = (char *)v56 + v92;
      uint64_t v95 = *(void *)((char *)v56 + v92 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v95)
      {
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        *((_OWORD *)v93 + 1) = *((_OWORD *)v94 + 1);
        *((void *)v93 + 4) = *((void *)v94 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v96 = *((_OWORD *)v94 + 1);
        *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
        *((_OWORD *)v93 + 1) = v96;
        *((void *)v93 + 4) = *((void *)v94 + 4);
      }
      uint64_t v3 = v174;
      uint64_t v4 = v175;
      (*(void (**)(void *, void, uint64_t, int *))(v173 + 56))(v55, 0, 1, v11);
      uint64_t v7 = v170;
    }
    *(unsigned char *)(v4 + v7[7]) = *((unsigned char *)v3 + v7[7]);
    uint64_t v97 = v7[8];
    uint64_t v98 = v4 + v97;
    uint64_t v99 = (uint64_t)v3 + v97;
    uint64_t v100 = sub_63BAC(&qword_3CAF50);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = v7[9];
    uint64_t v102 = (void *)(v4 + v101);
    uint64_t v103 = (uint64_t *)((char *)v3 + v101);
    if (v176((char *)v3 + v101, 1, v11))
    {
      uint64_t v104 = sub_63BAC(&qword_3C97F0);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      uint64_t v105 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v105;
      uint64_t v106 = v11[5];
      v107 = (char *)v102 + v106;
      uint64_t v108 = (char *)v103 + v106;
      uint64_t v109 = sub_2DF5D0();
      uint64_t v110 = *(void *)(v109 - 8);
      uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
      swift_bridgeObjectRetain();
      if (v111(v108, 1, v109))
      {
        uint64_t v112 = sub_63BAC(&qword_3C97E8);
        memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
      }
      uint64_t v113 = v11[6];
      v114 = (char *)v102 + v113;
      v115 = (char *)v103 + v113;
      if (v111((char *)v103 + v113, 1, v109))
      {
        uint64_t v116 = sub_63BAC(&qword_3C97E8);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v114, v115, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v114, 0, 1, v109);
      }
      *((unsigned char *)v102 + v11[7]) = *((unsigned char *)v103 + v11[7]);
      *((unsigned char *)v102 + v11[8]) = *((unsigned char *)v103 + v11[8]);
      uint64_t v117 = v11[9];
      v118 = (char *)v102 + v117;
      v119 = (char *)v103 + v117;
      uint64_t v120 = sub_2E0980();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        uint64_t v122 = sub_63BAC(&qword_3CB0B8);
        memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      *(void *)((char *)v102 + v11[10]) = *(void *)((char *)v103 + v11[10]);
      *(void *)((char *)v102 + v11[11]) = *(void *)((char *)v103 + v11[11]);
      *((unsigned char *)v102 + v11[12]) = *((unsigned char *)v103 + v11[12]);
      *(void *)((char *)v102 + v11[13]) = *(void *)((char *)v103 + v11[13]);
      uint64_t v123 = v11[14];
      v124 = (void *)((char *)v102 + v123);
      v125 = (void *)((char *)v103 + v123);
      uint64_t v126 = v125[1];
      void *v124 = *v125;
      v124[1] = v126;
      uint64_t v127 = v11[15];
      v177 = (char *)v102 + v127;
      v171 = (char *)v103 + v127;
      uint64_t v128 = sub_2DE7F0();
      v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v129(v177, v171, v128);
      *(void *)((char *)v102 + v11[16]) = *(void *)((char *)v103 + v11[16]);
      uint64_t v130 = v11[17];
      v131 = (char *)v102 + v130;
      v132 = (char *)v103 + v130;
      uint64_t v133 = sub_2E38D0();
      v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      v134(v131, v132, v133);
      *((unsigned char *)v102 + v11[18]) = *((unsigned char *)v103 + v11[18]);
      *(void *)((char *)v102 + v11[19]) = *(void *)((char *)v103 + v11[19]);
      *(void *)((char *)v102 + v11[20]) = *(void *)((char *)v103 + v11[20]);
      *((unsigned char *)v102 + v11[21]) = *((unsigned char *)v103 + v11[21]);
      uint64_t v135 = v11[22];
      v136 = (void *)((char *)v102 + v135);
      v137 = (void *)((char *)v103 + v135);
      uint64_t v138 = v137[1];
      void *v136 = *v137;
      v136[1] = v138;
      uint64_t v139 = v11[23];
      v140 = (char *)v102 + v139;
      v141 = (char *)v103 + v139;
      uint64_t v142 = *(void *)((char *)v103 + v139 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v142)
      {
        *(void *)v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        *((_OWORD *)v140 + 1) = *((_OWORD *)v141 + 1);
        *((void *)v140 + 4) = *((void *)v141 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v143 = *((_OWORD *)v141 + 1);
        *(_OWORD *)v140 = *(_OWORD *)v141;
        *((_OWORD *)v140 + 1) = v143;
        *((void *)v140 + 4) = *((void *)v141 + 4);
      }
      uint64_t v3 = v174;
      uint64_t v4 = v175;
      (*(void (**)(void *, void, uint64_t, int *))(v173 + 56))(v102, 0, 1, v11);
    }
    uint64_t v144 = sub_63BAC(&qword_3C97F8);
    *(void *)(v4 + *(int *)(v144 + 28)) = *(uint64_t *)((char *)v3 + *(int *)(v144 + 28));
    uint64_t v145 = *(int *)(type metadata accessor for PageContent(0) + 20);
    v146 = (char *)(v4 + v145);
    v147 = (char *)v3 + v145;
    uint64_t v148 = sub_2DFA90();
    uint64_t v149 = *(void *)(v148 - 8);
    v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    swift_retain();
    if (v150(v147, 1, v148))
    {
      uint64_t v151 = sub_63BAC(&qword_3CB0C0);
      memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v146, v147, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
    }
    uint64_t v152 = sub_63BAC(&qword_3CB0A0);
    *(void *)&v146[*(int *)(v152 + 28)] = *(void *)&v147[*(int *)(v152 + 28)];
    uint64_t v153 = a3[6];
    *(void *)(v4 + a3[5]) = *(uint64_t *)((char *)v3 + a3[5]);
    v154 = *(void **)((char *)v3 + v153);
    *(void *)(v4 + v153) = v154;
    uint64_t v155 = a3[7];
    uint64_t v156 = a3[8];
    uint64_t v157 = v4 + v155;
    v158 = (uint64_t *)((char *)v3 + v155);
    uint64_t v159 = *v158;
    LOBYTE(v158) = *((unsigned char *)v158 + 8);
    *(void *)uint64_t v157 = v159;
    *(unsigned char *)(v157 + 8) = (_BYTE)v158;
    uint64_t v160 = v4 + v156;
    v161 = (uint64_t *)((char *)v3 + v156);
    uint64_t v162 = *v161;
    LOBYTE(v161) = *((unsigned char *)v161 + 8);
    *(void *)uint64_t v160 = v162;
    *(unsigned char *)(v160 + 8) = (_BYTE)v161;
    swift_retain();
    swift_retain();
    id v163 = v154;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for PageRootView(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  uint64_t v4 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = a1 + v4[5];
  long long v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v52 = v7;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = sub_2DF5D0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = v5 + v6[6];
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    uint64_t v13 = v5 + v6[9];
    uint64_t v14 = sub_2E0980();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[15];
    uint64_t v17 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v5 + v6[17];
    uint64_t v19 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v52;
    if (*(void *)(v5 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = a1 + v4[6];
  if (!v7(v20, 1, v6))
  {
    long long v53 = v7;
    uint64_t v54 = a2;
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + v6[5];
    uint64_t v22 = sub_2DF5D0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v6[6];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v6[9];
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v20 + v6[15];
    uint64_t v30 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v20 + v6[17];
    uint64_t v32 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v53;
    a2 = v54;
    if (*(void *)(v20 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = a1 + v4[8];
  uint64_t v34 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = a1 + v4[9];
  if (!v7(v35, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + v6[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v6[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v6[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v35 + v6[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v35 + v6[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v48 = a1 + *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v49 = sub_2DFA90();
  uint64_t v50 = *(void *)(v49 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_63BAC(&qword_3CB0A0);
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PageRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(void))(v5 - 8))();
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(v4 + v7);
  uint64_t v9 = (void *)(v3 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v171 = *((void *)v10 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v171 + 48);
  uint64_t v172 = v3;
  uint64_t v173 = v4;
  v174 = v11;
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v167 = v6;
    uint64_t v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v10[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_2DF5D0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_63BAC(&qword_3C97E8);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v10[6];
    uint64_t v22 = (char *)v8 + v21;
    uint64_t v23 = (char *)v9 + v21;
    if (v19((char *)v9 + v21, 1, v17))
    {
      uint64_t v24 = sub_63BAC(&qword_3C97E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v23, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
    }
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v25 = v10[9];
    uint64_t v26 = (char *)v8 + v25;
    uint64_t v27 = (char *)v9 + v25;
    uint64_t v28 = sub_2E0980();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_63BAC(&qword_3CB0B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    uint64_t v32 = (void *)((char *)v8 + v31);
    uint64_t v33 = (void *)((char *)v9 + v31);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v10[15];
    id v163 = (char *)v9 + v35;
    v165 = (char *)v8 + v35;
    uint64_t v36 = sub_2DE7F0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v165, v163, v36);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v38 = v10[17];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    uint64_t v41 = sub_2E38D0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    uint64_t v43 = v10[22];
    uint64_t v44 = (void *)((char *)v8 + v43);
    uint64_t v45 = (void *)((char *)v9 + v43);
    uint64_t v46 = v45[1];
    void *v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = v10[23];
    uint64_t v48 = (char *)v8 + v47;
    uint64_t v49 = (char *)v9 + v47;
    uint64_t v50 = *(void *)((char *)v9 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((void *)v48 + 4) = *((void *)v49 + 4);
    }
    uint64_t v3 = v172;
    uint64_t v4 = v173;
    uint64_t v11 = v174;
    (*(void (**)(void *, void, uint64_t, int *))(v171 + 56))(v8, 0, 1, v10);
    long long v6 = v167;
  }
  uint64_t v52 = v6[6];
  long long v53 = (void *)(v4 + v52);
  uint64_t v54 = (void *)(v3 + v52);
  if (v11(v3 + v52, 1, v10))
  {
    uint64_t v55 = sub_63BAC(&qword_3C97F0);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    v168 = v6;
    uint64_t v56 = v54[1];
    *long long v53 = *v54;
    v53[1] = v56;
    uint64_t v57 = v10[5];
    uint64_t v58 = (char *)v53 + v57;
    uint64_t v59 = (char *)v54 + v57;
    uint64_t v60 = sub_2DF5D0();
    uint64_t v61 = *(void *)(v60 - 8);
    uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    if (v62(v59, 1, v60))
    {
      uint64_t v63 = sub_63BAC(&qword_3C97E8);
      memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v64 = v10[6];
    uint64_t v65 = (char *)v53 + v64;
    uint64_t v66 = (char *)v54 + v64;
    if (v62((char *)v54 + v64, 1, v60))
    {
      uint64_t v67 = sub_63BAC(&qword_3C97E8);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v65, v66, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v65, 0, 1, v60);
    }
    *((unsigned char *)v53 + v10[7]) = *((unsigned char *)v54 + v10[7]);
    *((unsigned char *)v53 + v10[8]) = *((unsigned char *)v54 + v10[8]);
    uint64_t v68 = v10[9];
    uint64_t v69 = (char *)v53 + v68;
    uint64_t v70 = (char *)v54 + v68;
    uint64_t v71 = sub_2E0980();
    uint64_t v72 = *(void *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      uint64_t v73 = sub_63BAC(&qword_3CB0B8);
      memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    *(void *)((char *)v53 + v10[10]) = *(void *)((char *)v54 + v10[10]);
    *(void *)((char *)v53 + v10[11]) = *(void *)((char *)v54 + v10[11]);
    *((unsigned char *)v53 + v10[12]) = *((unsigned char *)v54 + v10[12]);
    *(void *)((char *)v53 + v10[13]) = *(void *)((char *)v54 + v10[13]);
    uint64_t v74 = v10[14];
    uint64_t v75 = (void *)((char *)v53 + v74);
    uint64_t v76 = (void *)((char *)v54 + v74);
    uint64_t v77 = v76[1];
    void *v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v10[15];
    v164 = (char *)v54 + v78;
    v166 = (char *)v53 + v78;
    uint64_t v79 = sub_2DE7F0();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v166, v164, v79);
    *(void *)((char *)v53 + v10[16]) = *(void *)((char *)v54 + v10[16]);
    uint64_t v81 = v10[17];
    uint64_t v82 = (char *)v53 + v81;
    uint64_t v83 = (char *)v54 + v81;
    uint64_t v84 = sub_2E38D0();
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
    swift_bridgeObjectRetain();
    v85(v82, v83, v84);
    *((unsigned char *)v53 + v10[18]) = *((unsigned char *)v54 + v10[18]);
    *(void *)((char *)v53 + v10[19]) = *(void *)((char *)v54 + v10[19]);
    *(void *)((char *)v53 + v10[20]) = *(void *)((char *)v54 + v10[20]);
    *((unsigned char *)v53 + v10[21]) = *((unsigned char *)v54 + v10[21]);
    uint64_t v86 = v10[22];
    uint64_t v87 = (void *)((char *)v53 + v86);
    uint64_t v88 = (void *)((char *)v54 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v10[23];
    uint64_t v91 = (char *)v53 + v90;
    uint64_t v92 = (char *)v54 + v90;
    uint64_t v93 = *(void *)((char *)v54 + v90 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v93)
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      *((_OWORD *)v91 + 1) = *((_OWORD *)v92 + 1);
      *((void *)v91 + 4) = *((void *)v92 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v94 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v94;
      *((void *)v91 + 4) = *((void *)v92 + 4);
    }
    uint64_t v3 = v172;
    uint64_t v4 = v173;
    (*(void (**)(void *, void, uint64_t, int *))(v171 + 56))(v53, 0, 1, v10);
    long long v6 = v168;
  }
  *(unsigned char *)(v4 + v6[7]) = *(unsigned char *)(v3 + v6[7]);
  uint64_t v95 = v6[8];
  uint64_t v96 = v4 + v95;
  uint64_t v97 = v3 + v95;
  uint64_t v98 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
  uint64_t v99 = v6[9];
  uint64_t v100 = (void *)(v4 + v99);
  uint64_t v101 = (void *)(v3 + v99);
  if (v174(v3 + v99, 1, v10))
  {
    uint64_t v102 = sub_63BAC(&qword_3C97F0);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v103 = v101[1];
    *uint64_t v100 = *v101;
    v100[1] = v103;
    uint64_t v104 = v10[5];
    uint64_t v105 = (char *)v100 + v104;
    uint64_t v106 = (char *)v101 + v104;
    uint64_t v107 = sub_2DF5D0();
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
    swift_bridgeObjectRetain();
    if (v109(v106, 1, v107))
    {
      uint64_t v110 = sub_63BAC(&qword_3C97E8);
      memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
    }
    uint64_t v111 = v10[6];
    uint64_t v112 = (char *)v100 + v111;
    uint64_t v113 = (char *)v101 + v111;
    if (v109((char *)v101 + v111, 1, v107))
    {
      uint64_t v114 = sub_63BAC(&qword_3C97E8);
      memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v113, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v112, 0, 1, v107);
    }
    *((unsigned char *)v100 + v10[7]) = *((unsigned char *)v101 + v10[7]);
    *((unsigned char *)v100 + v10[8]) = *((unsigned char *)v101 + v10[8]);
    uint64_t v115 = v10[9];
    uint64_t v116 = (char *)v100 + v115;
    uint64_t v117 = (char *)v101 + v115;
    uint64_t v118 = sub_2E0980();
    uint64_t v119 = *(void *)(v118 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
    {
      uint64_t v120 = sub_63BAC(&qword_3CB0B8);
      memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v117, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
    }
    *(void *)((char *)v100 + v10[10]) = *(void *)((char *)v101 + v10[10]);
    *(void *)((char *)v100 + v10[11]) = *(void *)((char *)v101 + v10[11]);
    *((unsigned char *)v100 + v10[12]) = *((unsigned char *)v101 + v10[12]);
    *(void *)((char *)v100 + v10[13]) = *(void *)((char *)v101 + v10[13]);
    uint64_t v121 = v10[14];
    uint64_t v122 = (void *)((char *)v100 + v121);
    uint64_t v123 = (void *)((char *)v101 + v121);
    uint64_t v124 = v123[1];
    *uint64_t v122 = *v123;
    v122[1] = v124;
    uint64_t v125 = v10[15];
    uint64_t v175 = (char *)v100 + v125;
    v169 = (char *)v101 + v125;
    uint64_t v126 = sub_2DE7F0();
    uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v127(v175, v169, v126);
    *(void *)((char *)v100 + v10[16]) = *(void *)((char *)v101 + v10[16]);
    uint64_t v128 = v10[17];
    v129 = (char *)v100 + v128;
    uint64_t v130 = (char *)v101 + v128;
    uint64_t v131 = sub_2E38D0();
    v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
    swift_bridgeObjectRetain();
    v132(v129, v130, v131);
    *((unsigned char *)v100 + v10[18]) = *((unsigned char *)v101 + v10[18]);
    *(void *)((char *)v100 + v10[19]) = *(void *)((char *)v101 + v10[19]);
    *(void *)((char *)v100 + v10[20]) = *(void *)((char *)v101 + v10[20]);
    *((unsigned char *)v100 + v10[21]) = *((unsigned char *)v101 + v10[21]);
    uint64_t v133 = v10[22];
    v134 = (void *)((char *)v100 + v133);
    uint64_t v135 = (void *)((char *)v101 + v133);
    uint64_t v136 = v135[1];
    void *v134 = *v135;
    v134[1] = v136;
    uint64_t v137 = v10[23];
    uint64_t v138 = (char *)v100 + v137;
    uint64_t v139 = (char *)v101 + v137;
    uint64_t v140 = *(void *)((char *)v101 + v137 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v140)
    {
      *(void *)uint64_t v138 = *(void *)v139;
      *((void *)v138 + 1) = v140;
      *((_OWORD *)v138 + 1) = *((_OWORD *)v139 + 1);
      *((void *)v138 + 4) = *((void *)v139 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v141 = *((_OWORD *)v139 + 1);
      *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
      *((_OWORD *)v138 + 1) = v141;
      *((void *)v138 + 4) = *((void *)v139 + 4);
    }
    uint64_t v3 = v172;
    uint64_t v4 = v173;
    (*(void (**)(void *, void, uint64_t, int *))(v171 + 56))(v100, 0, 1, v10);
  }
  uint64_t v142 = sub_63BAC(&qword_3C97F8);
  *(void *)(v4 + *(int *)(v142 + 28)) = *(void *)(v3 + *(int *)(v142 + 28));
  uint64_t v143 = *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v144 = (char *)(v4 + v143);
  uint64_t v145 = (char *)(v3 + v143);
  uint64_t v146 = sub_2DFA90();
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
  swift_retain();
  if (v148(v145, 1, v146))
  {
    uint64_t v149 = sub_63BAC(&qword_3CB0C0);
    memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v145, v146);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
  }
  uint64_t v150 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v144[*(int *)(v150 + 28)] = *(void *)&v145[*(int *)(v150 + 28)];
  uint64_t v151 = a3[6];
  *(void *)(v4 + a3[5]) = *(void *)(v3 + a3[5]);
  uint64_t v152 = *(void **)(v3 + v151);
  *(void *)(v4 + v151) = v152;
  uint64_t v153 = a3[7];
  uint64_t v154 = a3[8];
  uint64_t v155 = v4 + v153;
  uint64_t v156 = (uint64_t *)(v3 + v153);
  uint64_t v157 = *v156;
  LOBYTE(v156) = *((unsigned char *)v156 + 8);
  *(void *)uint64_t v155 = v157;
  *(unsigned char *)(v155 + 8) = (_BYTE)v156;
  uint64_t v158 = v4 + v154;
  uint64_t v159 = (uint64_t *)(v3 + v154);
  uint64_t v160 = *v159;
  LOBYTE(v159) = *((unsigned char *)v159 + 8);
  *(void *)uint64_t v158 = v160;
  *(unsigned char *)(v158 + 8) = (_BYTE)v159;
  swift_retain();
  swift_retain();
  id v161 = v152;
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t *assignWithCopy for PageRootView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a2;
  long long v5 = a1;
  sub_6FA20(a1, a2);
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (char *)v4 + v7;
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v311 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v311 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  v313 = v5;
  v314 = v4;
  v312 = a3;
  v315 = v11;
  if (v12)
  {
    if (!v13)
    {
      v308 = v6;
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      uint64_t v14 = v10[5];
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      uint64_t v17 = sub_2DF5D0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = sub_63BAC(&qword_3C97E8);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v30 = v10[6];
      uint64_t v31 = &v8[v30];
      uint64_t v32 = &v9[v30];
      if (v19(&v9[v30], 1, v17))
      {
        uint64_t v33 = sub_63BAC(&qword_3C97E8);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v31, v32, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
      }
      v8[v10[7]] = v9[v10[7]];
      v8[v10[8]] = v9[v10[8]];
      uint64_t v34 = v10[9];
      uint64_t v35 = &v8[v34];
      uint64_t v36 = &v9[v34];
      uint64_t v37 = sub_2E0980();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        uint64_t v39 = sub_63BAC(&qword_3CB0B8);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
      *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
      v8[v10[12]] = v9[v10[12]];
      *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
      uint64_t v40 = v10[14];
      uint64_t v41 = &v8[v40];
      uint64_t v42 = &v9[v40];
      *uint64_t v41 = *(void *)v42;
      v41[1] = *((void *)v42 + 1);
      uint64_t v43 = v10[15];
      v304 = &v9[v43];
      v306 = &v8[v43];
      uint64_t v44 = sub_2DE7F0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v306, v304, v44);
      *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
      uint64_t v46 = v10[17];
      uint64_t v47 = &v8[v46];
      uint64_t v48 = &v9[v46];
      uint64_t v49 = sub_2E38D0();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      v8[v10[18]] = v9[v10[18]];
      *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
      *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
      v8[v10[21]] = v9[v10[21]];
      uint64_t v51 = v10[22];
      uint64_t v52 = &v8[v51];
      long long v53 = &v9[v51];
      *uint64_t v52 = *(void *)v53;
      v52[1] = *((void *)v53 + 1);
      uint64_t v54 = v10[23];
      uint64_t v55 = &v8[v54];
      uint64_t v56 = &v9[v54];
      uint64_t v57 = *(void *)&v9[v54 + 8];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v57)
      {
        char *v55 = *(void *)v56;
        v55[1] = *((void *)v56 + 1);
        v55[2] = *((void *)v56 + 2);
        v55[3] = *((void *)v56 + 3);
        v55[4] = *((void *)v56 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v58 = *(_OWORD *)v56;
        long long v59 = *((_OWORD *)v56 + 1);
        v55[4] = *((void *)v56 + 4);
        *(_OWORD *)uint64_t v55 = v58;
        *((_OWORD *)v55 + 1) = v59;
      }
      long long v5 = v313;
      uint64_t v4 = v314;
      (*(void (**)(char *, void, uint64_t, int *))(v311 + 56))(v8, 0, 1, v10);
      long long v6 = v308;
      uint64_t v11 = v315;
      goto LABEL_22;
    }
LABEL_7:
    uint64_t v21 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_22;
  }
  if (v13)
  {
    sub_FD610((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Page);
    goto LABEL_7;
  }
  v309 = v6;
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[5];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  uint64_t v25 = sub_2DF5D0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_74:
    uint64_t v189 = sub_63BAC(&qword_3C97E8);
    memcpy(v23, v24, *(void *)(*(void *)(v189 - 8) + 64));
    goto LABEL_75;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_75:
  uint64_t v190 = v10[6];
  v191 = &v8[v190];
  v192 = &v9[v190];
  int v193 = v27(&v8[v190], 1, v25);
  int v194 = v27(v192, 1, v25);
  if (v193)
  {
    if (!v194)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v191, v192, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v191, 0, 1, v25);
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  if (v194)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v191, v25);
LABEL_92:
    uint64_t v207 = sub_63BAC(&qword_3C97E8);
    memcpy(v191, v192, *(void *)(*(void *)(v207 - 8) + 64));
    goto LABEL_93;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v191, v192, v25);
LABEL_93:
  v8[v10[7]] = v9[v10[7]];
  v8[v10[8]] = v9[v10[8]];
  uint64_t v208 = v10[9];
  v209 = &v8[v208];
  v210 = &v9[v208];
  uint64_t v211 = sub_2E0980();
  uint64_t v212 = *(void *)(v211 - 8);
  v213 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v212 + 48);
  int v214 = v213(v209, 1, v211);
  int v215 = v213(v210, 1, v211);
  if (v214)
  {
    uint64_t v11 = v315;
    if (!v215)
    {
      (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v209, v210, v211);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
      goto LABEL_111;
    }
    goto LABEL_110;
  }
  uint64_t v11 = v315;
  if (v215)
  {
    (*(void (**)(char *, uint64_t))(v212 + 8))(v209, v211);
LABEL_110:
    uint64_t v234 = sub_63BAC(&qword_3CB0B8);
    memcpy(v209, v210, *(void *)(*(void *)(v234 - 8) + 64));
    goto LABEL_111;
  }
  (*(void (**)(char *, char *, uint64_t))(v212 + 24))(v209, v210, v211);
LABEL_111:
  *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[v10[12]] = v9[v10[12]];
  *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v235 = v10[14];
  v236 = &v8[v235];
  v237 = &v9[v235];
  char *v236 = *(void *)v237;
  v236[1] = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v238 = v10[15];
  v239 = &v8[v238];
  v240 = &v9[v238];
  uint64_t v241 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 24))(v239, v240, v241);
  *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v242 = v10[17];
  v243 = &v8[v242];
  v244 = &v9[v242];
  uint64_t v245 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 24))(v243, v244, v245);
  v8[v10[18]] = v9[v10[18]];
  *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
  swift_retain();
  swift_release();
  v8[v10[21]] = v9[v10[21]];
  uint64_t v246 = v10[22];
  v247 = &v8[v246];
  v248 = &v9[v246];
  char *v247 = *(void *)v248;
  v247[1] = *((void *)v248 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v249 = v10[23];
  v250 = &v8[v249];
  v251 = &v9[v249];
  uint64_t v252 = *(void *)&v9[v249 + 8];
  long long v5 = v313;
  uint64_t v4 = v314;
  if (v250[1])
  {
    if (v252)
    {
      char *v250 = *(void *)v251;
      v250[1] = *((void *)v251 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v250[2] = *((void *)v251 + 2);
      v250[3] = *((void *)v251 + 3);
      v250[4] = *((void *)v251 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B0F2C((uint64_t)v250);
      uint64_t v292 = *((void *)v251 + 4);
      long long v293 = *((_OWORD *)v251 + 1);
      *(_OWORD *)v250 = *(_OWORD *)v251;
      *((_OWORD *)v250 + 1) = v293;
      v250[4] = v292;
    }
    long long v6 = v309;
  }
  else
  {
    if (v252)
    {
      char *v250 = *(void *)v251;
      v250[1] = *((void *)v251 + 1);
      v250[2] = *((void *)v251 + 2);
      v250[3] = *((void *)v251 + 3);
      v250[4] = *((void *)v251 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v298 = *(_OWORD *)v251;
      long long v299 = *((_OWORD *)v251 + 1);
      v250[4] = *((void *)v251 + 4);
      *(_OWORD *)v250 = v298;
      *((_OWORD *)v250 + 1) = v299;
    }
    long long v6 = v309;
  }
LABEL_22:
  uint64_t v60 = v6[6];
  uint64_t v61 = (char *)v5 + v60;
  uint64_t v62 = (char *)v4 + v60;
  int v63 = v11((char *)v5 + v60, 1, v10);
  int v64 = v11(v62, 1, v10);
  if (!v63)
  {
    if (v64)
    {
      sub_FD610((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_28;
    }
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = *((void *)v62 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v73 = v10[5];
    uint64_t v74 = &v61[v73];
    uint64_t v75 = &v62[v73];
    uint64_t v76 = sub_2DF5D0();
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    int v79 = v78(v74, 1, v76);
    int v80 = v78(v75, 1, v76);
    if (v79)
    {
      if (!v80)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        goto LABEL_81;
      }
    }
    else
    {
      if (!v80)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v74, v75, v76);
LABEL_81:
        uint64_t v196 = v10[6];
        v197 = &v61[v196];
        v198 = &v62[v196];
        int v199 = v78(&v61[v196], 1, v76);
        int v200 = v78(v198, 1, v76);
        if (v199)
        {
          if (!v200)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v197, v198, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v197, 0, 1, v76);
            goto LABEL_99;
          }
        }
        else
        {
          if (!v200)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v197, v198, v76);
LABEL_99:
            v61[v10[7]] = v62[v10[7]];
            v61[v10[8]] = v62[v10[8]];
            uint64_t v217 = v10[9];
            v218 = &v61[v217];
            v219 = &v62[v217];
            uint64_t v220 = sub_2E0980();
            uint64_t v221 = *(void *)(v220 - 8);
            v222 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v221 + 48);
            int v223 = v222(v218, 1, v220);
            int v224 = v222(v219, 1, v220);
            if (v223)
            {
              if (!v224)
              {
                (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v218, v219, v220);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
                goto LABEL_118;
              }
            }
            else
            {
              if (!v224)
              {
                (*(void (**)(char *, char *, uint64_t))(v221 + 24))(v218, v219, v220);
LABEL_118:
                *(void *)&v61[v10[10]] = *(void *)&v62[v10[10]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v61[v10[11]] = *(void *)&v62[v10[11]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v61[v10[12]] = v62[v10[12]];
                *(void *)&v61[v10[13]] = *(void *)&v62[v10[13]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v254 = v10[14];
                v255 = &v61[v254];
                v256 = &v62[v254];
                *(void *)v255 = *v256;
                *((void *)v255 + 1) = v256[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v257 = v10[15];
                v258 = &v61[v257];
                v259 = &v62[v257];
                uint64_t v260 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 24))(v258, v259, v260);
                *(void *)&v61[v10[16]] = *(void *)&v62[v10[16]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v261 = v10[17];
                v262 = &v61[v261];
                v263 = &v62[v261];
                uint64_t v264 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 24))(v262, v263, v264);
                v61[v10[18]] = v62[v10[18]];
                *(void *)&v61[v10[19]] = *(void *)&v62[v10[19]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v61[v10[20]] = *(void *)&v62[v10[20]];
                swift_retain();
                swift_release();
                v61[v10[21]] = v62[v10[21]];
                uint64_t v265 = v10[22];
                v266 = &v61[v265];
                v267 = &v62[v265];
                *(void *)v266 = *v267;
                *((void *)v266 + 1) = v267[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v268 = v10[23];
                v269 = &v61[v268];
                v270 = &v62[v268];
                uint64_t v271 = *(void *)&v62[v268 + 8];
                long long v5 = v313;
                uint64_t v4 = v314;
                if (*((void *)v269 + 1))
                {
                  if (v271)
                  {
                    *(void *)v269 = *v270;
                    *((void *)v269 + 1) = v270[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v269 + 2) = v270[2];
                    *((void *)v269 + 3) = v270[3];
                    *((void *)v269 + 4) = v270[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v269);
                    uint64_t v294 = v270[4];
                    long long v295 = *((_OWORD *)v270 + 1);
                    *(_OWORD *)v269 = *(_OWORD *)v270;
                    *((_OWORD *)v269 + 1) = v295;
                    *((void *)v269 + 4) = v294;
                  }
                }
                else if (v271)
                {
                  *(void *)v269 = *v270;
                  *((void *)v269 + 1) = v270[1];
                  *((void *)v269 + 2) = v270[2];
                  *((void *)v269 + 3) = v270[3];
                  *((void *)v269 + 4) = v270[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v300 = *(_OWORD *)v270;
                  long long v301 = *((_OWORD *)v270 + 1);
                  *((void *)v269 + 4) = v270[4];
                  *(_OWORD *)v269 = v300;
                  *((_OWORD *)v269 + 1) = v301;
                }
                goto LABEL_43;
              }
              (*(void (**)(char *, uint64_t))(v221 + 8))(v218, v220);
            }
            uint64_t v253 = sub_63BAC(&qword_3CB0B8);
            memcpy(v218, v219, *(void *)(*(void *)(v253 - 8) + 64));
            goto LABEL_118;
          }
          (*(void (**)(char *, uint64_t))(v77 + 8))(v197, v76);
        }
        uint64_t v216 = sub_63BAC(&qword_3C97E8);
        memcpy(v197, v198, *(void *)(*(void *)(v216 - 8) + 64));
        goto LABEL_99;
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v76);
    }
    uint64_t v195 = sub_63BAC(&qword_3C97E8);
    memcpy(v74, v75, *(void *)(*(void *)(v195 - 8) + 64));
    goto LABEL_81;
  }
  if (v64)
  {
LABEL_28:
    uint64_t v72 = sub_63BAC(&qword_3C97F0);
    memcpy(v61, v62, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_43;
  }
  v310 = v6;
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  uint64_t v65 = v10[5];
  uint64_t v66 = &v61[v65];
  uint64_t v67 = &v62[v65];
  uint64_t v68 = sub_2DF5D0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  if (v70(v67, 1, v68))
  {
    uint64_t v71 = sub_63BAC(&qword_3C97E8);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v81 = v10[6];
  uint64_t v82 = &v61[v81];
  uint64_t v83 = &v62[v81];
  if (v70(&v62[v81], 1, v68))
  {
    uint64_t v84 = sub_63BAC(&qword_3C97E8);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v82, v83, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v82, 0, 1, v68);
  }
  v61[v10[7]] = v62[v10[7]];
  v61[v10[8]] = v62[v10[8]];
  uint64_t v85 = v10[9];
  uint64_t v86 = &v61[v85];
  uint64_t v87 = &v62[v85];
  uint64_t v88 = sub_2E0980();
  uint64_t v89 = *(void *)(v88 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
  {
    uint64_t v90 = sub_63BAC(&qword_3CB0B8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
  }
  *(void *)&v61[v10[10]] = *(void *)&v62[v10[10]];
  *(void *)&v61[v10[11]] = *(void *)&v62[v10[11]];
  v61[v10[12]] = v62[v10[12]];
  *(void *)&v61[v10[13]] = *(void *)&v62[v10[13]];
  uint64_t v91 = v10[14];
  uint64_t v92 = &v61[v91];
  uint64_t v93 = &v62[v91];
  *(void *)uint64_t v92 = *v93;
  *((void *)v92 + 1) = v93[1];
  uint64_t v94 = v10[15];
  v305 = &v62[v94];
  v307 = &v61[v94];
  uint64_t v95 = sub_2DE7F0();
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v96(v307, v305, v95);
  *(void *)&v61[v10[16]] = *(void *)&v62[v10[16]];
  uint64_t v97 = v10[17];
  uint64_t v98 = &v61[v97];
  uint64_t v99 = &v62[v97];
  uint64_t v100 = sub_2E38D0();
  uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
  swift_bridgeObjectRetain();
  v101(v98, v99, v100);
  v61[v10[18]] = v62[v10[18]];
  *(void *)&v61[v10[19]] = *(void *)&v62[v10[19]];
  *(void *)&v61[v10[20]] = *(void *)&v62[v10[20]];
  v61[v10[21]] = v62[v10[21]];
  uint64_t v102 = v10[22];
  uint64_t v103 = &v61[v102];
  uint64_t v104 = &v62[v102];
  *(void *)uint64_t v103 = *v104;
  *((void *)v103 + 1) = v104[1];
  uint64_t v105 = v10[23];
  uint64_t v106 = &v61[v105];
  uint64_t v107 = &v62[v105];
  uint64_t v108 = *(void *)&v62[v105 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v108)
  {
    *(void *)uint64_t v106 = *v107;
    *((void *)v106 + 1) = v107[1];
    *((void *)v106 + 2) = v107[2];
    *((void *)v106 + 3) = v107[3];
    *((void *)v106 + 4) = v107[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v109 = *(_OWORD *)v107;
    long long v110 = *((_OWORD *)v107 + 1);
    *((void *)v106 + 4) = v107[4];
    *(_OWORD *)uint64_t v106 = v109;
    *((_OWORD *)v106 + 1) = v110;
  }
  long long v5 = v313;
  uint64_t v4 = v314;
  (*(void (**)(char *, void, uint64_t, int *))(v311 + 56))(v61, 0, 1, v10);
  long long v6 = v310;
LABEL_43:
  *((unsigned char *)v5 + v6[7]) = *((unsigned char *)v4 + v6[7]);
  uint64_t v111 = v6[8];
  uint64_t v112 = (char *)v5 + v111;
  uint64_t v113 = (char *)v4 + v111;
  uint64_t v114 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 24))(v112, v113, v114);
  uint64_t v115 = v6[9];
  uint64_t v116 = (char *)v5 + v115;
  uint64_t v117 = (uint64_t *)((char *)v4 + v115);
  LODWORD(v112) = v315((char *)v5 + v115, 1, v10);
  int v118 = v315((char *)v117, 1, v10);
  if (!v112)
  {
    if (v118)
    {
      sub_FD610((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_49;
    }
    *(void *)uint64_t v116 = *v117;
    *((void *)v116 + 1) = v117[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v127 = v10[5];
    uint64_t v128 = &v116[v127];
    v129 = (char *)v117 + v127;
    uint64_t v130 = sub_2DF5D0();
    uint64_t v131 = *(void *)(v130 - 8);
    v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48);
    int v133 = v132(v128, 1, v130);
    int v134 = v132(v129, 1, v130);
    if (v133)
    {
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
        goto LABEL_87;
      }
    }
    else
    {
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 24))(v128, v129, v130);
LABEL_87:
        uint64_t v202 = v10[6];
        v203 = &v116[v202];
        v204 = (char *)v117 + v202;
        int v205 = v132(&v116[v202], 1, v130);
        int v206 = v132(v204, 1, v130);
        if (v205)
        {
          if (!v206)
          {
            (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v203, v204, v130);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v203, 0, 1, v130);
            goto LABEL_105;
          }
        }
        else
        {
          if (!v206)
          {
            (*(void (**)(char *, char *, uint64_t))(v131 + 24))(v203, v204, v130);
LABEL_105:
            v116[v10[7]] = *((unsigned char *)v117 + v10[7]);
            v116[v10[8]] = *((unsigned char *)v117 + v10[8]);
            uint64_t v226 = v10[9];
            v227 = &v116[v226];
            v228 = (char *)v117 + v226;
            uint64_t v229 = sub_2E0980();
            uint64_t v230 = *(void *)(v229 - 8);
            v231 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v230 + 48);
            int v232 = v231(v227, 1, v229);
            int v233 = v231(v228, 1, v229);
            if (v232)
            {
              uint64_t v4 = v314;
              if (!v233)
              {
                (*(void (**)(char *, char *, uint64_t))(v230 + 16))(v227, v228, v229);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
                goto LABEL_124;
              }
            }
            else
            {
              uint64_t v4 = v314;
              if (!v233)
              {
                (*(void (**)(char *, char *, uint64_t))(v230 + 24))(v227, v228, v229);
LABEL_124:
                *(void *)&v116[v10[10]] = *(void *)((char *)v117 + v10[10]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v116[v10[11]] = *(void *)((char *)v117 + v10[11]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v116[v10[12]] = *((unsigned char *)v117 + v10[12]);
                *(void *)&v116[v10[13]] = *(void *)((char *)v117 + v10[13]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v273 = v10[14];
                v274 = &v116[v273];
                v275 = (void *)((char *)v117 + v273);
                *(void *)v274 = *v275;
                *((void *)v274 + 1) = v275[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v276 = v10[15];
                v277 = &v116[v276];
                v278 = (char *)v117 + v276;
                uint64_t v279 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 24))(v277, v278, v279);
                *(void *)&v116[v10[16]] = *(void *)((char *)v117 + v10[16]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v280 = v10[17];
                v281 = &v116[v280];
                v282 = (char *)v117 + v280;
                uint64_t v283 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 24))(v281, v282, v283);
                v116[v10[18]] = *((unsigned char *)v117 + v10[18]);
                *(void *)&v116[v10[19]] = *(void *)((char *)v117 + v10[19]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v116[v10[20]] = *(void *)((char *)v117 + v10[20]);
                swift_retain();
                swift_release();
                v116[v10[21]] = *((unsigned char *)v117 + v10[21]);
                uint64_t v284 = v10[22];
                v285 = &v116[v284];
                v286 = (void *)((char *)v117 + v284);
                *(void *)v285 = *v286;
                *((void *)v285 + 1) = v286[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v287 = v10[23];
                v288 = &v116[v287];
                v289 = (void *)((char *)v117 + v287);
                uint64_t v290 = *(void *)&v116[v287 + 8];
                uint64_t v291 = *(void *)((char *)v117 + v287 + 8);
                long long v5 = v313;
                if (v290)
                {
                  if (v291)
                  {
                    *(void *)v288 = *v289;
                    *((void *)v288 + 1) = v289[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v288 + 2) = v289[2];
                    *((void *)v288 + 3) = v289[3];
                    *((void *)v288 + 4) = v289[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v288);
                    uint64_t v296 = v289[4];
                    long long v297 = *((_OWORD *)v289 + 1);
                    *(_OWORD *)v288 = *(_OWORD *)v289;
                    *((_OWORD *)v288 + 1) = v297;
                    *((void *)v288 + 4) = v296;
                  }
                }
                else if (v291)
                {
                  *(void *)v288 = *v289;
                  *((void *)v288 + 1) = v289[1];
                  *((void *)v288 + 2) = v289[2];
                  *((void *)v288 + 3) = v289[3];
                  *((void *)v288 + 4) = v289[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v302 = *(_OWORD *)v289;
                  long long v303 = *((_OWORD *)v289 + 1);
                  *((void *)v288 + 4) = v289[4];
                  *(_OWORD *)v288 = v302;
                  *((_OWORD *)v288 + 1) = v303;
                }
                goto LABEL_64;
              }
              (*(void (**)(char *, uint64_t))(v230 + 8))(v227, v229);
            }
            uint64_t v272 = sub_63BAC(&qword_3CB0B8);
            memcpy(v227, v228, *(void *)(*(void *)(v272 - 8) + 64));
            goto LABEL_124;
          }
          (*(void (**)(char *, uint64_t))(v131 + 8))(v203, v130);
        }
        uint64_t v225 = sub_63BAC(&qword_3C97E8);
        memcpy(v203, v204, *(void *)(*(void *)(v225 - 8) + 64));
        goto LABEL_105;
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v128, v130);
    }
    uint64_t v201 = sub_63BAC(&qword_3C97E8);
    memcpy(v128, v129, *(void *)(*(void *)(v201 - 8) + 64));
    goto LABEL_87;
  }
  if (v118)
  {
LABEL_49:
    uint64_t v126 = sub_63BAC(&qword_3C97F0);
    memcpy(v116, v117, *(void *)(*(void *)(v126 - 8) + 64));
    goto LABEL_64;
  }
  *(void *)uint64_t v116 = *v117;
  *((void *)v116 + 1) = v117[1];
  uint64_t v119 = v10[5];
  uint64_t v120 = &v116[v119];
  uint64_t v121 = (char *)v117 + v119;
  uint64_t v122 = sub_2DF5D0();
  uint64_t v123 = *(void *)(v122 - 8);
  uint64_t v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
  swift_bridgeObjectRetain();
  if (v124(v121, 1, v122))
  {
    uint64_t v125 = sub_63BAC(&qword_3C97E8);
    memcpy(v120, v121, *(void *)(*(void *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
  }
  uint64_t v135 = v10[6];
  uint64_t v136 = &v116[v135];
  uint64_t v137 = (char *)v117 + v135;
  if (v124((char *)v117 + v135, 1, v122))
  {
    uint64_t v138 = sub_63BAC(&qword_3C97E8);
    memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v136, v137, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v136, 0, 1, v122);
  }
  v116[v10[7]] = *((unsigned char *)v117 + v10[7]);
  v116[v10[8]] = *((unsigned char *)v117 + v10[8]);
  uint64_t v139 = v10[9];
  uint64_t v140 = &v116[v139];
  long long v141 = (char *)v117 + v139;
  uint64_t v142 = sub_2E0980();
  uint64_t v143 = *(void *)(v142 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
  {
    uint64_t v144 = sub_63BAC(&qword_3CB0B8);
    memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v141, v142);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
  }
  *(void *)&v116[v10[10]] = *(void *)((char *)v117 + v10[10]);
  *(void *)&v116[v10[11]] = *(void *)((char *)v117 + v10[11]);
  v116[v10[12]] = *((unsigned char *)v117 + v10[12]);
  *(void *)&v116[v10[13]] = *(void *)((char *)v117 + v10[13]);
  uint64_t v145 = v10[14];
  uint64_t v146 = &v116[v145];
  uint64_t v147 = (void *)((char *)v117 + v145);
  *(void *)uint64_t v146 = *v147;
  *((void *)v146 + 1) = v147[1];
  uint64_t v148 = v10[15];
  v316 = (char *)v117 + v148;
  v317 = &v116[v148];
  uint64_t v149 = sub_2DE7F0();
  uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v150(v317, v316, v149);
  *(void *)&v116[v10[16]] = *(void *)((char *)v117 + v10[16]);
  uint64_t v151 = v10[17];
  uint64_t v152 = &v116[v151];
  uint64_t v153 = (char *)v117 + v151;
  uint64_t v154 = sub_2E38D0();
  uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
  swift_bridgeObjectRetain();
  v155(v152, v153, v154);
  v116[v10[18]] = *((unsigned char *)v117 + v10[18]);
  *(void *)&v116[v10[19]] = *(void *)((char *)v117 + v10[19]);
  *(void *)&v116[v10[20]] = *(void *)((char *)v117 + v10[20]);
  v116[v10[21]] = *((unsigned char *)v117 + v10[21]);
  uint64_t v156 = v10[22];
  uint64_t v157 = &v116[v156];
  uint64_t v158 = (void *)((char *)v117 + v156);
  *(void *)uint64_t v157 = *v158;
  *((void *)v157 + 1) = v158[1];
  uint64_t v159 = v10[23];
  uint64_t v160 = &v116[v159];
  id v161 = (void *)((char *)v117 + v159);
  uint64_t v162 = v161[1];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v162)
  {
    *(void *)uint64_t v160 = *v161;
    *((void *)v160 + 1) = v161[1];
    *((void *)v160 + 2) = v161[2];
    *((void *)v160 + 3) = v161[3];
    *((void *)v160 + 4) = v161[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v163 = *(_OWORD *)v161;
    long long v164 = *((_OWORD *)v161 + 1);
    *((void *)v160 + 4) = v161[4];
    *(_OWORD *)uint64_t v160 = v163;
    *((_OWORD *)v160 + 1) = v164;
  }
  long long v5 = v313;
  uint64_t v4 = v314;
  (*(void (**)(char *, void, uint64_t, int *))(v311 + 56))(v116, 0, 1, v10);
LABEL_64:
  uint64_t v165 = sub_63BAC(&qword_3C97F8);
  *(uint64_t *)((char *)v5 + *(int *)(v165 + 28)) = *(uint64_t *)((char *)v4 + *(int *)(v165 + 28));
  swift_retain();
  swift_release();
  uint64_t v166 = *(int *)(type metadata accessor for PageContent(0) + 20);
  v167 = (char *)v5 + v166;
  v168 = (char *)v4 + v166;
  uint64_t v169 = sub_2DFA90();
  uint64_t v170 = *(void *)(v169 - 8);
  uint64_t v171 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v170 + 48);
  int v172 = v171(v167, 1, v169);
  int v173 = v171(v168, 1, v169);
  if (!v172)
  {
    if (!v173)
    {
      (*(void (**)(char *, char *, uint64_t))(v170 + 24))(v167, v168, v169);
      goto LABEL_70;
    }
    (*(void (**)(char *, uint64_t))(v170 + 8))(v167, v169);
    goto LABEL_69;
  }
  if (v173)
  {
LABEL_69:
    uint64_t v174 = sub_63BAC(&qword_3CB0C0);
    memcpy(v167, v168, *(void *)(*(void *)(v174 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
LABEL_70:
  uint64_t v175 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v167[*(int *)(v175 + 28)] = *(void *)&v168[*(int *)(v175 + 28)];
  swift_retain();
  swift_release();
  *(uint64_t *)((char *)v5 + v312[5]) = *(uint64_t *)((char *)v4 + v312[5]);
  swift_retain();
  swift_release();
  uint64_t v176 = v312[6];
  v177 = *(void **)((char *)v4 + v176);
  v178 = *(void **)((char *)v5 + v176);
  *(uint64_t *)((char *)v5 + v176) = (uint64_t)v177;
  id v179 = v177;

  uint64_t v180 = v312[7];
  v181 = (char *)v5 + v180;
  v182 = (char *)v4 + v180;
  uint64_t v183 = *(void *)v182;
  LOBYTE(v182) = v182[8];
  *(void *)v181 = v183;
  v181[8] = (char)v182;
  swift_retain();
  swift_release();
  uint64_t v184 = v312[8];
  v185 = (char *)v5 + v184;
  v186 = (char *)v4 + v184;
  uint64_t v187 = *(void *)v186;
  LOBYTE(v186) = v186[8];
  *(void *)v185 = v187;
  v185[8] = (char)v186;
  swift_retain();
  swift_release();
  return v5;
}

uint64_t initializeWithTake for PageRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(v3 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v133 = *((void *)v10 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v133 + 48);
  uint64_t v134 = v3;
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v128 = v11;
    uint64_t v130 = v6;
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_2DF5D0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = v10[6];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    if (v18((char *)v9 + v20, 1, v16))
    {
      uint64_t v23 = sub_63BAC(&qword_3C97E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    uint64_t v3 = v134;
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v24 = v10[9];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_63BAC(&qword_3CB0B8);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    long long v6 = v130;
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(_OWORD *)((char *)v8 + v10[14]) = *(_OWORD *)((char *)v9 + v10[14]);
    uint64_t v30 = v10[15];
    uint64_t v31 = (char *)v8 + v30;
    uint64_t v32 = (char *)v9 + v30;
    uint64_t v33 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v34 = v10[17];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    *(_OWORD *)((char *)v8 + v10[22]) = *(_OWORD *)((char *)v9 + v10[22]);
    uint64_t v38 = v10[23];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    long long v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    *((void *)v39 + 4) = *((void *)v40 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v133 + 56))(v8, 0, 1, v10);
    uint64_t v11 = v128;
  }
  uint64_t v42 = v6[6];
  uint64_t v43 = (_OWORD *)(a1 + v42);
  uint64_t v44 = (_OWORD *)(v3 + v42);
  if (v11(v3 + v42, 1, v10))
  {
    uint64_t v45 = sub_63BAC(&qword_3C97F0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v129 = v11;
    uint64_t v131 = v6;
    *uint64_t v43 = *v44;
    uint64_t v46 = v10[5];
    uint64_t v47 = (char *)v43 + v46;
    uint64_t v48 = (char *)v44 + v46;
    uint64_t v49 = sub_2DF5D0();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    if (v51(v48, 1, v49))
    {
      uint64_t v52 = sub_63BAC(&qword_3C97E8);
      memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v53 = v10[6];
    uint64_t v54 = (char *)v43 + v53;
    uint64_t v55 = (char *)v44 + v53;
    if (v51((char *)v44 + v53, 1, v49))
    {
      uint64_t v56 = sub_63BAC(&qword_3C97E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v54, v55, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v49);
    }
    uint64_t v3 = v134;
    *((unsigned char *)v43 + v10[7]) = *((unsigned char *)v44 + v10[7]);
    *((unsigned char *)v43 + v10[8]) = *((unsigned char *)v44 + v10[8]);
    uint64_t v57 = v10[9];
    long long v58 = (char *)v43 + v57;
    long long v59 = (char *)v44 + v57;
    uint64_t v60 = sub_2E0980();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = sub_63BAC(&qword_3CB0B8);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    long long v6 = v131;
    *(void *)((char *)v43 + v10[10]) = *(void *)((char *)v44 + v10[10]);
    *(void *)((char *)v43 + v10[11]) = *(void *)((char *)v44 + v10[11]);
    *((unsigned char *)v43 + v10[12]) = *((unsigned char *)v44 + v10[12]);
    *(void *)((char *)v43 + v10[13]) = *(void *)((char *)v44 + v10[13]);
    *(_OWORD *)((char *)v43 + v10[14]) = *(_OWORD *)((char *)v44 + v10[14]);
    uint64_t v63 = v10[15];
    int v64 = (char *)v43 + v63;
    uint64_t v65 = (char *)v44 + v63;
    uint64_t v66 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    *(void *)((char *)v43 + v10[16]) = *(void *)((char *)v44 + v10[16]);
    uint64_t v67 = v10[17];
    uint64_t v68 = (char *)v43 + v67;
    uint64_t v69 = (char *)v44 + v67;
    uint64_t v70 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
    *((unsigned char *)v43 + v10[18]) = *((unsigned char *)v44 + v10[18]);
    *(void *)((char *)v43 + v10[19]) = *(void *)((char *)v44 + v10[19]);
    *(void *)((char *)v43 + v10[20]) = *(void *)((char *)v44 + v10[20]);
    *((unsigned char *)v43 + v10[21]) = *((unsigned char *)v44 + v10[21]);
    *(_OWORD *)((char *)v43 + v10[22]) = *(_OWORD *)((char *)v44 + v10[22]);
    uint64_t v71 = v10[23];
    uint64_t v72 = (char *)v43 + v71;
    uint64_t v73 = (char *)v44 + v71;
    long long v74 = *((_OWORD *)v73 + 1);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *((_OWORD *)v72 + 1) = v74;
    *((void *)v72 + 4) = *((void *)v73 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v133 + 56))(v43, 0, 1, v10);
    uint64_t v11 = v129;
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(v3 + v6[7]);
  uint64_t v75 = v6[8];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = v3 + v75;
  uint64_t v78 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
  uint64_t v79 = v6[9];
  int v80 = (_OWORD *)(a1 + v79);
  uint64_t v81 = (_OWORD *)(v3 + v79);
  if (v11(v3 + v79, 1, v10))
  {
    uint64_t v82 = sub_63BAC(&qword_3C97F0);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    _OWORD *v80 = *v81;
    uint64_t v83 = v10[5];
    uint64_t v84 = (char *)v80 + v83;
    uint64_t v85 = (char *)v81 + v83;
    uint64_t v86 = sub_2DF5D0();
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
    if (v88(v85, 1, v86))
    {
      uint64_t v89 = sub_63BAC(&qword_3C97E8);
      memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v90 = v10[6];
    uint64_t v91 = (char *)v80 + v90;
    uint64_t v92 = (char *)v81 + v90;
    if (v88((char *)v81 + v90, 1, v86))
    {
      uint64_t v93 = sub_63BAC(&qword_3C97E8);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v91, v92, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v91, 0, 1, v86);
    }
    uint64_t v3 = v134;
    *((unsigned char *)v80 + v10[7]) = *((unsigned char *)v81 + v10[7]);
    *((unsigned char *)v80 + v10[8]) = *((unsigned char *)v81 + v10[8]);
    uint64_t v94 = v10[9];
    uint64_t v95 = (char *)v80 + v94;
    uint64_t v96 = (char *)v81 + v94;
    uint64_t v97 = sub_2E0980();
    uint64_t v98 = *(void *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      uint64_t v99 = sub_63BAC(&qword_3CB0B8);
      memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    *(void *)((char *)v80 + v10[10]) = *(void *)((char *)v81 + v10[10]);
    *(void *)((char *)v80 + v10[11]) = *(void *)((char *)v81 + v10[11]);
    *((unsigned char *)v80 + v10[12]) = *((unsigned char *)v81 + v10[12]);
    *(void *)((char *)v80 + v10[13]) = *(void *)((char *)v81 + v10[13]);
    *(_OWORD *)((char *)v80 + v10[14]) = *(_OWORD *)((char *)v81 + v10[14]);
    uint64_t v100 = v10[15];
    uint64_t v101 = (char *)v80 + v100;
    uint64_t v102 = (char *)v81 + v100;
    uint64_t v103 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
    *(void *)((char *)v80 + v10[16]) = *(void *)((char *)v81 + v10[16]);
    uint64_t v104 = v10[17];
    uint64_t v105 = (char *)v80 + v104;
    uint64_t v106 = (char *)v81 + v104;
    uint64_t v107 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
    *((unsigned char *)v80 + v10[18]) = *((unsigned char *)v81 + v10[18]);
    *(void *)((char *)v80 + v10[19]) = *(void *)((char *)v81 + v10[19]);
    *(void *)((char *)v80 + v10[20]) = *(void *)((char *)v81 + v10[20]);
    *((unsigned char *)v80 + v10[21]) = *((unsigned char *)v81 + v10[21]);
    *(_OWORD *)((char *)v80 + v10[22]) = *(_OWORD *)((char *)v81 + v10[22]);
    uint64_t v108 = v10[23];
    long long v109 = (char *)v80 + v108;
    long long v110 = (char *)v81 + v108;
    long long v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)long long v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    *((void *)v109 + 4) = *((void *)v110 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v133 + 56))(v80, 0, 1, v10);
  }
  uint64_t v112 = sub_63BAC(&qword_3C97F8);
  *(void *)(a1 + *(int *)(v112 + 28)) = *(void *)(v3 + *(int *)(v112 + 28));
  uint64_t v113 = *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v114 = (char *)(a1 + v113);
  uint64_t v115 = (char *)(v3 + v113);
  uint64_t v116 = sub_2DFA90();
  uint64_t v117 = *(void *)(v116 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
  {
    uint64_t v118 = sub_63BAC(&qword_3CB0C0);
    memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
  }
  uint64_t v119 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v114[*(int *)(v119 + 28)] = *(void *)&v115[*(int *)(v119 + 28)];
  uint64_t v120 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(v3 + a3[5]);
  *(void *)(a1 + v120) = *(void *)(v3 + v120);
  uint64_t v121 = a3[7];
  uint64_t v122 = a3[8];
  uint64_t v123 = a1 + v121;
  uint64_t v124 = v3 + v121;
  *(void *)uint64_t v123 = *(void *)v124;
  *(unsigned char *)(v123 + 8) = *(unsigned char *)(v124 + 8);
  uint64_t v125 = a1 + v122;
  uint64_t v126 = v3 + v122;
  *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
  *(void *)uint64_t v125 = *(void *)v126;
  return a1;
}

uint64_t assignWithTake for PageRootView(uint64_t a1, uint64_t a2, int *a3)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Page();
  v289 = (void *)*((void *)v11 - 1);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, int *))v289[6];
  int v13 = v12((uint64_t)v9, 1, v11);
  long long v293 = v12;
  int v14 = v12((uint64_t)v10, 1, v11);
  uint64_t v291 = a3;
  uint64_t v292 = a2;
  if (!v13)
  {
    if (v14)
    {
      sub_FD610((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_7;
    }
    uint64_t v24 = v10[1];
    *(void *)uint64_t v9 = *v10;
    *((void *)v9 + 1) = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = v11[5];
    uint64_t v26 = &v9[v25];
    uint64_t v27 = (char *)v10 + v25;
    uint64_t v28 = sub_2DF5D0();
    uint64_t v287 = *(void **)(v28 - 8);
    uint64_t v29 = (uint64_t (*)(char *, uint64_t, uint64_t))v287[6];
    int v30 = v29(v26, 1, v28);
    int v31 = v29(v27, 1, v28);
    if (v30)
    {
      if (!v31)
      {
        ((void (*)(char *, char *, uint64_t))v287[4])(v26, v27, v28);
        ((void (*)(char *, void, uint64_t, uint64_t))v287[7])(v26, 0, 1, v28);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v31)
      {
        ((void (*)(char *, char *, uint64_t))v287[5])(v26, v27, v28);
LABEL_41:
        uint64_t v98 = v11[6];
        uint64_t v99 = &v9[v98];
        uint64_t v100 = (char *)v10 + v98;
        int v101 = v29(&v9[v98], 1, v28);
        int v102 = v29(v100, 1, v28);
        if (v101)
        {
          if (!v102)
          {
            ((void (*)(char *, char *, uint64_t))v287[4])(v99, v100, v28);
            ((void (*)(char *, void, uint64_t, uint64_t))v287[7])(v99, 0, 1, v28);
            goto LABEL_53;
          }
        }
        else
        {
          if (!v102)
          {
            ((void (*)(char *, char *, uint64_t))v287[5])(v99, v100, v28);
LABEL_53:
            v9[v11[7]] = *((unsigned char *)v10 + v11[7]);
            v9[v11[8]] = *((unsigned char *)v10 + v11[8]);
            uint64_t v110 = v11[9];
            long long v111 = &v9[v110];
            uint64_t v112 = (char *)v10 + v110;
            uint64_t v113 = sub_2E0980();
            uint64_t v114 = *(void *)(v113 - 8);
            uint64_t v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
            __src = v111;
            LODWORD(v111) = v115(v111, 1, v113);
            int v116 = v115(v112, 1, v113);
            if (v111)
            {
              a2 = v292;
              if (v116)
              {
                size_t v117 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
                uint64_t v118 = __src;
LABEL_64:
                memcpy(v118, v112, v117);
                goto LABEL_75;
              }
              (*(void (**)(void *, char *, uint64_t))(v114 + 32))(__src, v112, v113);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(__src, 0, 1, v113);
            }
            else
            {
              a2 = v292;
              if (v116)
              {
                (*(void (**)(void *, uint64_t))(v114 + 8))(__src, v113);
                size_t v117 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
                uint64_t v118 = __src;
                goto LABEL_64;
              }
              (*(void (**)(void *, char *, uint64_t))(v114 + 40))(__src, v112, v113);
            }
LABEL_75:
            *(void *)&v9[v11[10]] = *(void *)((char *)v10 + v11[10]);
            swift_bridgeObjectRelease();
            *(void *)&v9[v11[11]] = *(void *)((char *)v10 + v11[11]);
            swift_bridgeObjectRelease();
            v9[v11[12]] = *((unsigned char *)v10 + v11[12]);
            *(void *)&v9[v11[13]] = *(void *)((char *)v10 + v11[13]);
            swift_bridgeObjectRelease();
            uint64_t v129 = v11[14];
            uint64_t v130 = &v9[v129];
            uint64_t v131 = (void *)((char *)v10 + v129);
            uint64_t v133 = *v131;
            uint64_t v132 = v131[1];
            *(void *)uint64_t v130 = v133;
            *((void *)v130 + 1) = v132;
            swift_bridgeObjectRelease();
            uint64_t v134 = v11[15];
            uint64_t v135 = &v9[v134];
            uint64_t v136 = (char *)v10 + v134;
            uint64_t v137 = sub_2DE7F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 40))(v135, v136, v137);
            *(void *)&v9[v11[16]] = *(void *)((char *)v10 + v11[16]);
            swift_bridgeObjectRelease();
            uint64_t v138 = v11[17];
            uint64_t v139 = &v9[v138];
            uint64_t v140 = (char *)v10 + v138;
            uint64_t v141 = sub_2E38D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 40))(v139, v140, v141);
            v9[v11[18]] = *((unsigned char *)v10 + v11[18]);
            *(void *)&v9[v11[19]] = *(void *)((char *)v10 + v11[19]);
            swift_bridgeObjectRelease();
            *(void *)&v9[v11[20]] = *(void *)((char *)v10 + v11[20]);
            swift_release();
            v9[v11[21]] = *((unsigned char *)v10 + v11[21]);
            uint64_t v142 = v11[22];
            uint64_t v143 = &v9[v142];
            uint64_t v144 = (void *)((char *)v10 + v142);
            uint64_t v146 = *v144;
            uint64_t v145 = v144[1];
            *(void *)uint64_t v143 = v146;
            *((void *)v143 + 1) = v145;
            swift_bridgeObjectRelease();
            uint64_t v147 = v11[23];
            uint64_t v148 = &v9[v147];
            uint64_t v149 = (void *)((char *)v10 + v147);
            if (*((void *)v148 + 1))
            {
              uint64_t v150 = v149[1];
              if (v150)
              {
                *(void *)uint64_t v148 = *v149;
                *((void *)v148 + 1) = v150;
                swift_bridgeObjectRelease();
                *((void *)v148 + 2) = v149[2];
                uint64_t v151 = v149[4];
                *((void *)v148 + 3) = v149[3];
                *((void *)v148 + 4) = v151;
                swift_bridgeObjectRelease();
                goto LABEL_8;
              }
              sub_B0F2C((uint64_t)v148);
            }
            long long v152 = *((_OWORD *)v149 + 1);
            *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
            *((_OWORD *)v148 + 1) = v152;
            *((void *)v148 + 4) = v149[4];
            goto LABEL_8;
          }
          ((void (*)(char *, uint64_t))v287[1])(v99, v28);
        }
        uint64_t v109 = sub_63BAC(&qword_3C97E8);
        memcpy(v99, v100, *(void *)(*(void *)(v109 - 8) + 64));
        goto LABEL_53;
      }
      ((void (*)(char *, uint64_t))v287[1])(v26, v28);
    }
    uint64_t v97 = sub_63BAC(&qword_3C97E8);
    memcpy(v26, v27, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_41;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v22 = sub_63BAC(&qword_3C97F0);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_8:
    uint64_t v23 = v293;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v15 = v11[5];
  uint64_t v16 = &v9[v15];
  uint64_t v17 = (char *)v10 + v15;
  uint64_t v18 = sub_2DF5D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = sub_63BAC(&qword_3C97E8);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v32 = v11[6];
  uint64_t v33 = &v9[v32];
  uint64_t v34 = (char *)v10 + v32;
  if (v20((char *)v10 + v32, 1, v18))
  {
    uint64_t v35 = sub_63BAC(&qword_3C97E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v33, v34, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v33, 0, 1, v18);
  }
  v9[v11[7]] = *((unsigned char *)v10 + v11[7]);
  v9[v11[8]] = *((unsigned char *)v10 + v11[8]);
  uint64_t v36 = v11[9];
  uint64_t v37 = &v9[v36];
  uint64_t v38 = (char *)v10 + v36;
  uint64_t v39 = sub_2E0980();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_63BAC(&qword_3CB0B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v23 = v293;
  *(void *)&v9[v11[10]] = *(void *)((char *)v10 + v11[10]);
  *(void *)&v9[v11[11]] = *(void *)((char *)v10 + v11[11]);
  v9[v11[12]] = *((unsigned char *)v10 + v11[12]);
  *(void *)&v9[v11[13]] = *(void *)((char *)v10 + v11[13]);
  *(_OWORD *)&v9[v11[14]] = *(_OWORD *)((char *)v10 + v11[14]);
  uint64_t v42 = v11[15];
  uint64_t v43 = &v9[v42];
  uint64_t v44 = (char *)v10 + v42;
  uint64_t v45 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  *(void *)&v9[v11[16]] = *(void *)((char *)v10 + v11[16]);
  uint64_t v46 = v11[17];
  uint64_t v47 = &v9[v46];
  uint64_t v48 = (char *)v10 + v46;
  uint64_t v49 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  v9[v11[18]] = *((unsigned char *)v10 + v11[18]);
  *(void *)&v9[v11[19]] = *(void *)((char *)v10 + v11[19]);
  *(void *)&v9[v11[20]] = *(void *)((char *)v10 + v11[20]);
  v9[v11[21]] = *((unsigned char *)v10 + v11[21]);
  *(_OWORD *)&v9[v11[22]] = *(_OWORD *)((char *)v10 + v11[22]);
  uint64_t v50 = v11[23];
  uint64_t v51 = &v9[v50];
  uint64_t v52 = (char *)v10 + v50;
  long long v53 = *((_OWORD *)v52 + 1);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v53;
  *((void *)v51 + 4) = *((void *)v52 + 4);
  ((void (*)(char *, void, uint64_t, int *))v289[7])(v9, 0, 1, v11);
  a2 = v292;
LABEL_20:
  uint64_t v54 = v7[6];
  uint64_t v55 = (char *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  int v57 = v23(a1 + v54, 1, v11);
  int v58 = v23((uint64_t)v56, 1, v11);
  if (!v57)
  {
    if (v58)
    {
      sub_FD610((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_26;
    }
    uint64_t v67 = v56[1];
    *(void *)uint64_t v55 = *v56;
    *((void *)v55 + 1) = v67;
    swift_bridgeObjectRelease();
    uint64_t v68 = v11[5];
    uint64_t v69 = &v55[v68];
    uint64_t v70 = (char *)v56 + v68;
    uint64_t v71 = sub_2DF5D0();
    v288 = *(void **)(v71 - 8);
    uint64_t v72 = (uint64_t (*)(char *, uint64_t, uint64_t))v288[6];
    int v73 = v72(v69, 1, v71);
    int v74 = v72(v70, 1, v71);
    if (v73)
    {
      if (!v74)
      {
        ((void (*)(char *, char *, uint64_t))v288[4])(v69, v70, v71);
        ((void (*)(char *, void, uint64_t, uint64_t))v288[7])(v69, 0, 1, v71);
        goto LABEL_47;
      }
    }
    else
    {
      if (!v74)
      {
        ((void (*)(char *, char *, uint64_t))v288[5])(v69, v70, v71);
LABEL_47:
        uint64_t v104 = v11[6];
        uint64_t v105 = &v55[v104];
        uint64_t v106 = (char *)v56 + v104;
        int v107 = v72(&v55[v104], 1, v71);
        int v108 = v72(v106, 1, v71);
        if (v107)
        {
          if (!v108)
          {
            ((void (*)(char *, char *, uint64_t))v288[4])(v105, v106, v71);
            ((void (*)(char *, void, uint64_t, uint64_t))v288[7])(v105, 0, 1, v71);
            goto LABEL_59;
          }
        }
        else
        {
          if (!v108)
          {
            ((void (*)(char *, char *, uint64_t))v288[5])(v105, v106, v71);
LABEL_59:
            v55[v11[7]] = *((unsigned char *)v56 + v11[7]);
            v55[v11[8]] = *((unsigned char *)v56 + v11[8]);
            uint64_t v120 = v11[9];
            uint64_t v121 = &v55[v120];
            uint64_t v122 = (char *)v56 + v120;
            uint64_t v123 = sub_2E0980();
            uint64_t v124 = *(void *)(v123 - 8);
            uint64_t v125 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
            __srca = v121;
            LODWORD(v121) = v125(v121, 1, v123);
            int v126 = v125(v122, 1, v123);
            if (v121)
            {
              a2 = v292;
              if (v126)
              {
                size_t v127 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
                uint64_t v128 = __srca;
LABEL_67:
                memcpy(v128, v122, v127);
                goto LABEL_81;
              }
              (*(void (**)(void *, char *, uint64_t))(v124 + 32))(__srca, v122, v123);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(__srca, 0, 1, v123);
            }
            else
            {
              a2 = v292;
              if (v126)
              {
                (*(void (**)(void *, uint64_t))(v124 + 8))(__srca, v123);
                size_t v127 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
                uint64_t v128 = __srca;
                goto LABEL_67;
              }
              (*(void (**)(void *, char *, uint64_t))(v124 + 40))(__srca, v122, v123);
            }
LABEL_81:
            *(void *)&v55[v11[10]] = *(void *)((char *)v56 + v11[10]);
            swift_bridgeObjectRelease();
            *(void *)&v55[v11[11]] = *(void *)((char *)v56 + v11[11]);
            swift_bridgeObjectRelease();
            v55[v11[12]] = *((unsigned char *)v56 + v11[12]);
            *(void *)&v55[v11[13]] = *(void *)((char *)v56 + v11[13]);
            swift_bridgeObjectRelease();
            uint64_t v153 = v11[14];
            uint64_t v154 = &v55[v153];
            uint64_t v155 = (void *)((char *)v56 + v153);
            uint64_t v157 = *v155;
            uint64_t v156 = v155[1];
            *(void *)uint64_t v154 = v157;
            *((void *)v154 + 1) = v156;
            swift_bridgeObjectRelease();
            uint64_t v158 = v11[15];
            uint64_t v159 = &v55[v158];
            uint64_t v160 = (char *)v56 + v158;
            uint64_t v161 = sub_2DE7F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 40))(v159, v160, v161);
            *(void *)&v55[v11[16]] = *(void *)((char *)v56 + v11[16]);
            swift_bridgeObjectRelease();
            uint64_t v162 = v11[17];
            long long v163 = &v55[v162];
            long long v164 = (char *)v56 + v162;
            uint64_t v165 = sub_2E38D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 40))(v163, v164, v165);
            v55[v11[18]] = *((unsigned char *)v56 + v11[18]);
            *(void *)&v55[v11[19]] = *(void *)((char *)v56 + v11[19]);
            swift_bridgeObjectRelease();
            *(void *)&v55[v11[20]] = *(void *)((char *)v56 + v11[20]);
            swift_release();
            v55[v11[21]] = *((unsigned char *)v56 + v11[21]);
            uint64_t v166 = v11[22];
            v167 = &v55[v166];
            v168 = (void *)((char *)v56 + v166);
            uint64_t v170 = *v168;
            uint64_t v169 = v168[1];
            *(void *)v167 = v170;
            *((void *)v167 + 1) = v169;
            swift_bridgeObjectRelease();
            uint64_t v171 = v11[23];
            int v172 = &v55[v171];
            int v173 = (void *)((char *)v56 + v171);
            if (*((void *)v172 + 1))
            {
              uint64_t v174 = v173[1];
              if (v174)
              {
                *(void *)int v172 = *v173;
                *((void *)v172 + 1) = v174;
                swift_bridgeObjectRelease();
                *((void *)v172 + 2) = v173[2];
                uint64_t v175 = v173[4];
                *((void *)v172 + 3) = v173[3];
                *((void *)v172 + 4) = v175;
                swift_bridgeObjectRelease();
LABEL_86:
                uint64_t v23 = v293;
                goto LABEL_87;
              }
              sub_B0F2C((uint64_t)v172);
            }
            long long v176 = *((_OWORD *)v173 + 1);
            *(_OWORD *)int v172 = *(_OWORD *)v173;
            *((_OWORD *)v172 + 1) = v176;
            *((void *)v172 + 4) = v173[4];
            goto LABEL_86;
          }
          ((void (*)(char *, uint64_t))v288[1])(v105, v71);
        }
        uint64_t v119 = sub_63BAC(&qword_3C97E8);
        memcpy(v105, v106, *(void *)(*(void *)(v119 - 8) + 64));
        goto LABEL_59;
      }
      ((void (*)(char *, uint64_t))v288[1])(v69, v71);
    }
    uint64_t v103 = sub_63BAC(&qword_3C97E8);
    memcpy(v69, v70, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_47;
  }
  if (v58)
  {
LABEL_26:
    uint64_t v66 = sub_63BAC(&qword_3C97F0);
    memcpy(v55, v56, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_87;
  }
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  uint64_t v59 = v11[5];
  uint64_t v60 = &v55[v59];
  uint64_t v61 = (char *)v56 + v59;
  uint64_t v62 = sub_2DF5D0();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v64(v61, 1, v62))
  {
    uint64_t v65 = sub_63BAC(&qword_3C97E8);
    memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  uint64_t v75 = v11[6];
  uint64_t v76 = &v55[v75];
  uint64_t v77 = (char *)v56 + v75;
  if (v64((char *)v56 + v75, 1, v62))
  {
    uint64_t v78 = sub_63BAC(&qword_3C97E8);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v76, v77, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v76, 0, 1, v62);
  }
  v55[v11[7]] = *((unsigned char *)v56 + v11[7]);
  v55[v11[8]] = *((unsigned char *)v56 + v11[8]);
  uint64_t v79 = v11[9];
  int v80 = &v55[v79];
  uint64_t v81 = (char *)v56 + v79;
  uint64_t v82 = sub_2E0980();
  uint64_t v83 = *(void *)(v82 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
  {
    uint64_t v84 = sub_63BAC(&qword_3CB0B8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  }
  uint64_t v23 = v293;
  *(void *)&v55[v11[10]] = *(void *)((char *)v56 + v11[10]);
  *(void *)&v55[v11[11]] = *(void *)((char *)v56 + v11[11]);
  v55[v11[12]] = *((unsigned char *)v56 + v11[12]);
  *(void *)&v55[v11[13]] = *(void *)((char *)v56 + v11[13]);
  *(_OWORD *)&v55[v11[14]] = *(_OWORD *)((char *)v56 + v11[14]);
  uint64_t v85 = v11[15];
  uint64_t v86 = &v55[v85];
  uint64_t v87 = (char *)v56 + v85;
  uint64_t v88 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
  *(void *)&v55[v11[16]] = *(void *)((char *)v56 + v11[16]);
  uint64_t v89 = v11[17];
  uint64_t v90 = &v55[v89];
  uint64_t v91 = (char *)v56 + v89;
  uint64_t v92 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
  v55[v11[18]] = *((unsigned char *)v56 + v11[18]);
  *(void *)&v55[v11[19]] = *(void *)((char *)v56 + v11[19]);
  *(void *)&v55[v11[20]] = *(void *)((char *)v56 + v11[20]);
  v55[v11[21]] = *((unsigned char *)v56 + v11[21]);
  *(_OWORD *)&v55[v11[22]] = *(_OWORD *)((char *)v56 + v11[22]);
  uint64_t v93 = v11[23];
  uint64_t v94 = &v55[v93];
  uint64_t v95 = (char *)v56 + v93;
  long long v96 = *((_OWORD *)v95 + 1);
  *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  *((_OWORD *)v94 + 1) = v96;
  *((void *)v94 + 4) = *((void *)v95 + 4);
  ((void (*)(char *, void, uint64_t, int *))v289[7])(v55, 0, 1, v11);
  a2 = v292;
LABEL_87:
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v177 = v7[8];
  uint64_t v178 = a1 + v177;
  uint64_t v179 = a2 + v177;
  uint64_t v180 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 40))(v178, v179, v180);
  uint64_t v181 = v7[9];
  v182 = (void *)(a1 + v181);
  uint64_t v183 = (char *)(a2 + v181);
  LODWORD(v178) = v23(a1 + v181, 1, v11);
  int v184 = v23((uint64_t)v183, 1, v11);
  if (v178)
  {
    if (!v184)
    {
      *(_OWORD *)v182 = *(_OWORD *)v183;
      uint64_t v185 = v11[5];
      v186 = (char *)v182 + v185;
      uint64_t v187 = &v183[v185];
      uint64_t v188 = sub_2DF5D0();
      uint64_t v189 = *(void *)(v188 - 8);
      uint64_t v190 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
      if (v190(v187, 1, v188))
      {
        uint64_t v191 = sub_63BAC(&qword_3C97E8);
        memcpy(v186, v187, *(void *)(*(void *)(v191 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v186, v187, v188);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
      }
      uint64_t v201 = v11[6];
      uint64_t v202 = (char *)v182 + v201;
      v203 = &v183[v201];
      if (v190(&v183[v201], 1, v188))
      {
        uint64_t v204 = sub_63BAC(&qword_3C97E8);
        memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v202, v203, v188);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v202, 0, 1, v188);
      }
      *((unsigned char *)v182 + v11[7]) = v183[v11[7]];
      *((unsigned char *)v182 + v11[8]) = v183[v11[8]];
      uint64_t v205 = v11[9];
      int v206 = (char *)v182 + v205;
      uint64_t v207 = &v183[v205];
      uint64_t v208 = sub_2E0980();
      uint64_t v209 = *(void *)(v208 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v207, 1, v208))
      {
        uint64_t v210 = sub_63BAC(&qword_3CB0B8);
        memcpy(v206, v207, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v206, v207, v208);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
      }
      a2 = v292;
      *(void *)((char *)v182 + v11[10]) = *(void *)&v183[v11[10]];
      *(void *)((char *)v182 + v11[11]) = *(void *)&v183[v11[11]];
      *((unsigned char *)v182 + v11[12]) = v183[v11[12]];
      *(void *)((char *)v182 + v11[13]) = *(void *)&v183[v11[13]];
      *(_OWORD *)((char *)v182 + v11[14]) = *(_OWORD *)&v183[v11[14]];
      uint64_t v211 = v11[15];
      uint64_t v212 = (char *)v182 + v211;
      v213 = &v183[v211];
      uint64_t v214 = sub_2DE7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
      *(void *)((char *)v182 + v11[16]) = *(void *)&v183[v11[16]];
      uint64_t v215 = v11[17];
      uint64_t v216 = (char *)v182 + v215;
      uint64_t v217 = &v183[v215];
      uint64_t v218 = sub_2E38D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
      *((unsigned char *)v182 + v11[18]) = v183[v11[18]];
      *(void *)((char *)v182 + v11[19]) = *(void *)&v183[v11[19]];
      *(void *)((char *)v182 + v11[20]) = *(void *)&v183[v11[20]];
      *((unsigned char *)v182 + v11[21]) = v183[v11[21]];
      *(_OWORD *)((char *)v182 + v11[22]) = *(_OWORD *)&v183[v11[22]];
      uint64_t v219 = v11[23];
      uint64_t v220 = (char *)v182 + v219;
      uint64_t v221 = &v183[v219];
      long long v222 = *((_OWORD *)v221 + 1);
      *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
      *((_OWORD *)v220 + 1) = v222;
      *((void *)v220 + 4) = *((void *)v221 + 4);
      ((void (*)(void *, void, uint64_t, int *))v289[7])(v182, 0, 1, v11);
      goto LABEL_129;
    }
LABEL_93:
    uint64_t v192 = sub_63BAC(&qword_3C97F0);
    memcpy(v182, v183, *(void *)(*(void *)(v192 - 8) + 64));
    goto LABEL_129;
  }
  if (v184)
  {
    sub_FD610((uint64_t)v182, (uint64_t (*)(void))type metadata accessor for Page);
    goto LABEL_93;
  }
  uint64_t v193 = *((void *)v183 + 1);
  void *v182 = *(void *)v183;
  v182[1] = v193;
  swift_bridgeObjectRelease();
  uint64_t v194 = v11[5];
  uint64_t v195 = (char *)v182 + v194;
  uint64_t v196 = &v183[v194];
  uint64_t v197 = sub_2DF5D0();
  uint64_t v294 = *(void **)(v197 - 8);
  v198 = (uint64_t (*)(char *, uint64_t, uint64_t))v294[6];
  int v199 = v198(v195, 1, v197);
  int v200 = v198(v196, 1, v197);
  if (v199)
  {
    if (!v200)
    {
      ((void (*)(char *, char *, uint64_t))v294[4])(v195, v196, v197);
      ((void (*)(char *, void, uint64_t, uint64_t))v294[7])(v195, 0, 1, v197);
      goto LABEL_108;
    }
    goto LABEL_107;
  }
  if (v200)
  {
    ((void (*)(char *, uint64_t))v294[1])(v195, v197);
LABEL_107:
    uint64_t v223 = sub_63BAC(&qword_3C97E8);
    memcpy(v195, v196, *(void *)(*(void *)(v223 - 8) + 64));
    goto LABEL_108;
  }
  ((void (*)(char *, char *, uint64_t))v294[5])(v195, v196, v197);
LABEL_108:
  uint64_t v224 = v11[6];
  uint64_t v225 = (char *)v182 + v224;
  uint64_t v226 = &v183[v224];
  int v227 = v198((char *)v182 + v224, 1, v197);
  int v228 = v198(v226, 1, v197);
  if (v227)
  {
    if (!v228)
    {
      ((void (*)(char *, char *, uint64_t))v294[4])(v225, v226, v197);
      ((void (*)(char *, void, uint64_t, uint64_t))v294[7])(v225, 0, 1, v197);
      goto LABEL_114;
    }
    goto LABEL_113;
  }
  if (v228)
  {
    ((void (*)(char *, uint64_t))v294[1])(v225, v197);
LABEL_113:
    uint64_t v229 = sub_63BAC(&qword_3C97E8);
    memcpy(v225, v226, *(void *)(*(void *)(v229 - 8) + 64));
    goto LABEL_114;
  }
  ((void (*)(char *, char *, uint64_t))v294[5])(v225, v226, v197);
LABEL_114:
  *((unsigned char *)v182 + v11[7]) = v183[v11[7]];
  *((unsigned char *)v182 + v11[8]) = v183[v11[8]];
  uint64_t v230 = v11[9];
  v231 = (char *)v182 + v230;
  int v232 = &v183[v230];
  uint64_t v233 = sub_2E0980();
  uint64_t v234 = *(void *)(v233 - 8);
  uint64_t v235 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v234 + 48);
  uint64_t v290 = v231;
  LODWORD(v231) = v235(v231, 1, v233);
  int v236 = v235(v232, 1, v233);
  if (v231)
  {
    if (!v236)
    {
      (*(void (**)(void *, char *, uint64_t))(v234 + 32))(v290, v232, v233);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v234 + 56))(v290, 0, 1, v233);
      goto LABEL_124;
    }
    size_t v237 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
    uint64_t v238 = v290;
  }
  else
  {
    if (!v236)
    {
      (*(void (**)(void *, char *, uint64_t))(v234 + 40))(v290, v232, v233);
      goto LABEL_124;
    }
    (*(void (**)(void *, uint64_t))(v234 + 8))(v290, v233);
    size_t v237 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
    uint64_t v238 = v290;
  }
  memcpy(v238, v232, v237);
LABEL_124:
  *(void *)((char *)v182 + v11[10]) = *(void *)&v183[v11[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v182 + v11[11]) = *(void *)&v183[v11[11]];
  swift_bridgeObjectRelease();
  *((unsigned char *)v182 + v11[12]) = v183[v11[12]];
  *(void *)((char *)v182 + v11[13]) = *(void *)&v183[v11[13]];
  swift_bridgeObjectRelease();
  uint64_t v239 = v11[14];
  v240 = (void *)((char *)v182 + v239);
  uint64_t v241 = (uint64_t *)&v183[v239];
  uint64_t v243 = *v241;
  uint64_t v242 = v241[1];
  void *v240 = v243;
  v240[1] = v242;
  swift_bridgeObjectRelease();
  uint64_t v244 = v11[15];
  uint64_t v245 = (char *)v182 + v244;
  uint64_t v246 = &v183[v244];
  uint64_t v247 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 40))(v245, v246, v247);
  *(void *)((char *)v182 + v11[16]) = *(void *)&v183[v11[16]];
  swift_bridgeObjectRelease();
  uint64_t v248 = v11[17];
  uint64_t v249 = (char *)v182 + v248;
  v250 = &v183[v248];
  uint64_t v251 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 40))(v249, v250, v251);
  *((unsigned char *)v182 + v11[18]) = v183[v11[18]];
  *(void *)((char *)v182 + v11[19]) = *(void *)&v183[v11[19]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v182 + v11[20]) = *(void *)&v183[v11[20]];
  swift_release();
  *((unsigned char *)v182 + v11[21]) = v183[v11[21]];
  uint64_t v252 = v11[22];
  uint64_t v253 = (void *)((char *)v182 + v252);
  uint64_t v254 = (uint64_t *)&v183[v252];
  uint64_t v256 = *v254;
  uint64_t v255 = v254[1];
  *uint64_t v253 = v256;
  v253[1] = v255;
  swift_bridgeObjectRelease();
  uint64_t v257 = v11[23];
  v258 = (void *)((char *)v182 + v257);
  v259 = &v183[v257];
  a2 = v292;
  if (*(void *)((char *)v182 + v257 + 8))
  {
    uint64_t v260 = *((void *)v259 + 1);
    if (v260)
    {
      void *v258 = *(void *)v259;
      v258[1] = v260;
      swift_bridgeObjectRelease();
      v258[2] = *((void *)v259 + 2);
      uint64_t v261 = *((void *)v259 + 4);
      v258[3] = *((void *)v259 + 3);
      v258[4] = v261;
      swift_bridgeObjectRelease();
      goto LABEL_129;
    }
    sub_B0F2C((uint64_t)v258);
  }
  long long v262 = *((_OWORD *)v259 + 1);
  *(_OWORD *)v258 = *(_OWORD *)v259;
  *((_OWORD *)v258 + 1) = v262;
  v258[4] = *((void *)v259 + 4);
LABEL_129:
  uint64_t v263 = sub_63BAC(&qword_3C97F8);
  *(void *)(a1 + *(int *)(v263 + 28)) = *(void *)(a2 + *(int *)(v263 + 28));
  swift_release();
  uint64_t v264 = *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v265 = (char *)(a1 + v264);
  v266 = (char *)(a2 + v264);
  uint64_t v267 = sub_2DFA90();
  uint64_t v268 = *(void *)(v267 - 8);
  v269 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v268 + 48);
  int v270 = v269(v265, 1, v267);
  int v271 = v269(v266, 1, v267);
  if (!v270)
  {
    if (!v271)
    {
      (*(void (**)(char *, char *, uint64_t))(v268 + 40))(v265, v266, v267);
      goto LABEL_135;
    }
    (*(void (**)(char *, uint64_t))(v268 + 8))(v265, v267);
    goto LABEL_134;
  }
  if (v271)
  {
LABEL_134:
    uint64_t v272 = sub_63BAC(&qword_3CB0C0);
    memcpy(v265, v266, *(void *)(*(void *)(v272 - 8) + 64));
    goto LABEL_135;
  }
  (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v265, v266, v267);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v265, 0, 1, v267);
LABEL_135:
  uint64_t v273 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v265[*(int *)(v273 + 28)] = *(void *)&v266[*(int *)(v273 + 28)];
  swift_release();
  *(void *)(a1 + v291[5]) = *(void *)(a2 + v291[5]);
  swift_release();
  uint64_t v274 = v291[6];
  v275 = *(void **)(a1 + v274);
  *(void *)(a1 + v274) = *(void *)(a2 + v274);

  uint64_t v276 = v291[7];
  uint64_t v277 = a1 + v276;
  v278 = (uint64_t *)(a2 + v276);
  uint64_t v279 = *v278;
  LOBYTE(v278) = *((unsigned char *)v278 + 8);
  *(void *)uint64_t v277 = v279;
  *(unsigned char *)(v277 + 8) = (_BYTE)v278;
  swift_release();
  uint64_t v280 = v291[8];
  uint64_t v281 = a1 + v280;
  v282 = (uint64_t *)(a2 + v280);
  uint64_t v283 = *v282;
  LOBYTE(v282) = *((unsigned char *)v282 + 8);
  *(void *)uint64_t v281 = v283;
  *(unsigned char *)(v281 + 8) = (_BYTE)v282;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FC328);
}

uint64_t sub_FC328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PageRootView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FC3FC);
}

uint64_t sub_FC3FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PageContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_FC4B8()
{
  uint64_t result = type metadata accessor for PageContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_FC56C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_FC5F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_FC65C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_FC6B0()
{
  type metadata accessor for PageRootView();

  return sub_F0C8C();
}

uint64_t sub_FC714()
{
  uint64_t v2 = *(void *)(type metadata accessor for PageRootView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_8BBE0;
  return sub_F007C(v3);
}

uint64_t sub_FC7E0()
{
  uint64_t v1 = v0;
  uint64_t v74 = type metadata accessor for PageRootView();
  uint64_t v76 = *(unsigned __int8 *)(*(void *)(v74 - 8) + 80);
  uint64_t v2 = (v76 + 16) & ~v76;
  uint64_t v72 = *(void *)(*(void *)(v74 - 8) + 64);
  uint64_t v3 = (int *)type metadata accessor for Page();
  uint64_t v4 = *((void *)v3 - 1);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v75 = *(void *)(v4 + 64);
  uint64_t v6 = v1 + v2;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1 + v2);
  uint64_t v7 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v8 = v1 + v2 + v7[5];
  uint64_t v9 = *(unsigned int (**)(void, void, void))(v4 + 48);
  uint64_t v77 = v5;
  uint64_t v78 = v9;
  if (!v9(v8, 1, v3))
  {
    uint64_t v70 = v1;
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v3[5];
    uint64_t v11 = sub_2DF5D0();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (!v13(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v14 = v8 + v3[6];
    if (!v13(v14, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    }
    uint64_t v15 = v8 + v3[9];
    uint64_t v16 = sub_2E0980();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v1 = v70;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v8 + v3[15];
    uint64_t v19 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    uint64_t v20 = v8 + v3[17];
    uint64_t v21 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v77;
    uint64_t v9 = v78;
    uint64_t v2 = (v76 + 16) & ~v76;
    if (*(void *)(v8 + v3[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v73 = v72 + v5;
  uint64_t v22 = v6 + v7[6];
  if (!v9(v22, 1, v3))
  {
    uint64_t v69 = v2;
    uint64_t v71 = v1;
    swift_bridgeObjectRelease();
    uint64_t v23 = v22 + v3[5];
    uint64_t v24 = sub_2DF5D0();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (!v26(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v27 = v22 + v3[6];
    if (!v26(v27, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    }
    uint64_t v28 = v22 + v3[9];
    uint64_t v29 = sub_2E0980();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v5 = v77;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v22 + v3[15];
    uint64_t v32 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v22 + v3[17];
    uint64_t v34 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = v69;
    uint64_t v1 = v71;
    if (*(void *)(v22 + v3[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v35 = v2 + v73;
  uint64_t v36 = v6 + v7[8];
  uint64_t v37 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  uint64_t v38 = v6 + v7[9];
  if (!v78(v38, 1, v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = v38 + v3[5];
    uint64_t v40 = sub_2DF5D0();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (!v42(v39, 1, v40)) {
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
    }
    uint64_t v43 = v38 + v3[6];
    if (!v42(v43, 1, v40)) {
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v40);
    }
    uint64_t v44 = v38 + v3[9];
    uint64_t v45 = sub_2E0980();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v5 = v77;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v38 + v3[15];
    uint64_t v48 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
    swift_bridgeObjectRelease();
    uint64_t v49 = v38 + v3[17];
    uint64_t v50 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v38 + v3[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v51 = v35 & ~v5;
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v52 = v6 + *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v53 = sub_2DFA90();
  uint64_t v54 = *(void *)(v53 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53)) {
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
  }
  sub_63BAC(&qword_3CB0A0);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v55 = v1 + v51;
  swift_bridgeObjectRelease();
  uint64_t v56 = v1 + v51 + v3[5];
  uint64_t v57 = sub_2DF5D0();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  if (!v59(v56, 1, v57)) {
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  }
  uint64_t v60 = v55 + v3[6];
  if (!v59(v60, 1, v57)) {
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v57);
  }
  uint64_t v61 = v55 + v3[9];
  uint64_t v62 = sub_2E0980();
  uint64_t v63 = *(void *)(v62 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62)) {
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v64 = v55 + v3[15];
  uint64_t v65 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
  swift_bridgeObjectRelease();
  uint64_t v66 = v55 + v3[17];
  uint64_t v67 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v55 + v3[23] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v1, v51 + v75, v76 | v5 | 7);
}

uint64_t sub_FD464()
{
  uint64_t v2 = *(void *)(type metadata accessor for PageRootView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Page() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_6E3CC;
  return sub_F3DEC(v7, v8);
}

uint64_t sub_FD5A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_FD610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_FD674()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageRootView();
  uint64_t v57 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v58 = v2;
  uint64_t v55 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v56 = (v57 + 16) & ~v57;
  uint64_t v3 = v0 + v56;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + v56);
  uint64_t v4 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = v0 + v56 + v4[5];
  unint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v52 = v7;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = sub_2DF5D0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = v5 + v6[6];
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    uint64_t v13 = v5 + v6[9];
    uint64_t v14 = sub_2E0980();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v7 = v52;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[15];
    uint64_t v17 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v5 + v6[17];
    uint64_t v19 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v5 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = v3 + v4[6];
  if (!v7(v20, 1, v6))
  {
    uint64_t v53 = v7;
    uint64_t v54 = v1;
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + v6[5];
    uint64_t v22 = sub_2DF5D0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v6[6];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v6[9];
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v7 = v53;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v20 + v6[15];
    uint64_t v30 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v20 + v6[17];
    uint64_t v32 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v1 = v54;
    if (*(void *)(v20 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = v3 + v4[8];
  uint64_t v34 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = v3 + v4[9];
  if (!v7(v35, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + v6[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v6[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v6[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v35 + v6[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v35 + v6[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v48 = v3 + *(int *)(type metadata accessor for PageContent(0) + 20);
  uint64_t v49 = sub_2DFA90();
  uint64_t v50 = *(void *)(v49 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_63BAC(&qword_3CB0A0);
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v1, v56 + v55, v57 | 7);
}

uint64_t sub_FE03C()
{
  uint64_t v2 = *(void *)(type metadata accessor for PageRootView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_8BBE0;
  return sub_F3FD0(v3);
}

uint64_t dispatch thunk of MainToolbarConfiguring.alwaysShowRightButtons.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *static BSUINoticeViewController.noticeViewTitleFontAttributes.getter()
{
  sub_1D99A0();
  id v2 = [self bc_booksKeyColor];
  uint64_t v0 = TextAttributesBuilder.build()();
  swift_bridgeObjectRelease();

  return v0;
}

void *static BSUINoticeViewController.noticeViewMessageFontAttributes.getter()
{
  return sub_FE39C((uint64_t *)&UIFontWeightMedium);
}

Class sub_FE2F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_FE39C(a3);
  type metadata accessor for Key(0);
  sub_FE4B8();
  v3.super.isa = sub_2E4330().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

void *static BSUINoticeViewController.noticeViewConfirmLabelFontAttributes.getter()
{
  return sub_FE39C((uint64_t *)&UIFontWeightSemibold);
}

void *sub_FE39C(uint64_t *a1)
{
  uint64_t v6 = *a1;
  LOBYTE(v7) = 0;
  LOBYTE(v8) = 1;
  LOWORD(v9) = 0;
  LOBYTE(v10) = 1;
  uint64_t v1 = UIFontDescriptorSystemDesignDefault;
  id v2 = UIFontTextStyleSubheadline;
  TextAttributesBuilder.build()();
  swift_bridgeObjectRelease();

  id v3 = [self bc_booksKeyColor:UIFontDescriptorSystemDesignDefault:v6:v7:UIFontTextStyleSubheadline:0:v8:0:0:v9:0:v10:0];
  uint64_t v4 = TextAttributesBuilder.build()();
  swift_bridgeObjectRelease();

  return v4;
}

unint64_t sub_FE4B8()
{
  unint64_t result = qword_3C6D90;
  if (!qword_3C6D90)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3C6D90);
  }
  return result;
}

void *static BSUINavigationController.navigationBarFontAttributes.getter()
{
  uint64_t v0 = self;
  uint64_t v1 = UIFontDescriptorSystemDesignSerif;
  id v4 = [v0 bc_booksKeyColor];
  id v2 = TextAttributesBuilder.build()();
  swift_bridgeObjectRelease();

  return v2;
}

void *static BSUINavigationController.largeNavigationBarFontAttributes(with:)(void *a1)
{
  _s11BookStoreUI21ToolKitTextAttributesV13toolbarHeader4withSDySo21NSAttributedStringKeyaypGSo17UITraitCollectionC_tFZ_0(a1);
  id v3 = [self bc_booksKeyColor];
  uint64_t v1 = TextAttributesBuilder.build()();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_FE884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FE898);
}

uint64_t sub_FE898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C7498);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_FE94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FE960);
}

uint64_t sub_FE960(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_63BAC(&qword_3C7498);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DefaultFooterComponentModel(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CB270);
}

void sub_FEA2C()
{
  sub_FF444(319, (unint64_t *)&qword_3C8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_FEAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2DDEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_2E4C50(17);
  sub_2DDED0();
  uint64_t v6 = sub_2DDEB0();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v13 = v6;
  unint64_t v14 = v8;
  v15._countAndFlagsBits = 0x746C75616665642DLL;
  v15._object = (void *)0xEF7265746F6F662DLL;
  sub_2E44C0(v15);
  sub_2E4C10();
  uint64_t v9 = type metadata accessor for DefaultFooterComponentModel(0);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  uint64_t v10 = a1 + *(int *)(v9 + 24);
  uint64_t v11 = sub_2E3CC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
}

uint64_t sub_FECB0@<X0>(uint64_t a1@<X8>)
{
  return sub_65D0C(v1, a1);
}

uint64_t sub_FECBC@<X0>(uint64_t a1@<X8>)
{
  return sub_66444(v1 + 40, a1, &qword_3C8B80);
}

uint64_t sub_FECE4()
{
  return sub_FF528(&qword_3CB2B0, (void (*)(uint64_t))type metadata accessor for DefaultFooterComponentModel);
}

uint64_t *sub_FED2C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_63BAC(&qword_3C8180) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2E01B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_FEE38(uint64_t a1)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2E01B0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_FEEDC(void *a1, void *a2)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2E01B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_FEF98(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_FF064((uint64_t)a1);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_FF064(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C8180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_FF0C4(void *a1, const void *a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2E01B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_FF188(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_FF064((uint64_t)a1);
    uint64_t v4 = sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2E01B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_FF25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FF270);
}

uint64_t sub_FF270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C81D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_FF2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FF2F4);
}

uint64_t sub_FF2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C81D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DefaultFooterComponent(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CB310);
}

void sub_FF388()
{
  sub_FF444(319, (unint64_t *)&qword_3C8240, (uint64_t (*)(uint64_t))&type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_FF444(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_FF4A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_FF528(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_FF570@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2E0180();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E01B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E2FE0();
  sub_85250((uint64_t)v9);
  sub_2E0190();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2E0170();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2E3440();
  sub_2E17A0();
  uint64_t v11 = v16;
  char v12 = v17;
  uint64_t v13 = v18;
  char v14 = v19;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v14;
  double result = *(double *)&v20;
  *(_OWORD *)(a1 + 40) = v20;
  return result;
}

uint64_t sub_FF758()
{
  uint64_t v1 = __chkstk_darwin(v0);
  sub_FF910(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_FF528(&qword_3D2130, (void (*)(uint64_t))type metadata accessor for DefaultFooterComponent);
  return sub_2DF540();
}

uint64_t sub_FF81C()
{
  return sub_FF528(&qword_3CB348, (void (*)(uint64_t))type metadata accessor for DefaultFooterComponent);
}

uint64_t sub_FF864()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_FF880()
{
  return sub_FF528(&qword_3CB350, (void (*)(uint64_t))type metadata accessor for DefaultFooterComponentModel);
}

uint64_t sub_FF8C8()
{
  return sub_FF528(&qword_3C7480, (void (*)(uint64_t))&type metadata accessor for _ComponentBodyButtonStyle);
}

uint64_t sub_FF910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultFooterComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_FF978()
{
  unint64_t result = qword_3CB358;
  if (!qword_3CB358)
  {
    sub_70ECC(&qword_3CB360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB358);
  }
  return result;
}

uint64_t *sub_FF9EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E0260();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2DFFB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    char v14 = (uint64_t *)((char *)a1 + v13);
    Swift::String v15 = (uint64_t *)((char *)a2 + v13);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *char v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    char v19 = (char *)a2 + v17;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v17);
    uint64_t v21 = *(uint64_t *)((char *)a2 + v17 + 8);
    void *v18 = v20;
    v18[1] = v21;
    swift_retain();
    swift_retain();
    uint64_t v22 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v24 = &v19[v22];
    uint64_t v25 = sub_2E1050();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_63BAC(&qword_3CB370);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t sub_FFD38(uint64_t a1, int *a2)
{
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2E0260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2DFFB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v11 = sub_2E1050();
  uint64_t v14 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v10, v11);
  }
  return result;
}

void *sub_FFF6C(void *a1, void *a2, int *a3)
{
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E0260();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_2DFFB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_2E01B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a2 + v15);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 8);
  *uint64_t v16 = v18;
  v16[1] = v19;
  swift_retain();
  swift_retain();
  uint64_t v20 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = &v17[v20];
  uint64_t v23 = sub_2E1050();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_63BAC(&qword_3CB370);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

void *sub_100268(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, (uint64_t *)&unk_3D20F0);
    sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2E0260();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_662B4((uint64_t)a1 + v7, &qword_3C82B0);
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_2DFFB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_662B4((uint64_t)a1 + v11, &qword_3C8180);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  uint64_t v18 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  uint64_t v21 = sub_2E1050();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_17;
  }
  if (v25)
  {
LABEL_17:
    uint64_t v26 = sub_63BAC(&qword_3CB370);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

char *sub_10061C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2E0260();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_2DFFB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_2E01B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 8];
  *(void *)uint64_t v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = v21;
  uint64_t v22 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v23 = &v19[v22];
  int v24 = &v20[v22];
  uint64_t v25 = sub_2E1050();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_63BAC(&qword_3CB370);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

char *sub_100924(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, (uint64_t *)&unk_3D20F0);
    uint64_t v6 = sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E0260();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_662B4((uint64_t)&a1[v8], &qword_3C82B0);
    uint64_t v11 = sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2DFFB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_662B4((uint64_t)&a1[v13], &qword_3C8180);
    uint64_t v16 = sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_2E01B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_release();
  uint64_t v21 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v22 = &v19[v21];
  uint64_t v23 = &v20[v21];
  uint64_t v24 = sub_2E1050();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_16;
  }
  if (v28)
  {
LABEL_16:
    uint64_t v29 = sub_63BAC(&qword_3CB370);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_100CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100CF4);
}

uint64_t sub_100CF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C74A8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_63BAC(&qword_3C8BD8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_63BAC(&qword_3C81D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_63BAC(&qword_3CB368);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t sub_100E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100EB0);
}

uint64_t sub_100EB0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_63BAC(&qword_3C74A8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_63BAC(&qword_3C8BD8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_63BAC(&qword_3C81D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_63BAC(&qword_3CB368);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t type metadata accessor for DescriptionHeaderComponent(uint64_t a1)
{
  return sub_6E6E0(a1, (uint64_t *)&unk_3CB3D0);
}

void sub_101084()
{
  sub_101218(319, (unint64_t *)&qword_3C7520, (void (*)(uint64_t))&type metadata accessor for ColorConstants);
  if (v0 <= 0x3F)
  {
    sub_101218(319, &qword_3C8C48, (void (*)(uint64_t))&type metadata accessor for FontConstants);
    if (v1 <= 0x3F)
    {
      sub_101218(319, (unint64_t *)&qword_3C8240, (void (*)(uint64_t))&type metadata accessor for SizeConstants);
      if (v2 <= 0x3F)
      {
        sub_10126C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_101218(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2E1610();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10126C()
{
  if (!qword_3CB3E0)
  {
    sub_70ECC(&qword_3CB370);
    unint64_t v0 = sub_2E32E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3CB3E0);
    }
  }
}

uint64_t sub_1012C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_101348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v113 = a3;
  uint64_t v109 = type metadata accessor for ShortDividerStyle(0);
  __chkstk_darwin(v109);
  int v101 = (uint64_t *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v107 = (uint64_t)&v88 - v7;
  uint64_t v8 = sub_2E3300();
  uint64_t v105 = *(void *)(v8 - 8);
  uint64_t v106 = v8;
  __chkstk_darwin(v8);
  uint64_t v103 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_63BAC(&qword_3CB430);
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v104 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_63BAC(&qword_3CB438);
  __chkstk_darwin(v102);
  uint64_t v112 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v111 = (uint64_t)&v88 - v13;
  uint64_t v98 = sub_2E0260();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_63BAC(&qword_3C7800);
  __chkstk_darwin(v15 - 8);
  uint64_t v94 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_2E27D0();
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_2DFFB0();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (uint64_t)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DescriptionHeaderComponent(0);
  uint64_t v19 = *(void *)(v88 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v88);
  uint64_t v21 = sub_63BAC(&qword_3CB440);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_63BAC(&qword_3CB448);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v100 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v88 - v28;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v88 - v31;
  *(void *)uint64_t v23 = sub_2E2290();
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  uint64_t v33 = sub_63BAC(&qword_3CB450);
  sub_101F08(a1, a2, (uint64_t)&v23[*(int *)(v33 + 44)]);
  uint64_t v114 = a2;
  sub_104E70(a2, (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DescriptionHeaderComponent);
  unint64_t v34 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v35 = swift_allocObject();
  sub_104944((uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, type metadata accessor for DescriptionHeaderComponent);
  sub_66444((uint64_t)v23, (uint64_t)v29, &qword_3CB440);
  uint64_t v36 = &v29[*(int *)(v25 + 44)];
  *(void *)uint64_t v36 = sub_103690;
  *((void *)v36 + 1) = 0;
  *((void *)v36 + 2) = sub_103EEC;
  *((void *)v36 + 3) = v35;
  sub_662B4((uint64_t)v23, &qword_3CB440);
  uint64_t v99 = v32;
  sub_71900((uint64_t)v29, (uint64_t)v32, &qword_3CB448);
  uint64_t v37 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DescriptionHeaderComponentModel() + 32));
  uint64_t v38 = v37[1];
  if (v38)
  {
    uint64_t v115 = *v37;
    uint64_t v116 = v38;
    sub_710EC();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_2E28F0();
    uint64_t v41 = v40;
    char v43 = v42 & 1;
    uint64_t v44 = v89;
    sub_85D7C(v89);
    uint64_t v45 = v93;
    uint64_t v46 = v91;
    uint64_t v47 = v95;
    (*(void (**)(char *, void, uint64_t))(v93 + 104))(v91, enum case for Font.TextStyle.footnote(_:), v95);
    uint64_t v48 = sub_2E2700();
    uint64_t v49 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v94, 1, 1, v48);
    sub_2E2720();
    sub_2E2760();
    sub_662B4(v49, &qword_3C7800);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v44, v92);
    uint64_t v50 = sub_2E2880();
    uint64_t v52 = v51;
    LOBYTE(v47) = v53 & 1;
    sub_71140(v39, v41, v43);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v54 = v96;
    sub_84EF4(v96);
    uint64_t v55 = sub_2E0220();
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v54, v98);
    uint64_t v115 = v55;
    uint64_t v114 = sub_2E2850();
    uint64_t v98 = v56;
    uint64_t v97 = v57;
    uint64_t v59 = v58 & 1;
    sub_71140(v50, v52, v47);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v114 = 0;
    uint64_t v98 = 0;
    uint64_t v59 = 0;
    uint64_t v97 = 0;
  }
  uint64_t v60 = v103;
  sub_2E32F0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = (uint64_t)v101;
  *int v101 = KeyPath;
  sub_63BAC((uint64_t *)&unk_3D20F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = v107;
  sub_104944(v62, v107, type metadata accessor for ShortDividerStyle);
  sub_103B4C(&qword_3CB458, (void (*)(uint64_t))&type metadata accessor for Divider);
  sub_103B4C(&qword_3CB460, (void (*)(uint64_t))type metadata accessor for ShortDividerStyle);
  uint64_t v64 = v104;
  uint64_t v65 = v106;
  sub_2E2D20();
  sub_104ED8(v63, type metadata accessor for ShortDividerStyle);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v60, v65);
  LOBYTE(v62) = sub_2E2680();
  sub_2E15A0();
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v74 = v108;
  uint64_t v75 = (uint64_t)v112;
  uint64_t v76 = v110;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v64, v110);
  uint64_t v77 = v75 + *(int *)(v102 + 36);
  *(unsigned char *)uint64_t v77 = v62;
  *(void *)(v77 + 8) = v67;
  *(void *)(v77 + 16) = v69;
  *(void *)(v77 + 24) = v71;
  *(void *)(v77 + 32) = v73;
  *(unsigned char *)(v77 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v76);
  uint64_t v78 = v111;
  sub_71900(v75, v111, &qword_3CB438);
  uint64_t v79 = (uint64_t)v99;
  uint64_t v80 = v100;
  sub_66444((uint64_t)v99, v100, &qword_3CB448);
  sub_66444(v78, v75, &qword_3CB438);
  uint64_t v81 = v113;
  sub_66444(v80, v113, &qword_3CB448);
  uint64_t v82 = sub_63BAC(&qword_3CB468);
  uint64_t v83 = (uint64_t *)(v81 + *(int *)(v82 + 48));
  uint64_t v84 = v114;
  uint64_t v85 = v98;
  *uint64_t v83 = v114;
  v83[1] = v85;
  v83[2] = v59;
  LOBYTE(v62) = v59;
  uint64_t v86 = v97;
  v83[3] = v97;
  sub_66444(v75, v81 + *(int *)(v82 + 64), &qword_3CB438);
  sub_B564C(v84, v85, v62, v86);
  sub_662B4(v78, &qword_3CB438);
  sub_662B4(v79, &qword_3CB448);
  sub_662B4(v75, &qword_3CB438);
  sub_B5690(v84, v85, v62, v86);
  return sub_662B4(v80, &qword_3CB448);
}

uint64_t sub_101F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v184 = a2;
  uint64_t v176 = a3;
  uint64_t v174 = sub_2E2270();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v171 = (char *)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_2E27D0();
  uint64_t v170 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v169 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CB470);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v175 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v172 = (uint64_t)&v142 - v9;
  uint64_t v148 = sub_63BAC(&qword_3C85F0);
  __chkstk_darwin(v148);
  uint64_t v154 = (uint64_t *)((char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v155 = sub_2E30A0();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  long long v152 = (char *)&v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E0260();
  uint64_t v182 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v181 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_63BAC(&qword_3C7800);
  __chkstk_darwin(v14 - 8);
  uint64_t v178 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_2DFFB0();
  uint64_t v179 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v177 = (uint64_t)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_63BAC(&qword_3CB478);
  __chkstk_darwin(v145);
  uint64_t v18 = (uint64_t *)((char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_63BAC(&qword_3CB480);
  __chkstk_darwin(v146);
  uint64_t v150 = (uint64_t)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_63BAC(&qword_3CB488);
  __chkstk_darwin(v151);
  uint64_t v149 = (uint64_t)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_63BAC(&qword_3CB490);
  uint64_t v21 = __chkstk_darwin(v160);
  uint64_t v147 = (char *)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v156 = (uint64_t)&v142 - v23;
  uint64_t v163 = sub_63BAC(&qword_3CB498);
  __chkstk_darwin(v163);
  uint64_t v25 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_63BAC(&qword_3CB4A0);
  __chkstk_darwin(v158);
  uint64_t v159 = (uint64_t)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_63BAC(&qword_3CB4A8);
  __chkstk_darwin(v164);
  uint64_t v161 = (char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_63BAC(&qword_3CB4B0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_63BAC(&qword_3CB4B8);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_63BAC(&qword_3CB4C0);
  uint64_t v34 = __chkstk_darwin(v157);
  uint64_t v36 = (char *)&v142 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v142 - v37;
  uint64_t v39 = sub_63BAC(&qword_3CB4C8);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  uint64_t v165 = (uint64_t)&v142 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v183 = (uint64_t)&v142 - v42;
  uint64_t v162 = type metadata accessor for DescriptionHeaderComponentModel();
  uint64_t v43 = *(int *)(v162 + 36);
  uint64_t v166 = a1;
  int v44 = *(unsigned __int8 *)(a1 + v43);
  uint64_t v168 = v12;
  if (v44)
  {
    if (v44 == 1)
    {
      uint64_t v144 = sub_2E3090();
      type metadata accessor for DescriptionHeaderComponent(0);
      uint64_t v45 = v177;
      sub_85D7C(v177);
      uint64_t v46 = sub_2E2700();
      uint64_t v47 = (uint64_t)v178;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v178, 1, 1, v46);
      uint64_t v143 = sub_2E2750();
      sub_662B4(v47, &qword_3C7800);
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v45, v180);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v49 = v181;
      sub_84EF4(v181);
      uint64_t v50 = sub_2E0210();
      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v49, v12);
      uint64_t v51 = swift_getKeyPath();
      uint64_t v52 = v153;
      char v53 = v152;
      uint64_t v54 = v155;
      (*(void (**)(char *, void, uint64_t))(v153 + 104))(v152, enum case for Image.Scale.large(_:), v155);
      uint64_t v55 = swift_getKeyPath();
      uint64_t v56 = v154;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v154 + *(int *)(v148 + 28), v53, v54);
      *uint64_t v56 = v55;
      sub_66444((uint64_t)v56, (uint64_t)v18 + *(int *)(v145 + 36), &qword_3C85F0);
      uint64_t *v18 = v144;
      v18[1] = KeyPath;
      v18[2] = v143;
      v18[3] = v51;
      v18[4] = v50;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_662B4((uint64_t)v56, &qword_3C85F0);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      LOBYTE(KeyPath) = sub_2E2630();
      sub_2E15A0();
      uint64_t v58 = v57;
      uint64_t v60 = v59;
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      uint64_t v65 = v150;
      sub_66444((uint64_t)v18, v150, &qword_3CB478);
      uint64_t v66 = v65 + *(int *)(v146 + 36);
      *(unsigned char *)uint64_t v66 = KeyPath;
      *(void *)(v66 + 8) = v58;
      *(void *)(v66 + 16) = v60;
      *(void *)(v66 + 24) = v62;
      *(void *)(v66 + 32) = v64;
      *(unsigned char *)(v66 + 40) = 0;
      sub_662B4((uint64_t)v18, &qword_3CB478);
      LOBYTE(KeyPath) = sub_2E2640();
      sub_2E15A0();
      uint64_t v68 = v67;
      uint64_t v70 = v69;
      uint64_t v72 = v71;
      uint64_t v74 = v73;
      uint64_t v75 = v149;
      sub_66444(v65, v149, &qword_3CB480);
      uint64_t v76 = v75 + *(int *)(v151 + 36);
      *(unsigned char *)uint64_t v76 = KeyPath;
      *(void *)(v76 + 8) = v68;
      *(void *)(v76 + 16) = v70;
      *(void *)(v76 + 24) = v72;
      *(void *)(v76 + 32) = v74;
      *(unsigned char *)(v76 + 40) = 0;
      sub_662B4(v65, &qword_3CB480);
      sub_104BD0();
      uint64_t v77 = (uint64_t)v147;
      sub_2E2DE0();
      sub_662B4(v75, &qword_3CB488);
      uint64_t v78 = v156;
      sub_71900(v77, v156, &qword_3CB490);
      sub_66444(v78, v159, &qword_3CB490);
      swift_storeEnumTagMultiPayload();
      sub_104C20(&qword_3CB4E0, &qword_3CB4C0, (void (*)(void))sub_104A70);
      sub_106004(&qword_3CB510, &qword_3CB490, (void (*)(void))sub_104BD0);
      uint64_t v79 = (uint64_t)v161;
      sub_2E2330();
      sub_66444(v79, (uint64_t)v25, &qword_3CB4A8);
      swift_storeEnumTagMultiPayload();
      sub_63BAC(&qword_3CB4D0);
      sub_1049AC();
      sub_104DE0();
      sub_2E2330();
      sub_662B4(v79, &qword_3CB4A8);
      sub_662B4(v78, &qword_3CB490);
    }
    else
    {
      sub_2E3440();
      sub_2E17A0();
      uint64_t v102 = v189;
      char v103 = v190;
      uint64_t v104 = v191;
      char v105 = v192;
      *(void *)uint64_t v25 = 0;
      v25[8] = 1;
      *((void *)v25 + 2) = v102;
      v25[24] = v103;
      *((void *)v25 + 4) = v104;
      v25[40] = v105;
      *((_OWORD *)v25 + 3) = v193;
      swift_storeEnumTagMultiPayload();
      sub_63BAC(&qword_3CB4D0);
      sub_1049AC();
      sub_104DE0();
      sub_2E2330();
    }
    uint64_t v80 = v166;
  }
  else
  {
    uint64_t v80 = v166;
    sub_1032FC(v166, (uint64_t)v30);
    char v81 = sub_2E2630();
    sub_2E15A0();
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    sub_66444((uint64_t)v30, (uint64_t)v33, &qword_3CB4B0);
    uint64_t v90 = &v33[*(int *)(v31 + 36)];
    *uint64_t v90 = v81;
    *((void *)v90 + 1) = v83;
    *((void *)v90 + 2) = v85;
    *((void *)v90 + 3) = v87;
    *((void *)v90 + 4) = v89;
    v90[40] = 0;
    sub_662B4((uint64_t)v30, &qword_3CB4B0);
    char v91 = sub_2E2640();
    sub_2E15A0();
    uint64_t v93 = v92;
    uint64_t v95 = v94;
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    sub_66444((uint64_t)v33, (uint64_t)v36, &qword_3CB4B8);
    uint64_t v100 = &v36[*(int *)(v157 + 36)];
    *uint64_t v100 = v91;
    *((void *)v100 + 1) = v93;
    *((void *)v100 + 2) = v95;
    *((void *)v100 + 3) = v97;
    *((void *)v100 + 4) = v99;
    v100[40] = 0;
    sub_662B4((uint64_t)v33, &qword_3CB4B8);
    sub_71900((uint64_t)v36, (uint64_t)v38, &qword_3CB4C0);
    sub_66444((uint64_t)v38, v159, &qword_3CB4C0);
    swift_storeEnumTagMultiPayload();
    sub_104C20(&qword_3CB4E0, &qword_3CB4C0, (void (*)(void))sub_104A70);
    sub_106004(&qword_3CB510, &qword_3CB490, (void (*)(void))sub_104BD0);
    uint64_t v101 = (uint64_t)v161;
    sub_2E2330();
    sub_66444(v101, (uint64_t)v25, &qword_3CB4A8);
    swift_storeEnumTagMultiPayload();
    sub_63BAC(&qword_3CB4D0);
    sub_1049AC();
    sub_104DE0();
    sub_2E2330();
    sub_662B4(v101, &qword_3CB4A8);
    sub_662B4((uint64_t)v38, &qword_3CB4C0);
  }
  uint64_t v106 = (uint64_t *)(v80 + *(int *)(v162 + 28));
  uint64_t v107 = v106[1];
  uint64_t v185 = *v106;
  uint64_t v186 = v107;
  sub_710EC();
  swift_bridgeObjectRetain();
  uint64_t v164 = sub_2E28F0();
  uint64_t v109 = v108;
  uint64_t v166 = v110;
  char v112 = v111 & 1;
  type metadata accessor for DescriptionHeaderComponent(0);
  uint64_t v113 = v177;
  sub_85D7C(v177);
  uint64_t v114 = v170;
  uint64_t v115 = v169;
  uint64_t v116 = v167;
  (*(void (**)(char *, void, uint64_t))(v170 + 104))(v169, enum case for Font.TextStyle.title2(_:), v167);
  uint64_t v117 = enum case for Font.Design.serif (_:);
  uint64_t v118 = sub_2E2700();
  uint64_t v119 = *(void *)(v118 - 8);
  uint64_t v120 = (uint64_t)v178;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 104))(v178, v117, v118);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v120, 0, 1, v118);
  sub_2E2760();
  sub_662B4(v120, &qword_3C7800);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v115, v116);
  sub_2E26C0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v113, v180);
  uint64_t v121 = v164;
  uint64_t v122 = sub_2E2880();
  uint64_t v124 = v123;
  LOBYTE(v114) = v125 & 1;
  sub_71140(v121, v109, v112);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v126 = v181;
  sub_84EF4(v181);
  uint64_t v127 = sub_2E01D0();
  (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v126, v168);
  uint64_t v185 = v127;
  uint64_t v128 = sub_2E2850();
  uint64_t v130 = v129;
  LOBYTE(v109) = v131;
  uint64_t v133 = v132;
  sub_71140(v122, v124, v114);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v185 = v128;
  uint64_t v186 = v130;
  char v187 = v109 & 1;
  uint64_t v188 = v133;
  uint64_t v134 = v171;
  sub_2E2220();
  uint64_t v135 = (uint64_t)v175;
  sub_2E2E20();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v134, v174);
  sub_71140(v185, v186, v187);
  swift_bridgeObjectRelease();
  uint64_t v136 = v172;
  sub_71900(v135, v172, &qword_3CB470);
  uint64_t v137 = v183;
  uint64_t v138 = v165;
  sub_66444(v183, v165, &qword_3CB4C8);
  sub_66444(v136, v135, &qword_3CB470);
  uint64_t v139 = v176;
  sub_66444(v138, v176, &qword_3CB4C8);
  uint64_t v140 = sub_63BAC(&qword_3CB548);
  sub_66444(v135, v139 + *(int *)(v140 + 48), &qword_3CB470);
  sub_662B4(v136, &qword_3CB470);
  sub_662B4(v137, &qword_3CB4C8);
  sub_662B4(v135, &qword_3CB470);
  return sub_662B4(v138, &qword_3CB4C8);
}

uint64_t sub_1032FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v22[0] = a2;
  uint64_t v3 = sub_63BAC(&qword_3CB550);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AppleBooksReviewIcon(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v22 - v10;
  uint64_t v12 = sub_2E0260();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + *(int *)(type metadata accessor for DescriptionHeaderComponentModel() + 40);
  uint64_t v17 = *(void *)(v16 + 8);
  if (!v17) {
    goto LABEL_4;
  }
  uint64_t v18 = *(void *)(v16 + 16);
  v22[1] = *(void *)v16;
  v22[2] = v17;
  v22[3] = v18;
  long long v23 = *(_OWORD *)(v16 + 24);
  sub_84EF4((uint64_t)v15);
  uint64_t v19 = sub_156C38();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v19)
  {
    uint64_t *v9 = swift_getKeyPath();
    sub_63BAC(&qword_3C82B0);
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)v9 + *(int *)(v6 + 20)) = v19;
    sub_104944((uint64_t)v9, (uint64_t)v11, type metadata accessor for AppleBooksReviewIcon);
    sub_104E70((uint64_t)v11, (uint64_t)v5, type metadata accessor for AppleBooksReviewIcon);
  }
  else
  {
LABEL_4:
    sub_84EF4((uint64_t)v15);
    uint64_t v20 = sub_2E0220();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t *v9 = swift_getKeyPath();
    sub_63BAC(&qword_3C82B0);
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)v9 + *(int *)(v6 + 20)) = v20;
    sub_104944((uint64_t)v9, (uint64_t)v11, type metadata accessor for AppleBooksReviewIcon);
    sub_104E70((uint64_t)v11, (uint64_t)v5, type metadata accessor for AppleBooksReviewIcon);
  }
  swift_storeEnumTagMultiPayload();
  sub_103B4C(&qword_3CB508, (void (*)(uint64_t))type metadata accessor for AppleBooksReviewIcon);
  sub_2E2330();
  return sub_104ED8((uint64_t)v11, type metadata accessor for AppleBooksReviewIcon);
}

uint64_t sub_103690@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_2E2380();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E24D0();
  sub_2E17E0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v13;
  return result;
}

uint64_t sub_10379C(CGFloat *a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CB370);
  uint64_t v3 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - v6;
  CGFloat v8 = *a1;
  CGFloat v9 = a1[1];
  CGFloat v10 = a1[2];
  CGFloat v11 = a1[3];
  v15.origin.x = *a1;
  v15.origin.y = v9;
  v15.size.width = v10;
  v15.size.height = v11;
  CGRectGetMinY(v15);
  v16.origin.x = v8;
  v16.origin.y = v9;
  v16.size.width = v10;
  v16.size.height = v11;
  CGRectGetMaxY(v16);
  sub_2E1020();
  uint64_t v12 = sub_2E1050();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  type metadata accessor for DescriptionHeaderComponent(0);
  sub_66444((uint64_t)v7, (uint64_t)v5, &qword_3CB370);
  sub_63BAC(&qword_3CB368);
  sub_2E3290();
  return sub_662B4((uint64_t)v7, &qword_3CB370);
}

uint64_t sub_103920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3C8478);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_2E2290();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v8 = sub_63BAC(&qword_3CB428);
  sub_101348(a1, v2, (uint64_t)&v7[*(int *)(v8 + 44)]);
  uint64_t v9 = sub_2E3440();
  sub_821BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, 0.0, 1, v9, v10);
  return sub_662B4((uint64_t)v7, &qword_3C8478);
}

uint64_t sub_103A2C()
{
  __chkstk_darwin(v0);
  sub_104E70(v2, (uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DescriptionHeaderComponent);
  sub_103B4C(&qword_3CB418, (void (*)(uint64_t))type metadata accessor for DescriptionHeaderComponent);
  return sub_2DF540();
}

uint64_t sub_103B04()
{
  return sub_103B4C(&qword_3CB420, (void (*)(uint64_t))type metadata accessor for DescriptionHeaderComponent);
}

uint64_t sub_103B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_103B94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_103BB0()
{
  return sub_103B4C(&qword_3C8058, (void (*)(uint64_t))type metadata accessor for DescriptionHeaderComponentModel);
}

uint64_t sub_103BF8()
{
  return sub_103B4C(&qword_3C7480, (void (*)(uint64_t))&type metadata accessor for _ComponentBodyButtonStyle);
}

uint64_t type metadata accessor for ShortDividerStyle(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CB5B0);
}

uint64_t sub_103C60()
{
  uint64_t v1 = (int *)type metadata accessor for DescriptionHeaderComponent(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E0260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2DFFB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[6];
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[7];
  swift_release();
  swift_release();
  uint64_t v12 = v11 + *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v13 = sub_2E1050();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_103EEC(CGFloat *a1)
{
  type metadata accessor for DescriptionHeaderComponent(0);

  return sub_10379C(a1);
}

uint64_t sub_103F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_63BAC(&qword_3C7800);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E27D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2DFFB0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_2E3090();
  sub_85D7C((uint64_t)v12);
  sub_2E2690();
  uint64_t v28 = sub_2E26C0();
  swift_release();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v10 + 8);
  v13(v12, v9);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = sub_2E3090();
  sub_85D7C((uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Font.TextStyle.largeTitle(_:), v5);
  uint64_t v14 = sub_2E2700();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  uint64_t v25 = sub_2E2760();
  sub_662B4((uint64_t)v4, &qword_3C7800);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13(v12, v9);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = sub_2E3090();
  sub_85D7C((uint64_t)v12);
  sub_2E2690();
  uint64_t v17 = sub_2E26C0();
  swift_release();
  v13(v12, v9);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = v28;
  uint64_t v20 = v26;
  uint64_t v21 = KeyPath;
  *a1 = v29;
  a1[1] = v21;
  a1[2] = v19;
  a1[3] = v20;
  uint64_t v22 = v25;
  a1[4] = v15;
  a1[5] = v22;
  a1[6] = v16;
  a1[7] = v18;
  a1[8] = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_104320(uint64_t a1)
{
  uint64_t v15 = sub_2E20C0();
  sub_103F5C(&v16);
  uint64_t v3 = v16;
  uint64_t v5 = v18;
  uint64_t v4 = v19;
  uint64_t v6 = v20;
  uint64_t v7 = v21;
  uint64_t v8 = v23;
  uint64_t v13 = v22;
  uint64_t v14 = v17;
  uint64_t v9 = v24;
  uint64_t v10 = *(void *)(v1 + *(int *)(a1 + 20));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = v15;
  uint64_t v17 = 0;
  LOBYTE(v18) = 1;
  uint64_t v19 = v3;
  uint64_t v20 = v14;
  uint64_t v21 = v5;
  uint64_t v22 = v4;
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  uint64_t v25 = v13;
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = KeyPath;
  uint64_t v29 = v10;
  swift_retain();
  sub_63BAC(&qword_3CB688);
  sub_105E50();
  sub_2E2DE0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

double sub_10447C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2E0260();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_84EF4((uint64_t)v5);
  uint64_t v6 = sub_2E0210();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2E3440();
  sub_2E17A0();
  uint64_t v7 = v12;
  char v8 = v13;
  uint64_t v9 = v14;
  char v10 = v15;
  *(void *)a1 = v6;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  double result = *(double *)&v16;
  *(_OWORD *)(a1 + 48) = v16;
  return result;
}

double sub_1045B0@<D0>(uint64_t a1@<X8>, double a2@<D2>, double a3@<D3>)
{
  uint64_t v6 = sub_2E1AE0();
  __chkstk_darwin(v6 - 8);
  char v8 = (double *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v10 = (char *)v8 + *(int *)(v9 + 28);
  uint64_t v11 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v12 = sub_2E2130();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  *char v8 = a2;
  v8[1] = a3;
  sub_2E1AD0();
  sub_104ED8((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  double result = *(double *)&v16;
  long long v14 = v17;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 32) = v18;
  return result;
}

uint64_t sub_1046E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShapeRole.separator(_:);
  uint64_t v3 = sub_2E34E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_104758()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_104770(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2E1540();
  return sub_1047E0;
}

void sub_1047E0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_10482C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1061F8();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_104890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1061F8();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1048F4(uint64_t a1)
{
  unint64_t v2 = sub_1061F8();

  return Shape.body.getter(a1, v2);
}

uint64_t sub_104944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1049AC()
{
  unint64_t result = qword_3CB4D8;
  if (!qword_3CB4D8)
  {
    sub_70ECC(&qword_3CB4A8);
    sub_104C20(&qword_3CB4E0, &qword_3CB4C0, (void (*)(void))sub_104A70);
    sub_106004(&qword_3CB510, &qword_3CB490, (void (*)(void))sub_104BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB4D8);
  }
  return result;
}

uint64_t sub_104A70()
{
  return sub_104C20(&qword_3CB4E8, &qword_3CB4B8, (void (*)(void))sub_104A98);
}

unint64_t sub_104A98()
{
  unint64_t result = qword_3CB4F0;
  if (!qword_3CB4F0)
  {
    sub_70ECC(&qword_3CB4B0);
    sub_104B0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB4F0);
  }
  return result;
}

unint64_t sub_104B0C()
{
  unint64_t result = qword_3CB4F8;
  if (!qword_3CB4F8)
  {
    sub_70ECC(&qword_3CB500);
    sub_103B4C(&qword_3CB508, (void (*)(uint64_t))type metadata accessor for AppleBooksReviewIcon);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB4F8);
  }
  return result;
}

uint64_t type metadata accessor for AppleBooksReviewIcon(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CB640);
}

uint64_t sub_104BD0()
{
  return sub_104C20(&qword_3CB518, &qword_3CB488, (void (*)(void))sub_104BF8);
}

uint64_t sub_104BF8()
{
  return sub_104C20(&qword_3CB520, &qword_3CB480, (void (*)(void))sub_104CA0);
}

uint64_t sub_104C20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_104CA0()
{
  unint64_t result = qword_3CB528;
  if (!qword_3CB528)
  {
    sub_70ECC(&qword_3CB478);
    sub_104D40();
    sub_71AA4(&qword_3C8608, &qword_3C85F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB528);
  }
  return result;
}

unint64_t sub_104D40()
{
  unint64_t result = qword_3CB530;
  if (!qword_3CB530)
  {
    sub_70ECC(&qword_3CB538);
    sub_8B388();
    sub_71AA4(&qword_3C77D8, &qword_3C77E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB530);
  }
  return result;
}

unint64_t sub_104DE0()
{
  unint64_t result = qword_3CB540;
  if (!qword_3CB540)
  {
    sub_70ECC(&qword_3CB4D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB540);
  }
  return result;
}

uint64_t sub_104E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_104ED8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_104F38(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_63BAC((uint64_t *)&unk_3D20F0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2E0260();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_105044(uint64_t a1)
{
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2E0260();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1050E8(void *a1, void *a2)
{
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2E0260();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1051A4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, (uint64_t *)&unk_3D20F0);
    sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2E0260();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_105278(void *a1, const void *a2)
{
  uint64_t v4 = sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2E0260();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10533C(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, (uint64_t *)&unk_3D20F0);
    uint64_t v4 = sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2E0260();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_105418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10542C);
}

uint64_t sub_10542C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C74A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10549C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1054B0);
}

uint64_t sub_1054B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C74A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_105524()
{
  sub_101218(319, (unint64_t *)&qword_3C7520, (void (*)(uint64_t))&type metadata accessor for ColorConstants);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1055CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2DFFB0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1056E8(uint64_t a1)
{
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2DFFB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_105788(void *a1, void *a2, uint64_t a3)
{
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2DFFB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *sub_105858(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C82B0);
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2DFFB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10594C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2DFFB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_105A20(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C82B0);
    uint64_t v6 = sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2DFFB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_105B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_105B28);
}

uint64_t sub_105B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C8BD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_105BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_105C00);
}

uint64_t sub_105C00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_63BAC(&qword_3C8BD8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_105CC0()
{
  sub_101218(319, &qword_3C8C48, (void (*)(uint64_t))&type metadata accessor for FontConstants);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_105D78()
{
  unint64_t result = qword_3CB678;
  if (!qword_3CB678)
  {
    sub_70ECC(&qword_3C8480);
    sub_71AA4(&qword_3CB680, &qword_3C8478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB678);
  }
  return result;
}

uint64_t sub_105E18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_105E34()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_105E50()
{
  unint64_t result = qword_3CB690;
  if (!qword_3CB690)
  {
    sub_70ECC(&qword_3CB688);
    sub_71AA4(&qword_3CB698, &qword_3CB6A0);
    sub_71AA4(&qword_3C77D8, &qword_3C77E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB690);
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedDividerShape()
{
  return &type metadata for RoundedDividerShape;
}

unint64_t sub_105F28()
{
  unint64_t result = qword_3CB6A8;
  if (!qword_3CB6A8)
  {
    sub_70ECC(&qword_3CB6B0);
    sub_71AA4(&qword_3CB6B8, &qword_3CB6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB6A8);
  }
  return result;
}

uint64_t sub_105FC8()
{
  return sub_106004(&qword_3CB6C8, &qword_3CB6D0, (void (*)(void))sub_105E50);
}

uint64_t sub_106004(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    sub_103B4C(&qword_3C7728, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1060B4()
{
  return sub_71AA4(&qword_3CB6D8, &qword_3CB6E0);
}

unint64_t sub_1060F4()
{
  unint64_t result = qword_3CB6E8;
  if (!qword_3CB6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB6E8);
  }
  return result;
}

unint64_t sub_10614C()
{
  unint64_t result = qword_3CB6F0;
  if (!qword_3CB6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB6F0);
  }
  return result;
}

unint64_t sub_1061A4()
{
  unint64_t result = qword_3CB6F8;
  if (!qword_3CB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB6F8);
  }
  return result;
}

unint64_t sub_1061F8()
{
  unint64_t result = qword_3CB700;
  if (!qword_3CB700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB700);
  }
  return result;
}

uint64_t AssetActionModifyRequest.storeID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BSUIAssetActionModifyRequest_storeID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssetActionModifyRequest.collectionID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BSUIAssetActionModifyRequest_collectionID);
  swift_bridgeObjectRetain();
  return v1;
}

id AssetActionModifyRequest.tracker.getter()
{
  return *(id *)(v0 + OBJC_IVAR___BSUIAssetActionModifyRequest_tracker);
}

id AssetActionModifyRequest.__allocating_init(storeID:collectionID:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1065D0(a1, a2, a3, a4, a5, &OBJC_IVAR___BSUIAssetActionModifyRequest_storeID, &OBJC_IVAR___BSUIAssetActionModifyRequest_collectionID, &OBJC_IVAR___BSUIAssetActionModifyRequest_tracker);
}

id AssetActionModifyRequest.init(storeID:collectionID:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10668C(a1, a2, a3, a4, a5, &OBJC_IVAR___BSUIAssetActionModifyRequest_storeID, &OBJC_IVAR___BSUIAssetActionModifyRequest_collectionID, &OBJC_IVAR___BSUIAssetActionModifyRequest_tracker);
}

void AssetActionModifyRequest.init()()
{
}

uint64_t AssetActionModifyResponse.collectionTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BSUIAssetActionModifyResponse_collectionTitle);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1064FC()
{
  swift_bridgeObjectRetain();
  NSString v0 = sub_2E43E0();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AssetActionModifyResponse.assetID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BSUIAssetActionModifyResponse_assetID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssetActionModifyResponse.assetContentType.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BSUIAssetActionModifyResponse_assetContentType);
}

id AssetActionModifyResponse.__allocating_init(collectionTitle:assetID:assetContentType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1065D0(a1, a2, a3, a4, a5, &OBJC_IVAR___BSUIAssetActionModifyResponse_collectionTitle, &OBJC_IVAR___BSUIAssetActionModifyResponse_assetID, &OBJC_IVAR___BSUIAssetActionModifyResponse_assetContentType);
}

id sub_1065D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  long long v17 = (char *)objc_allocWithZone(v8);
  char v18 = &v17[*a6];
  *(void *)char v18 = a1;
  *((void *)v18 + 1) = a2;
  uint64_t v19 = &v17[*a7];
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  *(void *)&v17[*a8] = a5;
  v21.receiver = v17;
  v21.super_class = v8;
  return [super init];
}

id AssetActionModifyResponse.init(collectionTitle:assetID:assetContentType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10668C(a1, a2, a3, a4, a5, &OBJC_IVAR___BSUIAssetActionModifyResponse_collectionTitle, &OBJC_IVAR___BSUIAssetActionModifyResponse_assetID, &OBJC_IVAR___BSUIAssetActionModifyResponse_assetContentType);
}

id sub_10668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  ObjectType = (objc_class *)swift_getObjectType();
  char v18 = &v8[*a6];
  *(void *)char v18 = a1;
  *((void *)v18 + 1) = a2;
  uint64_t v19 = &v8[*a7];
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  *(void *)&v8[*a8] = a5;
  v21.receiver = v8;
  v21.super_class = ObjectType;
  return [super init];
}

void AssetActionModifyResponse.init()()
{
}

uint64_t type metadata accessor for AssetActionModifyRequest()
{
  return self;
}

uint64_t method lookup function for AssetActionModifyRequest(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AssetActionModifyRequest);
}

uint64_t dispatch thunk of AssetActionModifyRequest.__allocating_init(storeID:collectionID:tracker:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for AssetActionModifyResponse()
{
  return self;
}

uint64_t method lookup function for AssetActionModifyResponse(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AssetActionModifyResponse);
}

uint64_t dispatch thunk of AssetActionModifyResponse.__allocating_init(collectionTitle:assetID:assetContentType:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t NavigationProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t NavigationProvider.init()()
{
  swift_unknownObjectWeakInit();
  return v0;
}

id sub_10698C()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong bc_isPresentedInCardViewController];

  return v2;
}

BOOL sub_1069F8()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v1 = [Strong presentingViewController];

  if (v1) {
  return v1 != 0;
  }
}

id sub_106A6C()
{
  return sub_106C10((SEL *)&selRef_transitionCoordinator);
}

uint64_t sub_106A78()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_106ABC(void *a1)
{
}

void (*sub_106B0C(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_106B88;
}

void sub_106B88(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

id sub_106C04()
{
  return sub_106C10((SEL *)&selRef_navigationController);
}

id sub_106C10(SEL *a1)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v3 = [Strong *a1];

  return v3;
}

void sub_106C78(uint64_t a1, char a2)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = [Strong navigationController];

  [v5 pushViewController:a1 animated:a2 & 1];
}

void sub_106D08(char a1)
{
}

void sub_106D14(uint64_t a1, char a2)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = [Strong navigationController];
}

void sub_106DB0(char a1)
{
}

void sub_106DBC(char a1, SEL *a2)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = [Strong navigationController];
}

void sub_106E50(uint64_t a1, char a2)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong presentViewController:a1 animated:a2 & 1 completion:0];
  }
}

void sub_106EC8(char a1)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong dismissViewControllerAnimated:a1 & 1 completion:0];
  }
}

void sub_106F30(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_63BAC(&qword_3C7C58);
    Class isa = sub_2E4630().super.isa;
    Class v8 = sub_2E4330().super.isa;
    [v6 presentFeedsInCards:isa focusedIndex:a2 animated:a3 & 1 options:v8 completion:0];
  }
}

void sub_107010(char a1, uint64_t a2)
{
  id v4 = (id)sub_1071F0();
  [v4 popCardsAnimated:a1 & 1 reason:a2];
}

void sub_107074(char a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    id v4 = [Strong presentingViewController];

    if (v4)
    {
      id v5 = [v4 presentedViewController];

      if (v5)
      {
        sub_1072E0();
        uint64_t v6 = (void *)sub_2E4940();

        if (v6) {
          goto LABEL_7;
        }
      }
    }
  }
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    Class v8 = (void *)v7;
    sub_1072E0();
    uint64_t v6 = (void *)sub_2E4940();

    if (v6)
    {
LABEL_7:
      aBlock[4] = ContextActionItemCoverProvider.init();
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_74DF8;
      aBlock[3] = &unk_394908;
      uint64_t v9 = _Block_copy(aBlock);
      [v6 popAllCardsAnimated:a1 & 1 completion:v9];
      _Block_release(v9);
    }
  }
}

uint64_t sub_1071F0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong presentingViewController];

  if (!v2
    || (id v3 = [v2 presentedViewController], v2, !v3)
    || (sub_1072E0(), uint64_t v4 = sub_2E4940(), v3, !v4))
  {
LABEL_5:
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      sub_1072E0();
      uint64_t v4 = sub_2E4940();
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

unint64_t sub_1072E0()
{
  unint64_t result = qword_3CB788;
  if (!qword_3CB788)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3CB788);
  }
  return result;
}

uint64_t sub_107320(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_107330()
{
  return swift_release();
}

uint64_t NavigationProvider.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t NavigationProvider.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

id sub_107390()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong bc_isPresentedInCardViewController];

  return v2;
}

BOOL sub_107400()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v1 = [Strong presentingViewController];

  if (v1) {
  return v1 != 0;
  }
}

id sub_107478()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v1 = [Strong transitionCoordinator];

  return v1;
}

uint64_t sub_1074E4()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_10752C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = [Strong navigationController];

  [v5 pushViewController:a1 animated:a2 & 1];
}

void sub_1075C0(char a1, uint64_t a2, uint64_t a3)
{
}

void sub_1075CC(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = [Strong navigationController];
}

void sub_10766C(char a1, uint64_t a2, uint64_t a3)
{
}

void sub_107678(char a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v7 = [Strong navigationController];
}

void sub_107710(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong presentViewController:a1 animated:a2 & 1 completion:0];
  }
}

void sub_10778C(char a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong dismissViewControllerAnimated:a1 & 1 completion:0];
  }
}

void sub_1077F8(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_63BAC(&qword_3C7C58);
    Class isa = sub_2E4630().super.isa;
    Class v8 = sub_2E4330().super.isa;
    [v6 presentFeedsInCards:isa focusedIndex:a2 animated:a3 & 1 options:v8 completion:0];
  }
}

void sub_1078DC(char a1, uint64_t a2)
{
  id v4 = (id)sub_1071F0();
  [v4 popCardsAnimated:a1 & 1 reason:a2];
}

void sub_107944(char a1)
{
}

uint64_t sub_107968@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1079B8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of NavigationProviding.isInCard.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NavigationProviding.isInModal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NavigationProviding.transitionCoordinator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NavigationProviding.sourceViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NavigationProviding.pushViewController(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of NavigationProviding.popViewController(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of NavigationProviding.popToViewController(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of NavigationProviding.popToRootViewController(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of NavigationProviding.present(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of NavigationProviding.dismiss(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of NavigationProviding.presentFeedsInCards(cardSetData:focusedIndex:animated:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of NavigationProviding.dismissCardSet(animated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of NavigationProviding.dismissCardStack(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t type metadata accessor for NavigationProvider()
{
  return self;
}

uint64_t method lookup function for NavigationProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NavigationProvider);
}

uint64_t dispatch thunk of NavigationProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of NavigationProvider.isInCard.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of NavigationProvider.isInModal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NavigationProvider.transitionCoordinator.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NavigationProvider.sourceViewController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NavigationProvider.sourceViewController.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NavigationProvider.sourceViewController.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NavigationProvider.navigationController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NavigationProvider.pushViewController(_:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NavigationProvider.popViewController(animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NavigationProvider.popToViewController(_:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NavigationProvider.popToRootViewController(animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NavigationProvider.present(_:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NavigationProvider.dismiss(animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NavigationProvider.presentFeedsInCards(cardSetData:focusedIndex:animated:options:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NavigationProvider.dismissCardSet(animated:reason:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NavigationProvider.dismissCardStack(animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t View.appAnalyticsTracker(with:from:)()
{
  return sub_2E2EE0();
}

uint64_t sub_107DD8()
{
  return swift_getWitnessTable();
}

uint64_t destroy for AppAnalyticsTrackerViewModifier()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s11BookStoreUI31AppAnalyticsTrackerViewModifierVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AppAnalyticsTrackerViewModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AppAnalyticsTrackerViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AppAnalyticsTrackerViewModifier()
{
  return &type metadata for AppAnalyticsTrackerViewModifier;
}

uint64_t sub_107F7C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_107F98()
{
  id v1 = sub_10801C(*v0, v0[1]);
  sub_63BAC(&qword_3CB8B8);
  sub_1082F4();
  sub_2E2C40();
}

id sub_10801C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v20 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v20);
  uint64_t v3 = (uint64_t *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_2DE7A0();
  uint64_t v4 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CA500);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - v11;
  sub_2DE8A0();
  sub_2E3A90();
  char v13 = v21;
  long long v14 = (void *)sub_2DE880();
  sub_2E3A90();
  sub_775A4((uint64_t)v12, (uint64_t)v9);
  LinkData.init(actionOrigin:)((uint64_t)v9, (uint64_t)v6);
  sub_108350(&qword_3CB8C8);
  sub_108350(&qword_3CB8D0);
  uint64_t v15 = v19;
  sub_2DE860();
  type metadata accessor for HostProxy(0);
  sub_2E3A90();
  *uint64_t v3 = v14;
  swift_storeEnumTagMultiPayload();
  id v16 = v14;
  sub_2E14B0();

  sub_77548((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  sub_D9804((uint64_t)v12);
  swift_release();
  return v16;
}

unint64_t sub_1082F4()
{
  unint64_t result = qword_3CB8C0;
  if (!qword_3CB8C0)
  {
    sub_70ECC(&qword_3CB8B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB8C0);
  }
  return result;
}

uint64_t sub_108350(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2DE7A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_108394()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1083F0@<X0>(void (*a1)(uint64_t, uint64_t)@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned __int8 *a5@<X5>, uint64_t a6@<X6>, uint64_t (*a7)(void)@<X7>, uint64_t *a8@<X8>, void *a9, uint64_t a10)
{
  uint64_t v265 = a7;
  uint64_t v262 = a6;
  uint64_t v228 = a3;
  uint64_t v229 = a4;
  uint64_t v268 = a2;
  uint64_t v267 = a1;
  uint64_t v216 = a8;
  uint64_t v11 = sub_63BAC(&qword_3CBAC8);
  uint64_t v214 = *(void *)(v11 - 8);
  uint64_t v215 = v11;
  __chkstk_darwin(v11);
  v213 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_63BAC(&qword_3CB0B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v236 = (uint64_t)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2E38D0();
  uint64_t v239 = *(void *)(v15 - 8);
  uint64_t v240 = v15;
  __chkstk_darwin(v15);
  uint64_t v250 = (uint64_t)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2DE7F0();
  uint64_t v237 = *(void *)(v17 - 8);
  uint64_t v238 = v17;
  __chkstk_darwin(v17);
  uint64_t v249 = (uint64_t)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_63BAC(&qword_3C97E8);
  __chkstk_darwin(v19 - 8);
  uint64_t v243 = (uint64_t)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v244 = (uint64_t)&v203 - v22;
  __chkstk_darwin(v23);
  uint64_t v246 = (uint64_t)&v203 - v24;
  uint64_t v25 = sub_2DF5D0();
  uint64_t v247 = *(void *)(v25 - 8);
  uint64_t v248 = v25;
  __chkstk_darwin(v25);
  uint64_t v245 = (char *)&v203 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_63BAC(&qword_3CBAD0);
  uint64_t v233 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  uint64_t v252 = (char *)&v203 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v255 = type metadata accessor for SeriesRoomPageIntent();
  uint64_t v260 = *(void **)(v255 - 8);
  uint64_t v28 = v260[8];
  __chkstk_darwin(v255);
  uint64_t v242 = (uint64_t)&v203 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_63BAC(&qword_3CBAD8);
  uint64_t v231 = *(void *)(v29 - 8);
  uint64_t v232 = v29;
  __chkstk_darwin(v29);
  uint64_t v251 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_2DE130();
  uint64_t v241 = *(uint64_t **)(v258 - 8);
  __chkstk_darwin(v258);
  uint64_t v212 = (uint64_t *)((char *)&v203 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  uint64_t v234 = (uint64_t *)((char *)&v203 - v33);
  uint64_t v264 = sub_2DE200();
  uint64_t v256 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  uint64_t v230 = (uint64_t)&v203 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v263 = (uint64_t)&v203 - v36;
  uint64_t v225 = (int *)type metadata accessor for JSAction();
  __chkstk_darwin(v225);
  uint64_t v224 = (char *)&v203 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_63BAC(&qword_3C75A0);
  __chkstk_darwin(v38 - 8);
  uint64_t v223 = (char *)&v203 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_2E3910();
  uint64_t v221 = *(void *)(v40 - 8);
  uint64_t v222 = v40;
  __chkstk_darwin(v40);
  uint64_t v217 = (char *)&v203 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v257 = (char *)&v203 - v43;
  uint64_t v220 = sub_2DED30();
  uint64_t v218 = *(void *)(v220 - 8);
  __chkstk_darwin(v220);
  uint64_t v219 = (uint64_t *)((char *)&v203 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_63BAC(&qword_3CBAE0);
  __chkstk_darwin(v45 - 8);
  uint64_t v47 = (void (*)(char *, char *, uint64_t))((char *)&v203 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_63BAC(&qword_3CBAE8);
  __chkstk_darwin(v48 - 8);
  uint64_t v254 = (uint64_t)&v203 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_63BAC(&qword_3C8A48);
  __chkstk_darwin(v50 - 8);
  uint64_t v226 = (uint64_t)&v203 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v203 - v53;
  uint64_t v261 = sub_2DEF80();
  v259 = *(uint64_t **)(v261 - 8);
  __chkstk_darwin(v261);
  int v227 = (char *)&v203 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)&v203 - v57;
  uint64_t v59 = type metadata accessor for Shelf();
  uint64_t v60 = *(void *)(v59 - 8);
  __chkstk_darwin(v59 - 8);
  *(void *)&long long v253 = (char *)&v203 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)&v203 - v63;
  int v65 = *a5;
  sub_2DEFD0();
  if (v277)
  {
    uint64_t v268 = v28;
    sub_65CF4(&v276, (uint64_t)v278);
    if (v65 == 3) {
      int v66 = 0;
    }
    else {
      int v66 = v65;
    }
    uint64_t v67 = v279;
    uint64_t v68 = v280;
    sub_71044(v278, (uint64_t)v279);
    uint64_t v69 = v266;
    SeriesInfo.getPromotionState()(v67, v68, (uint64_t)&v276);
    if (!v69)
    {
      LODWORD(v267) = v66;
      static Shelf.seriesHeader(from:seriesPromotionState:with:)(v278, (uint64_t)&v276, (uint64_t)v265, (uint64_t)v64);
      uint64_t v266 = 0;
      uint64_t v210 = a10;
      sub_953D0((uint64_t)&v276);
      unint64_t v71 = sub_5E5C4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      uint64_t v72 = v71;
      unint64_t v74 = *(void *)(v71 + 16);
      unint64_t v73 = *(void *)(v71 + 24);
      if (v74 >= v73 >> 1) {
        uint64_t v72 = sub_5E5C4(v73 > 1, v74 + 1, 1, v71);
      }
      uint64_t v75 = (uint64_t)v260;
      *(void *)(v72 + 16) = v74 + 1;
      unint64_t v76 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      unint64_t v211 = v72;
      unint64_t v207 = v76;
      uint64_t v206 = *(void *)(v60 + 72);
      sub_114B8C((uint64_t)v64, v72 + v76 + v206 * v74, (uint64_t (*)(void))type metadata accessor for Shelf);
      unsigned __int8 v284 = v267;
      sub_66444(v262, (uint64_t)v54, &qword_3C8A48);
      sub_66310((uint64_t)v278, (uint64_t)&v276);
      uint64_t v77 = v259;
      uint64_t v78 = v261;
      uint64_t v208 = (unsigned int (*)(char *, uint64_t, uint64_t))v259[6];
      uint64_t v209 = v259 + 6;
      if (v208(v54, 1, v261) == 1)
      {
        sub_71044(&v276, v277);
        sub_2DEB30();
        sub_662B4((uint64_t)v54, &qword_3C8A48);
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v77[4])(v58, v54, v78);
      }
      uint64_t v79 = v266;
      uint64_t v80 = v210;
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v276);
      LOBYTE(v272) = 0;
      sub_110D6C(v80, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
      (*(void (**)(void (*)(char *, char *, uint64_t), void, uint64_t, unint64_t))(v75 + 56))(v47, 0, 1, v255);
      uint64_t v81 = v254;
      sub_10A498(v278, v47, v254);
      sub_662B4((uint64_t)v47, &qword_3CBAE0);
      uint64_t v82 = type metadata accessor for SeriesRoomListHeaderComponentModel();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
      uint64_t v83 = v253;
      sub_160798(v278, &v284, (uint64_t)v58, (unsigned __int8 *)&v272, v81, 0, v253);
      if (v79)
      {
        sub_662B4(v81, &qword_3CBAE8);
        ((void (*)(char *, uint64_t))v77[1])(v58, v78);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v266 = 0;
        sub_662B4(v81, &qword_3CBAE8);
        uint64_t v204 = (void (*)(char *, uint64_t))v77[1];
        uint64_t v205 = v77 + 1;
        v204(v58, v78);
        uint64_t v84 = v211;
        unint64_t v86 = *(void *)(v211 + 16);
        unint64_t v85 = *(void *)(v211 + 24);
        if (v86 >= v85 >> 1) {
          uint64_t v84 = sub_5E5C4(v85 > 1, v86 + 1, 1, v211);
        }
        uint64_t v87 = v219;
        uint64_t v219 = a9;
        *(void *)(v84 + 16) = v86 + 1;
        unint64_t v211 = v84;
        sub_114B8C(v83, v84 + v207 + v86 * v206, (uint64_t (*)(void))type metadata accessor for Shelf);
        v275 = &_swiftEmptyDictionarySingleton;
        sub_71044(v278, (uint64_t)v279);
        char v88 = sub_2D8AC8();
        uint64_t v89 = (void (**)(void *, uint64_t))(v218 + 8);
        if (v88)
        {
          sub_2DEE00();
          sub_2DEDF0();
        }
        else
        {
          sub_2DEC70();
          sub_2DEC60();
        }
        uint64_t v90 = sub_2DED20();
        uint64_t v92 = v91;
        (*v89)(v87, v220);
        sub_2E3900();
        sub_63BAC(&qword_3C75A8);
        uint64_t inited = swift_initStackObject();
        long long v253 = xmmword_2FCE70;
        *(_OWORD *)(inited + 16) = xmmword_2FCE70;
        *(void *)(inited + 32) = 25705;
        *(void *)(inited + 40) = 0xE200000000000000;
        sub_71044(v278, (uint64_t)v279);
        *(void *)(inited + 48) = sub_2DEC00();
        *(void *)(inited + 56) = v94;
        *(void *)(inited + 72) = &type metadata for String;
        *(void *)(inited + 80) = 1701869940;
        *(void *)(inited + 120) = &type metadata for String;
        *(void *)(inited + 88) = 0xE400000000000000;
        *(void *)(inited + 96) = v90;
        *(void *)(inited + 104) = v92;
        unint64_t v255 = sub_5929C(inited);
        uint64_t v95 = sub_2DE8E0();
        uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56);
        uint64_t v97 = (uint64_t)v223;
        v96(v223, 1, 1, v95);
        uint64_t v98 = v225;
        uint64_t v273 = (char *)v225;
        uint64_t v274 = (void *)sub_110CC4(&qword_3C80D0, (void (*)(uint64_t))type metadata accessor for JSAction);
        uint64_t v99 = sub_71088((uint64_t *)&v272);
        uint64_t v100 = (uint64_t)v224;
        uint64_t v101 = (uint64_t)&v224[v98[7]];
        v96((char *)v101, 1, 1, v95);
        (*(void (**)(uint64_t, char *, uint64_t))(v221 + 32))(v100, v257, v222);
        uint64_t v102 = (char *)(v100 + v98[5]);
        strcpy(v102, "RecentlyViewed");
        v102[15] = -18;
        *(void *)(v100 + v98[6]) = v255;
        sub_70F14(v97, v101);
        sub_114B8C(v100, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for JSAction);
        sub_1735B8((uint64_t)&v272, 0);
        char v103 = v279;
        uint64_t v104 = v280;
        sub_71044(v278, (uint64_t)v279);
        sub_2D8440(v103, v104, v263);
        sub_2E3900();
        uint64_t v222 = sub_63BAC(&qword_3C6F18);
        uint64_t v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = v253;
        uint64_t v106 = v279;
        uint64_t v107 = v280;
        sub_71044(v278, (uint64_t)v279);
        uint64_t v108 = v234;
        sub_2D8440(v106, v107, (uint64_t)v234);
        uint64_t v109 = v241 + 13;
        uint64_t v225 = (int *)v241[13];
        ((void (*)(uint64_t *, void, uint64_t))v225)(v108, enum case for AppAnalyticsAction.Type.reportSeriesDetailsView(_:), v258);
        uint64_t v110 = sub_2DE160();
        *(void *)(v105 + 56) = v110;
        uint64_t v111 = sub_110CC4(&qword_3C75B8, (void (*)(uint64_t))&type metadata accessor for AppAnalyticsAction);
        *(void *)(v105 + 64) = v111;
        sub_71088((uint64_t *)(v105 + 32));
        sub_2DE140();
        uint64_t v241 = (uint64_t *)(v105 + 72);
        uint64_t v224 = (char *)v108 + *(int *)(sub_63BAC(&qword_3CBAF8) + 48);
        uint64_t v112 = v264;
        v108[3] = v264;
        unint64_t v255 = sub_110CC4(&qword_3CBB00, (void (*)(uint64_t))&type metadata accessor for SeriesData);
        v108[4] = v255;
        uint64_t v254 = sub_110CC4(&qword_3CBB08, (void (*)(uint64_t))&type metadata accessor for SeriesData);
        v108[5] = v254;
        uint64_t v113 = sub_71088(v108);
        uint64_t v114 = (char *)(v256 + 16);
        uint64_t v223 = *(char **)(v256 + 16);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v223)(v113, v263, v112);
        uint64_t v115 = enum case for ScenePhase.active(_:);
        uint64_t v116 = sub_2E15D0();
        uint64_t v117 = v225;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 104))(v224, v115, v116);
        ((void (*)(uint64_t *, void, uint64_t))v117)(v108, enum case for AppAnalyticsAction.Type.popData(_:), v258);
        uint64_t v224 = (char *)v110;
        *(void *)(v105 + 96) = v110;
        *(void *)(v105 + 104) = v111;
        uint64_t v118 = (void *)v111;
        sub_71088(v241);
        sub_2DE140();
        uint64_t v119 = sub_2E3A20();
        uint64_t v273 = (char *)v119;
        uint64_t v274 = &protocol witness table for CompoundAction;
        sub_71088((uint64_t *)&v272);
        sub_2E3A10();
        sub_1735B8((uint64_t)&v272, 3);
        if (v267)
        {
          uint64_t v120 = v264;
          unint64_t v121 = v255;
          v108[3] = v264;
          v108[4] = v121;
          v108[5] = v254;
          uint64_t v122 = sub_71088(v108);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v223)(v122, v263, v120);
          ((void (*)(uint64_t *, void, uint64_t))v117)(v108, enum case for AppAnalyticsAction.Type.pushData(_:), v258);
          uint64_t v273 = v224;
          uint64_t v274 = v118;
          sub_71088((uint64_t *)&v272);
          sub_2DE140();
        }
        else
        {
          uint64_t v221 = v119;
          uint64_t v257 = v114;
          uint64_t v241 = v109;
          sub_2E3900();
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v253;
          sub_71044(v278, (uint64_t)v279);
          uint64_t v124 = sub_2DEC00();
          uint64_t v126 = v125;
          sub_71044(v278, (uint64_t)v279);
          sub_2DEB10();
          char v128 = v127;
          sub_71044(v278, (uint64_t)v279);
          *(void *)&long long v253 = v123 + 32;
          if (v128) {
            uint64_t v129 = sub_2DEB40();
          }
          else {
            uint64_t v129 = sub_2DEB10();
          }
          char v131 = v212;
          *uint64_t v212 = v124;
          v131[1] = v126;
          v131[2] = v129;
          *((unsigned char *)v131 + 24) = v130 & 1;
          uint64_t v132 = v258;
          uint64_t v133 = v225;
          ((void (*)(uint64_t *, void, uint64_t))v225)(v131, enum case for AppAnalyticsAction.Type.reportAllInSeriesView(_:), v258);
          uint64_t v134 = v224;
          *(void *)(v123 + 56) = v224;
          *(void *)(v123 + 64) = v118;
          uint64_t v220 = (uint64_t)v118;
          sub_71088((uint64_t *)v253);
          sub_2DE140();
          uint64_t v135 = v264;
          uint64_t v136 = v234;
          unint64_t v137 = v255;
          v234[3] = v264;
          v136[4] = v137;
          v136[5] = v254;
          uint64_t v138 = sub_71088(v136);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v223)(v138, v263, v135);
          ((void (*)(uint64_t *, void, uint64_t))v133)(v136, enum case for AppAnalyticsAction.Type.pushData(_:), v132);
          uint64_t v139 = v220;
          *(void *)(v123 + 96) = v134;
          *(void *)(v123 + 104) = v139;
          sub_71088((uint64_t *)(v123 + 72));
          sub_2DE140();
          uint64_t v273 = (char *)v221;
          uint64_t v274 = &protocol witness table for CompoundAction;
          sub_71088((uint64_t *)&v272);
          sub_2E3A10();
        }
        sub_1735B8((uint64_t)&v272, 2);
        type metadata accessor for HostProxy(0);
        sub_2E3A90();
        uint64_t v140 = v272;
        uint64_t v141 = v219;
        uint64_t v142 = v219[3];
        uint64_t v143 = v219[4];
        uint64_t v265 = (uint64_t (*)(void))sub_71044(v219, v142);
        sub_71044(v278, (uint64_t)v279);
        uint64_t v144 = sub_2DEC00();
        uint64_t v146 = v145;
        uint64_t v147 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 40);
        swift_retain();
        uint64_t v148 = v147(v144, v146, v140, v142, v143);
        swift_bridgeObjectRelease();
        swift_release();
        *(void *)&long long v269 = v148;
        sub_66310((uint64_t)v278, (uint64_t)&v272);
        uint64_t v265 = (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent;
        uint64_t v149 = v242;
        sub_110D6C(v210, v242, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
        uint64_t v150 = *((unsigned __int8 *)v260 + 80);
        uint64_t v151 = (v150 + 56) & ~v150;
        uint64_t v260 = (void *)v151;
        uint64_t v257 = (char *)(v150 | 7);
        uint64_t v258 = v151 + v268;
        uint64_t v152 = swift_allocObject();
        sub_65CF4(&v272, v152 + 16);
        *(void *)&long long v253 = type metadata accessor for SeriesRoomPageIntent;
        sub_114B8C(v149, v152 + v151, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
        sub_63BAC(&qword_3CBB10);
        uint64_t v241 = (uint64_t *)sub_63BAC(&qword_3C80D8);
        uint64_t v234 = (uint64_t *)&protocol conformance descriptor for AnyPublisher<A, B>;
        sub_71AA4(&qword_3CBB18, &qword_3CBB10);
        sub_2E14F0();
        swift_release();
        swift_release();
        uint64_t v154 = v141[3];
        uint64_t v153 = v141[4];
        sub_71044(v141, v154);
        sub_71044(v278, (uint64_t)v279);
        uint64_t v155 = sub_2DEC00();
        uint64_t v157 = v156;
        uint64_t v158 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 48);
        swift_retain();
        uint64_t v159 = v158(v155, v157, v140, v154, v153);
        swift_bridgeObjectRelease();
        uint64_t v268 = v140;
        swift_release();
        *(void *)&long long v269 = v159;
        sub_66310((uint64_t)v278, (uint64_t)&v272);
        uint64_t v160 = v242;
        sub_110D6C(v210, v242, v265);
        uint64_t v161 = swift_allocObject();
        sub_65CF4(&v272, v161 + 16);
        sub_114B8C(v160, (uint64_t)v260 + v161, (uint64_t (*)(void))v253);
        sub_63BAC(&qword_3CBB20);
        sub_71AA4(&qword_3CBB28, &qword_3CBB20);
        sub_2E14F0();
        swift_release();
        swift_release();
        sub_71044(v278, (uint64_t)v279);
        sub_2DEC10();
        uint64_t v162 = v245;
        sub_2DF5C0();
        swift_bridgeObjectRelease();
        uint64_t v163 = v246;
        sub_1A2CC8(v278, v246);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v249, v228, v238);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v239 + 16))(v250, v229, v240);
        sub_63BAC(&qword_3C6EA8);
        uint64_t v164 = swift_allocObject();
        *(_OWORD *)(v164 + 16) = xmmword_2FEFE0;
        uint64_t v165 = v279;
        uint64_t v166 = v280;
        sub_71044(v278, (uint64_t)v279);
        unint64_t v167 = v255;
        *(void *)(v164 + 56) = v264;
        *(void *)(v164 + 64) = v167;
        uint64_t v265 = (uint64_t (*)(void))v164;
        *(void *)(v164 + 72) = v254;
        uint64_t v168 = sub_71088((uint64_t *)(v164 + 32));
        sub_2D8440(v165, v166, (uint64_t)v168);
        unsigned __int8 v283 = 0;
        uint64_t v169 = v247;
        uint64_t v170 = v248;
        uint64_t v171 = *(void (**)(uint64_t, char *, uint64_t))(v247 + 16);
        uint64_t v172 = v244;
        v171(v244, v162, v248);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v169 + 56))(v172, 0, 1, v170);
        sub_66444(v163, v243, &qword_3C97E8);
        uint64_t v260 = v275;
        uint64_t v173 = sub_63BAC(&qword_3CBB30);
        uint64_t v174 = v236;
        uint64_t v175 = v236 + *(int *)(v173 + 48);
        v171(v236, v162, v170);
        sub_66444(v163, v175, &qword_3C97E8);
        uint64_t v176 = enum case for ToolbarPrincipalType.series(_:);
        uint64_t v177 = sub_2E0980();
        uint64_t v178 = *(void *)(v177 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 104))(v174, v176, v177);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v177);
        unsigned __int8 v282 = 0;
        uint64_t v179 = v279;
        uint64_t v180 = v280;
        sub_71044(v278, (uint64_t)v279);
        uint64_t v181 = v230;
        sub_2D8440(v179, v180, v230);
        unsigned __int8 v281 = v267;
        uint64_t v182 = v226;
        sub_66444(v262, v226, &qword_3C8A48);
        sub_66310((uint64_t)v278, (uint64_t)&v272);
        uint64_t v183 = v261;
        if (v208((char *)v182, 1, v261) == 1)
        {
          sub_71044(&v272, (uint64_t)v273);
          unint64_t v184 = (unint64_t)v227;
          sub_2DEB30();
          sub_662B4(v182, &qword_3C8A48);
        }
        else
        {
          unint64_t v184 = (unint64_t)v227;
          ((void (*)(char *, uint64_t, uint64_t))v259[4])(v227, v182, v183);
        }
        uint64_t v185 = v232;
        uint64_t v186 = v263;
        uint64_t v187 = v266;
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v272);
        uint64_t v188 = sub_217E3C(v278, &v282, v181, &v281, v184);
        uint64_t v189 = v264;
        uint64_t v266 = v187;
        if (v187)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v204((char *)v184, v183);
          char v190 = *(void (**)(uint64_t, uint64_t))(v256 + 8);
          v190(v181, v189);
          sub_662B4(v174, &qword_3CB0B8);
          sub_662B4(v243, &qword_3C97E8);
          sub_662B4(v244, &qword_3C97E8);
          (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v250, v240);
          (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v249, v238);
          sub_662B4(v246, &qword_3C97E8);
          (*(void (**)(char *, uint64_t))(v247 + 8))(v245, v248);
          (*(void (**)(char *, uint64_t))(v233 + 8))(v252, v235);
          (*(void (**)(char *, uint64_t))(v231 + 8))(v251, v185);
          v190(v186, v189);
        }
        else
        {
          uint64_t v262 = v188;
          v204((char *)v184, v183);
          uint64_t v191 = *(void (**)(uint64_t, uint64_t))(v256 + 8);
          v256 += 8;
          uint64_t v267 = v191;
          v191(v181, v189);
          sub_71AA4(&qword_3CBB38, &qword_3CBAD8);
          sub_71AA4(&qword_3CBB40, &qword_3CBAD0);
          char v192 = v213;
          sub_2E1500();
          sub_71AA4(&qword_3CBB48, &qword_3CBAC8);
          uint64_t v193 = v215;
          uint64_t v261 = sub_2E14E0();
          (*(void (**)(char *, uint64_t))(v214 + 8))(v192, v193);
          uint64_t v194 = (uint64_t)v280;
          sub_71044(v278, (uint64_t)v279);
          uint64_t v258 = v194;
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v196 = sub_2E4B10();
          v259 = &v203;
          uint64_t v197 = *(void *)(v196 - 8);
          __chkstk_darwin(v196);
          int v199 = (char *)&v203 - v198;
          sub_2DEBD0();
          uint64_t v200 = *(void *)(AssociatedTypeWitness - 8);
          int v201 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v200 + 48))(v199, 1, AssociatedTypeWitness);
          if (v201 == 1)
          {
            (*(void (**)(char *, uint64_t))(v197 + 8))(v199, v196);
            uint64_t AssociatedConformanceWitness = 0;
            long long v269 = 0u;
            long long v270 = 0u;
          }
          else
          {
            *((void *)&v270 + 1) = AssociatedTypeWitness;
            uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
            uint64_t v202 = sub_71088((uint64_t *)&v269);
            (*(void (**)(uint64_t *, char *, uint64_t))(v200 + 32))(v202, v199, AssociatedTypeWitness);
          }
          sub_662B4((uint64_t)&v269, &qword_3C8920);
          swift_beginAccess();
          LOBYTE(v269) = byte_3C87E8;
          sub_181050(v249, v250, (uint64_t)v265, &v283, v211, 0, 0, v244, v216, v243, (unsigned __int8 *)&v269, 1u, (uint64_t)v260, v236, (uint64_t)_swiftEmptyArrayStorage, v262, v261, v201 != 1);
          swift_release();
          sub_662B4(v246, &qword_3C97E8);
          (*(void (**)(char *, uint64_t))(v247 + 8))(v245, v248);
          (*(void (**)(char *, uint64_t))(v233 + 8))(v252, v235);
          (*(void (**)(char *, uint64_t))(v231 + 8))(v251, v185);
          v267(v263, v264);
        }
      }
    }
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v278);
  }
  else
  {
    sub_662B4((uint64_t)&v276, &qword_3C8928);
    sub_11478C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_10A498@<X0>(void *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v237 = a2;
  uint64_t v227 = a3;
  uint64_t v228 = sub_63BAC(&qword_3CA910);
  uint64_t v226 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  uint64_t v225 = (char *)&v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CBB58);
  __chkstk_darwin(v5 - 8);
  uint64_t v223 = (char *)&v193 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_2DEE70();
  uint64_t v242 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v241 = (char *)&v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3CBB60);
  __chkstk_darwin(v8 - 8);
  uint64_t v197 = (uint64_t)&v193 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v201 = (uint64_t)&v193 - v11;
  uint64_t v12 = sub_63BAC(&qword_3CBAE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v236 = (uint64_t)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = type metadata accessor for SeriesRoomPageIntent();
  uint64_t v235 = *(void *)(v246 - 8);
  __chkstk_darwin(v246);
  uint64_t v199 = (uint64_t)&v193 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v194 = (uint64_t)&v193 - v16;
  __chkstk_darwin(v17);
  uint64_t v220 = (uint64_t)&v193 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v193 - v20);
  uint64_t v254 = sub_2E12F0();
  uint64_t v256 = *(void *)(v254 - 8);
  __chkstk_darwin(v254);
  unint64_t v255 = (char *)&v193 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_63BAC(&qword_3C9BC8);
  __chkstk_darwin(v23 - 8);
  uint64_t v218 = (uint64_t)&v193 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v247 = (uint64_t)&v193 - v26;
  __chkstk_darwin(v27);
  uint64_t v234 = (char *)&v193 - v28;
  __chkstk_darwin(v29);
  uint64_t v248 = (char *)&v193 - v30;
  uint64_t v252 = sub_2DEBB0();
  uint64_t v31 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  uint64_t v217 = (char *)&v193 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v198 = (char *)&v193 - v34;
  __chkstk_darwin(v35);
  uint64_t v214 = (char *)&v193 - v36;
  __chkstk_darwin(v37);
  uint64_t v212 = (char *)&v193 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v193 - v40;
  uint64_t v253 = sub_2DEC50();
  uint64_t v250 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  uint64_t v219 = (char *)&v193 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v240 = (char *)&v193 - v44;
  __chkstk_darwin(v45);
  uint64_t v200 = (char *)&v193 - v46;
  __chkstk_darwin(v47);
  uint64_t v238 = (uint64_t *)((char *)&v193 - v48);
  uint64_t v251 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  uint64_t v233 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v239 = (uint64_t)&v193 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v215 = (uint64_t)&v193 - v51;
  __chkstk_darwin(v52);
  uint64_t v216 = (char *)&v193 - v53;
  __chkstk_darwin(v54);
  uint64_t v195 = (uint64_t)&v193 - v55;
  __chkstk_darwin(v56);
  uint64_t v196 = (char *)&v193 - v57;
  __chkstk_darwin(v58);
  uint64_t v232 = (char *)&v193 - v59;
  __chkstk_darwin(v60);
  uint64_t v62 = (uint64_t *)((char *)&v193 - v61);
  uint64_t v260 = _swiftEmptyArrayStorage;
  sub_71044(a1, a1[3]);
  sub_2DEAD0();
  sub_71044(a1, a1[3]);
  uint64_t v230 = sub_2DEC00();
  uint64_t v229 = v63;
  uint64_t v64 = a1[3];
  uint64_t v245 = a1;
  sub_71044(a1, v64);
  int v65 = v41;
  sub_2DEAC0();
  uint64_t v66 = v31;
  uint64_t v249 = v31;
  uint64_t v68 = v31 + 56;
  uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v69 = (uint64_t)v248;
  uint64_t v70 = v252;
  uint64_t v244 = v67;
  uint64_t v224 = v68;
  v67((uint64_t)v248, 1, 1, v252);
  unint64_t v71 = *(void (**)(void))(v256 + 104);
  unsigned int v202 = enum case for Metrics.NavigationType.forward(_:);
  uint64_t v204 = v256 + 104;
  uint64_t v203 = (void (*)(char *, void, uint64_t))v71;
  v71(v255);
  uint64_t v72 = (int *)v246;
  uint64_t v258 = v246;
  uint64_t v210 = sub_110CC4(&qword_3C7FC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntent);
  uint64_t v259 = v210;
  uint64_t v231 = sub_71088((uint64_t *)&v257);
  uint64_t v73 = v72[8];
  uint64_t v74 = sub_2DF120();
  uint64_t v75 = (uint64_t)v21;
  *(uint64_t *)((char *)v21 + v73) = sub_2E0D80();
  unint64_t v76 = v229;
  *uint64_t v21 = v230;
  v21[1] = (uint64_t)v76;
  uint64_t v77 = (char *)v21 + v72[5];
  uint64_t v78 = *(void (**)(void, void, void))(v66 + 16);
  uint64_t v79 = v65;
  uint64_t v230 = v66 + 16;
  uint64_t v229 = v78;
  v78(v77, v65, v70);
  uint64_t v80 = (void *)(v75 + v72[6]);
  void *v80 = 0;
  v80[1] = 0;
  sub_66444(v69, v75 + v72[7], &qword_3C9BC8);
  uint64_t v206 = v74;
  uint64_t v81 = sub_2E0D80();
  sub_662B4(v69, &qword_3C9BC8);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v249 + 8);
  v213 = v79;
  uint64_t v222 = v249 + 8;
  uint64_t v221 = v82;
  v82(v79, v70);

  *(void *)(v75 + v73) = v81;
  uint64_t v83 = v72;
  uint64_t v84 = v75 + v72[9];
  unint64_t v85 = *(void (**)(char *, char *, uint64_t))(v256 + 32);
  uint64_t v86 = (uint64_t)v232;
  v256 += 32;
  uint64_t v205 = v85;
  v85((char *)v84, v255, v254);
  unint64_t v211 = (uint64_t *)v75;
  sub_114B8C(v75, (uint64_t)v231, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  *uint64_t v62 = 0;
  v62[1] = 0;
  uint64_t v87 = (int *)v251;
  char v88 = (char *)v62 + *(int *)(v251 + 20);
  uint64_t v89 = (uint64_t *)sub_2DF5D0();
  uint64_t v90 = *(v89 - 1);
  uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v90 + 56);
  uint64_t v231 = v89;
  uint64_t v208 = v91;
  uint64_t v207 = v90 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v91)(v88, 1, 1);
  *((unsigned char *)v62 + v87[6]) = 0;
  uint64_t v92 = *(void (**)(char *, void *, uint64_t))(v250 + 32);
  v92((char *)v62 + v87[7], v238, v253);
  sub_65CF4(&v257, (uint64_t)v62 + v87[8]);
  uint64_t v238 = v62;
  sub_110D6C((uint64_t)v62, v86, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  unint64_t v93 = (unint64_t)v260;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v93 = sub_5E60C(0, *(void *)(v93 + 16) + 1, 1, v93);
  }
  unint64_t v95 = *(void *)(v93 + 16);
  unint64_t v94 = *(void *)(v93 + 24);
  uint64_t v96 = v252;
  uint64_t v97 = (uint64_t)v234;
  if (v95 >= v94 >> 1) {
    unint64_t v93 = sub_5E60C(v94 > 1, v95 + 1, 1, v93);
  }
  uint64_t v98 = v247;
  *(void *)(v93 + 16) = v95 + 1;
  unint64_t v209 = (*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80);
  uint64_t v233 = *(void *)(v233 + 72);
  sub_114B8C(v86, v93 + v209 + v233 * v95, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  uint64_t v260 = (void *)v93;
  uint64_t v99 = v236;
  sub_66444((uint64_t)v237, v236, &qword_3CBAE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v235 + 48))(v99, 1, v83) == 1)
  {
    sub_662B4(v99, &qword_3CBAE0);
    uint64_t v100 = v244;
    goto LABEL_11;
  }
  uint64_t v101 = v99;
  uint64_t v102 = v220;
  sub_114B8C(v101, v220, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  uint64_t v103 = v102 + v83[6];
  uint64_t v104 = *(void *)(v103 + 8);
  uint64_t v100 = v244;
  if (!v104)
  {
    sub_110D0C(v102, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
LABEL_11:
    sub_71044(v245, v245[3]);
    uint64_t v106 = v223;
    sub_2DEB00();
    uint64_t v107 = v242;
    uint64_t v108 = v243;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v242 + 48))(v106, 1, v243) == 1)
    {
      uint64_t v109 = &qword_3CBB58;
      uint64_t v110 = (uint64_t)v106;
LABEL_35:
      sub_662B4(v110, v109);
      uint64_t v160 = v227;
      uint64_t v161 = v228;
      uint64_t v162 = v226;
      uint64_t v163 = v225;
      goto LABEL_36;
    }
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v241, v106, v108);
    v100(v98, 1, 1, v96);
    uint64_t v111 = v240;
    sub_2DEE50();
    uint64_t v112 = v250;
    uint64_t v113 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 16);
    uint64_t v114 = v219;
    uint64_t v115 = v111;
    uint64_t v116 = v253;
    uint64_t v237 = *(void (**)(char *, char *, uint64_t))(v250 + 16);
    v237(v219, v115, v253);
    int v117 = (*(uint64_t (**)(char *, uint64_t))(v112 + 88))(v114, v116);
    uint64_t v244 = v113;
    if (v117 == enum case for ContentKind.audiobook(_:))
    {
      sub_662B4(v98, &qword_3C9BC8);
      uint64_t v118 = (unsigned int *)&enum case for SeriesType.audiobook(_:);
    }
    else
    {
      if (v117 != enum case for ContentKind.regularBook(_:))
      {
        (*(void (**)(char *, uint64_t))(v112 + 8))(v219, v116);
        uint64_t v119 = v249;
        goto LABEL_21;
      }
      sub_662B4(v98, &qword_3C9BC8);
      uint64_t v118 = (unsigned int *)&enum case for SeriesType.book(_:);
    }
    uint64_t v119 = v249;
    (*(void (**)(uint64_t, void, uint64_t))(v249 + 104))(v98, *v118, v96);
    v100(v98, 0, 1, v96);
LABEL_21:
    uint64_t v129 = v218;
    sub_66444(v98, v218, &qword_3C9BC8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v129, 1, v96) == 1)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v240, v116);
      char v130 = &qword_3C9BC8;
      sub_662B4(v98, &qword_3C9BC8);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v241, v108);
LABEL_34:
      uint64_t v110 = v129;
      uint64_t v109 = v130;
      goto LABEL_35;
    }
    char v131 = v217;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v217, v129, v96);
    uint64_t v249 = sub_2DEE60();
    uint64_t v236 = v132;
    uint64_t v133 = v213;
    v229(v213, v131, v96);
    uint64_t v134 = v245;
    sub_71044(v245, v245[3]);
    uint64_t v235 = sub_2DEC00();
    uint64_t v234 = v135;
    sub_71044(v134, v134[3]);
    uint64_t v136 = v100;
    uint64_t v137 = v96;
    uint64_t v138 = (uint64_t)v248;
    sub_2DEAC0();
    v136(v138, 0, 1, v137);
    uint64_t v139 = v254;
    uint64_t v140 = v255;
    v203(v255, v202, v254);
    uint64_t v141 = (int *)v246;
    uint64_t v142 = *(int *)(v246 + 32);
    uint64_t v143 = sub_2E0D80();
    uint64_t v144 = v211;
    *(uint64_t *)((char *)v211 + v142) = v143;
    uint64_t v145 = v236;
    *uint64_t v144 = v249;
    v144[1] = v145;
    v229((char *)v144 + v141[5], v133, v137);
    uint64_t v146 = (uint64_t *)((char *)v144 + v141[6]);
    uint64_t v147 = v234;
    uint64_t *v146 = v235;
    v146[1] = (uint64_t)v147;
    sub_66444(v138, (uint64_t)v144 + v141[7], &qword_3C9BC8);
    uint64_t v148 = sub_2E0D80();
    uint64_t v149 = v138;
    uint64_t v150 = v137;
    sub_662B4(v149, &qword_3C9BC8);
    v221(v133, v137);

    *(uint64_t *)((char *)v144 + v142) = v148;
    v205((char *)v144 + v141[9], v140, v139);
    uint64_t v151 = v199;
    sub_114B8C((uint64_t)v144, v199, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
    uint64_t v152 = (int *)v251;
    uint64_t v153 = v216;
    v237(&v216[*(int *)(v251 + 28)], v240, v253);
    uint64_t v154 = (uint64_t *)&v153[v152[8]];
    uint64_t v155 = v210;
    v154[3] = (uint64_t)v141;
    v154[4] = v155;
    uint64_t v156 = sub_71088(v154);
    sub_110D6C(v151, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
    *(void *)uint64_t v153 = 0;
    *((void *)v153 + 1) = 0;
    v208(&v153[v152[5]], 1, 1, v231);
    v153[v152[6]] = 0;
    sub_110D6C((uint64_t)v153, v215, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
    unint64_t v157 = (unint64_t)v260;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v157 = sub_5E60C(0, *(void *)(v157 + 16) + 1, 1, v157);
    }
    unint64_t v159 = *(void *)(v157 + 16);
    unint64_t v158 = *(void *)(v157 + 24);
    uint64_t v160 = v227;
    uint64_t v161 = v228;
    uint64_t v162 = v226;
    uint64_t v163 = v225;
    if (v159 >= v158 >> 1) {
      unint64_t v157 = sub_5E60C(v158 > 1, v159 + 1, 1, v157);
    }
    *(void *)(v157 + 16) = v159 + 1;
    sub_114B8C(v215, v157 + v209 + v159 * v233, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
    uint64_t v260 = (void *)v157;
    sub_110D0C((uint64_t)v216, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
    sub_110D0C(v151, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
    v221(v217, v150);
    (*(void (**)(char *, uint64_t))(v250 + 8))(v240, v253);
    sub_662B4(v247, &qword_3C9BC8);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v241, v243);
    goto LABEL_36;
  }
  uint64_t v237 = *(void (**)(char *, char *, uint64_t))v103;
  sub_66444(v102 + v83[7], v97, &qword_3C9BC8);
  uint64_t v105 = v249;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v249 + 48))(v97, 1, v96) == 1)
  {
    sub_110D0C(v102, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
    sub_662B4(v97, &qword_3C9BC8);
    goto LABEL_11;
  }
  uint64_t v120 = v212;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v212, v97, v96);
  uint64_t v121 = v105;
  uint64_t v122 = v214;
  uint64_t v123 = (void (*)(char *, char *, uint64_t))v229;
  v229(v214, v120, v96);
  uint64_t v124 = v198;
  v123(v198, v122, v96);
  int v125 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v124, v96);
  if (v125 == enum case for SeriesType.audiobook(_:))
  {
    uint64_t v126 = v250;
    uint64_t v127 = v201;
    uint64_t v128 = v253;
    (*(void (**)(uint64_t, void, uint64_t))(v250 + 104))(v201, enum case for ContentKind.audiobook(_:), v253);
  }
  else
  {
    uint64_t v128 = v253;
    uint64_t v126 = v250;
    uint64_t v127 = v201;
    if (v125 != enum case for SeriesType.book(_:))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v201, 1, 1, v253);
      swift_bridgeObjectRetain();
      v221(v198, v96);
      goto LABEL_32;
    }
    (*(void (**)(uint64_t, void, uint64_t))(v250 + 104))(v201, enum case for ContentKind.regularBook(_:), v253);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v127, 0, 1, v128);
  swift_bridgeObjectRetain();
LABEL_32:
  uint64_t v164 = v197;
  sub_66444(v127, v197, &qword_3CBB60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v164, 1, v128) == 1)
  {
    swift_bridgeObjectRelease();
    char v130 = &qword_3CBB60;
    sub_662B4(v127, &qword_3CBB60);
    uint64_t v129 = v164;
    uint64_t v165 = v221;
    v221(v214, v96);
    v165(v212, v96);
    sub_110D0C(v220, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
    goto LABEL_34;
  }
  v92(v200, (void *)v164, v128);
  v229(v213, v214, v96);
  uint64_t v249 = v104;
  uint64_t v168 = v245;
  sub_71044(v245, v245[3]);
  uint64_t v169 = sub_2DEC00();
  uint64_t v247 = v170;
  sub_71044(v168, v168[3]);
  uint64_t v171 = v83;
  uint64_t v172 = (uint64_t)v248;
  sub_2DEAC0();
  v244(v172, 0, 1, v96);
  uint64_t v173 = v254;
  v203(v255, v202, v254);
  uint64_t v174 = v171[8];
  uint64_t v175 = sub_2E0D80();
  uint64_t v176 = v211;
  *(uint64_t *)((char *)v211 + v174) = v175;
  uint64_t v177 = v249;
  *uint64_t v176 = (uint64_t)v237;
  v176[1] = v177;
  uint64_t v178 = v213;
  v229((char *)v176 + v171[5], v213, v96);
  uint64_t v179 = (uint64_t *)((char *)v176 + v171[6]);
  uint64_t v180 = v247;
  *uint64_t v179 = v169;
  v179[1] = v180;
  sub_66444(v172, (uint64_t)v176 + v171[7], &qword_3C9BC8);
  uint64_t v181 = sub_2E0D80();
  sub_662B4(v172, &qword_3C9BC8);
  uint64_t v182 = v96;
  v221(v178, v96);

  *(uint64_t *)((char *)v176 + v174) = v181;
  v205((char *)v176 + v171[9], v255, v173);
  uint64_t v183 = v194;
  sub_114B8C((uint64_t)v176, v194, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  unint64_t v184 = (int *)v251;
  uint64_t v185 = v196;
  (*(void (**)(char *, char *, uint64_t))(v250 + 16))(&v196[*(int *)(v251 + 28)], v200, v253);
  uint64_t v186 = (uint64_t *)&v185[v184[8]];
  uint64_t v187 = v210;
  v186[3] = (uint64_t)v171;
  v186[4] = v187;
  uint64_t v188 = sub_71088(v186);
  sub_110D6C(v183, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  *(void *)uint64_t v185 = 0;
  *((void *)v185 + 1) = 0;
  v208(&v185[v184[5]], 1, 1, v231);
  v185[v184[6]] = 0;
  sub_110D6C((uint64_t)v185, v195, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  unint64_t v189 = (unint64_t)v260;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v189 = sub_5E60C(0, *(void *)(v189 + 16) + 1, 1, v189);
  }
  uint64_t v161 = v228;
  unint64_t v191 = *(void *)(v189 + 16);
  unint64_t v190 = *(void *)(v189 + 24);
  uint64_t v160 = v227;
  uint64_t v162 = v226;
  uint64_t v163 = v225;
  if (v191 >= v190 >> 1) {
    unint64_t v189 = sub_5E60C(v190 > 1, v191 + 1, 1, v189);
  }
  *(void *)(v189 + 16) = v191 + 1;
  sub_114B8C(v195, v189 + v209 + v191 * v233, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  uint64_t v260 = (void *)v189;
  sub_110D0C((uint64_t)v196, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_110D0C(v183, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  (*(void (**)(char *, uint64_t))(v250 + 8))(v200, v253);
  sub_662B4(v201, &qword_3CBB60);
  char v192 = v221;
  v221(v214, v182);
  v192(v212, v182);
  sub_110D0C(v220, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
LABEL_36:
  sub_14D4D0((unint64_t *)&v260);
  uint64_t v166 = (uint64_t)v238;
  sub_110D6C((uint64_t)v238, v239, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_110CC4((unint64_t *)&unk_3CA990, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_2E0EB0();
  sub_110D0C(v166, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v162 + 32))(v160, v163, v161);
}

uint64_t sub_10C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_63BAC(&qword_3C75A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E3910();
  __chkstk_darwin(v8 - 8);
  sub_66310(a2, (uint64_t)v13);
  v14[3] = type metadata accessor for SeriesRoomPageIntent();
  v14[4] = sub_110CC4(&qword_3C7FC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntent);
  uint64_t v9 = sub_71088(v14);
  sub_110D6C(a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  v13[40] = 0;
  sub_2E3900();
  v12[3] = &type metadata for SeriesListShelfUpdateIntent;
  v12[4] = sub_114A40();
  v12[0] = swift_allocObject();
  sub_114ADC((uint64_t)v13, v12[0] + 16);
  uint64_t v10 = sub_2DE8E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  type metadata accessor for Page();
  type metadata accessor for Shelf();
  sub_110CC4((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
  sub_110CC4(&qword_3C8148, (void (*)(uint64_t))type metadata accessor for Shelf);
  sub_2E0550();
  return sub_114B38((uint64_t)v13);
}

uint64_t SeriesRoomPageIntentImplementation.performSync(_:objectGraph:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = type metadata accessor for Page();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v46 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_63BAC(&qword_3CB8D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v44 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E38D0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2DE7F0();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_63BAC(&qword_3C8A48);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C8918);
  sub_2E3A90();
  uint64_t v17 = v49;
  uint64_t v16 = v50;
  sub_71044(v48, v49);
  uint64_t v18 = *a1;
  uint64_t v19 = a1[1];
  uint64_t v52 = 4;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v16 + 16))(v51, v18, v19, &v52, v17, v16);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
  if (v51[3] || ([self isOffline] & 1) == 0)
  {
    sub_63BAC(&qword_3C8A50);
    uint64_t v39 = a2;
    sub_2E3A90();
    uint64_t v22 = v49;
    uint64_t v23 = v50;
    sub_71044(v48, v49);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 24))(&v52, v18, v19, v22, v23);
    int v38 = v52;
    uint64_t v24 = v49;
    uint64_t v25 = v50;
    sub_71044(v48, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 32))(v18, v19, v24, v25);
    swift_bridgeObjectRetain();
    sub_2DE7C0();
    uint64_t v26 = type metadata accessor for SeriesRoomPageIntent();
    uint64_t v27 = sub_2E4060();
    uint64_t v28 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v44, 1, 1, v27);
    uint64_t v29 = (uint64_t)v45;
    sub_2E1200();
    sub_662B4(v28, &qword_3CB8D8);
    uint64_t v30 = *(void **)((char *)a1 + *(int *)(v26 + 32));
    LOBYTE(v52) = v38;
    id v31 = v30;
    uint64_t v33 = v46;
    uint64_t v32 = v47;
    sub_1083F0((void (*)(uint64_t, uint64_t))v30, 0, (uint64_t)v12, v29, (unsigned __int8 *)&v52, (uint64_t)v15, v39, v46, v48, (uint64_t)a1);
    if (v32)
    {

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v29, v43);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
      sub_662B4((uint64_t)v15, &qword_3C8A48);
      sub_662B4((uint64_t)v51, &qword_3C8920);
      uint64_t v52 = v32;
      swift_errorRetain();
      sub_63BAC((uint64_t *)&unk_3C9D00);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, 1, 1, v37);
      }
      swift_errorRelease();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v29, v43);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
      sub_662B4((uint64_t)v15, &qword_3C8A48);
      sub_662B4((uint64_t)v51, &qword_3C8920);
      uint64_t v34 = v36;
      sub_114B8C((uint64_t)v33, v36, (uint64_t (*)(void))type metadata accessor for Page);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v34, 0, 1, v37);
    }
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v48);
  }
  else
  {
    sub_10CA70();
    swift_allocError();
    unsigned char *v20 = 3;
    swift_willThrow();
    return sub_662B4((uint64_t)v51, &qword_3C8920);
  }
}

unint64_t sub_10CA70()
{
  unint64_t result = qword_3CB8E0;
  if (!qword_3CB8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB8E0);
  }
  return result;
}

uint64_t sub_10CAC8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  return SeriesRoomPageIntentImplementation.performSync(_:objectGraph:)(a1, a2, a3);
}

unint64_t sub_10CAE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v3 = sub_63BAC(&qword_3C8A48);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_2DED30();
  uint64_t v44 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2DEBB0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3CE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_304420;
  *(void *)(inited + 32) = 0x4449736569726573;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v12 = v2[1];
  *(void *)(inited + 48) = *v2;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x7954736569726573;
  *(void *)(inited + 88) = 0xEA00000000006570;
  uint64_t v43 = type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent(0);
  uint64_t v40 = v2;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for SeriesType.audiobook(_:), v7);
  sub_110CC4((unint64_t *)&qword_3CBA90, (void (*)(uint64_t))&type metadata accessor for SeriesType);
  swift_bridgeObjectRetain();
  sub_2E45C0();
  sub_2E45C0();
  if (v48 == v46 && v49 == v47)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_5:
    sub_2DEE00();
    sub_2DEDF0();
    goto LABEL_7;
  }
  char v13 = sub_2E5020();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13) {
    goto LABEL_5;
  }
  sub_2DEC70();
  sub_2DEC60();
LABEL_7:
  uint64_t v15 = v41;
  uint64_t v14 = v42;
  uint64_t v17 = v39;
  uint64_t v16 = v40;
  uint64_t v18 = sub_2DED20();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v17);
  *(void *)(inited + 96) = v18;
  *(void *)(inited + 104) = v20;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x7344496D616461;
  *(void *)(inited + 136) = 0xE700000000000000;
  uint64_t v21 = v43;
  uint64_t v22 = *(void **)((char *)v16 + *(int *)(v43 + 24));
  uint64_t v23 = sub_63BAC(&qword_3C7748);
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (v22) {
    uint64_t v24 = v22;
  }
  *(void *)(inited + 144) = v24;
  *(void *)(inited + 168) = v23;
  *(void *)(inited + 176) = 0x6564724F74726F73;
  *(void *)(inited + 184) = 0xE900000000000072;
  uint64_t v25 = v45;
  sub_66444((uint64_t)v16 + *(int *)(v21 + 28), v45, &qword_3C8A48);
  uint64_t v26 = sub_2DEF80();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    sub_662B4(v25, &qword_3C8A48);
    uint64_t v29 = (uint64_t *)(inited + 192);
    *(void *)(inited + 216) = &type metadata for String;
LABEL_13:
    *uint64_t v29 = 0;
    unint64_t v34 = 0xE000000000000000;
    goto LABEL_14;
  }
  uint64_t v30 = sub_2DEF70();
  uint64_t v31 = v25;
  uint64_t v32 = v30;
  unint64_t v34 = v33;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v26);
  uint64_t v29 = (uint64_t *)(inited + 192);
  *(void *)(inited + 216) = &type metadata for String;
  if (!v34) {
    goto LABEL_13;
  }
  *uint64_t v29 = v32;
LABEL_14:
  *(void *)(inited + 200) = v34;
  unint64_t v48 = sub_59660(inited);
  id v35 = v15;
  sub_63BAC(&qword_3C8670);
  uint64_t v36 = sub_2E50C0();
  id v37 = [self valueWithObject:v36 inContext:v35];
  swift_unknownObjectRelease();

  v14[3] = sub_63BAC(&qword_3CB930);
  unint64_t result = sub_111810();
  v14[4] = result;
  *uint64_t v14 = v37;
  return result;
}

void sub_10D048(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000000304510;
}

unint64_t sub_10D068@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10CAE0(a1, a2);
}

void sub_10D080(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for Page();
  __chkstk_darwin(v3);
  uint64_t v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_63BAC(&qword_3CBA98);
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v10 + 20);
  sub_2DF120();
  uint64_t v12 = (void *)sub_2E0D80();
  uint64_t v26 = a1;
  uint64_t v27 = v11;
  uint64_t v13 = (uint64_t)v9;
  *(void *)&v9[v11] = v12;
  sub_71044(a1, a1[3]);
  sub_114738();
  uint64_t v25 = v6;
  uint64_t v14 = v28;
  sub_2E5220();
  if (v14)
  {
    uint64_t v18 = v27;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v26);
  }
  else
  {
    uint64_t v15 = v22;
    LOBYTE(v30) = 0;
    sub_110CC4(&qword_3CBAA8, (void (*)(uint64_t))type metadata accessor for Page);
    uint64_t v16 = (uint64_t)v23;
    uint64_t v17 = v24;
    sub_2E4F10();
    sub_114B8C(v16, v13, (uint64_t (*)(void))type metadata accessor for Page);
    sub_63BAC(&qword_3C9BE8);
    char v29 = 1;
    sub_71AA4((unint64_t *)&qword_3C9BF0, &qword_3C9BE8);
    uint64_t v19 = v25;
    sub_2E4F10();

    *(void *)(v13 + v27) = v30;
    sub_63BAC(&qword_3CBAB0);
    char v29 = 2;
    sub_71AA4(&qword_3CBAB8, &qword_3CBAB0);
    sub_2E4F10();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v17);
    *(void *)(v13 + *(int *)(v7 + 24)) = v30;
    sub_110D6C(v13, v21, type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v26);
    sub_110D0C(v13, type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage);
  }
}

uint64_t sub_10D4B4()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x737465737361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701273968;
  }
}

uint64_t sub_10D508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_114E00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10D530(uint64_t a1)
{
  unint64_t v2 = sub_114738();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10D56C(uint64_t a1)
{
  unint64_t v2 = sub_114738();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10D5A8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t SeriesRoomPageIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[83] = a3;
  v3[82] = a2;
  v3[81] = a1;
  uint64_t v4 = type metadata accessor for Page();
  v3[84] = v4;
  v3[85] = *(void *)(v4 - 8);
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  uint64_t v5 = sub_2E38D0();
  v3[89] = v5;
  v3[90] = *(void *)(v5 - 8);
  v3[91] = swift_task_alloc();
  v3[92] = swift_task_alloc();
  uint64_t v6 = sub_2DE7F0();
  v3[93] = v6;
  v3[94] = *(void *)(v6 - 8);
  v3[95] = swift_task_alloc();
  v3[96] = swift_task_alloc();
  sub_63BAC(&qword_3CB8D8);
  v3[97] = swift_task_alloc();
  v3[98] = swift_task_alloc();
  v3[99] = type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage(0);
  v3[100] = swift_task_alloc();
  v3[101] = sub_63BAC(&qword_3CB8F0);
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  uint64_t v7 = sub_2DEBB0();
  v3[104] = v7;
  v3[105] = *(void *)(v7 - 8);
  v3[106] = swift_task_alloc();
  v3[107] = type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent(0);
  v3[108] = swift_task_alloc();
  uint64_t v8 = sub_2DEF80();
  v3[109] = v8;
  v3[110] = *(void *)(v8 - 8);
  v3[111] = swift_task_alloc();
  sub_63BAC(&qword_3C8A48);
  v3[112] = swift_task_alloc();
  v3[113] = swift_task_alloc();
  v3[114] = swift_task_alloc();
  uint64_t v9 = sub_2E3960();
  v3[115] = v9;
  v3[116] = *(void *)(v9 - 8);
  v3[117] = swift_task_alloc();
  uint64_t v10 = sub_63BAC(&qword_3CB8F8);
  v3[118] = v10;
  v3[119] = *(void *)(v10 - 8);
  v3[120] = swift_task_alloc();
  uint64_t v11 = sub_2E3B50();
  v3[121] = v11;
  v3[122] = *(void *)(v11 - 8);
  v3[123] = swift_task_alloc();
  v3[124] = swift_task_alloc();
  sub_63BAC(&qword_3CB900);
  v3[125] = swift_task_alloc();
  v3[126] = swift_task_alloc();
  v3[127] = swift_task_alloc();
  sub_63BAC(&qword_3CB908);
  v3[128] = swift_task_alloc();
  uint64_t v12 = sub_2E4030();
  v3[129] = v12;
  v3[130] = *(void *)(v12 - 8);
  v3[131] = swift_task_alloc();
  v3[132] = swift_task_alloc();
  uint64_t v13 = sub_63BAC(&qword_3C8A50);
  uint64_t v14 = (void *)swift_task_alloc();
  v3[133] = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_10DBD8;
  return BaseObjectGraph.inject<A>(_:)(v3 + 23, v13, v13);
}

uint64_t sub_10DBD8()
{
  *(void *)(*(void *)v1 + 1072) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_10FE38;
  }
  else {
    unint64_t v2 = sub_10DCEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10DCEC()
{
  uint64_t v1 = (uint64_t *)v0[82];
  sub_63BAC(&qword_3C8918);
  sub_2E3B00();
  sub_2E41D0();
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  sub_71044(v0 + 13, v2);
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v0[80] = 4;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                      + **(int **)(v3 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[135] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10DE6C;
  return v8(v0 + 8, v4, v5, v0 + 80, v2, v3);
}

uint64_t sub_10DE6C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10DF68, 0, 0);
}

uint64_t sub_10DF68()
{
  uint64_t v1 = *(void *)(v0 + 1040);
  uint64_t v2 = *(void *)(v0 + 1032);
  uint64_t v3 = *(void *)(v0 + 1024);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 104);
  sub_2E3AF0();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  uint64_t v5 = *(void *)(v0 + 1056);
  uint64_t v6 = *(void *)(v0 + 1040);
  uint64_t v7 = *(void *)(v0 + 1032);
  uint64_t v8 = *(void *)(v0 + 1024);
  if (v4 == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for PageIntentInstrumentation.notInstrumented(_:), v7);
    sub_662B4(v8, &qword_3CB908);
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, *(void *)(v0 + 1024), v7);
  }
  uint64_t v9 = *(void *)(v0 + 1048);
  uint64_t v10 = *(void *)(v0 + 1040);
  uint64_t v11 = *(void *)(v0 + 1032);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 16))(v9, *(void *)(v0 + 1056), v11);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11);
  if (v12 == enum case for PageIntentInstrumentation.primaryData(_:))
  {
    uint64_t v13 = *(void *)(v0 + 1048);
    uint64_t v14 = *(void *)(v0 + 1016);
    uint64_t v15 = *(void *)(v0 + 976);
    uint64_t v16 = *(void *)(v0 + 968);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 1040) + 96))(v13, *(void *)(v0 + 1032));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v13, v16);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v16);
  }
  else
  {
    int v17 = v12;
    if (v12 == enum case for PageIntentInstrumentation.secondaryData(_:))
    {
      uint64_t v18 = *(void *)(v0 + 1048);
      uint64_t v19 = *(void *)(v0 + 1040);
      uint64_t v20 = *(void *)(v0 + 1032);
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 976) + 56))(*(void *)(v0 + 1016), 1, 1, *(void *)(v0 + 968));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
    else
    {
      int v21 = enum case for PageIntentInstrumentation.notInstrumented(_:);
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 976) + 56))(*(void *)(v0 + 1016), 1, 1, *(void *)(v0 + 968));
      if (v17 != v21) {
        (*(void (**)(void, void))(*(void *)(v0 + 1040) + 8))(*(void *)(v0 + 1048), *(void *)(v0 + 1032));
      }
    }
  }
  uint64_t v22 = *(void *)(v0 + 1008);
  uint64_t v23 = *(void *)(v0 + 976);
  uint64_t v24 = *(void *)(v0 + 968);
  sub_66444(*(void *)(v0 + 1016), v22, &qword_3CB900);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  *(void *)(v0 + 1088) = v25;
  *(void *)(v0 + 1096) = (v23 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v25(v22, 1, v24) == 1)
  {
    sub_662B4(*(void *)(v0 + 1008), &qword_3CB900);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 976) + 32))(*(void *)(v0 + 992), *(void *)(v0 + 1008), *(void *)(v0 + 968));
    if (qword_3C6750 != -1) {
      swift_once();
    }
    uint64_t v44 = *(void *)(v0 + 992);
    uint64_t v26 = *(void *)(v0 + 976);
    uint64_t v27 = *(void *)(v0 + 960);
    uint64_t v28 = *(void *)(v0 + 952);
    uint64_t v29 = *(void *)(v0 + 944);
    uint64_t v30 = *(void *)(v0 + 936);
    uint64_t v31 = *(void *)(v0 + 928);
    uint64_t v45 = *(void *)(v0 + 920);
    uint64_t v46 = *(void *)(v0 + 968);
    uint64_t v32 = *(void *)(v0 + 656);
    uint64_t v33 = sub_58BA0(v29, (uint64_t)qword_3EE248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v33, v29);
    uint64_t v34 = *(void *)(v32 + *(int *)(type metadata accessor for SeriesRoomPageIntent() + 32));
    sub_66444(v0 + 64, v0 + 144, &qword_3C8920);
    if (v34 | *(void *)(v0 + 168)) {
      char v35 = 1;
    }
    else {
      char v35 = 2;
    }
    sub_662B4(v0 + 144, &qword_3C8920);
    *(unsigned char *)(v0 + 58) = v35;
    sub_2E3B40();
    sub_2E3950();
    sub_1117BC();
    sub_2E3B90();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v45);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v44, v46);
  }
  uint64_t v36 = *(uint64_t **)(v0 + 656);
  uint64_t v37 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 216);
  sub_71044((void *)(v0 + 184), v37);
  uint64_t v39 = *v36;
  uint64_t v40 = v36[1];
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 64)
                                                                            + **(int **)(v38 + 64));
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 1104) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_10E4C8;
  uint64_t v42 = *(void *)(v0 + 912);
  return v47(v42, v39, v40, v37, v38);
}

uint64_t sub_10E4C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10E5C4, 0, 0);
}

uint64_t sub_10E5C4()
{
  uint64_t v1 = (uint64_t *)*((void *)v0 + 82);
  uint64_t v2 = *((void *)v0 + 26);
  uint64_t v3 = *((void *)v0 + 27);
  sub_71044((void *)v0 + 23, v2);
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v8 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 56) + **(int **)(v3 + 56));
  uint64_t v6 = (void *)swift_task_alloc();
  *((void *)v0 + 139) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10E6F4;
  return v8(v0 + 57, v4, v5, v2, v3);
}

uint64_t sub_10E6F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10E7F0, 0, 0);
}

uint64_t sub_10E7F0()
{
  *(unsigned char *)(v0 + 59) = *(unsigned char *)(v0 + 57);
  sub_66444(v0 + 64, v0 + 264, &qword_3C8920);
  if (!*(void *)(v0 + 288))
  {
    uint64_t v8 = &qword_3C8920;
    uint64_t v9 = v0 + 264;
LABEL_7:
    sub_662B4(v9, v8);
    uint64_t v10 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  sub_65CF4((long long *)(v0 + 264), v0 + 224);
  sub_2DEFF0();
  if (!*(void *)(v0 + 568))
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 224);
    uint64_t v8 = &qword_3C8928;
    uint64_t v9 = v0 + 544;
    goto LABEL_7;
  }
  uint64_t v1 = (void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 1072);
  sub_65CF4((long long *)(v0 + 544), v0 + 504);
  sub_71044((void *)(v0 + 504), *(void *)(v0 + 528));
  sub_2DEB70();
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 1056);
    uint64_t v4 = *(void *)(v0 + 1040);
    uint64_t v5 = *(void *)(v0 + 1032);
    uint64_t v6 = *(void *)(v0 + 1016);
    uint64_t v7 = *(void *)(v0 + 912);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 224);
    sub_662B4(v7, &qword_3C8A48);
    sub_662B4(v6, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_662B4(v0 + 64, &qword_3C8920);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 504);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 184);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
    return v61();
  }
  uint64_t v74 = (long long *)(v0 + 16);
  uint64_t v75 = *(void *)(v0 + 912);
  uint64_t v36 = *(void *)(v0 + 904);
  uint64_t v37 = *(void *)(v0 + 880);
  uint64_t v73 = *(void *)(v0 + 872);
  swift_getAssociatedTypeWitness();
  sub_63BAC(&qword_3C6F68);
  uint64_t v38 = sub_2E4D90();
  swift_bridgeObjectRelease();
  sub_200E2C(v38);
  swift_bridgeObjectRelease();
  sub_66444(v75, v36, &qword_3C8A48);
  uint64_t v76 = v0 + 224;
  sub_66310(v0 + 224, v0 + 584);
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v73);
  uint64_t v40 = *(void *)(v0 + 904);
  uint64_t v41 = *(void *)(v0 + 888);
  uint64_t v42 = *(void *)(v0 + 880);
  uint64_t v43 = *(void *)(v0 + 872);
  if (v39 == 1)
  {
    sub_71044((void *)(v0 + 584), *(void *)(v0 + 608));
    char v44 = sub_2DEF10();
    uint64_t v45 = (unsigned int *)&enum case for SeriesListSortOrder.ascending(_:);
    if ((v44 & 1) == 0) {
      uint64_t v45 = (unsigned int *)&enum case for SeriesListSortOrder.popular(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v42 + 104))(v41, *v45, v43);
    sub_662B4(v40, &qword_3C8A48);
  }
  else
  {
    (*(void (**)(void, void, void))(v42 + 32))(*(void *)(v0 + 888), *(void *)(v0 + 904), *(void *)(v0 + 872));
  }
  uint64_t v46 = *(void *)(v0 + 888);
  uint64_t v47 = *(void *)(v0 + 880);
  uint64_t v48 = *(void *)(v0 + 872);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 584);
  uint64_t v49 = sub_2DEF50();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  if (*(void *)(v49 + 16) >= 0xAuLL) {
    int64_t v50 = 10;
  }
  else {
    int64_t v50 = *(void *)(v49 + 16);
  }
  if (v50)
  {
    sub_2A47F4(0, v50, 0);
    uint64_t v51 = 0;
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v52 = v49;
      sub_66310(v49 + v51 + 32, v0 + 464);
      sub_71044((void *)(v0 + 464), *(void *)(v0 + 488));
      uint64_t v53 = sub_2DEC00();
      uint64_t v55 = v54;
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 464);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A47F4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
      unint64_t v57 = _swiftEmptyArrayStorage[2];
      unint64_t v56 = _swiftEmptyArrayStorage[3];
      if (v57 >= v56 >> 1)
      {
        sub_2A47F4(v56 > 1, v57 + 1, 1);
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
      _swiftEmptyArrayStorage[2] = v57 + 1;
      uint64_t v58 = &_swiftEmptyArrayStorage[2 * v57];
      v58[4] = v53;
      v58[5] = v55;
      v51 += 40;
      uint64_t v49 = v52;
    }
    while (40 * v50 != v51);
    swift_bridgeObjectRelease();
    uint64_t v1 = (void *)(v0 + 504);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v59 = *(char **)(v0 + 528);
  uint64_t v60 = *(char **)(v0 + 536);
  sub_71044(v1, (uint64_t)v59);
  swift_bridgeObjectRetain();
  SeriesInfo.getPromotionState()(v59, v60, (uint64_t)v74);
  if (*(unsigned char *)(v0 + 56) == 4)
  {
    sub_65CF4(v74, v0 + 304);
    sub_71044((void *)(v0 + 304), *(void *)(v0 + 328));
    uint64_t v62 = sub_2DEC00();
    char v64 = sub_110814(v62, v63, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v64 & 1) == 0)
    {
      int v65 = v1;
      sub_71044((void *)(v0 + 304), *(void *)(v0 + 328));
      uint64_t v66 = sub_2DEC00();
      uint64_t v68 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_5E640(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      }
      unint64_t v70 = v10[2];
      unint64_t v69 = v10[3];
      if (v70 >= v69 >> 1) {
        uint64_t v10 = sub_5E640((void *)(v69 > 1), v70 + 1, 1, v10);
      }
      v10[2] = v70 + 1;
      unint64_t v71 = &v10[2 * v70];
      v71[4] = v66;
      v71[5] = v68;
      uint64_t v1 = v65;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v76);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 304);
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v76);
    swift_bridgeObjectRelease();
    sub_953D0((uint64_t)v74);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v1);
LABEL_8:
  uint64_t v11 = *(void *)(v0 + 848);
  uint64_t v12 = *(void *)(v0 + 840);
  uint64_t v13 = *(void *)(v0 + 832);
  uint64_t v14 = *(char **)(v0 + 656);
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v17 = type metadata accessor for SeriesRoomPageIntent();
  *(void *)(v0 + 1120) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v11, &v14[*(int *)(v17 + 20)], v13);
  if (!v10[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    if (*(void *)(v0 + 88)) {
      goto LABEL_10;
    }
LABEL_12:
    sub_66444(*(void *)(v0 + 912), *(void *)(v0 + 896), &qword_3C8A48);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!*(void *)(v0 + 88)) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v18 = *(void *)(v0 + 896);
  uint64_t v19 = *(void *)(v0 + 880);
  uint64_t v20 = *(void *)(v0 + 872);
  (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v18, enum case for SeriesListSortOrder.releaseDate(_:), v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v18, 0, 1, v20);
LABEL_13:
  uint64_t v21 = *(void *)(v0 + 896);
  uint64_t v22 = *(char **)(v0 + 864);
  uint64_t v23 = *(int **)(v0 + 856);
  uint64_t v24 = *(void *)(v0 + 848);
  uint64_t v25 = *(void *)(v0 + 840);
  uint64_t v26 = *(void *)(v0 + 832);
  *(void *)uint64_t v22 = v16;
  *((void *)v22 + 1) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v22[v23[5]], v24, v26);
  *(void *)&v22[v23[6]] = v10;
  sub_71900(v21, (uint64_t)&v22[v23[7]], &qword_3C8A48);
  id v27 = [self sharedInstance];
  *(void *)(v0 + 1128) = v27;
  *(void *)(v0 + 632) = v27;
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v28;
  unint64_t v29 = sub_110C84();
  uint64_t v30 = sub_110CC4(&qword_3CB910, (void (*)(uint64_t))sub_110C84);
  uint64_t v31 = sub_110CC4(&qword_3CB918, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent);
  *uint64_t v28 = v0;
  v28[1] = sub_10F23C;
  uint64_t v32 = *(void *)(v0 + 864);
  uint64_t v33 = *(void *)(v0 + 856);
  uint64_t v34 = *(void *)(v0 + 816);
  uint64_t v35 = *(void *)(v0 + 664);
  return CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(v34, v32, v35, v29, v33, v30, v31);
}

uint64_t sub_10F23C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1144) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_110030;
  }
  else {
    uint64_t v3 = sub_10F360;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10F360()
{
  uint64_t v82 = v0;
  uint64_t v79 = v0 + 64;
  uint64_t v80 = (void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 808);
  uint64_t v3 = *(void *)(v0 + 800);
  sub_71900(*(void *)(v0 + 816), v1, &qword_3CB8F0);
  sub_110D6C(v1, v3, type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage);
  uint64_t v4 = *(void *)(v1 + *(int *)(v2 + 36));
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = sub_2E4060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (v5)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(*(void *)(v0 + 784), v4+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1088);
  uint64_t v10 = *(void *)(v0 + 1016);
  uint64_t v11 = *(void *)(v0 + 1000);
  uint64_t v12 = *(void *)(v0 + 968);
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v7 + 56))(*(void *)(v0 + 784), v8, 1, v6);
  sub_66444(v10, v11, &qword_3CB900);
  if (v9(v11, 1, v12) == 1)
  {
    sub_662B4(*(void *)(v0 + 1000), &qword_3CB900);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 976) + 32))(*(void *)(v0 + 984), *(void *)(v0 + 1000), *(void *)(v0 + 968));
    sub_2E3950();
    if (qword_3C6740 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_63BAC(&qword_3CB920);
    sub_58BA0(v13, (uint64_t)qword_3EE218);
    sub_2E3B40();
    sub_2E3B70();
    swift_bridgeObjectRelease();
    if (qword_3C6748 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 984);
    uint64_t v15 = *(void *)(v0 + 976);
    uint64_t v16 = *(void *)(v0 + 968);
    uint64_t v17 = *(void *)(v0 + 936);
    uint64_t v18 = *(void *)(v0 + 928);
    uint64_t v19 = *(void *)(v0 + 920);
    sub_58BA0(v13, (uint64_t)qword_3EE230);
    sub_2E3B40();
    sub_2E3B70();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v77 = *(void *)(v0 + 1144);
  unsigned __int8 v65 = *(unsigned char *)(v0 + 59);
  uint64_t v74 = *(void *)(v0 + 912);
  uint64_t v20 = *(void *)(v0 + 800);
  uint64_t v21 = *(void *)(v0 + 792);
  uint64_t v22 = *(void *)(v0 + 768);
  uint64_t v23 = *(void *)(v0 + 736);
  uint64_t v68 = *(uint64_t **)(v0 + 704);
  unint64_t v71 = *(uint64_t (**)(void))(v0 + 664);
  uint64_t v24 = *(void *)(v0 + 656);
  swift_bridgeObjectRetain();
  sub_2DE7C0();
  sub_2E1200();
  uint64_t v25 = *(void **)(v20 + *(int *)(v21 + 20));
  uint64_t v26 = *(void *)(v20 + *(int *)(v21 + 24));
  v81[0] = v65;
  id v27 = v25;
  swift_bridgeObjectRetain();
  sub_1083F0((void (*)(uint64_t, uint64_t))v25, v26, v22, v23, v81, v74, v71, v68, v80, v24);
  if (v77)
  {
    uint64_t v75 = *(void *)(v0 + 1056);
    uint64_t v69 = *(void *)(v0 + 1040);
    uint64_t v72 = *(void *)(v0 + 1032);
    uint64_t v63 = *(void *)(v0 + 864);
    uint64_t v66 = *(void *)(v0 + 912);
    uint64_t v59 = *(void *)(v0 + 800);
    uint64_t v61 = *(void *)(v0 + 824);
    uint64_t v55 = *(void *)(v0 + 1016);
    uint64_t v57 = *(void *)(v0 + 784);
    uint64_t v28 = *(void *)(v0 + 768);
    uint64_t v29 = *(void *)(v0 + 752);
    uint64_t v30 = *(void *)(v0 + 744);
    uint64_t v31 = *(void *)(v0 + 736);
    uint64_t v32 = *(void *)(v0 + 720);
    uint64_t v33 = *(void *)(v0 + 712);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_11094C(v55);
    sub_662B4(v57, &qword_3CB8D8);
    sub_110D0C(v59, type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage);
    sub_662B4(v61, &qword_3CB8F0);
    sub_110D0C(v63, type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent);
    sub_662B4(v66, &qword_3C8A48);
    sub_662B4(v55, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v75, v72);
    sub_662B4(v79, &qword_3C8920);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v35 = *(void *)(v0 + 800);
    uint64_t v36 = *(void *)(v0 + 704);
    uint64_t v37 = *(void *)(v0 + 696);
    uint64_t v38 = *(void *)(v0 + 672);
    swift_bridgeObjectRelease();

    uint64_t v39 = *(void *)(v35 + *(int *)(v38 + 52));
    uint64_t v40 = *(void *)(v39 + 16);
    sub_110D6C(v36, v37, (uint64_t (*)(void))type metadata accessor for Page);
    if (v40)
    {
      uint64_t v41 = (void *)(*(void *)(v0 + 696) + *(int *)(v38 + 52));
      swift_bridgeObjectRetain_n();
      sub_1112E8(v39, (uint64_t (*)(void))sub_5E5C4, (uint64_t (*)(void))type metadata accessor for Shelf);
      uint64_t v42 = swift_bridgeObjectRetain();
      uint64_t v43 = sub_110F84(v42);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *uint64_t v41 = v43;
    }
    uint64_t v78 = *(void *)(v0 + 1056);
    uint64_t v73 = *(void *)(v0 + 1040);
    uint64_t v76 = *(void *)(v0 + 1032);
    uint64_t v67 = *(void *)(v0 + 864);
    uint64_t v70 = *(void *)(v0 + 912);
    uint64_t v62 = *(void *)(v0 + 800);
    uint64_t v64 = *(void *)(v0 + 824);
    uint64_t v58 = *(void *)(v0 + 1016);
    uint64_t v60 = *(void *)(v0 + 784);
    uint64_t v44 = *(void *)(v0 + 752);
    uint64_t v45 = *(void *)(v0 + 744);
    uint64_t v46 = *(void *)(v0 + 736);
    uint64_t v47 = *(void *)(v0 + 720);
    uint64_t v48 = *(void *)(v0 + 712);
    uint64_t v49 = *(void *)(v0 + 704);
    uint64_t v50 = *(void *)(v0 + 696);
    uint64_t v51 = *(void *)(v0 + 680);
    uint64_t v54 = *(void *)(v0 + 768);
    uint64_t v56 = *(void *)(v0 + 672);
    uint64_t v52 = *(void *)(v0 + 648);
    sub_110D0C(v49, (uint64_t (*)(void))type metadata accessor for Page);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v54, v45);
    sub_114B8C(v50, v49, (uint64_t (*)(void))type metadata accessor for Page);
    sub_114B8C(v49, v52, (uint64_t (*)(void))type metadata accessor for Page);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v56);
    sub_11094C(v58);
    sub_662B4(v60, &qword_3CB8D8);
    sub_110D0C(v62, type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage);
    sub_662B4(v64, &qword_3CB8F0);
    sub_110D0C(v67, type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent);
    sub_662B4(v70, &qword_3C8A48);
    sub_662B4(v58, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v78, v76);
    sub_662B4(v79, &qword_3C8920);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v34();
}

uint64_t sub_10FE38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_110030()
{
  uint64_t v38 = v0;
  if (*(void *)(*(void *)(v0 + 656) + *(int *)(*(void *)(v0 + 1120) + 24) + 8))
  {
    sub_66444(v0 + 64, v0 + 384, &qword_3C8920);
    if (*(void *)(v0 + 408))
    {
      uint64_t v1 = *(void *)(v0 + 1120);
      unsigned __int8 v30 = *(unsigned char *)(v0 + 59);
      uint64_t v34 = *(void *)(v0 + 912);
      uint64_t v2 = *(void *)(v0 + 776);
      uint64_t v28 = *(void *)(v0 + 760);
      uint64_t v3 = *(void *)(v0 + 728);
      uint64_t v36 = *(uint64_t **)(v0 + 688);
      uint64_t v32 = *(uint64_t (**)(void))(v0 + 664);
      uint64_t v4 = *(void *)(v0 + 656);
      sub_65CF4((long long *)(v0 + 384), v0 + 344);
      swift_bridgeObjectRetain();
      sub_2DE7C0();
      uint64_t v5 = sub_2E4060();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
      sub_2E1200();
      sub_662B4(v2, &qword_3CB8D8);
      sub_66310(v0 + 344, v0 + 424);
      uint64_t v6 = *(void **)(v4 + *(int *)(v1 + 32));
      v37[0] = v30;
      id v7 = v6;
      sub_1083F0((void (*)(uint64_t, uint64_t))v6, 0, v28, v3, v37, v34, v32, v36, (void *)(v0 + 184), v4);
      uint64_t v8 = *(void *)(v0 + 1040);
      uint64_t v33 = *(void *)(v0 + 1032);
      uint64_t v35 = *(void *)(v0 + 1056);
      uint64_t v29 = *(void *)(v0 + 912);
      uint64_t v31 = *(void *)(v0 + 1016);
      uint64_t v26 = *(void *)(v0 + 760);
      uint64_t v27 = *(void *)(v0 + 864);
      uint64_t v9 = *(void *)(v0 + 752);
      uint64_t v10 = *(void *)(v0 + 744);
      uint64_t v11 = *(void *)(v0 + 728);
      uint64_t v12 = *(void *)(v0 + 720);
      uint64_t v13 = *(void *)(v0 + 712);
      uint64_t v21 = *(void *)(v0 + 680);
      uint64_t v24 = *(void *)(v0 + 688);
      uint64_t v25 = *(void *)(v0 + 672);
      uint64_t v23 = *(void *)(v0 + 648);

      swift_errorRelease();
      sub_662B4(v0 + 424, &qword_3C8920);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v10);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 344);
      sub_110D0C(v27, type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent);
      sub_662B4(v29, &qword_3C8A48);
      sub_662B4(v31, &qword_3CB900);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v35, v33);
      sub_662B4(v0 + 64, &qword_3C8920);
      sub_114B8C(v24, v23, (uint64_t (*)(void))type metadata accessor for Page);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v25);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 184);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_662B4(v0 + 384, &qword_3C8920);
  }
  uint64_t v14 = *(void *)(v0 + 1056);
  uint64_t v15 = *(void *)(v0 + 1040);
  uint64_t v16 = *(void *)(v0 + 1032);
  uint64_t v17 = *(void *)(v0 + 1016);
  uint64_t v18 = *(void *)(v0 + 912);
  uint64_t v19 = *(void *)(v0 + 864);
  swift_willThrow();
  sub_110D0C(v19, type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent);
  sub_662B4(v18, &qword_3C8A48);
  sub_662B4(v17, &qword_3CB900);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  sub_662B4(v0 + 64, &qword_3C8920);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 184);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v22();
}

uint64_t sub_110814(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_2E5020();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2E5020() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1108DC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return v2 & 1;
  }
  if (*(unsigned char *)(a2 + 32) == (result & 1)) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v3 = 33;
  while (1)
  {
    uint64_t v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1)) {
      break;
    }
    char v5 = *(unsigned char *)(a2 + v3) ^ result;
    if (v5)
    {
      ++v3;
      if (v4 != v2) {
        continue;
      }
    }
    LOBYTE(v2) = v5 ^ 1;
    return v2 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_11094C(uint64_t a1)
{
  uint64_t v2 = sub_2E3960();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CB900);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2E3B50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  BOOL v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66444(a1, (uint64_t)v8, &qword_3CB900);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_662B4((uint64_t)v8, &qword_3CB900);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_2E3950();
  if (qword_3C6740 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_63BAC(&qword_3CB920);
  sub_58BA0(v14, (uint64_t)qword_3EE218);
  sub_2E3B40();
  sub_2E3B60();
  swift_bridgeObjectRelease();
  if (qword_3C6748 != -1) {
    swift_once();
  }
  sub_58BA0(v14, (uint64_t)qword_3EE230);
  sub_2E3B40();
  sub_2E3B60();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CBA48);
}

uint64_t type metadata accessor for SeriesRoomPageIntentImplementation.JSSeriesRoomPageIntent(uint64_t a1)
{
  return sub_6E6E0(a1, (uint64_t *)&unk_3CB9A8);
}

unint64_t sub_110C84()
{
  unint64_t result = qword_3C7FF0;
  if (!qword_3C7FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3C7FF0);
  }
  return result;
}

uint64_t sub_110CC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_110D0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_110D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_110DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_6E3CC;
  return SeriesRoomPageIntentImplementation.perform(_:objectGraph:)(a1, a2, a3);
}

unint64_t BATracker.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = [self valueWithObject:v2 inContext:a1];
  a2[3] = sub_63BAC(&qword_3CB930);
  unint64_t result = sub_111810();
  a2[4] = result;
  *a2 = v4;
  return result;
}

unint64_t sub_110F04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = [self valueWithObject:*v2 inContext:a1];
  a2[3] = sub_63BAC(&qword_3CB930);
  unint64_t result = sub_111810();
  a2[4] = result;
  *a2 = v4;
  return result;
}

void *sub_110F84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CBAC0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v29 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (void *)((char *)v25 - v9);
  __chkstk_darwin(v8);
  BOOL v12 = (void *)((char *)v25 - v11);
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_2A46B0(0, 0, 0);
  uint64_t v13 = v31;
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v28 = v14;
  v25[1] = a1;
  if (v14)
  {
    uint64_t v15 = 0;
    unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v26 = *(void *)(v3 + 72);
    unint64_t v27 = v16;
    uint64_t v17 = a1 + v16;
    uint64_t v18 = v30;
    do
    {
      uint64_t v19 = (uint64_t)&v29[*(int *)(v5 + 48)];
      sub_110D6C(v17, v19, (uint64_t (*)(void))type metadata accessor for Shelf);
      uint64_t v20 = (uint64_t)v10 + *(int *)(v5 + 48);
      *uint64_t v10 = v15;
      sub_114B8C(v19, v20, (uint64_t (*)(void))type metadata accessor for Shelf);
      sub_71900((uint64_t)v10, (uint64_t)v12, &qword_3CBAC0);
      Shelf.withMetricsIndex(_:)(*v12, v18);
      sub_662B4((uint64_t)v12, &qword_3CBAC0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A46B0(0, v13[2] + 1, 1);
        uint64_t v13 = v31;
      }
      unint64_t v22 = v13[2];
      unint64_t v21 = v13[3];
      if (v22 >= v21 >> 1)
      {
        sub_2A46B0(v21 > 1, v22 + 1, 1);
        uint64_t v13 = v31;
      }
      ++v15;
      v13[2] = v22 + 1;
      uint64_t v23 = v26;
      uint64_t v18 = v30;
      sub_114B8C(v30, (uint64_t)v13 + v27 + v22 * v26, (uint64_t (*)(void))type metadata accessor for Shelf);
      v17 += v23;
    }
    while (v28 != v15);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_111270(uint64_t a1)
{
  return sub_1112E8(a1, (uint64_t (*)(void))sub_5DFD8, (uint64_t (*)(void))&type metadata accessor for ToolbarActionMenuItem);
}

uint64_t sub_11129C(uint64_t a1)
{
  return sub_111640(a1, (uint64_t (*)(void))sub_5E480, &qword_3C6F68);
}

uint64_t sub_1112BC(uint64_t a1)
{
  return sub_1112E8(a1, (uint64_t (*)(void))sub_5E5C4, (uint64_t (*)(void))type metadata accessor for Shelf);
}

uint64_t sub_1112E8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

uint64_t sub_1114A8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_5E5F8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[40 * v9 + 32];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_63BAC(&qword_3C6F40);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

uint64_t sub_111620(uint64_t a1)
{
  return sub_111640(a1, (uint64_t (*)(void))sub_5E2C0, &qword_3C7120);
}

uint64_t sub_111640(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_63BAC(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

unint64_t sub_1117BC()
{
  unint64_t result = qword_3CB928;
  if (!qword_3CB928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB928);
  }
  return result;
}

unint64_t sub_111810()
{
  unint64_t result = qword_3CB938;
  if (!qword_3CB938)
  {
    sub_70ECC(&qword_3CB930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CB938);
  }
  return result;
}

uint64_t sub_11187C()
{
  return sub_110CC4((unint64_t *)&unk_3CB940, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntent);
}

uint64_t sub_1118C4()
{
  return sub_110CC4(&qword_3C7FC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntent);
}

ValueMetadata *type metadata accessor for SeriesRoomPageIntentImplementation()
{
  return &type metadata for SeriesRoomPageIntentImplementation;
}

uint64_t *sub_11191C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2DEBB0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    BOOL v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_2DEF80();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_63BAC(&qword_3C8A48);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_111AFC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2DEBB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_2DEF80();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_111C24(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DEBB0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  BOOL v14 = (char *)a2 + v12;
  uint64_t v15 = sub_2DEF80();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_63BAC(&qword_3C8A48);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_111DB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DEBB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2DEF80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_63BAC(&qword_3C8A48);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *sub_111FB0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DEBB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2DEF80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_63BAC(&qword_3C8A48);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *sub_11211C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DEBB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_2DEF80();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_63BAC(&qword_3C8A48);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_112300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_112314);
}

uint64_t sub_112314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2DEBB0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3C8A48);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_112444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_112458);
}

uint64_t sub_112458(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2DEBB0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3C8A48);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_112588()
{
  sub_2DEBB0();
  if (v0 <= 0x3F)
  {
    sub_112664();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_112664()
{
  if (!qword_3CB9B8)
  {
    sub_2DEF80();
    unint64_t v0 = sub_2E4B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3CB9B8);
    }
  }
}

void *sub_1126BC(void *a1, char *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for Page();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_2DF5D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_63BAC(&qword_3C97E8);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = v7[6];
    int v17 = (char *)v4 + v16;
    uint64_t v18 = &a2[v16];
    if (v13(&a2[v16], 1, v11))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *((unsigned char *)v4 + v7[7]) = a2[v7[7]];
    *((unsigned char *)v4 + v7[8]) = a2[v7[8]];
    uint64_t v20 = v7[9];
    unint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_2E0980();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_63BAC(&qword_3CB0B8);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    *(void *)((char *)v4 + v7[10]) = *(void *)&a2[v7[10]];
    *(void *)((char *)v4 + v7[11]) = *(void *)&a2[v7[11]];
    *((unsigned char *)v4 + v7[12]) = a2[v7[12]];
    *(void *)((char *)v4 + v7[13]) = *(void *)&a2[v7[13]];
    uint64_t v26 = v7[14];
    unint64_t v27 = (void *)((char *)v4 + v26);
    uint64_t v28 = &a2[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *unint64_t v27 = *(void *)v28;
    v27[1] = v29;
    uint64_t v30 = v7[15];
    uint64_t v52 = &a2[v30];
    uint64_t v53 = (char *)v4 + v30;
    uint64_t v31 = sub_2DE7F0();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v53, v52, v31);
    *(void *)((char *)v4 + v7[16]) = *(void *)&a2[v7[16]];
    uint64_t v33 = v7[17];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = &a2[v33];
    uint64_t v36 = sub_2E38D0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v37(v34, v35, v36);
    *((unsigned char *)v4 + v7[18]) = a2[v7[18]];
    *(void *)((char *)v4 + v7[19]) = *(void *)&a2[v7[19]];
    *(void *)((char *)v4 + v7[20]) = *(void *)&a2[v7[20]];
    *((unsigned char *)v4 + v7[21]) = a2[v7[21]];
    uint64_t v38 = v7[22];
    uint64_t v39 = (void *)((char *)v4 + v38);
    uint64_t v40 = &a2[v38];
    uint64_t v41 = *((void *)v40 + 1);
    *uint64_t v39 = *(void *)v40;
    v39[1] = v41;
    uint64_t v42 = v7[23];
    uint64_t v43 = (char *)v4 + v42;
    uint64_t v44 = &a2[v42];
    uint64_t v45 = *(void *)&a2[v42 + 8];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v45)
    {
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
      *((void *)v43 + 4) = *((void *)v44 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v46 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v46;
      *((void *)v43 + 4) = *((void *)v44 + 4);
    }
    uint64_t v47 = *(int *)(a3 + 20);
    uint64_t v48 = *(int *)(a3 + 24);
    uint64_t v49 = *(void **)&a2[v47];
    *(void *)((char *)v4 + v47) = v49;
    *(void *)((char *)v4 + v48) = *(void *)&a2[v48];
    id v50 = v49;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_112BBC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = (int *)type metadata accessor for Page();
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_2DF5D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = a1 + v4[6];
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v10 = a1 + v4[9];
  uint64_t v11 = sub_2E0980();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v4[15];
  uint64_t v14 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + v4[17];
  uint64_t v16 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + v4[23] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_112E80(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_63BAC(&qword_3C97E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *((unsigned char *)a1 + v6[7]) = a2[v6[7]];
  *((unsigned char *)a1 + v6[8]) = a2[v6[8]];
  uint64_t v18 = v6[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_2E0980();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_63BAC(&qword_3CB0B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)((char *)a1 + v6[10]) = *(void *)&a2[v6[10]];
  *(void *)((char *)a1 + v6[11]) = *(void *)&a2[v6[11]];
  *((unsigned char *)a1 + v6[12]) = a2[v6[12]];
  *(void *)((char *)a1 + v6[13]) = *(void *)&a2[v6[13]];
  uint64_t v24 = v6[14];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *((void *)v26 + 1);
  *uint64_t v25 = *(void *)v26;
  v25[1] = v27;
  uint64_t v28 = v6[15];
  id v50 = &a2[v28];
  uint64_t v51 = (char *)a1 + v28;
  uint64_t v29 = sub_2DE7F0();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v51, v50, v29);
  *(void *)((char *)a1 + v6[16]) = *(void *)&a2[v6[16]];
  uint64_t v31 = v6[17];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_2E38D0();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_bridgeObjectRetain();
  v35(v32, v33, v34);
  *((unsigned char *)a1 + v6[18]) = a2[v6[18]];
  *(void *)((char *)a1 + v6[19]) = *(void *)&a2[v6[19]];
  *(void *)((char *)a1 + v6[20]) = *(void *)&a2[v6[20]];
  *((unsigned char *)a1 + v6[21]) = a2[v6[21]];
  uint64_t v36 = v6[22];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = &a2[v36];
  uint64_t v39 = *((void *)v38 + 1);
  *uint64_t v37 = *(void *)v38;
  v37[1] = v39;
  uint64_t v40 = v6[23];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = &a2[v40];
  uint64_t v43 = *(void *)&a2[v40 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v43)
  {
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
    *((void *)v41 + 4) = *((void *)v42 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *((_OWORD *)v42 + 1);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v44;
    *((void *)v41 + 4) = *((void *)v42 + 4);
  }
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = *(int *)(a3 + 24);
  uint64_t v47 = *(void **)&a2[v45];
  *(void *)((char *)a1 + v45) = v47;
  *(void *)((char *)a1 + v46) = *(void *)&a2[v46];
  id v48 = v47;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_113330(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Page();
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DF5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_63BAC(&qword_3C97E8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_63BAC(&qword_3C97E8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  a1[v5[7]] = *((unsigned char *)a2 + v5[7]);
  a1[v5[8]] = *((unsigned char *)a2 + v5[8]);
  uint64_t v21 = v5[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_2E0980();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_63BAC(&qword_3CB0B8);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  *(void *)&a1[v5[10]] = *(void *)((char *)a2 + v5[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v5[11]] = *(void *)((char *)a2 + v5[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v5[12]] = *((unsigned char *)a2 + v5[12]);
  *(void *)&a1[v5[13]] = *(void *)((char *)a2 + v5[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v5[14];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (void *)((char *)a2 + v30);
  *(void *)uint64_t v31 = *v32;
  *((void *)v31 + 1) = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v5[15];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  *(void *)&a1[v5[16]] = *(void *)((char *)a2 + v5[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v5[17];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  a1[v5[18]] = *((unsigned char *)a2 + v5[18]);
  *(void *)&a1[v5[19]] = *(void *)((char *)a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v5[20]] = *(void *)((char *)a2 + v5[20]);
  swift_retain();
  swift_release();
  a1[v5[21]] = *((unsigned char *)a2 + v5[21]);
  uint64_t v41 = v5[22];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = (void *)((char *)a2 + v41);
  *(void *)uint64_t v42 = *v43;
  *((void *)v42 + 1) = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v5[23];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v47 = *(void *)&a1[v44 + 8];
  uint64_t v48 = *(void *)((char *)a2 + v44 + 8);
  if (v47)
  {
    if (v48)
    {
      *(void *)uint64_t v45 = *v46;
      *((void *)v45 + 1) = v46[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v45 + 2) = v46[2];
      *((void *)v45 + 3) = v46[3];
      *((void *)v45 + 4) = v46[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B0F2C((uint64_t)v45);
      uint64_t v49 = v46[4];
      long long v50 = *((_OWORD *)v46 + 1);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v50;
      *((void *)v45 + 4) = v49;
    }
  }
  else if (v48)
  {
    *(void *)uint64_t v45 = *v46;
    *((void *)v45 + 1) = v46[1];
    *((void *)v45 + 2) = v46[2];
    *((void *)v45 + 3) = v46[3];
    *((void *)v45 + 4) = v46[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)v46;
    long long v52 = *((_OWORD *)v46 + 1);
    *((void *)v45 + 4) = v46[4];
    *(_OWORD *)uint64_t v45 = v51;
    *((_OWORD *)v45 + 1) = v52;
  }
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = *(void **)&a1[v53];
  uint64_t v55 = *(void **)((char *)a2 + v53);
  *(void *)&a1[v53] = v55;
  id v56 = v55;

  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1139E4(_OWORD *a1, char *a2, uint64_t a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_63BAC(&qword_3C97E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *((unsigned char *)a1 + v6[7]) = a2[v6[7]];
  *((unsigned char *)a1 + v6[8]) = a2[v6[8]];
  uint64_t v18 = v6[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_2E0980();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_63BAC(&qword_3CB0B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)((char *)a1 + v6[10]) = *(void *)&a2[v6[10]];
  *(void *)((char *)a1 + v6[11]) = *(void *)&a2[v6[11]];
  *((unsigned char *)a1 + v6[12]) = a2[v6[12]];
  *(void *)((char *)a1 + v6[13]) = *(void *)&a2[v6[13]];
  *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)&a2[v6[14]];
  uint64_t v24 = v6[15];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(void *)((char *)a1 + v6[16]) = *(void *)&a2[v6[16]];
  uint64_t v28 = v6[17];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  uint64_t v31 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  *((unsigned char *)a1 + v6[18]) = a2[v6[18]];
  *(void *)((char *)a1 + v6[19]) = *(void *)&a2[v6[19]];
  *(void *)((char *)a1 + v6[20]) = *(void *)&a2[v6[20]];
  *((unsigned char *)a1 + v6[21]) = a2[v6[21]];
  *(_OWORD *)((char *)a1 + v6[22]) = *(_OWORD *)&a2[v6[22]];
  uint64_t v32 = v6[23];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  *((void *)v33 + 4) = *((void *)v34 + 4);
  uint64_t v36 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)((char *)a1 + v36) = *(void *)&a2[v36];
  return a1;
}

char *sub_113DEC(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12(&a1[v16], 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_63BAC(&qword_3C97E8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  a1[v6[7]] = *((unsigned char *)a2 + v6[7]);
  a1[v6[8]] = *((unsigned char *)a2 + v6[8]);
  uint64_t v22 = v6[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_2E0980();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_18:
    uint64_t v30 = sub_63BAC(&qword_3CB0B8);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_19:
  *(void *)&a1[v6[10]] = *(void *)((char *)a2 + v6[10]);
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[11]] = *(void *)((char *)a2 + v6[11]);
  swift_bridgeObjectRelease();
  a1[v6[12]] = *((unsigned char *)a2 + v6[12]);
  *(void *)&a1[v6[13]] = *(void *)((char *)a2 + v6[13]);
  swift_bridgeObjectRelease();
  uint64_t v31 = v6[14];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = v6[15];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  *(void *)&a1[v6[16]] = *(void *)((char *)a2 + v6[16]);
  swift_bridgeObjectRelease();
  uint64_t v40 = v6[17];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  a1[v6[18]] = *((unsigned char *)a2 + v6[18]);
  *(void *)&a1[v6[19]] = *(void *)((char *)a2 + v6[19]);
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[20]] = *(void *)((char *)a2 + v6[20]);
  swift_release();
  a1[v6[21]] = *((unsigned char *)a2 + v6[21]);
  uint64_t v44 = v6[22];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *(void *)uint64_t v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v6[23];
  uint64_t v50 = (uint64_t)&a1[v49];
  long long v51 = (char *)a2 + v49;
  if (!*(void *)&a1[v49 + 8])
  {
LABEL_23:
    long long v54 = *((_OWORD *)v51 + 1);
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *(_OWORD *)(v50 + 16) = v54;
    *(void *)(v50 + 32) = *((void *)v51 + 4);
    goto LABEL_24;
  }
  uint64_t v52 = *((void *)v51 + 1);
  if (!v52)
  {
    sub_B0F2C(v50);
    goto LABEL_23;
  }
  *(void *)uint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = v52;
  swift_bridgeObjectRelease();
  *(void *)(v50 + 16) = *((void *)v51 + 2);
  uint64_t v53 = *((void *)v51 + 4);
  *(void *)(v50 + 24) = *((void *)v51 + 3);
  *(void *)(v50 + 32) = v53;
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v55 = *(int *)(a3 + 20);
  id v56 = *(void **)&a1[v55];
  *(void *)&a1[v55] = *(void *)((char *)a2 + v55);

  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1143C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1143D8);
}

uint64_t sub_1143D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Page();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_114498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1144AC);
}

uint64_t sub_1144AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Page();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_114568()
{
  uint64_t result = type metadata accessor for Page();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesRoomPageIntentImplementation.SeriesRoomPageIntentImplementationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1146A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPageIntentImplementationError()
{
  return &type metadata for SeriesRoomPageIntentImplementation.SeriesRoomPageIntentImplementationError;
}

unint64_t sub_1146E4()
{
  unint64_t result = qword_3CBA88;
  if (!qword_3CBA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBA88);
  }
  return result;
}

unint64_t sub_114738()
{
  unint64_t result = qword_3CBAA0;
  if (!qword_3CBAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBAA0);
  }
  return result;
}

unint64_t sub_11478C()
{
  unint64_t result = qword_3CBAF0;
  if (!qword_3CBAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBAF0);
  }
  return result;
}

uint64_t sub_1147E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SeriesRoomPageIntent() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10C16C(a1, v1 + 16, v4);
}

uint64_t sub_11486C()
{
  uint64_t v1 = (int *)type metadata accessor for SeriesRoomPageIntent();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[5];
  uint64_t v6 = sub_2DEBB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }

  uint64_t v10 = v4 + v1[9];
  uint64_t v11 = sub_2E12F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return _swift_deallocObject(v0, v3 + v13, v2 | 7);
}

unint64_t sub_114A40()
{
  unint64_t result = qword_3CBB50;
  if (!qword_3CBB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBB50);
  }
  return result;
}

uint64_t sub_114A94()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);
  if (*(void *)(v0 + 88)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 64);
  }

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_114ADC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_114B38(uint64_t a1)
{
  return a1;
}

uint64_t sub_114B8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SeriesRoomPageIntentImplementation.SeriesRoomPage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x114CC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesRoomPageIntentImplementation.SeriesRoomPage.CodingKeys()
{
  return &type metadata for SeriesRoomPageIntentImplementation.SeriesRoomPage.CodingKeys;
}

unint64_t sub_114CFC()
{
  unint64_t result = qword_3CBB68;
  if (!qword_3CBB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBB68);
  }
  return result;
}

unint64_t sub_114D54()
{
  unint64_t result = qword_3CBB70;
  if (!qword_3CBB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBB70);
  }
  return result;
}

unint64_t sub_114DAC()
{
  unint64_t result = qword_3CBB78;
  if (!qword_3CBB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBB78);
  }
  return result;
}

uint64_t sub_114E00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000003174B0 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2E5020();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t SeriesRoomListHeaderComponent.content(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v4 = sub_63BAC(&qword_3CBB80);
  __chkstk_darwin(v4 - 8);
  uint64_t v78 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v77 = &v63[-v7];
  uint64_t v76 = sub_2E0180();
  uint64_t v81 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v70 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = sub_2E01B0();
  uint64_t v80 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v69 = &v63[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = (void *)sub_2E0B00();
  uint64_t v66 = (void (*)(void, void))*(v68 - 1);
  __chkstk_darwin(v68);
  uint64_t v11 = &v63[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_63BAC(&qword_3CA910);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_63BAC(&qword_3CBB88);
  uint64_t v71 = *(void *)(v16 - 8);
  uint64_t v72 = v16;
  __chkstk_darwin(v16);
  unsigned __int8 v65 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_63BAC(&qword_3CBB90);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v67 = &v63[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = sub_63BAC(&qword_3CBB98);
  __n128 v21 = __chkstk_darwin(v74);
  uint64_t v73 = &v63[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, a1, v12, v21);
  uint64_t v23 = v2 + *(int *)(type metadata accessor for SeriesRoomListHeaderComponent() + 20);
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  LOBYTE(v13) = *(unsigned char *)(v23 + 16);
  sub_11581C(*(void *)v23, v25, v13);
  sub_86DEC(v24, v25, v13);
  sub_881D0(v24, v25, v13);
  (*((void (**)(unsigned char *, void, void *))v66 + 13))(v11, enum case for SegmentedControlStyle.label(_:), v68);
  type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  sub_115B0C((unint64_t *)&unk_3CA990, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_2E05A0();
  int v64 = sub_2E2630();
  uint64_t v26 = v69;
  sub_85250((uint64_t)v69);
  uint64_t v27 = v70;
  sub_2E0190();
  int v28 = *(void **)(v80 + 8);
  v80 += 8;
  uint64_t v68 = v28;
  uint64_t v29 = v75;
  ((void (*)(unsigned char *, uint64_t))v28)(v26, v75);
  sub_2E0140();
  uint64_t v30 = *(void (**)(void, void))(v81 + 8);
  v81 += 8;
  uint64_t v66 = v30;
  uint64_t v31 = v76;
  v30(v27, v76);
  sub_2E15A0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v71;
  uint64_t v41 = v72;
  uint64_t v42 = (uint64_t)v67;
  uint64_t v43 = v65;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 16))(v67, v65, v72);
  uint64_t v44 = v42 + *(int *)(v19 + 44);
  *(unsigned char *)uint64_t v44 = v64;
  *(void *)(v44 + 8) = v33;
  *(void *)(v44 + 16) = v35;
  *(void *)(v44 + 24) = v37;
  *(void *)(v44 + 32) = v39;
  *(unsigned char *)(v44 + 40) = 0;
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v43, v41);
  LOBYTE(v40) = sub_2E2640();
  sub_85250((uint64_t)v26);
  sub_2E0190();
  ((void (*)(unsigned char *, uint64_t))v68)(v26, v29);
  sub_2E0110();
  v66(v27, v31);
  sub_2E15A0();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v53 = v73;
  sub_11582C(v42, (uint64_t)v73);
  long long v54 = &v53[*(int *)(v74 + 36)];
  *long long v54 = v40;
  *((void *)v54 + 1) = v46;
  *((void *)v54 + 2) = v48;
  *((void *)v54 + 3) = v50;
  *((void *)v54 + 4) = v52;
  v54[40] = 0;
  sub_662B4(v42, &qword_3CBB90);
  uint64_t v55 = enum case for DynamicTypeSize.large(_:);
  uint64_t v56 = sub_2E1A10();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 104);
  uint64_t v59 = (uint64_t)v77;
  v58(v77, v55, v56);
  uint64_t v60 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
  v60(v59, 0, 1, v56);
  uint64_t v61 = (uint64_t)v78;
  v58(v78, enum case for DynamicTypeSize.xxxLarge(_:), v56);
  v60(v61, 0, 1, v56);
  sub_1158BC(&qword_3CBBA0, &qword_3CBB98, (void (*)(void))sub_115894);
  sub_2E2B70();
  sub_662B4(v61, &qword_3CBB80);
  sub_662B4(v59, &qword_3CBB80);
  return sub_662B4((uint64_t)v53, &qword_3CBB98);
}

uint64_t type metadata accessor for SeriesRoomListHeaderComponent()
{
  uint64_t result = qword_3CBC20;
  if (!qword_3CBC20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_115758()
{
  __chkstk_darwin(v0);
  sub_1163FC(v2, (uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_115B0C((unint64_t *)&unk_3D2150, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderComponent);
  return sub_2DF540();
}

uint64_t sub_11581C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_11582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3CBB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_115894()
{
  return sub_1158BC(&qword_3CBBA8, &qword_3CBB90, (void (*)(void))sub_11593C);
}

uint64_t sub_1158BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_11593C()
{
  unint64_t result = qword_3CBBB0;
  if (!qword_3CBBB0)
  {
    sub_70ECC(&qword_3CBB88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBBB0);
  }
  return result;
}

uint64_t sub_115998()
{
  return sub_115B0C(&qword_3CBBB8, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderComponent);
}

uint64_t sub_1159E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1159FC()
{
  return sub_115B0C(&qword_3CBBC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderComponentModel);
}

uint64_t sub_115A44()
{
  return sub_115B0C(&qword_3C7480, (void (*)(uint64_t))&type metadata accessor for _ComponentBodyButtonStyle);
}

uint64_t sub_115A8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_115B0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesRoomListHeaderComponent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E01B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    sub_11581C(*(void *)v11, v13, v14);
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
  }
  return a1;
}

uint64_t destroy for SeriesRoomListHeaderComponent(uint64_t a1, uint64_t a2)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);

  return sub_881D0(v6, v7, v8);
}

void *initializeWithCopy for SeriesRoomListHeaderComponent(void *a1, void *a2, uint64_t a3)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E01B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_11581C(*(void *)v9, v11, v12);
  *(void *)char v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  return a1;
}

void *assignWithCopy for SeriesRoomListHeaderComponent(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C8180);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_11581C(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *((void *)v8 + 1);
  char v15 = v8[16];
  *(void *)char v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  sub_881D0(v13, v14, v15);
  return a1;
}

char *initializeWithTake for SeriesRoomListHeaderComponent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2E01B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  return a1;
}

char *assignWithTake for SeriesRoomListHeaderComponent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C8180);
    uint64_t v6 = sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E01B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[16];
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *((void *)v9 + 1);
  char v14 = v9[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_881D0(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesRoomListHeaderComponent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11614C);
}

uint64_t sub_11614C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C81D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SeriesRoomListHeaderComponent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_116224);
}

uint64_t sub_116224(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_63BAC(&qword_3C81D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

void sub_1162E8()
{
  sub_85BF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_11637C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1163FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesRoomListHeaderComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_116460()
{
  return sub_2E1EE0();
}

uint64_t sub_116484(uint64_t a1)
{
  uint64_t v2 = sub_2E1A10();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2E1EF0();
}

uint64_t sub_11654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a2;
  uint64_t v7 = sub_63BAC(&qword_3CBC58);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t)&v42 - v11;
  uint64_t v12 = sub_2DE2B0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_2E0890();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v42 - v18;
  *a5 = swift_getKeyPath();
  sub_63BAC(&qword_3C8180);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (int *)type metadata accessor for ShelfView();
  __n128 v21 = (uint64_t *)((char *)a5 + v20[5]);
  *__n128 v21 = swift_getKeyPath();
  sub_63BAC((uint64_t *)&unk_3D20F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)((char *)a5 + v20[6]);
  *uint64_t v22 = swift_getKeyPath();
  sub_63BAC(&qword_3C8318);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v19, enum case for ShelfGridBreakpoint.xs(_:), v13);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  uint64_t v23 = a1;
  uint64_t v24 = v43;
  sub_2E3130();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  uint64_t v25 = v44;
  uint64_t v26 = (char *)a5 + v20[9];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[8] = 0;
  uint64_t v27 = (char *)a5 + v20[10];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  int v28 = (char *)a5 + v20[11];
  *(void *)int v28 = swift_getKeyPath();
  v28[8] = 0;
  uint64_t v29 = (char *)a5 + v20[12];
  *(void *)uint64_t v29 = swift_getKeyPath();
  v29[8] = 0;
  uint64_t v30 = (char *)a5 + v20[13];
  *(void *)uint64_t v30 = swift_getKeyPath();
  v30[8] = 0;
  uint64_t v31 = (uint64_t *)((char *)a5 + v20[14]);
  *uint64_t v31 = swift_getKeyPath();
  sub_63BAC(&qword_3CBD10);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (char *)a5 + v20[15];
  *(void *)uint64_t v32 = swift_getKeyPath();
  v32[40] = 0;
  uint64_t v33 = (char *)a5 + v20[16];
  *(void *)uint64_t v33 = swift_getKeyPath();
  v33[8] = 0;
  uint64_t v34 = (uint64_t *)((char *)a5 + v20[17]);
  *uint64_t v34 = swift_getKeyPath();
  sub_63BAC(&qword_3C82C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = (char *)a5 + v20[18];
  *(void *)uint64_t v35 = swift_getKeyPath();
  v35[40] = 0;
  sub_2DE290();
  sub_2DE120();
  uint64_t v36 = (char *)a5 + v20[20];
  *(void *)uint64_t v36 = swift_getKeyPath();
  *((_WORD *)v36 + 4) = 0;
  *((void *)v36 + 2) = 0;
  uint64_t v37 = v45;
  sub_12781C(a1, (uint64_t)a5 + v20[21], (uint64_t (*)(void))type metadata accessor for Shelf);
  *(uint64_t *)((char *)a5 + v20[22]) = v37;
  sub_66444(v24, (uint64_t)a5 + v20[7], &qword_3CB368);
  *(uint64_t *)((char *)a5 + v20[23]) = v25;
  uint64_t v38 = type metadata accessor for Shelf();
  sub_66444(a1 + *(int *)(v38 + 76), (uint64_t)v9, &qword_3CBC58);
  uint64_t v39 = sub_2DE320();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v9, 1, v39);
  if (result)
  {
    swift_retain();
LABEL_6:
    uint64_t v41 = v42;
    sub_71900((uint64_t)v9, v42, &qword_3CBC58);
    swift_release();
    sub_662B4(v24, &qword_3CB368);
    sub_1284EC(v23, (uint64_t (*)(void))type metadata accessor for Shelf);
    return sub_71900(v41, (uint64_t)a5 + v20[24], &qword_3CBC58);
  }
  if (v37 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v37 <= 0x7FFFFFFF)
  {
    swift_retain();
    sub_2DE2D0();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t ShelfView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v103 = a1;
  uint64_t v3 = sub_63BAC(&qword_3CBC58);
  __chkstk_darwin(v3 - 8);
  uint64_t v99 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2DE2B0();
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v102 = v5;
  __chkstk_darwin(v5);
  uint64_t v100 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CBC60);
  __chkstk_darwin(v7 - 8);
  uint64_t v84 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v77 - v10;
  uint64_t v83 = sub_63BAC(&qword_3CBC68);
  __chkstk_darwin(v83);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v77 - v14;
  uint64_t v81 = (char *)&v77 - v14;
  uint64_t v92 = sub_63BAC(&qword_3CBC70);
  uint64_t v85 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v82 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_63BAC(&qword_3CBC78);
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v104 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_63BAC(&qword_3CBC80);
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v98 = v18;
  __chkstk_darwin(v18);
  unint64_t v93 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_63BAC(&qword_3CBC88);
  __chkstk_darwin(v88);
  unint64_t v95 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_63BAC(&qword_3CBC90);
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v90 = (uint64_t)&v77 - v23;
  uint64_t v24 = type metadata accessor for Shelf();
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_11767C((uint64_t)v27);
  sub_1178D8((uint64_t)v15);
  sub_117B64((uint64_t)v12);
  uint64_t v87 = v27;
  uint64_t v105 = v27;
  uint64_t v106 = v1;
  uint64_t v79 = sub_63BAC(&qword_3CBC98);
  sub_118F40();
  uint64_t v78 = sub_70ECC(&qword_3CBCB8);
  uint64_t v77 = sub_2E3B00();
  uint64_t v28 = sub_70ECC(&qword_3CBCC0);
  uint64_t v29 = sub_70ECC(&qword_3CBCC8);
  uint64_t v30 = sub_2E1110();
  uint64_t v31 = sub_70ECC(&qword_3CBCD0);
  uint64_t v32 = sub_2DE5C0();
  uint64_t v33 = sub_70ECC(&qword_3CBCD8);
  uint64_t v34 = v2;
  uint64_t v35 = sub_71AA4(&qword_3CBCE0, &qword_3CBCD8);
  uint64_t v107 = v33;
  unint64_t v108 = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_128494(&qword_3CBCE8, (void (*)(uint64_t))&type metadata accessor for SectionExposureEvent);
  uint64_t v107 = v31;
  unint64_t v108 = v32;
  uint64_t v109 = OpaqueTypeConformance2;
  uint64_t v110 = v37;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = sub_128494(&qword_3CBCF0, (void (*)(uint64_t))&type metadata accessor for GenericGeometryReferenceBuilder);
  uint64_t v107 = v29;
  unint64_t v108 = v30;
  uint64_t v40 = v82;
  uint64_t v109 = v38;
  uint64_t v110 = v39;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v107 = v28;
  unint64_t v108 = v41;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v107 = v78;
  unint64_t v108 = v77;
  uint64_t v109 = v42;
  swift_getOpaqueTypeConformance2();
  sub_2E3350();
  uint64_t v43 = type metadata accessor for ShelfView();
  uint64_t v44 = (uint64_t *)(v2 + *(int *)(v43 + 84));
  uint64_t v45 = *(int *)(v25 + 44);
  uint64_t v46 = v84;
  sub_66444((uint64_t)v44 + v45, v84, &qword_3CBC60);
  uint64_t v47 = sub_2E13F0();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    uint64_t v49 = (uint64_t)v86;
    sub_2E13B0();
    sub_662B4(v46, &qword_3CBC60);
  }
  else
  {
    uint64_t v49 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v86, v46, v47);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
  unint64_t v50 = sub_119080();
  uint64_t v51 = v92;
  sub_2E2A90();
  sub_662B4(v49, &qword_3CBC60);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v51);
  uint64_t v52 = v34 + *(int *)(v43 + 96);
  swift_bridgeObjectRetain();
  uint64_t v53 = v100;
  sub_2DE2A0();
  sub_63BAC(&qword_3C9F58);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_2FEFE0;
  uint64_t v55 = (uint64_t *)(v54 + 32);
  uint64_t v56 = v99;
  sub_66444(v52, v99, &qword_3CBC58);
  uint64_t v57 = sub_2DE320();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
  {
    sub_662B4(v56, &qword_3CBC58);
    *(_OWORD *)uint64_t v55 = 0u;
    *(_OWORD *)(v54 + 48) = 0u;
    *(_OWORD *)(v54 + 64) = 0u;
  }
  else
  {
    *(void *)(v54 + 56) = v57;
    *(void *)(v54 + 64) = sub_128494(&qword_3CA5E8, (void (*)(uint64_t))&type metadata accessor for SectionData);
    *(void *)(v54 + 72) = sub_128494(&qword_3CA5F0, (void (*)(uint64_t))&type metadata accessor for SectionData);
    uint64_t v59 = sub_71088(v55);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 32))(v59, v56, v57);
  }
  uint64_t v107 = v51;
  unint64_t v108 = v50;
  swift_getOpaqueTypeConformance2();
  uint64_t v60 = v93;
  uint64_t v61 = v96;
  uint64_t v62 = v104;
  sub_2E2BF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v102);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v61);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = *v44;
  uint64_t v64 = v44[1];
  uint64_t v67 = v97;
  uint64_t v66 = v98;
  uint64_t v68 = (uint64_t)v95;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v60, v98);
  uint64_t v69 = (uint64_t *)(v68 + *(int *)(v88 + 36));
  *uint64_t v69 = KeyPath;
  v69[1] = v65;
  v69[2] = v64;
  uint64_t v70 = *(void (**)(char *, uint64_t))(v67 + 8);
  swift_bridgeObjectRetain();
  v70(v60, v66);
  uint64_t v72 = *v44;
  uint64_t v71 = v44[1];
  uint64_t v73 = v91;
  sub_66444(v68, v91, &qword_3CBC88);
  uint64_t v74 = (void *)(v73 + *(int *)(v89 + 52));
  void *v74 = v72;
  v74[1] = v71;
  swift_bridgeObjectRetain();
  sub_662B4(v68, &qword_3CBC88);
  uint64_t v75 = v90;
  sub_71900(v73, v90, &qword_3CBC90);
  sub_71900(v75, v103, &qword_3CBC90);
  return sub_1284EC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for Shelf);
}

uint64_t sub_11767C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = type metadata accessor for Shelf();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2DE900();
  uint64_t v6 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShelfView();
  uint64_t v10 = v1 + *(int *)(v9 + 84);
  uint64_t v11 = v1 + *(int *)(v9 + 64);
  id v12 = *(id *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_C9A1C(*(id *)v11, v13);
  uint64_t v14 = (void *)sub_86770(v12, v13);
  sub_88154(v12, v13);
  sub_876EC((uint64_t)v8);
  sub_87724((uint64_t)v28);
  uint64_t v15 = sub_11EC54();
  sub_12781C(v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Shelf);
  uint64_t v16 = *(void *)(v10 + *(int *)(v3 + 72));
  uint64_t v23 = v14;
  uint64_t v24 = v10;
  uint64_t v25 = v8;
  uint64_t v26 = v28;
  uint64_t v27 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_261D04((void (*)(void *__return_ptr, uint64_t))sub_12854C, (uint64_t)v22, v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(v3 + 72);
  swift_bridgeObjectRelease();
  *(void *)&v5[v18] = v17;
  sub_128574((uint64_t)v5, v21, (uint64_t (*)(void))type metadata accessor for Shelf);
  swift_bridgeObjectRelease();

  sub_662B4((uint64_t)v28, &qword_3C8310);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v20);
}

uint64_t sub_1178D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3D1EB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_63BAC(&qword_3CBC68);
  __chkstk_darwin(v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = v1 + *(int *)(type metadata accessor for ShelfView() + 84);
  uint64_t v11 = type metadata accessor for Shelf();
  sub_66444(v10 + *(int *)(v11 + 52), (uint64_t)v21, &qword_3CC060);
  sub_65CF4(v21, (uint64_t)v22);
  sub_66310((uint64_t)v22, (uint64_t)v21);
  sub_127884();
  sub_2DF4C0();
  sub_66310((uint64_t)v22, (uint64_t)v21);
  sub_63BAC(&qword_3C6F40);
  sub_63BAC(&qword_3CC070);
  int v12 = swift_dynamicCast();
  if (v12) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v20);
  }
  char v13 = v12 ^ 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  uint64_t v17 = &v9[*(int *)(v7 + 36)];
  *(void *)uint64_t v17 = KeyPath;
  v17[8] = 0;
  *((void *)v17 + 2) = v15;
  v17[24] = 0;
  *((void *)v17 + 4) = v16;
  v17[40] = 0;
  v17[41] = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v22);
  return sub_71900((uint64_t)v9, a1, &qword_3CBC68);
}

uint64_t sub_117B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3D1EB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_63BAC(&qword_3CBC68);
  __chkstk_darwin(v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = v1 + *(int *)(type metadata accessor for ShelfView() + 84);
  uint64_t v11 = type metadata accessor for Shelf();
  sub_66444(v10 + *(int *)(v11 + 56), (uint64_t)v21, &qword_3CC060);
  sub_65CF4(v21, (uint64_t)v22);
  sub_66310((uint64_t)v22, (uint64_t)v21);
  sub_127884();
  sub_2DF4C0();
  sub_66310((uint64_t)v22, (uint64_t)v21);
  sub_63BAC(&qword_3C6F40);
  sub_63BAC(&qword_3CC070);
  int v12 = swift_dynamicCast();
  if (v12) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v20);
  }
  char v13 = v12 ^ 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  uint64_t v17 = &v9[*(int *)(v7 + 36)];
  *(void *)uint64_t v17 = KeyPath;
  v17[8] = 0;
  *((void *)v17 + 2) = v15;
  v17[24] = 0;
  *((void *)v17 + 4) = v16;
  v17[40] = 0;
  v17[41] = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v22);
  return sub_71900((uint64_t)v9, a1, &qword_3CBC68);
}

uint64_t sub_117DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v129 = a3;
  uint64_t v5 = sub_63BAC(&qword_3CBE50);
  __chkstk_darwin(v5 - 8);
  uint64_t v140 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_2E1110();
  uint64_t v127 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v124 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_2DF630();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_2DF610();
  uint64_t v113 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v110 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_2E1A10();
  uint64_t v108 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v134 = (uint64_t *)((char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = sub_2E0020();
  uint64_t v142 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v128 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v133 = (char *)&v100 - v13;
  uint64_t v106 = sub_2E0890();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v132 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_63BAC(&qword_3CBE58);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_63BAC(&qword_3CBE60);
  __chkstk_darwin(v102);
  uint64_t v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_63BAC(&qword_3CBCD8);
  __chkstk_darwin(v141);
  uint64_t v130 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_63BAC(&qword_3CBCD0);
  uint64_t v104 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  char v131 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_63BAC(&qword_3CBCC8);
  uint64_t v112 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v109 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_63BAC(&qword_3CBCC0);
  uint64_t v118 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v137 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_63BAC(&qword_3CBCB8);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v121 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_63BAC(&qword_3CBC98);
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v119 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1192E8(a1, a2, (uint64_t)v17);
  uint64_t v26 = type metadata accessor for ShelfView();
  uint64_t v28 = *(int *)(v26 + 80);
  uint64_t v27 = *(int *)(v26 + 84);
  uint64_t v135 = v26;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27 + 8);
  uint64_t v101 = *(void **)(a2 + v27);
  uint64_t v31 = a2;
  uint64_t v32 = *(void *)(a2 + v28);
  uint64_t v33 = *(unsigned __int8 *)(a2 + v28 + 8);
  int v34 = *(unsigned __int8 *)(a2 + v28 + 9);
  uint64_t v100 = *(void *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  sub_12075C(v32, v33, v34);
  uint64_t v35 = sub_87750(v32, v33 | (v34 << 8));
  LOBYTE(a2) = v36;
  sub_881C4(v32, v33, v34);
  if (a2)
  {
    if (qword_3C65E8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_2DF850();
    sub_58BA0(v39, (uint64_t)qword_3CD288);
    uint64_t v40 = sub_2DF830();
    os_log_type_t v41 = sub_2E4900();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v37 = v31;
    uint64_t v38 = (uint64_t)v114;
    if (v42)
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      swift_slowDealloc();
    }

    uint64_t v35 = sub_2E34D0();
  }
  else
  {
    uint64_t v37 = v31;
    uint64_t v38 = (uint64_t)v114;
  }
  int v44 = sub_2E2570();
  sub_2E3550();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_66444((uint64_t)v17, (uint64_t)v19, &qword_3CBE58);
  uint64_t v49 = &v19[*(int *)(v102 + 36)];
  *(void *)uint64_t v49 = v101;
  *((void *)v49 + 1) = v30;
  *((void *)v49 + 2) = v35;
  *((_DWORD *)v49 + 6) = v44;
  *((void *)v49 + 4) = v46;
  *((void *)v49 + 5) = v48;
  v49[48] = 1;
  sub_662B4((uint64_t)v17, &qword_3CBE58);
  uint64_t v50 = v29 + *(int *)(type metadata accessor for Shelf() + 40);
  uint64_t v51 = v130;
  sub_66444((uint64_t)v19, v130, &qword_3CBE60);
  sub_65D0C(v50, v51 + *(int *)(v141 + 52));
  sub_662B4((uint64_t)v19, &qword_3CBE60);
  uint64_t v52 = v135;
  uint64_t v53 = (char *)(v37 + *(int *)(v135 + 32));
  uint64_t v102 = sub_63BAC(&qword_3CBD08);
  uint64_t v114 = v53;
  sub_2E3140();
  uint64_t v54 = *(void *)(v29 + 24);
  uint64_t v101 = &protocol descriptor for ShelfGridLayoutConfiguring;
  if (swift_conformsToProtocol2()) {
    uint64_t v55 = v54;
  }
  else {
    uint64_t v55 = 0;
  }
  if (v55) {
    sub_2E1000();
  }
  else {
    sub_2E0010();
  }
  uint64_t v56 = v110;
  sub_87014((uint64_t)v134);
  sub_11B0B4();
  sub_11C550(v38);
  uint64_t v57 = (char *)(v37 + *(int *)(v52 + 48));
  uint64_t v58 = *(void *)v57;
  uint64_t v110 = v57;
  char v59 = v57[8];
  sub_6EC64(v58, v59);
  sub_87054(v58, v59, &v147);
  sub_6EF10(v58, v59);
  uint64_t v103 = v37;
  uint64_t v60 = v38;
  if (v147 != 2)
  {
    uint64_t v61 = v37 + *(int *)(v52 + 44);
    uint64_t v62 = *(void *)v61;
    char v63 = *(unsigned char *)(v61 + 8);
    sub_6EC64(*(void *)v61, v63);
    sub_84CF0(v62, v63);
    sub_6EF10(v62, v63);
  }
  uint64_t v64 = sub_71AA4(&qword_3CBCE0, &qword_3CBCD8);
  uint64_t v65 = v132;
  uint64_t v66 = v133;
  uint64_t v67 = (void (*)(void, void))v134;
  uint64_t v68 = v130;
  sub_2E2B00();
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v60, v117);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v56, v115);
  (*(void (**)(void, uint64_t))(v108 + 8))(v67, v111);
  uint64_t v69 = *(uint64_t **)(v142 + 8);
  v142 += 8;
  uint64_t v134 = v69;
  ((void (*)(char *, uint64_t))v69)(v66, v138);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v65, v106);
  sub_662B4(v68, &qword_3CBCD8);
  if (*(unsigned char *)(v29 + 40) == 1) {
    sub_2DE5C0();
  }
  uint64_t v70 = sub_2DE5C0();
  uint64_t v147 = v141;
  uint64_t v148 = v64;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = sub_128494(&qword_3CBCE8, (void (*)(uint64_t))&type metadata accessor for SectionExposureEvent);
  uint64_t v73 = v109;
  uint64_t v74 = v107;
  uint64_t v75 = v131;
  sub_2E2C00();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v75, v74);
  uint64_t v76 = *(void *)(v29 + 8);
  uint64_t v143 = *(void *)v29;
  uint64_t v144 = v76;
  swift_bridgeObjectRetain();
  sub_2E4C10();
  uint64_t v77 = v124;
  sub_2E0E80();
  uint64_t v143 = v74;
  uint64_t v144 = v70;
  uint64_t v145 = OpaqueTypeConformance2;
  uint64_t v146 = v72;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = sub_128494(&qword_3CBCF0, (void (*)(uint64_t))&type metadata accessor for GenericGeometryReferenceBuilder);
  uint64_t v80 = v136;
  uint64_t v81 = v139;
  sub_2E2A60();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v77, v81);
  sub_662B4((uint64_t)&v147, &qword_3CBE68);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v73, v80);
  sub_2E3160();
  uint64_t v82 = *(void *)(v29 + 24);
  if (swift_conformsToProtocol2()) {
    uint64_t v83 = v82;
  }
  else {
    uint64_t v83 = 0;
  }
  uint64_t v84 = v103;
  uint64_t v85 = v128;
  if (v83) {
    sub_2E1000();
  }
  else {
    sub_2E0010();
  }
  uint64_t v86 = *(void *)v110;
  char v87 = v110[8];
  sub_6EC64(*(void *)v110, v87);
  sub_87054(v86, v87, &v147);
  sub_6EF10(v86, v87);
  if (v147 != 2)
  {
    uint64_t v89 = v84 + *(int *)(v135 + 44);
    uint64_t v90 = *(void *)v89;
    char v91 = *(unsigned char *)(v89 + 8);
    sub_6EC64(*(void *)v89, v91);
    sub_84CF0(v90, v91);
    sub_6EF10(v90, v91);
  }
  uint64_t v88 = v121;
  uint64_t v147 = v136;
  uint64_t v148 = v139;
  uint64_t v149 = v78;
  uint64_t v150 = v79;
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = (uint64_t)v140;
  uint64_t v94 = v123;
  unint64_t v95 = v137;
  sub_2E2AD0();
  ((void (*)(char *, uint64_t))v134)(v85, v138);
  sub_662B4(v93, &qword_3CBE50);
  uint64_t v96 = (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v95, v94);
  __chkstk_darwin(v96);
  sub_2E3A90();
  if (v147 == 1)
  {
    swift_retain();
  }
  else
  {
    sub_2E3B20();
    sub_2E3AA0();
  }
  sub_2E3B00();
  uint64_t v147 = v94;
  uint64_t v148 = v92;
  swift_getOpaqueTypeConformance2();
  uint64_t v97 = v119;
  uint64_t v98 = v126;
  sub_2E2980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v88, v98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v120 + 32))(v129, v97, v122);
}

uint64_t sub_118F38@<X0>(uint64_t a1@<X8>)
{
  return sub_117DF0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_118F40()
{
  unint64_t result = qword_3CBCA0;
  if (!qword_3CBCA0)
  {
    sub_70ECC(&qword_3CBC68);
    sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
    sub_118FE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBCA0);
  }
  return result;
}

unint64_t sub_118FE0()
{
  unint64_t result = qword_3CBCB0;
  if (!qword_3CBCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBCB0);
  }
  return result;
}

uint64_t type metadata accessor for ShelfView()
{
  uint64_t result = qword_3CBD98;
  if (!qword_3CBD98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_119080()
{
  unint64_t result = qword_3CBCF8;
  if (!qword_3CBCF8)
  {
    sub_70ECC(&qword_3CBC70);
    sub_118F40();
    sub_70ECC(&qword_3CBCB8);
    sub_2E3B00();
    sub_70ECC(&qword_3CBCC0);
    sub_70ECC(&qword_3CBCC8);
    sub_2E1110();
    sub_70ECC(&qword_3CBCD0);
    sub_2DE5C0();
    sub_70ECC(&qword_3CBCD8);
    sub_71AA4(&qword_3CBCE0, &qword_3CBCD8);
    swift_getOpaqueTypeConformance2();
    sub_128494(&qword_3CBCE8, (void (*)(uint64_t))&type metadata accessor for SectionExposureEvent);
    swift_getOpaqueTypeConformance2();
    sub_128494(&qword_3CBCF0, (void (*)(uint64_t))&type metadata accessor for GenericGeometryReferenceBuilder);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBCF8);
  }
  return result;
}

uint64_t sub_1192E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v243 = a1;
  uint64_t v244 = a2;
  uint64_t v242 = a3;
  uint64_t v247 = type metadata accessor for ShelfView();
  uint64_t v230 = *(void *)(v247 - 8);
  __chkstk_darwin(v247);
  uint64_t v232 = (uint64_t)&v176 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = v3;
  __chkstk_darwin(v4);
  uint64_t v231 = (uint64_t)&v176 - v5;
  uint64_t v6 = sub_2DF630();
  __chkstk_darwin(v6 - 8);
  uint64_t v235 = (uint64_t)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2DF560();
  __chkstk_darwin(v8 - 8);
  uint64_t v246 = (uint64_t *)((char *)&v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Shelf();
  __chkstk_darwin(v10);
  uint64_t v245 = (uint64_t)&v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_63BAC(&qword_3CBE80);
  uint64_t v234 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  uint64_t v233 = (char *)&v176 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_2E1940();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v195 = (char *)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_63BAC(&qword_3CBE88);
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v186 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_63BAC(&qword_3CBE90);
  uint64_t v190 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  uint64_t v188 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_63BAC(&qword_3CBE98);
  uint64_t v196 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v193 = (char *)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_63BAC(&qword_3CBEA0);
  uint64_t v197 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v194 = (char *)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = sub_63BAC(&qword_3CBEA8);
  __chkstk_darwin(v227);
  unint64_t v191 = (char *)&v176 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v202 = (uint64_t)&v176 - v20;
  uint64_t v219 = sub_2E06D0();
  uint64_t v218 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  uint64_t v217 = (char *)&v176 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v216 = (char *)&v176 - v23;
  uint64_t v237 = sub_63BAC(&qword_3CBEB0);
  __chkstk_darwin(v237);
  uint64_t v240 = (uint64_t)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_63BAC(&qword_3CBEB8);
  __chkstk_darwin(v221);
  uint64_t v222 = (uint64_t)&v176 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_63BAC(&qword_3CBEC0);
  __chkstk_darwin(v239);
  uint64_t v223 = (char *)&v176 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_2DF610();
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  uint64_t v228 = (char *)&v176 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v213 = (char *)&v176 - v29;
  __chkstk_darwin(v30);
  uint64_t v212 = (char *)&v176 - v31;
  uint64_t v32 = sub_63BAC(&qword_3C9EE0);
  __chkstk_darwin(v32 - 8);
  uint64_t v205 = (uint64_t)&v176 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_63BAC(&qword_3C7498);
  __chkstk_darwin(v34 - 8);
  uint64_t v207 = (uint64_t)&v176 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_2E3DE0();
  uint64_t v225 = *(void *)(v226 - 8);
  __chkstk_darwin(v226);
  uint64_t v224 = (char *)&v176 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_63BAC(&qword_3D1EB0);
  uint64_t v204 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  uint64_t v203 = (char *)&v176 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_63BAC(&qword_3CBEC8);
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  uint64_t v206 = (char *)&v176 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_63BAC(&qword_3CBED0);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  uint64_t v40 = (char *)&v176 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_63BAC(&qword_3CBED8);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v176 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_63BAC(&qword_3C8320);
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v176 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_63BAC(&qword_3C8328);
  __chkstk_darwin(v220);
  uint64_t v48 = (char *)&v176 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v176 - v50;
  uint64_t v52 = sub_63BAC(&qword_3CBD20);
  __chkstk_darwin(v52 - 8);
  uint64_t v54 = (char *)&v176 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  __chkstk_darwin((char *)&v176 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = *(void *)(*(void *)(v61 + *(int *)(v60 + 64)) + 16);
  uint64_t v238 = v60;
  if (v63)
  {
LABEL_4:
    uint64_t v65 = v61;
    uint64_t v66 = v244;
    uint64_t v67 = *(void *)(v244 + *(int *)(v62 + 84) + 24);
    uint64_t v68 = swift_conformsToProtocol2();
    if (v68) {
      uint64_t v69 = v68;
    }
    else {
      uint64_t v69 = 0;
    }
    if (v68) {
      uint64_t v70 = v67;
    }
    else {
      uint64_t v70 = 0;
    }
    if (!v70) {
      goto LABEL_13;
    }
    if (((*(uint64_t (**)(void))(v69 + 8))() & 1) == 0) {
      goto LABEL_13;
    }
    uint64_t v71 = v216;
    sub_2E06F0();
    uint64_t v72 = v217;
    sub_2E06C0();
    sub_128494(&qword_3CBFA0, (void (*)(uint64_t))&type metadata accessor for ListItemViewModel.PerfHacks);
    uint64_t v73 = v219;
    char v74 = sub_2E4B90();
    uint64_t v75 = *(void (**)(char *, uint64_t))(v218 + 8);
    v75(v72, v73);
    uint64_t v76 = ((uint64_t (*)(char *, uint64_t))v75)(v71, v73);
    if ((v74 & 1) == 0)
    {
      __chkstk_darwin(v76);
      sub_63BAC(&qword_3CBFA8);
      sub_127598();
      uint64_t v148 = v186;
      sub_2E2800();
      uint64_t v149 = sub_71AA4(&qword_3CBF80, &qword_3CBE88);
      uint64_t v150 = v188;
      uint64_t v151 = v189;
      sub_2E2E00();
      (*(void (**)(char *, uint64_t))(v187 + 8))(v148, v151);
      uint64_t v152 = v195;
      sub_2E1930();
      uint64_t v248 = v151;
      uint64_t v249 = v149;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v154 = v193;
      uint64_t v155 = v192;
      uint64_t v156 = v201;
      sub_2E2F40();
      (*(void (**)(char *, uint64_t))(v200 + 8))(v152, v156);
      (*(void (**)(char *, uint64_t))(v190 + 8))(v150, v155);
      unint64_t v157 = v224;
      sub_2E3DD0();
      uint64_t v248 = v155;
      uint64_t v249 = v156;
      uint64_t v250 = OpaqueTypeConformance2;
      uint64_t v251 = &protocol witness table for PlainListStyle;
      swift_getOpaqueTypeConformance2();
      unint64_t v158 = v194;
      uint64_t v159 = v198;
      sub_2E2940();
      (*(void (**)(char *, uint64_t))(v225 + 8))(v157, v226);
      (*(void (**)(char *, uint64_t))(v196 + 8))(v154, v159);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v161 = v197;
      uint64_t v162 = (uint64_t)v191;
      uint64_t v163 = v199;
      (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v191, v158, v199);
      uint64_t v164 = v162 + *(int *)(v227 + 36);
      *(void *)uint64_t v164 = KeyPath;
      *(unsigned char *)(v164 + 8) = 1;
      (*(void (**)(char *, uint64_t))(v161 + 8))(v158, v163);
      uint64_t v165 = v202;
      sub_71900(v162, v202, &qword_3CBEA8);
      sub_66444(v165, v222, &qword_3CBEA8);
      swift_storeEnumTagMultiPayload();
      sub_12720C();
      sub_127408();
      uint64_t v166 = (uint64_t)v223;
      sub_2E2330();
      sub_66444(v166, v240, &qword_3CBEC0);
      swift_storeEnumTagMultiPayload();
      sub_127190();
      sub_71AA4(&qword_3CBF98, &qword_3CBE80);
      sub_2E2330();
      sub_662B4(v166, &qword_3CBEC0);
      return sub_662B4(v165, &qword_3CBEA8);
    }
    else
    {
LABEL_13:
      sub_12781C(v65, v245, (uint64_t (*)(void))type metadata accessor for Shelf);
      sub_11C04C(v246);
      sub_11B0B4();
      sub_11C550(v235);
      uint64_t v77 = v231;
      sub_12781C(v66, v231, (uint64_t (*)(void))type metadata accessor for ShelfView);
      unint64_t v78 = (*(unsigned __int8 *)(v230 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80);
      uint64_t v79 = swift_allocObject();
      sub_128574(v77, v79 + v78, (uint64_t (*)(void))type metadata accessor for ShelfView);
      uint64_t v80 = v66;
      uint64_t v81 = v232;
      sub_12781C(v80, v232, (uint64_t (*)(void))type metadata accessor for ShelfView);
      uint64_t v82 = swift_allocObject();
      sub_128574(v81, v82 + v78, (uint64_t (*)(void))type metadata accessor for ShelfView);
      sub_63BAC(&qword_3CBEE0);
      sub_63BAC(&qword_3CBEE8);
      sub_128494(&qword_3C8148, (void (*)(uint64_t))type metadata accessor for Shelf);
      uint64_t v83 = sub_70ECC(&qword_3CBEF0);
      uint64_t v84 = sub_70ECC(&qword_3CBEF8);
      uint64_t v85 = sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
      uint64_t v248 = v236;
      uint64_t v249 = v85;
      uint64_t v86 = swift_getOpaqueTypeConformance2();
      uint64_t v248 = v84;
      uint64_t v249 = v86;
      uint64_t v87 = swift_getOpaqueTypeConformance2();
      uint64_t v248 = v83;
      uint64_t v249 = v87;
      swift_getOpaqueTypeConformance2();
      sub_126F78(&qword_3CBF00, &qword_3CBEE8, (void (*)(void))sub_126F50);
      uint64_t v88 = v233;
      sub_2DF710();
      uint64_t v89 = v234;
      uint64_t v90 = v241;
      (*(void (**)(uint64_t, char *, uint64_t))(v234 + 16))(v240, v88, v241);
      swift_storeEnumTagMultiPayload();
      sub_127190();
      sub_71AA4(&qword_3CBF98, &qword_3CBE80);
      sub_2E2330();
      return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v88, v90);
    }
  }
  uint64_t v177 = v58;
  uint64_t v178 = v41;
  uint64_t v179 = v40;
  uint64_t v180 = v44;
  uint64_t v181 = v43;
  uint64_t v182 = v48;
  uint64_t v183 = v46;
  uint64_t v185 = (uint64_t)&v176 - v59;
  unint64_t v184 = v51;
  uint64_t v64 = v61;
  sub_66444(v61 + *(int *)(v60 + 60), (uint64_t)v54, &qword_3CBD20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
  {
    sub_662B4((uint64_t)v54, &qword_3CBD20);
    uint64_t v62 = v247;
    uint64_t v61 = v64;
    goto LABEL_4;
  }
  uint64_t v92 = v185;
  sub_128574((uint64_t)v54, v185, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
  uint64_t v251 = (void *)v55;
  uint64_t v252 = sub_128494(&qword_3C8050, (void (*)(uint64_t))type metadata accessor for ContentUnavailableComponentModel);
  uint64_t v93 = sub_71088(&v248);
  sub_12781C(v92, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
  sub_127884();
  uint64_t v94 = v203;
  sub_2DF4C0();
  uint64_t v95 = v177;
  sub_12781C(v92, v177, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
  uint64_t v96 = v224;
  sub_2E3DC0();
  uint64_t v97 = v205;
  sub_66444(v95 + *(int *)(v55 + 44), v205, &qword_3C9EE0);
  uint64_t v98 = v207;
  sub_71900(v97, v207, &qword_3C7498);
  uint64_t v99 = sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
  uint64_t v100 = v206;
  uint64_t v101 = v236;
  sub_2E2940();
  sub_662B4(v98, &qword_3C7498);
  uint64_t v102 = *(void (**)(char *, uint64_t))(v225 + 8);
  uint64_t v103 = v226;
  v102(v96, v226);
  (*(void (**)(char *, uint64_t))(v204 + 8))(v94, v101);
  sub_1284EC(v95, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
  uint64_t v104 = (void *)(v244 + *(int *)(v247 + 84));
  sub_2E3DD0();
  uint64_t v246 = v104;
  uint64_t v248 = v101;
  uint64_t v249 = v99;
  swift_getOpaqueTypeConformance2();
  uint64_t v105 = v179;
  uint64_t v106 = v209;
  sub_2E2940();
  v102(v96, v103);
  (*(void (**)(char *, uint64_t))(v208 + 8))(v100, v106);
  char v107 = sub_2E2650();
  uint64_t v108 = v212;
  sub_11B0B4();
  sub_2DF5F0();
  char v110 = v109;
  uint64_t v111 = *(void (**)(char *, uint64_t))(v214 + 8);
  uint64_t v112 = v215;
  v111(v108, v215);
  uint64_t v113 = 0;
  uint64_t v114 = 0;
  uint64_t v115 = 0;
  uint64_t v116 = 0;
  uint64_t v117 = 0;
  if ((v110 & 1) == 0)
  {
    sub_2E15A0();
    uint64_t v114 = v118;
    uint64_t v115 = v119;
    uint64_t v116 = v120;
    uint64_t v117 = v121;
  }
  uint64_t v122 = v210;
  uint64_t v123 = (uint64_t)v181;
  uint64_t v124 = v211;
  (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v181, v105, v211);
  uint64_t v125 = v123 + *(int *)(v178 + 36);
  *(unsigned char *)uint64_t v125 = v107;
  *(void *)(v125 + 8) = v114;
  *(void *)(v125 + 16) = v115;
  *(void *)(v125 + 24) = v116;
  *(void *)(v125 + 32) = v117;
  *(unsigned char *)(v125 + 40) = v110 & 1;
  (*(void (**)(char *, uint64_t))(v122 + 8))(v105, v124);
  char v126 = sub_2E2670();
  uint64_t v127 = v213;
  uint64_t v128 = v244;
  sub_11B0B4();
  sub_2DF600();
  char v130 = v129;
  v111(v127, v112);
  uint64_t v131 = 0;
  uint64_t v132 = 0;
  uint64_t v133 = 0;
  uint64_t v134 = (uint64_t)v184;
  uint64_t v135 = (uint64_t)v183;
  uint64_t v136 = v128;
  if ((v130 & 1) == 0)
  {
    sub_2E15A0();
    uint64_t v113 = v137;
    uint64_t v131 = v138;
    uint64_t v132 = v139;
    uint64_t v133 = v140;
  }
  sub_66444(v123, v135, &qword_3CBED8);
  uint64_t v141 = v135 + *(int *)(v180 + 36);
  *(unsigned char *)uint64_t v141 = v126;
  *(void *)(v141 + 8) = v113;
  *(void *)(v141 + 16) = v131;
  *(void *)(v141 + 24) = v132;
  *(void *)(v141 + 32) = v133;
  *(unsigned char *)(v141 + 40) = v130 & 1;
  sub_662B4(v123, &qword_3CBED8);
  if (Shelf.insetsPageMargin.getter())
  {
    uint64_t v142 = v247;
    uint64_t v143 = v136 + *(int *)(v247 + 48);
    uint64_t v144 = *(void *)v143;
    char v145 = *(unsigned char *)(v143 + 8);
    sub_6EC64(*(void *)v143, v145);
    sub_87054(v144, v145, &v248);
    sub_6EF10(v144, v145);
    char v146 = v248 == 2;
    uint64_t v147 = v134;
    if (v248 == 2)
    {
      double v170 = 0.0;
    }
    else
    {
      uint64_t v167 = v136 + *(int *)(v142 + 44);
      uint64_t v168 = *(void *)v167;
      char v169 = *(unsigned char *)(v167 + 8);
      sub_6EC64(*(void *)v167, v169);
      sub_84CF0(v168, v169);
      sub_6EF10(v168, v169);
      double v170 = INFINITY;
    }
  }
  else
  {
    uint64_t v147 = v134;
    double v170 = 0.0;
    char v146 = 1;
  }
  uint64_t v171 = (uint64_t)v223;
  uint64_t v172 = v222;
  uint64_t v173 = sub_2E3440();
  uint64_t v174 = (uint64_t)v182;
  sub_82218(0.0, 1, 0.0, 1, v170, v146, 0.0, 1, (uint64_t)v182, 0.0, 1, 0.0, 1, v173, v175);
  sub_662B4(v135, &qword_3C8320);
  sub_71900(v174, v147, &qword_3C8328);
  sub_66444(v147, v172, &qword_3C8328);
  swift_storeEnumTagMultiPayload();
  sub_12720C();
  sub_127408();
  sub_2E2330();
  sub_66444(v171, v240, &qword_3CBEC0);
  swift_storeEnumTagMultiPayload();
  sub_127190();
  sub_71AA4(&qword_3CBF98, &qword_3CBE80);
  sub_2E2330();
  sub_662B4(v171, &qword_3CBEC0);
  sub_662B4(v147, &qword_3C8328);
  return sub_1284EC(v185, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
}

uint64_t sub_11AFD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for HostProxy(0);
  sub_128494(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  long long v6 = (unint64_t)KeyPath;
  char v7 = 0;
  uint64_t v8 = sub_2E1620();
  char v9 = v3 & 1;
  swift_retain();
  uint64_t v4 = sub_26E894(&v6, (uint64_t)&_swiftEmptyDictionarySingleton);
  swift_release_n();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_11B0B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for ShelfView();
  double v4 = 0.0;
  if (Shelf.insetsPageMargin.getter())
  {
    uint64_t v5 = v0 + v2[12];
    uint64_t v6 = *(void *)v5;
    char v7 = *(unsigned char *)(v5 + 8);
    sub_6EC64(*(void *)v5, v7);
    sub_87054(v6, v7, &v19);
    sub_6EF10(v6, v7);
    char v8 = v19;
    if (v19 != 2)
    {
      uint64_t v9 = v1 + v2[10];
      uint64_t v10 = *(void *)v9;
      char v11 = *(unsigned char *)(v9 + 8);
      sub_6EC64(*(void *)v9, v11);
      char v12 = sub_84CF0(v10, v11);
      sub_6EF10(v10, v11);
      uint64_t v13 = v1 + v2[9];
      uint64_t v14 = *(void *)v13;
      char v15 = *(unsigned char *)(v13 + 8);
      sub_6EC64(*(void *)v13, v15);
      char v16 = sub_84CF0(v14, v15);
      sub_6EF10(v14, v15);
      double v17 = 16.0;
      if ((v8 & 1) == 0) {
        double v17 = 32.0;
      }
      if ((v12 & 1) == 0) {
        double v17 = 40.0;
      }
      if (v16) {
        double v4 = 32.0;
      }
      else {
        double v4 = v17;
      }
    }
  }
  v3.n128_f64[0] = v4;

  return ShelfGridPadding.init(floatLiteral:)(v3);
}

uint64_t sub_11B218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_63BAC(&qword_3CC000);
  __chkstk_darwin(v7);
  v12[1] = *(void *)(a1 + *(int *)(type metadata accessor for Shelf() + 64));
  swift_bridgeObjectRetain();
  sub_63BAC(&qword_3CC008);
  sub_71AA4(&qword_3CC010, &qword_3CC008);
  sub_2DF6F0();
  swift_getKeyPath();
  sub_12781C(a2, (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShelfView);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_128574((uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for ShelfView);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1278E8;
  *(void *)(v10 + 24) = v9;
  sub_63BAC(&qword_3CBFC0);
  sub_71AA4(&qword_3CC018, &qword_3CC000);
  sub_12760C();
  return sub_2E3310();
}

uint64_t sub_11B4B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v64 = a1;
  uint64_t v74 = a4;
  uint64_t v5 = sub_2E3D70();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3C7498);
  __chkstk_darwin(v7 - 8);
  uint64_t v68 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_2E3DE0();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v63 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_63BAC(&qword_3CC020);
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3D1EB0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_63BAC(&qword_3CBEF8);
  uint64_t v54 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_63BAC(&qword_3CBEF0);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_63BAC(&qword_3CBFC8);
  __chkstk_darwin(v75);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_63BAC(&qword_3CC028);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v66 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_63BAC(&qword_3CBFC0);
  __chkstk_darwin(v59);
  uint64_t v61 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66310((uint64_t)a2, (uint64_t)&v81);
  sub_127884();
  sub_2DF4C0();
  sub_66310((uint64_t)a2, (uint64_t)v77);
  sub_63BAC(&qword_3C6F40);
  sub_63BAC(&qword_3CC030);
  if (swift_dynamicCast())
  {
    uint64_t v23 = *((void *)&v79 + 1);
    uint64_t v24 = v80;
    uint64_t v25 = v15;
    uint64_t v26 = sub_71044(&v78, *((uint64_t *)&v79 + 1));
    *((void *)&v82 + 1) = v23;
    uint64_t v83 = *(void *)(v24 + 8);
    uint64_t v27 = sub_71088((uint64_t *)&v81);
    uint64_t v28 = v26;
    uint64_t v15 = v25;
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v27, v28, v23);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v78);
  }
  else
  {
    uint64_t v80 = 0;
    long long v78 = 0u;
    long long v79 = 0u;
    sub_662B4((uint64_t)&v78, &qword_3CC038);
    long long v81 = 0u;
    long long v82 = 0u;
    uint64_t v83 = 0;
  }
  uint64_t v53 = type metadata accessor for ShelfView();
  sub_8747C((uint64_t)&v78);
  uint64_t v29 = sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
  sub_2E2B60();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v78);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_662B4((uint64_t)&v81, &qword_3CC040);
  *(void *)&long long v81 = v11;
  *((void *)&v81 + 1) = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v55;
  sub_2E2B80();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v15);
  uint64_t v31 = sub_2E3440();
  uint64_t v33 = v32;
  uint64_t v34 = &v20[*(int *)(v75 + 36)];
  uint64_t v35 = v63;
  sub_2E3DC0();
  sub_71044(a2, a2[3]);
  uint64_t v36 = (uint64_t)v68;
  sub_2E4320();
  uint64_t v37 = v58;
  sub_2E2940();
  sub_662B4(v36, &qword_3C7498);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v67);
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v34, v37, v62);
  uint64_t v38 = (uint64_t *)&v34[*(int *)(sub_63BAC(&qword_3CBFE0) + 36)];
  uint64_t *v38 = v31;
  v38[1] = v33;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v20, v30, v57);
  sub_71044(a2, a2[3]);
  swift_getDynamicType();
  sub_2E5260();
  sub_71044(a2, a2[3]);
  sub_2E39D0();
  uint64_t v39 = sub_2E4BE0();
  uint64_t v41 = v40;
  sub_65D68((uint64_t)&v81);
  *((void *)&v82 + 1) = &type metadata for String;
  *(void *)&long long v81 = v39;
  *((void *)&v81 + 1) = v41;
  uint64_t v42 = (uint64_t *)(v76 + *(int *)(v53 + 84));
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *((void *)&v79 + 1) = &type metadata for String;
  *(void *)&long long v78 = v44;
  *((void *)&v78 + 1) = v43;
  swift_bridgeObjectRetain();
  uint64_t v45 = v71;
  sub_2E3D60();
  swift_bridgeObjectRelease();
  sub_662B4((uint64_t)&v78, &qword_3C78D0);
  sub_662B4((uint64_t)&v81, &qword_3C78D0);
  sub_1276E0();
  uint64_t v46 = v66;
  sub_2E29B0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v73);
  sub_662B4((uint64_t)v20, &qword_3CBFC8);
  uint64_t v47 = v69;
  uint64_t v48 = (uint64_t)v61;
  uint64_t v49 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v61, v46, v70);
  uint64_t v50 = v48 + *(int *)(v59 + 36);
  *(unsigned char *)(v50 + 32) = 0;
  *(_OWORD *)uint64_t v50 = 0u;
  *(_OWORD *)(v50 + 16) = 0u;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v49);
  return sub_71900(v48, v74, &qword_3CBFC0);
}

uint64_t sub_11BE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for HostProxy(0);
  sub_128494(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  uint64_t v3 = sub_2E1620();
  char v5 = v4;
  uint64_t v6 = (void *)swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = (void *)swift_getKeyPath();
  long long v13 = (unint64_t)KeyPath;
  char v14 = 0;
  uint64_t v15 = v3;
  char v16 = v5 & 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_26E894(&v13, (uint64_t)&_swiftEmptyDictionarySingleton);
  swift_release();
  uint64_t v10 = sub_26ECE8(v6, 0, v7, 0, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_26EAE0(v8, 0, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  *a1 = v11;
  return result;
}

uint64_t sub_11C04C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_2E07D0();
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E0050();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2E01B0();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E1A10();
  __chkstk_darwin(v10 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E0020();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_2E0890();
  __chkstk_darwin(v13 - 8);
  uint64_t v33 = sub_2E0C60();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Shelf();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2 + *(int *)(type metadata accessor for ShelfView() + 84);
  sub_12781C(v20, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Shelf);
  uint64_t v29 = *(void *)(*(void *)(v20 + *(int *)(v17 + 72)) + 16);
  sub_63BAC(&qword_3CBD08);
  sub_2E3140();
  uint64_t v21 = *(void *)(v20 + 24);
  if (swift_conformsToProtocol2()) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  if (v22) {
    sub_2E1000();
  }
  else {
    sub_2E0010();
  }
  sub_87014(v30);
  sub_85250((uint64_t)v9);
  sub_2E00B0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v34);
  sub_2E0030();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v36);
  sub_2E0C50();
  uint64_t v23 = *((void *)v19 + 3);
  if (swift_conformsToProtocol2()) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v24)
  {
    sub_2E1010();
  }
  else
  {
    uint64_t v25 = v38;
    void *v38 = 1;
    uint64_t v26 = enum case for ShelfGridLayout.vertical(_:);
    uint64_t v27 = sub_2DF560();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v33);
  return sub_1284EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Shelf);
}

uint64_t sub_11C550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = sub_2E0180();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E0050();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E01B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC(&qword_3CBD18);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + *(int *)(type metadata accessor for ShelfView() + 84);
  uint64_t v16 = type metadata accessor for Shelf();
  sub_66444(v15 + *(int *)(v16 + 44), (uint64_t)v14, &qword_3CBD18);
  uint64_t v17 = sub_2DF630();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v29, v14, v17);
  }
  sub_662B4((uint64_t)v14, &qword_3CBD18);
  sub_85250((uint64_t)v11);
  sub_2E00B0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  char v20 = sub_2E0040();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  sub_85250((uint64_t)v11);
  sub_2E0190();
  v19(v11, v8);
  uint64_t v21 = v28;
  uint64_t v22 = (void (**)(char *, uint64_t))(v27 + 8);
  if (v20) {
    sub_2E0110();
  }
  else {
    sub_2E0160();
  }
  (*v22)(v4, v21);
  return sub_2DF620();
}

uint64_t sub_11C8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v33 = type metadata accessor for ShelfView();
  uint64_t v27 = *(void *)(v33 - 8);
  uint64_t v5 = *(void *)(v27 + 64);
  __chkstk_darwin(v33);
  uint64_t v6 = sub_2DF530();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_63BAC(&qword_3D1EB0);
  uint64_t v31 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_63BAC(&qword_3CBEF8);
  uint64_t v34 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_63BAC(&qword_3CBEF0);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_63BAC(&qword_3CBEE0);
  uint64_t v30 = *(void *)(v32 - 8);
  __n128 v16 = __chkstk_darwin(v32);
  uint64_t v29 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v16);
  uint64_t v36 = a2;
  sub_12781C(a2, (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShelfView);
  unint64_t v18 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v19 = swift_allocObject();
  sub_128574((uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(void))type metadata accessor for ShelfView);
  sub_2DF510();
  sub_127884();
  sub_2DF4C0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2DF510();
  sub_63BAC(&qword_3C6F40);
  sub_63BAC(&qword_3CC068);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v42 = 0;
    memset(v41, 0, sizeof(v41));
  }
  sub_8747C((uint64_t)v40);
  uint64_t v20 = sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
  uint64_t v21 = v28;
  sub_2E2B60();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v40);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v21);
  sub_662B4((uint64_t)v41, &qword_3CC040);
  sub_2DF520();
  uint64_t v43 = v21;
  uint64_t v44 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v38;
  sub_2E2B80();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v23);
  uint64_t v43 = v23;
  uint64_t v44 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v29;
  uint64_t v25 = v37;
  sub_2E2AE0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v25);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v39, v24, v32);
}

uint64_t sub_11CEF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v93 = type metadata accessor for TextComponent() - 8;
  __chkstk_darwin(v93);
  uint64_t v92 = (void *)((char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v94 = (uint64_t)v74 - v5;
  uint64_t v90 = type metadata accessor for SheetHeaderComponent() - 8;
  __chkstk_darwin(v90);
  uint64_t v89 = (void *)((char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v91 = (uint64_t)v74 - v8;
  uint64_t v86 = type metadata accessor for SeriesRoomHeaderComponent(0) - 8;
  __chkstk_darwin(v86);
  uint64_t v88 = (void *)((char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = type metadata accessor for ReviewBrickComponent() - 8;
  __chkstk_darwin(v82);
  uint64_t v11 = (void *)((char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)v74 - v13;
  uint64_t v83 = (void *)sub_2E27D0();
  long long v81 = (void (**)(void, void, void))*(v83 - 1);
  __chkstk_darwin(v83);
  uint64_t v77 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for InfoItemComponent();
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  unint64_t v18 = (void *)((char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v96 = (uint64_t)v74 - v20;
  uint64_t v80 = sub_63BAC(&qword_3CB368);
  __chkstk_darwin(v80);
  uint64_t v22 = (char *)v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DescriptionHeaderComponent(0);
  uint64_t v24 = (int *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (void *)((char *)v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  uint64_t v100 = (uint64_t)v74 - v28;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = type metadata accessor for HostProxy(0);
  uint64_t v85 = sub_128494(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  uint64_t v84 = v29;
  uint64_t v98 = sub_2E1620();
  int v87 = v30;
  uint64_t v79 = a1 + *(int *)(type metadata accessor for ShelfView() + 28);
  swift_retain();
  uint64_t v75 = v22;
  sub_2E32B0();
  *uint64_t v26 = swift_getKeyPath();
  sub_63BAC((uint64_t *)&unk_3D20F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (uint64_t *)((char *)v26 + v24[7]);
  *uint64_t v31 = swift_getKeyPath();
  uint64_t v78 = sub_63BAC(&qword_3C82B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)((char *)v26 + v24[8]);
  uint64_t *v32 = swift_getKeyPath();
  v74[1] = sub_63BAC(&qword_3C8180);
  swift_storeEnumTagMultiPayload();
  sub_71900((uint64_t)v22, (uint64_t)v26 + v24[9], &qword_3CB368);
  sub_128574((uint64_t)v26, v100, type metadata accessor for DescriptionHeaderComponent);
  uint64_t *v18 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = (uint64_t *)((char *)v18 + *(int *)(v16 + 28));
  uint64_t *v33 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v103 = 0x4014000000000000;
  ((void (**)(char *, void, void *))v81)[13](v77, enum case for Font.TextStyle.largeTitle(_:), v83);
  sub_A0B58();
  sub_2E16F0();
  uint64_t v34 = v96;
  sub_128574((uint64_t)v18, v96, (uint64_t (*)(void))type metadata accessor for InfoItemComponent);
  uint64_t v77 = (char *)swift_getKeyPath();
  uint64_t v76 = swift_getKeyPath();
  uint64_t *v11 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = v82;
  uint64_t v36 = (char *)v11 + *(int *)(v82 + 28);
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  uint64_t v37 = (uint64_t *)((char *)v11 + *(int *)(v35 + 32));
  *uint64_t v37 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = (char *)v11 + *(int *)(v35 + 36);
  *(void *)uint64_t v38 = swift_getKeyPath();
  v38[8] = 0;
  sub_128574((uint64_t)v11, v99, (uint64_t (*)(void))type metadata accessor for ReviewBrickComponent);
  sub_2E0860();
  sub_128494((unint64_t *)&qword_3C9D10, (void (*)(uint64_t))&type metadata accessor for ProfileRestrictions);
  swift_retain();
  swift_retain();
  long long v81 = (void (**)(void, void, void))sub_2E1B80();
  uint64_t v82 = v39;
  uint64_t v83 = v81;
  uint64_t v40 = (uint64_t)v75;
  sub_2E32B0();
  uint64_t v41 = sub_2E1620();
  uint64_t v42 = (uint64_t)v88;
  *uint64_t v88 = v41;
  *(unsigned char *)(v42 + 8) = v43 & 1;
  uint64_t v44 = (int *)v86;
  uint64_t v45 = (uint64_t *)(v42 + *(int *)(v86 + 28));
  uint64_t *v45 = swift_getKeyPath();
  sub_63BAC(&qword_3C82F8);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v42 + v44[8];
  *(void *)uint64_t v46 = swift_getKeyPath();
  *(unsigned char *)(v46 + 8) = 0;
  uint64_t v47 = v42 + v44[9];
  *(void *)uint64_t v47 = swift_getKeyPath();
  *(_WORD *)(v47 + 8) = 0;
  *(void *)(v47 + 16) = 0;
  sub_71900(v40, v42 + v44[10], &qword_3CB368);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = (uint64_t)v89;
  *uint64_t v89 = v48;
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = v90;
  uint64_t v51 = (uint64_t *)(v49 + *(int *)(v90 + 28));
  *uint64_t v51 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = (uint64_t *)(v49 + *(int *)(v50 + 32));
  *uint64_t v52 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v91;
  sub_128574(v49, v91, (uint64_t (*)(void))type metadata accessor for SheetHeaderComponent);
  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = (uint64_t)v92;
  *uint64_t v92 = v54;
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v93 + 28));
  *uint64_t v56 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = v94;
  sub_128574(v55, v94, (uint64_t (*)(void))type metadata accessor for TextComponent);
  long long v103 = (unint64_t)KeyPath;
  char v104 = 0;
  uint64_t v105 = v98;
  char v106 = v87 & 1;
  uint64_t v58 = sub_26E894(&v103, (uint64_t)&_swiftEmptyDictionarySingleton);
  swift_release();
  uint64_t v59 = sub_270250(v100, v58);
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_270050(v59);
  swift_bridgeObjectRelease();
  uint64_t v61 = sub_26FE50(v60);
  swift_bridgeObjectRelease();
  uint64_t v62 = sub_26FC18(v34, v61);
  swift_bridgeObjectRelease();
  char v102 = 0;
  char v101 = 0;
  uint64_t v63 = sub_26ECE8(v77, 0, v76, 0, v62);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_26FA18(v63);
  swift_bridgeObjectRelease();
  uint64_t v65 = v99;
  uint64_t v66 = sub_26F7E0(v99, v64);
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_26F5EC(v81, v82, v66);
  id v68 = v83;

  swift_bridgeObjectRelease();
  uint64_t v69 = sub_26F3B4(v42, v67);
  swift_bridgeObjectRelease();
  uint64_t v70 = v53;
  uint64_t v71 = sub_26F17C(v53, v69);
  swift_bridgeObjectRelease();
  uint64_t v72 = sub_26EF44(v57, v71);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_1284EC(v57, (uint64_t (*)(void))type metadata accessor for TextComponent);
  sub_1284EC(v70, (uint64_t (*)(void))type metadata accessor for SheetHeaderComponent);
  sub_1284EC(v42, type metadata accessor for SeriesRoomHeaderComponent);
  sub_1284EC(v65, (uint64_t (*)(void))type metadata accessor for ReviewBrickComponent);
  sub_1284EC(v96, (uint64_t (*)(void))type metadata accessor for InfoItemComponent);
  uint64_t result = sub_1284EC(v100, type metadata accessor for DescriptionHeaderComponent);
  *uint64_t v95 = v72;
  return result;
}

double sub_11DAB8@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v80 = a2;
  uint64_t v69 = sub_2E27D0();
  uint64_t v77 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v76 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2E1A10();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  uint64_t v70 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E01B0();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  __chkstk_darwin(v5);
  uint64_t v73 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2E0260();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SeeAllFooterComponentModel();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for ShelfView();
  __chkstk_darwin(v12);
  uint64_t v78 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_63BAC(&qword_3CC048);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ListItemComponentModel();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2DF510();
  uint64_t v21 = sub_63BAC(&qword_3C6F40);
  char v22 = swift_dynamicCast();
  uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v22)
  {
    uint64_t v65 = v21;
    (*v23)(v16, 0, 1, v17);
    sub_128574((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ListItemComponentModel);
    char v24 = sub_2DF500();
    uint64_t v25 = v78;
    uint64_t v26 = v79;
    sub_12781C(v79, v78, (uint64_t (*)(void))type metadata accessor for ShelfView);
    uint64_t v27 = (uint64_t)v20;
    if (v24)
    {
      uint64_t v28 = v12[21];
      uint64_t v29 = type metadata accessor for Shelf();
      sub_66444(v25 + v28 + *(int *)(v29 + 56), (uint64_t)&v113, &qword_3CC060);
      sub_65CF4(&v113, (uint64_t)v103);
      sub_1284EC(v25, (uint64_t (*)(void))type metadata accessor for ShelfView);
      int v30 = swift_dynamicCast();
      uint64_t v31 = v80;
      if (!v30)
      {
        sub_1279FC((uint64_t)&v113);
        sub_71900((uint64_t)&v113, (uint64_t)v105, &qword_3CC058);
        sub_63BAC(&qword_3CBF20);
        sub_126FF8();
        sub_2E2330();
        goto LABEL_9;
      }
      sub_1284EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SeeAllFooterComponentModel);
    }
    else
    {
      sub_1284EC(v25, (uint64_t (*)(void))type metadata accessor for ShelfView);
      uint64_t v31 = v80;
    }
    uint64_t v32 = v66;
    sub_84EF4(v66);
    uint64_t v78 = sub_2E01E0();
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v32, v68);
    LODWORD(v68) = sub_2E2650();
    uint64_t v33 = v73;
    sub_85250(v73);
    uint64_t v80 = v20;
    uint64_t v34 = v26 + v12[10];
    uint64_t v35 = *(void *)v34;
    char v36 = *(unsigned char *)(v34 + 8);
    sub_6EC64(*(void *)v34, v36);
    sub_84CF0(v35, v36);
    uint64_t v37 = v26;
    sub_6EF10(v35, v36);
    uint64_t v38 = v70;
    sub_87014(v70);
    sub_2E1A00();
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v38, v72);
    sub_2E0670();
    *(void *)&v105[0] = v39;
    uint64_t v41 = v76;
    uint64_t v40 = v77;
    uint64_t v42 = v69;
    (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, enum case for Font.TextStyle.body(_:), v69);
    sub_88340();
    sub_2E0060();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v33, v75);
    sub_2E15A0();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v51 = v37 + v12[13];
    uint64_t v52 = *(void *)v51;
    LOBYTE(v42) = *(unsigned char *)(v51 + 8);
    sub_6EC64(*(void *)v51, v42);
    sub_87270(v52, v42);
    sub_6EF10(v52, v42);
    sub_2E3440();
    sub_2E17A0();
    uint64_t v53 = v107;
    LOBYTE(v40) = v108;
    uint64_t v54 = v109;
    LOBYTE(v37) = v110;
    uint64_t v55 = v111;
    uint64_t v56 = v112;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = swift_getKeyPath();
    char v91 = 0;
    char v89 = v40;
    char v87 = v37;
    char v85 = 0;
    char v83 = 0;
    char v81 = 0;
    *(void *)&long long v113 = v78;
    WORD4(v113) = 256;
    *(_DWORD *)((char *)&v113 + 10) = v92;
    HIWORD(v113) = v93;
    LOBYTE(v114) = v68;
    *(_DWORD *)((char *)&v114 + 1) = v103[0];
    DWORD1(v114) = *(_DWORD *)((char *)v103 + 3);
    *((void *)&v114 + 1) = v44;
    *(void *)&long long v115 = v46;
    *((void *)&v115 + 1) = v48;
    *(void *)&long long v116 = v50;
    BYTE8(v116) = 0;
    HIDWORD(v116) = *(_DWORD *)&v90[3];
    *(_DWORD *)((char *)&v116 + 9) = *(_DWORD *)v90;
    *(void *)&long long v117 = v53;
    BYTE8(v117) = v40;
    HIDWORD(v117) = *(_DWORD *)&v88[3];
    *(_DWORD *)((char *)&v117 + 9) = *(_DWORD *)v88;
    *(void *)&long long v118 = v54;
    BYTE8(v118) = v37;
    HIDWORD(v118) = *(_DWORD *)&v86[3];
    *(_DWORD *)((char *)&v118 + 9) = *(_DWORD *)v86;
    *(void *)&long long v119 = v55;
    *((void *)&v119 + 1) = v56;
    *(void *)&long long v120 = KeyPath;
    uint64_t v27 = (uint64_t)v80;
    BYTE8(v120) = 0;
    HIDWORD(v120) = *(_DWORD *)&v84[3];
    *(_DWORD *)((char *)&v120 + 9) = *(_DWORD *)v84;
    *(void *)&v121[0] = v58;
    BYTE8(v121[0]) = 0;
    HIDWORD(v121[0]) = *(_DWORD *)&v82[3];
    *(_DWORD *)((char *)v121 + 9) = *(_DWORD *)v82;
    *(void *)&v121[1] = v59;
    WORD4(v121[1]) = 256;
    sub_1279EC((uint64_t)&v113);
    sub_71900((uint64_t)&v113, (uint64_t)v105, &qword_3CC058);
    sub_63BAC(&qword_3CBF20);
    sub_126FF8();
    sub_2E2330();
LABEL_9:
    v105[6] = v100;
    v105[7] = v101;
    v106[0] = v102[0];
    *(_OWORD *)((char *)v106 + 11) = *(_OWORD *)((char *)v102 + 11);
    v105[2] = v96;
    v105[3] = v97;
    v105[4] = v98;
    v105[5] = v99;
    v105[0] = v94;
    v105[1] = v95;
    sub_1279F4((uint64_t)v105);
    sub_71900((uint64_t)v105, (uint64_t)&v113, &qword_3CC050);
    sub_63BAC(&qword_3CBF10);
    sub_126F50();
    sub_2E2330();
    sub_1284EC(v27, (uint64_t (*)(void))type metadata accessor for ListItemComponentModel);
    long long v119 = v103[6];
    long long v120 = v103[7];
    v121[0] = v104[0];
    *(_OWORD *)((char *)v121 + 12) = *(_OWORD *)((char *)v104 + 12);
    long long v115 = v103[2];
    long long v116 = v103[3];
    long long v117 = v103[4];
    long long v118 = v103[5];
    long long v113 = v103[0];
    long long v114 = v103[1];
    goto LABEL_10;
  }
  (*v23)(v16, 1, 1, v17);
  sub_662B4((uint64_t)v16, &qword_3CC048);
  sub_1279E0((uint64_t)v105);
  sub_71900((uint64_t)v105, (uint64_t)v103, &qword_3CC050);
  sub_63BAC(&qword_3CBF10);
  sub_126F50();
  sub_2E2330();
  uint64_t v31 = v80;
LABEL_10:
  long long v60 = v120;
  v31[6] = v119;
  v31[7] = v60;
  v31[8] = v121[0];
  *(_OWORD *)((char *)v31 + 140) = *(_OWORD *)((char *)v121 + 12);
  long long v61 = v116;
  v31[2] = v115;
  v31[3] = v61;
  long long v62 = v118;
  void v31[4] = v117;
  v31[5] = v62;
  double result = *(double *)&v113;
  long long v64 = v114;
  *uint64_t v31 = v113;
  v31[1] = v64;
  return result;
}

uint64_t sub_11E544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_63BAC(&qword_3CBE70);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v33 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_63BAC(&qword_3C7E60);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v33 - v18;
  __chkstk_darwin(v20);
  uint64_t v41 = (char *)&v33 - v21;
  type metadata accessor for ShelfView();
  char v22 = Shelf.cardSetData.getter();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v39 = a1;
    sub_2E3B00();
    uint64_t v34 = v6;
    sub_2E3C00();
    uint64_t v42 = v23;
    char v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v24(v19, v16, v13);
    sub_126DF4();
    sub_2E3BC0();
    char v36 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v37 = v14 + 8;
    v36(v16, v13);
    swift_bridgeObjectRelease();
    sub_63BAC(&qword_3C8170);
    uint64_t v25 = *(unsigned __int8 *)(v14 + 80);
    unint64_t v26 = (v25 + 32) & ~v25;
    unint64_t v38 = v26 + *(void *)(v14 + 72);
    uint64_t v35 = v25 | 7;
    uint64_t v27 = swift_allocObject();
    v24((char *)(v27 + v26), v19, v13);
    uint64_t v28 = (uint64_t)v34;
    sub_2E3C00();
    sub_2E3BB0();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
    uint64_t v29 = v40;
    sub_66444(v28, v40, &qword_3CBE70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v29, 1, v13) == 1)
    {
      int v30 = v41;
      sub_2E3C00();
      sub_662B4(v29, &qword_3CBE70);
    }
    else
    {
      int v30 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v41, v29, v13);
    }
    sub_662B4(v28, &qword_3CBE70);
    v36(v19, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    sub_66444((uint64_t)v12, (uint64_t)v9, &qword_3CBE70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      sub_2E3B00();
      sub_2E3C00();
      sub_662B4((uint64_t)v9, &qword_3CBE70);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v41, v9, v13);
    }
    sub_662B4((uint64_t)v12, &qword_3CBE70);
    unint64_t v26 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    int v30 = v41;
  }
  sub_63BAC(&qword_3C8170);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v31 + v26, v30, v13);
  sub_2E3B00();
  sub_2E3C00();
  sub_2E3BB0();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v30, v13);
}

uint64_t EnvironmentValues.shelfID.getter()
{
  sub_11EBC4();
  sub_2E2050();
  return v1;
}

double sub_11EAC0@<D0>(_OWORD *a1@<X8>)
{
  sub_11EBC4();
  sub_2E2050();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_11EB10@<D0>(_OWORD *a1@<X8>)
{
  sub_11EBC4();
  sub_2E2050();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_11EB60()
{
  return sub_2E2060();
}

unint64_t sub_11EBC4()
{
  unint64_t result = qword_3CBD00;
  if (!qword_3CBD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBD00);
  }
  return result;
}

uint64_t EnvironmentValues.shelfID.setter()
{
  return sub_2E2060();
}

void *sub_11EC54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_63BAC(&qword_3CBC58);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2DE320();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = type metadata accessor for ShelfView();
  uint64_t v13 = (void *)sub_2DE100();
  sub_66444(v1 + *(int *)(v12 + 96), (uint64_t)v4, &qword_3CBC58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_662B4((uint64_t)v4, &qword_3CBC58);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v14(v8, v11, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_5E750(0, v13[2] + 1, 1, v13);
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1) {
      uint64_t v13 = sub_5E750((void *)(v15 > 1), v16 + 1, 1, v13);
    }
    uint64_t v21 = v5;
    uint64_t v22 = sub_128494(&qword_3CA5E8, (void (*)(uint64_t))&type metadata accessor for SectionData);
    uint64_t v23 = sub_128494(&qword_3CA5F0, (void (*)(uint64_t))&type metadata accessor for SectionData);
    uint64_t v17 = sub_71088((uint64_t *)&v20);
    v14((char *)v17, v8, v5);
    v13[2] = v16 + 1;
    sub_1285DC(&v20, &v13[6 * v16 + 4]);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v18(v8, v5);
    v18(v11, v5);
  }
  return v13;
}

uint64_t sub_11EF54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = type metadata accessor for SeriesRoomListHeaderComponent();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for ReviewsHeaderComponent(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for DefaultHeaderComponent(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  long long v20 = (char *)&v31 - v19;
  *uint64_t v17 = swift_getKeyPath();
  sub_63BAC(&qword_3C8180);
  swift_storeEnumTagMultiPayload();
  sub_128574((uint64_t)v17, (uint64_t)v20, type metadata accessor for DefaultHeaderComponent);
  *(void *)uint64_t v11 = swift_getKeyPath();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v21 = (uint64_t *)&v11[v9[7]];
  *uint64_t v21 = swift_getKeyPath();
  sub_63BAC((uint64_t *)&unk_3D20F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = &v11[v9[8]];
  *(void *)uint64_t v22 = swift_getKeyPath();
  unsigned char v22[40] = 0;
  uint64_t v23 = (uint64_t *)&v11[v9[9]];
  *uint64_t v23 = swift_getKeyPath();
  sub_63BAC(&qword_3C7490);
  swift_storeEnumTagMultiPayload();
  sub_128574((uint64_t)v11, (uint64_t)v14, type metadata accessor for ReviewsHeaderComponent);
  *uint64_t v4 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  char v24 = (char *)v4 + *(int *)(v2 + 28);
  *(void *)char v24 = swift_getKeyPath();
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  sub_128574((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderComponent);
  uint64_t v25 = sub_270AF8((uint64_t)v20, (uint64_t)&_swiftEmptyDictionarySingleton);
  uint64_t v26 = sub_26FE50(v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_2708C0((uint64_t)v14, v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_270688((uint64_t)v7, v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_270488(v28);
  swift_bridgeObjectRelease();
  sub_1284EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderComponent);
  sub_1284EC((uint64_t)v14, type metadata accessor for ReviewsHeaderComponent);
  uint64_t result = sub_1284EC((uint64_t)v20, type metadata accessor for DefaultHeaderComponent);
  uint64_t *v32 = v29;
  return result;
}

uint64_t sub_11F2F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DefaultFooterComponent(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - v6;
  *uint64_t v4 = swift_getKeyPath();
  sub_63BAC(&qword_3C8180);
  swift_storeEnumTagMultiPayload();
  sub_128574((uint64_t)v4, (uint64_t)v7, type metadata accessor for DefaultFooterComponent);
  uint64_t v8 = sub_270F30((uint64_t)v7, (uint64_t)&_swiftEmptyDictionarySingleton);
  uint64_t v9 = sub_26FE50(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_270D30(v9);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1284EC((uint64_t)v7, type metadata accessor for DefaultFooterComponent);
  *a1 = v10;
  return result;
}

uint64_t sub_11F430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_126D80();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.shelfID.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_11EBC4();
  sub_2E2050();
  *(_OWORD *)uint64_t v3 = *((_OWORD *)v3 + 1);
  return sub_11F518;
}

void sub_11F518(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  v2[2] = v4;
  v2[3] = v3;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2E2060();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2E2060();
  }

  free(v2);
}

uint64_t sub_11F5AC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for ShelfView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_2E0260();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_63BAC(&qword_3C8318);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_2E1A10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    long long v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(void *)((char *)a2 + v18);
    v19[1] = v21;
    swift_retain();
    swift_retain();
    uint64_t v22 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
    uint64_t v23 = (char *)v19 + v22;
    char v24 = &v20[v22];
    uint64_t v25 = sub_2E1050();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_63BAC(&qword_3CB370);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)a1 + v28;
    int v30 = (char *)a2 + v28;
    uint64_t v31 = sub_2E0890();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = sub_63BAC(&qword_3CBD08);
    *(void *)&v29[*(int *)(v32 + 28)] = *(void *)&v30[*(int *)(v32 + 28)];
    uint64_t v33 = a3[9];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = *(void *)v35;
    LOBYTE(v30) = v35[8];
    swift_retain();
    sub_6EC64(v36, (char)v30);
    *(void *)uint64_t v34 = v36;
    v34[8] = (char)v30;
    uint64_t v37 = a3[10];
    unint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = *(void *)v39;
    LOBYTE(v30) = v39[8];
    sub_6EC64(*(void *)v39, (char)v30);
    *(void *)unint64_t v38 = v40;
    v38[8] = (char)v30;
    uint64_t v41 = a3[11];
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = *(void *)v43;
    LOBYTE(v30) = v43[8];
    sub_6EC64(*(void *)v43, (char)v30);
    *(void *)uint64_t v42 = v44;
    v42[8] = (char)v30;
    uint64_t v45 = a3[12];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = *(void *)v47;
    LOBYTE(v30) = v47[8];
    sub_6EC64(*(void *)v47, (char)v30);
    *(void *)uint64_t v46 = v48;
    v46[8] = (char)v30;
    uint64_t v49 = a3[13];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = *(void *)v51;
    LOBYTE(v30) = v51[8];
    sub_6EC64(*(void *)v51, (char)v30);
    *(void *)uint64_t v50 = v52;
    v50[8] = (char)v30;
    uint64_t v53 = a3[14];
    uint64_t v54 = (void *)((char *)a1 + v53);
    uint64_t v55 = (void *)((char *)a2 + v53);
    sub_63BAC(&qword_3CBD10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = sub_2E0E10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    }
    else
    {
      *uint64_t v54 = *v55;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = a3[15];
    uint64_t v58 = (char *)a1 + v57;
    uint64_t v59 = (char *)a2 + v57;
    char v60 = *((unsigned char *)a2 + v57 + 40);
    if (v60)
    {
      long long v61 = *(_OWORD *)(v59 + 24);
      *(_OWORD *)(v58 + 24) = v61;
      (**(void (***)(char *))(v61 - 8))(v58);
    }
    else
    {
      *(void *)uint64_t v58 = *(void *)v59;
      swift_retain();
    }
    v58[40] = v60;
    uint64_t v62 = a3[16];
    uint64_t v63 = (char *)a1 + v62;
    long long v64 = (char *)a2 + v62;
    id v65 = *(id *)v64;
    char v66 = v64[8];
    sub_C9A1C(*(id *)v64, v66);
    *(void *)uint64_t v63 = v65;
    v63[8] = v66;
    uint64_t v67 = a3[17];
    uint64_t v68 = (void *)((char *)a1 + v67);
    uint64_t v69 = (void *)((char *)a2 + v67);
    sub_63BAC(&qword_3C82C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = sub_2DE900();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
    }
    else
    {
      *uint64_t v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = a3[18];
    uint64_t v72 = (char *)a1 + v71;
    uint64_t v73 = (char *)a2 + v71;
    if (*((unsigned char *)a2 + v71 + 40))
    {
      uint64_t v74 = *((void *)v73 + 3);
      if (v74)
      {
        uint64_t v75 = *((void *)v73 + 4);
        *((void *)v72 + 3) = v74;
        *((void *)v72 + 4) = v75;
        (**(void (***)(char *))(v74 - 8))(v72);
      }
      else
      {
        long long v76 = *((_OWORD *)v73 + 1);
        *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
        *((_OWORD *)v72 + 1) = v76;
        *((void *)v72 + 4) = *((void *)v73 + 4);
      }
      v72[40] = 1;
    }
    else
    {
      *(void *)uint64_t v72 = *(void *)v73;
      v72[40] = 0;
      swift_retain();
    }
    uint64_t v77 = a3[19];
    uint64_t v78 = (char *)a1 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = sub_2DE110();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
    uint64_t v81 = a3[20];
    uint64_t v82 = (char *)a1 + v81;
    char v83 = (char *)a2 + v81;
    uint64_t v84 = *(void *)((char *)a2 + v81);
    LOBYTE(v79) = *((unsigned char *)a2 + v81 + 9);
    unsigned __int8 v85 = *((unsigned char *)a2 + v81 + 8);
    sub_12075C(v84, v85, (char)v79);
    *(void *)uint64_t v82 = v84;
    v82[8] = v85;
    v82[9] = (char)v79;
    *((void *)v82 + 2) = *((void *)v83 + 2);
    uint64_t v86 = a3[21];
    unint64_t v184 = a2;
    uint64_t v185 = a1;
    char v87 = (char *)a1 + v86;
    uint64_t v88 = (char *)a2 + v86;
    uint64_t v89 = *(void *)((char *)a2 + v86 + 8);
    *(void *)char v87 = *(void *)((char *)a2 + v86);
    *((void *)v87 + 1) = v89;
    v87[16] = *((unsigned char *)a2 + v86 + 16);
    *(_OWORD *)(v87 + 24) = *(_OWORD *)((char *)a2 + v86 + 24);
    v87[40] = *((unsigned char *)a2 + v86 + 40);
    uint64_t v90 = (int *)type metadata accessor for Shelf();
    uint64_t v91 = v90[8];
    int v92 = &v87[v91];
    __int16 v93 = &v88[v91];
    uint64_t v94 = sub_2E3CC0();
    uint64_t v95 = *(void *)(v94 - 8);
    long long v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
    uint64_t v97 = v94;
    swift_bridgeObjectRetain();
    uint64_t v182 = v96;
    uint64_t v183 = a3;
    if (v96(v93, 1, v97))
    {
      uint64_t v98 = sub_63BAC(&qword_3C7498);
      memcpy(v92, v93, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v92, v93, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v97);
    }
    uint64_t v99 = v95;
    uint64_t v100 = v90[9];
    long long v101 = &v87[v100];
    char v102 = &v88[v100];
    uint64_t v103 = sub_2E13F0();
    uint64_t v104 = *(void *)(v103 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
    {
      uint64_t v105 = sub_63BAC(&qword_3CBC60);
      memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v101, v102, v103);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
    }
    uint64_t v106 = v90[10];
    long long v107 = *(_OWORD *)&v88[v106 + 24];
    *(_OWORD *)&v87[v106 + 24] = v107;
    (**(void (***)(void))(v107 - 8))();
    uint64_t v108 = v90[11];
    uint64_t v109 = &v87[v108];
    char v110 = &v88[v108];
    uint64_t v111 = sub_2DF630();
    uint64_t v112 = *(void *)(v111 - 8);
    uint64_t v113 = v97;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
    {
      uint64_t v114 = sub_63BAC(&qword_3CBD18);
      memcpy(v109, v110, *(void *)(*(void *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v109, v110, v111);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
    }
    uint64_t v115 = v90[12];
    long long v116 = &v87[v115];
    long long v117 = &v88[v115];
    uint64_t v118 = sub_2E0E40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
    uint64_t v119 = v90[13];
    long long v120 = *(_OWORD *)&v88[v119 + 24];
    *(_OWORD *)&v87[v119 + 24] = v120;
    (**(void (***)(void))(v120 - 8))();
    uint64_t v121 = v90[14];
    long long v122 = *(_OWORD *)&v88[v121 + 24];
    *(_OWORD *)&v87[v121 + 24] = v122;
    (**(void (***)(void))(v122 - 8))();
    uint64_t v123 = v90[15];
    uint64_t v124 = &v87[v123];
    uint64_t v125 = &v88[v123];
    char v126 = (int *)type metadata accessor for ContentUnavailableComponentModel();
    uint64_t v127 = *((void *)v126 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v127 + 48))(v125, 1, v126))
    {
      uint64_t v128 = sub_63BAC(&qword_3CBD20);
      memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
    }
    else
    {
      uint64_t v180 = v90;
      uint64_t v181 = v127;
      uint64_t v129 = *((void *)v125 + 1);
      *(void *)uint64_t v124 = *(void *)v125;
      *((void *)v124 + 1) = v129;
      uint64_t v130 = v126[5];
      __dsta = &v124[v130];
      uint64_t v176 = v99;
      uint64_t v177 = &v125[v130];
      uint64_t v131 = sub_2DF5D0();
      uint64_t v132 = *(void *)(v131 - 8);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
      swift_bridgeObjectRetain();
      v133(__dsta, v177, v131);
      uint64_t v134 = v126[6];
      __dst = &v124[v134];
      uint64_t v135 = &v125[v134];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(&v125[v134], 1, v131))
      {
        uint64_t v136 = sub_63BAC(&qword_3C97E8);
        memcpy(__dst, v135, *(void *)(*(void *)(v136 - 8) + 64));
      }
      else
      {
        v133(__dst, v135, v131);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(__dst, 0, 1, v131);
      }
      uint64_t v137 = v126[7];
      uint64_t v138 = &v124[v137];
      uint64_t v139 = &v125[v137];
      *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
      v138[16] = v139[16];
      v124[v126[8]] = v125[v126[8]];
      uint64_t v140 = v126[9];
      uint64_t v141 = &v124[v140];
      uint64_t v142 = &v125[v140];
      uint64_t v143 = sub_2E0F70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
      uint64_t v144 = v126[10];
      long long v145 = *(_OWORD *)&v125[v144 + 24];
      *(_OWORD *)&v124[v144 + 24] = v145;
      (**(void (***)(void))(v145 - 8))();
      uint64_t v146 = v126[11];
      uint64_t v147 = &v124[v146];
      uint64_t v148 = &v125[v146];
      uint64_t v90 = v180;
      if (v182(&v125[v146], 1, v113))
      {
        uint64_t v149 = sub_63BAC(&qword_3C7498);
        memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v147, v148, v113);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v147, 0, 1, v113);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v181 + 56))(v124, 0, 1, v126);
    }
    *(void *)&v87[v90[16]] = *(void *)&v88[v90[16]];
    uint64_t v150 = v90[17];
    uint64_t v151 = &v87[v150];
    uint64_t v152 = &v88[v150];
    uint64_t v153 = sub_2E0310();
    uint64_t v154 = *(void *)(v153 - 8);
    uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
    swift_bridgeObjectRetain();
    if (v155(v152, 1, v153))
    {
      uint64_t v156 = sub_63BAC(&qword_3CBD28);
      memcpy(v151, v152, *(void *)(*(void *)(v156 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v151, v152, v153);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
    }
    uint64_t v157 = v90[18];
    unint64_t v158 = &v87[v157];
    uint64_t v159 = &v88[v157];
    uint64_t v160 = *(void *)&v88[v157 + 24];
    if (v160)
    {
      uint64_t v161 = *((void *)v159 + 4);
      *((void *)v158 + 3) = v160;
      *((void *)v158 + 4) = v161;
      (**(void (***)(void))(v160 - 8))();
    }
    else
    {
      long long v162 = *((_OWORD *)v159 + 1);
      *(_OWORD *)unint64_t v158 = *(_OWORD *)v159;
      *((_OWORD *)v158 + 1) = v162;
      *((void *)v158 + 4) = *((void *)v159 + 4);
    }
    uint64_t v163 = v90[19];
    uint64_t v164 = &v87[v163];
    uint64_t v165 = &v88[v163];
    uint64_t v166 = sub_2DE320();
    uint64_t v167 = *(void *)(v166 - 8);
    uint64_t v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48);
    if (v168(v165, 1, v166))
    {
      uint64_t v169 = sub_63BAC(&qword_3CBC58);
      memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
    }
    uint64_t v9 = v185;
    uint64_t v170 = v183[23];
    *(void *)((char *)v185 + v183[22]) = *(void *)((char *)v184 + v183[22]);
    *(void *)((char *)v185 + v170) = *(void *)((char *)v184 + v170);
    uint64_t v171 = v183[24];
    uint64_t v172 = (char *)v185 + v171;
    uint64_t v173 = (char *)v184 + v171;
    swift_retain();
    if (v168(v173, 1, v166))
    {
      uint64_t v174 = sub_63BAC(&qword_3CBC58);
      memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v172, v173, v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v172, 0, 1, v166);
    }
  }
  return v9;
}

uint64_t sub_12075C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for ShelfView(uint64_t a1, int *a2)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E0260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_63BAC(&qword_3C8318);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2E1A10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v11 = sub_2E1050();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = a1 + a2[8];
  uint64_t v14 = sub_2E0890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  sub_63BAC(&qword_3CBD08);
  swift_release();
  sub_6EF10(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_6EF10(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_6EF10(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  sub_6EF10(*(void *)(a1 + a2[12]), *(unsigned char *)(a1 + a2[12] + 8));
  sub_6EF10(*(void *)(a1 + a2[13]), *(unsigned char *)(a1 + a2[13] + 8));
  uint64_t v15 = a1 + a2[14];
  sub_63BAC(&qword_3CBD10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_2E0E10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = a1 + a2[15];
  if (*(unsigned char *)(v17 + 40)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v17);
  }
  else {
    swift_release();
  }
  sub_88154(*(id *)(a1 + a2[16]), *(unsigned char *)(a1 + a2[16] + 8));
  uint64_t v18 = a1 + a2[17];
  sub_63BAC(&qword_3C82C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_2DE900();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  else
  {
    swift_release();
  }
  uint64_t v20 = a1 + a2[18];
  if (*(unsigned char *)(v20 + 40))
  {
    if (*(void *)(v20 + 24)) {
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v20);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v21 = a1 + a2[19];
  uint64_t v22 = sub_2DE110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  sub_881C4(*(void *)(a1 + a2[20]), *(unsigned __int8 *)(a1 + a2[20] + 8), *(unsigned char *)(a1 + a2[20] + 9));
  uint64_t v23 = a1 + a2[21];
  swift_bridgeObjectRelease();
  char v24 = (int *)type metadata accessor for Shelf();
  uint64_t v25 = v23 + v24[8];
  uint64_t v26 = sub_2E3CC0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (!v58(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  uint64_t v28 = v23 + v24[9];
  uint64_t v29 = sub_2E13F0();
  uint64_t v30 = *(void *)(v29 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v23 + v24[10]);
  uint64_t v31 = v23 + v24[11];
  uint64_t v32 = sub_2DF630();
  uint64_t v33 = *(void *)(v32 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  uint64_t v34 = v23 + v24[12];
  uint64_t v35 = sub_2E0E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v23 + v24[13]);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v23 + v24[14]);
  uint64_t v36 = v23 + v24[15];
  uint64_t v37 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v37 - 1) + 48))(v36, 1, v37))
  {
    uint64_t v56 = v27;
    uint64_t v57 = v26;
    swift_bridgeObjectRelease();
    uint64_t v38 = v36 + v37[5];
    uint64_t v39 = sub_2DF5D0();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v55(v38, v39);
    uint64_t v41 = v36 + v37[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39)) {
      v55(v41, v39);
    }
    uint64_t v42 = v36 + v37[9];
    uint64_t v43 = sub_2E0F70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v36 + v37[10]);
    uint64_t v44 = v36 + v37[11];
    if (!v58(v44, 1, v57)) {
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v44, v57);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v23 + v24[17];
  uint64_t v46 = sub_2E0310();
  uint64_t v47 = *(void *)(v46 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46)) {
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  }
  uint64_t v48 = v23 + v24[18];
  if (*(void *)(v48 + 24)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v48);
  }
  uint64_t v49 = v23 + v24[19];
  uint64_t v50 = sub_2DE320();
  uint64_t v59 = *(void *)(v50 - 8);
  uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (!v51(v49, 1, v50)) {
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v49, v50);
  }
  swift_release();
  uint64_t v52 = a1 + a2[24];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v51)(v52, 1, v50);
  if (!result)
  {
    uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8);
    return v54(v52, v50);
  }
  return result;
}

void *initializeWithCopy for ShelfView(void *a1, void *a2, int *a3)
{
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E01B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_2E0260();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_63BAC(&qword_3C8318);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_2E1A10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = v18;
  swift_retain();
  swift_retain();
  uint64_t v19 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v20 = (char *)v16 + v19;
  uint64_t v21 = &v17[v19];
  uint64_t v22 = sub_2E1050();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_63BAC(&qword_3CB370);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_2E0890();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = sub_63BAC(&qword_3CBD08);
  *(void *)&v26[*(int *)(v29 + 28)] = *(void *)&v27[*(int *)(v29 + 28)];
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  LOBYTE(v27) = v32[8];
  swift_retain();
  sub_6EC64(v33, (char)v27);
  *(void *)uint64_t v31 = v33;
  v31[8] = (char)v27;
  uint64_t v34 = a3[10];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  LOBYTE(v27) = v36[8];
  sub_6EC64(*(void *)v36, (char)v27);
  *(void *)uint64_t v35 = v37;
  v35[8] = (char)v27;
  uint64_t v38 = a3[11];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  LOBYTE(v27) = v40[8];
  sub_6EC64(*(void *)v40, (char)v27);
  *(void *)uint64_t v39 = v41;
  v39[8] = (char)v27;
  uint64_t v42 = a3[12];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = *(void *)v44;
  LOBYTE(v27) = v44[8];
  sub_6EC64(*(void *)v44, (char)v27);
  *(void *)uint64_t v43 = v45;
  v43[8] = (char)v27;
  uint64_t v46 = a3[13];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = *(void *)v48;
  LOBYTE(v27) = v48[8];
  sub_6EC64(*(void *)v48, (char)v27);
  *(void *)uint64_t v47 = v49;
  v47[8] = (char)v27;
  uint64_t v50 = a3[14];
  uint64_t v51 = (void *)((char *)a1 + v50);
  uint64_t v52 = (void *)((char *)a2 + v50);
  sub_63BAC(&qword_3CBD10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = sub_2E0E10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    *uint64_t v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = a3[15];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  char v57 = *((unsigned char *)a2 + v54 + 40);
  if (v57)
  {
    long long v58 = *(_OWORD *)(v56 + 24);
    *(_OWORD *)(v55 + 24) = v58;
    (**(void (***)(char *))(v58 - 8))(v55);
  }
  else
  {
    *(void *)uint64_t v55 = *(void *)v56;
    swift_retain();
  }
  v55[40] = v57;
  uint64_t v59 = a3[16];
  char v60 = (char *)a1 + v59;
  long long v61 = (char *)a2 + v59;
  id v62 = *(id *)v61;
  char v63 = v61[8];
  sub_C9A1C(*(id *)v61, v63);
  *(void *)char v60 = v62;
  v60[8] = v63;
  uint64_t v64 = a3[17];
  id v65 = (void *)((char *)a1 + v64);
  char v66 = (void *)((char *)a2 + v64);
  sub_63BAC(&qword_3C82C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v67 = sub_2DE900();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  else
  {
    *id v65 = *v66;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = a3[18];
  uint64_t v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  if (*((unsigned char *)a2 + v68 + 40))
  {
    uint64_t v71 = *((void *)v70 + 3);
    if (v71)
    {
      uint64_t v72 = *((void *)v70 + 4);
      *((void *)v69 + 3) = v71;
      *((void *)v69 + 4) = v72;
      (**(void (***)(char *))(v71 - 8))(v69);
    }
    else
    {
      long long v73 = *((_OWORD *)v70 + 1);
      *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v73;
      *((void *)v69 + 4) = *((void *)v70 + 4);
    }
    v69[40] = 1;
  }
  else
  {
    *(void *)uint64_t v69 = *(void *)v70;
    v69[40] = 0;
    swift_retain();
  }
  uint64_t v74 = a3[19];
  uint64_t v75 = (char *)a1 + v74;
  long long v76 = (char *)a2 + v74;
  uint64_t v77 = sub_2DE110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
  uint64_t v78 = a3[20];
  uint64_t v79 = (char *)a1 + v78;
  uint64_t v80 = (char *)a2 + v78;
  uint64_t v81 = *(void *)((char *)a2 + v78);
  LOBYTE(v76) = *((unsigned char *)a2 + v78 + 9);
  unsigned __int8 v82 = *((unsigned char *)a2 + v78 + 8);
  sub_12075C(v81, v82, (char)v76);
  *(void *)uint64_t v79 = v81;
  v79[8] = v82;
  v79[9] = (char)v76;
  *((void *)v79 + 2) = *((void *)v80 + 2);
  uint64_t v179 = a3;
  uint64_t v180 = a2;
  uint64_t v83 = a3[21];
  uint64_t v84 = (char *)a1 + v83;
  unsigned __int8 v85 = (char *)a2 + v83;
  uint64_t v86 = *(void *)((char *)a2 + v83 + 8);
  *(void *)uint64_t v84 = *(void *)((char *)a2 + v83);
  *((void *)v84 + 1) = v86;
  v84[16] = *((unsigned char *)a2 + v83 + 16);
  *(_OWORD *)(v84 + 24) = *(_OWORD *)((char *)a2 + v83 + 24);
  v84[40] = *((unsigned char *)a2 + v83 + 40);
  uint64_t v182 = (int *)type metadata accessor for Shelf();
  uint64_t v87 = v182[8];
  uint64_t v88 = &v84[v87];
  uint64_t v89 = &v85[v87];
  uint64_t v90 = sub_2E3CC0();
  uint64_t v91 = *(void *)(v90 - 8);
  int v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
  swift_bridgeObjectRetain();
  uint64_t v178 = v92;
  uint64_t v177 = v91;
  if (v92(v89, 1, v90))
  {
    uint64_t v93 = sub_63BAC(&qword_3C7498);
    memcpy(v88, v89, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
  }
  uint64_t v94 = v182;
  uint64_t v95 = v182[9];
  long long v96 = &v84[v95];
  uint64_t v97 = &v85[v95];
  uint64_t v98 = sub_2E13F0();
  uint64_t v99 = *(void *)(v98 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
  {
    uint64_t v100 = sub_63BAC(&qword_3CBC60);
    memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v96, v97, v98);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  uint64_t v101 = v182[10];
  long long v102 = *(_OWORD *)&v85[v101 + 24];
  *(_OWORD *)&v84[v101 + 24] = v102;
  (**(void (***)(void))(v102 - 8))();
  uint64_t v103 = v182[11];
  uint64_t v104 = &v84[v103];
  uint64_t v105 = &v85[v103];
  uint64_t v106 = sub_2DF630();
  uint64_t v107 = *(void *)(v106 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
  {
    uint64_t v108 = sub_63BAC(&qword_3CBD18);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
  }
  uint64_t v181 = a1;
  uint64_t v109 = v182[12];
  char v110 = &v84[v109];
  uint64_t v111 = &v85[v109];
  uint64_t v112 = sub_2E0E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
  uint64_t v113 = v182[13];
  long long v114 = *(_OWORD *)&v85[v113 + 24];
  *(_OWORD *)&v84[v113 + 24] = v114;
  (**(void (***)(void))(v114 - 8))();
  uint64_t v115 = v182[14];
  long long v116 = *(_OWORD *)&v85[v115 + 24];
  *(_OWORD *)&v84[v115 + 24] = v116;
  (**(void (***)(void))(v116 - 8))();
  uint64_t v117 = v182[15];
  uint64_t v118 = &v84[v117];
  uint64_t v119 = &v85[v117];
  long long v120 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v121 = *((void *)v120 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v121 + 48))(v119, 1, v120))
  {
    uint64_t v122 = sub_63BAC(&qword_3CBD20);
    memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
  }
  else
  {
    uint64_t v175 = v121;
    uint64_t v176 = v90;
    uint64_t v123 = *((void *)v119 + 1);
    *(void *)uint64_t v118 = *(void *)v119;
    *((void *)v118 + 1) = v123;
    uint64_t v124 = v120[5];
    uint64_t v172 = &v119[v124];
    uint64_t v173 = &v118[v124];
    uint64_t v125 = sub_2DF5D0();
    uint64_t v126 = *(void *)(v125 - 8);
    uint64_t v127 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
    swift_bridgeObjectRetain();
    uint64_t v128 = v173;
    uint64_t v174 = v127;
    v127(v128, v172, v125);
    uint64_t v129 = v120[6];
    uint64_t v130 = &v118[v129];
    uint64_t v131 = &v119[v129];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(&v119[v129], 1, v125))
    {
      uint64_t v132 = sub_63BAC(&qword_3C97E8);
      memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
    }
    else
    {
      v174(v130, v131, v125);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v130, 0, 1, v125);
    }
    uint64_t v133 = v120[7];
    uint64_t v134 = &v118[v133];
    uint64_t v135 = &v119[v133];
    *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
    v134[16] = v135[16];
    v118[v120[8]] = v119[v120[8]];
    uint64_t v136 = v120[9];
    uint64_t v137 = &v118[v136];
    uint64_t v138 = &v119[v136];
    uint64_t v139 = sub_2E0F70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
    uint64_t v140 = v120[10];
    long long v141 = *(_OWORD *)&v119[v140 + 24];
    *(_OWORD *)&v118[v140 + 24] = v141;
    (**(void (***)(void))(v141 - 8))();
    uint64_t v142 = v120[11];
    uint64_t v143 = &v118[v142];
    uint64_t v144 = &v119[v142];
    uint64_t v94 = v182;
    if (v178(&v119[v142], 1, v176))
    {
      uint64_t v145 = sub_63BAC(&qword_3C7498);
      memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v143, v144, v176);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v143, 0, 1, v176);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v175 + 56))(v118, 0, 1, v120);
  }
  *(void *)&v84[v94[16]] = *(void *)&v85[v94[16]];
  uint64_t v146 = v94[17];
  uint64_t v147 = &v84[v146];
  uint64_t v148 = &v85[v146];
  uint64_t v149 = sub_2E0310();
  uint64_t v150 = *(void *)(v149 - 8);
  uint64_t v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
  swift_bridgeObjectRetain();
  if (v151(v148, 1, v149))
  {
    uint64_t v152 = sub_63BAC(&qword_3CBD28);
    memcpy(v147, v148, *(void *)(*(void *)(v152 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v147, v148, v149);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v149);
  }
  uint64_t v153 = v182[18];
  uint64_t v154 = &v84[v153];
  uint64_t v155 = &v85[v153];
  uint64_t v156 = *(void *)&v85[v153 + 24];
  if (v156)
  {
    uint64_t v157 = *((void *)v155 + 4);
    *((void *)v154 + 3) = v156;
    *((void *)v154 + 4) = v157;
    (**(void (***)(void))(v156 - 8))();
  }
  else
  {
    long long v158 = *((_OWORD *)v155 + 1);
    *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
    *((_OWORD *)v154 + 1) = v158;
    *((void *)v154 + 4) = *((void *)v155 + 4);
  }
  uint64_t v159 = v182[19];
  uint64_t v160 = &v84[v159];
  uint64_t v161 = &v85[v159];
  uint64_t v162 = sub_2DE320();
  uint64_t v163 = *(void *)(v162 - 8);
  uint64_t v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
  if (v164(v161, 1, v162))
  {
    uint64_t v165 = sub_63BAC(&qword_3CBC58);
    memcpy(v160, v161, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v160, v161, v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
  }
  uint64_t v166 = v179[23];
  *(void *)((char *)v181 + v179[22]) = *(void *)((char *)v180 + v179[22]);
  *(void *)((char *)v181 + v166) = *(void *)((char *)v180 + v166);
  uint64_t v167 = v179[24];
  uint64_t v168 = (char *)v181 + v167;
  uint64_t v169 = (char *)v180 + v167;
  swift_retain();
  if (v164(v169, 1, v162))
  {
    uint64_t v170 = sub_63BAC(&qword_3CBC58);
    memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v168, v169, v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v168, 0, 1, v162);
  }
  return v181;
}

char *assignWithCopy for ShelfView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C8180);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2E01B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    sub_662B4((uint64_t)&a1[v7], (uint64_t *)&unk_3D20F0);
    sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_2E0260();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))((char *)v8, (char *)v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    sub_662B4((uint64_t)&a1[v11], &qword_3C8318);
    sub_63BAC(&qword_3C8318);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2E1A10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))((char *)v12, (char *)v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  uint64_t v18 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  uint64_t v21 = sub_2E1050();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_17:
    uint64_t v26 = sub_63BAC(&qword_3CB370);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_18:
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_2E0890();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = sub_63BAC(&qword_3CBD08);
  *(void *)&v28[*(int *)(v31 + 28)] = *(void *)&v29[*(int *)(v31 + 28)];
  swift_retain();
  swift_release();
  uint64_t v32 = a3[9];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  LOBYTE(v29) = v34[8];
  sub_6EC64(*(void *)v34, (char)v29);
  uint64_t v36 = *(void *)v33;
  char v37 = v33[8];
  *(void *)uint64_t v33 = v35;
  v33[8] = (char)v29;
  sub_6EF10(v36, v37);
  uint64_t v38 = a3[10];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = *(void *)v40;
  LOBYTE(v29) = v40[8];
  sub_6EC64(*(void *)v40, (char)v29);
  uint64_t v42 = *(void *)v39;
  char v43 = v39[8];
  *(void *)uint64_t v39 = v41;
  v39[8] = (char)v29;
  sub_6EF10(v42, v43);
  uint64_t v44 = a3[11];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = *(void *)v46;
  LOBYTE(v29) = v46[8];
  sub_6EC64(*(void *)v46, (char)v29);
  uint64_t v48 = *(void *)v45;
  char v49 = v45[8];
  *(void *)uint64_t v45 = v47;
  v45[8] = (char)v29;
  sub_6EF10(v48, v49);
  uint64_t v50 = a3[12];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  LOBYTE(v29) = v52[8];
  sub_6EC64(*(void *)v52, (char)v29);
  uint64_t v54 = *(void *)v51;
  char v55 = v51[8];
  *(void *)uint64_t v51 = v53;
  v51[8] = (char)v29;
  sub_6EF10(v54, v55);
  uint64_t v56 = a3[13];
  char v57 = &a1[v56];
  long long v58 = &a2[v56];
  uint64_t v59 = *(void *)v58;
  LOBYTE(v29) = v58[8];
  sub_6EC64(*(void *)v58, (char)v29);
  uint64_t v60 = *(void *)v57;
  char v61 = v57[8];
  *(void *)char v57 = v59;
  v57[8] = (char)v29;
  sub_6EF10(v60, v61);
  if (a1 != a2)
  {
    uint64_t v62 = a3[14];
    char v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    sub_662B4((uint64_t)&a1[v62], &qword_3CBD10);
    sub_63BAC(&qword_3CBD10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v65 = sub_2E0E10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))((char *)v63, (char *)v64, v65);
    }
    else
    {
      *char v63 = *v64;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = a3[15];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    sub_662B4((uint64_t)&a1[v66], &qword_3C8300);
    if (v68[40])
    {
      uint64_t v69 = *((void *)v68 + 3);
      *((void *)v67 + 3) = v69;
      *((void *)v67 + 4) = *((void *)v68 + 4);
      (**(void (***)(char *, char *))(v69 - 8))(v67, v68);
      v67[40] = 1;
    }
    else
    {
      *(void *)uint64_t v67 = *(void *)v68;
      v67[40] = 0;
      swift_retain();
    }
  }
  uint64_t v70 = a3[16];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  id v73 = *(id *)v72;
  char v74 = v72[8];
  sub_C9A1C(*(id *)v72, v74);
  uint64_t v75 = *(void **)v71;
  char v76 = v71[8];
  *(void *)uint64_t v71 = v73;
  v71[8] = v74;
  sub_88154(v75, v76);
  if (a1 != a2)
  {
    uint64_t v77 = a3[17];
    uint64_t v78 = &a1[v77];
    uint64_t v79 = &a2[v77];
    sub_662B4((uint64_t)&a1[v77], &qword_3C82C8);
    sub_63BAC(&qword_3C82C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v80 = sub_2DE900();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))((char *)v78, (char *)v79, v80);
    }
    else
    {
      char *v78 = *v79;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = a3[18];
    unsigned __int8 v82 = &a1[v81];
    uint64_t v83 = &a2[v81];
    sub_662B4((uint64_t)&a1[v81], &qword_3C8308);
    if (v83[40])
    {
      uint64_t v84 = *((void *)v83 + 3);
      if (v84)
      {
        *((void *)v82 + 3) = v84;
        *((void *)v82 + 4) = *((void *)v83 + 4);
        (**(void (***)(char *, char *))(v84 - 8))(v82, v83);
      }
      else
      {
        long long v85 = *(_OWORD *)v83;
        long long v86 = *((_OWORD *)v83 + 1);
        *((void *)v82 + 4) = *((void *)v83 + 4);
        *(_OWORD *)unsigned __int8 v82 = v85;
        *((_OWORD *)v82 + 1) = v86;
      }
      v82[40] = 1;
    }
    else
    {
      *(void *)unsigned __int8 v82 = *(void *)v83;
      v82[40] = 0;
      swift_retain();
    }
  }
  uint64_t v87 = a3[19];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = sub_2DE110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 24))(v88, v89, v90);
  uint64_t v91 = a3[20];
  int v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  uint64_t v94 = *(void *)&a2[v91];
  LOBYTE(v89) = a2[v91 + 9];
  unsigned __int8 v95 = a2[v91 + 8];
  sub_12075C(v94, v95, (char)v89);
  uint64_t v96 = *(void *)v92;
  char v97 = v92[9];
  *(void *)int v92 = v94;
  uint64_t v98 = v92[8];
  v92[8] = v95;
  v92[9] = (char)v89;
  sub_881C4(v96, v98, v97);
  *((void *)v92 + 2) = *((void *)v93 + 2);
  uint64_t v233 = a3;
  uint64_t v99 = a3[21];
  uint64_t v235 = a1;
  uint64_t v100 = &a1[v99];
  uint64_t v101 = &a2[v99];
  *(void *)uint64_t v100 = *(void *)&a2[v99];
  *((void *)v100 + 1) = *(void *)&a2[v99 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v100[16] = v101[16];
  *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
  v100[40] = v101[40];
  uint64_t v236 = (int *)type metadata accessor for Shelf();
  uint64_t v102 = v236[8];
  uint64_t v103 = &v100[v102];
  uint64_t v104 = &v101[v102];
  uint64_t v105 = sub_2E3CC0();
  uint64_t v106 = *(void *)(v105 - 8);
  uint64_t v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48);
  LODWORD(v89) = v107(v103, 1, v105);
  uint64_t v231 = v107;
  int v108 = v107(v104, 1, v105);
  uint64_t v234 = a2;
  uint64_t v232 = v105;
  uint64_t v230 = v106;
  if (v89)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
LABEL_41:
    uint64_t v109 = sub_63BAC(&qword_3C7498);
    memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v106 + 24))(v103, v104, v105);
LABEL_42:
  char v110 = v235;
  uint64_t v111 = v236[9];
  uint64_t v112 = &v100[v111];
  uint64_t v113 = &v101[v111];
  uint64_t v114 = sub_2E13F0();
  uint64_t v115 = *(void *)(v114 - 8);
  long long v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  int v117 = v116(v112, 1, v114);
  int v118 = v116(v113, 1, v114);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v118)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v112, v114);
LABEL_47:
    uint64_t v119 = sub_63BAC(&qword_3CBC60);
    memcpy(v112, v113, *(void *)(*(void *)(v119 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v112, v113, v114);
LABEL_48:
  sub_6FA20((uint64_t *)&v100[v236[10]], (uint64_t *)&v101[v236[10]]);
  uint64_t v120 = v236[11];
  uint64_t v121 = &v100[v120];
  uint64_t v122 = &v101[v120];
  uint64_t v123 = sub_2DF630();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v125 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  int v126 = v125(v121, 1, v123);
  int v127 = v125(v122, 1, v123);
  if (v126)
  {
    if (!v127)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  if (v127)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v121, v123);
LABEL_53:
    uint64_t v128 = sub_63BAC(&qword_3CBD18);
    memcpy(v121, v122, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v121, v122, v123);
LABEL_54:
  uint64_t v129 = v236;
  uint64_t v130 = v236[12];
  uint64_t v131 = &v100[v130];
  uint64_t v132 = &v101[v130];
  uint64_t v133 = sub_2E0E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 24))(v131, v132, v133);
  sub_6FA20((uint64_t *)&v100[v129[13]], (uint64_t *)&v101[v129[13]]);
  sub_6FA20((uint64_t *)&v100[v129[14]], (uint64_t *)&v101[v129[14]]);
  uint64_t v134 = v236[15];
  uint64_t v135 = &v100[v134];
  uint64_t v136 = &v101[v134];
  uint64_t v137 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v138 = *((void *)v137 - 1);
  uint64_t v139 = *(uint64_t (**)(char *, uint64_t, int *))(v138 + 48);
  LODWORD(v131) = v139(v135, 1, v137);
  int v140 = v139(v136, 1, v137);
  if (!v131)
  {
    if (v140)
    {
      sub_1284EC((uint64_t)v135, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
      goto LABEL_60;
    }
    *(void *)uint64_t v135 = *(void *)v136;
    *((void *)v135 + 1) = *((void *)v136 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v153 = v137[5];
    uint64_t v154 = &v135[v153];
    uint64_t v155 = &v136[v153];
    uint64_t v156 = sub_2DF5D0();
    uint64_t v157 = *(void *)(v156 - 8);
    uint64_t v223 = *(void (**)(char *, char *, uint64_t))(v157 + 24);
    v223(v154, v155, v156);
    uint64_t v158 = v137[6];
    uint64_t v159 = &v136[v158];
    uint64_t v160 = *(uint64_t (**)(void))(v157 + 48);
    uint64_t v227 = &v135[v158];
    int v229 = v160();
    int v161 = ((uint64_t (*)(char *, uint64_t, uint64_t))v160)(v159, 1, v156);
    if (v229)
    {
      uint64_t v162 = v232;
      if (!v161)
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v227, v159, v156);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v227, 0, 1, v156);
        goto LABEL_107;
      }
      size_t v163 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v164 = v227;
    }
    else
    {
      uint64_t v162 = v232;
      if (!v161)
      {
        v223(v227, v159, v156);
        goto LABEL_107;
      }
      (*(void (**)(char *, uint64_t))(v157 + 8))(v227, v156);
      size_t v163 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v164 = v227;
    }
    memcpy(v164, v159, v163);
LABEL_107:
    uint64_t v211 = v137[7];
    uint64_t v212 = &v135[v211];
    v213 = &v136[v211];
    long long v214 = *(_OWORD *)v213;
    v212[16] = v213[16];
    *(_OWORD *)uint64_t v212 = v214;
    v135[v137[8]] = v136[v137[8]];
    uint64_t v215 = v137[9];
    uint64_t v216 = &v135[v215];
    uint64_t v217 = &v136[v215];
    uint64_t v218 = sub_2E0F70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 24))(v216, v217, v218);
    sub_6FA20((uint64_t *)&v135[v137[10]], (uint64_t *)&v136[v137[10]]);
    uint64_t v219 = v137[11];
    uint64_t v220 = &v135[v219];
    uint64_t v221 = &v136[v219];
    LODWORD(v216) = v231(v220, 1, v162);
    int v222 = v231(v221, 1, v162);
    if (v216)
    {
      char v110 = v235;
      if (!v222)
      {
        (*(void (**)(char *, char *, uint64_t))(v230 + 16))(v220, v221, v162);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v230 + 56))(v220, 0, 1, v162);
        goto LABEL_73;
      }
    }
    else
    {
      char v110 = v235;
      if (!v222)
      {
        (*(void (**)(char *, char *, uint64_t))(v230 + 24))(v220, v221, v162);
        goto LABEL_73;
      }
      (*(void (**)(char *, uint64_t))(v230 + 8))(v220, v162);
    }
    size_t v150 = *(void *)(*(void *)(sub_63BAC(&qword_3C7498) - 8) + 64);
    uint64_t v151 = v220;
    uint64_t v152 = v221;
LABEL_61:
    memcpy(v151, v152, v150);
    goto LABEL_73;
  }
  if (v140)
  {
LABEL_60:
    size_t v150 = *(void *)(*(void *)(sub_63BAC(&qword_3CBD20) - 8) + 64);
    uint64_t v151 = v135;
    uint64_t v152 = v136;
    goto LABEL_61;
  }
  *(void *)uint64_t v135 = *(void *)v136;
  *((void *)v135 + 1) = *((void *)v136 + 1);
  uint64_t v141 = v137[5];
  uint64_t v225 = &v135[v141];
  uint64_t v228 = v138;
  __src = &v136[v141];
  uint64_t v142 = sub_2DF5D0();
  uint64_t v143 = *(void *)(v142 - 8);
  uint64_t v144 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  swift_bridgeObjectRetain();
  uint64_t v145 = v225;
  uint64_t v226 = v144;
  v144(v145, __src, v142);
  uint64_t v146 = v137[6];
  uint64_t v147 = &v135[v146];
  uint64_t v148 = &v136[v146];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(&v136[v146], 1, v142))
  {
    uint64_t v149 = sub_63BAC(&qword_3C97E8);
    memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
  }
  else
  {
    v226(v147, v148, v142);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v147, 0, 1, v142);
  }
  uint64_t v165 = v137[7];
  uint64_t v166 = &v135[v165];
  uint64_t v167 = &v136[v165];
  long long v168 = *(_OWORD *)v167;
  v166[16] = v167[16];
  *(_OWORD *)uint64_t v166 = v168;
  v135[v137[8]] = v136[v137[8]];
  uint64_t v169 = v137[9];
  uint64_t v170 = &v135[v169];
  uint64_t v171 = &v136[v169];
  uint64_t v172 = sub_2E0F70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
  uint64_t v173 = v137[10];
  uint64_t v174 = &v135[v173];
  uint64_t v175 = *(void *)&v136[v173 + 24];
  *((void *)v174 + 3) = v175;
  *((void *)v174 + 4) = *(void *)&v136[v173 + 32];
  (**(void (***)(void))(v175 - 8))();
  uint64_t v176 = v137[11];
  uint64_t v177 = &v135[v176];
  uint64_t v178 = &v136[v176];
  char v110 = v235;
  if (v231(&v136[v176], 1, v232))
  {
    uint64_t v179 = sub_63BAC(&qword_3C7498);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v230 + 16))(v177, v178, v232);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v230 + 56))(v177, 0, 1, v232);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v228 + 56))(v135, 0, 1, v137);
LABEL_73:
  *(void *)&v100[v236[16]] = *(void *)&v101[v236[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v180 = v236[17];
  uint64_t v181 = &v100[v180];
  uint64_t v182 = &v101[v180];
  uint64_t v183 = sub_2E0310();
  uint64_t v184 = *(void *)(v183 - 8);
  uint64_t v185 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v184 + 48);
  int v186 = v185(v181, 1, v183);
  int v187 = v185(v182, 1, v183);
  if (v186)
  {
    if (!v187)
    {
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v181, v182, v183);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v181, 0, 1, v183);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v187)
  {
    (*(void (**)(char *, uint64_t))(v184 + 8))(v181, v183);
LABEL_78:
    uint64_t v188 = sub_63BAC(&qword_3CBD28);
    memcpy(v181, v182, *(void *)(*(void *)(v188 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v184 + 24))(v181, v182, v183);
LABEL_79:
  uint64_t v189 = v236[18];
  uint64_t v190 = (uint64_t)&v100[v189];
  unint64_t v191 = &v101[v189];
  uint64_t v192 = *(void *)&v101[v189 + 24];
  if (*(void *)&v100[v189 + 24])
  {
    if (v192)
    {
      sub_6FA20((uint64_t *)v190, (uint64_t *)v191);
      goto LABEL_86;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v190);
  }
  else if (v192)
  {
    *(void *)(v190 + 24) = v192;
    *(void *)(v190 + 32) = *((void *)v191 + 4);
    (**(void (***)(uint64_t, char *))(v192 - 8))(v190, v191);
    goto LABEL_86;
  }
  long long v193 = *(_OWORD *)v191;
  long long v194 = *((_OWORD *)v191 + 1);
  *(void *)(v190 + 32) = *((void *)v191 + 4);
  *(_OWORD *)uint64_t v190 = v193;
  *(_OWORD *)(v190 + 16) = v194;
LABEL_86:
  uint64_t v195 = v236[19];
  uint64_t v196 = &v100[v195];
  uint64_t v197 = &v101[v195];
  uint64_t v198 = sub_2DE320();
  uint64_t v199 = *(void *)(v198 - 8);
  uint64_t v200 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v199 + 48);
  int v201 = v200(v196, 1, v198);
  int v202 = v200(v197, 1, v198);
  if (v201)
  {
    if (!v202)
    {
      (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v196, v197, v198);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v196, 0, 1, v198);
      goto LABEL_92;
    }
    goto LABEL_91;
  }
  if (v202)
  {
    (*(void (**)(char *, uint64_t))(v199 + 8))(v196, v198);
LABEL_91:
    uint64_t v203 = sub_63BAC(&qword_3CBC58);
    memcpy(v196, v197, *(void *)(*(void *)(v203 - 8) + 64));
    goto LABEL_92;
  }
  (*(void (**)(char *, char *, uint64_t))(v199 + 24))(v196, v197, v198);
LABEL_92:
  *(void *)&v110[v233[22]] = *(void *)((char *)v234 + v233[22]);
  *(void *)&v110[v233[23]] = *(void *)((char *)v234 + v233[23]);
  swift_retain();
  swift_release();
  uint64_t v204 = v233[24];
  uint64_t v205 = &v110[v204];
  uint64_t v206 = (char *)v234 + v204;
  int v207 = v200(&v110[v204], 1, v198);
  int v208 = v200(v206, 1, v198);
  if (!v207)
  {
    if (!v208)
    {
      (*(void (**)(char *, char *, uint64_t))(v199 + 24))(v205, v206, v198);
      return v110;
    }
    (*(void (**)(char *, uint64_t))(v199 + 8))(v205, v198);
    goto LABEL_97;
  }
  if (v208)
  {
LABEL_97:
    uint64_t v209 = sub_63BAC(&qword_3CBC58);
    memcpy(v205, v206, *(void *)(*(void *)(v209 - 8) + 64));
    return v110;
  }
  (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v205, v206, v198);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v205, 0, 1, v198);
  return v110;
}

char *initializeWithTake for ShelfView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2E01B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_2E0260();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_63BAC(&qword_3C8318);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_2E1A10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 8];
  *(void *)uint64_t v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = v21;
  uint64_t v22 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v23 = &v19[v22];
  int v24 = &v20[v22];
  uint64_t v25 = sub_2E1050();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_63BAC(&qword_3CB370);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = sub_2E0890();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = sub_63BAC(&qword_3CBD08);
  *(void *)&v29[*(int *)(v32 + 28)] = *(void *)&v30[*(int *)(v32 + 28)];
  uint64_t v33 = a3[9];
  uint64_t v34 = a3[10];
  uint64_t v35 = &a1[v33];
  uint64_t v36 = &a2[v33];
  v35[8] = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  char v37 = &a1[v34];
  uint64_t v38 = &a2[v34];
  v37[8] = v38[8];
  *(void *)char v37 = *(void *)v38;
  uint64_t v39 = a3[11];
  uint64_t v40 = a3[12];
  uint64_t v41 = &a1[v39];
  uint64_t v42 = &a2[v39];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  char v43 = &a1[v40];
  uint64_t v44 = &a2[v40];
  *(void *)char v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = a3[13];
  uint64_t v46 = a3[14];
  uint64_t v47 = &a1[v45];
  uint64_t v48 = &a2[v45];
  v47[8] = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  char v49 = &a1[v46];
  uint64_t v50 = &a2[v46];
  uint64_t v51 = sub_63BAC(&qword_3CBD10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = sub_2E0E10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v49, v50, v52);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  uint64_t v53 = a3[15];
  uint64_t v54 = a3[16];
  char v55 = &a1[v53];
  uint64_t v56 = &a2[v53];
  long long v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)char v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *(_OWORD *)(v55 + 25) = *(_OWORD *)(v56 + 25);
  long long v58 = &a1[v54];
  uint64_t v59 = &a2[v54];
  v58[8] = v59[8];
  *(void *)long long v58 = *(void *)v59;
  uint64_t v60 = a3[17];
  char v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = sub_63BAC(&qword_3C82C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v64 = sub_2DE900();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  uint64_t v65 = a3[18];
  uint64_t v66 = a3[19];
  uint64_t v67 = &a1[v65];
  uint64_t v68 = &a2[v65];
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *(_OWORD *)(v67 + 25) = *(_OWORD *)(v68 + 25);
  uint64_t v70 = &a1[v66];
  uint64_t v71 = &a2[v66];
  uint64_t v72 = sub_2DE110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
  uint64_t v73 = a3[20];
  uint64_t v74 = a3[21];
  uint64_t v75 = &a1[v73];
  char v76 = &a2[v73];
  *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
  *((void *)v75 + 2) = *((void *)v76 + 2);
  uint64_t v172 = a1;
  uint64_t v77 = &a1[v74];
  uint64_t v78 = &a2[v74];
  *(_OWORD *)uint64_t v77 = *(_OWORD *)&a2[v74];
  v77[16] = a2[v74 + 16];
  *(_OWORD *)(v77 + 24) = *(_OWORD *)&a2[v74 + 24];
  char v77[40] = a2[v74 + 40];
  uint64_t v79 = (int *)type metadata accessor for Shelf();
  uint64_t v80 = v79[8];
  uint64_t v81 = &v77[v80];
  unsigned __int8 v82 = &v78[v80];
  uint64_t v83 = sub_2E3CC0();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
  uint64_t v171 = a3;
  uint64_t v169 = v84;
  if (v170(v82, 1, v83))
  {
    uint64_t v85 = sub_63BAC(&qword_3C7498);
    memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  }
  uint64_t v86 = v79[9];
  uint64_t v87 = &v77[v86];
  uint64_t v88 = &v78[v86];
  uint64_t v89 = sub_2E13F0();
  uint64_t v90 = *(void *)(v89 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
  {
    uint64_t v91 = sub_63BAC(&qword_3CBC60);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v88, v89);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
  }
  uint64_t v92 = v79[10];
  uint64_t v93 = &v77[v92];
  uint64_t v94 = &v78[v92];
  long long v95 = *((_OWORD *)v94 + 1);
  *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  *((_OWORD *)v93 + 1) = v95;
  *((void *)v93 + 4) = *((void *)v94 + 4);
  uint64_t v96 = v79[11];
  char v97 = &v77[v96];
  uint64_t v98 = &v78[v96];
  uint64_t v99 = sub_2DF630();
  uint64_t v100 = *(void *)(v99 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
  {
    uint64_t v101 = sub_63BAC(&qword_3CBD18);
    memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
  }
  uint64_t v102 = v79[12];
  uint64_t v103 = &v77[v102];
  uint64_t v104 = &v78[v102];
  uint64_t v105 = sub_2E0E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
  uint64_t v106 = v79[13];
  uint64_t v107 = &v77[v106];
  int v108 = &v78[v106];
  long long v109 = *((_OWORD *)v108 + 1);
  *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
  *((_OWORD *)v107 + 1) = v109;
  *((void *)v107 + 4) = *((void *)v108 + 4);
  uint64_t v110 = v79[14];
  uint64_t v111 = &v77[v110];
  uint64_t v112 = &v78[v110];
  long long v113 = *((_OWORD *)v112 + 1);
  *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
  *((_OWORD *)v111 + 1) = v113;
  *((void *)v111 + 4) = *((void *)v112 + 4);
  uint64_t v114 = v79[15];
  uint64_t v115 = &v77[v114];
  long long v116 = &v78[v114];
  int v117 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v118 = *((void *)v117 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v118 + 48))(v116, 1, v117))
  {
    uint64_t v119 = sub_63BAC(&qword_3CBD20);
    memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    uint64_t v166 = v83;
    *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
    uint64_t v120 = v117[5];
    __dsta = &v115[v120];
    __srca = &v116[v120];
    uint64_t v121 = sub_2DF5D0();
    uint64_t v122 = *(void *)(v121 - 8);
    size_t v163 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
    v163(__dsta, __srca, v121);
    uint64_t v123 = v117[6];
    __dst = &v115[v123];
    __src = &v116[v123];
    if ((*(unsigned int (**)(void))(v122 + 48))())
    {
      uint64_t v124 = sub_63BAC(&qword_3C97E8);
      memcpy(__dst, __src, *(void *)(*(void *)(v124 - 8) + 64));
    }
    else
    {
      v163(__dst, __src, v121);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(__dst, 0, 1, v121);
    }
    uint64_t v125 = v117[7];
    int v126 = &v115[v125];
    int v127 = &v116[v125];
    *(_OWORD *)int v126 = *(_OWORD *)v127;
    v126[16] = v127[16];
    v115[v117[8]] = v116[v117[8]];
    uint64_t v128 = v117[9];
    uint64_t v129 = &v115[v128];
    uint64_t v130 = &v116[v128];
    uint64_t v131 = sub_2E0F70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
    uint64_t v132 = v117[10];
    uint64_t v133 = &v115[v132];
    uint64_t v134 = &v116[v132];
    long long v135 = *((_OWORD *)v134 + 1);
    *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
    *((_OWORD *)v133 + 1) = v135;
    *((void *)v133 + 4) = *((void *)v134 + 4);
    uint64_t v136 = v117[11];
    uint64_t v137 = &v115[v136];
    uint64_t v138 = &v116[v136];
    if (v170(&v116[v136], 1, v166))
    {
      uint64_t v139 = sub_63BAC(&qword_3C7498);
      memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v137, v138, v166);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v137, 0, 1, v166);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v118 + 56))(v115, 0, 1, v117);
  }
  *(void *)&v77[v79[16]] = *(void *)&v78[v79[16]];
  uint64_t v140 = v79[17];
  uint64_t v141 = &v77[v140];
  uint64_t v142 = &v78[v140];
  uint64_t v143 = sub_2E0310();
  uint64_t v144 = *(void *)(v143 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
  {
    uint64_t v145 = sub_63BAC(&qword_3CBD28);
    memcpy(v141, v142, *(void *)(*(void *)(v145 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v141, v142, v143);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
  }
  uint64_t v146 = v79[18];
  uint64_t v147 = &v77[v146];
  uint64_t v148 = &v78[v146];
  long long v149 = *((_OWORD *)v148 + 1);
  *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
  *((_OWORD *)v147 + 1) = v149;
  *((void *)v147 + 4) = *((void *)v148 + 4);
  uint64_t v150 = v79[19];
  uint64_t v151 = &v77[v150];
  uint64_t v152 = &v78[v150];
  uint64_t v153 = sub_2DE320();
  uint64_t v154 = *(void *)(v153 - 8);
  uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
  if (v155(v152, 1, v153))
  {
    uint64_t v156 = sub_63BAC(&qword_3CBC58);
    memcpy(v151, v152, *(void *)(*(void *)(v156 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v151, v152, v153);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
  }
  uint64_t v157 = v171[23];
  *(void *)&v172[v171[22]] = *(void *)&a2[v171[22]];
  *(void *)&v172[v157] = *(void *)&a2[v157];
  uint64_t v158 = v171[24];
  uint64_t v159 = &v172[v158];
  uint64_t v160 = &a2[v158];
  if (v155(v160, 1, v153))
  {
    uint64_t v161 = sub_63BAC(&qword_3CBC58);
    memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v159, v160, v153);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v159, 0, 1, v153);
  }
  return v172;
}

char *assignWithTake for ShelfView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C8180);
    uint64_t v6 = sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2E01B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_662B4((uint64_t)&a1[v8], (uint64_t *)&unk_3D20F0);
    uint64_t v11 = sub_63BAC((uint64_t *)&unk_3D20F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2E0260();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_662B4((uint64_t)&a1[v13], &qword_3C8318);
    uint64_t v16 = sub_63BAC(&qword_3C8318);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_2E1A10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_release();
  uint64_t v21 = *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v22 = &v19[v21];
  uint64_t v23 = &v20[v21];
  uint64_t v24 = sub_2E1050();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_16:
    uint64_t v29 = sub_63BAC(&qword_3CB370);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_17:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_2E0890();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = sub_63BAC(&qword_3CBD08);
  *(void *)&v31[*(int *)(v34 + 28)] = *(void *)&v32[*(int *)(v34 + 28)];
  swift_release();
  uint64_t v35 = a3[9];
  uint64_t v36 = &a1[v35];
  char v37 = &a2[v35];
  uint64_t v38 = *(void *)v37;
  LOBYTE(v37) = v37[8];
  uint64_t v39 = *(void *)v36;
  char v40 = v36[8];
  *(void *)uint64_t v36 = v38;
  v36[8] = (char)v37;
  sub_6EF10(v39, v40);
  uint64_t v41 = a3[10];
  uint64_t v42 = &a1[v41];
  char v43 = &a2[v41];
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void *)v42;
  char v46 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  sub_6EF10(v45, v46);
  uint64_t v47 = a3[11];
  uint64_t v48 = &a1[v47];
  char v49 = &a2[v47];
  uint64_t v50 = *(void *)v49;
  LOBYTE(v49) = v49[8];
  uint64_t v51 = *(void *)v48;
  char v52 = v48[8];
  *(void *)uint64_t v48 = v50;
  v48[8] = (char)v49;
  sub_6EF10(v51, v52);
  uint64_t v53 = a3[12];
  uint64_t v54 = &a1[v53];
  char v55 = &a2[v53];
  uint64_t v56 = *(void *)v55;
  LOBYTE(v55) = v55[8];
  uint64_t v57 = *(void *)v54;
  char v58 = v54[8];
  *(void *)uint64_t v54 = v56;
  v54[8] = (char)v55;
  sub_6EF10(v57, v58);
  uint64_t v59 = a3[13];
  uint64_t v60 = &a1[v59];
  char v61 = &a2[v59];
  uint64_t v62 = *(void *)v61;
  LOBYTE(v61) = v61[8];
  uint64_t v63 = *(void *)v60;
  char v64 = v60[8];
  *(void *)uint64_t v60 = v62;
  v60[8] = (char)v61;
  sub_6EF10(v63, v64);
  if (a1 != a2)
  {
    uint64_t v65 = a3[14];
    uint64_t v66 = &a1[v65];
    uint64_t v67 = &a2[v65];
    sub_662B4((uint64_t)&a1[v65], &qword_3CBD10);
    uint64_t v68 = sub_63BAC(&qword_3CBD10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v69 = sub_2E0E10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v66, v67, v69);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    uint64_t v70 = a3[15];
    uint64_t v71 = &a2[v70];
    uint64_t v72 = &a1[v70];
    sub_662B4((uint64_t)&a1[v70], &qword_3C8300);
    long long v73 = *((_OWORD *)v71 + 1);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v71;
    *((_OWORD *)v72 + 1) = v73;
    *(_OWORD *)(v72 + 25) = *(_OWORD *)(v71 + 25);
  }
  uint64_t v74 = a3[16];
  uint64_t v75 = &a1[v74];
  char v76 = &a2[v74];
  uint64_t v77 = *(void *)v76;
  LOBYTE(v76) = v76[8];
  uint64_t v78 = *(void **)v75;
  char v79 = v75[8];
  *(void *)uint64_t v75 = v77;
  v75[8] = (char)v76;
  sub_88154(v78, v79);
  if (a1 != a2)
  {
    uint64_t v80 = a3[17];
    uint64_t v81 = &a1[v80];
    unsigned __int8 v82 = &a2[v80];
    sub_662B4((uint64_t)&a1[v80], &qword_3C82C8);
    uint64_t v83 = sub_63BAC(&qword_3C82C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v84 = sub_2DE900();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v81, v82, v84);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    uint64_t v85 = a3[18];
    uint64_t v86 = &a2[v85];
    uint64_t v87 = &a1[v85];
    sub_662B4((uint64_t)&a1[v85], &qword_3C8308);
    long long v88 = *((_OWORD *)v86 + 1);
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v86;
    *((_OWORD *)v87 + 1) = v88;
    *(_OWORD *)(v87 + 25) = *(_OWORD *)(v86 + 25);
  }
  uint64_t v89 = a3[19];
  uint64_t v90 = &a1[v89];
  uint64_t v91 = &a2[v89];
  uint64_t v92 = sub_2DE110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
  uint64_t v93 = a3[20];
  uint64_t v94 = &a1[v93];
  long long v95 = &a2[v93];
  char v96 = a2[v93 + 8];
  char v97 = a2[v93 + 9];
  uint64_t v98 = *(void *)&a1[v93];
  char v99 = a1[v93 + 9];
  *(void *)uint64_t v94 = *(void *)&a2[v93];
  uint64_t v100 = a1[v93 + 8];
  v94[8] = v96;
  v94[9] = v97;
  sub_881C4(v98, v100, v99);
  *((void *)v94 + 2) = *((void *)v95 + 2);
  uint64_t v101 = a3[21];
  uint64_t v248 = a1;
  uint64_t v102 = &a1[v101];
  uint64_t v103 = &a2[v101];
  uint64_t v104 = *(void *)&a2[v101 + 8];
  *(void *)uint64_t v102 = *(void *)&a2[v101];
  *((void *)v102 + 1) = v104;
  swift_bridgeObjectRelease();
  v102[16] = v103[16];
  *(_OWORD *)(v102 + 24) = *(_OWORD *)(v103 + 24);
  v102[40] = v103[40];
  uint64_t v249 = (int *)type metadata accessor for Shelf();
  uint64_t v105 = v249[8];
  uint64_t v106 = &v102[v105];
  uint64_t v247 = v103;
  uint64_t v107 = &v103[v105];
  uint64_t v108 = sub_2E3CC0();
  uint64_t v109 = *(void *)(v108 - 8);
  uint64_t v110 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
  LODWORD(v91) = v110(v106, 1, v108);
  uint64_t v243 = v110;
  int v111 = v110(v107, 1, v108);
  uint64_t v245 = a3;
  uint64_t v246 = a2;
  uint64_t v244 = v108;
  uint64_t v242 = v109;
  if (v91)
  {
    if (!v111)
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v106, v107, v108);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v111)
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v106, v108);
LABEL_32:
    uint64_t v112 = sub_63BAC(&qword_3C7498);
    memcpy(v106, v107, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v109 + 40))(v106, v107, v108);
LABEL_33:
  uint64_t v114 = v247;
  long long v113 = v248;
  uint64_t v115 = v249[9];
  long long v116 = &v102[v115];
  int v117 = &v247[v115];
  uint64_t v118 = sub_2E13F0();
  uint64_t v119 = *(void *)(v118 - 8);
  uint64_t v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
  int v121 = v120(v116, 1, v118);
  int v122 = v120(v117, 1, v118);
  if (v121)
  {
    if (!v122)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v116, v117, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v122)
  {
    (*(void (**)(char *, uint64_t))(v119 + 8))(v116, v118);
LABEL_38:
    uint64_t v123 = sub_63BAC(&qword_3CBC60);
    memcpy(v116, v117, *(void *)(*(void *)(v123 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v116, v117, v118);
LABEL_39:
  uint64_t v124 = v249[10];
  uint64_t v125 = &v102[v124];
  int v126 = &v247[v124];
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v102[v124]);
  long long v127 = *((_OWORD *)v126 + 1);
  *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
  *((_OWORD *)v125 + 1) = v127;
  *((void *)v125 + 4) = *((void *)v126 + 4);
  uint64_t v128 = v249[11];
  uint64_t v129 = &v102[v128];
  uint64_t v130 = &v247[v128];
  uint64_t v131 = sub_2DF630();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 48);
  LODWORD(v125) = v133(v129, 1, v131);
  int v134 = v133(v130, 1, v131);
  if (v125)
  {
    if (!v134)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v129, v130, v131);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v134)
  {
    (*(void (**)(char *, uint64_t))(v132 + 8))(v129, v131);
LABEL_44:
    uint64_t v135 = sub_63BAC(&qword_3CBD18);
    memcpy(v129, v130, *(void *)(*(void *)(v135 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v132 + 40))(v129, v130, v131);
LABEL_45:
  uint64_t v136 = v249[12];
  uint64_t v137 = &v102[v136];
  uint64_t v138 = &v247[v136];
  uint64_t v139 = sub_2E0E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 40))(v137, v138, v139);
  uint64_t v140 = v249[13];
  uint64_t v141 = &v102[v140];
  uint64_t v142 = &v247[v140];
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v102[v140]);
  long long v143 = *((_OWORD *)v142 + 1);
  *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
  *((_OWORD *)v141 + 1) = v143;
  *((void *)v141 + 4) = *((void *)v142 + 4);
  uint64_t v144 = v249[14];
  uint64_t v145 = &v102[v144];
  uint64_t v146 = &v247[v144];
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v102[v144]);
  long long v147 = *((_OWORD *)v146 + 1);
  *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
  *((_OWORD *)v145 + 1) = v147;
  *((void *)v145 + 4) = *((void *)v146 + 4);
  uint64_t v148 = v249[15];
  long long v149 = &v102[v148];
  uint64_t v150 = &v247[v148];
  uint64_t v151 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v152 = *((void *)v151 - 1);
  uint64_t v153 = *(uint64_t (**)(char *, uint64_t, int *))(v152 + 48);
  LODWORD(v145) = v153(v149, 1, v151);
  int v154 = v153(v150, 1, v151);
  if (!v145)
  {
    if (v154)
    {
      sub_1284EC((uint64_t)v149, (uint64_t (*)(void))type metadata accessor for ContentUnavailableComponentModel);
      goto LABEL_51;
    }
    uint64_t v167 = *((void *)v150 + 1);
    *(void *)long long v149 = *(void *)v150;
    *((void *)v149 + 1) = v167;
    swift_bridgeObjectRelease();
    uint64_t v168 = v151[5];
    uint64_t v169 = &v149[v168];
    uint64_t v170 = &v150[v168];
    uint64_t v171 = sub_2DF5D0();
    uint64_t v172 = *(void *)(v171 - 8);
    uint64_t v239 = *(void (**)(char *, char *, uint64_t))(v172 + 40);
    v239(v169, v170, v171);
    uint64_t v173 = v151[6];
    uint64_t v174 = &v150[v173];
    uint64_t v240 = &v149[v173];
    uint64_t v175 = *(uint64_t (**)(void))(v172 + 48);
    LODWORD(v169) = v175();
    int v176 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v174, 1, v171);
    if (v169)
    {
      if (!v176)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v240, v174, v171);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v240, 0, 1, v171);
        goto LABEL_94;
      }
      size_t v177 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v178 = v240;
    }
    else
    {
      if (!v176)
      {
        v239(v240, v174, v171);
        goto LABEL_94;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v240, v171);
      size_t v177 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v178 = v240;
    }
    memcpy(v178, v174, v177);
LABEL_94:
    uint64_t v224 = v151[7];
    uint64_t v225 = &v149[v224];
    uint64_t v226 = &v150[v224];
    *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
    v225[16] = v226[16];
    v149[v151[8]] = v150[v151[8]];
    uint64_t v227 = v151[9];
    uint64_t v228 = &v149[v227];
    int v229 = &v150[v227];
    uint64_t v230 = sub_2E0F70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 40))(v228, v229, v230);
    uint64_t v231 = v151[10];
    uint64_t v232 = &v149[v231];
    uint64_t v233 = &v150[v231];
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v149[v231]);
    long long v234 = *((_OWORD *)v233 + 1);
    *(_OWORD *)uint64_t v232 = *(_OWORD *)v233;
    *((_OWORD *)v232 + 1) = v234;
    *((void *)v232 + 4) = *((void *)v233 + 4);
    uint64_t v235 = v151[11];
    uint64_t v236 = &v149[v235];
    uint64_t v237 = &v150[v235];
    LODWORD(v232) = v243(v236, 1, v244);
    int v238 = v243(v237, 1, v244);
    if (v232)
    {
      uint64_t v114 = v247;
      long long v113 = v248;
      if (!v238)
      {
        (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v236, v237, v244);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v236, 0, 1, v244);
        goto LABEL_65;
      }
    }
    else
    {
      uint64_t v114 = v247;
      long long v113 = v248;
      if (!v238)
      {
        (*(void (**)(char *, char *, uint64_t))(v242 + 40))(v236, v237, v244);
        goto LABEL_65;
      }
      (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    }
    size_t v164 = *(void *)(*(void *)(sub_63BAC(&qword_3C7498) - 8) + 64);
    uint64_t v165 = v236;
    uint64_t v166 = v237;
LABEL_52:
    memcpy(v165, v166, v164);
    goto LABEL_65;
  }
  if (v154)
  {
LABEL_51:
    size_t v164 = *(void *)(*(void *)(sub_63BAC(&qword_3CBD20) - 8) + 64);
    uint64_t v165 = v149;
    uint64_t v166 = v150;
    goto LABEL_52;
  }
  *(_OWORD *)long long v149 = *(_OWORD *)v150;
  uint64_t v155 = v151[5];
  uint64_t v156 = &v149[v155];
  uint64_t v157 = &v150[v155];
  uint64_t v158 = sub_2DF5D0();
  uint64_t v159 = *(void *)(v158 - 8);
  __src = *(void (**)(char *, char *, uint64_t))(v159 + 32);
  __src(v156, v157, v158);
  uint64_t v160 = v151[6];
  uint64_t v161 = &v149[v160];
  uint64_t v162 = &v150[v160];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(&v150[v160], 1, v158))
  {
    uint64_t v163 = sub_63BAC(&qword_3C97E8);
    memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
  }
  else
  {
    __src(v161, v162, v158);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(v161, 0, 1, v158);
  }
  uint64_t v179 = v151[7];
  uint64_t v180 = &v149[v179];
  uint64_t v181 = &v150[v179];
  *(_OWORD *)uint64_t v180 = *(_OWORD *)v181;
  v180[16] = v181[16];
  v149[v151[8]] = v150[v151[8]];
  uint64_t v182 = v151[9];
  uint64_t v183 = &v149[v182];
  uint64_t v184 = &v150[v182];
  uint64_t v185 = sub_2E0F70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v183, v184, v185);
  uint64_t v186 = v151[10];
  int v187 = &v149[v186];
  uint64_t v188 = &v150[v186];
  long long v189 = *((_OWORD *)v188 + 1);
  *(_OWORD *)int v187 = *(_OWORD *)v188;
  *((_OWORD *)v187 + 1) = v189;
  *((void *)v187 + 4) = *((void *)v188 + 4);
  uint64_t v190 = v151[11];
  unint64_t v191 = &v149[v190];
  uint64_t v192 = &v150[v190];
  long long v113 = v248;
  if (v243(&v150[v190], 1, v244))
  {
    uint64_t v193 = sub_63BAC(&qword_3C7498);
    memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v191, v192, v244);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v191, 0, 1, v244);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v152 + 56))(v149, 0, 1, v151);
LABEL_65:
  *(void *)&v102[v249[16]] = *(void *)&v114[v249[16]];
  swift_bridgeObjectRelease();
  uint64_t v194 = v249[17];
  uint64_t v195 = &v102[v194];
  uint64_t v196 = &v114[v194];
  uint64_t v197 = sub_2E0310();
  uint64_t v198 = *(void *)(v197 - 8);
  uint64_t v199 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v198 + 48);
  int v200 = v199(v195, 1, v197);
  int v201 = v199(v196, 1, v197);
  if (v200)
  {
    if (!v201)
    {
      (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v195, v196, v197);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  if (v201)
  {
    (*(void (**)(char *, uint64_t))(v198 + 8))(v195, v197);
LABEL_70:
    uint64_t v202 = sub_63BAC(&qword_3CBD28);
    memcpy(v195, v196, *(void *)(*(void *)(v202 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(char *, char *, uint64_t))(v198 + 40))(v195, v196, v197);
LABEL_71:
  uint64_t v203 = v249[18];
  uint64_t v204 = (uint64_t)&v102[v203];
  uint64_t v205 = &v114[v203];
  if (*(void *)&v102[v203 + 24]) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v204);
  }
  long long v206 = *((_OWORD *)v205 + 1);
  *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
  *(_OWORD *)(v204 + 16) = v206;
  *(void *)(v204 + 32) = *((void *)v205 + 4);
  uint64_t v207 = v249[19];
  int v208 = &v102[v207];
  uint64_t v209 = &v114[v207];
  uint64_t v210 = sub_2DE320();
  uint64_t v211 = *(void *)(v210 - 8);
  uint64_t v212 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48);
  int v213 = v212(v208, 1, v210);
  int v214 = v212(v209, 1, v210);
  if (v213)
  {
    if (!v214)
    {
      (*(void (**)(char *, char *, uint64_t))(v211 + 32))(v208, v209, v210);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v208, 0, 1, v210);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v214)
  {
    (*(void (**)(char *, uint64_t))(v211 + 8))(v208, v210);
LABEL_78:
    uint64_t v215 = sub_63BAC(&qword_3CBC58);
    memcpy(v208, v209, *(void *)(*(void *)(v215 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v211 + 40))(v208, v209, v210);
LABEL_79:
  uint64_t v216 = v245[23];
  *(void *)&v113[v245[22]] = *(void *)&v246[v245[22]];
  *(void *)&v113[v216] = *(void *)&v246[v216];
  swift_release();
  uint64_t v217 = v245[24];
  uint64_t v218 = &v113[v217];
  uint64_t v219 = &v246[v217];
  int v220 = v212(&v113[v217], 1, v210);
  int v221 = v212(v219, 1, v210);
  if (!v220)
  {
    if (!v221)
    {
      (*(void (**)(char *, char *, uint64_t))(v211 + 40))(v218, v219, v210);
      return v113;
    }
    (*(void (**)(char *, uint64_t))(v211 + 8))(v218, v210);
    goto LABEL_84;
  }
  if (v221)
  {
LABEL_84:
    uint64_t v222 = sub_63BAC(&qword_3CBC58);
    memcpy(v218, v219, *(void *)(*(void *)(v222 - 8) + 64));
    return v113;
  }
  (*(void (**)(char *, char *, uint64_t))(v211 + 32))(v218, v219, v210);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v218, 0, 1, v210);
  return v113;
}

uint64_t getEnumTagSinglePayload for ShelfView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_126028);
}

uint64_t sub_126028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C81D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_63BAC(&qword_3C74A8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  uint64_t v14 = sub_63BAC(&qword_3C95E8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  uint64_t v15 = sub_63BAC(&qword_3CB368);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  uint64_t v16 = sub_63BAC(&qword_3CBD08);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  uint64_t v17 = sub_63BAC(&qword_3CBD30);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_19;
  }
  uint64_t v18 = sub_63BAC(&qword_3CBD38);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_19;
  }
  uint64_t v19 = sub_2DE110();
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[19];
    goto LABEL_19;
  }
  uint64_t v20 = type metadata accessor for Shelf();
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[21];
    goto LABEL_19;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v22 = *(void *)(a1 + a3[23]);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    return (v22 + 1);
  }
  else
  {
    uint64_t v23 = sub_63BAC(&qword_3CBC58);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
    uint64_t v25 = v23;
    uint64_t v26 = a1 + a3[24];
    return v24(v26, a2, v25);
  }
}

uint64_t storeEnumTagSinglePayload for ShelfView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1263F0);
}

uint64_t sub_1263F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_63BAC(&qword_3C81D0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_63BAC(&qword_3C74A8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  uint64_t v16 = sub_63BAC(&qword_3C95E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  uint64_t v17 = sub_63BAC(&qword_3CB368);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  uint64_t v18 = sub_63BAC(&qword_3CBD08);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  uint64_t v19 = sub_63BAC(&qword_3CBD30);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_19;
  }
  uint64_t v20 = sub_63BAC(&qword_3CBD38);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_19;
  }
  uint64_t v21 = sub_2DE110();
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[19];
    goto LABEL_19;
  }
  uint64_t result = type metadata accessor for Shelf();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[21];
    goto LABEL_19;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[23]) = (a2 - 1);
  }
  else
  {
    uint64_t v23 = sub_63BAC(&qword_3CBC58);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v25 = v23;
    uint64_t v26 = a1 + a4[24];
    return v24(v26, a2, a2, v25);
  }
  return result;
}

void sub_1267A4()
{
  sub_126BE4(319, (unint64_t *)&qword_3C8240, (uint64_t (*)(uint64_t))&type metadata accessor for SizeConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_126BE4(319, (unint64_t *)&qword_3C7520, (uint64_t (*)(uint64_t))&type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_126BE4(319, (unint64_t *)&unk_3C9658, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_10126C();
        if (v3 <= 0x3F)
        {
          sub_126BE4(319, &qword_3CBDA8, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfGridBreakpoint, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
          if (v4 <= 0x3F)
          {
            sub_126BE4(319, &qword_3CBDB0, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackgroundViewModel.BackgroundKind, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
            if (v5 <= 0x3F)
            {
              sub_126BE4(319, &qword_3CBDB8, (uint64_t (*)(uint64_t))&type metadata accessor for DataStack, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
              if (v6 <= 0x3F)
              {
                sub_2DE110();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for Shelf();
                  if (v8 <= 0x3F)
                  {
                    sub_126BE4(319, (unint64_t *)&unk_3CBDC0, (uint64_t (*)(uint64_t))&type metadata accessor for SectionData, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_126BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_126C48()
{
  return sub_71AA4(&qword_3CBE40, &qword_3CBC90);
}

ValueMetadata *type metadata accessor for ShelfIDKey()
{
  return &type metadata for ShelfIDKey;
}

uint64_t sub_126C98()
{
  return sub_2E1D40();
}

uint64_t sub_126CBC()
{
  return sub_2E1D40();
}

uint64_t sub_126CE0()
{
  return sub_2E1EE0();
}

uint64_t sub_126D24@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2E1E20();
  *a1 = v3;
  return result;
}

unint64_t sub_126D80()
{
  unint64_t result = qword_3CBE48;
  if (!qword_3CBE48)
  {
    sub_70ECC(&qword_3CE350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBE48);
  }
  return result;
}

uint64_t sub_126DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_11E544(a1);
}

unint64_t sub_126DF4()
{
  unint64_t result = qword_3CBE78;
  if (!qword_3CBE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBE78);
  }
  return result;
}

uint64_t sub_126E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ShelfView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_11C8D4(a1, v6, a2);
}

double sub_126ED0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShelfView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_11DAB8(v4, a1);
}

uint64_t sub_126F50()
{
  return sub_126F78(&qword_3CBF08, &qword_3CBF10, (void (*)(void))sub_126FF8);
}

uint64_t sub_126F78(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_126FF8()
{
  unint64_t result = qword_3CBF18;
  if (!qword_3CBF18)
  {
    sub_70ECC(&qword_3CBF20);
    sub_127074();
    sub_118FE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF18);
  }
  return result;
}

unint64_t sub_127074()
{
  unint64_t result = qword_3CBF28;
  if (!qword_3CBF28)
  {
    sub_70ECC(&qword_3CBF30);
    sub_1270F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF28);
  }
  return result;
}

unint64_t sub_1270F0()
{
  unint64_t result = qword_3CBF38;
  if (!qword_3CBF38)
  {
    sub_70ECC(&qword_3CBF40);
    sub_71AA4(&qword_3CBF48, &qword_3CBF50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF38);
  }
  return result;
}

unint64_t sub_127190()
{
  unint64_t result = qword_3CBF58;
  if (!qword_3CBF58)
  {
    sub_70ECC(&qword_3CBEC0);
    sub_12720C();
    sub_127408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF58);
  }
  return result;
}

unint64_t sub_12720C()
{
  unint64_t result = qword_3CBF60;
  if (!qword_3CBF60)
  {
    sub_70ECC(&qword_3C8328);
    sub_127288();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF60);
  }
  return result;
}

unint64_t sub_127288()
{
  unint64_t result = qword_3CBF68;
  if (!qword_3CBF68)
  {
    sub_70ECC(&qword_3C8320);
    sub_127304();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF68);
  }
  return result;
}

unint64_t sub_127304()
{
  unint64_t result = qword_3CBF70;
  if (!qword_3CBF70)
  {
    sub_70ECC(&qword_3CBED8);
    sub_70ECC(&qword_3CBEC8);
    sub_70ECC(&qword_3D1EB0);
    sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF70);
  }
  return result;
}

unint64_t sub_127408()
{
  unint64_t result = qword_3CBF78;
  if (!qword_3CBF78)
  {
    sub_70ECC(&qword_3CBEA8);
    sub_70ECC(&qword_3CBE98);
    sub_70ECC(&qword_3CBE90);
    sub_2E1940();
    sub_70ECC(&qword_3CBE88);
    sub_71AA4(&qword_3CBF80, &qword_3CBE88);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CBF88, &qword_3CBF90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBF78);
  }
  return result;
}

uint64_t sub_127590()
{
  return sub_11B218(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_127598()
{
  unint64_t result = qword_3CBFB0;
  if (!qword_3CBFB0)
  {
    sub_70ECC(&qword_3CBFA8);
    sub_12760C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBFB0);
  }
  return result;
}

unint64_t sub_12760C()
{
  unint64_t result = qword_3CBFB8;
  if (!qword_3CBFB8)
  {
    sub_70ECC(&qword_3CBFC0);
    sub_70ECC(&qword_3CBFC8);
    sub_1276E0();
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CBFE8, &qword_3CBFF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBFB8);
  }
  return result;
}

unint64_t sub_1276E0()
{
  unint64_t result = qword_3CBFD0;
  if (!qword_3CBFD0)
  {
    sub_70ECC(&qword_3CBFC8);
    sub_70ECC(&qword_3CBEF8);
    sub_70ECC(&qword_3D1EB0);
    sub_71AA4(&qword_3CBCA8, &qword_3D1EB0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CBFD8, &qword_3CBFE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBFD0);
  }
  return result;
}

uint64_t sub_12781C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_127884()
{
  unint64_t result = qword_3CBFF8;
  if (!qword_3CBFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CBFF8);
  }
  return result;
}

uint64_t sub_1278E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for ShelfView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_11B4B0(a1, a2, v8, a3);
}

uint64_t sub_127970()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1279A8(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t sub_1279E0(uint64_t result)
{
  *(unsigned char *)(result + 155) = 1;
  return result;
}

uint64_t sub_1279EC(uint64_t result)
{
  *(unsigned char *)(result + 154) = 0;
  return result;
}

uint64_t sub_1279F4(uint64_t result)
{
  *(unsigned char *)(result + 155) = 0;
  return result;
}

uint64_t sub_1279FC(uint64_t result)
{
  *(unsigned char *)(result + 154) = 1;
  return result;
}

uint64_t sub_127A0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for ShelfView();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v64 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = v0 + v4;
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v2[5];
  sub_63BAC((uint64_t *)&unk_3D20F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2E0260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v2[6];
  sub_63BAC(&qword_3C8318);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_2E1A10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v2[7];
  swift_release();
  swift_release();
  uint64_t v12 = v11 + *(int *)(sub_63BAC(&qword_3CB368) + 32);
  uint64_t v13 = sub_2E1050();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = v5 + v2[8];
  uint64_t v16 = sub_2E0890();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  sub_63BAC(&qword_3CBD08);
  swift_release();
  sub_6EF10(*(void *)(v5 + v2[9]), *(unsigned char *)(v5 + v2[9] + 8));
  sub_6EF10(*(void *)(v5 + v2[10]), *(unsigned char *)(v5 + v2[10] + 8));
  sub_6EF10(*(void *)(v5 + v2[11]), *(unsigned char *)(v5 + v2[11] + 8));
  sub_6EF10(*(void *)(v5 + v2[12]), *(unsigned char *)(v5 + v2[12] + 8));
  sub_6EF10(*(void *)(v5 + v2[13]), *(unsigned char *)(v5 + v2[13] + 8));
  uint64_t v17 = v5 + v2[14];
  sub_63BAC(&qword_3CBD10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_2E0E10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  uint64_t v19 = v5 + v2[15];
  if (*(unsigned char *)(v19 + 40)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v19);
  }
  else {
    swift_release();
  }
  sub_88154(*(id *)(v5 + v2[16]), *(unsigned char *)(v5 + v2[16] + 8));
  uint64_t v20 = v5 + v2[17];
  sub_63BAC(&qword_3C82C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_2DE900();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }
  uint64_t v22 = v5 + v2[18];
  if (*(unsigned char *)(v22 + 40))
  {
    if (*(void *)(v22 + 24)) {
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v22);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v23 = v5 + v2[19];
  uint64_t v24 = sub_2DE110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  sub_881C4(*(void *)(v5 + v2[20]), *(unsigned __int8 *)(v5 + v2[20] + 8), *(unsigned char *)(v5 + v2[20] + 9));
  uint64_t v25 = v5 + v2[21];
  swift_bridgeObjectRelease();
  uint64_t v26 = (int *)type metadata accessor for Shelf();
  uint64_t v27 = v25 + v26[8];
  uint64_t v28 = sub_2E3CC0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v63 = v28;
  uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t))(v29 + 48);
  if (!v62(v27, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v63);
  }
  uint64_t v61 = v29;
  uint64_t v30 = v25 + v26[9];
  uint64_t v31 = sub_2E13F0();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v25 + v26[10]);
  uint64_t v33 = v25 + v26[11];
  uint64_t v34 = sub_2DF630();
  uint64_t v35 = *(void *)(v34 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
  }
  uint64_t v36 = v25 + v26[12];
  uint64_t v37 = sub_2E0E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v25 + v26[13]);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v25 + v26[14]);
  uint64_t v38 = v25 + v26[15];
  uint64_t v39 = (int *)type metadata accessor for ContentUnavailableComponentModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v39 - 1) + 48))(v38, 1, v39))
  {
    uint64_t v58 = (v3 + 16) & ~v3;
    uint64_t v59 = v3;
    uint64_t v60 = v1;
    swift_bridgeObjectRelease();
    uint64_t v40 = v38 + v39[5];
    uint64_t v41 = sub_2DF5D0();
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v57(v40, v41);
    uint64_t v43 = v38 + v39[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v41)) {
      v57(v43, v41);
    }
    uint64_t v44 = v38 + v39[9];
    uint64_t v45 = sub_2E0F70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v38 + v39[10]);
    uint64_t v46 = v38 + v39[11];
    uint64_t v3 = v59;
    uint64_t v1 = v60;
    uint64_t v4 = v58;
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v62)(v46, 1, v63)) {
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v46, v63);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = v25 + v26[17];
  uint64_t v48 = sub_2E0310();
  uint64_t v49 = *(void *)(v48 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48)) {
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
  }
  uint64_t v50 = v25 + v26[18];
  if (*(void *)(v50 + 24)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v50);
  }
  uint64_t v51 = v25 + v26[19];
  uint64_t v52 = sub_2DE320();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (!v54(v51, 1, v52)) {
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
  }
  swift_release();
  uint64_t v55 = v5 + v2[24];
  if (!v54(v55, 1, v52)) {
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v52);
  }

  return _swift_deallocObject(v1, v4 + v64, v3 | 7);
}

uint64_t sub_12841C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShelfView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_11CEF8(v4, a1);
}

uint64_t sub_128494(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1284EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_12854C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_262098(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_128574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1285DC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1285F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v11);
  *a5 = a1;
  a5[4] = a3;
  a5[5] = a4;
  uint64_t v15 = sub_71088(a5 + 1);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v15, v13, a3);
  if (a2)
  {
    swift_retain();
    sub_77650((uint64_t)a2);
    uint64_t v16 = a2(a1, v13);
    uint64_t v18 = v17;
    sub_77710((uint64_t)a2);
    sub_77710((uint64_t)a2);
    swift_release();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, a3);
  a5[6] = v16;
  a5[7] = v18;
  return result;
}

uint64_t RootHostingController.DependencyInjectionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1;
  uint64_t v37 = a1;
  uint64_t v3 = sub_63BAC(&qword_3CC078);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CC080);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CC088);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC(&qword_3CC090);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_63BAC(&qword_3CC098);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v35 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_71044(v2 + 1, v2[4]);
  __n128 v18 = __chkstk_darwin(v17);
  (*(void (**)(char *, __n128))(v20 + 16))((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  uint64_t v21 = sub_2E3270();
  uint64_t v22 = *v2;
  sub_128C00(v21, (uint64_t)v5);
  swift_release();
  sub_129138(v22, (uint64_t)v8);
  sub_662B4((uint64_t)v5, &qword_3CC078);
  sub_1295EC((uint64_t)v11);
  sub_662B4((uint64_t)v8, &qword_3CC080);
  sub_129D68((uint64_t)v15);
  sub_662B4((uint64_t)v11, &qword_3CC088);
  uint64_t v23 = sub_70ECC(&qword_3CC0A0);
  unint64_t v24 = sub_129FA0();
  uint64_t v40 = v23;
  unint64_t v41 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  sub_2E2A20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v26 = sub_63BAC(&qword_3CC1C0);
  uint64_t v27 = v37;
  uint64_t v28 = v37 + *(int *)(v26 + 36);
  id v29 = [self defaultCenter];
  NSString v30 = sub_2E43E0();
  sub_2E49A0();

  uint64_t v31 = v28 + *(int *)(type metadata accessor for ObserveReachabilityViewModifier() + 20);
  char v39 = [self isOffline] ^ 1;
  sub_2E3130();
  unint64_t v32 = v41;
  *(unsigned char *)uint64_t v31 = v40;
  *(void *)(v31 + 8) = v32;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v27, v25, v38);
}

uint64_t sub_128C00@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_63BAC(&qword_3CC168);
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CC160);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_63BAC(&qword_3CC220);
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC(&qword_3CC158);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_63BAC(&qword_3CC148) - 8;
  __chkstk_darwin(v37);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  sub_63BAC(&qword_3C7E48);
  sub_2E3A90();
  uint64_t v18 = sub_2DFFE0();
  sub_2E3A90();
  uint64_t v19 = v47;
  uint64_t v49 = v18;
  uint64_t v50 = sub_12B538(&qword_3CC228, (void (*)(uint64_t))&type metadata accessor for GeometryCache);
  char v39 = v19;
  uint64_t v47 = v19;
  swift_retain();
  sub_2E2BE0();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v47);
  uint64_t v47 = &type metadata for AnyView;
  uint64_t v48 = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2E2C20();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v3);
  uint64_t v47 = (void *)v3;
  uint64_t v48 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v38;
  uint64_t v22 = v41;
  sub_2E2B10();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v22);
  uint64_t KeyPath = swift_getKeyPath();
  char v46 = 0;
  sub_2E3130();
  LOBYTE(v19) = (_BYTE)v47;
  unint64_t v24 = v48;
  uint64_t v25 = v43;
  uint64_t v26 = v21;
  uint64_t v27 = v21;
  uint64_t v28 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v15, v26, v44);
  id v29 = &v15[*(int *)(v13 + 44)];
  *(void *)id v29 = KeyPath;
  v29[8] = 0;
  v29[16] = (char)v19;
  *((void *)v29 + 3) = v24;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  sub_2E3A90();
  LOBYTE(v27) = (_BYTE)v47;
  uint64_t v30 = swift_getKeyPath();
  sub_66444((uint64_t)v15, (uint64_t)v17, &qword_3CC158);
  uint64_t v31 = &v17[*(int *)(v37 + 44)];
  *(void *)uint64_t v31 = v30;
  v31[8] = (char)v27;
  sub_662B4((uint64_t)v15, &qword_3CC158);
  uint64_t v32 = swift_getKeyPath();
  sub_2DE750();
  sub_2E3A90();
  uint64_t v33 = (uint64_t)v47;
  uint64_t v34 = v45;
  sub_66444((uint64_t)v17, v45, &qword_3CC148);
  swift_release();
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(sub_63BAC(&qword_3CC078) + 36));
  *uint64_t v35 = v32;
  v35[1] = v33;
  sub_662B4((uint64_t)v17, &qword_3CC148);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v51);
}

uint64_t sub_129138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_63BAC(&qword_3CC130);
  uint64_t v30 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_63BAC(&qword_3CC128);
  uint64_t v31 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3CC120);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CC218);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E3A90();
  if (v39 == 1)
  {
    swift_retain();
  }
  else
  {
    sub_2E3B20();
    sub_2E3AA0();
  }
  uint64_t v13 = sub_63BAC(&qword_3CC078);
  uint64_t v14 = sub_2E3B00();
  unint64_t v15 = sub_12A630();
  sub_2E2970();
  swift_release();
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  unint64_t v41 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2E29E0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  uint64_t v39 = v3;
  uint64_t v40 = OpaqueTypeConformance2;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v34;
  sub_2E2990();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v18);
  uint64_t v39 = v18;
  uint64_t v40 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v35;
  uint64_t v20 = v33;
  sub_2E2B90();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v20);
  type metadata accessor for HostProxy(0);
  sub_12B538(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  swift_retain();
  uint64_t v21 = sub_2E1620();
  char v23 = v22;
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  uint64_t v26 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v38, v19, v37);
  uint64_t v27 = v26 + *(int *)(sub_63BAC(&qword_3CC080) + 36);
  *(void *)uint64_t v27 = v21;
  *(unsigned char *)(v27 + 8) = v23 & 1;
  *(void *)(v27 + 16) = a1;
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v24);
}

uint64_t sub_1295EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v1 = sub_63BAC(&qword_3CC110);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CC0F8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_63BAC(&qword_3CC0F0);
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_63BAC(&qword_3CC0E8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  uint64_t v56 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_63BAC(&qword_3CC0E0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v58 = v15;
  __chkstk_darwin(v14);
  uint64_t v49 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_63BAC(&qword_3CC0D8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  uint64_t v60 = v18;
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_63BAC(&qword_3CC1F8);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v62 = v20;
  __chkstk_darwin(v20);
  uint64_t v51 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_63BAC(&qword_3CC0D0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v53 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_63BAC(&qword_3CA9C0);
  sub_2E3B00();
  sub_2E41D0();
  uint64_t v26 = (uint64_t *)&v4[*(int *)(v2 + 44)];
  sub_66310((uint64_t)&v64, (uint64_t)(v26 + 1));
  *uint64_t v26 = KeyPath;
  sub_66444(v48, (uint64_t)v4, &qword_3CC080);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v64);
  sub_2AF9E0((uint64_t)v7);
  sub_662B4((uint64_t)v4, &qword_3CC110);
  unint64_t v27 = sub_12A384();
  sub_2E2A70();
  sub_662B4((uint64_t)v7, &qword_3CC0F8);
  uint64_t v28 = type metadata accessor for HostProxy(0);
  sub_2E3A90();
  swift_retain();
  uint64_t v64 = v5;
  unint64_t v65 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = sub_12B538(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
  uint64_t v31 = v52;
  sub_2E2CD0();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v31);
  uint64_t v64 = v31;
  unint64_t v65 = v28;
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v67 = (ValueMetadata *)v30;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = v49;
  uint64_t v34 = v55;
  sub_2E2AF0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v34);
  uint64_t v64 = v34;
  unint64_t v65 = v32;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = v50;
  uint64_t v37 = v57;
  sub_2E2AC0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v37);
  uint64_t v64 = v37;
  unint64_t v65 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v51;
  uint64_t v39 = v59;
  sub_2E2B40();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v39);
  uint64_t v40 = swift_getKeyPath();
  sub_2E3A90();
  uint64_t v67 = &type metadata for ConvertRectFromGlobalHandler;
  unint64_t v68 = sub_12B4DC();
  uint64_t v41 = (uint64_t)v53;
  uint64_t v42 = (uint64_t *)&v53[*(int *)(v23 + 44)];
  sub_66444((uint64_t)&v64, (uint64_t)(v42 + 1), &qword_3CC208);
  *uint64_t v42 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v41, v38, v62);
  sub_662B4((uint64_t)&v64, &qword_3CC208);
  uint64_t v43 = swift_getKeyPath();
  sub_63BAC(&qword_3C7EA8);
  sub_2E3A90();
  uint64_t v44 = sub_63BAC(&qword_3CC088);
  uint64_t v45 = v63;
  char v46 = (uint64_t *)(v63 + *(int *)(v44 + 36));
  sub_66444((uint64_t)&v64, (uint64_t)(v46 + 1), &qword_3CC210);
  uint64_t *v46 = v43;
  sub_66444(v41, v45, &qword_3CC0D0);
  sub_662B4((uint64_t)&v64, &qword_3CC210);
  return sub_662B4(v41, &qword_3CC0D0);
}

uint64_t sub_129D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v20[1] = a1;
  uint64_t v3 = sub_63BAC(&qword_3C7800);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CC0B8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_63BAC(&qword_3CC0A0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E3A90();
  uint64_t v13 = (unsigned char *)v20[2];
  uint64_t KeyPath = swift_getKeyPath();
  char v15 = v13[OBJC_IVAR___BSUINavigationContext_isInCard];
  sub_66444(v2, (uint64_t)v9, &qword_3CC088);
  uint64_t v16 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v16 = KeyPath;
  v16[8] = v15;
  uint64_t v17 = swift_getKeyPath();
  LOBYTE(v7) = v13[OBJC_IVAR___BSUINavigationContext_isInModal];
  sub_66444((uint64_t)v9, (uint64_t)v12, &qword_3CC0B8);
  uint64_t v18 = &v12[*(int *)(v10 + 36)];
  *(void *)uint64_t v18 = v17;
  v18[8] = v7;
  sub_662B4((uint64_t)v9, &qword_3CC0B8);
  sub_2E26F0();
  sub_129FA0();
  sub_2E2C70();

  swift_bridgeObjectRelease();
  sub_662B4((uint64_t)v5, &qword_3C7800);
  return sub_662B4((uint64_t)v12, &qword_3CC0A0);
}

unint64_t sub_129FA0()
{
  unint64_t result = qword_3CC0A8;
  if (!qword_3CC0A8)
  {
    sub_70ECC(&qword_3CC0A0);
    sub_12A040();
    sub_71AA4(&qword_3CBF88, &qword_3CBF90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC0A8);
  }
  return result;
}

unint64_t sub_12A040()
{
  unint64_t result = qword_3CC0B0;
  if (!qword_3CC0B0)
  {
    sub_70ECC(&qword_3CC0B8);
    sub_12A0E0();
    sub_71AA4(&qword_3CBF88, &qword_3CBF90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC0B0);
  }
  return result;
}

unint64_t sub_12A0E0()
{
  unint64_t result = qword_3CC0C0;
  if (!qword_3CC0C0)
  {
    sub_70ECC(&qword_3CC088);
    sub_12A180();
    sub_71AA4(&qword_3CC1B0, &qword_3CC1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC0C0);
  }
  return result;
}

unint64_t sub_12A180()
{
  unint64_t result = qword_3CC0C8;
  if (!qword_3CC0C8)
  {
    sub_70ECC(&qword_3CC0D0);
    sub_70ECC(&qword_3CC0D8);
    sub_70ECC(&qword_3CC0E0);
    sub_70ECC(&qword_3CC0E8);
    sub_70ECC(&qword_3CC0F0);
    type metadata accessor for HostProxy(255);
    sub_70ECC(&qword_3CC0F8);
    sub_12A384();
    swift_getOpaqueTypeConformance2();
    sub_12B538(&qword_3C7858, (void (*)(uint64_t))type metadata accessor for HostProxy);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CC1A0, &qword_3CC1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC0C8);
  }
  return result;
}

unint64_t sub_12A384()
{
  unint64_t result = qword_3CC100;
  if (!qword_3CC100)
  {
    sub_70ECC(&qword_3CC0F8);
    sub_12A424();
    sub_71AA4(&qword_3CA9E0, &qword_3CA9D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC100);
  }
  return result;
}

unint64_t sub_12A424()
{
  unint64_t result = qword_3CC108;
  if (!qword_3CC108)
  {
    sub_70ECC(&qword_3CC110);
    sub_12A4C4();
    sub_71AA4(&qword_3CA9D0, &qword_3CA9C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC108);
  }
  return result;
}

unint64_t sub_12A4C4()
{
  unint64_t result = qword_3CC118;
  if (!qword_3CC118)
  {
    sub_70ECC(&qword_3CC080);
    sub_70ECC(&qword_3CC120);
    sub_70ECC(&qword_3CC128);
    sub_70ECC(&qword_3CC130);
    sub_70ECC(&qword_3CC078);
    sub_2E3B00();
    sub_12A630();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_12A8E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC118);
  }
  return result;
}

unint64_t sub_12A630()
{
  unint64_t result = qword_3CC138;
  if (!qword_3CC138)
  {
    sub_70ECC(&qword_3CC078);
    sub_12A6D0();
    sub_71AA4(&qword_3CC188, &qword_3CC190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC138);
  }
  return result;
}

unint64_t sub_12A6D0()
{
  unint64_t result = qword_3CC140;
  if (!qword_3CC140)
  {
    sub_70ECC(&qword_3CC148);
    sub_12A770();
    sub_71AA4(&qword_3CC178, &qword_3CC180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC140);
  }
  return result;
}

unint64_t sub_12A770()
{
  unint64_t result = qword_3CC150;
  if (!qword_3CC150)
  {
    sub_70ECC(&qword_3CC158);
    sub_70ECC(&qword_3CC160);
    sub_70ECC(&qword_3CC168);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_12A88C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC150);
  }
  return result;
}

unint64_t sub_12A88C()
{
  unint64_t result = qword_3CC170;
  if (!qword_3CC170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC170);
  }
  return result;
}

unint64_t sub_12A8E0()
{
  unint64_t result = qword_3CC198;
  if (!qword_3CC198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC198);
  }
  return result;
}

uint64_t sub_12A934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of FallbackSceneSessionProviding.fallbackSceneSession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s23DependencyInjectionViewVwxx(uint64_t a1)
{
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 8);

  return swift_bridgeObjectRelease();
}

uint64_t _s23DependencyInjectionViewVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s23DependencyInjectionViewVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_6FA20(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s23DependencyInjectionViewVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s23DependencyInjectionViewVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23DependencyInjectionViewVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23DependencyInjectionViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RootHostingController.DependencyInjectionView()
{
  return &type metadata for RootHostingController.DependencyInjectionView;
}

unint64_t sub_12ABE8()
{
  unint64_t result = qword_3CC1C8;
  if (!qword_3CC1C8)
  {
    sub_70ECC(&qword_3CC1C0);
    sub_70ECC(&qword_3CC090);
    sub_70ECC(&qword_3CC0A0);
    sub_129FA0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_12B538((unint64_t *)&qword_3CC1D0, (void (*)(uint64_t))type metadata accessor for ObserveReachabilityViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC1C8);
  }
  return result;
}

uint64_t destroy for JetSceneSessionViewModifier()
{
  swift_release();

  return swift_release();
}

uint64_t _s11BookStoreUI27JetSceneSessionViewModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JetSceneSessionViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JetSceneSessionViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetSceneSessionViewModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JetSceneSessionViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetSceneSessionViewModifier()
{
  return &type metadata for JetSceneSessionViewModifier;
}

uint64_t sub_12AEDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_12AEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a4;
  uint64_t v6 = sub_63BAC(&qword_3CC1D8);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CC1E0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC(&qword_3CC1E8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_12B24C(a2, a3 & 1);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = sub_71AA4(&qword_3CC1F0, &qword_3CC1D8);
    sub_2E2960();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = v6;
    uint64_t v27 = v18;
    swift_getOpaqueTypeConformance2();
    sub_2E2330();

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    uint64_t v20 = v23;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v21(v8, v24, v6);
    v21(v11, (uint64_t)v8, v6);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = sub_71AA4(&qword_3CC1F0, &qword_3CC1D8);
    uint64_t v26 = v6;
    uint64_t v27 = v22;
    swift_getOpaqueTypeConformance2();
    sub_2E2330();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  }
}

uint64_t sub_12B24C(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_86BC8(v3, v2);
  swift_release();
  sub_BDFA0();
  uint64_t v5 = v4;
  swift_release();
  if (!v5)
  {
    if (qword_3C6590 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2DF850();
    sub_58BA0(v6, (uint64_t)qword_3CD180);
    uint64_t v7 = sub_2DF830();
    os_log_type_t v8 = sub_2E4900();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "RootHostingController does not have a UISceneSession when rendering DependencyInjectionView", v9, 2u);
      swift_slowDealloc();
    }

    sub_63BAC(&qword_3C7E38);
    sub_2E3A90();
    uint64_t v10 = v17;
    uint64_t v11 = v18;
    sub_71044(v16, v17);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v16);
    if (!v5)
    {
      uint64_t v12 = sub_2DF830();
      uint64_t v13 = sub_2E4900();
      if (os_log_type_enabled(v12, (os_log_type_t)v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_0, v12, (os_log_type_t)v13, "Could not find a fallback UISceneSession", v14, 2u);
        swift_slowDealloc();
      }

      return 0;
    }
  }
  return v5;
}

uint64_t sub_12B448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_12AEF8(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_12B478()
{
  return sub_2E1CC0();
}

uint64_t sub_12B49C(uint64_t a1)
{
  sub_66444(a1, (uint64_t)v2, &qword_3CC208);
  return sub_2E1CD0();
}

unint64_t sub_12B4DC()
{
  unint64_t result = qword_3CC200;
  if (!qword_3CC200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC200);
  }
  return result;
}

uint64_t sub_12B538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_12B594()
{
  unint64_t result = qword_3CC230;
  if (!qword_3CC230)
  {
    sub_70ECC(&qword_3CC238);
    sub_70ECC(&qword_3CC1D8);
    sub_71AA4(&qword_3CC1F0, &qword_3CC1D8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC230);
  }
  return result;
}

uint64_t PageContent.initialPage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_66444((uint64_t)&v5[*(int *)(v3 + 28)], a1, &qword_3C97F0);
  return sub_12FEC8((uint64_t)v5, type metadata accessor for PageContent.PageInfo);
}

uint64_t type metadata accessor for PageContent.PageInfo(uint64_t a1)
{
  return sub_6E6E0(a1, (uint64_t *)&unk_3CC3E8);
}

uint64_t PageContent.init(pageIntent:initialPage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v3 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v33 = (uint64_t)&v29 - v11;
  uint64_t v12 = type metadata accessor for PageAlert(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - v16;
  type metadata accessor for PageContent(0);
  uint64_t v18 = sub_2DFA90();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v14, 1, 1, v18);
  sub_662B4((uint64_t)v14, &qword_3CB0C0);
  v19(v14, 1, 1, v18);
  sub_12FF90((uint64_t)v14, (uint64_t)v17, type metadata accessor for PageAlert);
  sub_13165C((uint64_t)v17, (uint64_t)v14, type metadata accessor for PageAlert);
  sub_2E3130();
  sub_12FEC8((uint64_t)v17, type metadata accessor for PageAlert);
  uint64_t v20 = v30;
  sub_66310(v30, (uint64_t)v34);
  uint64_t v21 = v31;
  sub_66444(v31, (uint64_t)v5, &qword_3C97F0);
  uint64_t v22 = (uint64_t)&v9[v7[7]];
  uint64_t v23 = type metadata accessor for Page();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  v24((uint64_t)&v9[v7[8]], 1, 1, v23);
  v9[v7[9]] = 0;
  sub_2DF4A0();
  v24((uint64_t)&v9[v7[11]], 1, 1, v23);
  sub_65CF4(v34, (uint64_t)v9);
  sub_12FF28((uint64_t)v5, v22);
  uint64_t v25 = v33;
  sub_12FF90((uint64_t)v9, v33, type metadata accessor for PageContent.PageInfo);
  sub_662B4(v21, &qword_3C97F0);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v20);
  uint64_t v26 = sub_63BAC(&qword_3C97F8);
  uint64_t v27 = v32;
  *(void *)(v32 + *(int *)(v26 + 28)) = 0;
  return sub_12FF90(v25, v27, type metadata accessor for PageContent.PageInfo);
}

uint64_t PageContent.contentType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_63BAC(&qword_3CAF50);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_63BAC(&qword_3CB198);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - v13;
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_12E5B4((uint64_t)v8);
  sub_12FEC8((uint64_t)v14, type metadata accessor for PageContent.PageInfo);
  uint64_t v15 = type metadata accessor for Page();
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v8, 1, v15);
  sub_662B4((uint64_t)v8, &qword_3C97F0);
  if (v16 == 1)
  {
    uint64_t v17 = v24;
    sub_2E3140();
    uint64_t v18 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v3, &v12[*(int *)(v9 + 32)], v1);
    sub_12FEC8((uint64_t)v12, type metadata accessor for PageContent.PageInfo);
    uint64_t v19 = sub_2DF4B0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
    if (v19) {
      *uint64_t v17 = v19;
    }
    type metadata accessor for PageContent.ContentType(0);
  }
  else
  {
    sub_2E3160();
    swift_getKeyPath();
    sub_2E32A0();
    swift_release();
    sub_662B4((uint64_t)v5, &qword_3CB198);
    type metadata accessor for PageContent.ContentType(0);
  }
  return swift_storeEnumTagMultiPayload();
}

Swift::Void __swiftcall PageContent.refresh(resetToLoading:)(Swift::Bool resetToLoading)
{
  uint64_t v2 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v2);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_63BAC(&qword_3CAF50);
  sub_2DF480(resetToLoading);
  sub_12DA68();
  sub_2E3150();
}

uint64_t View.dispatch(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = a2;
  v20[1] = a3;
  uint64_t v21 = a1;
  v20[0] = sub_2E3230();
  uint64_t v3 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CB198);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CB1A0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v20 - v13;
  uint64_t v15 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_66310((uint64_t)v17, (uint64_t)v23);
  sub_12FEC8((uint64_t)v17, type metadata accessor for PageContent.PageInfo);
  sub_2E3160();
  swift_getKeyPath();
  sub_2E32A0();
  swift_release();
  sub_662B4((uint64_t)v8, &qword_3CB198);
  sub_2E3220();
  sub_2E3490();
  (*(void (**)(char *, void))(v3 + 8))(v5, v20[0]);
  sub_2E32D0();
  swift_release();
  sub_662B4((uint64_t)v11, &qword_3CB1A0);
  uint64_t v18 = type metadata accessor for Page();
  sub_131484(v23, (uint64_t)v14, v21, v18, v22);
  sub_662B4((uint64_t)v14, &qword_3CB1A0);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v23);
}

uint64_t PageContent.dispatchState.getter()
{
  uint64_t v0 = sub_63BAC(&qword_3CAF50);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, &v7[*(int *)(v5 + 40)], v0);
  sub_12FEC8((uint64_t)v7, type metadata accessor for PageContent.PageInfo);
  sub_2DF470();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t PageContent.isLoadingNewPageIntent.getter()
{
  uint64_t v0 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  uint64_t v4 = v3[*(int *)(v1 + 36)];
  sub_12FEC8((uint64_t)v3, type metadata accessor for PageContent.PageInfo);
  return v4;
}

uint64_t PageContent.update(with:animated:)(uint64_t a1, int a2)
{
  int v127 = a2;
  uint64_t v142 = a1;
  uint64_t v121 = sub_2E25B0();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_2E3230();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  long long v116 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_63BAC(&qword_3C97F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v136 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v130 = (uint64_t)&v109 - v7;
  uint64_t v133 = type metadata accessor for PageContent(0);
  uint64_t v131 = *(void *)(v133 - 8);
  uint64_t v8 = __chkstk_darwin(v133);
  uint64_t v137 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v126 = (uint64_t)&v109 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v115 = (uint64_t)&v109 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v114 = (uint64_t)&v109 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v134 = (uint64_t)&v109 - v17;
  uint64_t v132 = v18;
  __chkstk_darwin(v16);
  uint64_t v128 = (uint64_t)&v109 - v19;
  uint64_t v138 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v20 = __chkstk_darwin(v138);
  uint64_t v135 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v129 = (char *)&v109 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v109 - v24;
  uint64_t v141 = sub_63BAC(&qword_3C97F8);
  __chkstk_darwin(v141);
  uint64_t v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_63BAC(&qword_3C6F10);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  int v122 = (long long *)((char *)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v123 = (char *)&v109 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v125 = (long long *)((char *)&v109 - v35);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v124 = (char *)&v109 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (long long *)((char *)&v109 - v39);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v109 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (long long *)((char *)&v109 - v44);
  char v46 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v46((char *)&v109 - v44, v142, v28);
  uint64_t v47 = *(uint64_t (**)(long long *, uint64_t))(v29 + 88);
  uint64_t v149 = v29 + 88;
  uint64_t v148 = v47;
  int v48 = v47(v45, v28);
  int v147 = enum case for PageUpdateInstruction.replacePage<A, B>(_:);
  if (v48 == enum case for PageUpdateInstruction.replacePage<A, B>(_:))
  {
    (*(void (**)(long long *, uint64_t))(v29 + 96))(v45, v28);
    sub_65CF4(v45, (uint64_t)&v160);
    sub_66310((uint64_t)&v160, (uint64_t)&v157);
    sub_66444(v139, (uint64_t)v27, &qword_3C97F8);
    sub_2E3140();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v25);
    sub_65CF4(&v157, (uint64_t)v25);
    v25[*(int *)(v138 + 28)] = 1;
    sub_2E3150();
    sub_662B4((uint64_t)v27, &qword_3C97F8);
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v160);
  }
  uint64_t v112 = v27;
  long long v113 = v25;
  if (v48 != enum case for PageUpdateInstruction.compound<A, B>(_:))
  {
    (*(void (**)(long long *, uint64_t))(v29 + 8))(v45, v28);
    uint64_t v56 = v139;
    uint64_t v57 = v140;
    uint64_t v58 = (uint64_t)v137;
    uint64_t v59 = (uint64_t)v136;
    goto LABEL_46;
  }
  uint64_t v50 = *(void (**)(long long *, uint64_t))(v29 + 96);
  uint64_t v144 = v29 + 96;
  long long v143 = v50;
  v50(v45, v28);
  uint64_t v163 = *(void *)v45;
  uint64_t v111 = *(void *)(v163 + 16);
  if (!v111)
  {
LABEL_24:
    uint64_t v162 = 0;
    long long v160 = 0u;
    long long v161 = 0u;
    swift_bridgeObjectRelease();
    uint64_t v56 = v139;
    uint64_t v58 = (uint64_t)v137;
    uint64_t v59 = (uint64_t)v136;
    if (!*((void *)&v161 + 1)) {
      goto LABEL_39;
    }
    goto LABEL_25;
  }
  unint64_t v110 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v51 = v163 + v110;
  uint64_t v145 = *(void *)(v29 + 72);
  uint64_t v52 = (void (**)(long long *, uint64_t))(v29 + 8);
  uint64_t v146 = (v29 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v53 = v111;
  while (1)
  {
    v46(v43, v51, v28);
    v46((char *)v40, (uint64_t)v43, v28);
    int v54 = v148(v40, v28);
    if (v54 == v147)
    {
      v143(v40, v28);
      sub_65CF4(v40, (uint64_t)&v154);
      sub_65CF4(&v154, (uint64_t)&v157);
      uint64_t v55 = *v52;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v55 = *v52;
      swift_bridgeObjectRetain();
      v55(v40, v28);
      long long v157 = 0u;
      long long v158 = 0u;
      uint64_t v159 = 0;
    }
    v55((long long *)v43, v28);
    if (*((void *)&v158 + 1))
    {
      sub_65CF4(&v157, (uint64_t)&v154);
    }
    else
    {
      long long v154 = v157;
      long long v155 = (unint64_t)v158;
      uint64_t v156 = v159;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v155 + 1)) {
      break;
    }
    v51 += v145;
    if (!--v53) {
      goto LABEL_24;
    }
  }
  uint64_t result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v154);
  unint64_t v60 = v111 + 1;
  uint64_t v61 = v163 + v110 + v145 * (v111 - 1);
  uint64_t v145 = -v145;
  uint64_t v62 = v125;
  uint64_t v63 = v124;
  while (1)
  {
    if (v60 - 2 >= *(void *)(v163 + 16))
    {
      __break(1u);
LABEL_64:
      __break(1u);
      return result;
    }
    v46(v63, v61, v28);
    v46((char *)v62, (uint64_t)v63, v28);
    int v64 = v148(v62, v28);
    if (v64 == v147)
    {
      v143(v62, v28);
      sub_65CF4(v62, (uint64_t)&v154);
      sub_65CF4(&v154, (uint64_t)&v157);
    }
    else
    {
      v55(v62, v28);
      long long v157 = 0u;
      long long v158 = 0u;
      uint64_t v159 = 0;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v55)(v63, v28);
    if (*((void *)&v158 + 1)) {
      break;
    }
    --v60;
    v61 += v145;
    if (v60 < 2)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v157);
  unint64_t v65 = v123;
  v46(v123, v61, v28);
  uint64_t v66 = v122;
  v46((char *)v122, (uint64_t)v65, v28);
  int v67 = v148(v66, v28);
  if (v67 == v147)
  {
    v143(v66, v28);
    sub_65CF4(v66, (uint64_t)&v154);
    sub_65CF4(&v154, (uint64_t)&v157);
  }
  else
  {
    v55(v66, v28);
    long long v157 = 0u;
    long long v158 = 0u;
    uint64_t v159 = 0;
  }
  uint64_t v58 = (uint64_t)v137;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v55)(v65, v28);
  if (*((void *)&v158 + 1))
  {
    uint64_t result = sub_65CF4(&v157, (uint64_t)&v154);
  }
  else
  {
    long long v154 = v157;
    long long v155 = (unint64_t)v158;
    uint64_t v156 = v159;
  }
  uint64_t v56 = v139;
  uint64_t v59 = (uint64_t)v136;
  if (*((void *)&v155 + 1))
  {
    uint64_t result = sub_66310((uint64_t)&v154, (uint64_t)&v151);
  }
  else
  {
    long long v151 = v154;
    long long v152 = (unint64_t)v155;
    uint64_t v153 = v156;
  }
  if (!*((void *)&v152 + 1)) {
    goto LABEL_64;
  }
  sub_65CF4(&v151, (uint64_t)&v157);
  if (*((void *)&v155 + 1)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v154);
  }
  sub_65CF4(&v157, (uint64_t)&v160);
  swift_bridgeObjectRelease();
  if (*((void *)&v161 + 1))
  {
LABEL_25:
    sub_66310((uint64_t)&v160, (uint64_t)&v154);
    goto LABEL_40;
  }
LABEL_39:
  long long v154 = v160;
  long long v155 = v161;
  uint64_t v156 = v162;
LABEL_40:
  uint64_t v57 = v140;
  if (*((void *)&v155 + 1))
  {
    sub_65CF4(&v154, (uint64_t)&v157);
    uint64_t v68 = v128;
    sub_13165C(v56, v128, type metadata accessor for PageContent);
    sub_66310((uint64_t)&v157, (uint64_t)&v154);
    sub_13165C(v68, v134, type metadata accessor for PageContent);
    sub_66310((uint64_t)&v154, (uint64_t)&v151);
    uint64_t v69 = *(unsigned __int8 *)(v131 + 80);
    uint64_t v70 = (v69 + 16) & ~v69;
    unint64_t v71 = (v132 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v148 = (uint64_t (*)(long long *, uint64_t))(v69 | 7);
    uint64_t v72 = swift_allocObject();
    uint64_t v149 = v70;
    sub_12FF90(v68, v72 + v70, type metadata accessor for PageContent);
    uint64_t v163 = v71;
    sub_65CF4(&v154, v72 + v71);
    uint64_t v73 = type metadata accessor for Page();
    uint64_t v74 = swift_allocBox();
    uint64_t v76 = v75;
    uint64_t v77 = (uint64_t)v129;
    sub_2E3140();
    uint64_t v78 = v130;
    sub_12E5B4(v130);
    sub_12FEC8(v77, type metadata accessor for PageContent.PageInfo);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 48))(v78, 1, v73) == 1)
    {
      sub_662B4(v78, &qword_3C97F0);
      swift_deallocBox();
      goto LABEL_52;
    }
    uint64_t v87 = v74;
    sub_12FF90(v78, v76, (uint64_t (*)(void))type metadata accessor for Page);
    type metadata accessor for PageAlert(0);
    uint64_t v88 = swift_allocBox();
    uint64_t v89 = v57;
    uint64_t v91 = v90;
    sub_63BAC(&qword_3CB0A0);
    sub_2E3140();
    sub_1303EC(v76, v91, v142);
    if (v89)
    {
      swift_release();
      swift_release();
      goto LABEL_52;
    }
    uint64_t v99 = v114;
    sub_13165C(v56, v114, type metadata accessor for PageContent);
    uint64_t v100 = v115;
    sub_13165C(v99, v115, type metadata accessor for PageContent);
    uint64_t v101 = v163;
    unint64_t v102 = (v163 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v103 = swift_allocObject();
    sub_12FF90(v99, v103 + v149, type metadata accessor for PageContent);
    *(void *)(v103 + v101) = v87;
    *(void *)(v103 + v102) = v88;
    swift_retain();
    swift_retain();
    if (v127)
    {
      sub_12FEC8(v100, type metadata accessor for PageContent);
      uint64_t v104 = v116;
      sub_2E3220();
      sub_2E3490();
      uint64_t v105 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v104, v118);
      __chkstk_darwin(v105);
      *(&v109 - 2) = (uint64_t)sub_1316C8;
      *(&v109 - 1) = v103;
      swift_retain();
      uint64_t v106 = v119;
      sub_2E25A0();
      sub_2E18D0();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v106, v121);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_130FA0();
      sub_12FEC8(v100, type metadata accessor for PageContent);
      sub_66310((uint64_t)&v151, (uint64_t)&v150);
      uint64_t v107 = (uint64_t)v112;
      sub_66444(v134, (uint64_t)v112, &qword_3C97F8);
      uint64_t v108 = (uint64_t)v113;
      sub_2E3140();
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v108);
      sub_65CF4(&v150, v108);
      *(unsigned char *)(v108 + *(int *)(v138 + 28)) = 1;
      sub_2E3150();
      sub_662B4(v107, &qword_3C97F8);
      swift_release();
      swift_release();
      swift_release();
LABEL_52:
      swift_release();
    }
    sub_12FEC8(v134, type metadata accessor for PageContent);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v151);
    uint64_t result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v157);
    if (*((void *)&v161 + 1)) {
      return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v160);
    }
    return result;
  }
  if (*((void *)&v161 + 1))
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v160);
    if (*((void *)&v155 + 1)) {
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v154);
    }
  }
LABEL_46:
  uint64_t v79 = type metadata accessor for Page();
  uint64_t v80 = swift_allocBox();
  uint64_t v82 = v81;
  uint64_t v83 = (uint64_t)v135;
  sub_2E3140();
  sub_12E5B4(v59);
  sub_12FEC8(v83, type metadata accessor for PageContent.PageInfo);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v59, 1, v79) == 1)
  {
    sub_662B4(v59, &qword_3C97F0);
    return swift_deallocBox();
  }
  sub_12FF90(v59, v82, (uint64_t (*)(void))type metadata accessor for Page);
  type metadata accessor for PageAlert(0);
  uint64_t v84 = swift_allocBox();
  uint64_t v86 = v85;
  sub_63BAC(&qword_3CB0A0);
  sub_2E3140();
  sub_1303EC(v82, v86, v142);
  if (v57)
  {
    swift_release();
  }
  else
  {
    uint64_t v92 = v126;
    sub_13165C(v56, v126, type metadata accessor for PageContent);
    sub_13165C(v92, v58, type metadata accessor for PageContent);
    unint64_t v93 = (*(unsigned __int8 *)(v131 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    unint64_t v94 = (v132 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v95 = swift_allocObject();
    sub_12FF90(v92, v95 + v93, type metadata accessor for PageContent);
    *(void *)(v95 + v94) = v80;
    *(void *)(v95 + ((v94 + 15) & 0xFFFFFFFFFFFFFFF8)) = v84;
    swift_retain();
    swift_retain();
    if (v127)
    {
      sub_12FEC8(v58, type metadata accessor for PageContent);
      char v96 = v116;
      sub_2E3220();
      sub_2E3490();
      uint64_t v97 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v96, v118);
      __chkstk_darwin(v97);
      *(&v109 - 2) = (uint64_t)sub_1316C8;
      *(&v109 - 1) = v95;
      swift_retain();
      uint64_t v98 = v119;
      sub_2E25A0();
      sub_2E18D0();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v98, v121);
      swift_release();
      swift_release();
      return swift_release();
    }
    sub_130FA0();
    sub_12FEC8(v58, type metadata accessor for PageContent);
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_12DA68()
{
  uint64_t v1 = type metadata accessor for Page();
  uint64_t v78 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v71 = (uint64_t)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_63BAC(&qword_3C97F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v72 = (uint64_t)&v68 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t)&v68 - v9;
  __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v68 - v10;
  uint64_t v11 = sub_2E3DF0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_63BAC(&qword_3CC440);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_63BAC(&qword_3CB168);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v68 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v77 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v26 = v77[8];
  uint64_t v79 = v0;
  uint64_t v27 = (uint64_t)v0 + v26;
  uint64_t v74 = sub_63BAC(&qword_3CAF50);
  uint64_t v75 = v27;
  uint64_t v28 = sub_2DF4B0();
  if (!v28) {
    goto LABEL_16;
  }
  uint64_t v70 = v1;
  uint64_t v81 = v28;
  swift_errorRetain();
  sub_63BAC((uint64_t *)&unk_3C9D00);
  int v29 = swift_dynamicCast();
  uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v30(v25, v29 ^ 1u, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v23, enum case for IntentDispatcherError.unsupported(_:), v11);
  v30(v23, 0, 1, v11);
  uint64_t v31 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_66444((uint64_t)v25, (uint64_t)v16, &qword_3CB168);
  sub_66444((uint64_t)v23, v31, &qword_3CB168);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v32((uint64_t)v16, 1, v11) == 1)
  {
    sub_662B4((uint64_t)v23, &qword_3CB168);
    int v33 = v32(v31, 1, v11);
    uint64_t v1 = v70;
    uint64_t v34 = v78;
    if (v33 == 1)
    {
      sub_662B4((uint64_t)v16, &qword_3CB168);
      sub_662B4((uint64_t)v25, &qword_3CB168);
      uint64_t v35 = v79;
      uint64_t v36 = v77;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  sub_66444((uint64_t)v16, (uint64_t)v20, &qword_3CB168);
  if (v32(v31, 1, v11) == 1)
  {
    sub_662B4((uint64_t)v23, &qword_3CB168);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    uint64_t v1 = v70;
LABEL_7:
    sub_662B4((uint64_t)v16, &qword_3CC440);
    sub_662B4((uint64_t)v25, &qword_3CB168);
    uint64_t v35 = v79;
    goto LABEL_10;
  }
  uint64_t v37 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v68, v31, v11);
  sub_14473C();
  char v38 = sub_2E43D0();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v12 + 8);
  v39(v37, v11);
  sub_662B4((uint64_t)v23, &qword_3CB168);
  v39(v20, v11);
  sub_662B4((uint64_t)v16, &qword_3CB168);
  sub_662B4((uint64_t)v25, &qword_3CB168);
  uint64_t v1 = v70;
  uint64_t v34 = v78;
  uint64_t v35 = v79;
  uint64_t v36 = v77;
  if (v38)
  {
LABEL_9:
    uint64_t v40 = v69;
    sub_66444((uint64_t)v35 + v36[5], v69, &qword_3C97F0);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v40, 1, v1);
    sub_662B4(v40, &qword_3C97F0);
    if (v41 != 1)
    {
LABEL_14:
      swift_errorRelease();
      goto LABEL_16;
    }
  }
LABEL_10:
  sub_71044(v35, v35[3]);
  uint64_t v42 = sub_2E37A0();
  unint64_t v44 = v43;
  if (qword_3C65E8 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_2DF850();
  sub_58BA0(v45, (uint64_t)qword_3CD288);
  swift_errorRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  char v46 = sub_2DF830();
  os_log_type_t v47 = sub_2E48F0();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = (void *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_5F150(v42, v44, &v81);
    sub_2E4B40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2112;
    uint64_t v50 = sub_2DDC60();
    uint64_t v80 = v50;
    sub_2E4B40();
    *uint64_t v49 = v50;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v46, v47, "Error occurred when loading page intent %s: %@", (uint8_t *)v48, 0x16u);
    sub_63BAC(&qword_3D20E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_14;
  }
  swift_errorRelease();
  swift_bridgeObjectRelease_n();
  swift_errorRelease();
  swift_errorRelease();

LABEL_16:
  uint64_t v51 = sub_2DF4B0();
  swift_errorRelease();
  if (v51)
  {
    uint64_t v52 = v77;
    uint64_t v53 = v79;
    uint64_t v54 = v72;
    sub_66444((uint64_t)v79 + v77[9], v72, &qword_3C97F0);
    uint64_t v55 = v78;
    int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v54, 1, v1);
    uint64_t v57 = (uint64_t)v76;
    uint64_t v58 = v73;
    if (v56 == 1)
    {
      sub_66444((uint64_t)v53 + v52[5], v73, &qword_3C97F0);
      sub_662B4(v54, &qword_3C97F0);
    }
    else
    {
      sub_12FF90(v54, v73, (uint64_t (*)(void))type metadata accessor for Page);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v1);
    }
    sub_12FF28(v58, (uint64_t)v53 + v52[6]);
  }
  else
  {
    uint64_t v52 = v77;
    uint64_t v53 = v79;
    uint64_t v59 = (uint64_t)v79 + v77[6];
    sub_662B4(v59, &qword_3C97F0);
    uint64_t v55 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v59, 1, 1, v1);
    uint64_t v57 = (uint64_t)v76;
  }
  uint64_t v60 = v52[7];
  if (*((unsigned char *)v53 + v60) == 1)
  {
    *((unsigned char *)v53 + v60) = 0;
    uint64_t v61 = (uint64_t)v53 + v52[5];
    sub_662B4(v61, &qword_3C97F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v61, 1, 1, v1);
  }
  sub_2DF490();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1, v1) == 1)
  {
    sub_662B4(v57, &qword_3C97F0);
    uint64_t v62 = (uint64_t)v53 + v52[9];
    sub_662B4(v62, &qword_3C97F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v62, 1, 1, v1);
  }
  else
  {
    uint64_t v64 = v71;
    sub_12FF90(v57, v71, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v65 = (uint64_t)v53 + v52[9];
    sub_662B4(v65, &qword_3C97F0);
    sub_12FF90(v64, v65, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
    v66(v65, 0, 1, v1);
    uint64_t v67 = (uint64_t)v53 + v52[5];
    sub_662B4(v67, &qword_3C97F0);
    return v66(v67, 1, 1, v1);
  }
}

uint64_t sub_12E538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageContent.PageInfo(0) + 32);
  uint64_t v4 = sub_63BAC(&qword_3CAF50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_12E5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3C97F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - v11;
  sub_63BAC(&qword_3CAF50);
  uint64_t v13 = sub_2DF4B0();
  swift_errorRelease();
  if (v13)
  {
    uint64_t v14 = v2 + *(int *)(v4 + 20);
    sub_66444(v14, (uint64_t)v10, &qword_3C97F0);
    uint64_t v15 = type metadata accessor for Page();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) == 1)
    {
      sub_662B4((uint64_t)v10, &qword_3C97F0);
    }
    else
    {
      int v20 = v10[*(int *)(v15 + 72)];
      sub_12FEC8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Page);
      if (v20 == 1) {
        return sub_66444(v14, a1, &qword_3C97F0);
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a1, 1, 1, v15);
  }
  else
  {
    sub_66444(v2 + *(int *)(v4 + 36), (uint64_t)v12, &qword_3C97F0);
    sub_13165C(v2, (uint64_t)v6, type metadata accessor for PageContent.PageInfo);
    uint64_t v17 = type metadata accessor for Page();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
    {
      sub_66444((uint64_t)&v6[*(int *)(v4 + 20)], a1, &qword_3C97F0);
      sub_12FEC8((uint64_t)v6, type metadata accessor for PageContent.PageInfo);
      return sub_662B4((uint64_t)v12, &qword_3C97F0);
    }
    else
    {
      sub_12FEC8((uint64_t)v6, type metadata accessor for PageContent.PageInfo);
      sub_12FF90((uint64_t)v12, a1, (uint64_t (*)(void))type metadata accessor for Page);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
    }
  }
}

uint64_t sub_12E900(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C97F0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v44 - v6;
  uint64_t v8 = type metadata accessor for Page();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v46 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v44 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v44 - v15);
  sub_66444(a1, (uint64_t)v7, &qword_3C97F0);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v17(v7, 1, v8) == 1)
  {
    sub_662B4(a1, &qword_3C97F0);
    return sub_662B4((uint64_t)v7, &qword_3C97F0);
  }
  uint64_t v45 = v14;
  sub_12FF90((uint64_t)v7, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Page);
  uint64_t v19 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v20 = v47 + *(int *)(v19 + 36);
  sub_66444(v20, (uint64_t)v5, &qword_3C97F0);
  unsigned int v21 = v17(v5, 1, v8);
  sub_662B4((uint64_t)v5, &qword_3C97F0);
  if (v21 != 1)
  {
    sub_662B4(a1, &qword_3C97F0);
    sub_662B4(v20, &qword_3C97F0);
    sub_12FF90((uint64_t)v16, v20, (uint64_t (*)(void))type metadata accessor for Page);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v8);
  }
  uint64_t v22 = v47;
  sub_63BAC(&qword_3CAF50);
  uint64_t v23 = sub_2DF4B0();
  swift_errorRelease();
  if (v23 && *((unsigned char *)v16 + *(int *)(v8 + 72)) == 1)
  {
    sub_662B4(a1, &qword_3C97F0);
    uint64_t v24 = v22 + *(int *)(v19 + 20);
    sub_662B4(v24, &qword_3C97F0);
    sub_12FF90((uint64_t)v16, v24, (uint64_t (*)(void))type metadata accessor for Page);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v24, 0, 1, v8);
  }
  if (!sub_2DF4B0())
  {
    if (qword_3C65E8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_2DF850();
    sub_58BA0(v36, (uint64_t)qword_3CD288);
    uint64_t v37 = v46;
    sub_13165C((uint64_t)v16, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for Page);
    char v38 = sub_2DF830();
    os_log_type_t v39 = sub_2E48F0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v47 = a1;
      uint64_t v41 = *v37;
      unint64_t v42 = v37[1];
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_5F150(v41, v42, &v49);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      sub_12FEC8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for Page);
      _os_log_impl(&dword_0, v38, v39, "Received updated page model for %s, but the page intent result hasn't been loaded yet.", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v43 = v47;
LABEL_20:
      sub_662B4(v43, &qword_3C97F0);
      uint64_t v35 = (uint64_t)v16;
      return sub_12FEC8(v35, (uint64_t (*)(void))type metadata accessor for Page);
    }

    sub_12FEC8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for Page);
LABEL_19:
    uint64_t v43 = a1;
    goto LABEL_20;
  }
  if (qword_3C65E8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_2DF850();
  sub_58BA0(v25, (uint64_t)qword_3CD288);
  uint64_t v26 = v45;
  sub_13165C((uint64_t)v16, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for Page);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v27 = sub_2DF830();
  os_log_type_t v28 = sub_2E48F0();
  if (!os_log_type_enabled(v27, v28))
  {

    swift_errorRelease();
    swift_errorRelease();
    sub_12FEC8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Page);
    swift_errorRelease();
    goto LABEL_19;
  }
  uint64_t v29 = swift_slowAlloc();
  char v46 = v16;
  uint64_t v30 = v29;
  uint64_t v31 = (void *)swift_slowAlloc();
  uint64_t v49 = swift_slowAlloc();
  *(_DWORD *)uint64_t v30 = 136315394;
  uint64_t v47 = a1;
  uint64_t v33 = *v26;
  unint64_t v32 = v26[1];
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_5F150(v33, v32, &v49);
  sub_2E4B40();
  swift_bridgeObjectRelease();
  sub_12FEC8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Page);
  *(_WORD *)(v30 + 12) = 2112;
  uint64_t v34 = sub_2DDC60();
  uint64_t v48 = v34;
  sub_2E4B40();
  *uint64_t v31 = v34;
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl(&dword_0, v27, v28, "Received updated page model for %s, but the intent is in error state (%@) and the page is invalid as an error fallback.", (uint8_t *)v30, 0x16u);
  sub_63BAC(&qword_3D20E0);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  swift_errorRelease();
  sub_662B4(v47, &qword_3C97F0);
  uint64_t v35 = (uint64_t)v46;
  return sub_12FEC8(v35, (uint64_t (*)(void))type metadata accessor for Page);
}

uint64_t sub_12F0B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_63BAC(&qword_3CC450);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CB0B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3C97E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v55 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_2E38D0();
  __chkstk_darwin(v13 - 8);
  uint64_t v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2DE7F0();
  __chkstk_darwin(v15 - 8);
  uint64_t v52 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  os_log_type_t v28 = (char *)&v52 - v27;
  sub_63BAC(&qword_3CAF50);
  uint64_t v29 = sub_2DF4B0();
  swift_errorRelease();
  if (v29)
  {
    uint64_t v30 = a1;
    sub_12E5B4((uint64_t)v25);
    sub_13165C(v2, (uint64_t)v22, type metadata accessor for PageContent.PageInfo);
    uint64_t v31 = type metadata accessor for Page();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v25, 1, v31) == 1)
    {
      sub_66444((uint64_t)&v22[*(int *)(v17 + 24)], (uint64_t)v28, &qword_3C97F0);
      sub_12FEC8((uint64_t)v22, type metadata accessor for PageContent.PageInfo);
      sub_662B4((uint64_t)v25, &qword_3C97F0);
    }
    else
    {
      sub_12FEC8((uint64_t)v22, type metadata accessor for PageContent.PageInfo);
      sub_12FF90((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Page);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
    }
    a1 = v30;
  }
  else
  {
    sub_12E5B4((uint64_t)v28);
  }
  uint64_t v33 = type metadata accessor for Page();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v28, 1, v33) != 1) {
    return sub_12FF90((uint64_t)v28, (uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Page);
  }
  sub_662B4((uint64_t)v28, &qword_3C97F0);
  if (qword_3C65E8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_2DF850();
  sub_58BA0(v34, (uint64_t)qword_3CD288);
  sub_13165C(v2, (uint64_t)v19, type metadata accessor for PageContent.PageInfo);
  uint64_t v35 = sub_2DF830();
  os_log_type_t v36 = sub_2E4900();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    v61[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315138;
    unint64_t v38 = sub_12F900();
    uint64_t v59 = sub_5F150(v38, v39, v61);
    sub_2E4B40();
    swift_bridgeObjectRelease();
    sub_12FEC8((uint64_t)v19, type metadata accessor for PageContent.PageInfo);
    _os_log_impl(&dword_0, v35, v36, "Trying to get a page from %s when the page isn't loaded. Probably a bug in RootView.", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_12FEC8((uint64_t)v19, type metadata accessor for PageContent.PageInfo);
  }

  uint64_t v41 = (uint64_t)v52;
  sub_2DE7C0();
  uint64_t v42 = (uint64_t)v53;
  sub_2E38C0();
  LOBYTE(v59) = 0;
  uint64_t v43 = sub_2DF5D0();
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
  uint64_t v45 = (uint64_t)v54;
  v44(v54, 1, 1, v43);
  uint64_t v46 = (uint64_t)v55;
  v44(v55, 1, 1, v43);
  uint64_t v47 = sub_2E0980();
  uint64_t v48 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v58, 1, 1, v47);
  sub_63BAC(&qword_3C80D8);
  sub_2E14D0();
  sub_71AA4((unint64_t *)&qword_3CC458, &qword_3CC450);
  uint64_t v49 = v57;
  uint64_t v50 = sub_2E14E0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v6, v49);
  swift_beginAccess();
  char v60 = byte_3C87E8;
  unint64_t v51 = sub_63760((uint64_t)_swiftEmptyArrayStorage);
  return sub_181050(v41, v42, (uint64_t)_swiftEmptyArrayStorage, (unsigned __int8 *)&v59, (uint64_t)_swiftEmptyArrayStorage, 0, 0, v45, a1, v46, (unsigned __int8 *)&v60, 0, v51, v48, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v50, 0);
}

unint64_t sub_12F900()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v2);
  uint64_t v42 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Page();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v42 - v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v42 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v44 = v2;
  sub_63BAC(&qword_3CAF50);
  sub_2DF490();
  sub_66444((uint64_t)v18, (uint64_t)v15, &qword_3C97F0);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v46 = v5 + 48;
  uint64_t v47 = v4;
  uint64_t v43 = v19;
  unsigned int v20 = v19((uint64_t)v15, 1, v4);
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (v20 != 1)
  {
    sub_12FF90((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Page);
    unint64_t v48 = 0x203A646564616F6CLL;
    unint64_t v49 = 0xE800000000000000;
    uint64_t v23 = *v7;
    uint64_t v24 = (void *)v7[1];
    swift_bridgeObjectRetain();
    v50._countAndFlagsBits = v23;
    v50._object = v24;
    sub_2E44C0(v50);
    swift_bridgeObjectRelease();
    uint64_t v21 = v48;
    uint64_t v22 = (void *)v49;
    sub_12FEC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Page);
  }
  sub_662B4((uint64_t)v18, &qword_3C97F0);
  uint64_t v25 = v42;
  sub_13165C((uint64_t)v1, v42, type metadata accessor for PageContent.PageInfo);
  if (v22)
  {
    uint64_t v26 = v44;
  }
  else
  {
    uint64_t v26 = v44;
    uint64_t v22 = (void *)0xE700000000000000;
    if (sub_2DF4B0())
    {
      unint64_t v48 = 0x203A726F727265;
      unint64_t v49 = 0xE700000000000000;
      uint64_t v27 = (void *)sub_2DDC60();
      id v28 = [v27 description];
      uint64_t v29 = sub_2E4420();
      uint64_t v31 = v30;

      v51._countAndFlagsBits = v29;
      v51._object = v31;
      sub_2E44C0(v51);

      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v21 = v48;
      uint64_t v22 = (void *)v49;
    }
    else
    {
      uint64_t v21 = 0x676E6964616F6CLL;
    }
  }
  sub_12FEC8(v25, type metadata accessor for PageContent.PageInfo);
  unint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_2E4C50(42);
  swift_bridgeObjectRelease();
  unint64_t v48 = 0xD000000000000015;
  unint64_t v49 = 0x8000000000317500;
  sub_71044(v1, v1[3]);
  v52._countAndFlagsBits = sub_2E37A0();
  sub_2E44C0(v52);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 8236;
  v53._object = (void *)0xE200000000000000;
  sub_2E44C0(v53);
  v54._countAndFlagsBits = v21;
  v54._object = v22;
  sub_2E44C0(v54);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 0x616974696E69202CLL;
  v55._object = (void *)0xEB00000000203A6CLL;
  sub_2E44C0(v55);
  uint64_t v32 = (uint64_t)v1 + *(int *)(v26 + 20);
  sub_66444(v32, (uint64_t)v12, &qword_3C97F0);
  uint64_t v33 = v47;
  uint64_t v34 = v43;
  if (v43((uint64_t)v12, 1, v47) == 1)
  {
    sub_662B4((uint64_t)v12, &qword_3C97F0);
    uint64_t v35 = (void *)0xE300000000000000;
    uint64_t v36 = 7104878;
  }
  else
  {
    uint64_t v36 = *v12;
    uint64_t v35 = (void *)v12[1];
    swift_bridgeObjectRetain();
    sub_12FEC8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Page);
  }
  v56._countAndFlagsBits = v36;
  v56._object = v35;
  sub_2E44C0(v56);
  swift_bridgeObjectRelease();
  uint64_t v37 = v45;
  sub_66444(v32, v45, &qword_3C97F0);
  if (v34(v37, 1, v33) == 1)
  {
    sub_662B4(v37, &qword_3C97F0);
    v38._countAndFlagsBits = 0;
    unint64_t v39 = (void *)0xE000000000000000;
  }
  else
  {
    int v40 = *(unsigned __int8 *)(v37 + *(int *)(v33 + 72));
    sub_12FEC8(v37, (uint64_t (*)(void))type metadata accessor for Page);
    if (v40) {
      v38._countAndFlagsBits = 0xD000000000000010;
    }
    else {
      v38._countAndFlagsBits = 0;
    }
    if (v40) {
      unint64_t v39 = (void *)0x8000000000317520;
    }
    else {
      unint64_t v39 = (void *)0xE000000000000000;
    }
  }
  v38._object = v39;
  sub_2E44C0(v38);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t type metadata accessor for PageContent(uint64_t a1)
{
  return sub_6E6E0(a1, (uint64_t *)&unk_3CC298);
}

uint64_t sub_12FEC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_12FF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C97F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_12FF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PageContent.ContentType(uint64_t a1)
{
  return sub_6E6E0(a1, (uint64_t *)&unk_3CC350);
}

uint64_t sub_130018@<X0>(uint64_t *a1@<X8>)
{
  return sub_12F0B8(a1);
}

uint64_t sub_13003C(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Page();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13165C(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Page);
  sub_13165C((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Page);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_12E900((uint64_t)v4);
  return sub_12FEC8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Page);
}

uint64_t PageContent.contentTransitionAnimation.getter()
{
  uint64_t v0 = sub_2E3230();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E3220();
  uint64_t v4 = sub_2E3490();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1302AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3C97F8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66310(a2, (uint64_t)v13);
  sub_66444(a1, (uint64_t)v10, &qword_3C97F8);
  sub_2E3140();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v7);
  sub_65CF4(v13, (uint64_t)v7);
  v7[*(int *)(v5 + 36)] = 1;
  sub_2E3150();
  return sub_662B4((uint64_t)v10, &qword_3C97F8);
}

unint64_t sub_1303EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v91 = a1;
  uint64_t v85 = a2;
  uint64_t v90 = type metadata accessor for Page();
  uint64_t v4 = __chkstk_darwin(v90);
  uint64_t v83 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v84 = (uint64_t)&v81 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v86 = (uint64_t)&v81 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v87 = (uint64_t)&v81 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v81 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v81 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v89 = (uint64_t)&v81 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v81 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v81 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = sub_63BAC(&qword_3C6F10);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v82 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t *)((char *)&v81 - v31);
  uint64_t v33 = a3;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v34((char *)&v81 - v31, v33, v27);
  unint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 88))(v32, v27);
  if (result == enum case for PageUpdateInstruction.replacePage<A, B>(_:)) {
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8))(v32, v27);
  }
  if (result == enum case for PageUpdateInstruction.appendShelves<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v36 = *(void *)(*v32 + 16);
    uint64_t v37 = v91;
    sub_13165C(v91, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Page);
    if (v36)
    {
      Swift::String v38 = &v26[*(int *)(v90 + 52)];
      uint64_t v39 = swift_bridgeObjectRetain();
      sub_1112BC(v39);
      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v41 = sub_110F84(v40);
      swift_bridgeObjectRelease_n();
      *(void *)Swift::String v38 = v41;
    }
    sub_12FEC8(v37, (uint64_t (*)(void))type metadata accessor for Page);
    swift_bridgeObjectRelease();
    uint64_t v50 = (uint64_t)v26;
    uint64_t v51 = v37;
    return sub_12FF90(v50, v51, (uint64_t (*)(void))type metadata accessor for Page);
  }
  if (result == enum case for PageUpdateInstruction.replaceShelves<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v42 = v91;
    uint64_t v43 = v92;
    Page.updatingShelves(from:)(*v32, (uint64_t)v24);
    if (v43) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  if (result == enum case for PageUpdateInstruction.removeShelves<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v44 = sub_2D6F50(*v32);
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v44 + 16);
    uint64_t v46 = v91;
    sub_13165C(v91, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Page);
    if (!v45)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      sub_12FEC8(v46, (uint64_t (*)(void))type metadata accessor for Page);
      uint64_t v50 = (uint64_t)v21;
      uint64_t v51 = v46;
      return sub_12FF90(v50, v51, (uint64_t (*)(void))type metadata accessor for Page);
    }
    uint64_t v47 = (unint64_t *)&v21[*(int *)(v90 + 52)];
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_18B890(v47, v44);
    unint64_t result = swift_bridgeObjectRelease();
    int64_t v49 = *(void *)(*v47 + 16);
    if (v49 >= v48)
    {
      sub_18BDC8(v48, v49);
      goto LABEL_28;
    }
    __break(1u);
    goto LABEL_62;
  }
  if (result == enum case for PageUpdateInstruction.removeShelvesAfter<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v52 = v32[1];
    uint64_t v53 = v91;
    uint64_t v54 = *(void *)(v91 + *(int *)(v90 + 52));
    unint64_t v55 = *(void *)(v54 + 16);
    if (!v55) {
      goto LABEL_36;
    }
    uint64_t v56 = *v32;
    unint64_t v57 = 0;
    uint64_t v58 = *(void *)(type metadata accessor for Shelf() - 8);
    uint64_t v59 = *(void *)(v58 + 72);
    char v60 = (void *)(((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))
                   + v54
                   + 8);
    while (1)
    {
      BOOL v61 = *(v60 - 1) == v56 && *v60 == v52;
      if (v61 || (sub_2E5020() & 1) != 0) {
        break;
      }
      char v60 = (void *)((char *)v60 + v59);
      if (v55 == ++v57) {
        goto LABEL_36;
      }
    }
    unint64_t v64 = v55 - v57;
    if (v55 > v57)
    {
      uint64_t v65 = v89;
      sub_13165C(v53, v89, (uint64_t (*)(void))type metadata accessor for Page);
      unint64_t result = v64 - 1;
      if (__OFSUB__(v64, 1))
      {
LABEL_62:
        __break(1u);
        return result;
      }
      sub_188518(result);
    }
    else
    {
LABEL_36:
      uint64_t v65 = v89;
      sub_13165C(v53, v89, (uint64_t (*)(void))type metadata accessor for Page);
    }
    swift_bridgeObjectRelease();
    sub_12FEC8(v53, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v50 = v65;
    uint64_t v51 = v53;
    return sub_12FF90(v50, v51, (uint64_t (*)(void))type metadata accessor for Page);
  }
  if (result == enum case for PageUpdateInstruction.appendItems<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v42 = v91;
    uint64_t v62 = v92;
    Page.appendingItems(from:)(*v32, (uint64_t)v16);
    if (v62) {
      return swift_bridgeObjectRelease();
    }
    sub_12FEC8(v42, (uint64_t (*)(void))type metadata accessor for Page);
    swift_bridgeObjectRelease();
    uint64_t v50 = (uint64_t)v16;
    goto LABEL_32;
  }
  if (result == enum case for PageUpdateInstruction.removeItems<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v24 = v88;
    uint64_t v42 = v91;
    uint64_t v63 = v92;
    Page.removingItems(from:)(*v32, (uint64_t)v88);
    if (v63) {
      return swift_bridgeObjectRelease();
    }
LABEL_31:
    sub_12FEC8(v42, (uint64_t (*)(void))type metadata accessor for Page);
    swift_bridgeObjectRelease();
    uint64_t v50 = (uint64_t)v24;
LABEL_32:
    uint64_t v51 = v42;
    return sub_12FF90(v50, v51, (uint64_t (*)(void))type metadata accessor for Page);
  }
  uint64_t v66 = v91;
  if (result == enum case for PageUpdateInstruction.replaceItems<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v67 = v87;
    uint64_t v68 = v92;
    Page.updatingItems(from:)(*v32, v87);
LABEL_40:
    if (v68) {
      return swift_bridgeObjectRelease();
    }
    sub_12FEC8(v66, (uint64_t (*)(void))type metadata accessor for Page);
    swift_bridgeObjectRelease();
    uint64_t v50 = v67;
    uint64_t v51 = v66;
    return sub_12FF90(v50, v51, (uint64_t (*)(void))type metadata accessor for Page);
  }
  if (result == enum case for PageUpdateInstruction.replaceTrailingToolbarItems<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v69 = *v32;
    uint64_t v70 = v86;
    sub_13165C(v66, v86, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v71 = *(int *)(v90 + 44);
    swift_bridgeObjectRelease();
    *(void *)(v70 + v71) = v69;
    sub_12FEC8(v66, (uint64_t (*)(void))type metadata accessor for Page);
    return sub_12FF90(v70, v66, (uint64_t (*)(void))type metadata accessor for Page);
  }
  if (result == enum case for PageUpdateInstruction.replaceShelfHeaders<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v67 = v84;
    uint64_t v68 = v92;
    Page.updatingShelfHeader(from:)(*v32, v84);
    goto LABEL_40;
  }
  if (result == enum case for PageUpdateInstruction.replaceShelfFooters<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v67 = v83;
    uint64_t v68 = v92;
    Page.updatingShelfFooter(from:)(*v32, v83);
    goto LABEL_40;
  }
  if (result == enum case for PageUpdateInstruction.presentAlert<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v72 = v85;
    sub_662B4(v85, &qword_3CB0C0);
    uint64_t v73 = sub_2DFA90();
    uint64_t v74 = *(void *)(v73 - 8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v74 + 32))(v72, v32, v73);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v72, 0, 1, v73);
  }
  if (result == enum case for PageUpdateInstruction.compound<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v32, v27);
    uint64_t v75 = *v32;
    uint64_t v76 = *(void *)(v75 + 16);
    if (v76)
    {
      unint64_t v77 = v75 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v90 = v28 + 8;
      uint64_t v78 = *(void *)(v28 + 72);
      uint64_t v79 = v82;
      while (1)
      {
        v34(v79, v77, v27);
        uint64_t v80 = v92;
        sub_1303EC(v66, v85, v79);
        uint64_t v92 = v80;
        if (v80) {
          break;
        }
        (*(void (**)(char *, uint64_t))v90)(v79, v27);
        v77 += v78;
        if (!--v76) {
          return swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(char *, uint64_t))v90)(v79, v27);
    }
    return swift_bridgeObjectRelease();
  }
  if (result == enum case for PageUpdateInstruction.startPendingData<A, B>(_:))
  {
    *(unsigned char *)(v91 + *(int *)(v90 + 84)) = 1;
  }
  else
  {
    if (result != enum case for PageUpdateInstruction.stopPendingData<A, B>(_:)) {
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8))(v32, v27);
    }
    *(unsigned char *)(v91 + *(int *)(v90 + 84)) = 0;
  }
  return result;
}

uint64_t sub_130FA0()
{
  uint64_t v0 = type metadata accessor for PageAlert(0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  uint64_t v5 = &v14[-v4];
  uint64_t v6 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_63BAC(&qword_3C97F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Page();
  uint64_t v11 = swift_projectBox();
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  sub_13165C(v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Page);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_63BAC(&qword_3C97F8);
  sub_2E3140();
  sub_12E900((uint64_t)v9);
  sub_2E3150();
  swift_beginAccess();
  sub_13165C(v12, (uint64_t)v5, type metadata accessor for PageAlert);
  type metadata accessor for PageContent(0);
  sub_13165C((uint64_t)v5, (uint64_t)v3, type metadata accessor for PageAlert);
  sub_63BAC(&qword_3CB0A0);
  sub_2E3150();
  return sub_12FEC8((uint64_t)v5, type metadata accessor for PageAlert);
}

uint64_t sub_131234(uint64_t a1, int a2)
{
  return PageContent.update(with:animated:)(a1, a2);
}

uint64_t sub_13124C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_131264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PageContent.PageInfo(0) + 32);
  uint64_t v4 = sub_63BAC(&qword_3CAF50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_1312E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PageContent.PageInfo(0) + 32);
  uint64_t v4 = sub_63BAC(&qword_3CAF50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_131364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3CAF50);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = type metadata accessor for PageContent.PageInfo(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(a2 + *(int *)(v9 + 32), v8, v4);
  sub_12DA68();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_131484(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t v6 = sub_2E3990();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = sub_71044(a1, a1[3]);
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(char *, __n128))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_2E39A0();
  swift_getWitnessTable();
  sub_2E29D0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_13165C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1316CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1316F4()
{
  uint64_t v1 = v0;
  uint64_t v58 = type metadata accessor for PageContent(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v58 - 8) + 80);
  uint64_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
  uint64_t v60 = (v2 + 16) & ~v2;
  uint64_t v3 = v0 + v60;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + v60);
  uint64_t v4 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = v0 + v60 + v4[5];
  uint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v53 = v7;
    uint64_t v55 = v2;
    uint64_t v57 = v0;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = sub_2DF5D0();
    uint64_t v10 = *(void *)(v9 - 8);
    __n128 v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = v5 + v6[6];
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    uint64_t v13 = v5 + v6[9];
    uint64_t v14 = sub_2E0980();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v2 = v55;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[15];
    uint64_t v17 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v5 + v6[17];
    uint64_t v19 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v1 = v57;
    uint64_t v7 = v53;
    if (*(void *)(v5 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = v3 + v4[6];
  if (!v7(v20, 1, v6))
  {
    uint64_t v54 = v7;
    uint64_t v56 = v2;
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + v6[5];
    uint64_t v22 = sub_2DF5D0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v6[6];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v6[9];
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v2 = v56;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v20 + v6[15];
    uint64_t v30 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v20 + v6[17];
    uint64_t v32 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v54;
    if (*(void *)(v20 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = v3 + v4[8];
  uint64_t v34 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = v3 + v4[9];
  if (!v7(v35, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + v6[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v6[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v6[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v35 + v6[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v35 + v6[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v48 = v3 + *(int *)(v58 + 20);
  uint64_t v49 = sub_2DFA90();
  uint64_t v50 = *(void *)(v49 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  unint64_t v51 = (v59 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_63BAC(&qword_3CB0A0);
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1 + v51);

  return _swift_deallocObject(v1, v51 + 40, v2 | 7);
}

uint64_t sub_1320A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for PageContent(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_1302AC(v0 + v2, v3);
}

uint64_t sub_132134()
{
  uint64_t v1 = v0;
  uint64_t v58 = type metadata accessor for PageContent(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v58 - 8) + 80);
  uint64_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
  uint64_t v60 = (v2 + 16) & ~v2;
  uint64_t v3 = v0 + v60;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + v60);
  uint64_t v4 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = v0 + v60 + v4[5];
  uint64_t v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v52 = v7;
    uint64_t v54 = v2;
    uint64_t v56 = v0;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = sub_2DF5D0();
    uint64_t v10 = *(void *)(v9 - 8);
    __n128 v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = v5 + v6[6];
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    uint64_t v13 = v5 + v6[9];
    uint64_t v14 = sub_2E0980();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v2 = v54;
    uint64_t v1 = v56;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[15];
    uint64_t v17 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v5 + v6[17];
    uint64_t v19 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v52;
    if (*(void *)(v5 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = v3 + v4[6];
  if (!v7(v20, 1, v6))
  {
    uint64_t v53 = v7;
    uint64_t v55 = v2;
    uint64_t v57 = v1;
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + v6[5];
    uint64_t v22 = sub_2DF5D0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v6[6];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v6[9];
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v2 = v55;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v20 + v6[15];
    uint64_t v30 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v20 + v6[17];
    uint64_t v32 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v1 = v57;
    uint64_t v7 = v53;
    if (*(void *)(v20 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = v3 + v4[8];
  uint64_t v34 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = v3 + v4[9];
  if (!v7(v35, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + v6[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v6[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v6[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v35 + v6[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v35 + v6[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v48 = v3 + *(int *)(v58 + 20);
  uint64_t v49 = sub_2DFA90();
  uint64_t v50 = *(void *)(v49 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_63BAC(&qword_3CB0A0);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, ((((v59 + v60 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_132AF4()
{
  type metadata accessor for PageContent(0);

  return sub_130FA0();
}

uint64_t dispatch thunk of PageUpdateInstructionHandling.update(with:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void *initializeBufferWithCopyOfBuffer for PageContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
    uint64_t v7 = (int *)type metadata accessor for PageContent.PageInfo(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)v3 + v8);
    __n128 v11 = (int *)type metadata accessor for Page();
    uint64_t v162 = *((void *)v11 - 1);
    uint64_t v12 = *(unsigned int (**)(void, void, void))(v162 + 48);
    uint64_t v163 = v3;
    size_t v164 = v4;
    uint64_t v165 = v12;
    if (v12(v10, 1, v11))
    {
      uint64_t v13 = sub_63BAC(&qword_3C97F0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      long long v158 = v7;
      uint64_t v15 = v10[1];
      void *v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v11[5];
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = sub_2DF5D0();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        uint64_t v22 = sub_63BAC(&qword_3C97E8);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v23 = v11[6];
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      if (v21((char *)v10 + v23, 1, v19))
      {
        uint64_t v26 = sub_63BAC(&qword_3C97E8);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
      }
      *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
      *((unsigned char *)v9 + v11[8]) = *((unsigned char *)v10 + v11[8]);
      uint64_t v27 = v11[9];
      uint64_t v28 = (char *)v9 + v27;
      uint64_t v29 = (char *)v10 + v27;
      uint64_t v30 = sub_2E0980();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_63BAC(&qword_3CB0B8);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
      *(void *)((char *)v9 + v11[11]) = *(void *)((char *)v10 + v11[11]);
      *((unsigned char *)v9 + v11[12]) = *((unsigned char *)v10 + v11[12]);
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      uint64_t v34 = (void *)((char *)v9 + v33);
      uint64_t v35 = (void *)((char *)v10 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v11[15];
      long long v154 = (char *)v10 + v37;
      uint64_t v156 = (char *)v9 + v37;
      uint64_t v38 = sub_2DE7F0();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v156, v154, v38);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      uint64_t v40 = v11[17];
      uint64_t v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      uint64_t v43 = sub_2E38D0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      *((unsigned char *)v9 + v11[18]) = *((unsigned char *)v10 + v11[18]);
      *(void *)((char *)v9 + v11[19]) = *(void *)((char *)v10 + v11[19]);
      *(void *)((char *)v9 + v11[20]) = *(void *)((char *)v10 + v11[20]);
      *((unsigned char *)v9 + v11[21]) = *((unsigned char *)v10 + v11[21]);
      uint64_t v45 = v11[22];
      uint64_t v46 = (void *)((char *)v9 + v45);
      uint64_t v47 = (void *)((char *)v10 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v11[23];
      uint64_t v50 = (char *)v9 + v49;
      unint64_t v51 = (char *)v10 + v49;
      uint64_t v52 = *(void *)((char *)v10 + v49 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v52)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = v52;
        *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
        *((void *)v50 + 4) = *((void *)v51 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v53 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v53;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
      uint64_t v3 = v163;
      uint64_t v4 = v164;
      uint64_t v12 = v165;
      (*(void (**)(void *, void, uint64_t, int *))(v162 + 56))(v9, 0, 1, v11);
      uint64_t v7 = v158;
    }
    uint64_t v54 = v7[6];
    uint64_t v55 = (void *)((char *)v4 + v54);
    uint64_t v56 = (uint64_t *)((char *)v3 + v54);
    if (v12((char *)v3 + v54, 1, v11))
    {
      uint64_t v57 = sub_63BAC(&qword_3C97F0);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      uint64_t v159 = v7;
      uint64_t v58 = v56[1];
      void *v55 = *v56;
      v55[1] = v58;
      uint64_t v59 = v11[5];
      uint64_t v60 = (char *)v55 + v59;
      BOOL v61 = (char *)v56 + v59;
      uint64_t v62 = sub_2DF5D0();
      uint64_t v63 = *(void *)(v62 - 8);
      unint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      swift_bridgeObjectRetain();
      if (v64(v61, 1, v62))
      {
        uint64_t v65 = sub_63BAC(&qword_3C97E8);
        memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v66 = v11[6];
      uint64_t v67 = (char *)v55 + v66;
      uint64_t v68 = (char *)v56 + v66;
      if (v64((char *)v56 + v66, 1, v62))
      {
        uint64_t v69 = sub_63BAC(&qword_3C97E8);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v67, v68, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v62);
      }
      *((unsigned char *)v55 + v11[7]) = *((unsigned char *)v56 + v11[7]);
      *((unsigned char *)v55 + v11[8]) = *((unsigned char *)v56 + v11[8]);
      uint64_t v70 = v11[9];
      uint64_t v71 = (char *)v55 + v70;
      uint64_t v72 = (char *)v56 + v70;
      uint64_t v73 = sub_2E0980();
      uint64_t v74 = *(void *)(v73 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        uint64_t v75 = sub_63BAC(&qword_3CB0B8);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      *(void *)((char *)v55 + v11[10]) = *(void *)((char *)v56 + v11[10]);
      *(void *)((char *)v55 + v11[11]) = *(void *)((char *)v56 + v11[11]);
      *((unsigned char *)v55 + v11[12]) = *((unsigned char *)v56 + v11[12]);
      *(void *)((char *)v55 + v11[13]) = *(void *)((char *)v56 + v11[13]);
      uint64_t v76 = v11[14];
      unint64_t v77 = (void *)((char *)v55 + v76);
      uint64_t v78 = (void *)((char *)v56 + v76);
      uint64_t v79 = v78[1];
      *unint64_t v77 = *v78;
      v77[1] = v79;
      uint64_t v80 = v11[15];
      long long v155 = (char *)v56 + v80;
      long long v157 = (char *)v55 + v80;
      uint64_t v81 = sub_2DE7F0();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v157, v155, v81);
      *(void *)((char *)v55 + v11[16]) = *(void *)((char *)v56 + v11[16]);
      uint64_t v83 = v11[17];
      uint64_t v84 = (char *)v55 + v83;
      uint64_t v85 = (char *)v56 + v83;
      uint64_t v86 = sub_2E38D0();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v86);
      *((unsigned char *)v55 + v11[18]) = *((unsigned char *)v56 + v11[18]);
      *(void *)((char *)v55 + v11[19]) = *(void *)((char *)v56 + v11[19]);
      *(void *)((char *)v55 + v11[20]) = *(void *)((char *)v56 + v11[20]);
      *((unsigned char *)v55 + v11[21]) = *((unsigned char *)v56 + v11[21]);
      uint64_t v88 = v11[22];
      uint64_t v89 = (void *)((char *)v55 + v88);
      uint64_t v90 = (void *)((char *)v56 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v11[23];
      unint64_t v93 = (char *)v55 + v92;
      unint64_t v94 = (char *)v56 + v92;
      uint64_t v95 = *(void *)((char *)v56 + v92 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v95)
      {
        *(void *)unint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        *((_OWORD *)v93 + 1) = *((_OWORD *)v94 + 1);
        *((void *)v93 + 4) = *((void *)v94 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v96 = *((_OWORD *)v94 + 1);
        *(_OWORD *)unint64_t v93 = *(_OWORD *)v94;
        *((_OWORD *)v93 + 1) = v96;
        *((void *)v93 + 4) = *((void *)v94 + 4);
      }
      uint64_t v3 = v163;
      uint64_t v4 = v164;
      (*(void (**)(void *, void, uint64_t, int *))(v162 + 56))(v55, 0, 1, v11);
      uint64_t v7 = v159;
    }
    *((unsigned char *)v4 + v7[7]) = *((unsigned char *)v3 + v7[7]);
    uint64_t v97 = v7[8];
    uint64_t v98 = (char *)v4 + v97;
    uint64_t v99 = (uint64_t)v3 + v97;
    uint64_t v100 = sub_63BAC(&qword_3CAF50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = v7[9];
    unint64_t v102 = (void *)((char *)v4 + v101);
    uint64_t v103 = (uint64_t *)((char *)v3 + v101);
    if (v165((char *)v3 + v101, 1, v11))
    {
      uint64_t v104 = sub_63BAC(&qword_3C97F0);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      uint64_t v105 = v103[1];
      *unint64_t v102 = *v103;
      v102[1] = v105;
      uint64_t v106 = v11[5];
      uint64_t v107 = (char *)v102 + v106;
      uint64_t v108 = (char *)v103 + v106;
      uint64_t v109 = sub_2DF5D0();
      uint64_t v110 = *(void *)(v109 - 8);
      uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
      swift_bridgeObjectRetain();
      if (v111(v108, 1, v109))
      {
        uint64_t v112 = sub_63BAC(&qword_3C97E8);
        memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
      }
      uint64_t v113 = v11[6];
      uint64_t v114 = (char *)v102 + v113;
      uint64_t v115 = (char *)v103 + v113;
      if (v111((char *)v103 + v113, 1, v109))
      {
        uint64_t v116 = sub_63BAC(&qword_3C97E8);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v114, v115, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v114, 0, 1, v109);
      }
      *((unsigned char *)v102 + v11[7]) = *((unsigned char *)v103 + v11[7]);
      *((unsigned char *)v102 + v11[8]) = *((unsigned char *)v103 + v11[8]);
      uint64_t v117 = v11[9];
      uint64_t v118 = (char *)v102 + v117;
      uint64_t v119 = (char *)v103 + v117;
      uint64_t v120 = sub_2E0980();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        uint64_t v122 = sub_63BAC(&qword_3CB0B8);
        memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      *(void *)((char *)v102 + v11[10]) = *(void *)((char *)v103 + v11[10]);
      *(void *)((char *)v102 + v11[11]) = *(void *)((char *)v103 + v11[11]);
      *((unsigned char *)v102 + v11[12]) = *((unsigned char *)v103 + v11[12]);
      *(void *)((char *)v102 + v11[13]) = *(void *)((char *)v103 + v11[13]);
      uint64_t v123 = v11[14];
      uint64_t v124 = (void *)((char *)v102 + v123);
      uint64_t v125 = (void *)((char *)v103 + v123);
      uint64_t v126 = v125[1];
      void *v124 = *v125;
      v124[1] = v126;
      uint64_t v127 = v11[15];
      uint64_t v166 = (char *)v102 + v127;
      long long v160 = (char *)v103 + v127;
      uint64_t v128 = sub_2DE7F0();
      uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v129(v166, v160, v128);
      *(void *)((char *)v102 + v11[16]) = *(void *)((char *)v103 + v11[16]);
      uint64_t v130 = v11[17];
      uint64_t v131 = (char *)v102 + v130;
      uint64_t v132 = (char *)v103 + v130;
      uint64_t v133 = sub_2E38D0();
      uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      v134(v131, v132, v133);
      *((unsigned char *)v102 + v11[18]) = *((unsigned char *)v103 + v11[18]);
      *(void *)((char *)v102 + v11[19]) = *(void *)((char *)v103 + v11[19]);
      *(void *)((char *)v102 + v11[20]) = *(void *)((char *)v103 + v11[20]);
      *((unsigned char *)v102 + v11[21]) = *((unsigned char *)v103 + v11[21]);
      uint64_t v135 = v11[22];
      uint64_t v136 = (void *)((char *)v102 + v135);
      uint64_t v137 = (void *)((char *)v103 + v135);
      uint64_t v138 = v137[1];
      void *v136 = *v137;
      v136[1] = v138;
      uint64_t v139 = v11[23];
      uint64_t v140 = (char *)v102 + v139;
      uint64_t v141 = (char *)v103 + v139;
      uint64_t v142 = *(void *)((char *)v103 + v139 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v142)
      {
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        *((_OWORD *)v140 + 1) = *((_OWORD *)v141 + 1);
        *((void *)v140 + 4) = *((void *)v141 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v143 = *((_OWORD *)v141 + 1);
        *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
        *((_OWORD *)v140 + 1) = v143;
        *((void *)v140 + 4) = *((void *)v141 + 4);
      }
      uint64_t v3 = v163;
      uint64_t v4 = v164;
      (*(void (**)(void *, void, uint64_t, int *))(v162 + 56))(v102, 0, 1, v11);
    }
    uint64_t v144 = sub_63BAC(&qword_3C97F8);
    *(void *)((char *)v4 + *(int *)(v144 + 28)) = *(uint64_t *)((char *)v3 + *(int *)(v144 + 28));
    uint64_t v145 = *(int *)(a3 + 20);
    uint64_t v146 = (char *)v4 + v145;
    int v147 = (char *)v3 + v145;
    uint64_t v148 = sub_2DFA90();
    uint64_t v149 = *(void *)(v148 - 8);
    long long v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    swift_retain();
    if (v150(v147, 1, v148))
    {
      uint64_t v151 = sub_63BAC(&qword_3CB0C0);
      memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v146, v147, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
    }
    uint64_t v152 = sub_63BAC(&qword_3CB0A0);
    *(void *)&v146[*(int *)(v152 + 28)] = *(void *)&v147[*(int *)(v152 + 28)];
  }
  swift_retain();
  return v4;
}

uint64_t destroy for PageContent(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  uint64_t v4 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v5 = a1 + v4[5];
  long long v6 = (int *)type metadata accessor for Page();
  uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v52 = v7;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = sub_2DF5D0();
    uint64_t v10 = *(void *)(v9 - 8);
    __n128 v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = v5 + v6[6];
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    uint64_t v13 = v5 + v6[9];
    uint64_t v14 = sub_2E0980();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[15];
    uint64_t v17 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v5 + v6[17];
    uint64_t v19 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v52;
    if (*(void *)(v5 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = a1 + v4[6];
  if (!v7(v20, 1, v6))
  {
    long long v53 = v7;
    uint64_t v54 = a2;
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + v6[5];
    uint64_t v22 = sub_2DF5D0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v6[6];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v6[9];
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v20 + v6[15];
    uint64_t v30 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v20 + v6[17];
    uint64_t v32 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v53;
    a2 = v54;
    if (*(void *)(v20 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = a1 + v4[8];
  uint64_t v34 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = a1 + v4[9];
  if (!v7(v35, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + v6[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v6[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v6[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v35 + v6[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v35 + v6[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + v6[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_63BAC(&qword_3C97F8);
  swift_release();
  uint64_t v48 = a1 + *(int *)(a2 + 20);
  uint64_t v49 = sub_2DFA90();
  uint64_t v50 = *(void *)(v49 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_63BAC(&qword_3CB0A0);

  return swift_release();
}

uint64_t initializeWithCopy for PageContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(void))(v5 - 8))();
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(v4 + v7);
  uint64_t v9 = (void *)(v3 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v160 = *((void *)v10 - 1);
  __n128 v11 = *(unsigned int (**)(void, void, void))(v160 + 48);
  uint64_t v161 = v3;
  uint64_t v162 = v4;
  uint64_t v163 = v11;
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v156 = v6;
    uint64_t v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v10[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_2DF5D0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_63BAC(&qword_3C97E8);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v10[6];
    uint64_t v22 = (char *)v8 + v21;
    uint64_t v23 = (char *)v9 + v21;
    if (v19((char *)v9 + v21, 1, v17))
    {
      uint64_t v24 = sub_63BAC(&qword_3C97E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v23, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
    }
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v25 = v10[9];
    uint64_t v26 = (char *)v8 + v25;
    uint64_t v27 = (char *)v9 + v25;
    uint64_t v28 = sub_2E0980();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_63BAC(&qword_3CB0B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    uint64_t v32 = (void *)((char *)v8 + v31);
    uint64_t v33 = (void *)((char *)v9 + v31);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v10[15];
    uint64_t v152 = (char *)v9 + v35;
    long long v154 = (char *)v8 + v35;
    uint64_t v36 = sub_2DE7F0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v154, v152, v36);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v38 = v10[17];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    uint64_t v41 = sub_2E38D0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    uint64_t v43 = v10[22];
    uint64_t v44 = (void *)((char *)v8 + v43);
    uint64_t v45 = (void *)((char *)v9 + v43);
    uint64_t v46 = v45[1];
    void *v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = v10[23];
    uint64_t v48 = (char *)v8 + v47;
    uint64_t v49 = (char *)v9 + v47;
    uint64_t v50 = *(void *)((char *)v9 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((void *)v48 + 4) = *((void *)v49 + 4);
    }
    uint64_t v3 = v161;
    uint64_t v4 = v162;
    __n128 v11 = v163;
    (*(void (**)(void *, void, uint64_t, int *))(v160 + 56))(v8, 0, 1, v10);
    long long v6 = v156;
  }
  uint64_t v52 = v6[6];
  long long v53 = (void *)(v4 + v52);
  uint64_t v54 = (void *)(v3 + v52);
  if (v11(v3 + v52, 1, v10))
  {
    uint64_t v55 = sub_63BAC(&qword_3C97F0);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    long long v157 = v6;
    uint64_t v56 = v54[1];
    *long long v53 = *v54;
    v53[1] = v56;
    uint64_t v57 = v10[5];
    uint64_t v58 = (char *)v53 + v57;
    uint64_t v59 = (char *)v54 + v57;
    uint64_t v60 = sub_2DF5D0();
    uint64_t v61 = *(void *)(v60 - 8);
    uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    if (v62(v59, 1, v60))
    {
      uint64_t v63 = sub_63BAC(&qword_3C97E8);
      memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v64 = v10[6];
    uint64_t v65 = (char *)v53 + v64;
    uint64_t v66 = (char *)v54 + v64;
    if (v62((char *)v54 + v64, 1, v60))
    {
      uint64_t v67 = sub_63BAC(&qword_3C97E8);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v65, v66, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v65, 0, 1, v60);
    }
    *((unsigned char *)v53 + v10[7]) = *((unsigned char *)v54 + v10[7]);
    *((unsigned char *)v53 + v10[8]) = *((unsigned char *)v54 + v10[8]);
    uint64_t v68 = v10[9];
    uint64_t v69 = (char *)v53 + v68;
    uint64_t v70 = (char *)v54 + v68;
    uint64_t v71 = sub_2E0980();
    uint64_t v72 = *(void *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      uint64_t v73 = sub_63BAC(&qword_3CB0B8);
      memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    *(void *)((char *)v53 + v10[10]) = *(void *)((char *)v54 + v10[10]);
    *(void *)((char *)v53 + v10[11]) = *(void *)((char *)v54 + v10[11]);
    *((unsigned char *)v53 + v10[12]) = *((unsigned char *)v54 + v10[12]);
    *(void *)((char *)v53 + v10[13]) = *(void *)((char *)v54 + v10[13]);
    uint64_t v74 = v10[14];
    uint64_t v75 = (void *)((char *)v53 + v74);
    uint64_t v76 = (void *)((char *)v54 + v74);
    uint64_t v77 = v76[1];
    void *v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v10[15];
    uint64_t v153 = (char *)v54 + v78;
    long long v155 = (char *)v53 + v78;
    uint64_t v79 = sub_2DE7F0();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v155, v153, v79);
    *(void *)((char *)v53 + v10[16]) = *(void *)((char *)v54 + v10[16]);
    uint64_t v81 = v10[17];
    uint64_t v82 = (char *)v53 + v81;
    uint64_t v83 = (char *)v54 + v81;
    uint64_t v84 = sub_2E38D0();
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
    swift_bridgeObjectRetain();
    v85(v82, v83, v84);
    *((unsigned char *)v53 + v10[18]) = *((unsigned char *)v54 + v10[18]);
    *(void *)((char *)v53 + v10[19]) = *(void *)((char *)v54 + v10[19]);
    *(void *)((char *)v53 + v10[20]) = *(void *)((char *)v54 + v10[20]);
    *((unsigned char *)v53 + v10[21]) = *((unsigned char *)v54 + v10[21]);
    uint64_t v86 = v10[22];
    uint64_t v87 = (void *)((char *)v53 + v86);
    uint64_t v88 = (void *)((char *)v54 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v10[23];
    uint64_t v91 = (char *)v53 + v90;
    uint64_t v92 = (char *)v54 + v90;
    uint64_t v93 = *(void *)((char *)v54 + v90 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v93)
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      *((_OWORD *)v91 + 1) = *((_OWORD *)v92 + 1);
      *((void *)v91 + 4) = *((void *)v92 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v94 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v94;
      *((void *)v91 + 4) = *((void *)v92 + 4);
    }
    uint64_t v3 = v161;
    uint64_t v4 = v162;
    (*(void (**)(void *, void, uint64_t, int *))(v160 + 56))(v53, 0, 1, v10);
    long long v6 = v157;
  }
  *(unsigned char *)(v4 + v6[7]) = *(unsigned char *)(v3 + v6[7]);
  uint64_t v95 = v6[8];
  uint64_t v96 = v4 + v95;
  uint64_t v97 = v3 + v95;
  uint64_t v98 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
  uint64_t v99 = v6[9];
  uint64_t v100 = (void *)(v4 + v99);
  uint64_t v101 = (void *)(v3 + v99);
  if (v163(v3 + v99, 1, v10))
  {
    uint64_t v102 = sub_63BAC(&qword_3C97F0);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v103 = v101[1];
    *uint64_t v100 = *v101;
    v100[1] = v103;
    uint64_t v104 = v10[5];
    uint64_t v105 = (char *)v100 + v104;
    uint64_t v106 = (char *)v101 + v104;
    uint64_t v107 = sub_2DF5D0();
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
    swift_bridgeObjectRetain();
    if (v109(v106, 1, v107))
    {
      uint64_t v110 = sub_63BAC(&qword_3C97E8);
      memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
    }
    uint64_t v111 = v10[6];
    uint64_t v112 = (char *)v100 + v111;
    uint64_t v113 = (char *)v101 + v111;
    if (v109((char *)v101 + v111, 1, v107))
    {
      uint64_t v114 = sub_63BAC(&qword_3C97E8);
      memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v113, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v112, 0, 1, v107);
    }
    *((unsigned char *)v100 + v10[7]) = *((unsigned char *)v101 + v10[7]);
    *((unsigned char *)v100 + v10[8]) = *((unsigned char *)v101 + v10[8]);
    uint64_t v115 = v10[9];
    uint64_t v116 = (char *)v100 + v115;
    uint64_t v117 = (char *)v101 + v115;
    uint64_t v118 = sub_2E0980();
    uint64_t v119 = *(void *)(v118 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
    {
      uint64_t v120 = sub_63BAC(&qword_3CB0B8);
      memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v117, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
    }
    *(void *)((char *)v100 + v10[10]) = *(void *)((char *)v101 + v10[10]);
    *(void *)((char *)v100 + v10[11]) = *(void *)((char *)v101 + v10[11]);
    *((unsigned char *)v100 + v10[12]) = *((unsigned char *)v101 + v10[12]);
    *(void *)((char *)v100 + v10[13]) = *(void *)((char *)v101 + v10[13]);
    uint64_t v121 = v10[14];
    uint64_t v122 = (void *)((char *)v100 + v121);
    uint64_t v123 = (void *)((char *)v101 + v121);
    uint64_t v124 = v123[1];
    *uint64_t v122 = *v123;
    v122[1] = v124;
    uint64_t v125 = v10[15];
    size_t v164 = (char *)v100 + v125;
    long long v158 = (char *)v101 + v125;
    uint64_t v126 = sub_2DE7F0();
    uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v127(v164, v158, v126);
    *(void *)((char *)v100 + v10[16]) = *(void *)((char *)v101 + v10[16]);
    uint64_t v128 = v10[17];
    uint64_t v129 = (char *)v100 + v128;
    uint64_t v130 = (char *)v101 + v128;
    uint64_t v131 = sub_2E38D0();
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
    swift_bridgeObjectRetain();
    v132(v129, v130, v131);
    *((unsigned char *)v100 + v10[18]) = *((unsigned char *)v101 + v10[18]);
    *(void *)((char *)v100 + v10[19]) = *(void *)((char *)v101 + v10[19]);
    *(void *)((char *)v100 + v10[20]) = *(void *)((char *)v101 + v10[20]);
    *((unsigned char *)v100 + v10[21]) = *((unsigned char *)v101 + v10[21]);
    uint64_t v133 = v10[22];
    uint64_t v134 = (void *)((char *)v100 + v133);
    uint64_t v135 = (void *)((char *)v101 + v133);
    uint64_t v136 = v135[1];
    void *v134 = *v135;
    v134[1] = v136;
    uint64_t v137 = v10[23];
    uint64_t v138 = (char *)v100 + v137;
    uint64_t v139 = (char *)v101 + v137;
    uint64_t v140 = *(void *)((char *)v101 + v137 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v140)
    {
      *(void *)uint64_t v138 = *(void *)v139;
      *((void *)v138 + 1) = v140;
      *((_OWORD *)v138 + 1) = *((_OWORD *)v139 + 1);
      *((void *)v138 + 4) = *((void *)v139 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v141 = *((_OWORD *)v139 + 1);
      *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
      *((_OWORD *)v138 + 1) = v141;
      *((void *)v138 + 4) = *((void *)v139 + 4);
    }
    uint64_t v3 = v161;
    uint64_t v4 = v162;
    (*(void (**)(void *, void, uint64_t, int *))(v160 + 56))(v100, 0, 1, v10);
  }
  uint64_t v142 = sub_63BAC(&qword_3C97F8);
  *(void *)(v4 + *(int *)(v142 + 28)) = *(void *)(v3 + *(int *)(v142 + 28));
  uint64_t v143 = *(int *)(a3 + 20);
  uint64_t v144 = (char *)(v4 + v143);
  uint64_t v145 = (char *)(v3 + v143);
  uint64_t v146 = sub_2DFA90();
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
  swift_retain();
  if (v148(v145, 1, v146))
  {
    uint64_t v149 = sub_63BAC(&qword_3CB0C0);
    memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v145, v146);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
  }
  uint64_t v150 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v144[*(int *)(v150 + 28)] = *(void *)&v145[*(int *)(v150 + 28)];
  swift_retain();
  return v4;
}

uint64_t *assignWithCopy for PageContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  long long v5 = a1;
  sub_6FA20(a1, a2);
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (char *)v4 + v7;
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v299 = *((void *)v10 - 1);
  __n128 v11 = *(uint64_t (**)(char *, uint64_t, int *))(v299 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  long long v301 = v5;
  long long v302 = v4;
  uint64_t v300 = a3;
  long long v303 = v11;
  if (v12)
  {
    if (!v13)
    {
      uint64_t v296 = v6;
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      uint64_t v14 = v10[5];
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      uint64_t v17 = sub_2DF5D0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = sub_63BAC(&qword_3C97E8);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v30 = v10[6];
      uint64_t v31 = &v8[v30];
      uint64_t v32 = &v9[v30];
      if (v19(&v9[v30], 1, v17))
      {
        uint64_t v33 = sub_63BAC(&qword_3C97E8);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v31, v32, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
      }
      v8[v10[7]] = v9[v10[7]];
      v8[v10[8]] = v9[v10[8]];
      uint64_t v34 = v10[9];
      uint64_t v35 = &v8[v34];
      uint64_t v36 = &v9[v34];
      uint64_t v37 = sub_2E0980();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        uint64_t v39 = sub_63BAC(&qword_3CB0B8);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
      *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
      v8[v10[12]] = v9[v10[12]];
      *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
      uint64_t v40 = v10[14];
      uint64_t v41 = &v8[v40];
      uint64_t v42 = &v9[v40];
      *uint64_t v41 = *(void *)v42;
      v41[1] = *((void *)v42 + 1);
      uint64_t v43 = v10[15];
      uint64_t v292 = &v9[v43];
      uint64_t v294 = &v8[v43];
      uint64_t v44 = sub_2DE7F0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v294, v292, v44);
      *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
      uint64_t v46 = v10[17];
      uint64_t v47 = &v8[v46];
      uint64_t v48 = &v9[v46];
      uint64_t v49 = sub_2E38D0();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      v8[v10[18]] = v9[v10[18]];
      *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
      *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
      v8[v10[21]] = v9[v10[21]];
      uint64_t v51 = v10[22];
      uint64_t v52 = &v8[v51];
      long long v53 = &v9[v51];
      *uint64_t v52 = *(void *)v53;
      v52[1] = *((void *)v53 + 1);
      uint64_t v54 = v10[23];
      uint64_t v55 = &v8[v54];
      uint64_t v56 = &v9[v54];
      uint64_t v57 = *(void *)&v9[v54 + 8];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v57)
      {
        char *v55 = *(void *)v56;
        v55[1] = *((void *)v56 + 1);
        v55[2] = *((void *)v56 + 2);
        v55[3] = *((void *)v56 + 3);
        v55[4] = *((void *)v56 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v58 = *(_OWORD *)v56;
        long long v59 = *((_OWORD *)v56 + 1);
        v55[4] = *((void *)v56 + 4);
        *(_OWORD *)uint64_t v55 = v58;
        *((_OWORD *)v55 + 1) = v59;
      }
      long long v5 = v301;
      uint64_t v4 = v302;
      (*(void (**)(char *, void, uint64_t, int *))(v299 + 56))(v8, 0, 1, v10);
      long long v6 = v296;
      __n128 v11 = v303;
      goto LABEL_22;
    }
LABEL_7:
    uint64_t v21 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_22;
  }
  if (v13)
  {
    sub_12FEC8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Page);
    goto LABEL_7;
  }
  long long v297 = v6;
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[5];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  uint64_t v25 = sub_2DF5D0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_74:
    uint64_t v177 = sub_63BAC(&qword_3C97E8);
    memcpy(v23, v24, *(void *)(*(void *)(v177 - 8) + 64));
    goto LABEL_75;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_75:
  uint64_t v178 = v10[6];
  uint64_t v179 = &v8[v178];
  uint64_t v180 = &v9[v178];
  int v181 = v27(&v8[v178], 1, v25);
  int v182 = v27(v180, 1, v25);
  if (v181)
  {
    if (!v182)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v179, v180, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v179, 0, 1, v25);
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  if (v182)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v179, v25);
LABEL_92:
    uint64_t v195 = sub_63BAC(&qword_3C97E8);
    memcpy(v179, v180, *(void *)(*(void *)(v195 - 8) + 64));
    goto LABEL_93;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v179, v180, v25);
LABEL_93:
  v8[v10[7]] = v9[v10[7]];
  v8[v10[8]] = v9[v10[8]];
  uint64_t v196 = v10[9];
  uint64_t v197 = &v8[v196];
  uint64_t v198 = &v9[v196];
  uint64_t v199 = sub_2E0980();
  uint64_t v200 = *(void *)(v199 - 8);
  int v201 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v200 + 48);
  int v202 = v201(v197, 1, v199);
  int v203 = v201(v198, 1, v199);
  if (v202)
  {
    __n128 v11 = v303;
    if (!v203)
    {
      (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
      goto LABEL_111;
    }
    goto LABEL_110;
  }
  __n128 v11 = v303;
  if (v203)
  {
    (*(void (**)(char *, uint64_t))(v200 + 8))(v197, v199);
LABEL_110:
    uint64_t v222 = sub_63BAC(&qword_3CB0B8);
    memcpy(v197, v198, *(void *)(*(void *)(v222 - 8) + 64));
    goto LABEL_111;
  }
  (*(void (**)(char *, char *, uint64_t))(v200 + 24))(v197, v198, v199);
LABEL_111:
  *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[v10[12]] = v9[v10[12]];
  *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v223 = v10[14];
  uint64_t v224 = &v8[v223];
  uint64_t v225 = &v9[v223];
  *uint64_t v224 = *(void *)v225;
  v224[1] = *((void *)v225 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v226 = v10[15];
  uint64_t v227 = &v8[v226];
  uint64_t v228 = &v9[v226];
  uint64_t v229 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 24))(v227, v228, v229);
  *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v230 = v10[17];
  uint64_t v231 = &v8[v230];
  uint64_t v232 = &v9[v230];
  uint64_t v233 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 24))(v231, v232, v233);
  v8[v10[18]] = v9[v10[18]];
  *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
  swift_retain();
  swift_release();
  v8[v10[21]] = v9[v10[21]];
  uint64_t v234 = v10[22];
  uint64_t v235 = &v8[v234];
  uint64_t v236 = &v9[v234];
  *uint64_t v235 = *(void *)v236;
  v235[1] = *((void *)v236 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v237 = v10[23];
  int v238 = &v8[v237];
  uint64_t v239 = &v9[v237];
  uint64_t v240 = *(void *)&v9[v237 + 8];
  long long v5 = v301;
  uint64_t v4 = v302;
  if (v238[1])
  {
    if (v240)
    {
      *int v238 = *(void *)v239;
      v238[1] = *((void *)v239 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v238[2] = *((void *)v239 + 2);
      v238[3] = *((void *)v239 + 3);
      v238[4] = *((void *)v239 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B0F2C((uint64_t)v238);
      uint64_t v280 = *((void *)v239 + 4);
      long long v281 = *((_OWORD *)v239 + 1);
      *(_OWORD *)int v238 = *(_OWORD *)v239;
      *((_OWORD *)v238 + 1) = v281;
      v238[4] = v280;
    }
    long long v6 = v297;
  }
  else
  {
    if (v240)
    {
      *int v238 = *(void *)v239;
      v238[1] = *((void *)v239 + 1);
      v238[2] = *((void *)v239 + 2);
      v238[3] = *((void *)v239 + 3);
      v238[4] = *((void *)v239 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v286 = *(_OWORD *)v239;
      long long v287 = *((_OWORD *)v239 + 1);
      v238[4] = *((void *)v239 + 4);
      *(_OWORD *)int v238 = v286;
      *((_OWORD *)v238 + 1) = v287;
    }
    long long v6 = v297;
  }
LABEL_22:
  uint64_t v60 = v6[6];
  uint64_t v61 = (char *)v5 + v60;
  uint64_t v62 = (char *)v4 + v60;
  int v63 = v11((char *)v5 + v60, 1, v10);
  int v64 = v11(v62, 1, v10);
  if (!v63)
  {
    if (v64)
    {
      sub_12FEC8((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_28;
    }
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = *((void *)v62 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v73 = v10[5];
    uint64_t v74 = &v61[v73];
    uint64_t v75 = &v62[v73];
    uint64_t v76 = sub_2DF5D0();
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    int v79 = v78(v74, 1, v76);
    int v80 = v78(v75, 1, v76);
    if (v79)
    {
      if (!v80)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        goto LABEL_81;
      }
    }
    else
    {
      if (!v80)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v74, v75, v76);
LABEL_81:
        uint64_t v184 = v10[6];
        uint64_t v185 = &v61[v184];
        uint64_t v186 = &v62[v184];
        int v187 = v78(&v61[v184], 1, v76);
        int v188 = v78(v186, 1, v76);
        if (v187)
        {
          if (!v188)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v185, v186, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v185, 0, 1, v76);
            goto LABEL_99;
          }
        }
        else
        {
          if (!v188)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v185, v186, v76);
LABEL_99:
            v61[v10[7]] = v62[v10[7]];
            v61[v10[8]] = v62[v10[8]];
            uint64_t v205 = v10[9];
            long long v206 = &v61[v205];
            uint64_t v207 = &v62[v205];
            uint64_t v208 = sub_2E0980();
            uint64_t v209 = *(void *)(v208 - 8);
            uint64_t v210 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v209 + 48);
            int v211 = v210(v206, 1, v208);
            int v212 = v210(v207, 1, v208);
            if (v211)
            {
              if (!v212)
              {
                (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v206, v207, v208);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
                goto LABEL_118;
              }
            }
            else
            {
              if (!v212)
              {
                (*(void (**)(char *, char *, uint64_t))(v209 + 24))(v206, v207, v208);
LABEL_118:
                *(void *)&v61[v10[10]] = *(void *)&v62[v10[10]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v61[v10[11]] = *(void *)&v62[v10[11]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v61[v10[12]] = v62[v10[12]];
                *(void *)&v61[v10[13]] = *(void *)&v62[v10[13]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v242 = v10[14];
                uint64_t v243 = &v61[v242];
                uint64_t v244 = &v62[v242];
                *(void *)uint64_t v243 = *v244;
                *((void *)v243 + 1) = v244[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v245 = v10[15];
                uint64_t v246 = &v61[v245];
                uint64_t v247 = &v62[v245];
                uint64_t v248 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 24))(v246, v247, v248);
                *(void *)&v61[v10[16]] = *(void *)&v62[v10[16]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v249 = v10[17];
                uint64_t v250 = &v61[v249];
                uint64_t v251 = &v62[v249];
                uint64_t v252 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 24))(v250, v251, v252);
                v61[v10[18]] = v62[v10[18]];
                *(void *)&v61[v10[19]] = *(void *)&v62[v10[19]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v61[v10[20]] = *(void *)&v62[v10[20]];
                swift_retain();
                swift_release();
                v61[v10[21]] = v62[v10[21]];
                uint64_t v253 = v10[22];
                uint64_t v254 = &v61[v253];
                unint64_t v255 = &v62[v253];
                *(void *)uint64_t v254 = *v255;
                *((void *)v254 + 1) = v255[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v256 = v10[23];
                long long v257 = &v61[v256];
                uint64_t v258 = &v62[v256];
                uint64_t v259 = *(void *)&v62[v256 + 8];
                long long v5 = v301;
                uint64_t v4 = v302;
                if (*((void *)v257 + 1))
                {
                  if (v259)
                  {
                    *(void *)long long v257 = *v258;
                    *((void *)v257 + 1) = v258[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v257 + 2) = v258[2];
                    *((void *)v257 + 3) = v258[3];
                    *((void *)v257 + 4) = v258[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v257);
                    uint64_t v282 = v258[4];
                    long long v283 = *((_OWORD *)v258 + 1);
                    *(_OWORD *)long long v257 = *(_OWORD *)v258;
                    *((_OWORD *)v257 + 1) = v283;
                    *((void *)v257 + 4) = v282;
                  }
                }
                else if (v259)
                {
                  *(void *)long long v257 = *v258;
                  *((void *)v257 + 1) = v258[1];
                  *((void *)v257 + 2) = v258[2];
                  *((void *)v257 + 3) = v258[3];
                  *((void *)v257 + 4) = v258[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v288 = *(_OWORD *)v258;
                  long long v289 = *((_OWORD *)v258 + 1);
                  *((void *)v257 + 4) = v258[4];
                  *(_OWORD *)long long v257 = v288;
                  *((_OWORD *)v257 + 1) = v289;
                }
                goto LABEL_43;
              }
              (*(void (**)(char *, uint64_t))(v209 + 8))(v206, v208);
            }
            uint64_t v241 = sub_63BAC(&qword_3CB0B8);
            memcpy(v206, v207, *(void *)(*(void *)(v241 - 8) + 64));
            goto LABEL_118;
          }
          (*(void (**)(char *, uint64_t))(v77 + 8))(v185, v76);
        }
        uint64_t v204 = sub_63BAC(&qword_3C97E8);
        memcpy(v185, v186, *(void *)(*(void *)(v204 - 8) + 64));
        goto LABEL_99;
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v76);
    }
    uint64_t v183 = sub_63BAC(&qword_3C97E8);
    memcpy(v74, v75, *(void *)(*(void *)(v183 - 8) + 64));
    goto LABEL_81;
  }
  if (v64)
  {
LABEL_28:
    uint64_t v72 = sub_63BAC(&qword_3C97F0);
    memcpy(v61, v62, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_43;
  }
  long long v298 = v6;
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  uint64_t v65 = v10[5];
  uint64_t v66 = &v61[v65];
  uint64_t v67 = &v62[v65];
  uint64_t v68 = sub_2DF5D0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  if (v70(v67, 1, v68))
  {
    uint64_t v71 = sub_63BAC(&qword_3C97E8);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v81 = v10[6];
  uint64_t v82 = &v61[v81];
  uint64_t v83 = &v62[v81];
  if (v70(&v62[v81], 1, v68))
  {
    uint64_t v84 = sub_63BAC(&qword_3C97E8);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v82, v83, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v82, 0, 1, v68);
  }
  v61[v10[7]] = v62[v10[7]];
  v61[v10[8]] = v62[v10[8]];
  uint64_t v85 = v10[9];
  uint64_t v86 = &v61[v85];
  uint64_t v87 = &v62[v85];
  uint64_t v88 = sub_2E0980();
  uint64_t v89 = *(void *)(v88 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
  {
    uint64_t v90 = sub_63BAC(&qword_3CB0B8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
  }
  *(void *)&v61[v10[10]] = *(void *)&v62[v10[10]];
  *(void *)&v61[v10[11]] = *(void *)&v62[v10[11]];
  v61[v10[12]] = v62[v10[12]];
  *(void *)&v61[v10[13]] = *(void *)&v62[v10[13]];
  uint64_t v91 = v10[14];
  uint64_t v92 = &v61[v91];
  uint64_t v93 = &v62[v91];
  *(void *)uint64_t v92 = *v93;
  *((void *)v92 + 1) = v93[1];
  uint64_t v94 = v10[15];
  long long v293 = &v62[v94];
  long long v295 = &v61[v94];
  uint64_t v95 = sub_2DE7F0();
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v96(v295, v293, v95);
  *(void *)&v61[v10[16]] = *(void *)&v62[v10[16]];
  uint64_t v97 = v10[17];
  uint64_t v98 = &v61[v97];
  uint64_t v99 = &v62[v97];
  uint64_t v100 = sub_2E38D0();
  uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
  swift_bridgeObjectRetain();
  v101(v98, v99, v100);
  v61[v10[18]] = v62[v10[18]];
  *(void *)&v61[v10[19]] = *(void *)&v62[v10[19]];
  *(void *)&v61[v10[20]] = *(void *)&v62[v10[20]];
  v61[v10[21]] = v62[v10[21]];
  uint64_t v102 = v10[22];
  uint64_t v103 = &v61[v102];
  uint64_t v104 = &v62[v102];
  *(void *)uint64_t v103 = *v104;
  *((void *)v103 + 1) = v104[1];
  uint64_t v105 = v10[23];
  uint64_t v106 = &v61[v105];
  uint64_t v107 = &v62[v105];
  uint64_t v108 = *(void *)&v62[v105 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v108)
  {
    *(void *)uint64_t v106 = *v107;
    *((void *)v106 + 1) = v107[1];
    *((void *)v106 + 2) = v107[2];
    *((void *)v106 + 3) = v107[3];
    *((void *)v106 + 4) = v107[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v109 = *(_OWORD *)v107;
    long long v110 = *((_OWORD *)v107 + 1);
    *((void *)v106 + 4) = v107[4];
    *(_OWORD *)uint64_t v106 = v109;
    *((_OWORD *)v106 + 1) = v110;
  }
  long long v5 = v301;
  uint64_t v4 = v302;
  (*(void (**)(char *, void, uint64_t, int *))(v299 + 56))(v61, 0, 1, v10);
  long long v6 = v298;
LABEL_43:
  *((unsigned char *)v5 + v6[7]) = *((unsigned char *)v4 + v6[7]);
  uint64_t v111 = v6[8];
  uint64_t v112 = (char *)v5 + v111;
  uint64_t v113 = (char *)v4 + v111;
  uint64_t v114 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 24))(v112, v113, v114);
  uint64_t v115 = v6[9];
  uint64_t v116 = (char *)v5 + v115;
  uint64_t v117 = (uint64_t *)((char *)v4 + v115);
  LODWORD(v112) = v303((char *)v5 + v115, 1, v10);
  int v118 = v303((char *)v117, 1, v10);
  if (!v112)
  {
    if (v118)
    {
      sub_12FEC8((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_49;
    }
    *(void *)uint64_t v116 = *v117;
    *((void *)v116 + 1) = v117[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v127 = v10[5];
    uint64_t v128 = &v116[v127];
    uint64_t v129 = (char *)v117 + v127;
    uint64_t v130 = sub_2DF5D0();
    uint64_t v131 = *(void *)(v130 - 8);
    uint64_t v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48);
    int v133 = v132(v128, 1, v130);
    int v134 = v132(v129, 1, v130);
    if (v133)
    {
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
        goto LABEL_87;
      }
    }
    else
    {
      if (!v134)
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 24))(v128, v129, v130);
LABEL_87:
        uint64_t v190 = v10[6];
        unint64_t v191 = &v116[v190];
        uint64_t v192 = (char *)v117 + v190;
        int v193 = v132(&v116[v190], 1, v130);
        int v194 = v132(v192, 1, v130);
        if (v193)
        {
          if (!v194)
          {
            (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v191, v192, v130);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v191, 0, 1, v130);
            goto LABEL_105;
          }
        }
        else
        {
          if (!v194)
          {
            (*(void (**)(char *, char *, uint64_t))(v131 + 24))(v191, v192, v130);
LABEL_105:
            v116[v10[7]] = *((unsigned char *)v117 + v10[7]);
            v116[v10[8]] = *((unsigned char *)v117 + v10[8]);
            uint64_t v214 = v10[9];
            uint64_t v215 = &v116[v214];
            uint64_t v216 = (char *)v117 + v214;
            uint64_t v217 = sub_2E0980();
            uint64_t v218 = *(void *)(v217 - 8);
            uint64_t v219 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v218 + 48);
            int v220 = v219(v215, 1, v217);
            int v221 = v219(v216, 1, v217);
            if (v220)
            {
              uint64_t v4 = v302;
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v215, v216, v217);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
                goto LABEL_124;
              }
            }
            else
            {
              uint64_t v4 = v302;
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v218 + 24))(v215, v216, v217);
LABEL_124:
                *(void *)&v116[v10[10]] = *(void *)((char *)v117 + v10[10]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v116[v10[11]] = *(void *)((char *)v117 + v10[11]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v116[v10[12]] = *((unsigned char *)v117 + v10[12]);
                *(void *)&v116[v10[13]] = *(void *)((char *)v117 + v10[13]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v261 = v10[14];
                uint64_t v262 = &v116[v261];
                uint64_t v263 = (void *)((char *)v117 + v261);
                *(void *)uint64_t v262 = *v263;
                *((void *)v262 + 1) = v263[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v264 = v10[15];
                uint64_t v265 = &v116[v264];
                uint64_t v266 = (char *)v117 + v264;
                uint64_t v267 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 24))(v265, v266, v267);
                *(void *)&v116[v10[16]] = *(void *)((char *)v117 + v10[16]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v268 = v10[17];
                long long v269 = &v116[v268];
                long long v270 = (char *)v117 + v268;
                uint64_t v271 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 24))(v269, v270, v271);
                v116[v10[18]] = *((unsigned char *)v117 + v10[18]);
                *(void *)&v116[v10[19]] = *(void *)((char *)v117 + v10[19]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v116[v10[20]] = *(void *)((char *)v117 + v10[20]);
                swift_retain();
                swift_release();
                v116[v10[21]] = *((unsigned char *)v117 + v10[21]);
                uint64_t v272 = v10[22];
                uint64_t v273 = &v116[v272];
                uint64_t v274 = (void *)((char *)v117 + v272);
                *(void *)uint64_t v273 = *v274;
                *((void *)v273 + 1) = v274[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v275 = v10[23];
                long long v276 = &v116[v275];
                uint64_t v277 = (void *)((char *)v117 + v275);
                uint64_t v278 = *(void *)&v116[v275 + 8];
                uint64_t v279 = *(void *)((char *)v117 + v275 + 8);
                long long v5 = v301;
                if (v278)
                {
                  if (v279)
                  {
                    *(void *)long long v276 = *v277;
                    *((void *)v276 + 1) = v277[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v276 + 2) = v277[2];
                    *((void *)v276 + 3) = v277[3];
                    *((void *)v276 + 4) = v277[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v276);
                    uint64_t v284 = v277[4];
                    long long v285 = *((_OWORD *)v277 + 1);
                    *(_OWORD *)long long v276 = *(_OWORD *)v277;
                    *((_OWORD *)v276 + 1) = v285;
                    *((void *)v276 + 4) = v284;
                  }
                }
                else if (v279)
                {
                  *(void *)long long v276 = *v277;
                  *((void *)v276 + 1) = v277[1];
                  *((void *)v276 + 2) = v277[2];
                  *((void *)v276 + 3) = v277[3];
                  *((void *)v276 + 4) = v277[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v290 = *(_OWORD *)v277;
                  long long v291 = *((_OWORD *)v277 + 1);
                  *((void *)v276 + 4) = v277[4];
                  *(_OWORD *)long long v276 = v290;
                  *((_OWORD *)v276 + 1) = v291;
                }
                goto LABEL_64;
              }
              (*(void (**)(char *, uint64_t))(v218 + 8))(v215, v217);
            }
            uint64_t v260 = sub_63BAC(&qword_3CB0B8);
            memcpy(v215, v216, *(void *)(*(void *)(v260 - 8) + 64));
            goto LABEL_124;
          }
          (*(void (**)(char *, uint64_t))(v131 + 8))(v191, v130);
        }
        uint64_t v213 = sub_63BAC(&qword_3C97E8);
        memcpy(v191, v192, *(void *)(*(void *)(v213 - 8) + 64));
        goto LABEL_105;
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v128, v130);
    }
    uint64_t v189 = sub_63BAC(&qword_3C97E8);
    memcpy(v128, v129, *(void *)(*(void *)(v189 - 8) + 64));
    goto LABEL_87;
  }
  if (v118)
  {
LABEL_49:
    uint64_t v126 = sub_63BAC(&qword_3C97F0);
    memcpy(v116, v117, *(void *)(*(void *)(v126 - 8) + 64));
    goto LABEL_64;
  }
  *(void *)uint64_t v116 = *v117;
  *((void *)v116 + 1) = v117[1];
  uint64_t v119 = v10[5];
  uint64_t v120 = &v116[v119];
  uint64_t v121 = (char *)v117 + v119;
  uint64_t v122 = sub_2DF5D0();
  uint64_t v123 = *(void *)(v122 - 8);
  uint64_t v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
  swift_bridgeObjectRetain();
  if (v124(v121, 1, v122))
  {
    uint64_t v125 = sub_63BAC(&qword_3C97E8);
    memcpy(v120, v121, *(void *)(*(void *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
  }
  uint64_t v135 = v10[6];
  uint64_t v136 = &v116[v135];
  uint64_t v137 = (char *)v117 + v135;
  if (v124((char *)v117 + v135, 1, v122))
  {
    uint64_t v138 = sub_63BAC(&qword_3C97E8);
    memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v136, v137, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v136, 0, 1, v122);
  }
  v116[v10[7]] = *((unsigned char *)v117 + v10[7]);
  v116[v10[8]] = *((unsigned char *)v117 + v10[8]);
  uint64_t v139 = v10[9];
  uint64_t v140 = &v116[v139];
  long long v141 = (char *)v117 + v139;
  uint64_t v142 = sub_2E0980();
  uint64_t v143 = *(void *)(v142 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
  {
    uint64_t v144 = sub_63BAC(&qword_3CB0B8);
    memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v141, v142);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
  }
  *(void *)&v116[v10[10]] = *(void *)((char *)v117 + v10[10]);
  *(void *)&v116[v10[11]] = *(void *)((char *)v117 + v10[11]);
  v116[v10[12]] = *((unsigned char *)v117 + v10[12]);
  *(void *)&v116[v10[13]] = *(void *)((char *)v117 + v10[13]);
  uint64_t v145 = v10[14];
  uint64_t v146 = &v116[v145];
  uint64_t v147 = (void *)((char *)v117 + v145);
  *(void *)uint64_t v146 = *v147;
  *((void *)v146 + 1) = v147[1];
  uint64_t v148 = v10[15];
  v304 = (char *)v117 + v148;
  v305 = &v116[v148];
  uint64_t v149 = sub_2DE7F0();
  uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v150(v305, v304, v149);
  *(void *)&v116[v10[16]] = *(void *)((char *)v117 + v10[16]);
  uint64_t v151 = v10[17];
  uint64_t v152 = &v116[v151];
  uint64_t v153 = (char *)v117 + v151;
  uint64_t v154 = sub_2E38D0();
  long long v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
  swift_bridgeObjectRetain();
  v155(v152, v153, v154);
  v116[v10[18]] = *((unsigned char *)v117 + v10[18]);
  *(void *)&v116[v10[19]] = *(void *)((char *)v117 + v10[19]);
  *(void *)&v116[v10[20]] = *(void *)((char *)v117 + v10[20]);
  v116[v10[21]] = *((unsigned char *)v117 + v10[21]);
  uint64_t v156 = v10[22];
  long long v157 = &v116[v156];
  long long v158 = (void *)((char *)v117 + v156);
  *(void *)long long v157 = *v158;
  *((void *)v157 + 1) = v158[1];
  uint64_t v159 = v10[23];
  uint64_t v160 = &v116[v159];
  uint64_t v161 = (void *)((char *)v117 + v159);
  uint64_t v162 = v161[1];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v162)
  {
    *(void *)uint64_t v160 = *v161;
    *((void *)v160 + 1) = v161[1];
    *((void *)v160 + 2) = v161[2];
    *((void *)v160 + 3) = v161[3];
    *((void *)v160 + 4) = v161[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v163 = *(_OWORD *)v161;
    long long v164 = *((_OWORD *)v161 + 1);
    *((void *)v160 + 4) = v161[4];
    *(_OWORD *)uint64_t v160 = v163;
    *((_OWORD *)v160 + 1) = v164;
  }
  long long v5 = v301;
  uint64_t v4 = v302;
  (*(void (**)(char *, void, uint64_t, int *))(v299 + 56))(v116, 0, 1, v10);
LABEL_64:
  uint64_t v165 = sub_63BAC(&qword_3C97F8);
  *(uint64_t *)((char *)v5 + *(int *)(v165 + 28)) = *(uint64_t *)((char *)v4 + *(int *)(v165 + 28));
  swift_retain();
  swift_release();
  uint64_t v166 = *(int *)(v300 + 20);
  uint64_t v167 = (char *)v5 + v166;
  uint64_t v168 = (char *)v4 + v166;
  uint64_t v169 = sub_2DFA90();
  uint64_t v170 = *(void *)(v169 - 8);
  uint64_t v171 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v170 + 48);
  int v172 = v171(v167, 1, v169);
  int v173 = v171(v168, 1, v169);
  if (!v172)
  {
    if (!v173)
    {
      (*(void (**)(char *, char *, uint64_t))(v170 + 24))(v167, v168, v169);
      goto LABEL_70;
    }
    (*(void (**)(char *, uint64_t))(v170 + 8))(v167, v169);
    goto LABEL_69;
  }
  if (v173)
  {
LABEL_69:
    uint64_t v174 = sub_63BAC(&qword_3CB0C0);
    memcpy(v167, v168, *(void *)(*(void *)(v174 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
LABEL_70:
  uint64_t v175 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v167[*(int *)(v175 + 28)] = *(void *)&v168[*(int *)(v175 + 28)];
  swift_retain();
  swift_release();
  return v5;
}

uint64_t initializeWithTake for PageContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v6 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(v3 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v125 = *((void *)v10 - 1);
  __n128 v11 = *(unsigned int (**)(void, void, void))(v125 + 48);
  uint64_t v126 = v3;
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v121 = v11;
    uint64_t v123 = v6;
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_2DF5D0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = v10[6];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    if (v18((char *)v9 + v20, 1, v16))
    {
      uint64_t v23 = sub_63BAC(&qword_3C97E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    long long v6 = v123;
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v24 = v10[9];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_63BAC(&qword_3CB0B8);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v3 = v126;
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(_OWORD *)((char *)v8 + v10[14]) = *(_OWORD *)((char *)v9 + v10[14]);
    uint64_t v30 = v10[15];
    uint64_t v31 = (char *)v8 + v30;
    uint64_t v32 = (char *)v9 + v30;
    uint64_t v33 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v34 = v10[17];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    *(_OWORD *)((char *)v8 + v10[22]) = *(_OWORD *)((char *)v9 + v10[22]);
    uint64_t v38 = v10[23];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    long long v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    *((void *)v39 + 4) = *((void *)v40 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v125 + 56))(v8, 0, 1, v10);
    __n128 v11 = v121;
  }
  uint64_t v42 = v6[6];
  uint64_t v43 = (_OWORD *)(a1 + v42);
  uint64_t v44 = (_OWORD *)(v3 + v42);
  if (v11(v3 + v42, 1, v10))
  {
    uint64_t v45 = sub_63BAC(&qword_3C97F0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v122 = v11;
    *uint64_t v43 = *v44;
    uint64_t v46 = v10[5];
    uint64_t v47 = (char *)v43 + v46;
    uint64_t v48 = (char *)v44 + v46;
    uint64_t v49 = sub_2DF5D0();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    if (v51(v48, 1, v49))
    {
      uint64_t v52 = sub_63BAC(&qword_3C97E8);
      memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v53 = v10[6];
    uint64_t v54 = (char *)v43 + v53;
    uint64_t v55 = (char *)v44 + v53;
    if (v51((char *)v44 + v53, 1, v49))
    {
      uint64_t v56 = sub_63BAC(&qword_3C97E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v54, v55, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v49);
    }
    *((unsigned char *)v43 + v10[7]) = *((unsigned char *)v44 + v10[7]);
    *((unsigned char *)v43 + v10[8]) = *((unsigned char *)v44 + v10[8]);
    uint64_t v57 = v10[9];
    long long v58 = (char *)v43 + v57;
    long long v59 = (char *)v44 + v57;
    uint64_t v60 = sub_2E0980();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = sub_63BAC(&qword_3CB0B8);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v3 = v126;
    *(void *)((char *)v43 + v10[10]) = *(void *)((char *)v44 + v10[10]);
    *(void *)((char *)v43 + v10[11]) = *(void *)((char *)v44 + v10[11]);
    *((unsigned char *)v43 + v10[12]) = *((unsigned char *)v44 + v10[12]);
    *(void *)((char *)v43 + v10[13]) = *(void *)((char *)v44 + v10[13]);
    *(_OWORD *)((char *)v43 + v10[14]) = *(_OWORD *)((char *)v44 + v10[14]);
    uint64_t v63 = v10[15];
    int v64 = (char *)v43 + v63;
    uint64_t v65 = (char *)v44 + v63;
    uint64_t v66 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    *(void *)((char *)v43 + v10[16]) = *(void *)((char *)v44 + v10[16]);
    uint64_t v67 = v10[17];
    uint64_t v68 = (char *)v43 + v67;
    uint64_t v69 = (char *)v44 + v67;
    uint64_t v70 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
    *((unsigned char *)v43 + v10[18]) = *((unsigned char *)v44 + v10[18]);
    *(void *)((char *)v43 + v10[19]) = *(void *)((char *)v44 + v10[19]);
    *(void *)((char *)v43 + v10[20]) = *(void *)((char *)v44 + v10[20]);
    *((unsigned char *)v43 + v10[21]) = *((unsigned char *)v44 + v10[21]);
    *(_OWORD *)((char *)v43 + v10[22]) = *(_OWORD *)((char *)v44 + v10[22]);
    uint64_t v71 = v10[23];
    uint64_t v72 = (char *)v43 + v71;
    uint64_t v73 = (char *)v44 + v71;
    long long v74 = *((_OWORD *)v73 + 1);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *((_OWORD *)v72 + 1) = v74;
    *((void *)v72 + 4) = *((void *)v73 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v125 + 56))(v43, 0, 1, v10);
    __n128 v11 = v122;
  }
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(v3 + v6[7]);
  uint64_t v75 = v6[8];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = v3 + v75;
  uint64_t v78 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
  uint64_t v79 = v6[9];
  int v80 = (_OWORD *)(a1 + v79);
  uint64_t v81 = (_OWORD *)(v3 + v79);
  if (v11(v3 + v79, 1, v10))
  {
    uint64_t v82 = sub_63BAC(&qword_3C97F0);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    _OWORD *v80 = *v81;
    uint64_t v83 = v10[5];
    uint64_t v84 = (char *)v80 + v83;
    uint64_t v85 = (char *)v81 + v83;
    uint64_t v86 = sub_2DF5D0();
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
    if (v88(v85, 1, v86))
    {
      uint64_t v89 = sub_63BAC(&qword_3C97E8);
      memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v90 = v10[6];
    uint64_t v91 = (char *)v80 + v90;
    uint64_t v92 = (char *)v81 + v90;
    if (v88((char *)v81 + v90, 1, v86))
    {
      uint64_t v93 = sub_63BAC(&qword_3C97E8);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v91, v92, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v91, 0, 1, v86);
    }
    *((unsigned char *)v80 + v10[7]) = *((unsigned char *)v81 + v10[7]);
    *((unsigned char *)v80 + v10[8]) = *((unsigned char *)v81 + v10[8]);
    uint64_t v94 = v10[9];
    uint64_t v95 = (char *)v80 + v94;
    uint64_t v96 = (char *)v81 + v94;
    uint64_t v97 = sub_2E0980();
    uint64_t v98 = *(void *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      uint64_t v99 = sub_63BAC(&qword_3CB0B8);
      memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    uint64_t v3 = v126;
    *(void *)((char *)v80 + v10[10]) = *(void *)((char *)v81 + v10[10]);
    *(void *)((char *)v80 + v10[11]) = *(void *)((char *)v81 + v10[11]);
    *((unsigned char *)v80 + v10[12]) = *((unsigned char *)v81 + v10[12]);
    *(void *)((char *)v80 + v10[13]) = *(void *)((char *)v81 + v10[13]);
    *(_OWORD *)((char *)v80 + v10[14]) = *(_OWORD *)((char *)v81 + v10[14]);
    uint64_t v100 = v10[15];
    uint64_t v101 = (char *)v80 + v100;
    uint64_t v102 = (char *)v81 + v100;
    uint64_t v103 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
    *(void *)((char *)v80 + v10[16]) = *(void *)((char *)v81 + v10[16]);
    uint64_t v104 = v10[17];
    uint64_t v105 = (char *)v80 + v104;
    uint64_t v106 = (char *)v81 + v104;
    uint64_t v107 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
    *((unsigned char *)v80 + v10[18]) = *((unsigned char *)v81 + v10[18]);
    *(void *)((char *)v80 + v10[19]) = *(void *)((char *)v81 + v10[19]);
    *(void *)((char *)v80 + v10[20]) = *(void *)((char *)v81 + v10[20]);
    *((unsigned char *)v80 + v10[21]) = *((unsigned char *)v81 + v10[21]);
    *(_OWORD *)((char *)v80 + v10[22]) = *(_OWORD *)((char *)v81 + v10[22]);
    uint64_t v108 = v10[23];
    long long v109 = (char *)v80 + v108;
    long long v110 = (char *)v81 + v108;
    long long v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)long long v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    *((void *)v109 + 4) = *((void *)v110 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v125 + 56))(v80, 0, 1, v10);
  }
  uint64_t v112 = sub_63BAC(&qword_3C97F8);
  *(void *)(a1 + *(int *)(v112 + 28)) = *(void *)(v3 + *(int *)(v112 + 28));
  uint64_t v113 = *(int *)(a3 + 20);
  uint64_t v114 = (char *)(a1 + v113);
  uint64_t v115 = (char *)(v3 + v113);
  uint64_t v116 = sub_2DFA90();
  uint64_t v117 = *(void *)(v116 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
  {
    uint64_t v118 = sub_63BAC(&qword_3CB0C0);
    memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
  }
  uint64_t v119 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v114[*(int *)(v119 + 28)] = *(void *)&v115[*(int *)(v119 + 28)];
  return a1;
}

uint64_t assignWithTake for PageContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (int *)type metadata accessor for PageContent.PageInfo(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(v5 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  __n128 v11 = (int *)type metadata accessor for Page();
  uint64_t v288 = *((void *)v11 - 1);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, int *))(v288 + 48);
  int v13 = v12(v9, 1, v11);
  int v14 = v12(v10, 1, v11);
  uint64_t v295 = a3;
  uint64_t v296 = a2;
  if (!v13)
  {
    if (v14)
    {
      sub_12FEC8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_7;
    }
    long long v285 = v12;
    uint64_t v291 = v5;
    uint64_t v23 = v10[1];
    void *v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = v11[5];
    uint64_t v25 = (char *)v9 + v24;
    uint64_t v26 = (char *)v10 + v24;
    uint64_t v27 = sub_2DF5D0();
    uint64_t v282 = *(void **)(v27 - 8);
    uint64_t v28 = (uint64_t (*)(void))v282[6];
    long long v276 = v25;
    LODWORD(v25) = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v25, 1, v27);
    int v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v26, 1, v27);
    if (v25)
    {
      if (v29)
      {
        size_t v30 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v31 = v276;
LABEL_21:
        memcpy(v31, v26, v30);
        goto LABEL_24;
      }
      ((void (*)(void *, char *, uint64_t))v282[4])(v276, v26, v27);
      ((void (*)(void *, void, uint64_t, uint64_t))v282[7])(v276, 0, 1, v27);
    }
    else
    {
      if (v29)
      {
        ((void (*)(void *, uint64_t))v282[1])(v276, v27);
        size_t v30 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v31 = v276;
        goto LABEL_21;
      }
      ((void (*)(void *, char *, uint64_t))v282[5])(v276, v26, v27);
    }
LABEL_24:
    uint64_t v54 = v11[6];
    uint64_t v55 = (char *)v10 + v54;
    uint64_t v277 = (char *)v9 + v54;
    int v56 = v28();
    int v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v55, 1, v27);
    if (v56)
    {
      if (v57)
      {
        size_t v58 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        long long v59 = v277;
LABEL_29:
        memcpy(v59, v55, v58);
        goto LABEL_32;
      }
      ((void (*)(char *, char *, uint64_t))v282[4])(v277, v55, v27);
      ((void (*)(char *, void, uint64_t, uint64_t))v282[7])(v277, 0, 1, v27);
    }
    else
    {
      if (v57)
      {
        ((void (*)(char *, uint64_t))v282[1])(v277, v27);
        size_t v58 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        long long v59 = v277;
        goto LABEL_29;
      }
      ((void (*)(char *, char *, uint64_t))v282[5])(v277, v55, v27);
    }
LABEL_32:
    *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
    *((unsigned char *)v9 + v11[8]) = *((unsigned char *)v10 + v11[8]);
    uint64_t v60 = v11[9];
    uint64_t v61 = (char *)v9 + v60;
    uint64_t v62 = (char *)v10 + v60;
    uint64_t v63 = sub_2E0980();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
    __src = v61;
    LODWORD(v61) = v65(v61, 1, v63);
    int v66 = v65(v62, 1, v63);
    if (v61)
    {
      uint64_t v12 = v285;
      if (v66)
      {
        size_t v67 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
        uint64_t v68 = __src;
LABEL_37:
        memcpy(v68, v62, v67);
        goto LABEL_40;
      }
      (*(void (**)(void *, char *, uint64_t))(v64 + 32))(__src, v62, v63);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(__src, 0, 1, v63);
    }
    else
    {
      uint64_t v12 = v285;
      if (v66)
      {
        (*(void (**)(void *, uint64_t))(v64 + 8))(__src, v63);
        size_t v67 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
        uint64_t v68 = __src;
        goto LABEL_37;
      }
      (*(void (**)(void *, char *, uint64_t))(v64 + 40))(__src, v62, v63);
    }
LABEL_40:
    uint64_t v5 = v291;
    *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
    swift_bridgeObjectRelease();
    *(void *)((char *)v9 + v11[11]) = *(void *)((char *)v10 + v11[11]);
    swift_bridgeObjectRelease();
    *((unsigned char *)v9 + v11[12]) = *((unsigned char *)v10 + v11[12]);
    *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
    swift_bridgeObjectRelease();
    uint64_t v69 = v11[14];
    uint64_t v70 = (void *)((char *)v9 + v69);
    uint64_t v71 = (void *)((char *)v10 + v69);
    uint64_t v73 = *v71;
    uint64_t v72 = v71[1];
    *uint64_t v70 = v73;
    v70[1] = v72;
    swift_bridgeObjectRelease();
    uint64_t v74 = v11[15];
    uint64_t v75 = (char *)v9 + v74;
    uint64_t v76 = (char *)v10 + v74;
    uint64_t v77 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
    *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
    swift_bridgeObjectRelease();
    uint64_t v78 = v11[17];
    uint64_t v79 = (char *)v9 + v78;
    int v80 = (char *)v10 + v78;
    uint64_t v81 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 40))(v79, v80, v81);
    *((unsigned char *)v9 + v11[18]) = *((unsigned char *)v10 + v11[18]);
    *(void *)((char *)v9 + v11[19]) = *(void *)((char *)v10 + v11[19]);
    swift_bridgeObjectRelease();
    *(void *)((char *)v9 + v11[20]) = *(void *)((char *)v10 + v11[20]);
    swift_release();
    *((unsigned char *)v9 + v11[21]) = *((unsigned char *)v10 + v11[21]);
    uint64_t v82 = v11[22];
    uint64_t v83 = (void *)((char *)v9 + v82);
    uint64_t v84 = (void *)((char *)v10 + v82);
    uint64_t v86 = *v84;
    uint64_t v85 = v84[1];
    *uint64_t v83 = v86;
    v83[1] = v85;
    swift_bridgeObjectRelease();
    uint64_t v87 = v11[23];
    uint64_t v88 = (void *)((char *)v9 + v87);
    uint64_t v89 = (void *)((char *)v10 + v87);
    if (v88[1])
    {
      uint64_t v90 = v89[1];
      if (v90)
      {
        *uint64_t v88 = *v89;
        v88[1] = v90;
        swift_bridgeObjectRelease();
        v88[2] = v89[2];
        uint64_t v91 = v89[4];
        v88[3] = v89[3];
        v88[4] = v91;
        swift_bridgeObjectRelease();
LABEL_45:
        a2 = v296;
        goto LABEL_46;
      }
      sub_B0F2C((uint64_t)v88);
    }
    long long v92 = *((_OWORD *)v89 + 1);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *((_OWORD *)v88 + 1) = v92;
    v88[4] = v89[4];
    goto LABEL_45;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v22 = sub_63BAC(&qword_3C97F0);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_46;
  }
  uint64_t v284 = v12;
  uint64_t v290 = v5;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v15 = v11[5];
  uint64_t v16 = (char *)v9 + v15;
  uint64_t v17 = (char *)v10 + v15;
  uint64_t v18 = sub_2DF5D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = sub_63BAC(&qword_3C97E8);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v32 = v11[6];
  uint64_t v33 = (char *)v9 + v32;
  uint64_t v34 = (char *)v10 + v32;
  if (v20((char *)v10 + v32, 1, v18))
  {
    uint64_t v35 = sub_63BAC(&qword_3C97E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v33, v34, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v33, 0, 1, v18);
  }
  *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
  *((unsigned char *)v9 + v11[8]) = *((unsigned char *)v10 + v11[8]);
  uint64_t v36 = v11[9];
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = (char *)v10 + v36;
  uint64_t v39 = sub_2E0980();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_63BAC(&qword_3CB0B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v5 = v290;
  a2 = v296;
  *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
  *(void *)((char *)v9 + v11[11]) = *(void *)((char *)v10 + v11[11]);
  *((unsigned char *)v9 + v11[12]) = *((unsigned char *)v10 + v11[12]);
  *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
  *(_OWORD *)((char *)v9 + v11[14]) = *(_OWORD *)((char *)v10 + v11[14]);
  uint64_t v42 = v11[15];
  uint64_t v43 = (char *)v9 + v42;
  uint64_t v44 = (char *)v10 + v42;
  uint64_t v45 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
  uint64_t v46 = v11[17];
  uint64_t v47 = (char *)v9 + v46;
  uint64_t v48 = (char *)v10 + v46;
  uint64_t v49 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  *((unsigned char *)v9 + v11[18]) = *((unsigned char *)v10 + v11[18]);
  *(void *)((char *)v9 + v11[19]) = *(void *)((char *)v10 + v11[19]);
  *(void *)((char *)v9 + v11[20]) = *(void *)((char *)v10 + v11[20]);
  *((unsigned char *)v9 + v11[21]) = *((unsigned char *)v10 + v11[21]);
  *(_OWORD *)((char *)v9 + v11[22]) = *(_OWORD *)((char *)v10 + v11[22]);
  uint64_t v50 = v11[23];
  uint64_t v51 = (char *)v9 + v50;
  uint64_t v52 = (char *)v10 + v50;
  long long v53 = *((_OWORD *)v52 + 1);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v53;
  *((void *)v51 + 4) = *((void *)v52 + 4);
  (*(void (**)(void *, void, uint64_t, int *))(v288 + 56))(v9, 0, 1, v11);
  uint64_t v12 = v284;
LABEL_46:
  uint64_t v93 = v7[6];
  uint64_t v94 = (void *)(v5 + v93);
  uint64_t v95 = (void *)(a2 + v93);
  int v96 = v12((void *)(v5 + v93), 1, v11);
  int v97 = v12(v95, 1, v11);
  if (!v96)
  {
    if (v97)
    {
      sub_12FEC8((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_52;
    }
    long long v287 = v12;
    uint64_t v293 = v5;
    uint64_t v106 = v95[1];
    *uint64_t v94 = *v95;
    v94[1] = v106;
    swift_bridgeObjectRelease();
    uint64_t v107 = v11[5];
    uint64_t v108 = (char *)v94 + v107;
    long long v109 = (char *)v95 + v107;
    uint64_t v110 = sub_2DF5D0();
    long long v283 = *(void **)(v110 - 8);
    long long v111 = (uint64_t (*)(void))v283[6];
    uint64_t v278 = v108;
    LODWORD(v108) = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v108, 1, v110);
    int v112 = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v109, 1, v110);
    if (v108)
    {
      if (v112)
      {
        size_t v113 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v114 = v278;
LABEL_66:
        memcpy(v114, v109, v113);
        goto LABEL_69;
      }
      ((void (*)(void *, char *, uint64_t))v283[4])(v278, v109, v110);
      ((void (*)(void *, void, uint64_t, uint64_t))v283[7])(v278, 0, 1, v110);
    }
    else
    {
      if (v112)
      {
        ((void (*)(void *, uint64_t))v283[1])(v278, v110);
        size_t v113 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v114 = v278;
        goto LABEL_66;
      }
      ((void (*)(void *, char *, uint64_t))v283[5])(v278, v109, v110);
    }
LABEL_69:
    uint64_t v137 = v11[6];
    uint64_t v138 = (char *)v95 + v137;
    uint64_t v279 = (char *)v94 + v137;
    int v139 = v111();
    int v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v138, 1, v110);
    if (v139)
    {
      if (v140)
      {
        size_t v141 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v142 = v279;
LABEL_74:
        memcpy(v142, v138, v141);
        goto LABEL_77;
      }
      ((void (*)(char *, char *, uint64_t))v283[4])(v279, v138, v110);
      ((void (*)(char *, void, uint64_t, uint64_t))v283[7])(v279, 0, 1, v110);
    }
    else
    {
      if (v140)
      {
        ((void (*)(char *, uint64_t))v283[1])(v279, v110);
        size_t v141 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
        uint64_t v142 = v279;
        goto LABEL_74;
      }
      ((void (*)(char *, char *, uint64_t))v283[5])(v279, v138, v110);
    }
LABEL_77:
    *((unsigned char *)v94 + v11[7]) = *((unsigned char *)v95 + v11[7]);
    *((unsigned char *)v94 + v11[8]) = *((unsigned char *)v95 + v11[8]);
    uint64_t v143 = v11[9];
    uint64_t v144 = (char *)v94 + v143;
    uint64_t v145 = (char *)v95 + v143;
    uint64_t v146 = sub_2E0980();
    uint64_t v147 = *(void *)(v146 - 8);
    uint64_t v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48);
    __srca = v144;
    LODWORD(v144) = v148(v144, 1, v146);
    int v149 = v148(v145, 1, v146);
    if (v144)
    {
      uint64_t v12 = v287;
      if (v149)
      {
        size_t v150 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
        uint64_t v151 = __srca;
LABEL_82:
        memcpy(v151, v145, v150);
        goto LABEL_85;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 32))(__srca, v145, v146);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(__srca, 0, 1, v146);
    }
    else
    {
      uint64_t v12 = v287;
      if (v149)
      {
        (*(void (**)(void *, uint64_t))(v147 + 8))(__srca, v146);
        size_t v150 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
        uint64_t v151 = __srca;
        goto LABEL_82;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 40))(__srca, v145, v146);
    }
LABEL_85:
    uint64_t v5 = v293;
    *(void *)((char *)v94 + v11[10]) = *(void *)((char *)v95 + v11[10]);
    swift_bridgeObjectRelease();
    *(void *)((char *)v94 + v11[11]) = *(void *)((char *)v95 + v11[11]);
    swift_bridgeObjectRelease();
    *((unsigned char *)v94 + v11[12]) = *((unsigned char *)v95 + v11[12]);
    *(void *)((char *)v94 + v11[13]) = *(void *)((char *)v95 + v11[13]);
    swift_bridgeObjectRelease();
    uint64_t v152 = v11[14];
    uint64_t v153 = (void *)((char *)v94 + v152);
    uint64_t v154 = (void *)((char *)v95 + v152);
    uint64_t v156 = *v154;
    uint64_t v155 = v154[1];
    *uint64_t v153 = v156;
    v153[1] = v155;
    swift_bridgeObjectRelease();
    uint64_t v157 = v11[15];
    long long v158 = (char *)v94 + v157;
    uint64_t v159 = (char *)v95 + v157;
    uint64_t v160 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 40))(v158, v159, v160);
    *(void *)((char *)v94 + v11[16]) = *(void *)((char *)v95 + v11[16]);
    swift_bridgeObjectRelease();
    uint64_t v161 = v11[17];
    uint64_t v162 = (char *)v94 + v161;
    long long v163 = (char *)v95 + v161;
    uint64_t v164 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 40))(v162, v163, v164);
    *((unsigned char *)v94 + v11[18]) = *((unsigned char *)v95 + v11[18]);
    *(void *)((char *)v94 + v11[19]) = *(void *)((char *)v95 + v11[19]);
    swift_bridgeObjectRelease();
    *(void *)((char *)v94 + v11[20]) = *(void *)((char *)v95 + v11[20]);
    swift_release();
    *((unsigned char *)v94 + v11[21]) = *((unsigned char *)v95 + v11[21]);
    uint64_t v165 = v11[22];
    uint64_t v166 = (void *)((char *)v94 + v165);
    uint64_t v167 = (void *)((char *)v95 + v165);
    uint64_t v169 = *v167;
    uint64_t v168 = v167[1];
    void *v166 = v169;
    v166[1] = v168;
    swift_bridgeObjectRelease();
    uint64_t v170 = v11[23];
    uint64_t v171 = (void *)((char *)v94 + v170);
    int v172 = (void *)((char *)v95 + v170);
    if (v171[1])
    {
      uint64_t v173 = v172[1];
      if (v173)
      {
        void *v171 = *v172;
        v171[1] = v173;
        swift_bridgeObjectRelease();
        v171[2] = v172[2];
        uint64_t v174 = v172[4];
        v171[3] = v172[3];
        v171[4] = v174;
        swift_bridgeObjectRelease();
LABEL_90:
        a2 = v296;
        goto LABEL_91;
      }
      sub_B0F2C((uint64_t)v171);
    }
    long long v175 = *((_OWORD *)v172 + 1);
    *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
    *((_OWORD *)v171 + 1) = v175;
    v171[4] = v172[4];
    goto LABEL_90;
  }
  if (v97)
  {
LABEL_52:
    uint64_t v105 = sub_63BAC(&qword_3C97F0);
    memcpy(v94, v95, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_91;
  }
  long long v286 = v12;
  uint64_t v292 = v5;
  *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  uint64_t v98 = v11[5];
  uint64_t v99 = (char *)v94 + v98;
  uint64_t v100 = (char *)v95 + v98;
  uint64_t v101 = sub_2DF5D0();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
  if (v103(v100, 1, v101))
  {
    uint64_t v104 = sub_63BAC(&qword_3C97E8);
    memcpy(v99, v100, *(void *)(*(void *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v99, v100, v101);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  }
  uint64_t v115 = v11[6];
  uint64_t v116 = (char *)v94 + v115;
  uint64_t v117 = (char *)v95 + v115;
  if (v103((char *)v95 + v115, 1, v101))
  {
    uint64_t v118 = sub_63BAC(&qword_3C97E8);
    memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v116, v117, v101);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v116, 0, 1, v101);
  }
  *((unsigned char *)v94 + v11[7]) = *((unsigned char *)v95 + v11[7]);
  *((unsigned char *)v94 + v11[8]) = *((unsigned char *)v95 + v11[8]);
  uint64_t v119 = v11[9];
  uint64_t v120 = (char *)v94 + v119;
  uint64_t v121 = (char *)v95 + v119;
  uint64_t v122 = sub_2E0980();
  uint64_t v123 = *(void *)(v122 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
  {
    uint64_t v124 = sub_63BAC(&qword_3CB0B8);
    memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v120, v121, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
  }
  uint64_t v5 = v292;
  a2 = v296;
  *(void *)((char *)v94 + v11[10]) = *(void *)((char *)v95 + v11[10]);
  *(void *)((char *)v94 + v11[11]) = *(void *)((char *)v95 + v11[11]);
  *((unsigned char *)v94 + v11[12]) = *((unsigned char *)v95 + v11[12]);
  *(void *)((char *)v94 + v11[13]) = *(void *)((char *)v95 + v11[13]);
  *(_OWORD *)((char *)v94 + v11[14]) = *(_OWORD *)((char *)v95 + v11[14]);
  uint64_t v125 = v11[15];
  uint64_t v126 = (char *)v94 + v125;
  uint64_t v127 = (char *)v95 + v125;
  uint64_t v128 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
  *(void *)((char *)v94 + v11[16]) = *(void *)((char *)v95 + v11[16]);
  uint64_t v129 = v11[17];
  uint64_t v130 = (char *)v94 + v129;
  uint64_t v131 = (char *)v95 + v129;
  uint64_t v132 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
  *((unsigned char *)v94 + v11[18]) = *((unsigned char *)v95 + v11[18]);
  *(void *)((char *)v94 + v11[19]) = *(void *)((char *)v95 + v11[19]);
  *(void *)((char *)v94 + v11[20]) = *(void *)((char *)v95 + v11[20]);
  *((unsigned char *)v94 + v11[21]) = *((unsigned char *)v95 + v11[21]);
  *(_OWORD *)((char *)v94 + v11[22]) = *(_OWORD *)((char *)v95 + v11[22]);
  uint64_t v133 = v11[23];
  int v134 = (char *)v94 + v133;
  uint64_t v135 = (char *)v95 + v133;
  long long v136 = *((_OWORD *)v135 + 1);
  *(_OWORD *)int v134 = *(_OWORD *)v135;
  *((_OWORD *)v134 + 1) = v136;
  *((void *)v134 + 4) = *((void *)v135 + 4);
  (*(void (**)(void *, void, uint64_t, int *))(v288 + 56))(v94, 0, 1, v11);
  uint64_t v12 = v286;
LABEL_91:
  *(unsigned char *)(v5 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v176 = v7[8];
  uint64_t v177 = v5 + v176;
  uint64_t v178 = a2 + v176;
  uint64_t v179 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 40))(v177, v178, v179);
  uint64_t v180 = v7[9];
  int v181 = (void *)(v5 + v180);
  int v182 = (char *)(a2 + v180);
  LODWORD(v177) = v12((void *)(v5 + v180), 1, v11);
  int v183 = v12(v182, 1, v11);
  if (v177)
  {
    if (!v183)
    {
      *(_OWORD *)int v181 = *(_OWORD *)v182;
      uint64_t v184 = v11[5];
      uint64_t v185 = (char *)v181 + v184;
      uint64_t v186 = &v182[v184];
      uint64_t v187 = sub_2DF5D0();
      uint64_t v188 = *(void *)(v187 - 8);
      uint64_t v189 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48);
      if (v189(v186, 1, v187))
      {
        uint64_t v190 = sub_63BAC(&qword_3C97E8);
        memcpy(v185, v186, *(void *)(*(void *)(v190 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v185, v186, v187);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
      }
      uint64_t v200 = v11[6];
      int v201 = (char *)v181 + v200;
      int v202 = &v182[v200];
      if (v189(&v182[v200], 1, v187))
      {
        uint64_t v203 = sub_63BAC(&qword_3C97E8);
        memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v201, v202, v187);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v201, 0, 1, v187);
      }
      *((unsigned char *)v181 + v11[7]) = v182[v11[7]];
      *((unsigned char *)v181 + v11[8]) = v182[v11[8]];
      uint64_t v204 = v11[9];
      uint64_t v205 = (char *)v181 + v204;
      long long v206 = &v182[v204];
      uint64_t v207 = sub_2E0980();
      uint64_t v208 = *(void *)(v207 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
      {
        uint64_t v209 = sub_63BAC(&qword_3CB0B8);
        memcpy(v205, v206, *(void *)(*(void *)(v209 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v205, v206, v207);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
      }
      a2 = v296;
      *(void *)((char *)v181 + v11[10]) = *(void *)&v182[v11[10]];
      *(void *)((char *)v181 + v11[11]) = *(void *)&v182[v11[11]];
      *((unsigned char *)v181 + v11[12]) = v182[v11[12]];
      *(void *)((char *)v181 + v11[13]) = *(void *)&v182[v11[13]];
      *(_OWORD *)((char *)v181 + v11[14]) = *(_OWORD *)&v182[v11[14]];
      uint64_t v210 = v11[15];
      int v211 = (char *)v181 + v210;
      int v212 = &v182[v210];
      uint64_t v213 = sub_2DE7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v211, v212, v213);
      *(void *)((char *)v181 + v11[16]) = *(void *)&v182[v11[16]];
      uint64_t v214 = v11[17];
      uint64_t v215 = (char *)v181 + v214;
      uint64_t v216 = &v182[v214];
      uint64_t v217 = sub_2E38D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v215, v216, v217);
      *((unsigned char *)v181 + v11[18]) = v182[v11[18]];
      *(void *)((char *)v181 + v11[19]) = *(void *)&v182[v11[19]];
      *(void *)((char *)v181 + v11[20]) = *(void *)&v182[v11[20]];
      *((unsigned char *)v181 + v11[21]) = v182[v11[21]];
      *(_OWORD *)((char *)v181 + v11[22]) = *(_OWORD *)&v182[v11[22]];
      uint64_t v218 = v11[23];
      uint64_t v219 = (char *)v181 + v218;
      int v220 = &v182[v218];
      long long v221 = *((_OWORD *)v220 + 1);
      *(_OWORD *)uint64_t v219 = *(_OWORD *)v220;
      *((_OWORD *)v219 + 1) = v221;
      *((void *)v219 + 4) = *((void *)v220 + 4);
      (*(void (**)(void *, void, uint64_t, int *))(v288 + 56))(v181, 0, 1, v11);
      goto LABEL_109;
    }
    goto LABEL_97;
  }
  if (v183)
  {
    sub_12FEC8((uint64_t)v181, (uint64_t (*)(void))type metadata accessor for Page);
LABEL_97:
    uint64_t v191 = sub_63BAC(&qword_3C97F0);
    memcpy(v181, v182, *(void *)(*(void *)(v191 - 8) + 64));
LABEL_109:
    uint64_t v222 = v295;
    goto LABEL_110;
  }
  uint64_t v294 = v5;
  uint64_t v192 = *((void *)v182 + 1);
  void *v181 = *(void *)v182;
  v181[1] = v192;
  swift_bridgeObjectRelease();
  uint64_t v193 = v11[5];
  int v194 = (char *)v181 + v193;
  uint64_t v195 = &v182[v193];
  uint64_t v196 = sub_2DF5D0();
  uint64_t v289 = *(void *)(v196 - 8);
  uint64_t v197 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v289 + 48);
  int v198 = v197(v194, 1, v196);
  int v199 = v197(v195, 1, v196);
  if (v198)
  {
    if (!v199)
    {
      (*(void (**)(char *, char *, uint64_t))(v289 + 32))(v194, v195, v196);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v289 + 56))(v194, 0, 1, v196);
      goto LABEL_121;
    }
    goto LABEL_120;
  }
  if (v199)
  {
    (*(void (**)(char *, uint64_t))(v289 + 8))(v194, v196);
LABEL_120:
    uint64_t v235 = sub_63BAC(&qword_3C97E8);
    memcpy(v194, v195, *(void *)(*(void *)(v235 - 8) + 64));
    goto LABEL_121;
  }
  (*(void (**)(char *, char *, uint64_t))(v289 + 40))(v194, v195, v196);
LABEL_121:
  uint64_t v236 = v11[6];
  uint64_t v237 = (char *)v181 + v236;
  int v238 = &v182[v236];
  int v239 = v197((char *)v181 + v236, 1, v196);
  int v240 = v197(v238, 1, v196);
  if (v239)
  {
    if (!v240)
    {
      (*(void (**)(char *, char *, uint64_t))(v289 + 32))(v237, v238, v196);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v289 + 56))(v237, 0, 1, v196);
      goto LABEL_127;
    }
    goto LABEL_126;
  }
  if (v240)
  {
    (*(void (**)(char *, uint64_t))(v289 + 8))(v237, v196);
LABEL_126:
    uint64_t v241 = sub_63BAC(&qword_3C97E8);
    memcpy(v237, v238, *(void *)(*(void *)(v241 - 8) + 64));
    goto LABEL_127;
  }
  (*(void (**)(char *, char *, uint64_t))(v289 + 40))(v237, v238, v196);
LABEL_127:
  *((unsigned char *)v181 + v11[7]) = v182[v11[7]];
  *((unsigned char *)v181 + v11[8]) = v182[v11[8]];
  uint64_t v242 = v11[9];
  uint64_t v243 = (char *)v181 + v242;
  uint64_t v244 = &v182[v242];
  uint64_t v245 = sub_2E0980();
  uint64_t v246 = *(void *)(v245 - 8);
  uint64_t v247 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
  int v248 = v247(v243, 1, v245);
  int v249 = v247(v244, 1, v245);
  if (v248)
  {
    uint64_t v5 = v294;
    if (!v249)
    {
      (*(void (**)(char *, char *, uint64_t))(v246 + 32))(v243, v244, v245);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
      goto LABEL_133;
    }
    goto LABEL_132;
  }
  uint64_t v5 = v294;
  if (v249)
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v245);
LABEL_132:
    uint64_t v250 = sub_63BAC(&qword_3CB0B8);
    memcpy(v243, v244, *(void *)(*(void *)(v250 - 8) + 64));
    goto LABEL_133;
  }
  (*(void (**)(char *, char *, uint64_t))(v246 + 40))(v243, v244, v245);
LABEL_133:
  *(void *)((char *)v181 + v11[10]) = *(void *)&v182[v11[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v181 + v11[11]) = *(void *)&v182[v11[11]];
  swift_bridgeObjectRelease();
  *((unsigned char *)v181 + v11[12]) = v182[v11[12]];
  *(void *)((char *)v181 + v11[13]) = *(void *)&v182[v11[13]];
  swift_bridgeObjectRelease();
  uint64_t v251 = v11[14];
  uint64_t v252 = (void *)((char *)v181 + v251);
  uint64_t v253 = (uint64_t *)&v182[v251];
  uint64_t v255 = *v253;
  uint64_t v254 = v253[1];
  *uint64_t v252 = v255;
  v252[1] = v254;
  swift_bridgeObjectRelease();
  uint64_t v256 = v11[15];
  long long v257 = (char *)v181 + v256;
  uint64_t v258 = &v182[v256];
  uint64_t v259 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 40))(v257, v258, v259);
  *(void *)((char *)v181 + v11[16]) = *(void *)&v182[v11[16]];
  swift_bridgeObjectRelease();
  uint64_t v260 = v11[17];
  uint64_t v261 = (char *)v181 + v260;
  uint64_t v262 = &v182[v260];
  uint64_t v263 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 40))(v261, v262, v263);
  *((unsigned char *)v181 + v11[18]) = v182[v11[18]];
  *(void *)((char *)v181 + v11[19]) = *(void *)&v182[v11[19]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v181 + v11[20]) = *(void *)&v182[v11[20]];
  swift_release();
  *((unsigned char *)v181 + v11[21]) = v182[v11[21]];
  uint64_t v264 = v11[22];
  uint64_t v265 = (void *)((char *)v181 + v264);
  uint64_t v266 = (uint64_t *)&v182[v264];
  uint64_t v268 = *v266;
  uint64_t v267 = v266[1];
  *uint64_t v265 = v268;
  v265[1] = v267;
  swift_bridgeObjectRelease();
  uint64_t v269 = v11[23];
  uint64_t v270 = (uint64_t)v181 + v269;
  uint64_t v271 = &v182[v269];
  if (!*(void *)((char *)v181 + v269 + 8))
  {
    long long v274 = *((_OWORD *)v271 + 1);
    *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
    *(_OWORD *)(v270 + 16) = v274;
    *(void *)(v270 + 32) = *((void *)v271 + 4);
    a2 = v296;
    goto LABEL_109;
  }
  uint64_t v272 = *((void *)v271 + 1);
  uint64_t v222 = v295;
  if (v272)
  {
    *(void *)uint64_t v270 = *(void *)v271;
    *(void *)(v270 + 8) = v272;
    swift_bridgeObjectRelease();
    *(void *)(v270 + 16) = *((void *)v271 + 2);
    uint64_t v273 = *((void *)v271 + 4);
    *(void *)(v270 + 24) = *((void *)v271 + 3);
    *(void *)(v270 + 32) = v273;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_B0F2C(v270);
    long long v275 = *((_OWORD *)v271 + 1);
    *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
    *(_OWORD *)(v270 + 16) = v275;
    *(void *)(v270 + 32) = *((void *)v271 + 4);
  }
  a2 = v296;
LABEL_110:
  uint64_t v223 = sub_63BAC(&qword_3C97F8);
  *(void *)(v5 + *(int *)(v223 + 28)) = *(void *)(a2 + *(int *)(v223 + 28));
  swift_release();
  uint64_t v224 = *(int *)(v222 + 20);
  uint64_t v225 = (char *)(v5 + v224);
  uint64_t v226 = (char *)(a2 + v224);
  uint64_t v227 = sub_2DFA90();
  uint64_t v228 = *(void *)(v227 - 8);
  uint64_t v229 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v228 + 48);
  int v230 = v229(v225, 1, v227);
  int v231 = v229(v226, 1, v227);
  if (!v230)
  {
    if (!v231)
    {
      (*(void (**)(char *, char *, uint64_t))(v228 + 40))(v225, v226, v227);
      goto LABEL_116;
    }
    (*(void (**)(char *, uint64_t))(v228 + 8))(v225, v227);
    goto LABEL_115;
  }
  if (v231)
  {
LABEL_115:
    uint64_t v232 = sub_63BAC(&qword_3CB0C0);
    memcpy(v225, v226, *(void *)(*(void *)(v232 - 8) + 64));
    goto LABEL_116;
  }
  (*(void (**)(char *, char *, uint64_t))(v228 + 32))(v225, v226, v227);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
LABEL_116:
  uint64_t v233 = sub_63BAC(&qword_3CB0A0);
  *(void *)&v225[*(int *)(v233 + 28)] = *(void *)&v226[*(int *)(v233 + 28)];
  swift_release();
  return v5;
}

uint64_t getEnumTagSinglePayload for PageContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13AA80);
}

uint64_t sub_13AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C97F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_63BAC(&qword_3CB0A0);
    __n128 v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PageContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13AB94);
}

uint64_t sub_13AB94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_63BAC(&qword_3C97F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_63BAC(&qword_3CB0A0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_13ACA0()
{
  sub_13ADC8(319, &qword_3CC2A8, type metadata accessor for PageContent.PageInfo, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F)
  {
    sub_13ADC8(319, (unint64_t *)&unk_3CC2B0, type metadata accessor for PageAlert, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_13ADC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PageContent.ContentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = *a2;
      swift_errorRetain();
      *a1 = v23;
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_retain();
      swift_retain();
      uint64_t v9 = *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
      uint64_t v10 = (uint64_t *)((char *)a1 + v9);
      __n128 v11 = (char *)a2 + v9;
      uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      uint64_t v13 = (int *)type metadata accessor for Page();
      uint64_t v14 = v13[5];
      __dst = (char *)v10 + v14;
      uint64_t v15 = &v11[v14];
      uint64_t v16 = sub_2DF5D0();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v19 = v15;
      uint64_t v20 = v16;
      swift_bridgeObjectRetain();
      long long v59 = v18;
      if (v18(v19, 1, v20))
      {
        uint64_t v21 = sub_63BAC(&qword_3C97E8);
        memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v24 = v17;
      uint64_t v25 = v13[6];
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = &v11[v25];
      if (v59(&v11[v25], 1, v20))
      {
        uint64_t v28 = sub_63BAC(&qword_3C97E8);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v27, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v20);
      }
      *((unsigned char *)v10 + v13[7]) = v11[v13[7]];
      *((unsigned char *)v10 + v13[8]) = v11[v13[8]];
      uint64_t v29 = v13[9];
      size_t v30 = (char *)v10 + v29;
      uint64_t v31 = &v11[v29];
      uint64_t v32 = sub_2E0980();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = sub_63BAC(&qword_3CB0B8);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      *(void *)((char *)v10 + v13[10]) = *(void *)&v11[v13[10]];
      *(void *)((char *)v10 + v13[11]) = *(void *)&v11[v13[11]];
      *((unsigned char *)v10 + v13[12]) = v11[v13[12]];
      *(void *)((char *)v10 + v13[13]) = *(void *)&v11[v13[13]];
      uint64_t v35 = v13[14];
      uint64_t v36 = (void *)((char *)v10 + v35);
      uint64_t v37 = &v11[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *uint64_t v36 = *(void *)v37;
      v36[1] = v38;
      uint64_t v39 = v13[15];
      __dsta = &v11[v39];
      uint64_t v60 = (char *)v10 + v39;
      uint64_t v40 = sub_2DE7F0();
      int v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v56(v60, __dsta, v40);
      *(void *)((char *)v10 + v13[16]) = *(void *)&v11[v13[16]];
      uint64_t v41 = v13[17];
      uint64_t v42 = (char *)v10 + v41;
      uint64_t v43 = &v11[v41];
      uint64_t v44 = sub_2E38D0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      *((unsigned char *)v10 + v13[18]) = v11[v13[18]];
      *(void *)((char *)v10 + v13[19]) = *(void *)&v11[v13[19]];
      *(void *)((char *)v10 + v13[20]) = *(void *)&v11[v13[20]];
      *((unsigned char *)v10 + v13[21]) = v11[v13[21]];
      uint64_t v46 = v13[22];
      uint64_t v47 = (void *)((char *)v10 + v46);
      uint64_t v48 = &v11[v46];
      uint64_t v49 = *((void *)v48 + 1);
      *uint64_t v47 = *(void *)v48;
      v47[1] = v49;
      uint64_t v50 = v13[23];
      uint64_t v51 = (char *)v10 + v50;
      uint64_t v52 = &v11[v50];
      uint64_t v53 = *(void *)&v11[v50 + 8];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v53)
      {
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v53;
        *((_OWORD *)v51 + 1) = *((_OWORD *)v52 + 1);
        *((void *)v51 + 4) = *((void *)v52 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v54 = *((_OWORD *)v52 + 1);
        *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
        *((_OWORD *)v51 + 1) = v54;
        *((void *)v51 + 4) = *((void *)v52 + 4);
      }
      goto LABEL_19;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for PageContent.ContentType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_errorRelease();
  }
  else if (!result)
  {
    swift_release();
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
    swift_bridgeObjectRelease();
    uint64_t v4 = (int *)type metadata accessor for Page();
    uint64_t v5 = v3 + v4[5];
    uint64_t v6 = sub_2DF5D0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = v3 + v4[6];
    if (!v8(v9, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    }
    uint64_t v10 = v3 + v4[9];
    uint64_t v11 = sub_2E0980();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v3 + v4[15];
    uint64_t v14 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = v3 + v4[17];
    uint64_t v16 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(v3 + v4[23] + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t *initializeWithCopy for PageContent.ContentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *a2;
    swift_errorRetain();
    *a1 = v20;
LABEL_18:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
    uint64_t v55 = a1;
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    void *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = (int *)type metadata accessor for Page();
    uint64_t v13 = v12[5];
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_2DF5D0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v21 = v12[6];
    uint64_t v22 = (char *)v9 + v21;
    uint64_t v23 = &v10[v21];
    if (v18(&v10[v21], 1, v16))
    {
      uint64_t v24 = sub_63BAC(&qword_3C97E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    *((unsigned char *)v9 + v12[7]) = v10[v12[7]];
    *((unsigned char *)v9 + v12[8]) = v10[v12[8]];
    uint64_t v25 = v12[9];
    uint64_t v26 = (char *)v9 + v25;
    uint64_t v27 = &v10[v25];
    uint64_t v28 = sub_2E0980();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_63BAC(&qword_3CB0B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)((char *)v9 + v12[10]) = *(void *)&v10[v12[10]];
    *(void *)((char *)v9 + v12[11]) = *(void *)&v10[v12[11]];
    *((unsigned char *)v9 + v12[12]) = v10[v12[12]];
    *(void *)((char *)v9 + v12[13]) = *(void *)&v10[v12[13]];
    uint64_t v31 = v12[14];
    uint64_t v32 = (void *)((char *)v9 + v31);
    uint64_t v33 = &v10[v31];
    uint64_t v34 = *((void *)v33 + 1);
    void *v32 = *(void *)v33;
    v32[1] = v34;
    uint64_t v35 = v12[15];
    uint64_t v53 = &v10[v35];
    long long v54 = (char *)v9 + v35;
    uint64_t v36 = sub_2DE7F0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v54, v53, v36);
    *(void *)((char *)v9 + v12[16]) = *(void *)&v10[v12[16]];
    uint64_t v38 = v12[17];
    uint64_t v39 = (char *)v9 + v38;
    uint64_t v40 = &v10[v38];
    uint64_t v41 = sub_2E38D0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    *((unsigned char *)v9 + v12[18]) = v10[v12[18]];
    *(void *)((char *)v9 + v12[19]) = *(void *)&v10[v12[19]];
    *(void *)((char *)v9 + v12[20]) = *(void *)&v10[v12[20]];
    *((unsigned char *)v9 + v12[21]) = v10[v12[21]];
    uint64_t v43 = v12[22];
    uint64_t v44 = (void *)((char *)v9 + v43);
    uint64_t v45 = &v10[v43];
    uint64_t v46 = *((void *)v45 + 1);
    void *v44 = *(void *)v45;
    v44[1] = v46;
    uint64_t v47 = v12[23];
    uint64_t v48 = (char *)v9 + v47;
    uint64_t v49 = &v10[v47];
    uint64_t v50 = *((void *)v49 + 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((void *)v48 + 4) = *((void *)v49 + 4);
    }
    a1 = v55;
    goto LABEL_18;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t *assignWithCopy for PageContent.ContentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_12FEC8((uint64_t)a1, type metadata accessor for PageContent.ContentType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = *a2;
      swift_errorRetain();
      *a1 = v18;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
      uint64_t v8 = (uint64_t *)((char *)a1 + v7);
      uint64_t v9 = (char *)a2 + v7;
      *uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
      v8[1] = *(uint64_t *)((char *)a2 + v7 + 8);
      uint64_t v10 = (int *)type metadata accessor for Page();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)v8 + v11;
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_2DF5D0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        uint64_t v17 = sub_63BAC(&qword_3C97E8);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v19 = v10[6];
      uint64_t v20 = (char *)v8 + v19;
      uint64_t v21 = &v9[v19];
      if (v16(&v9[v19], 1, v14))
      {
        uint64_t v22 = sub_63BAC(&qword_3C97E8);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v21, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
      }
      *((unsigned char *)v8 + v10[7]) = v9[v10[7]];
      *((unsigned char *)v8 + v10[8]) = v9[v10[8]];
      uint64_t v23 = v10[9];
      uint64_t v24 = (char *)v8 + v23;
      uint64_t v25 = &v9[v23];
      uint64_t v26 = sub_2E0980();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = sub_63BAC(&qword_3CB0B8);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(void *)((char *)v8 + v10[10]) = *(void *)&v9[v10[10]];
      *(void *)((char *)v8 + v10[11]) = *(void *)&v9[v10[11]];
      *((unsigned char *)v8 + v10[12]) = v9[v10[12]];
      *(void *)((char *)v8 + v10[13]) = *(void *)&v9[v10[13]];
      uint64_t v29 = v10[14];
      uint64_t v30 = (void *)((char *)v8 + v29);
      uint64_t v31 = &v9[v29];
      *uint64_t v30 = *(void *)v31;
      v30[1] = *((void *)v31 + 1);
      uint64_t v32 = v10[15];
      uint64_t v50 = &v9[v32];
      long long v51 = (char *)v8 + v32;
      uint64_t v33 = sub_2DE7F0();
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(v51, v50, v33);
      *(void *)((char *)v8 + v10[16]) = *(void *)&v9[v10[16]];
      uint64_t v34 = v10[17];
      uint64_t v35 = (char *)v8 + v34;
      uint64_t v36 = &v9[v34];
      uint64_t v37 = sub_2E38D0();
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      *((unsigned char *)v8 + v10[18]) = v9[v10[18]];
      *(void *)((char *)v8 + v10[19]) = *(void *)&v9[v10[19]];
      *(void *)((char *)v8 + v10[20]) = *(void *)&v9[v10[20]];
      *((unsigned char *)v8 + v10[21]) = v9[v10[21]];
      uint64_t v39 = v10[22];
      uint64_t v40 = (void *)((char *)v8 + v39);
      uint64_t v41 = &v9[v39];
      *uint64_t v40 = *(void *)v41;
      v40[1] = *((void *)v41 + 1);
      uint64_t v42 = v10[23];
      uint64_t v43 = (void *)((char *)v8 + v42);
      uint64_t v44 = &v9[v42];
      uint64_t v45 = *((void *)v44 + 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v45)
      {
        *uint64_t v43 = *(void *)v44;
        v43[1] = *((void *)v44 + 1);
        v43[2] = *((void *)v44 + 2);
        v43[3] = *((void *)v44 + 3);
        v43[4] = *((void *)v44 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *(_OWORD *)v44;
        long long v47 = *((_OWORD *)v44 + 1);
        v43[4] = *((void *)v44 + 4);
        *(_OWORD *)uint64_t v43 = v46;
        *((_OWORD *)v43 + 1) = v47;
      }
      goto LABEL_18;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for PageContent.ContentType(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
    uint64_t v41 = a1;
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    uint64_t v10 = (int *)type metadata accessor for Page();
    uint64_t v11 = v10[5];
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = sub_2DF5D0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_63BAC(&qword_3C97E8);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = v10[6];
    uint64_t v19 = &v8[v18];
    uint64_t v20 = &v9[v18];
    if (v16(&v9[v18], 1, v14))
    {
      uint64_t v21 = sub_63BAC(&qword_3C97E8);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    v8[v10[7]] = v9[v10[7]];
    v8[v10[8]] = v9[v10[8]];
    uint64_t v22 = v10[9];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    uint64_t v25 = sub_2E0980();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_63BAC(&qword_3CB0B8);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
    *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
    v8[v10[12]] = v9[v10[12]];
    *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
    *(_OWORD *)&v8[v10[14]] = *(_OWORD *)&v9[v10[14]];
    uint64_t v28 = v10[15];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    uint64_t v31 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
    uint64_t v32 = v10[17];
    uint64_t v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    uint64_t v35 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    v8[v10[18]] = v9[v10[18]];
    *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
    *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
    v8[v10[21]] = v9[v10[21]];
    *(_OWORD *)&v8[v10[22]] = *(_OWORD *)&v9[v10[22]];
    uint64_t v36 = v10[23];
    uint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    long long v39 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v39;
    *((void *)v37 + 4) = *((void *)v38 + 4);
    a1 = v41;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PageContent.ContentType(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_12FEC8((uint64_t)a1, type metadata accessor for PageContent.ContentType);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = *(int *)(sub_63BAC(&qword_3CB1B0) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for Page();
      uint64_t v11 = v10[5];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_2DF5D0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      if (v40(v13, 1, v14))
      {
        uint64_t v16 = sub_63BAC(&qword_3C97E8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v17 = v10[6];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      if (v40(&v9[v17], 1, v14))
      {
        uint64_t v20 = sub_63BAC(&qword_3C97E8);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      v8[v10[7]] = v9[v10[7]];
      v8[v10[8]] = v9[v10[8]];
      uint64_t v21 = v10[9];
      uint64_t v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      uint64_t v24 = sub_2E0980();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_63BAC(&qword_3CB0B8);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
      *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
      v8[v10[12]] = v9[v10[12]];
      *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
      *(_OWORD *)&v8[v10[14]] = *(_OWORD *)&v9[v10[14]];
      uint64_t v27 = v10[15];
      uint64_t v28 = &v8[v27];
      uint64_t v29 = &v9[v27];
      uint64_t v30 = sub_2DE7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
      uint64_t v31 = v10[17];
      uint64_t v32 = &v8[v31];
      uint64_t v33 = &v9[v31];
      uint64_t v34 = sub_2E38D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      v8[v10[18]] = v9[v10[18]];
      *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
      *(void *)&v8[v10[20]] = *(void *)&v9[v10[20]];
      v8[v10[21]] = v9[v10[21]];
      *(_OWORD *)&v8[v10[22]] = *(_OWORD *)&v9[v10[22]];
      uint64_t v35 = v10[23];
      uint64_t v36 = &v8[v35];
      uint64_t v37 = &v9[v35];
      long long v38 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v38;
      *((void *)v36 + 4) = *((void *)v37 + 4);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_13CA80()
{
  sub_13ADC8(319, (unint64_t *)&unk_3CC360, (uint64_t (*)(uint64_t))type metadata accessor for Page, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_13CB40()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_13CBD0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = v6[5];
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)v3 + v8);
    uint64_t v11 = (int *)type metadata accessor for Page();
    uint64_t v157 = *((void *)v11 - 1);
    uint64_t v12 = *(unsigned int (**)(void, void, void))(v157 + 48);
    long long v158 = v4;
    if (v12(v10, 1, v11))
    {
      uint64_t v13 = sub_63BAC(&qword_3C97F0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      int v149 = v12;
      uint64_t v151 = v3;
      uint64_t v154 = v6;
      uint64_t v15 = v10[1];
      void *v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v11[5];
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = sub_2DF5D0();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        uint64_t v22 = sub_63BAC(&qword_3C97E8);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v23 = v11[6];
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      if (v21((char *)v10 + v23, 1, v19))
      {
        uint64_t v26 = sub_63BAC(&qword_3C97E8);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
      }
      *((unsigned char *)v9 + v11[7]) = *((unsigned char *)v10 + v11[7]);
      *((unsigned char *)v9 + v11[8]) = *((unsigned char *)v10 + v11[8]);
      uint64_t v27 = v11[9];
      uint64_t v28 = (char *)v9 + v27;
      uint64_t v29 = (char *)v10 + v27;
      uint64_t v30 = sub_2E0980();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_63BAC(&qword_3CB0B8);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)((char *)v9 + v11[10]) = *(void *)((char *)v10 + v11[10]);
      *(void *)((char *)v9 + v11[11]) = *(void *)((char *)v10 + v11[11]);
      *((unsigned char *)v9 + v11[12]) = *((unsigned char *)v10 + v11[12]);
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      uint64_t v34 = (void *)((char *)v9 + v33);
      uint64_t v35 = (void *)((char *)v10 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v11[15];
      uint64_t v145 = (char *)v10 + v37;
      uint64_t v147 = (char *)v9 + v37;
      uint64_t v38 = sub_2DE7F0();
      long long v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v147, v145, v38);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      uint64_t v40 = v11[17];
      uint64_t v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      uint64_t v43 = sub_2E38D0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      *((unsigned char *)v9 + v11[18]) = *((unsigned char *)v10 + v11[18]);
      *(void *)((char *)v9 + v11[19]) = *(void *)((char *)v10 + v11[19]);
      *(void *)((char *)v9 + v11[20]) = *(void *)((char *)v10 + v11[20]);
      *((unsigned char *)v9 + v11[21]) = *((unsigned char *)v10 + v11[21]);
      uint64_t v45 = v11[22];
      long long v46 = (void *)((char *)v9 + v45);
      long long v47 = (void *)((char *)v10 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v11[23];
      uint64_t v50 = (char *)v9 + v49;
      long long v51 = (char *)v10 + v49;
      uint64_t v52 = *(void *)((char *)v10 + v49 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v52)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = v52;
        *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
        *((void *)v50 + 4) = *((void *)v51 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v53 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v53;
        *((void *)v50 + 4) = *((void *)v51 + 4);
      }
      uint64_t v3 = v151;
      uint64_t v12 = v149;
      (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v9, 0, 1, v11);
      uint64_t v4 = v158;
      uint64_t v6 = v154;
    }
    uint64_t v54 = v6[6];
    uint64_t v55 = (void *)((char *)v4 + v54);
    int v56 = (uint64_t *)((char *)v3 + v54);
    if (v12((char *)v3 + v54, 1, v11))
    {
      uint64_t v57 = sub_63BAC(&qword_3C97F0);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      size_t v150 = v12;
      uint64_t v152 = v3;
      uint64_t v155 = v6;
      uint64_t v58 = v56[1];
      void *v55 = *v56;
      v55[1] = v58;
      uint64_t v59 = v11[5];
      uint64_t v60 = (char *)v55 + v59;
      uint64_t v61 = (char *)v56 + v59;
      uint64_t v62 = sub_2DF5D0();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      swift_bridgeObjectRetain();
      if (v64(v61, 1, v62))
      {
        uint64_t v65 = sub_63BAC(&qword_3C97E8);
        memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v66 = v11[6];
      size_t v67 = (char *)v55 + v66;
      uint64_t v68 = (char *)v56 + v66;
      if (v64((char *)v56 + v66, 1, v62))
      {
        uint64_t v69 = sub_63BAC(&qword_3C97E8);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v67, v68, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v62);
      }
      *((unsigned char *)v55 + v11[7]) = *((unsigned char *)v56 + v11[7]);
      *((unsigned char *)v55 + v11[8]) = *((unsigned char *)v56 + v11[8]);
      uint64_t v70 = v11[9];
      uint64_t v71 = (char *)v55 + v70;
      uint64_t v72 = (char *)v56 + v70;
      uint64_t v73 = sub_2E0980();
      uint64_t v74 = *(void *)(v73 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        uint64_t v75 = sub_63BAC(&qword_3CB0B8);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      *(void *)((char *)v55 + v11[10]) = *(void *)((char *)v56 + v11[10]);
      *(void *)((char *)v55 + v11[11]) = *(void *)((char *)v56 + v11[11]);
      *((unsigned char *)v55 + v11[12]) = *((unsigned char *)v56 + v11[12]);
      *(void *)((char *)v55 + v11[13]) = *(void *)((char *)v56 + v11[13]);
      uint64_t v76 = v11[14];
      uint64_t v77 = (void *)((char *)v55 + v76);
      uint64_t v78 = (void *)((char *)v56 + v76);
      uint64_t v79 = v78[1];
      *uint64_t v77 = *v78;
      v77[1] = v79;
      uint64_t v80 = v11[15];
      uint64_t v146 = (char *)v56 + v80;
      uint64_t v148 = (char *)v55 + v80;
      uint64_t v81 = sub_2DE7F0();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v148, v146, v81);
      *(void *)((char *)v55 + v11[16]) = *(void *)((char *)v56 + v11[16]);
      uint64_t v83 = v11[17];
      uint64_t v84 = (char *)v55 + v83;
      uint64_t v85 = (char *)v56 + v83;
      uint64_t v86 = sub_2E38D0();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v86);
      *((unsigned char *)v55 + v11[18]) = *((unsigned char *)v56 + v11[18]);
      *(void *)((char *)v55 + v11[19]) = *(void *)((char *)v56 + v11[19]);
      *(void *)((char *)v55 + v11[20]) = *(void *)((char *)v56 + v11[20]);
      *((unsigned char *)v55 + v11[21]) = *((unsigned char *)v56 + v11[21]);
      uint64_t v88 = v11[22];
      uint64_t v89 = (void *)((char *)v55 + v88);
      uint64_t v90 = (void *)((char *)v56 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v11[23];
      uint64_t v93 = (char *)v55 + v92;
      uint64_t v94 = (char *)v56 + v92;
      uint64_t v95 = *(void *)((char *)v56 + v92 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v95)
      {
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        *((_OWORD *)v93 + 1) = *((_OWORD *)v94 + 1);
        *((void *)v93 + 4) = *((void *)v94 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v96 = *((_OWORD *)v94 + 1);
        *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
        *((_OWORD *)v93 + 1) = v96;
        *((void *)v93 + 4) = *((void *)v94 + 4);
      }
      uint64_t v3 = v152;
      uint64_t v12 = v150;
      (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v55, 0, 1, v11);
      uint64_t v4 = v158;
      uint64_t v6 = v155;
    }
    uint64_t v97 = v6[8];
    *((unsigned char *)v4 + v6[7]) = *((unsigned char *)v3 + v6[7]);
    uint64_t v98 = (char *)v4 + v97;
    uint64_t v99 = (uint64_t)v3 + v97;
    uint64_t v100 = sub_63BAC(&qword_3CAF50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = v6[9];
    uint64_t v102 = (void *)((char *)v4 + v101);
    uint64_t v103 = (uint64_t *)((char *)v3 + v101);
    if (v12((char *)v3 + v101, 1, v11))
    {
      uint64_t v104 = sub_63BAC(&qword_3C97F0);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      uint64_t v105 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v105;
      uint64_t v106 = v11[5];
      uint64_t v107 = (char *)v102 + v106;
      uint64_t v108 = (char *)v103 + v106;
      uint64_t v109 = sub_2DF5D0();
      uint64_t v110 = *(void *)(v109 - 8);
      long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
      swift_bridgeObjectRetain();
      if (v111(v108, 1, v109))
      {
        uint64_t v112 = sub_63BAC(&qword_3C97E8);
        memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
      }
      uint64_t v113 = v11[6];
      uint64_t v114 = (char *)v102 + v113;
      uint64_t v115 = (char *)v103 + v113;
      if (v111((char *)v103 + v113, 1, v109))
      {
        uint64_t v116 = sub_63BAC(&qword_3C97E8);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v114, v115, v109);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v114, 0, 1, v109);
      }
      *((unsigned char *)v102 + v11[7]) = *((unsigned char *)v103 + v11[7]);
      *((unsigned char *)v102 + v11[8]) = *((unsigned char *)v103 + v11[8]);
      uint64_t v117 = v11[9];
      uint64_t v118 = (char *)v102 + v117;
      uint64_t v119 = (char *)v103 + v117;
      uint64_t v120 = sub_2E0980();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        uint64_t v122 = sub_63BAC(&qword_3CB0B8);
        memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      *(void *)((char *)v102 + v11[10]) = *(void *)((char *)v103 + v11[10]);
      *(void *)((char *)v102 + v11[11]) = *(void *)((char *)v103 + v11[11]);
      *((unsigned char *)v102 + v11[12]) = *((unsigned char *)v103 + v11[12]);
      *(void *)((char *)v102 + v11[13]) = *(void *)((char *)v103 + v11[13]);
      uint64_t v123 = v11[14];
      uint64_t v124 = (void *)((char *)v102 + v123);
      uint64_t v125 = (void *)((char *)v103 + v123);
      uint64_t v126 = v125[1];
      void *v124 = *v125;
      v124[1] = v126;
      uint64_t v127 = v11[15];
      uint64_t v153 = (char *)v103 + v127;
      uint64_t v156 = (char *)v102 + v127;
      uint64_t v128 = sub_2DE7F0();
      uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v129(v156, v153, v128);
      *(void *)((char *)v102 + v11[16]) = *(void *)((char *)v103 + v11[16]);
      uint64_t v130 = v11[17];
      uint64_t v131 = (char *)v102 + v130;
      uint64_t v132 = (char *)v103 + v130;
      uint64_t v133 = sub_2E38D0();
      int v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      v134(v131, v132, v133);
      *((unsigned char *)v102 + v11[18]) = *((unsigned char *)v103 + v11[18]);
      *(void *)((char *)v102 + v11[19]) = *(void *)((char *)v103 + v11[19]);
      *(void *)((char *)v102 + v11[20]) = *(void *)((char *)v103 + v11[20]);
      *((unsigned char *)v102 + v11[21]) = *((unsigned char *)v103 + v11[21]);
      uint64_t v135 = v11[22];
      long long v136 = (void *)((char *)v102 + v135);
      uint64_t v137 = (void *)((char *)v103 + v135);
      uint64_t v138 = v137[1];
      void *v136 = *v137;
      v136[1] = v138;
      uint64_t v139 = v11[23];
      int v140 = (char *)v102 + v139;
      size_t v141 = (char *)v103 + v139;
      uint64_t v142 = *(void *)((char *)v103 + v139 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v142)
      {
        *(void *)int v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        *((_OWORD *)v140 + 1) = *((_OWORD *)v141 + 1);
        *((void *)v140 + 4) = *((void *)v141 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v143 = *((_OWORD *)v141 + 1);
        *(_OWORD *)int v140 = *(_OWORD *)v141;
        *((_OWORD *)v140 + 1) = v143;
        *((void *)v140 + 4) = *((void *)v141 + 4);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v102, 0, 1, v11);
      return v158;
    }
  }
  return v4;
}

uint64_t sub_13DB74(uint64_t a1, int *a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  uint64_t v4 = a1 + a2[5];
  int v5 = (int *)type metadata accessor for Page();
  uint64_t v6 = *(unsigned int (**)(void, void, void))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v48 = v6;
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[5];
    uint64_t v8 = sub_2DF5D0();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v11 = v4 + v5[6];
    if (!v10(v11, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v12 = v4 + v5[9];
    uint64_t v13 = sub_2E0980();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v4 + v5[15];
    uint64_t v16 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = v4 + v5[17];
    uint64_t v18 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v6 = v48;
    if (*(void *)(v4 + v5[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = a1 + a2[6];
  if (!v6(v19, 1, v5))
  {
    uint64_t v49 = v6;
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + v5[5];
    uint64_t v21 = sub_2DF5D0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (!v23(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v24 = v19 + v5[6];
    if (!v23(v24, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    }
    uint64_t v25 = v19 + v5[9];
    uint64_t v26 = sub_2E0980();
    uint64_t v27 = *(void *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v19 + v5[15];
    uint64_t v29 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_bridgeObjectRelease();
    uint64_t v30 = v19 + v5[17];
    uint64_t v31 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v6 = v49;
    if (*(void *)(v19 + v5[23] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v32 = a1 + a2[8];
  uint64_t v33 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  uint64_t v34 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v34, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v34 + v5[5];
    uint64_t v37 = sub_2DF5D0();
    uint64_t v38 = *(void *)(v37 - 8);
    long long v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v34 + v5[6];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v34 + v5[9];
    uint64_t v42 = sub_2E0980();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v34 + v5[15];
    uint64_t v45 = sub_2DE7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v34 + v5[17];
    uint64_t v47 = sub_2E38D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(v34 + v5[23] + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_13E3E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(v5 + v7);
  uint64_t v9 = (void *)(v4 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v155 = *((void *)v10 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v155 + 48);
  uint64_t v156 = v5;
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v147 = v11;
    int v149 = a3;
    uint64_t v152 = v4;
    uint64_t v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v10[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_2DF5D0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_63BAC(&qword_3C97E8);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v10[6];
    uint64_t v22 = (char *)v8 + v21;
    uint64_t v23 = (char *)v9 + v21;
    if (v19((char *)v9 + v21, 1, v17))
    {
      uint64_t v24 = sub_63BAC(&qword_3C97E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v23, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
    }
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v25 = v10[9];
    uint64_t v26 = (char *)v8 + v25;
    uint64_t v27 = (char *)v9 + v25;
    uint64_t v28 = sub_2E0980();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_63BAC(&qword_3CB0B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    uint64_t v32 = (void *)((char *)v8 + v31);
    uint64_t v33 = (void *)((char *)v9 + v31);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v10[15];
    long long v143 = (char *)v9 + v35;
    uint64_t v145 = (char *)v8 + v35;
    uint64_t v36 = sub_2DE7F0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v145, v143, v36);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v38 = v10[17];
    long long v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    uint64_t v41 = sub_2E38D0();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    uint64_t v43 = v10[22];
    uint64_t v44 = (void *)((char *)v8 + v43);
    uint64_t v45 = (void *)((char *)v9 + v43);
    uint64_t v46 = v45[1];
    void *v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = v10[23];
    uint64_t v48 = (char *)v8 + v47;
    uint64_t v49 = (char *)v9 + v47;
    uint64_t v50 = *(void *)((char *)v9 + v47 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((void *)v48 + 4) = *((void *)v49 + 4);
    }
    uint64_t v4 = v152;
    uint64_t v11 = v147;
    (*(void (**)(void *, void, uint64_t, int *))(v155 + 56))(v8, 0, 1, v10);
    uint64_t v5 = v156;
    a3 = v149;
  }
  uint64_t v52 = a3[6];
  long long v53 = (void *)(v5 + v52);
  uint64_t v54 = (void *)(v4 + v52);
  if (v11(v4 + v52, 1, v10))
  {
    uint64_t v55 = sub_63BAC(&qword_3C97F0);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    uint64_t v148 = v11;
    size_t v150 = a3;
    uint64_t v153 = v4;
    uint64_t v56 = v54[1];
    *long long v53 = *v54;
    v53[1] = v56;
    uint64_t v57 = v10[5];
    uint64_t v58 = (char *)v53 + v57;
    uint64_t v59 = (char *)v54 + v57;
    uint64_t v60 = sub_2DF5D0();
    uint64_t v61 = *(void *)(v60 - 8);
    uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    if (v62(v59, 1, v60))
    {
      uint64_t v63 = sub_63BAC(&qword_3C97E8);
      memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v64 = v10[6];
    uint64_t v65 = (char *)v53 + v64;
    uint64_t v66 = (char *)v54 + v64;
    if (v62((char *)v54 + v64, 1, v60))
    {
      uint64_t v67 = sub_63BAC(&qword_3C97E8);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v65, v66, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v65, 0, 1, v60);
    }
    *((unsigned char *)v53 + v10[7]) = *((unsigned char *)v54 + v10[7]);
    *((unsigned char *)v53 + v10[8]) = *((unsigned char *)v54 + v10[8]);
    uint64_t v68 = v10[9];
    uint64_t v69 = (char *)v53 + v68;
    uint64_t v70 = (char *)v54 + v68;
    uint64_t v71 = sub_2E0980();
    uint64_t v72 = *(void *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      uint64_t v73 = sub_63BAC(&qword_3CB0B8);
      memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    *(void *)((char *)v53 + v10[10]) = *(void *)((char *)v54 + v10[10]);
    *(void *)((char *)v53 + v10[11]) = *(void *)((char *)v54 + v10[11]);
    *((unsigned char *)v53 + v10[12]) = *((unsigned char *)v54 + v10[12]);
    *(void *)((char *)v53 + v10[13]) = *(void *)((char *)v54 + v10[13]);
    uint64_t v74 = v10[14];
    uint64_t v75 = (void *)((char *)v53 + v74);
    uint64_t v76 = (void *)((char *)v54 + v74);
    uint64_t v77 = v76[1];
    void *v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v10[15];
    uint64_t v144 = (char *)v54 + v78;
    uint64_t v146 = (char *)v53 + v78;
    uint64_t v79 = sub_2DE7F0();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v146, v144, v79);
    *(void *)((char *)v53 + v10[16]) = *(void *)((char *)v54 + v10[16]);
    uint64_t v81 = v10[17];
    uint64_t v82 = (char *)v53 + v81;
    uint64_t v83 = (char *)v54 + v81;
    uint64_t v84 = sub_2E38D0();
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
    swift_bridgeObjectRetain();
    v85(v82, v83, v84);
    *((unsigned char *)v53 + v10[18]) = *((unsigned char *)v54 + v10[18]);
    *(void *)((char *)v53 + v10[19]) = *(void *)((char *)v54 + v10[19]);
    *(void *)((char *)v53 + v10[20]) = *(void *)((char *)v54 + v10[20]);
    *((unsigned char *)v53 + v10[21]) = *((unsigned char *)v54 + v10[21]);
    uint64_t v86 = v10[22];
    uint64_t v87 = (void *)((char *)v53 + v86);
    uint64_t v88 = (void *)((char *)v54 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v10[23];
    uint64_t v91 = (char *)v53 + v90;
    uint64_t v92 = (char *)v54 + v90;
    uint64_t v93 = *(void *)((char *)v54 + v90 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v93)
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      *((_OWORD *)v91 + 1) = *((_OWORD *)v92 + 1);
      *((void *)v91 + 4) = *((void *)v92 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v94 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v94;
      *((void *)v91 + 4) = *((void *)v92 + 4);
    }
    uint64_t v4 = v153;
    uint64_t v11 = v148;
    (*(void (**)(void *, void, uint64_t, int *))(v155 + 56))(v53, 0, 1, v10);
    uint64_t v5 = v156;
    a3 = v150;
  }
  uint64_t v95 = a3[8];
  *(unsigned char *)(v5 + a3[7]) = *(unsigned char *)(v4 + a3[7]);
  uint64_t v96 = v5 + v95;
  uint64_t v97 = v4 + v95;
  uint64_t v98 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
  uint64_t v99 = a3[9];
  uint64_t v100 = (void *)(v5 + v99);
  uint64_t v101 = (void *)(v4 + v99);
  if (v11(v4 + v99, 1, v10))
  {
    uint64_t v102 = sub_63BAC(&qword_3C97F0);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v103 = v101[1];
    *uint64_t v100 = *v101;
    v100[1] = v103;
    uint64_t v104 = v10[5];
    uint64_t v105 = (char *)v100 + v104;
    uint64_t v106 = (char *)v101 + v104;
    uint64_t v107 = sub_2DF5D0();
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
    swift_bridgeObjectRetain();
    if (v109(v106, 1, v107))
    {
      uint64_t v110 = sub_63BAC(&qword_3C97E8);
      memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
    }
    uint64_t v111 = v10[6];
    uint64_t v112 = (char *)v100 + v111;
    uint64_t v113 = (char *)v101 + v111;
    if (v109((char *)v101 + v111, 1, v107))
    {
      uint64_t v114 = sub_63BAC(&qword_3C97E8);
      memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v113, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v112, 0, 1, v107);
    }
    *((unsigned char *)v100 + v10[7]) = *((unsigned char *)v101 + v10[7]);
    *((unsigned char *)v100 + v10[8]) = *((unsigned char *)v101 + v10[8]);
    uint64_t v115 = v10[9];
    uint64_t v116 = (char *)v100 + v115;
    uint64_t v117 = (char *)v101 + v115;
    uint64_t v118 = sub_2E0980();
    uint64_t v119 = *(void *)(v118 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
    {
      uint64_t v120 = sub_63BAC(&qword_3CB0B8);
      memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v117, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
    }
    *(void *)((char *)v100 + v10[10]) = *(void *)((char *)v101 + v10[10]);
    *(void *)((char *)v100 + v10[11]) = *(void *)((char *)v101 + v10[11]);
    *((unsigned char *)v100 + v10[12]) = *((unsigned char *)v101 + v10[12]);
    *(void *)((char *)v100 + v10[13]) = *(void *)((char *)v101 + v10[13]);
    uint64_t v121 = v10[14];
    uint64_t v122 = (void *)((char *)v100 + v121);
    uint64_t v123 = (void *)((char *)v101 + v121);
    uint64_t v124 = v123[1];
    *uint64_t v122 = *v123;
    v122[1] = v124;
    uint64_t v125 = v10[15];
    uint64_t v151 = (char *)v101 + v125;
    uint64_t v154 = (char *)v100 + v125;
    uint64_t v126 = sub_2DE7F0();
    uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v127(v154, v151, v126);
    *(void *)((char *)v100 + v10[16]) = *(void *)((char *)v101 + v10[16]);
    uint64_t v128 = v10[17];
    uint64_t v129 = (char *)v100 + v128;
    uint64_t v130 = (char *)v101 + v128;
    uint64_t v131 = sub_2E38D0();
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
    swift_bridgeObjectRetain();
    v132(v129, v130, v131);
    *((unsigned char *)v100 + v10[18]) = *((unsigned char *)v101 + v10[18]);
    *(void *)((char *)v100 + v10[19]) = *(void *)((char *)v101 + v10[19]);
    *(void *)((char *)v100 + v10[20]) = *(void *)((char *)v101 + v10[20]);
    *((unsigned char *)v100 + v10[21]) = *((unsigned char *)v101 + v10[21]);
    uint64_t v133 = v10[22];
    int v134 = (void *)((char *)v100 + v133);
    uint64_t v135 = (void *)((char *)v101 + v133);
    uint64_t v136 = v135[1];
    void *v134 = *v135;
    v134[1] = v136;
    uint64_t v137 = v10[23];
    uint64_t v138 = (char *)v100 + v137;
    uint64_t v139 = (char *)v101 + v137;
    uint64_t v140 = *(void *)((char *)v101 + v137 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v140)
    {
      *(void *)uint64_t v138 = *(void *)v139;
      *((void *)v138 + 1) = v140;
      *((_OWORD *)v138 + 1) = *((_OWORD *)v139 + 1);
      *((void *)v138 + 4) = *((void *)v139 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v141 = *((_OWORD *)v139 + 1);
      *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
      *((_OWORD *)v138 + 1) = v141;
      *((void *)v138 + 4) = *((void *)v139 + 4);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v155 + 56))(v100, 0, 1, v10);
    return v156;
  }
  return v5;
}

uint64_t *sub_13F324(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  sub_6FA20(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)type metadata accessor for Page();
  uint64_t v292 = *((void *)v9 - 1);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, int *))(v292 + 48);
  int v11 = v10(v7, 1, v9);
  int v12 = v10(v8, 1, v9);
  uint64_t v293 = v5;
  uint64_t v294 = v10;
  if (!v11)
  {
    if (v12)
    {
      sub_12FEC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_7;
    }
    long long v285 = a3;
    uint64_t v288 = v4;
    *(void *)uint64_t v7 = *(void *)v8;
    *((void *)v7 + 1) = *((void *)v8 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = v9[5];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = &v8[v21];
    uint64_t v24 = sub_2DF5D0();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_68;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_68:
        uint64_t v166 = v9[6];
        uint64_t v167 = &v7[v166];
        uint64_t v168 = &v8[v166];
        int v169 = v26(&v7[v166], 1, v24);
        int v170 = v26(v168, 1, v24);
        if (v169)
        {
          if (!v170)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v167, v168, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v167, 0, 1, v24);
            goto LABEL_86;
          }
        }
        else
        {
          if (!v170)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v167, v168, v24);
LABEL_86:
            v7[v9[7]] = v8[v9[7]];
            v7[v9[8]] = v8[v9[8]];
            uint64_t v184 = v9[9];
            uint64_t v185 = &v7[v184];
            uint64_t v186 = &v8[v184];
            uint64_t v187 = sub_2E0980();
            uint64_t v188 = *(void *)(v187 - 8);
            uint64_t v189 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v188 + 48);
            int v190 = v189(v185, 1, v187);
            int v191 = v189(v186, 1, v187);
            if (v190)
            {
              a3 = v285;
              if (!v191)
              {
                (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v185, v186, v187);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
                goto LABEL_104;
              }
            }
            else
            {
              a3 = v285;
              if (!v191)
              {
                (*(void (**)(char *, char *, uint64_t))(v188 + 24))(v185, v186, v187);
LABEL_104:
                *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v7[v9[12]] = v8[v9[12]];
                *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v211 = v9[14];
                int v212 = &v7[v211];
                uint64_t v213 = &v8[v211];
                *(void *)int v212 = *v213;
                *((void *)v212 + 1) = v213[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v214 = v9[15];
                uint64_t v215 = &v7[v214];
                uint64_t v216 = &v8[v214];
                uint64_t v217 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 24))(v215, v216, v217);
                *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v218 = v9[17];
                uint64_t v219 = &v7[v218];
                int v220 = &v8[v218];
                uint64_t v221 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 24))(v219, v220, v221);
                v7[v9[18]] = v8[v9[18]];
                *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v7[v9[20]] = *(void *)&v8[v9[20]];
                swift_retain();
                swift_release();
                v7[v9[21]] = v8[v9[21]];
                uint64_t v222 = v9[22];
                uint64_t v223 = &v7[v222];
                uint64_t v224 = &v8[v222];
                *(void *)uint64_t v223 = *v224;
                *((void *)v223 + 1) = v224[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v225 = v9[23];
                uint64_t v226 = &v7[v225];
                uint64_t v227 = &v8[v225];
                uint64_t v228 = *(void *)&v8[v225 + 8];
                uint64_t v4 = v288;
                if (*((void *)v226 + 1))
                {
                  uint64_t v5 = v293;
                  if (v228)
                  {
                    *(void *)uint64_t v226 = *v227;
                    *((void *)v226 + 1) = v227[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v226 + 2) = v227[2];
                    *((void *)v226 + 3) = v227[3];
                    *((void *)v226 + 4) = v227[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v226);
                    uint64_t v268 = v227[4];
                    long long v269 = *((_OWORD *)v227 + 1);
                    *(_OWORD *)uint64_t v226 = *(_OWORD *)v227;
                    *((_OWORD *)v226 + 1) = v269;
                    *((void *)v226 + 4) = v268;
                  }
                }
                else
                {
                  uint64_t v5 = v293;
                  if (v228)
                  {
                    *(void *)uint64_t v226 = *v227;
                    *((void *)v226 + 1) = v227[1];
                    *((void *)v226 + 2) = v227[2];
                    *((void *)v226 + 3) = v227[3];
                    *((void *)v226 + 4) = v227[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v274 = *(_OWORD *)v227;
                    long long v275 = *((_OWORD *)v227 + 1);
                    *((void *)v226 + 4) = v227[4];
                    *(_OWORD *)uint64_t v226 = v274;
                    *((_OWORD *)v226 + 1) = v275;
                  }
                }
                goto LABEL_22;
              }
              (*(void (**)(char *, uint64_t))(v188 + 8))(v185, v187);
            }
            uint64_t v210 = sub_63BAC(&qword_3CB0B8);
            memcpy(v185, v186, *(void *)(*(void *)(v210 - 8) + 64));
            goto LABEL_104;
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v167, v24);
        }
        uint64_t v183 = sub_63BAC(&qword_3C97E8);
        memcpy(v167, v168, *(void *)(*(void *)(v183 - 8) + 64));
        goto LABEL_86;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v165 = sub_63BAC(&qword_3C97E8);
    memcpy(v22, v23, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_68;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v20 = sub_63BAC(&qword_3C97F0);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v284 = a3;
  long long v287 = v4;
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = *((void *)v8 + 1);
  uint64_t v13 = v9[5];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_2DF5D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_63BAC(&qword_3C97E8);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v29 = v9[6];
  uint64_t v30 = &v7[v29];
  uint64_t v31 = &v8[v29];
  if (v18(&v8[v29], 1, v16))
  {
    uint64_t v32 = sub_63BAC(&qword_3C97E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
  }
  v7[v9[7]] = v8[v9[7]];
  v7[v9[8]] = v8[v9[8]];
  uint64_t v33 = v9[9];
  uint64_t v34 = &v7[v33];
  uint64_t v35 = &v8[v33];
  uint64_t v36 = sub_2E0980();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_63BAC(&qword_3CB0B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
  v7[v9[12]] = v8[v9[12]];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  uint64_t v39 = v9[14];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  *(void *)uint64_t v40 = *v41;
  *((void *)v40 + 1) = v41[1];
  uint64_t v42 = v9[15];
  uint64_t v280 = &v8[v42];
  uint64_t v282 = &v7[v42];
  uint64_t v43 = sub_2DE7F0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v282, v280, v43);
  *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
  uint64_t v45 = v9[17];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  uint64_t v48 = sub_2E38D0();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  v49(v46, v47, v48);
  v7[v9[18]] = v8[v9[18]];
  *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
  *(void *)&v7[v9[20]] = *(void *)&v8[v9[20]];
  v7[v9[21]] = v8[v9[21]];
  uint64_t v50 = v9[22];
  long long v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  *(void *)long long v51 = *v52;
  *((void *)v51 + 1) = v52[1];
  uint64_t v53 = v9[23];
  uint64_t v54 = &v7[v53];
  uint64_t v55 = &v8[v53];
  uint64_t v56 = v55[1];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v56)
  {
    *(void *)uint64_t v54 = *v55;
    *((void *)v54 + 1) = v55[1];
    *((void *)v54 + 2) = v55[2];
    *((void *)v54 + 3) = v55[3];
    *((void *)v54 + 4) = v55[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v57 = *(_OWORD *)v55;
    long long v58 = *((_OWORD *)v55 + 1);
    *((void *)v54 + 4) = v55[4];
    *(_OWORD *)uint64_t v54 = v57;
    *((_OWORD *)v54 + 1) = v58;
  }
  uint64_t v5 = v293;
  uint64_t v10 = v294;
  uint64_t v4 = v287;
  (*(void (**)(char *, void, uint64_t, int *))(v292 + 56))(v7, 0, 1, v9);
  a3 = v284;
LABEL_22:
  uint64_t v59 = a3[6];
  uint64_t v60 = (char *)v5 + v59;
  uint64_t v61 = (char *)v4 + v59;
  int v62 = v10((char *)v5 + v59, 1, v9);
  int v63 = v10(v61, 1, v9);
  if (!v62)
  {
    if (v63)
    {
      sub_12FEC8((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_28;
    }
    uint64_t v290 = v4;
    *(void *)uint64_t v60 = *(void *)v61;
    *((void *)v60 + 1) = *((void *)v61 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v72 = v9[5];
    uint64_t v73 = &v60[v72];
    uint64_t v74 = &v61[v72];
    uint64_t v75 = sub_2DF5D0();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
    int v78 = v77(v73, 1, v75);
    int v79 = v77(v74, 1, v75);
    if (v78)
    {
      if (!v79)
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        goto LABEL_74;
      }
    }
    else
    {
      if (!v79)
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v73, v74, v75);
LABEL_74:
        uint64_t v172 = v9[6];
        uint64_t v173 = &v60[v172];
        uint64_t v174 = &v61[v172];
        int v175 = v77(&v60[v172], 1, v75);
        int v176 = v77(v174, 1, v75);
        if (v175)
        {
          if (!v176)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v173, v174, v75);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v173, 0, 1, v75);
            goto LABEL_92;
          }
        }
        else
        {
          if (!v176)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v173, v174, v75);
LABEL_92:
            v60[v9[7]] = v61[v9[7]];
            v60[v9[8]] = v61[v9[8]];
            uint64_t v193 = v9[9];
            int v194 = &v60[v193];
            uint64_t v195 = &v61[v193];
            uint64_t v196 = sub_2E0980();
            uint64_t v197 = *(void *)(v196 - 8);
            int v198 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v197 + 48);
            int v199 = v198(v194, 1, v196);
            int v200 = v198(v195, 1, v196);
            if (v199)
            {
              if (!v200)
              {
                (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v194, v195, v196);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
                goto LABEL_110;
              }
            }
            else
            {
              if (!v200)
              {
                (*(void (**)(char *, char *, uint64_t))(v197 + 24))(v194, v195, v196);
LABEL_110:
                *(void *)&v60[v9[10]] = *(void *)&v61[v9[10]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v60[v9[11]] = *(void *)&v61[v9[11]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v60[v9[12]] = v61[v9[12]];
                *(void *)&v60[v9[13]] = *(void *)&v61[v9[13]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v230 = v9[14];
                int v231 = &v60[v230];
                uint64_t v232 = &v61[v230];
                *(void *)int v231 = *v232;
                *((void *)v231 + 1) = v232[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v233 = v9[15];
                uint64_t v234 = &v60[v233];
                uint64_t v235 = &v61[v233];
                uint64_t v236 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 24))(v234, v235, v236);
                *(void *)&v60[v9[16]] = *(void *)&v61[v9[16]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v237 = v9[17];
                int v238 = &v60[v237];
                int v239 = &v61[v237];
                uint64_t v240 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 24))(v238, v239, v240);
                v60[v9[18]] = v61[v9[18]];
                *(void *)&v60[v9[19]] = *(void *)&v61[v9[19]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v60[v9[20]] = *(void *)&v61[v9[20]];
                swift_retain();
                swift_release();
                v60[v9[21]] = v61[v9[21]];
                uint64_t v241 = v9[22];
                uint64_t v242 = &v60[v241];
                uint64_t v243 = &v61[v241];
                *(void *)uint64_t v242 = *v243;
                *((void *)v242 + 1) = v243[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v244 = v9[23];
                uint64_t v245 = &v60[v244];
                uint64_t v246 = &v61[v244];
                uint64_t v247 = *(void *)&v61[v244 + 8];
                uint64_t v5 = v293;
                uint64_t v4 = v290;
                if (*((void *)v245 + 1))
                {
                  if (v247)
                  {
                    *(void *)uint64_t v245 = *v246;
                    *((void *)v245 + 1) = v246[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v245 + 2) = v246[2];
                    *((void *)v245 + 3) = v246[3];
                    *((void *)v245 + 4) = v246[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v245);
                    uint64_t v270 = v246[4];
                    long long v271 = *((_OWORD *)v246 + 1);
                    *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
                    *((_OWORD *)v245 + 1) = v271;
                    *((void *)v245 + 4) = v270;
                  }
                }
                else if (v247)
                {
                  *(void *)uint64_t v245 = *v246;
                  *((void *)v245 + 1) = v246[1];
                  *((void *)v245 + 2) = v246[2];
                  *((void *)v245 + 3) = v246[3];
                  *((void *)v245 + 4) = v246[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v276 = *(_OWORD *)v246;
                  long long v277 = *((_OWORD *)v246 + 1);
                  *((void *)v245 + 4) = v246[4];
                  *(_OWORD *)uint64_t v245 = v276;
                  *((_OWORD *)v245 + 1) = v277;
                }
                goto LABEL_43;
              }
              (*(void (**)(char *, uint64_t))(v197 + 8))(v194, v196);
            }
            uint64_t v229 = sub_63BAC(&qword_3CB0B8);
            memcpy(v194, v195, *(void *)(*(void *)(v229 - 8) + 64));
            goto LABEL_110;
          }
          (*(void (**)(char *, uint64_t))(v76 + 8))(v173, v75);
        }
        uint64_t v192 = sub_63BAC(&qword_3C97E8);
        memcpy(v173, v174, *(void *)(*(void *)(v192 - 8) + 64));
        goto LABEL_92;
      }
      (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v75);
    }
    uint64_t v171 = sub_63BAC(&qword_3C97E8);
    memcpy(v73, v74, *(void *)(*(void *)(v171 - 8) + 64));
    goto LABEL_74;
  }
  if (v63)
  {
LABEL_28:
    uint64_t v71 = sub_63BAC(&qword_3C97F0);
    memcpy(v60, v61, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_43;
  }
  long long v286 = a3;
  uint64_t v289 = v4;
  *(void *)uint64_t v60 = *(void *)v61;
  *((void *)v60 + 1) = *((void *)v61 + 1);
  uint64_t v64 = v9[5];
  uint64_t v65 = &v60[v64];
  uint64_t v66 = &v61[v64];
  uint64_t v67 = sub_2DF5D0();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  swift_bridgeObjectRetain();
  if (v69(v66, 1, v67))
  {
    uint64_t v70 = sub_63BAC(&qword_3C97E8);
    memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  uint64_t v80 = v9[6];
  uint64_t v81 = &v60[v80];
  uint64_t v82 = &v61[v80];
  if (v69(&v61[v80], 1, v67))
  {
    uint64_t v83 = sub_63BAC(&qword_3C97E8);
    memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v81, v82, v67);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v67);
  }
  v60[v9[7]] = v61[v9[7]];
  v60[v9[8]] = v61[v9[8]];
  uint64_t v84 = v9[9];
  uint64_t v85 = &v60[v84];
  uint64_t v86 = &v61[v84];
  uint64_t v87 = sub_2E0980();
  uint64_t v88 = *(void *)(v87 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
  {
    uint64_t v89 = sub_63BAC(&qword_3CB0B8);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v86, v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
  }
  *(void *)&v60[v9[10]] = *(void *)&v61[v9[10]];
  *(void *)&v60[v9[11]] = *(void *)&v61[v9[11]];
  v60[v9[12]] = v61[v9[12]];
  *(void *)&v60[v9[13]] = *(void *)&v61[v9[13]];
  uint64_t v90 = v9[14];
  uint64_t v91 = &v60[v90];
  uint64_t v92 = &v61[v90];
  *(void *)uint64_t v91 = *v92;
  *((void *)v91 + 1) = v92[1];
  uint64_t v93 = v9[15];
  long long v281 = &v61[v93];
  long long v283 = &v60[v93];
  uint64_t v94 = sub_2DE7F0();
  uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v95(v283, v281, v94);
  *(void *)&v60[v9[16]] = *(void *)&v61[v9[16]];
  uint64_t v96 = v9[17];
  uint64_t v97 = &v60[v96];
  uint64_t v98 = &v61[v96];
  uint64_t v99 = sub_2E38D0();
  uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
  swift_bridgeObjectRetain();
  v100(v97, v98, v99);
  v60[v9[18]] = v61[v9[18]];
  *(void *)&v60[v9[19]] = *(void *)&v61[v9[19]];
  *(void *)&v60[v9[20]] = *(void *)&v61[v9[20]];
  v60[v9[21]] = v61[v9[21]];
  uint64_t v101 = v9[22];
  uint64_t v102 = &v60[v101];
  uint64_t v103 = &v61[v101];
  *(void *)uint64_t v102 = *v103;
  *((void *)v102 + 1) = v103[1];
  uint64_t v104 = v9[23];
  uint64_t v105 = &v60[v104];
  uint64_t v106 = &v61[v104];
  uint64_t v107 = v106[1];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v107)
  {
    *(void *)uint64_t v105 = *v106;
    *((void *)v105 + 1) = v106[1];
    *((void *)v105 + 2) = v106[2];
    *((void *)v105 + 3) = v106[3];
    *((void *)v105 + 4) = v106[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *(_OWORD *)v106;
    long long v109 = *((_OWORD *)v106 + 1);
    *((void *)v105 + 4) = v106[4];
    *(_OWORD *)uint64_t v105 = v108;
    *((_OWORD *)v105 + 1) = v109;
  }
  uint64_t v5 = v293;
  uint64_t v4 = v289;
  (*(void (**)(char *, void, uint64_t, int *))(v292 + 56))(v60, 0, 1, v9);
  a3 = v286;
LABEL_43:
  *((unsigned char *)v5 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  uint64_t v110 = a3[8];
  uint64_t v111 = (char *)v5 + v110;
  uint64_t v112 = (char *)v4 + v110;
  uint64_t v113 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 24))(v111, v112, v113);
  uint64_t v114 = a3[9];
  uint64_t v115 = (char *)v5 + v114;
  uint64_t v116 = (uint64_t *)((char *)v4 + v114);
  LODWORD(v111) = v294((char *)v5 + v114, 1, v9);
  int v117 = v294((char *)v116, 1, v9);
  if (!v111)
  {
    if (v117)
    {
      sub_12FEC8((uint64_t)v115, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_49;
    }
    *(void *)uint64_t v115 = *v116;
    *((void *)v115 + 1) = v116[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v126 = v9[5];
    uint64_t v127 = &v115[v126];
    uint64_t v128 = (char *)v116 + v126;
    uint64_t v129 = sub_2DF5D0();
    uint64_t v130 = *(void *)(v129 - 8);
    uint64_t v131 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48);
    int v132 = v131(v127, 1, v129);
    int v133 = v131(v128, 1, v129);
    if (v132)
    {
      if (!v133)
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v128, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
        goto LABEL_80;
      }
    }
    else
    {
      if (!v133)
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 24))(v127, v128, v129);
LABEL_80:
        uint64_t v178 = v9[6];
        uint64_t v179 = &v115[v178];
        uint64_t v180 = (char *)v116 + v178;
        int v181 = v131(&v115[v178], 1, v129);
        int v182 = v131(v180, 1, v129);
        if (v181)
        {
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v179, v180, v129);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v179, 0, 1, v129);
            goto LABEL_98;
          }
        }
        else
        {
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v130 + 24))(v179, v180, v129);
LABEL_98:
            v115[v9[7]] = *((unsigned char *)v116 + v9[7]);
            v115[v9[8]] = *((unsigned char *)v116 + v9[8]);
            uint64_t v202 = v9[9];
            uint64_t v203 = &v115[v202];
            uint64_t v204 = (char *)v116 + v202;
            uint64_t v205 = sub_2E0980();
            uint64_t v206 = *(void *)(v205 - 8);
            uint64_t v207 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v206 + 48);
            int v208 = v207(v203, 1, v205);
            int v209 = v207(v204, 1, v205);
            if (v208)
            {
              if (!v209)
              {
                (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v203, v204, v205);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
                goto LABEL_116;
              }
            }
            else
            {
              if (!v209)
              {
                (*(void (**)(char *, char *, uint64_t))(v206 + 24))(v203, v204, v205);
LABEL_116:
                *(void *)&v115[v9[10]] = *(void *)((char *)v116 + v9[10]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v115[v9[11]] = *(void *)((char *)v116 + v9[11]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v115[v9[12]] = *((unsigned char *)v116 + v9[12]);
                *(void *)&v115[v9[13]] = *(void *)((char *)v116 + v9[13]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v249 = v9[14];
                uint64_t v250 = &v115[v249];
                uint64_t v251 = (void *)((char *)v116 + v249);
                *(void *)uint64_t v250 = *v251;
                *((void *)v250 + 1) = v251[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v252 = v9[15];
                uint64_t v253 = &v115[v252];
                uint64_t v254 = (char *)v116 + v252;
                uint64_t v255 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 24))(v253, v254, v255);
                *(void *)&v115[v9[16]] = *(void *)((char *)v116 + v9[16]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v256 = v9[17];
                long long v257 = &v115[v256];
                uint64_t v258 = (char *)v116 + v256;
                uint64_t v259 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 24))(v257, v258, v259);
                v115[v9[18]] = *((unsigned char *)v116 + v9[18]);
                *(void *)&v115[v9[19]] = *(void *)((char *)v116 + v9[19]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v115[v9[20]] = *(void *)((char *)v116 + v9[20]);
                swift_retain();
                swift_release();
                v115[v9[21]] = *((unsigned char *)v116 + v9[21]);
                uint64_t v260 = v9[22];
                uint64_t v261 = &v115[v260];
                uint64_t v262 = (void *)((char *)v116 + v260);
                *(void *)uint64_t v261 = *v262;
                *((void *)v261 + 1) = v262[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v263 = v9[23];
                uint64_t v264 = &v115[v263];
                uint64_t v265 = (void *)((char *)v116 + v263);
                uint64_t v266 = *(void *)&v115[v263 + 8];
                uint64_t v267 = v265[1];
                uint64_t v5 = v293;
                if (v266)
                {
                  if (v267)
                  {
                    *(void *)uint64_t v264 = *v265;
                    *((void *)v264 + 1) = v265[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((void *)v264 + 2) = v265[2];
                    *((void *)v264 + 3) = v265[3];
                    *((void *)v264 + 4) = v265[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_B0F2C((uint64_t)v264);
                    uint64_t v272 = v265[4];
                    long long v273 = *((_OWORD *)v265 + 1);
                    *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
                    *((_OWORD *)v264 + 1) = v273;
                    *((void *)v264 + 4) = v272;
                  }
                }
                else if (v267)
                {
                  *(void *)uint64_t v264 = *v265;
                  *((void *)v264 + 1) = v265[1];
                  *((void *)v264 + 2) = v265[2];
                  *((void *)v264 + 3) = v265[3];
                  *((void *)v264 + 4) = v265[4];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v278 = *(_OWORD *)v265;
                  long long v279 = *((_OWORD *)v265 + 1);
                  *((void *)v264 + 4) = v265[4];
                  *(_OWORD *)uint64_t v264 = v278;
                  *((_OWORD *)v264 + 1) = v279;
                }
                return v5;
              }
              (*(void (**)(char *, uint64_t))(v206 + 8))(v203, v205);
            }
            uint64_t v248 = sub_63BAC(&qword_3CB0B8);
            memcpy(v203, v204, *(void *)(*(void *)(v248 - 8) + 64));
            goto LABEL_116;
          }
          (*(void (**)(char *, uint64_t))(v130 + 8))(v179, v129);
        }
        uint64_t v201 = sub_63BAC(&qword_3C97E8);
        memcpy(v179, v180, *(void *)(*(void *)(v201 - 8) + 64));
        goto LABEL_98;
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v127, v129);
    }
    uint64_t v177 = sub_63BAC(&qword_3C97E8);
    memcpy(v127, v128, *(void *)(*(void *)(v177 - 8) + 64));
    goto LABEL_80;
  }
  if (v117)
  {
LABEL_49:
    uint64_t v125 = sub_63BAC(&qword_3C97F0);
    memcpy(v115, v116, *(void *)(*(void *)(v125 - 8) + 64));
    return v5;
  }
  *(void *)uint64_t v115 = *v116;
  *((void *)v115 + 1) = v116[1];
  uint64_t v118 = v9[5];
  uint64_t v119 = &v115[v118];
  uint64_t v120 = (char *)v116 + v118;
  uint64_t v121 = sub_2DF5D0();
  uint64_t v122 = *(void *)(v121 - 8);
  uint64_t v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
  swift_bridgeObjectRetain();
  if (v123(v120, 1, v121))
  {
    uint64_t v124 = sub_63BAC(&qword_3C97E8);
    memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
  }
  uint64_t v134 = v9[6];
  uint64_t v135 = &v115[v134];
  uint64_t v136 = (char *)v116 + v134;
  if (v123((char *)v116 + v134, 1, v121))
  {
    uint64_t v137 = sub_63BAC(&qword_3C97E8);
    memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v135, v136, v121);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v135, 0, 1, v121);
  }
  v115[v9[7]] = *((unsigned char *)v116 + v9[7]);
  v115[v9[8]] = *((unsigned char *)v116 + v9[8]);
  uint64_t v138 = v9[9];
  uint64_t v139 = &v115[v138];
  uint64_t v140 = (char *)v116 + v138;
  uint64_t v141 = sub_2E0980();
  uint64_t v142 = *(void *)(v141 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
  {
    uint64_t v143 = sub_63BAC(&qword_3CB0B8);
    memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  }
  *(void *)&v115[v9[10]] = *(void *)((char *)v116 + v9[10]);
  *(void *)&v115[v9[11]] = *(void *)((char *)v116 + v9[11]);
  v115[v9[12]] = *((unsigned char *)v116 + v9[12]);
  *(void *)&v115[v9[13]] = *(void *)((char *)v116 + v9[13]);
  uint64_t v144 = v9[14];
  uint64_t v145 = &v115[v144];
  uint64_t v146 = (void *)((char *)v116 + v144);
  *(void *)uint64_t v145 = *v146;
  *((void *)v145 + 1) = v146[1];
  uint64_t v147 = v9[15];
  uint64_t v295 = &v115[v147];
  uint64_t v291 = (char *)v116 + v147;
  uint64_t v148 = sub_2DE7F0();
  int v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v149(v295, v291, v148);
  *(void *)&v115[v9[16]] = *(void *)((char *)v116 + v9[16]);
  uint64_t v150 = v9[17];
  uint64_t v151 = &v115[v150];
  uint64_t v152 = (char *)v116 + v150;
  uint64_t v153 = sub_2E38D0();
  uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
  swift_bridgeObjectRetain();
  v154(v151, v152, v153);
  v115[v9[18]] = *((unsigned char *)v116 + v9[18]);
  *(void *)&v115[v9[19]] = *(void *)((char *)v116 + v9[19]);
  *(void *)&v115[v9[20]] = *(void *)((char *)v116 + v9[20]);
  v115[v9[21]] = *((unsigned char *)v116 + v9[21]);
  uint64_t v155 = v9[22];
  uint64_t v156 = &v115[v155];
  uint64_t v157 = (void *)((char *)v116 + v155);
  *(void *)uint64_t v156 = *v157;
  *((void *)v156 + 1) = v157[1];
  uint64_t v158 = v9[23];
  uint64_t v159 = &v115[v158];
  uint64_t v160 = (void *)((char *)v116 + v158);
  uint64_t v161 = v160[1];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v161)
  {
    *(void *)uint64_t v159 = *v160;
    *((void *)v159 + 1) = v160[1];
    *((void *)v159 + 2) = v160[2];
    *((void *)v159 + 3) = v160[3];
    *((void *)v159 + 4) = v160[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v162 = *(_OWORD *)v160;
    long long v163 = *((_OWORD *)v160 + 1);
    *((void *)v159 + 4) = v160[4];
    *(_OWORD *)uint64_t v159 = v162;
    *((_OWORD *)v159 + 1) = v163;
  }
  uint64_t v5 = v293;
  (*(void (**)(char *, void, uint64_t, int *))(v292 + 56))(v115, 0, 1, v9);
  return v5;
}

uint64_t sub_141614(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v118 = *((void *)v10 - 1);
  int v11 = *(unsigned int (**)(void, void, void))(v118 + 48);
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v113 = v11;
    uint64_t v115 = v3;
    uint64_t v117 = v5;
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_2DF5D0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = v10[6];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    if (v18((char *)v9 + v20, 1, v16))
    {
      uint64_t v23 = sub_63BAC(&qword_3C97E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    uint64_t v5 = v117;
    *((unsigned char *)v8 + v10[7]) = *((unsigned char *)v9 + v10[7]);
    *((unsigned char *)v8 + v10[8]) = *((unsigned char *)v9 + v10[8]);
    uint64_t v24 = v10[9];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    uint64_t v27 = sub_2E0980();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_63BAC(&qword_3CB0B8);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v3 = v115;
    *(void *)((char *)v8 + v10[10]) = *(void *)((char *)v9 + v10[10]);
    *(void *)((char *)v8 + v10[11]) = *(void *)((char *)v9 + v10[11]);
    *((unsigned char *)v8 + v10[12]) = *((unsigned char *)v9 + v10[12]);
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    *(_OWORD *)((char *)v8 + v10[14]) = *(_OWORD *)((char *)v9 + v10[14]);
    uint64_t v30 = v10[15];
    uint64_t v31 = (char *)v8 + v30;
    uint64_t v32 = (char *)v9 + v30;
    uint64_t v33 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    uint64_t v34 = v10[17];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    *((unsigned char *)v8 + v10[18]) = *((unsigned char *)v9 + v10[18]);
    *(void *)((char *)v8 + v10[19]) = *(void *)((char *)v9 + v10[19]);
    *(void *)((char *)v8 + v10[20]) = *(void *)((char *)v9 + v10[20]);
    *((unsigned char *)v8 + v10[21]) = *((unsigned char *)v9 + v10[21]);
    *(_OWORD *)((char *)v8 + v10[22]) = *(_OWORD *)((char *)v9 + v10[22]);
    uint64_t v38 = v10[23];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    long long v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    *((void *)v39 + 4) = *((void *)v40 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v118 + 56))(v8, 0, 1, v10);
    int v11 = v113;
  }
  uint64_t v42 = v3[6];
  uint64_t v43 = (_OWORD *)(v5 + v42);
  uint64_t v44 = (_OWORD *)(a2 + v42);
  if (v11(a2 + v42, 1, v10))
  {
    uint64_t v45 = sub_63BAC(&qword_3C97F0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v114 = v11;
    uint64_t v116 = v3;
    *uint64_t v43 = *v44;
    uint64_t v46 = v10[5];
    uint64_t v47 = (char *)v43 + v46;
    uint64_t v48 = (char *)v44 + v46;
    uint64_t v49 = sub_2DF5D0();
    uint64_t v50 = *(void *)(v49 - 8);
    long long v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    if (v51(v48, 1, v49))
    {
      uint64_t v52 = sub_63BAC(&qword_3C97E8);
      memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v53 = v10[6];
    uint64_t v54 = (char *)v43 + v53;
    uint64_t v55 = (char *)v44 + v53;
    if (v51((char *)v44 + v53, 1, v49))
    {
      uint64_t v56 = sub_63BAC(&qword_3C97E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v54, v55, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v49);
    }
    *((unsigned char *)v43 + v10[7]) = *((unsigned char *)v44 + v10[7]);
    *((unsigned char *)v43 + v10[8]) = *((unsigned char *)v44 + v10[8]);
    uint64_t v57 = v10[9];
    long long v58 = (char *)v43 + v57;
    uint64_t v59 = (char *)v44 + v57;
    uint64_t v60 = sub_2E0980();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = sub_63BAC(&qword_3CB0B8);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v3 = v116;
    *(void *)((char *)v43 + v10[10]) = *(void *)((char *)v44 + v10[10]);
    *(void *)((char *)v43 + v10[11]) = *(void *)((char *)v44 + v10[11]);
    *((unsigned char *)v43 + v10[12]) = *((unsigned char *)v44 + v10[12]);
    *(void *)((char *)v43 + v10[13]) = *(void *)((char *)v44 + v10[13]);
    *(_OWORD *)((char *)v43 + v10[14]) = *(_OWORD *)((char *)v44 + v10[14]);
    uint64_t v63 = v10[15];
    uint64_t v64 = (char *)v43 + v63;
    uint64_t v65 = (char *)v44 + v63;
    uint64_t v66 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    *(void *)((char *)v43 + v10[16]) = *(void *)((char *)v44 + v10[16]);
    uint64_t v67 = v10[17];
    uint64_t v68 = (char *)v43 + v67;
    uint64_t v69 = (char *)v44 + v67;
    uint64_t v70 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
    *((unsigned char *)v43 + v10[18]) = *((unsigned char *)v44 + v10[18]);
    *(void *)((char *)v43 + v10[19]) = *(void *)((char *)v44 + v10[19]);
    *(void *)((char *)v43 + v10[20]) = *(void *)((char *)v44 + v10[20]);
    *((unsigned char *)v43 + v10[21]) = *((unsigned char *)v44 + v10[21]);
    *(_OWORD *)((char *)v43 + v10[22]) = *(_OWORD *)((char *)v44 + v10[22]);
    uint64_t v71 = v10[23];
    uint64_t v72 = (char *)v43 + v71;
    uint64_t v73 = (char *)v44 + v71;
    long long v74 = *((_OWORD *)v73 + 1);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *((_OWORD *)v72 + 1) = v74;
    *((void *)v72 + 4) = *((void *)v73 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v118 + 56))(v43, 0, 1, v10);
    int v11 = v114;
  }
  uint64_t v75 = v3[8];
  *(unsigned char *)(v5 + v3[7]) = *(unsigned char *)(a2 + v3[7]);
  uint64_t v76 = v5 + v75;
  uint64_t v77 = a2 + v75;
  uint64_t v78 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
  uint64_t v79 = v3[9];
  uint64_t v80 = (_OWORD *)(v5 + v79);
  uint64_t v81 = (_OWORD *)(a2 + v79);
  if (v11(v81, 1, v10))
  {
    uint64_t v82 = sub_63BAC(&qword_3C97F0);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    _OWORD *v80 = *v81;
    uint64_t v83 = v10[5];
    uint64_t v84 = (char *)v80 + v83;
    uint64_t v85 = (char *)v81 + v83;
    uint64_t v86 = sub_2DF5D0();
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
    if (v88(v85, 1, v86))
    {
      uint64_t v89 = sub_63BAC(&qword_3C97E8);
      memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v90 = v10[6];
    uint64_t v91 = (char *)v80 + v90;
    uint64_t v92 = (char *)v81 + v90;
    if (v88((char *)v81 + v90, 1, v86))
    {
      uint64_t v93 = sub_63BAC(&qword_3C97E8);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v91, v92, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v91, 0, 1, v86);
    }
    *((unsigned char *)v80 + v10[7]) = *((unsigned char *)v81 + v10[7]);
    *((unsigned char *)v80 + v10[8]) = *((unsigned char *)v81 + v10[8]);
    uint64_t v94 = v10[9];
    uint64_t v95 = (char *)v80 + v94;
    uint64_t v96 = (char *)v81 + v94;
    uint64_t v97 = sub_2E0980();
    uint64_t v98 = *(void *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      uint64_t v99 = sub_63BAC(&qword_3CB0B8);
      memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    *(void *)((char *)v80 + v10[10]) = *(void *)((char *)v81 + v10[10]);
    *(void *)((char *)v80 + v10[11]) = *(void *)((char *)v81 + v10[11]);
    *((unsigned char *)v80 + v10[12]) = *((unsigned char *)v81 + v10[12]);
    *(void *)((char *)v80 + v10[13]) = *(void *)((char *)v81 + v10[13]);
    *(_OWORD *)((char *)v80 + v10[14]) = *(_OWORD *)((char *)v81 + v10[14]);
    uint64_t v100 = v10[15];
    uint64_t v101 = (char *)v80 + v100;
    uint64_t v102 = (char *)v81 + v100;
    uint64_t v103 = sub_2DE7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
    *(void *)((char *)v80 + v10[16]) = *(void *)((char *)v81 + v10[16]);
    uint64_t v104 = v10[17];
    uint64_t v105 = (char *)v80 + v104;
    uint64_t v106 = (char *)v81 + v104;
    uint64_t v107 = sub_2E38D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
    *((unsigned char *)v80 + v10[18]) = *((unsigned char *)v81 + v10[18]);
    *(void *)((char *)v80 + v10[19]) = *(void *)((char *)v81 + v10[19]);
    *(void *)((char *)v80 + v10[20]) = *(void *)((char *)v81 + v10[20]);
    *((unsigned char *)v80 + v10[21]) = *((unsigned char *)v81 + v10[21]);
    *(_OWORD *)((char *)v80 + v10[22]) = *(_OWORD *)((char *)v81 + v10[22]);
    uint64_t v108 = v10[23];
    long long v109 = (char *)v80 + v108;
    uint64_t v110 = (char *)v81 + v108;
    long long v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)long long v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    *((void *)v109 + 4) = *((void *)v110 + 4);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v118 + 56))(v80, 0, 1, v10);
  }
  return v5;
}

uint64_t sub_14237C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(v5 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Page();
  uint64_t v281 = *((void *)v10 - 1);
  int v11 = *(uint64_t (**)(char *, uint64_t, int *))(v281 + 48);
  int v12 = v11((char *)v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      long long v273 = (uint64_t (*)(void *, uint64_t, int *))v11;
      long long v275 = a3;
      uint64_t v277 = a2;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      uint64_t v14 = v10[5];
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v16 = &v9[v14];
      uint64_t v17 = sub_2DF5D0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = sub_63BAC(&qword_3C97E8);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v31 = v10[6];
      uint64_t v32 = (char *)v8 + v31;
      uint64_t v33 = &v9[v31];
      if (v19(&v9[v31], 1, v17))
      {
        uint64_t v34 = sub_63BAC(&qword_3C97E8);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v32, v33, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v32, 0, 1, v17);
      }
      a3 = v275;
      *((unsigned char *)v8 + v10[7]) = v9[v10[7]];
      *((unsigned char *)v8 + v10[8]) = v9[v10[8]];
      uint64_t v35 = v10[9];
      uint64_t v36 = (char *)v8 + v35;
      uint64_t v37 = &v9[v35];
      uint64_t v38 = sub_2E0980();
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = sub_63BAC(&qword_3CB0B8);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      a2 = v277;
      *(void *)((char *)v8 + v10[10]) = *(void *)&v9[v10[10]];
      *(void *)((char *)v8 + v10[11]) = *(void *)&v9[v10[11]];
      *((unsigned char *)v8 + v10[12]) = v9[v10[12]];
      *(void *)((char *)v8 + v10[13]) = *(void *)&v9[v10[13]];
      *(_OWORD *)((char *)v8 + v10[14]) = *(_OWORD *)&v9[v10[14]];
      uint64_t v41 = v10[15];
      uint64_t v42 = (char *)v8 + v41;
      uint64_t v43 = &v9[v41];
      uint64_t v44 = sub_2DE7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      *(void *)((char *)v8 + v10[16]) = *(void *)&v9[v10[16]];
      uint64_t v45 = v10[17];
      uint64_t v46 = (char *)v8 + v45;
      uint64_t v47 = &v9[v45];
      uint64_t v48 = sub_2E38D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      *((unsigned char *)v8 + v10[18]) = v9[v10[18]];
      *(void *)((char *)v8 + v10[19]) = *(void *)&v9[v10[19]];
      *(void *)((char *)v8 + v10[20]) = *(void *)&v9[v10[20]];
      *((unsigned char *)v8 + v10[21]) = v9[v10[21]];
      *(_OWORD *)((char *)v8 + v10[22]) = *(_OWORD *)&v9[v10[22]];
      uint64_t v49 = v10[23];
      uint64_t v50 = (char *)v8 + v49;
      long long v51 = &v9[v49];
      long long v52 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v52;
      *((void *)v50 + 4) = *((void *)v51 + 4);
      (*(void (**)(char *, void, uint64_t, int *))(v281 + 56))((char *)v8, 0, 1, v10);
      goto LABEL_19;
    }
LABEL_7:
    uint64_t v21 = sub_63BAC(&qword_3C97F0);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_20;
  }
  if (v13)
  {
    sub_12FEC8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Page);
    goto LABEL_7;
  }
  long long v273 = (uint64_t (*)(void *, uint64_t, int *))v11;
  uint64_t v282 = v5;
  uint64_t v22 = *((void *)v9 + 1);
  *uint64_t v8 = *(void *)v9;
  v8[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v10[5];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = &v9[v23];
  uint64_t v26 = sub_2DF5D0();
  long long v271 = *(void **)(v26 - 8);
  uint64_t v27 = (uint64_t (*)(void))v271[6];
  uint64_t v265 = v24;
  LODWORD(v24) = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v24, 1, v26);
  int v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v25, 1, v26);
  if (v24)
  {
    if (v28)
    {
      size_t v29 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v30 = v265;
LABEL_59:
      memcpy(v30, v25, v29);
      goto LABEL_87;
    }
    ((void (*)(void *, char *, uint64_t))v271[4])(v265, v25, v26);
    ((void (*)(void *, void, uint64_t, uint64_t))v271[7])(v265, 0, 1, v26);
  }
  else
  {
    if (v28)
    {
      ((void (*)(void *, uint64_t))v271[1])(v265, v26);
      size_t v29 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v30 = v265;
      goto LABEL_59;
    }
    ((void (*)(void *, char *, uint64_t))v271[5])(v265, v25, v26);
  }
LABEL_87:
  uint64_t v185 = v10[6];
  uint64_t v186 = &v9[v185];
  uint64_t v267 = (char *)v8 + v185;
  int v187 = v27();
  int v188 = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v186, 1, v26);
  uint64_t v279 = a2;
  if (v187)
  {
    if (v188)
    {
      size_t v189 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      int v190 = v267;
LABEL_92:
      memcpy(v190, v186, v189);
      goto LABEL_106;
    }
    ((void (*)(char *, char *, uint64_t))v271[4])(v267, v186, v26);
    ((void (*)(char *, void, uint64_t, uint64_t))v271[7])(v267, 0, 1, v26);
  }
  else
  {
    if (v188)
    {
      ((void (*)(char *, uint64_t))v271[1])(v267, v26);
      size_t v189 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      int v190 = v267;
      goto LABEL_92;
    }
    ((void (*)(char *, char *, uint64_t))v271[5])(v267, v186, v26);
  }
LABEL_106:
  *((unsigned char *)v8 + v10[7]) = v9[v10[7]];
  *((unsigned char *)v8 + v10[8]) = v9[v10[8]];
  uint64_t v197 = v10[9];
  int v198 = (char *)v8 + v197;
  int v199 = &v9[v197];
  uint64_t v200 = sub_2E0980();
  uint64_t v201 = *(void *)(v200 - 8);
  uint64_t v202 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v201 + 48);
  __src = v198;
  LODWORD(v198) = v202(v198, 1, v200);
  int v203 = v202(v199, 1, v200);
  if (v198)
  {
    if (v203)
    {
      size_t v204 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
      uint64_t v205 = __src;
LABEL_111:
      memcpy(v205, v199, v204);
      goto LABEL_122;
    }
    (*(void (**)(void *, char *, uint64_t))(v201 + 32))(__src, v199, v200);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v201 + 56))(__src, 0, 1, v200);
  }
  else
  {
    if (v203)
    {
      (*(void (**)(void *, uint64_t))(v201 + 8))(__src, v200);
      size_t v204 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
      uint64_t v205 = __src;
      goto LABEL_111;
    }
    (*(void (**)(void *, char *, uint64_t))(v201 + 40))(__src, v199, v200);
  }
LABEL_122:
  uint64_t v5 = v282;
  *(void *)((char *)v8 + v10[10]) = *(void *)&v9[v10[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v10[11]) = *(void *)&v9[v10[11]];
  swift_bridgeObjectRelease();
  *((unsigned char *)v8 + v10[12]) = v9[v10[12]];
  *(void *)((char *)v8 + v10[13]) = *(void *)&v9[v10[13]];
  swift_bridgeObjectRelease();
  uint64_t v215 = v10[14];
  uint64_t v216 = (void *)((char *)v8 + v215);
  uint64_t v217 = (uint64_t *)&v9[v215];
  uint64_t v219 = *v217;
  uint64_t v218 = v217[1];
  *uint64_t v216 = v219;
  v216[1] = v218;
  swift_bridgeObjectRelease();
  uint64_t v220 = v10[15];
  uint64_t v221 = (char *)v8 + v220;
  uint64_t v222 = &v9[v220];
  uint64_t v223 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 40))(v221, v222, v223);
  *(void *)((char *)v8 + v10[16]) = *(void *)&v9[v10[16]];
  swift_bridgeObjectRelease();
  uint64_t v224 = v10[17];
  uint64_t v225 = (char *)v8 + v224;
  uint64_t v226 = &v9[v224];
  uint64_t v227 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 40))(v225, v226, v227);
  *((unsigned char *)v8 + v10[18]) = v9[v10[18]];
  *(void *)((char *)v8 + v10[19]) = *(void *)&v9[v10[19]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v10[20]) = *(void *)&v9[v10[20]];
  swift_release();
  *((unsigned char *)v8 + v10[21]) = v9[v10[21]];
  uint64_t v228 = v10[22];
  uint64_t v229 = (void *)((char *)v8 + v228);
  uint64_t v230 = (uint64_t *)&v9[v228];
  uint64_t v232 = *v230;
  uint64_t v231 = v230[1];
  *uint64_t v229 = v232;
  v229[1] = v231;
  swift_bridgeObjectRelease();
  uint64_t v233 = v10[23];
  uint64_t v234 = (uint64_t)v8 + v233;
  uint64_t v235 = &v9[v233];
  if (!*(void *)(v234 + 8))
  {
    long long v238 = *((_OWORD *)v235 + 1);
    *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
    *(_OWORD *)(v234 + 16) = v238;
    *(void *)(v234 + 32) = *((void *)v235 + 4);
    a2 = v279;
LABEL_19:
    int v11 = (uint64_t (*)(char *, uint64_t, int *))v273;
    goto LABEL_20;
  }
  uint64_t v236 = *((void *)v235 + 1);
  int v11 = (uint64_t (*)(char *, uint64_t, int *))v273;
  if (v236)
  {
    *(void *)uint64_t v234 = *(void *)v235;
    *(void *)(v234 + 8) = v236;
    swift_bridgeObjectRelease();
    *(void *)(v234 + 16) = *((void *)v235 + 2);
    uint64_t v237 = *((void *)v235 + 4);
    *(void *)(v234 + 24) = *((void *)v235 + 3);
    *(void *)(v234 + 32) = v237;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_B0F2C(v234);
    long long v239 = *((_OWORD *)v235 + 1);
    *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
    *(_OWORD *)(v234 + 16) = v239;
    *(void *)(v234 + 32) = *((void *)v235 + 4);
  }
  a2 = v279;
LABEL_20:
  uint64_t v53 = a3[6];
  uint64_t v54 = (void *)(v5 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  int v56 = v11((char *)(v5 + v53), 1, v10);
  int v57 = v11(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      long long v274 = (uint64_t (*)(void *, uint64_t, int *))v11;
      long long v276 = a3;
      uint64_t v278 = a2;
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      uint64_t v58 = v10[5];
      uint64_t v59 = (char *)v54 + v58;
      uint64_t v60 = &v55[v58];
      uint64_t v61 = sub_2DF5D0();
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      if (v63(v60, 1, v61))
      {
        uint64_t v64 = sub_63BAC(&qword_3C97E8);
        memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      uint64_t v75 = v10[6];
      uint64_t v76 = (char *)v54 + v75;
      uint64_t v77 = &v55[v75];
      if (v63(&v55[v75], 1, v61))
      {
        uint64_t v78 = sub_63BAC(&qword_3C97E8);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v76, v77, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v76, 0, 1, v61);
      }
      a3 = v276;
      *((unsigned char *)v54 + v10[7]) = v55[v10[7]];
      *((unsigned char *)v54 + v10[8]) = v55[v10[8]];
      uint64_t v79 = v10[9];
      uint64_t v80 = (char *)v54 + v79;
      uint64_t v81 = &v55[v79];
      uint64_t v82 = sub_2E0980();
      uint64_t v83 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
      {
        uint64_t v84 = sub_63BAC(&qword_3CB0B8);
        memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      }
      a2 = v278;
      *(void *)((char *)v54 + v10[10]) = *(void *)&v55[v10[10]];
      *(void *)((char *)v54 + v10[11]) = *(void *)&v55[v10[11]];
      *((unsigned char *)v54 + v10[12]) = v55[v10[12]];
      *(void *)((char *)v54 + v10[13]) = *(void *)&v55[v10[13]];
      *(_OWORD *)((char *)v54 + v10[14]) = *(_OWORD *)&v55[v10[14]];
      uint64_t v85 = v10[15];
      uint64_t v86 = (char *)v54 + v85;
      uint64_t v87 = &v55[v85];
      uint64_t v88 = sub_2DE7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      *(void *)((char *)v54 + v10[16]) = *(void *)&v55[v10[16]];
      uint64_t v89 = v10[17];
      uint64_t v90 = (char *)v54 + v89;
      uint64_t v91 = &v55[v89];
      uint64_t v92 = sub_2E38D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
      *((unsigned char *)v54 + v10[18]) = v55[v10[18]];
      *(void *)((char *)v54 + v10[19]) = *(void *)&v55[v10[19]];
      *(void *)((char *)v54 + v10[20]) = *(void *)&v55[v10[20]];
      *((unsigned char *)v54 + v10[21]) = v55[v10[21]];
      *(_OWORD *)((char *)v54 + v10[22]) = *(_OWORD *)&v55[v10[22]];
      uint64_t v93 = v10[23];
      uint64_t v94 = (char *)v54 + v93;
      uint64_t v95 = &v55[v93];
      long long v96 = *((_OWORD *)v95 + 1);
      *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
      *((_OWORD *)v94 + 1) = v96;
      *((void *)v94 + 4) = *((void *)v95 + 4);
      (*(void (**)(void *, void, uint64_t, int *))(v281 + 56))(v54, 0, 1, v10);
      goto LABEL_38;
    }
LABEL_26:
    uint64_t v65 = sub_63BAC(&qword_3C97F0);
    memcpy(v54, v55, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_39;
  }
  if (v57)
  {
    sub_12FEC8((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for Page);
    goto LABEL_26;
  }
  long long v274 = (uint64_t (*)(void *, uint64_t, int *))v11;
  uint64_t v283 = v5;
  uint64_t v66 = *((void *)v55 + 1);
  *uint64_t v54 = *(void *)v55;
  v54[1] = v66;
  swift_bridgeObjectRelease();
  uint64_t v67 = v10[5];
  uint64_t v68 = (char *)v54 + v67;
  uint64_t v69 = &v55[v67];
  uint64_t v70 = sub_2DF5D0();
  uint64_t v272 = *(void **)(v70 - 8);
  uint64_t v71 = (uint64_t (*)(void))v272[6];
  uint64_t v266 = v68;
  LODWORD(v68) = ((uint64_t (*)(char *, uint64_t, uint64_t))v71)(v68, 1, v70);
  int v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71)(v69, 1, v70);
  if (v68)
  {
    if (v72)
    {
      size_t v73 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      long long v74 = v266;
LABEL_62:
      memcpy(v74, v69, v73);
      goto LABEL_95;
    }
    ((void (*)(void *, char *, uint64_t))v272[4])(v266, v69, v70);
    ((void (*)(void *, void, uint64_t, uint64_t))v272[7])(v266, 0, 1, v70);
  }
  else
  {
    if (v72)
    {
      ((void (*)(void *, uint64_t))v272[1])(v266, v70);
      size_t v73 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      long long v74 = v266;
      goto LABEL_62;
    }
    ((void (*)(void *, char *, uint64_t))v272[5])(v266, v69, v70);
  }
LABEL_95:
  uint64_t v191 = v10[6];
  uint64_t v192 = &v55[v191];
  uint64_t v268 = (char *)v54 + v191;
  int v193 = v71();
  int v194 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71)(v192, 1, v70);
  uint64_t v280 = a2;
  if (v193)
  {
    if (v194)
    {
      size_t v195 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v196 = v268;
LABEL_100:
      memcpy(v196, v192, v195);
      goto LABEL_114;
    }
    ((void (*)(char *, char *, uint64_t))v272[4])(v268, v192, v70);
    ((void (*)(char *, void, uint64_t, uint64_t))v272[7])(v268, 0, 1, v70);
  }
  else
  {
    if (v194)
    {
      ((void (*)(char *, uint64_t))v272[1])(v268, v70);
      size_t v195 = *(void *)(*(void *)(sub_63BAC(&qword_3C97E8) - 8) + 64);
      uint64_t v196 = v268;
      goto LABEL_100;
    }
    ((void (*)(char *, char *, uint64_t))v272[5])(v268, v192, v70);
  }
LABEL_114:
  *((unsigned char *)v54 + v10[7]) = v55[v10[7]];
  *((unsigned char *)v54 + v10[8]) = v55[v10[8]];
  uint64_t v206 = v10[9];
  uint64_t v207 = (char *)v54 + v206;
  int v208 = &v55[v206];
  uint64_t v209 = sub_2E0980();
  uint64_t v210 = *(void *)(v209 - 8);
  uint64_t v211 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 48);
  __srca = v207;
  LODWORD(v207) = v211(v207, 1, v209);
  int v212 = v211(v208, 1, v209);
  if (v207)
  {
    if (v212)
    {
      size_t v213 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
      uint64_t v214 = __srca;
LABEL_119:
      memcpy(v214, v208, v213);
      goto LABEL_129;
    }
    (*(void (**)(void *, char *, uint64_t))(v210 + 32))(__srca, v208, v209);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v210 + 56))(__srca, 0, 1, v209);
  }
  else
  {
    if (v212)
    {
      (*(void (**)(void *, uint64_t))(v210 + 8))(__srca, v209);
      size_t v213 = *(void *)(*(void *)(sub_63BAC(&qword_3CB0B8) - 8) + 64);
      uint64_t v214 = __srca;
      goto LABEL_119;
    }
    (*(void (**)(void *, char *, uint64_t))(v210 + 40))(__srca, v208, v209);
  }
LABEL_129:
  uint64_t v5 = v283;
  *(void *)((char *)v54 + v10[10]) = *(void *)&v55[v10[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v54 + v10[11]) = *(void *)&v55[v10[11]];
  swift_bridgeObjectRelease();
  *((unsigned char *)v54 + v10[12]) = v55[v10[12]];
  *(void *)((char *)v54 + v10[13]) = *(void *)&v55[v10[13]];
  swift_bridgeObjectRelease();
  uint64_t v240 = v10[14];
  uint64_t v241 = (void *)((char *)v54 + v240);
  uint64_t v242 = (uint64_t *)&v55[v240];
  uint64_t v244 = *v242;
  uint64_t v243 = v242[1];
  *uint64_t v241 = v244;
  v241[1] = v243;
  swift_bridgeObjectRelease();
  uint64_t v245 = v10[15];
  uint64_t v246 = (char *)v54 + v245;
  uint64_t v247 = &v55[v245];
  uint64_t v248 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 40))(v246, v247, v248);
  *(void *)((char *)v54 + v10[16]) = *(void *)&v55[v10[16]];
  swift_bridgeObjectRelease();
  uint64_t v249 = v10[17];
  uint64_t v250 = (char *)v54 + v249;
  uint64_t v251 = &v55[v249];
  uint64_t v252 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 40))(v250, v251, v252);
  *((unsigned char *)v54 + v10[18]) = v55[v10[18]];
  *(void *)((char *)v54 + v10[19]) = *(void *)&v55[v10[19]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v54 + v10[20]) = *(void *)&v55[v10[20]];
  swift_release();
  *((unsigned char *)v54 + v10[21]) = v55[v10[21]];
  uint64_t v253 = v10[22];
  uint64_t v254 = (void *)((char *)v54 + v253);
  uint64_t v255 = (uint64_t *)&v55[v253];
  uint64_t v257 = *v255;
  uint64_t v256 = v255[1];
  *uint64_t v254 = v257;
  v254[1] = v256;
  swift_bridgeObjectRelease();
  uint64_t v258 = v10[23];
  uint64_t v259 = (uint64_t)v54 + v258;
  uint64_t v260 = &v55[v258];
  if (!*(void *)(v259 + 8))
  {
    long long v263 = *((_OWORD *)v260 + 1);
    *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
    *(_OWORD *)(v259 + 16) = v263;
    *(void *)(v259 + 32) = *((void *)v260 + 4);
    a2 = v280;
LABEL_38:
    int v11 = (uint64_t (*)(char *, uint64_t, int *))v274;
    goto LABEL_39;
  }
  uint64_t v261 = *((void *)v260 + 1);
  int v11 = (uint64_t (*)(char *, uint64_t, int *))v274;
  if (v261)
  {
    *(void *)uint64_t v259 = *(void *)v260;
    *(void *)(v259 + 8) = v261;
    swift_bridgeObjectRelease();
    *(void *)(v259 + 16) = *((void *)v260 + 2);
    uint64_t v262 = *((void *)v260 + 4);
    *(void *)(v259 + 24) = *((void *)v260 + 3);
    *(void *)(v259 + 32) = v262;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_B0F2C(v259);
    long long v264 = *((_OWORD *)v260 + 1);
    *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
    *(_OWORD *)(v259 + 16) = v264;
    *(void *)(v259 + 32) = *((void *)v260 + 4);
  }
  a2 = v280;
LABEL_39:
  uint64_t v97 = a3[8];
  *(unsigned char *)(v5 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v98 = v5 + v97;
  uint64_t v99 = a2 + v97;
  uint64_t v100 = sub_63BAC(&qword_3CAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 40))(v98, v99, v100);
  uint64_t v101 = a3[9];
  uint64_t v102 = (char *)(v5 + v101);
  uint64_t v103 = (void *)(a2 + v101);
  LODWORD(v98) = v11((char *)(v5 + v101), 1, v10);
  int v104 = v11((char *)v103, 1, v10);
  if (!v98)
  {
    if (v104)
    {
      sub_12FEC8((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for Page);
      goto LABEL_45;
    }
    uint64_t v284 = v5;
    uint64_t v113 = v103[1];
    *(void *)uint64_t v102 = *v103;
    *((void *)v102 + 1) = v113;
    swift_bridgeObjectRelease();
    uint64_t v114 = v10[5];
    uint64_t v115 = &v102[v114];
    uint64_t v116 = (char *)v103 + v114;
    uint64_t v117 = sub_2DF5D0();
    uint64_t v118 = *(void *)(v117 - 8);
    uint64_t v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
    int v120 = v119(v115, 1, v117);
    int v121 = v119(v116, 1, v117);
    if (v120)
    {
      if (!v121)
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
        goto LABEL_66;
      }
    }
    else
    {
      if (!v121)
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v115, v116, v117);
LABEL_66:
        uint64_t v145 = v10[6];
        uint64_t v146 = &v102[v145];
        uint64_t v147 = (char *)v103 + v145;
        int v148 = v119(&v102[v145], 1, v117);
        int v149 = v119(v147, 1, v117);
        if (v148)
        {
          if (!v149)
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v146, v147, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v146, 0, 1, v117);
            goto LABEL_72;
          }
        }
        else
        {
          if (!v149)
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v146, v147, v117);
LABEL_72:
            v102[v10[7]] = *((unsigned char *)v103 + v10[7]);
            v102[v10[8]] = *((unsigned char *)v103 + v10[8]);
            uint64_t v151 = v10[9];
            uint64_t v152 = &v102[v151];
            uint64_t v153 = (char *)v103 + v151;
            uint64_t v154 = sub_2E0980();
            uint64_t v155 = *(void *)(v154 - 8);
            uint64_t v156 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
            int v157 = v156(v152, 1, v154);
            int v158 = v156(v153, 1, v154);
            if (v157)
            {
              uint64_t v5 = v284;
              if (!v158)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v152, v153, v154);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
                goto LABEL_78;
              }
            }
            else
            {
              uint64_t v5 = v284;
              if (!v158)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v152, v153, v154);
LABEL_78:
                *(void *)&v102[v10[10]] = *(void *)((char *)v103 + v10[10]);
                swift_bridgeObjectRelease();
                *(void *)&v102[v10[11]] = *(void *)((char *)v103 + v10[11]);
                swift_bridgeObjectRelease();
                v102[v10[12]] = *((unsigned char *)v103 + v10[12]);
                *(void *)&v102[v10[13]] = *(void *)((char *)v103 + v10[13]);
                swift_bridgeObjectRelease();
                uint64_t v160 = v10[14];
                uint64_t v161 = &v102[v160];
                long long v162 = (void *)((char *)v103 + v160);
                uint64_t v164 = *v162;
                uint64_t v163 = v162[1];
                *(void *)uint64_t v161 = v164;
                *((void *)v161 + 1) = v163;
                swift_bridgeObjectRelease();
                uint64_t v165 = v10[15];
                uint64_t v166 = &v102[v165];
                uint64_t v167 = (char *)v103 + v165;
                uint64_t v168 = sub_2DE7F0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 40))(v166, v167, v168);
                *(void *)&v102[v10[16]] = *(void *)((char *)v103 + v10[16]);
                swift_bridgeObjectRelease();
                uint64_t v169 = v10[17];
                int v170 = &v102[v169];
                uint64_t v171 = (char *)v103 + v169;
                uint64_t v172 = sub_2E38D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 40))(v170, v171, v172);
                v102[v10[18]] = *((unsigned char *)v103 + v10[18]);
                *(void *)&v102[v10[19]] = *(void *)((char *)v103 + v10[19]);
                swift_bridgeObjectRelease();
                *(void *)&v102[v10[20]] = *(void *)((char *)v103 + v10[20]);
                swift_release();
                v102[v10[21]] = *((unsigned char *)v103 + v10[21]);
                uint64_t v173 = v10[22];
                uint64_t v174 = &v102[v173];
                int v175 = (void *)((char *)v103 + v173);
                uint64_t v177 = *v175;
                uint64_t v176 = v175[1];
                *(void *)uint64_t v174 = v177;
                *((void *)v174 + 1) = v176;
                swift_bridgeObjectRelease();
                uint64_t v178 = v10[23];
                uint64_t v179 = &v102[v178];
                uint64_t v180 = (void *)((char *)v103 + v178);
                if (*(void *)&v102[v178 + 8])
                {
                  uint64_t v181 = v180[1];
                  if (v181)
                  {
                    *(void *)uint64_t v179 = *v180;
                    *((void *)v179 + 1) = v181;
                    swift_bridgeObjectRelease();
                    *((void *)v179 + 2) = v180[2];
                    uint64_t v182 = v180[4];
                    *((void *)v179 + 3) = v180[3];
                    *((void *)v179 + 4) = v182;
                    swift_bridgeObjectRelease();
                    return v5;
                  }
                  sub_B0F2C((uint64_t)v179);
                }
                long long v183 = *((_OWORD *)v180 + 1);
                *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
                *((_OWORD *)v179 + 1) = v183;
                *((void *)v179 + 4) = v180[4];
                return v5;
              }
              (*(void (**)(char *, uint64_t))(v155 + 8))(v152, v154);
            }
            uint64_t v159 = sub_63BAC(&qword_3CB0B8);
            memcpy(v152, v153, *(void *)(*(void *)(v159 - 8) + 64));
            goto LABEL_78;
          }
          (*(void (**)(char *, uint64_t))(v118 + 8))(v146, v117);
        }
        uint64_t v150 = sub_63BAC(&qword_3C97E8);
        memcpy(v146, v147, *(void *)(*(void *)(v150 - 8) + 64));
        goto LABEL_72;
      }
      (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v117);
    }
    uint64_t v144 = sub_63BAC(&qword_3C97E8);
    memcpy(v115, v116, *(void *)(*(void *)(v144 - 8) + 64));
    goto LABEL_66;
  }
  if (v104)
  {
LABEL_45:
    uint64_t v112 = sub_63BAC(&qword_3C97F0);
    memcpy(v102, v103, *(void *)(*(void *)(v112 - 8) + 64));
    return v5;
  }
  *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
  uint64_t v105 = v10[5];
  uint64_t v106 = &v102[v105];
  uint64_t v107 = (char *)v103 + v105;
  uint64_t v108 = sub_2DF5D0();
  uint64_t v109 = *(void *)(v108 - 8);
  uint64_t v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
  if (v110(v107, 1, v108))
  {
    uint64_t v111 = sub_63BAC(&qword_3C97E8);
    memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v106, v107, v108);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
  }
  uint64_t v122 = v10[6];
  uint64_t v123 = &v102[v122];
  uint64_t v124 = (char *)v103 + v122;
  if (v110((char *)v103 + v122, 1, v108))
  {
    uint64_t v125 = sub_63BAC(&qword_3C97E8);
    memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v123, v124, v108);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v123, 0, 1, v108);
  }
  v102[v10[7]] = *((unsigned char *)v103 + v10[7]);
  v102[v10[8]] = *((unsigned char *)v103 + v10[8]);
  uint64_t v126 = v10[9];
  uint64_t v127 = &v102[v126];
  uint64_t v128 = (char *)v103 + v126;
  uint64_t v129 = sub_2E0980();
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = sub_63BAC(&qword_3CB0B8);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v127, v128, v129);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  *(void *)&v102[v10[10]] = *(void *)((char *)v103 + v10[10]);
  *(void *)&v102[v10[11]] = *(void *)((char *)v103 + v10[11]);
  v102[v10[12]] = *((unsigned char *)v103 + v10[12]);
  *(void *)&v102[v10[13]] = *(void *)((char *)v103 + v10[13]);
  *(_OWORD *)&v102[v10[14]] = *(_OWORD *)((char *)v103 + v10[14]);
  uint64_t v132 = v10[15];
  int v133 = &v102[v132];
  uint64_t v134 = (char *)v103 + v132;
  uint64_t v135 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
  *(void *)&v102[v10[16]] = *(void *)((char *)v103 + v10[16]);
  uint64_t v136 = v10[17];
  uint64_t v137 = &v102[v136];
  uint64_t v138 = (char *)v103 + v136;
  uint64_t v139 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
  v102[v10[18]] = *((unsigned char *)v103 + v10[18]);
  *(void *)&v102[v10[19]] = *(void *)((char *)v103 + v10[19]);
  *(void *)&v102[v10[20]] = *(void *)((char *)v103 + v10[20]);
  v102[v10[21]] = *((unsigned char *)v103 + v10[21]);
  *(_OWORD *)&v102[v10[22]] = *(_OWORD *)((char *)v103 + v10[22]);
  uint64_t v140 = v10[23];
  uint64_t v141 = &v102[v140];
  uint64_t v142 = (char *)v103 + v140;
  long long v143 = *((_OWORD *)v142 + 1);
  *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
  *((_OWORD *)v141 + 1) = v143;
  *((void *)v141 + 4) = *((void *)v142 + 4);
  (*(void (**)(char *, void, uint64_t, int *))(v281 + 56))(v102, 0, 1, v10);
  return v5;
}

uint64_t sub_14436C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_144380);
}

uint64_t sub_144380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C97F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3CAF50);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1444B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1444C8);
}

uint64_t sub_1444C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C97F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3CAF50);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1445FC()
{
  sub_13ADC8(319, &qword_3CC3F8, (uint64_t (*)(uint64_t))type metadata accessor for Page, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_13ADC8(319, (unint64_t *)&unk_3CC400, (uint64_t (*)(uint64_t))type metadata accessor for Page, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for IntentResult);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_14473C()
{
  unint64_t result = qword_3CC448;
  if (!qword_3CC448)
  {
    sub_2E3DF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC448);
  }
  return result;
}

uint64_t sub_144794()
{
  return sub_1316CC();
}

uint64_t sub_1447AC@<X0>(NSObject *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v8 = sub_2E0620();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (objc_class *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v12 = (void *)v4[4];
  NSString v13 = sub_2E43E0();
  id v14 = [v12 objectForKey:v13];

  if (v14)
  {
    uint64_t v15 = (objc_class *)type metadata accessor for LibraryAssetStateObserver();
  }
  else
  {
    (*(void (**)(objc_class *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v8);
    uint64_t v16 = v4[2];
    uint64_t v17 = (void *)v4[3];
    uint64_t v15 = (objc_class *)type metadata accessor for LibraryAssetStateObserver();
    id v18 = objc_allocWithZone(v15);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    LibraryAssetStateObserver.init(id:initialState:libraryItemStateProvider:downloadProgressCenter:)(a1, a2, v11, v16, v17);
    id v14 = v19;
    NSString v20 = sub_2E43E0();
    [v12 setObject:v14 forKey:v20];
  }
  uint64_t result = sub_148398(&qword_3CC610, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
  a4[3] = v15;
  a4[4] = result;
  *a4 = v14;
  return result;
}

void LibraryAssetStateObserver.__allocating_init(id:initialState:libraryItemStateProvider:downloadProgressCenter:)(NSObject *a1, unint64_t a2, objc_class *a3, uint64_t a4, void *a5)
{
  id v11 = objc_allocWithZone(v5);
  LibraryAssetStateObserver.init(id:initialState:libraryItemStateProvider:downloadProgressCenter:)(a1, a2, a3, a4, a5);
}

void sub_1449FC(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)v1[4];
  NSString v4 = sub_2E43E0();
  uint64_t v5 = (char *)[v3 objectForKey:v4];

  if (v5)
  {
    long long v6 = &v5[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_untrackedLibraryAssetState];
    swift_beginAccess();
    uint64_t v7 = sub_2E0620();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
  }
  else
  {
    uint64_t v8 = (void *)v1[2];
    NSString v9 = sub_2E43E0();
    id v10 = [v8 itemStateWithIdentifier:v9];

    id v11 = (void *)v1[3];
    NSString v12 = sub_2E43E0();
    NSString v13 = sub_2E43E0();
    id v14 = [v11 dynamicProgressForKind:v12 instance:v13 parameters:0];

    if (v14)
    {
      id v15 = [v14 progress];
      [v15 doubleValue];
      double v17 = v16;

      sub_144BEC(v10, a1, v17);
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_144BEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v52 = a2;
  uint64_t v51 = sub_2E05B0();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v36 - v7;
  uint64_t v48 = sub_2E05C0();
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  id v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (double *)((char *)v36 - v13);
  uint64_t v15 = sub_2E0600();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v20 = __chkstk_darwin(v19).n128_u64[0];
  uint64_t v22 = (char *)v36 - v21;
  id v23 = [a1 itemIdentifier:v20];
  sub_2E4B80();
  swift_unknownObjectRelease();
  if (swift_dynamicCast())
  {
    uint64_t v47 = v53;
    unint64_t v24 = v54;
  }
  else
  {
    uint64_t v47 = 0;
    unint64_t v24 = 0xE000000000000000;
  }
  unint64_t v46 = v24;
  uint64_t v25 = (char *)[a1 download];
  BOOL v45 = v25 != (unsigned char *)&dword_0 + 1;
  double v26 = a3;
  if (v25 != (unsigned char *)&dword_0 + 1) {
    double v26 = 0.0;
  }
  double v44 = v26;
  sub_147664((uint64_t)v22);
  sub_1477EC(v14, a3);
  sub_147CFC((uint64_t)v8);
  [a1 readingProgressValue];
  unsigned int v43 = [a1 isFinished];
  unsigned int v41 = [a1 hasSpecifiedFinishedDate];
  unsigned int v42 = [a1 isInSamples];
  unsigned int v27 = [a1 isSample];
  uint64_t v37 = v14;
  unsigned int v38 = v27;
  v36[3] = [a1 wantToRead];
  unsigned int v28 = [a1 isPurchased];
  uint64_t v40 = v22;
  v36[2] = v28;
  size_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v39 = v15;
  v29(v18, v22, v15);
  uint64_t v30 = v9;
  uint64_t v31 = v14;
  uint64_t v32 = v48;
  (*(void (**)(char *, double *, uint64_t))(v9 + 16))(v11, v31, v48);
  uint64_t v33 = v49;
  uint64_t v34 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v50, v8, v51);
  sub_2E05F0();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  (*(void (**)(double *, uint64_t))(v30 + 8))(v37, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v40, v39);
}

uint64_t sub_14509C()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1450E4@<X0>(NSObject *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1447AC(a1, a2, a3, a4);
}

void sub_145108(uint64_t a1@<X8>)
{
}

uint64_t LibraryAssetStateObserver.libraryAssetState.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
  sub_2DE010();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver__libraryAssetState;
  swift_beginAccess();
  uint64_t v4 = sub_2E0620();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_145228@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
  sub_2DE010();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver__libraryAssetState;
  swift_beginAccess();
  uint64_t v5 = sub_2E0620();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_145324(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_2E0620();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
  sub_2DE000();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1454AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver__libraryAssetState;
  swift_beginAccess();
  uint64_t v4 = sub_2E0620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

void LibraryAssetStateObserver.init(id:initialState:libraryItemStateProvider:downloadProgressCenter:)(NSObject *a1, unint64_t a2, objc_class *a3, uint64_t a4, void *a5)
{
  __n128 v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = sub_63BAC((uint64_t *)&unk_3CE280);
  __chkstk_darwin(v12 - 8);
  uint64_t v70 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = sub_2E05C0();
  __chkstk_darwin(v63);
  uint64_t v62 = &v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = sub_2E0600();
  __chkstk_darwin(v60);
  uint64_t v59 = &v56[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_2E0620();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v71 = (objc_class *)&v56[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v67 = &v56[-v20];
  uint64_t v21 = v6;
  sub_2DE040();
  uint64_t v22 = (NSObject **)&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_id];
  *uint64_t v22 = a1;
  v22[1] = a2;
  *(void *)&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_libraryItemStateProvider] = a4;
  *(void *)&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_downloadProgressCenter] = a5;
  id v23 = a5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  NSString v24 = sub_2E43E0();
  os_log_t v61 = a1;
  NSString v25 = sub_2E43E0();
  id v26 = [v23 dynamicProgressForKind:v24 instance:v25 parameters:0];

  id v68 = v23;
  if (v26)
  {
    sub_63BAC(&qword_3CC498);
    uint64_t v27 = swift_allocObject();
    *(_DWORD *)(v27 + 40) = 0;
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = v26;
    *(void *)(v27 + 32) = 0;
    *(void *)&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData] = v27;
    unsigned int v28 = *(void (**)(char *, objc_class *, uint64_t))(v17 + 16);
    v28(&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver__libraryAssetState], a3, v16);
    v28(&v21[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_untrackedLibraryAssetState], a3, v16);
    id v65 = v26;
    swift_unknownObjectRetain();

    v74.receiver = v21;
    v74.super_class = ObjectType;
    id v29 = [&v74 init];
    uint64_t v30 = qword_3C65D0;
    uint64_t v64 = (char *)v29;
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v66 = a4;
    uint64_t v31 = sub_2DF850();
    sub_58BA0(v31, (uint64_t)qword_3CD240);
    uint64_t v32 = (objc_class *)v67;
    v28(v67, a3, v16);
    uint64_t v33 = v71;
    ObjectType = a3;
    v28((char *)v71, a3, v16);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_2DF830();
    os_log_type_t v35 = sub_2E48D0();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v73[0] = v58;
      *(_DWORD *)uint64_t v37 = 136315650;
      int v57 = v36;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_5F150((uint64_t)v61, a2, v73);
      os_log_t v61 = v34;
      sub_2E4B40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      sub_2E0610();
      uint64_t v38 = sub_2E4470();
      uint64_t v72 = sub_5F150(v38, v39, v73);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      uint64_t v40 = v32;
      unsigned int v41 = *(void (**)(objc_class *, uint64_t))(v17 + 8);
      v41(v40, v16);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v42 = v16;
      unsigned int v43 = v71;
      sub_2E05D0();
      uint64_t v44 = sub_2E4470();
      uint64_t v72 = sub_5F150(v44, v45, v73);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      unint64_t v46 = v43;
      uint64_t v16 = v42;
      v41(v46, v42);
      uint64_t v34 = v61;
      _os_log_impl(&dword_0, v61, (os_log_type_t)v57, "LibraryAssetState initial: id=%s, ownership=%s, localState=%s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v47 = v32;
      unsigned int v41 = *(void (**)(objc_class *, uint64_t))(v17 + 8);
      v41(v47, v16);
      v41(v33, v16);
    }

    uint64_t v49 = v64;
    id v48 = v65;
    id v50 = [v65 registerProgressObserver:v64];
    uint64_t v51 = *(os_unfair_lock_s **)&v49[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData];
    __chkstk_darwin(v50);
    *(void *)&v56[-16] = v48;
    swift_retain();
    os_unfair_lock_lock(v51 + 10);
    sub_147DB0((uint64_t)&v51[4]);
    os_unfair_lock_unlock(v51 + 10);
    swift_release();
    uint64_t v52 = sub_2E4780();
    uint64_t v53 = (uint64_t)v70;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v70, 1, 1, v52);
    uint64_t v54 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = 0;
    v55[3] = 0;
    v55[4] = v54;
    sub_25CA94(v53, (uint64_t)&unk_3CC4B8, (uint64_t)v55);
    swift_release();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v41(ObjectType, v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for LibraryAssetStateObserver()
{
  uint64_t result = qword_3CC5F8;
  if (!qword_3CC5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id LibraryAssetStateObserver.__deallocating_deinit()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData];
  swift_retain();
  os_unfair_lock_lock(v3 + 10);
  sub_147F40((uint64_t)&v3[4]);
  os_unfair_lock_unlock(v3 + 10);
  swift_release();
  id v4 = [*(id *)&v0[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_libraryItemStateProvider] stateCenter];
  [v4 removeObserver:v1];

  v6.receiver = v1;
  v6.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_145F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_145F6C, 0, 0);
}

uint64_t sub_145F6C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    uint64_t v3 = OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_libraryItemStateProvider;
    id v4 = [*(id *)(Strong + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_libraryItemStateProvider) stateCenter];
    uint64_t v5 = v2;
    swift_bridgeObjectRetain();
    NSString v6 = sub_2E43E0();
    swift_bridgeObjectRelease();
    [v4 addObserver:v5 forItemIdentifier:v6];

    uint64_t v7 = *(void **)&v2[v3];
    swift_bridgeObjectRetain();
    NSString v8 = sub_2E43E0();
    swift_bridgeObjectRelease();
    id v9 = [v7 itemStateWithIdentifier:v8];

    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData];
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v5;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 40));
    sub_1485D0((double *)(v10 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 40));

    swift_release();
    swift_unknownObjectRelease();
    swift_task_dealloc();
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_146158(double *a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC((uint64_t *)&unk_3CE280);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2E0620();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)a1 = a2;
  double v14 = a1[2];
  uint64_t v15 = (void *)swift_unknownObjectRetain();
  sub_144BEC(v15, (uint64_t)v13, v14);
  uint64_t v16 = sub_2E4780();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  sub_2E4740();
  swift_retain();
  uint64_t v18 = sub_2E4730();
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v18;
  *((void *)v20 + 3) = &protocol witness table for MainActor;
  *((void *)v20 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v10, v7);
  swift_release();
  sub_25CC40((uint64_t)v6, (uint64_t)&unk_3CC648, (uint64_t)v20);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_146400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  sub_2E4740();
  v5[8] = sub_2E4730();
  uint64_t v7 = sub_2E46E0();
  return _swift_task_switch(sub_14649C, v7, v6);
}

uint64_t sub_14649C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_146548(*(void *)(v0 + 56));
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_146548(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2E0620();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_untrackedLibraryAssetState;
  swift_beginAccess();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  sub_148398(&qword_3CC628, (void (*)(uint64_t))&type metadata accessor for LibraryAssetState);
  char v10 = sub_2E43D0();
  v13[0] = *(void *)(v5 + 8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v13[0])(v7, v4);
  if ((v10 & 1) == 0)
  {
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
    swift_endAccess();
    v9(v7, a1, v4);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v13[-2] = v2;
    v13[-1] = v7;
    long long v13[2] = v2;
    sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
    sub_2DE000();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v13[0])(v7, v4);
  }
  return result;
}

void LibraryAssetStateObserver.libraryItemStateCenter(_:didUpdate:for:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData);
  p_os_unfair_lock_opaque = (double *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_147F78(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_146850(double *a1, uint64_t a2, void (**a3)(char *, uint64_t), uint64_t a4, unint64_t a5)
{
  os_log_t v61 = a3;
  unint64_t v60 = a5;
  uint64_t v52 = a4;
  uint64_t v55 = sub_2E05C0();
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_2E0600();
  __chkstk_darwin(v53);
  v51[1] = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC((uint64_t *)&unk_3CE280);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v57 = v11;
  uint64_t v12 = sub_2E0620();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v59 = (char *)v51 - v16;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)v51 - v18;
  int v56 = (char *)v51 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v51 - v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)a1 = a2;
  double v23 = a1[2];
  NSString v24 = (void *)swift_unknownObjectRetain();
  sub_144BEC(v24, (uint64_t)v22, v23);
  uint64_t v25 = sub_2E4780();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
  id v26 = v19;
  uint64_t v27 = v12;
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v58(v26, v22, v12);
  sub_2E4740();
  unsigned int v28 = v61;
  uint64_t v29 = sub_2E4730();
  unint64_t v30 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = v29;
  *((void *)v31 + 3) = &protocol witness table for MainActor;
  *((void *)v31 + 4) = v28;
  os_log_t v61 = (void (**)(char *, uint64_t))v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v31[v30], v56, v27);
  sub_25CA94((uint64_t)v57, (uint64_t)&unk_3CC638, (uint64_t)v31);
  swift_release();
  if (qword_3C65D0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_2DF850();
  sub_58BA0(v32, (uint64_t)qword_3CD240);
  uint64_t v33 = v58;
  uint64_t v34 = v59;
  v58(v59, v22, v27);
  os_log_type_t v35 = v62;
  v33(v62, v22, v27);
  unint64_t v36 = v60;
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_2DF830();
  os_log_type_t v38 = sub_2E48D0();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v58 = (void (*)(char *, char *, uint64_t))v22;
    uint64_t v41 = v40;
    int v57 = (char *)swift_slowAlloc();
    uint64_t v64 = v57;
    *(_DWORD *)uint64_t v41 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_5F150(v52, v36, (uint64_t *)&v64);
    sub_2E4B40();
    swift_bridgeObjectRelease_n();
    v51[0] = v27;
    *(_WORD *)(v41 + 12) = 2080;
    sub_2E0610();
    uint64_t v42 = sub_2E4470();
    uint64_t v63 = sub_5F150(v42, v43, (uint64_t *)&v64);
    sub_2E4B40();
    swift_bridgeObjectRelease();
    uint64_t v44 = v61[1];
    v44(v34, v27);
    *(_WORD *)(v41 + 22) = 2080;
    LODWORD(v61) = v39;
    unint64_t v45 = v62;
    sub_2E05D0();
    uint64_t v46 = sub_2E4470();
    uint64_t v63 = sub_5F150(v46, v47, (uint64_t *)&v64);
    sub_2E4B40();
    swift_bridgeObjectRelease();
    uint64_t v48 = v51[0];
    v44(v45, v51[0]);
    _os_log_impl(&dword_0, v37, (os_log_type_t)v61, "LibraryAssetState changed: id=%s, ownership=%s, localState=%s", (uint8_t *)v41, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(void (*)(char *, char *, uint64_t), uint64_t))v44)(v58, v48);
  }
  else
  {

    id v50 = v61[1];
    v50(v35, v27);
    v50(v34, v27);
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(char *, uint64_t))v50)(v22, v27);
  }
}

uint64_t sub_146EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_2E4740();
  v5[4] = sub_2E4730();
  uint64_t v7 = sub_2E46E0();
  return _swift_task_switch(sub_146F40, v7, v6);
}

uint64_t sub_146F40()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_146548(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void LibraryAssetStateObserver.dynamicProgressChanged(_:)(void *a1)
{
  id v2 = [a1 progress];
  [v2 doubleValue];

  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver_lockProtectedData);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_147F98(v4);
  os_unfair_lock_unlock(v5);
}

void sub_147110(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v8 = sub_63BAC((uint64_t *)&unk_3CE280);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2E0620();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - v16;
  if (*(void *)(a1 + 8) == a2)
  {
    *(double *)(a1 + 16) = a4;
    if (*(void *)a1)
    {
      uint64_t v18 = (void *)swift_unknownObjectRetain_n();
      sub_144BEC(v18, (uint64_t)v17, a4);
      uint64_t v19 = sub_2E4780();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
      sub_2E4740();
      id v23 = a3;
      uint64_t v20 = sub_2E4730();
      unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v22 = (char *)swift_allocObject();
      *((void *)v22 + 2) = v20;
      *((void *)v22 + 3) = &protocol witness table for MainActor;
      *((void *)v22 + 4) = v23;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v22[v21], v14, v11);
      sub_25CA94((uint64_t)v10, (uint64_t)&unk_3CC620, (uint64_t)v22);
      swift_release();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
}

uint64_t sub_1473A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_2E4740();
  v5[4] = sub_2E4730();
  uint64_t v7 = sub_2E46E0();
  return _swift_task_switch(sub_1487D4, v7, v6);
}

void LibraryAssetStateObserver.init()()
{
}

uint64_t sub_147568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getKeyPath();
  sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
  sub_2DE010();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11BookStoreUI25LibraryAssetStateObserver__libraryAssetState;
  swift_beginAccess();
  uint64_t v5 = sub_2E0620();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_147664@<X0>(uint64_t a1@<X8>)
{
  if ([v1 library] == &dword_4
    || [v1 library] == (char *)&dword_0 + 3
    && ([v1 assetIsPreorderable] & 1) == 0)
  {
    uint64_t v3 = (unsigned int *)&enum case for LibraryAssetState.Ownership.purchased(_:);
  }
  else if ([v1 library] == (char *)&dword_4 + 1 {
         || [v1 download] == (char *)&dword_0 + 2
  }
         && ([v1 isSample] & 1) == 0)
  {
    uint64_t v3 = (unsigned int *)&enum case for LibraryAssetState.Ownership.sideloaded(_:);
  }
  else
  {
    if ([v1 library] != (char *)&dword_0 + 3)
    {
      uint64_t v11 = (char *)[v1 library];
      uint64_t v7 = sub_2E0600();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
      if (v11 == (unsigned char *)&dword_0 + 2) {
        uint64_t v12 = (unsigned int *)&enum case for LibraryAssetState.Ownership.purchasing(_:);
      }
      else {
        uint64_t v12 = (unsigned int *)&enum case for LibraryAssetState.Ownership.unowned(_:);
      }
      uint64_t v9 = *v12;
      uint64_t v8 = a1;
      goto LABEL_8;
    }
    uint64_t v3 = (unsigned int *)&enum case for LibraryAssetState.Ownership.preordered(_:);
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_2E0600();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  uint64_t v7 = v5;
  uint64_t v8 = a1;
  uint64_t v9 = v4;
LABEL_8:

  return v6(v8, v9, v7);
}

uint64_t sub_1477EC@<X0>(double *a1@<X8>, double a2@<D0>)
{
  unint64_t v36 = a1;
  uint64_t v4 = sub_2E0600();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v33 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v33 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v33 - v14;
  id v35 = v2;
  sub_147664((uint64_t)v33 - v14);
  uint64_t v34 = (void (*)(char *, void, uint64_t))v5[13];
  v34(v12, enum case for LibraryAssetState.Ownership.purchased(_:), v4);
  v33[1] = sub_148398(&qword_3CC608, (void (*)(uint64_t))&type metadata accessor for LibraryAssetState.Ownership);
  char v16 = sub_2E43D0();
  uint64_t v17 = (void (*)(char *, uint64_t))v5[1];
  v17(v12, v4);
  uint64_t v18 = (void (*)(char *, char *, uint64_t))v5[2];
  v18(v9, v15, v4);
  if (v16)
  {
    v17(v9, v4);
    uint64_t v19 = v37;
    v18(v37, v15, v4);
LABEL_4:
    v17(v19, v4);
    goto LABEL_5;
  }
  v34(v12, enum case for LibraryAssetState.Ownership.sideloaded(_:), v4);
  char v20 = sub_2E43D0();
  v17(v12, v4);
  v17(v9, v4);
  uint64_t v19 = v37;
  v18(v37, v15, v4);
  if (v20) {
    goto LABEL_4;
  }
  v34(v12, enum case for LibraryAssetState.Ownership.redownload(_:), v4);
  char v23 = sub_2E43D0();
  v17(v12, v4);
  v17(v19, v4);
  if ((v23 & 1) == 0)
  {
    v17(v15, v4);
    uint64_t v22 = (unsigned int *)&enum case for LibraryAssetState.LocalState.unavailable(_:);
    goto LABEL_13;
  }
LABEL_5:
  id v21 = v35;
  if ([v35 isUpdateAvailable])
  {
    v17(v15, v4);
    uint64_t v22 = (unsigned int *)&enum case for LibraryAssetState.LocalState.outdated(_:);
LABEL_13:
    uint64_t v24 = *v22;
    uint64_t v25 = sub_2E05C0();
    id v26 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);
    uint64_t v27 = v36;
LABEL_14:
    uint64_t v28 = v24;
    return v26(v27, v28, v25);
  }
  if ([v21 download] == (char *)&dword_0 + 2)
  {
    v17(v15, v4);
    uint64_t v22 = (unsigned int *)&enum case for LibraryAssetState.LocalState.latest(_:);
    goto LABEL_13;
  }
  if ([v21 isStreamable])
  {
    v17(v15, v4);
    uint64_t v22 = (unsigned int *)&enum case for LibraryAssetState.LocalState.streamable(_:);
    goto LABEL_13;
  }
  if ([v21 download] == (char *)&dword_0 + 1)
  {
    v17(v15, v4);
    unint64_t v30 = v36;
    *unint64_t v36 = a2;
    uint64_t v24 = enum case for LibraryAssetState.LocalState.downloading(_:);
    uint64_t v25 = sub_2E05C0();
    id v26 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);
    uint64_t v27 = v30;
    goto LABEL_14;
  }
  id v31 = [v21 download];
  v17(v15, v4);
  uint64_t v25 = sub_2E05C0();
  id v26 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);
  if (v31) {
    uint64_t v32 = (unsigned int *)&enum case for LibraryAssetState.LocalState.unavailable(_:);
  }
  else {
    uint64_t v32 = (unsigned int *)&enum case for LibraryAssetState.LocalState.downloadable(_:);
  }
  uint64_t v28 = *v32;
  uint64_t v27 = v36;
  return v26(v27, v28, v25);
}

uint64_t sub_147CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)[v1 play];
  if (v3 == (unsigned char *)&dword_0 + 2)
  {
    uint64_t v4 = (unsigned int *)&enum case for LibraryAssetState.PlayState.paused(_:);
  }
  else if (v3 == (unsigned char *)&dword_0 + 1)
  {
    uint64_t v4 = (unsigned int *)&enum case for LibraryAssetState.PlayState.playing(_:);
  }
  else
  {
    uint64_t v4 = (unsigned int *)&enum case for LibraryAssetState.PlayState.notActive(_:);
    if (!v3)
    {
      uint64_t v5 = enum case for LibraryAssetState.PlayState.notActive(_:);
      goto LABEL_8;
    }
  }
  uint64_t v5 = *v4;
LABEL_8:
  uint64_t v6 = sub_2E05B0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(a1, v5, v6);
}

void sub_147DB0(uint64_t a1)
{
  id v3 = [*(id *)(v1 + 16) progress];
  [v3 doubleValue];
  uint64_t v5 = v4;

  *(void *)(a1 + 16) = v5;
}

uint64_t sub_147E1C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_147E54()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_147E94()
{
  uint64_t v2 = *(void *)(v0 + 32);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_8BBE0;
  v3[5] = v2;
  return _swift_task_switch(sub_145F6C, 0, 0);
}

id sub_147F40(uint64_t a1)
{
  return [*(id *)(a1 + 8) unregisterProgressObserver:*(void *)(v1 + 16)];
}

uint64_t sub_147F78(double *a1)
{
  return sub_146850(a1, *(void *)(v1 + 16), *(void (***)(char *, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_147F98(uint64_t a1)
{
  sub_147110(a1, *(void *)(v1 + 16), *(void **)(v1 + 32), *(double *)(v1 + 24));
}

uint64_t sub_147FBC()
{
  return sub_148398(&qword_3CC468, (void (*)(uint64_t))type metadata accessor for LibraryAssetStateObserver);
}

uint64_t type metadata accessor for LibraryAssetStateObserverProvider()
{
  return self;
}

uint64_t sub_148028()
{
  return type metadata accessor for LibraryAssetStateObserver();
}

uint64_t sub_148030()
{
  uint64_t result = sub_2E0620();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2DE050();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for LibraryAssetStateObserver(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LibraryAssetStateObserver);
}

uint64_t dispatch thunk of LibraryAssetStateObserver.__allocating_init(id:initialState:libraryItemStateProvider:downloadProgressCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t destroy for LibraryAssetStateObserver.LockProtectedData()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void *_s11BookStoreUI25LibraryAssetStateObserverC17LockProtectedDataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for LibraryAssetStateObserver.LockProtectedData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for LibraryAssetStateObserver.LockProtectedData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for LibraryAssetStateObserver.LockProtectedData()
{
  return &type metadata for LibraryAssetStateObserver.LockProtectedData;
}

uint64_t sub_14829C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2E0620() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_8BBE0;
  return sub_1473A0(a1, v5, v6, v7, v8);
}

uint64_t sub_148398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1483E0()
{
  return sub_1454AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_148400()
{
  uint64_t v1 = sub_2E0620();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1484D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2E0620() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_6E3CC;
  return sub_146EA8(a1, v5, v6, v7, v8);
}

uint64_t sub_1485D0(double *a1)
{
  return sub_146158(a1, *(void *)(v1 + 16));
}

uint64_t sub_1485EC()
{
  uint64_t v1 = sub_2E0620();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1486C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_2E0620() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_8BBE0;
  return sub_146400(a1, v5, v6, v7, v8);
}

uint64_t sub_1487BC(double *a1)
{
  return sub_147F78(a1);
}

uint64_t sub_1487D8()
{
  return sub_1483E0();
}

void sub_1487F0(uint64_t a1)
{
}

id MicaFileProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MicaFileProvider();
  return [super init];
}

id MicaFileProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MicaFileProvider();
  return [super dealloc];
}

uint64_t sub_148958(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_148DFC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_2E4540();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_2E44B0();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_2E44B0();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_2E4560();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_5E8AC(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_5E8AC((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  long long v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_2E44B0();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_2E4560();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_5E8AC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_5E8AC((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    long long v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2E4DB0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_2E4DB0();
  __break(1u);
  return result;
}

uint64_t sub_148DFC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_2E4560();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_5E8AC(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_5E8AC((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    void v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_2E4DB0();
  __break(1u);
  return result;
}

uint64_t sub_148F58(uint64_t a1, unint64_t a2)
{
  NSString v4 = sub_2E43E0();
  id v5 = [v4 pathExtension];

  uint64_t v6 = sub_2E4420();
  uint64_t v8 = v7;

  v27[0] = 47;
  v27[1] = 0xE100000000000000;
  unint64_t v26 = v27;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_148958(0x7FFFFFFFFFFFFFFFLL, 1, sub_149230, (uint64_t)v25, a1, a2);
  if (v6 == 1918984547 && v8 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_2E5020();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (v9[2] != 2)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v12 = v9[4];
  unint64_t v13 = v9[5];
  uint64_t v15 = v9[6];
  uint64_t v14 = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_2E4B30();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (v15 == v18 && v14 == v19 && v12 >> 16 == v16 >> 16 && v13 >> 16 == v17 >> 16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_2E4FC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  id v23 = [self sharedInstance];
  id v24 = [v23 currentPackage];

  if (v24)
  {
    uint64_t v20 = sub_2DF990();

    return v20;
  }
  return 0;
}

uint64_t type metadata accessor for MicaFileProvider()
{
  return self;
}

uint64_t method lookup function for MicaFileProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MicaFileProvider);
}

uint64_t dispatch thunk of MicaFileProvider.data(for:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_20.filesize + (swift_isaMask & *v0)))();
}

uint64_t sub_14921C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_9947C(a1, a2);
  }
  return a1;
}

uint64_t sub_149230(void *a1)
{
  objc_super v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_2E5020() & 1;
  }
}

uint64_t sub_149288()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1492C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for SeriesListFilterActionImplementation()
{
  return &type metadata for SeriesListFilterActionImplementation;
}

unint64_t sub_1492E4()
{
  unint64_t result = qword_3CC678;
  if (!qword_3CC678)
  {
    type metadata accessor for SeriesListFilterAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_3CC678);
  }
  return result;
}

uint64_t sub_14933C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  v3[8] = a3;
  uint64_t v4 = sub_63BAC(&qword_3C8A50);
  id v5 = (void *)swift_task_alloc();
  v3[9] = v5;
  *id v5 = v3;
  v5[1] = sub_149400;
  return BaseObjectGraph.inject<A>(_:)(v3 + 2, v4, v4);
}

uint64_t sub_149400()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    objc_super v2 = sub_149848;
  }
  else {
    objc_super v2 = sub_149514;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_149514()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_71044((void *)(v0 + 16), v2);
  *(unsigned char *)(v0 + 104) = *(unsigned char *)v1;
  sub_71044((void *)(v1 + 8), *(void *)(v1 + 32));
  uint64_t v4 = sub_2DEC00();
  uint64_t v6 = v5;
  *(void *)(v0 + 88) = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 72) + **(int **)(v3 + 72));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  void *v7 = v0;
  v7[1] = sub_149674;
  return v9(v0 + 104, v4, v6, v2, v3);
}

uint64_t sub_149674()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_14978C, 0, 0);
}

uint64_t sub_14978C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = enum case for ActionOutcome.performed(_:);
  uint64_t v3 = sub_2E3920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_149848()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_149860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC((uint64_t *)&unk_3CE280);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SeriesListFilterAction();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  sub_149A58(a1, (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  sub_149C34((uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_63BAC(&qword_3C8908);
  swift_retain();
  uint64_t v12 = sub_2E42A0();
  uint64_t v13 = sub_2E4780();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = &unk_3CC688;
  uint64_t v14[5] = v11;
  v14[6] = v12;
  swift_retain();
  sub_1D4150((uint64_t)v6, (uint64_t)&unk_3C8910, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t sub_149A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesListFilterAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_149ABC()
{
  uint64_t v1 = (int *)(type metadata accessor for SeriesListFilterAction() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + v3 + 8);
  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = sub_2E3910();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v3 + v1[10];
  uint64_t v8 = sub_2DE8E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_149C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesListFilterAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_149C98(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SeriesListFilterAction() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_6E3CC;
  return sub_14933C(a1, v5, v6);
}

uint64_t sub_149D80()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t ContentKind.segmentedItemTitleForAnalytics.getter()
{
  uint64_t v1 = sub_2DEC50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v9((char *)&v13 - v7, v0, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v8, v1);
  if (v10 == enum case for ContentKind.pdf(_:)) {
    return 4605008;
  }
  if (v10 == enum case for ContentKind.audiobook(_:)) {
    return 0x6F6F626F69647541;
  }
  if (v10 == enum case for ContentKind.regularBook(_:)) {
    return 0x736B6F6F42;
  }
  if (v10 == enum case for ContentKind.manga(_:)) {
    return 0x61676E614DLL;
  }
  if (v10 == enum case for ContentKind.unknownBook(_:)) {
    return 0x206E776F6E6B6E55;
  }
  ((void (*)(char *, uint64_t, uint64_t))v9)(v4, v0, v1);
  uint64_t v11 = sub_2E4480();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v11;
}

uint64_t SeriesRoomListHeaderSegmentedItem.init(contentKind:pageIntent:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  __n128 v6 = (int *)type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  *a3 = 0;
  a3[1] = 0;
  uint64_t v7 = (char *)a3 + v6[5];
  uint64_t v8 = sub_2DF5D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *((unsigned char *)a3 + v6[6]) = 0;
  uint64_t v9 = (char *)a3 + v6[7];
  uint64_t v10 = sub_2DEC50();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  uint64_t v11 = (uint64_t)a3 + v6[8];

  return sub_65CF4(a2, v11);
}

uint64_t type metadata accessor for SeriesRoomListHeaderSegmentedItem()
{
  uint64_t result = qword_3CC710;
  if (!qword_3CC710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void Array<A>.sort()()
{
  sub_14D4D0(v0);
}

uint64_t SeriesRoomListHeaderSegmentedItem.localizableSubtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  return sub_66444(v1 + *(int *)(v3 + 20), a1, &qword_3C97E8);
}

uint64_t SeriesRoomListHeaderSegmentedItem.isDisabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() + 24));
}

uint64_t SeriesRoomListHeaderSegmentedItem.contentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() + 28);
  uint64_t v4 = sub_2DEC50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesRoomListHeaderSegmentedItem.pageIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() + 32);

  return sub_66310(v3, a1);
}

uint64_t SeriesRoomListHeaderSegmentedItem.action(with:containingShelfID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v207 = a3;
  uint64_t v193 = a2;
  uint64_t v216 = a1;
  int v190 = a4;
  uint64_t v183 = sub_2E13F0();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v180 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_2E1300();
  uint64_t v179 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v177 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_2E1270();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  int v175 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_2DEC50();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v172 = (char *)&v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3CC690);
  uint64_t v214 = *(void **)(v8 - 8);
  uint64_t v215 = v214;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v213 = (uint64_t)&v156 - v12;
  __chkstk_darwin(v13);
  uint64_t v162 = (uint64_t)&v156 - v14;
  __chkstk_darwin(v15);
  uint64_t v209 = (uint64_t)&v156 - v16;
  uint64_t v191 = sub_2DE410();
  uint64_t v169 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v168 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_2DE8B0();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v167 = (char *)&v156 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_63BAC(&qword_3C75A0);
  __chkstk_darwin(v19 - 8);
  uint64_t v197 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_63BAC(&qword_3C6F10);
  uint64_t v210 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  int v212 = (char *)&v156 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  int v208 = (char *)&v156 - v24;
  __chkstk_darwin(v25);
  uint64_t v171 = (char **)((char *)&v156 - v26);
  __chkstk_darwin(v27);
  int v194 = (char *)&v156 - v28;
  __chkstk_darwin(v29);
  int v157 = (char *)&v156 - v30;
  __chkstk_darwin(v31);
  uint64_t v164 = (char **)((char *)&v156 - v32);
  uint64_t v201 = sub_2E3910();
  uint64_t v189 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v34 = (char *)&v156 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v200 = (char *)&v156 - v36;
  __chkstk_darwin(v37);
  uint64_t v196 = (char *)&v156 - v38;
  __chkstk_darwin(v39);
  uint64_t v211 = (char *)&v156 - v40;
  uint64_t v199 = sub_63BAC(&qword_3C80D8);
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  size_t v204 = (char *)&v156 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v206 = (char *)&v156 - v43;
  uint64_t v203 = type metadata accessor for SeriesRoomListHeaderComponentModel();
  __chkstk_darwin(v203);
  uint64_t v45 = (char *)&v156 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  __chkstk_darwin(v195);
  uint64_t v47 = (char *)&v156 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_63BAC(&qword_3CA910);
  uint64_t v49 = *(void *)(v48 - 8);
  __n128 v50 = __chkstk_darwin(v48);
  uint64_t v52 = (char *)&v156 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = v49;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v49 + 16);
  v53(v52, v216, v48, v50);
  sub_14FB4C(v205, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_2E0ED0();
  uint64_t v184 = v52;
  uint64_t v186 = v48;
  ((void (*)(char *, char *, uint64_t))v53)(v45, v52, v48);
  uint64_t v54 = sub_63BAC(&qword_3CC698);
  uint64_t v55 = *((unsigned __int8 *)v215 + 80);
  uint64_t v56 = (v55 + 32) & ~v55;
  uint64_t v216 = v214[9];
  uint64_t v163 = 2 * v216;
  uint64_t v159 = v54;
  uint64_t v158 = v55 | 7;
  uint64_t v57 = swift_allocObject();
  long long v170 = xmmword_2FCE70;
  *(_OWORD *)(v57 + 16) = xmmword_2FCE70;
  uint64_t v161 = v56;
  uint64_t v156 = v57;
  uint64_t v58 = (uint64_t *)(v57 + v56);
  int v188 = v34;
  int v187 = v45;
  if (v207)
  {
    sub_63BAC(&qword_3CC6A0);
    sub_63BAC(&qword_3CC6A8);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_2FEFE0;
    uint64_t v222 = v203;
    uint64_t v223 = sub_14FBFC(&qword_3CBBC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderComponentModel);
    unint64_t v60 = sub_71088(&v221);
    sub_14FB4C((uint64_t)v45, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderComponentModel);
    type metadata accessor for Page();
    type metadata accessor for Shelf();
    sub_14FBFC((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
    sub_14FBFC(&qword_3C8148, (void (*)(uint64_t))type metadata accessor for Shelf);
    swift_bridgeObjectRetain();
    sub_2E0A40();
    *uint64_t v58 = v59;
    uint64_t v61 = v210;
    (*(void (**)(uint64_t *, void, uint64_t))(v210 + 104))(v58, enum case for PageUpdateInstruction.replaceShelfHeaders<A, B>(_:), v21);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
    unint64_t v63 = (v61 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v62((uint64_t)v58, 0, 1, v21);
  }
  else
  {
    uint64_t v61 = v210;
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56);
    unint64_t v63 = (v210 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v62((uint64_t)v58, 1, 1, v21);
  }
  uint64_t v64 = (uint64_t)v58 + v216;
  sub_66310(v205 + *(int *)(v195 + 32), (uint64_t)v58 + v216);
  id v65 = *(void (**)(void *))(v61 + 104);
  uint64_t v203 = v61 + 104;
  uint64_t v202 = v65;
  ((void (*)(uint64_t, void, uint64_t))v65)(v64, enum case for PageUpdateInstruction.replacePage<A, B>(_:), v21);
  uint64_t v192 = v62;
  unint64_t v160 = v63;
  v62(v64, 0, 1, v21);
  sub_2E3900();
  uint64_t v66 = v209;
  sub_66444((uint64_t)v58, v209, &qword_3CC690);
  uint64_t v67 = v66;
  uint64_t v68 = v162;
  sub_71900(v67, v162, &qword_3CC690);
  uint64_t v69 = *(void **)(v61 + 48);
  uint64_t v70 = (void (**)(char *, uint64_t, uint64_t))(v61 + 32);
  uint64_t v215 = (void *)(v61 + 48);
  uint64_t v214 = v69;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v69)(v68, 1, v21) == 1)
  {
    sub_662B4(v68, &qword_3CC690);
    uint64_t v71 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v72 = *v70;
    size_t v73 = v157;
    (*v70)(v157, v68, v21);
    v72(v194, (uint64_t)v73, v21);
    uint64_t v71 = (char *)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v71 = (char *)sub_5E9D0(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    }
    unint64_t v75 = *((void *)v71 + 2);
    unint64_t v74 = *((void *)v71 + 3);
    if (v75 >= v74 >> 1) {
      uint64_t v71 = (char *)sub_5E9D0(v74 > 1, v75 + 1, 1, (unint64_t)v71);
    }
    *((void *)v71 + 2) = v75 + 1;
    v72(&v71[((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v75], (uint64_t)v194, v21);
  }
  uint64_t v76 = v209;
  sub_66444(v64, v209, &qword_3CC690);
  sub_71900(v76, v68, &qword_3CC690);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v214)(v68, 1, v21) == 1)
  {
    sub_662B4(v68, &qword_3CC690);
  }
  else
  {
    uint64_t v77 = *v70;
    uint64_t v78 = v157;
    (*v70)(v157, v68, v21);
    v77(v194, (uint64_t)v78, v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v71 = (char *)sub_5E9D0(0, *((void *)v71 + 2) + 1, 1, (unint64_t)v71);
    }
    unint64_t v80 = *((void *)v71 + 2);
    unint64_t v79 = *((void *)v71 + 3);
    if (v80 >= v79 >> 1) {
      uint64_t v71 = (char *)sub_5E9D0(v79 > 1, v80 + 1, 1, (unint64_t)v71);
    }
    *((void *)v71 + 2) = v80 + 1;
    v77(&v71[((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v80], (uint64_t)v194, v21);
  }
  uint64_t v81 = v202;
  swift_bridgeObjectRelease();
  uint64_t v82 = v164;
  char *v164 = v71;
  LODWORD(v162) = enum case for PageUpdateInstruction.compound<A, B>(_:);
  v81(v82);
  (*(void (**)(char *, void, uint64_t))(v165 + 104))(v167, enum case for ClickData.TargetType.navigate(_:), v166);
  uint64_t v83 = (void (*)(uint64_t, void, uint64_t))v81;
  (*(void (**)(char *, void, uint64_t))(v169 + 104))(v168, enum case for LinkActionType.click(_:), v191);
  uint64_t v84 = v197;
  sub_2DE8C0();
  uint64_t v85 = sub_2DE8E0();
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(char **)(v86 + 56);
  uint64_t v169 = v85;
  uint64_t v168 = v87;
  uint64_t v167 = (char *)(v86 + 56);
  ((void (*)(char *, void, uint64_t))v87)(v84, 0, 1);
  uint64_t v88 = type metadata accessor for Page();
  uint64_t v89 = type metadata accessor for Shelf();
  uint64_t v90 = sub_14FBFC((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
  uint64_t v91 = sub_14FBFC(&qword_3C8148, (void (*)(uint64_t))type metadata accessor for Shelf);
  int v194 = (char *)v90;
  uint64_t v191 = v91;
  sub_2E0540();
  uint64_t v92 = v216;
  uint64_t v93 = v161;
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_2FF410;
  uint64_t v166 = v94;
  uint64_t v95 = v94 + v93;
  v83(v95, enum case for PageUpdateInstruction.startPendingData<A, B>(_:), v21);
  long long v96 = v192;
  v192(v95, 0, 1, v21);
  uint64_t v97 = (uint64_t *)(v95 + v92);
  uint64_t v211 = (char *)v88;
  uint64_t v209 = v89;
  if (v207)
  {
    sub_63BAC(&qword_3CC6A0);
    sub_63BAC(&qword_3CC6A8);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = xmmword_2FEFE0;
    uint64_t v222 = type metadata accessor for DefaultFooterComponentModel(0);
    uint64_t v223 = sub_14FBFC(&qword_3CB350, (void (*)(uint64_t))type metadata accessor for DefaultFooterComponentModel);
    uint64_t v99 = sub_71088(&v221);
    sub_FEAFC((uint64_t)v99);
    uint64_t v100 = v207;
    swift_bridgeObjectRetain();
    sub_2E0A40();
    *uint64_t v97 = v98;
    uint64_t v101 = (void (*)(void *, void, uint64_t))v202;
    ((void (*)(uint64_t *, void, uint64_t))v202)(v97, enum case for PageUpdateInstruction.replaceShelfFooters<A, B>(_:), v21);
    uint64_t v102 = v192;
    v192((uint64_t)v97, 0, 1, v21);
    uint64_t v103 = (void *)(v95 + v163);
    *uint64_t v103 = v193;
    v103[1] = v100;
    v101(v103, enum case for PageUpdateInstruction.removeShelvesAfter<A, B>(_:), v21);
    v102((uint64_t)v103, 0, 1, v21);
  }
  else
  {
    v96(v95 + v92, 1, 1, v21);
    v96(v95 + v163, 1, 1, v21);
  }
  swift_bridgeObjectRetain();
  sub_2E3900();
  int v104 = (char *)_swiftEmptyArrayStorage;
  uint64_t v105 = 3;
  do
  {
    uint64_t v106 = v213;
    sub_66444(v95, v213, &qword_3CC690);
    sub_71900(v106, (uint64_t)v10, &qword_3CC690);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v214)(v10, 1, v21) == 1)
    {
      sub_662B4((uint64_t)v10, &qword_3CC690);
    }
    else
    {
      uint64_t v107 = *v70;
      uint64_t v108 = v208;
      (*v70)(v208, (uint64_t)v10, v21);
      v107(v212, (uint64_t)v108, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v104 = (char *)sub_5E9D0(0, *((void *)v104 + 2) + 1, 1, (unint64_t)v104);
      }
      unint64_t v110 = *((void *)v104 + 2);
      unint64_t v109 = *((void *)v104 + 3);
      if (v110 >= v109 >> 1) {
        int v104 = (char *)sub_5E9D0(v109 > 1, v110 + 1, 1, (unint64_t)v104);
      }
      *((void *)v104 + 2) = v110 + 1;
      v107(&v104[((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80))+ *(void *)(v210 + 72) * v110], (uint64_t)v212, v21);
    }
    v95 += v216;
    --v105;
  }
  while (v105);
  swift_bridgeObjectRelease();
  uint64_t v111 = v171;
  char *v171 = v104;
  ((void (*)(char **, void, uint64_t))v202)(v111, v162, v21);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v168)(v197, 1, 1, v169);
  sub_2E0540();
  uint64_t v112 = v173;
  uint64_t v113 = v172;
  uint64_t v114 = v174;
  (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v172, v205 + *(int *)(v195 + 28), v174);
  int v115 = (*(uint64_t (**)(char *, uint64_t))(v112 + 88))(v113, v114);
  if (v115 != enum case for ContentKind.pdf(_:)
    && v115 != enum case for ContentKind.audiobook(_:)
    && v115 != enum case for ContentKind.regularBook(_:)
    && v115 != enum case for ContentKind.manga(_:)
    && v115 != enum case for ContentKind.unknownBook(_:))
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
  }
  uint64_t v116 = v176;
  uint64_t v117 = v175;
  uint64_t v118 = v178;
  (*(void (**)(char *, void, uint64_t))(v176 + 104))(v175, enum case for Metrics.TargetType.filter(_:), v178);
  uint64_t v119 = v179;
  int v120 = v177;
  uint64_t v121 = v181;
  (*(void (**)(char *, void, uint64_t))(v179 + 104))(v177, enum case for Metrics.ClickActionType.navigate(_:), v181);
  uint64_t v122 = v180;
  sub_2E13A0();
  uint64_t v123 = v200;
  sub_2E1210();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v182 + 8))(v122, v183);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
  uint64_t v124 = v189;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v188, v123, v201);
  long long v225 = v170;
  uint64_t v125 = v199;
  v226[3] = v199;
  unint64_t v126 = sub_D0A80();
  v226[4] = v126;
  uint64_t v127 = sub_71088(v226);
  uint64_t v128 = *(void (**)(uint64_t *, char *, uint64_t))(v198 + 16);
  v128(v127, v206, v125);
  v227[3] = v125;
  v227[4] = v126;
  uint64_t v129 = sub_71088(v227);
  uint64_t v130 = v204;
  v128(v129, v204, v125);
  uint64_t v224 = (char *)_swiftEmptyArrayStorage;
  sub_66444((uint64_t)v226, (uint64_t)&v221, &qword_3C8B80);
  sub_71900((uint64_t)&v221, (uint64_t)&v217, &qword_3C8B80);
  if (v218)
  {
    sub_65CF4(&v217, (uint64_t)&v220);
    sub_65CF4(&v220, (uint64_t)&v217);
    uint64_t v131 = (char *)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v131 = sub_5E9BC(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
      uint64_t v224 = v131;
    }
    unint64_t v133 = *((void *)v131 + 2);
    unint64_t v132 = *((void *)v131 + 3);
    if (v133 >= v132 >> 1) {
      uint64_t v224 = sub_5E9BC((char *)(v132 > 1), v133 + 1, 1, v131);
    }
    uint64_t v134 = v218;
    uint64_t v135 = v219;
    uint64_t v136 = sub_8FA30((uint64_t)&v217, v218);
    __n128 v137 = __chkstk_darwin(v136);
    uint64_t v139 = (char *)&v156 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v140 + 16))(v139, v137);
    sub_14FAB4(v133, (uint64_t)v139, (uint64_t *)&v224, v134, v135);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v217);
    uint64_t v130 = v204;
  }
  else
  {
    sub_662B4((uint64_t)&v217, &qword_3C8B80);
  }
  sub_66444((uint64_t)v227, (uint64_t)&v221, &qword_3C8B80);
  sub_71900((uint64_t)&v221, (uint64_t)&v217, &qword_3C8B80);
  if (v218)
  {
    sub_65CF4(&v217, (uint64_t)&v220);
    sub_65CF4(&v220, (uint64_t)&v217);
    uint64_t v141 = v224;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v141 = sub_5E9BC(0, *((void *)v141 + 2) + 1, 1, v141);
      uint64_t v224 = v141;
    }
    unint64_t v143 = *((void *)v141 + 2);
    unint64_t v142 = *((void *)v141 + 3);
    if (v143 >= v142 >> 1) {
      uint64_t v224 = sub_5E9BC((char *)(v142 > 1), v143 + 1, 1, v141);
    }
    uint64_t v144 = v218;
    uint64_t v145 = v219;
    uint64_t v146 = sub_8FA30((uint64_t)&v217, v218);
    __n128 v147 = __chkstk_darwin(v146);
    int v149 = (char *)&v156 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v150 + 16))(v149, v147);
    sub_14FAB4(v143, (uint64_t)v149, (uint64_t *)&v224, v144, v145);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v217);
  }
  else
  {
    sub_662B4((uint64_t)&v217, &qword_3C8B80);
  }
  sub_63BAC(&qword_3C8B80);
  swift_arrayDestroy();
  uint64_t v151 = sub_2E3A20();
  uint64_t v152 = v190;
  v190[3] = v151;
  v152[4] = (uint64_t)&protocol witness table for CompoundAction;
  sub_71088(v152);
  sub_2E3A10();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v200, v201);
  uint64_t v153 = *(void (**)(char *, uint64_t))(v198 + 8);
  uint64_t v154 = v199;
  v153(v130, v199);
  v153(v206, v154);
  (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v186);
  return sub_150A88((uint64_t)v187, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderComponentModel);
}

uint64_t SeriesRoomListHeaderSegmentedItem.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v68 = a1;
  uint64_t v3 = sub_2DEC50();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  uint64_t v57 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v52 - v6;
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v52 - v9;
  uint64_t v10 = sub_2E12D0();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  __chkstk_darwin(v10);
  uint64_t v69 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E1350();
  unint64_t v60 = *(char **)(v12 - 8);
  uint64_t v61 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2E1260();
  uint64_t v59 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_63BAC(&qword_3CBAE0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SeriesRoomPageIntent();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  uint64_t v26 = *(int *)(v25 + 32);
  uint64_t v64 = v2;
  sub_66310(v2 + v26, (uint64_t)v70);
  sub_63BAC(&qword_3CB170);
  int v27 = swift_dynamicCast();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if (!v27)
  {
    v28(v20, 1, 1, v21);
    sub_662B4((uint64_t)v20, &qword_3CBAE0);
    uint64_t v40 = sub_2E3CC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v68, 1, 1, v40);
  }
  uint64_t v53 = v7;
  uint64_t v54 = v17;
  uint64_t v52 = v15;
  v28(v20, 0, 1, v21);
  sub_150AE8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  uint64_t v29 = *v24;
  uint64_t v30 = v24[1];
  uint64_t v31 = (void (*)(char *, void, uint64_t))*((void *)v60 + 13);
  unint64_t v60 = v14;
  v31(v14, enum case for Metrics.IdType.itsId(_:), v61);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v69, enum case for Metrics.ImpressionType.filter(_:), v63);
  uint64_t v32 = v65;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  uint64_t v34 = v66;
  uint64_t v35 = v67;
  v64 += *(int *)(v25 + 28);
  uint64_t v36 = v33;
  ((void (*)(char *))v33)(v67);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v32 + 88);
  int v38 = v37(v35, v34);
  int v39 = enum case for ContentKind.pdf(_:);
  uint64_t v55 = v29;
  uint64_t v56 = v24;
  uint64_t v58 = v30;
  if (v38 == enum case for ContentKind.pdf(_:))
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = 6710384;
LABEL_12:
    uint64_t v43 = v32;
    uint64_t v44 = v53;
    uint64_t v45 = v64;
    goto LABEL_13;
  }
  if (v38 == enum case for ContentKind.audiobook(_:))
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2E1370();
LABEL_11:
    uint64_t v63 = v42;
    goto LABEL_12;
  }
  if (v38 == enum case for ContentKind.regularBook(_:))
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2E1380();
    goto LABEL_11;
  }
  if (v38 == enum case for ContentKind.manga(_:))
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2E1390();
    goto LABEL_11;
  }
  uint64_t v63 = 0x206E776F6E6B6E55;
  uint64_t v43 = v32;
  uint64_t v45 = v64;
  if (v38 == enum case for ContentKind.unknownBook(_:))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v62 = *(void *)(v32 + 8);
    swift_bridgeObjectRetain();
    ((void (*)(char *, uint64_t))v62)(v67, v34);
    uint64_t v43 = v32;
  }
  uint64_t v44 = v53;
LABEL_13:
  v36(v44, v45, v34);
  int v46 = v37(v44, v34);
  if (v46 == v39
    || v46 == enum case for ContentKind.audiobook(_:)
    || v46 == enum case for ContentKind.regularBook(_:)
    || v46 == enum case for ContentKind.manga(_:))
  {
    uint64_t v47 = v68;
    uint64_t v48 = v52;
    uint64_t v49 = v59;
  }
  else
  {
    uint64_t v47 = v68;
    uint64_t v48 = v52;
    uint64_t v49 = v59;
    if (v46 != enum case for ContentKind.unknownBook(_:))
    {
      v36(v57, v45, v34);
      sub_2E4480();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v34);
    }
  }
  __n128 v50 = v54;
  sub_2E1250();
  sub_2E1230();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
  sub_150A88((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for SeriesRoomPageIntent);
  uint64_t v51 = sub_2E3CC0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v47, 0, 1, v51);
}

uint64_t SeriesRoomListHeaderSegmentedItem.kindForAnalytics.getter()
{
  uint64_t v1 = sub_2DEC50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 28), v1);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v6 == enum case for ContentKind.pdf(_:)) {
    return 6710384;
  }
  if (v6 == enum case for ContentKind.audiobook(_:)) {
    return sub_2E1370();
  }
  if (v6 == enum case for ContentKind.regularBook(_:)) {
    return sub_2E1380();
  }
  if (v6 == enum case for ContentKind.manga(_:)) {
    return sub_2E1390();
  }
  uint64_t v7 = 0x206E776F6E6B6E55;
  if (v6 != enum case for ContentKind.unknownBook(_:)) {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v7;
}

uint64_t SeriesRoomListHeaderSegmentedItem.titleForAnalytics.getter()
{
  uint64_t v1 = sub_2DEC50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v0 + *(int *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() + 28);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v9(v7, v8, v1);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v10 == enum case for ContentKind.pdf(_:)) {
    return 4605008;
  }
  if (v10 == enum case for ContentKind.audiobook(_:)) {
    return 0x6F6F626F69647541;
  }
  if (v10 == enum case for ContentKind.regularBook(_:)) {
    return 0x736B6F6F42;
  }
  if (v10 == enum case for ContentKind.manga(_:)) {
    return 0x61676E614DLL;
  }
  if (v10 == enum case for ContentKind.unknownBook(_:)) {
    return 0x206E776F6E6B6E55;
  }
  v9(v4, v8, v1);
  uint64_t v11 = sub_2E4480();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return v11;
}

unint64_t SeriesRoomListHeaderSegmentedItem.id.getter()
{
  uint64_t v1 = 0xD000000000000010;
  uint64_t v2 = sub_2DEC50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = v0 + *(int *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() + 28);
  int v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v11 != enum case for ContentKind.pdf(_:))
  {
    if (v11 == enum case for ContentKind.audiobook(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 == enum case for ContentKind.regularBook(_:))
    {
      return 0xD000000000000011;
    }
    else if (v11 == enum case for ContentKind.manga(_:))
    {
      return 0xD000000000000012;
    }
    else if (v11 == enum case for ContentKind.unknownBook(_:))
    {
      return 0xD000000000000018;
    }
    else
    {
      v10(v5, v9, v2);
      uint64_t v1 = sub_2E4480();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }
  return v1;
}

uint64_t ContentKind.segmentedItemKindForAnalytics.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2DEC50();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for ContentKind.pdf(_:)) {
    return 6710384;
  }
  if (v7 == enum case for ContentKind.audiobook(_:)) {
    return sub_2E1370();
  }
  if (v7 == enum case for ContentKind.regularBook(_:)) {
    return sub_2E1380();
  }
  if (v7 == enum case for ContentKind.manga(_:)) {
    return sub_2E1390();
  }
  uint64_t v8 = 0x206E776F6E6B6E55;
  if (v7 != enum case for ContentKind.unknownBook(_:)) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v8;
}

uint64_t SeriesRoomListHeaderSegmentedItem.localizableTitle.getter()
{
  uint64_t v1 = sub_2E3FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  __n128 v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E3E10();
  uint64_t v16 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2DEC50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v0 + *(int *)(v12 + 28), v8);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v13 == enum case for ContentKind.pdf(_:)) {
    return sub_2DF5C0();
  }
  if (v13 == enum case for ContentKind.audiobook(_:)
    || v13 == enum case for ContentKind.regularBook(_:)
    || v13 == enum case for ContentKind.manga(_:)
    || v13 == enum case for ContentKind.unknownBook(_:))
  {
    sub_2E3E00();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizerLookupStrategy.default(_:), v1);
    sub_2DF590();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  else
  {
    sub_2DF5C0();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_14D468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_66444(v2 + *(int *)(a1 + 20), a2, &qword_3C97E8);
}

uint64_t sub_14D498(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

unint64_t sub_14D4A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SeriesRoomListHeaderSegmentedItem.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_14D4D0(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SeriesRoomListHeaderSegmentedItem() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_18B6CC(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_14D57C(v5);
  *a1 = v3;
}

void sub_14D57C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v200 = sub_2DEC50();
  uint64_t v4 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v189 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int v188 = (char *)&v165 - v7;
  __chkstk_darwin(v8);
  uint64_t v177 = (char *)&v165 - v9;
  __chkstk_darwin(v10);
  uint64_t v176 = (char *)&v165 - v11;
  __chkstk_darwin(v12);
  uint64_t v169 = (char *)&v165 - v13;
  __chkstk_darwin(v14);
  uint64_t v168 = (char *)&v165 - v15;
  uint64_t v193 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  uint64_t v16 = *(void *)(v193 - 8);
  __chkstk_darwin(v193);
  uint64_t v175 = (uint64_t)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v194 = (uint64_t)&v165 - v19;
  __chkstk_darwin(v20);
  uint64_t v201 = (uint64_t)&v165 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v165 - v23;
  __chkstk_darwin(v25);
  uint64_t v183 = (uint64_t)&v165 - v26;
  __chkstk_darwin(v27);
  uint64_t v179 = (uint64_t)&v165 - v28;
  __chkstk_darwin(v29);
  uint64_t v171 = (uint64_t)&v165 - v30;
  __chkstk_darwin(v31);
  uint64_t v170 = (uint64_t)&v165 - v32;
  uint64_t v196 = a1;
  Swift::Int v33 = a1[1];
  Swift::Int v34 = sub_2E4FB0(v33);
  if (v34 >= v33)
  {
    if (v33 < 0) {
      goto LABEL_203;
    }
    if (v33) {
      sub_14E7C4(0, v33, 1, v196);
    }
    return;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_211;
  }
  uint64_t v186 = v24;
  Swift::Int v166 = v34;
  uint64_t v36 = v16;
  if (v33 < 2)
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
    unint64_t v180 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    if (v33 != 1)
    {
      unint64_t v43 = _swiftEmptyArrayStorage[2];
      uint64_t v42 = (char *)_swiftEmptyArrayStorage;
LABEL_168:
      uint64_t v165 = v40;
      if (v43 >= 2)
      {
        uint64_t v158 = v36;
        uint64_t v159 = *v196;
        do
        {
          unint64_t v160 = v43 - 2;
          if (v43 < 2) {
            goto LABEL_198;
          }
          if (!v159) {
            goto LABEL_210;
          }
          uint64_t v161 = *(void *)&v42[16 * v160 + 32];
          uint64_t v162 = *(void *)&v42[16 * v43 + 24];
          sub_14ED10(v159 + *(void *)(v158 + 72) * v161, v159 + *(void *)(v158 + 72) * *(void *)&v42[16 * v43 + 16], v159 + *(void *)(v158 + 72) * v162, v180);
          if (v2) {
            break;
          }
          if (v162 < v161) {
            goto LABEL_199;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v42 = sub_14FA64((uint64_t)v42);
          }
          if (v160 >= *((void *)v42 + 2)) {
            goto LABEL_200;
          }
          uint64_t v163 = &v42[16 * v160 + 32];
          *(void *)uint64_t v163 = v161;
          *((void *)v163 + 1) = v162;
          unint64_t v164 = *((void *)v42 + 2);
          if (v43 > v164) {
            goto LABEL_201;
          }
          memmove(&v42[16 * v43 + 16], &v42[16 * v43 + 32], 16 * (v164 - v43));
          *((void *)v42 + 2) = v164 - 1;
          unint64_t v43 = v164 - 1;
        }
        while (v164 > 2);
      }
LABEL_179:
      swift_bridgeObjectRelease();
      v165[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v165 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v37 = v35 >> 1;
    uint64_t v38 = sub_2E4690();
    *(void *)(v38 + 16) = v37;
    unint64_t v39 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v165 = (void *)v38;
    unint64_t v180 = v38 + v39;
  }
  Swift::Int v41 = 0;
  uint64_t v198 = (uint64_t (**)(char *, uint64_t))(v4 + 88);
  uint64_t v199 = (uint64_t *)(v4 + 16);
  int v197 = enum case for ContentKind.pdf(_:);
  int v191 = enum case for ContentKind.audiobook(_:);
  int v185 = enum case for ContentKind.regularBook(_:);
  int v184 = enum case for ContentKind.manga(_:);
  int v181 = enum case for ContentKind.unknownBook(_:);
  uint64_t v174 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v42 = (char *)_swiftEmptyArrayStorage;
  uint64_t v182 = v16;
LABEL_16:
  Swift::Int v44 = v41 + 1;
  Swift::Int v178 = v41;
  if (v41 + 1 >= v33)
  {
    Swift::Int v54 = v41 + 1;
    goto LABEL_111;
  }
  uint64_t v45 = *v196;
  Swift::Int v46 = *(void *)(v36 + 72);
  uint64_t v47 = v170;
  sub_14FB4C(*v196 + v46 * v44, v170, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  uint64_t v172 = v45;
  Swift::Int v192 = v46;
  sub_14FB4C(v45 + v46 * v41, v171, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  uint64_t v48 = v47 + *(int *)(v193 + 28);
  uint64_t v49 = v200;
  __n128 v50 = v168;
  uint64_t v195 = *v199;
  ((void (*)(char *, uint64_t, uint64_t))v195)(v168, v48, v200);
  uint64_t v51 = *v198;
  int v52 = (*v198)(v50, v49);
  if (v52 == v197) {
    goto LABEL_18;
  }
  if (v52 == v191)
  {
    uint64_t v53 = 1;
    goto LABEL_22;
  }
  if (v52 != v185)
  {
    if (v52 == v184)
    {
      uint64_t v53 = 2;
      goto LABEL_22;
    }
    if (v52 != v181)
    {
      (*v174)(v168, v200);
LABEL_18:
      uint64_t v53 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_22:
      unint64_t v190 = v53;
      goto LABEL_23;
    }
  }
  unint64_t v190 = 0;
LABEL_23:
  uint64_t v55 = v169;
  uint64_t v56 = v200;
  ((void (*)(char *, uint64_t, uint64_t))v195)(v169, v171 + *(int *)(v193 + 28), v200);
  int v57 = v51(v55, v56);
  if (v57 == v197)
  {
LABEL_24:
    uint64_t v58 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_27:
    unint64_t v187 = v58;
    goto LABEL_28;
  }
  if (v57 == v191)
  {
    uint64_t v58 = 1;
    goto LABEL_27;
  }
  if (v57 != v185)
  {
    if (v57 == v184)
    {
      uint64_t v58 = 2;
      goto LABEL_27;
    }
    if (v57 != v181)
    {
      (*v174)(v169, v200);
      goto LABEL_24;
    }
  }
  unint64_t v187 = 0;
LABEL_28:
  sub_150A88(v171, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  sub_150A88(v170, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
  Swift::Int v54 = v41 + 2;
  if (v41 + 2 < v33)
  {
    uint64_t v167 = v42;
    Swift::Int v173 = v192 * v44;
    uint64_t v59 = v172;
    Swift::Int v60 = v192 * v54;
    while (1)
    {
      Swift::Int v61 = v33;
      Swift::Int v62 = v54;
      uint64_t v63 = v179;
      sub_14FB4C(v59 + v60, v179, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_14FB4C(v59 + v173, v183, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      uint64_t v64 = v63 + *(int *)(v193 + 28);
      uint64_t v65 = v176;
      uint64_t v66 = v200;
      ((void (*)(char *, uint64_t, uint64_t))v195)(v176, v64, v200);
      int v67 = v51(v65, v66);
      if (v67 == v197) {
        goto LABEL_31;
      }
      if (v67 == v191)
      {
        unint64_t v68 = 1;
        goto LABEL_38;
      }
      if (v67 == v185) {
        goto LABEL_35;
      }
      if (v67 != v184) {
        break;
      }
      unint64_t v68 = 2;
LABEL_38:
      uint64_t v69 = v177;
      uint64_t v70 = v200;
      ((void (*)(char *, uint64_t, uint64_t))v195)(v177, v183 + *(int *)(v193 + 28), v200);
      int v71 = v51(v69, v70);
      if (v71 == v197) {
        goto LABEL_39;
      }
      if (v71 == v191)
      {
        unint64_t v72 = 1;
        goto LABEL_46;
      }
      if (v71 == v185) {
        goto LABEL_43;
      }
      if (v71 != v184)
      {
        if (v71 != v181)
        {
          (*v174)(v177, v200);
LABEL_39:
          unint64_t v72 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_46;
        }
LABEL_43:
        unint64_t v72 = 0;
        goto LABEL_46;
      }
      unint64_t v72 = 2;
LABEL_46:
      int v73 = v190 < v187;
      int v74 = v68 >= v72;
      sub_150A88(v183, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_150A88(v179, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      if (v73 == v74)
      {
        uint64_t v42 = v167;
        Swift::Int v54 = v62;
        Swift::Int v41 = v178;
        Swift::Int v33 = v61;
        goto LABEL_58;
      }
      Swift::Int v54 = v62 + 1;
      v59 += v192;
      Swift::Int v33 = v61;
      if (v61 == v62 + 1)
      {
        Swift::Int v54 = v61;
        uint64_t v42 = v167;
        Swift::Int v41 = v178;
        goto LABEL_58;
      }
    }
    if (v67 != v181)
    {
      (*v174)(v176, v200);
LABEL_31:
      unint64_t v68 = 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_38;
    }
LABEL_35:
    unint64_t v68 = 0;
    goto LABEL_38;
  }
LABEL_58:
  if (v190 >= v187) {
    goto LABEL_71;
  }
  if (v54 < v41) {
    goto LABEL_204;
  }
  if (v41 >= v54)
  {
LABEL_71:
    uint64_t v83 = v182;
    if (v54 >= v33) {
      goto LABEL_111;
    }
  }
  else
  {
    unint64_t v190 = v33;
    uint64_t v167 = v42;
    uint64_t v75 = 0;
    uint64_t v76 = v192 * (v54 - 1);
    Swift::Int v77 = v54 * v192;
    uint64_t v78 = v41 * v192;
    do
    {
      if (v41 != v54 + v75 - 1)
      {
        Swift::Int v80 = v54;
        uint64_t v81 = v172;
        if (!v172) {
          goto LABEL_209;
        }
        unint64_t v82 = v172 + v78;
        uint64_t v195 = v172 + v76;
        sub_150AE8(v172 + v78, v175, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        if (v78 < v76 || v82 >= v81 + v77)
        {
          uint64_t v79 = v195;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v79 = v195;
          if (v78 != v76) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_150AE8(v175, v79, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        Swift::Int v54 = v80;
      }
      ++v41;
      --v75;
      v76 -= v192;
      v77 -= v192;
      v78 += v192;
    }
    while (v41 < v54 + v75);
    uint64_t v42 = v167;
    uint64_t v83 = v182;
    Swift::Int v41 = v178;
    Swift::Int v33 = v190;
    if (v54 >= (uint64_t)v190) {
      goto LABEL_111;
    }
  }
  if (__OFSUB__(v54, v41)) {
    goto LABEL_202;
  }
  if (v54 - v41 >= v166) {
    goto LABEL_111;
  }
  if (__OFADD__(v41, v166)) {
    goto LABEL_205;
  }
  if (v41 + v166 >= v33) {
    Swift::Int v84 = v33;
  }
  else {
    Swift::Int v84 = v41 + v166;
  }
  if (v84 >= v41)
  {
    if (v54 == v84) {
      goto LABEL_111;
    }
    uint64_t v167 = v42;
    uint64_t v172 = v2;
    unint64_t v85 = *(void *)(v83 + 72);
    uint64_t v86 = v85 * (v54 - 1);
    unint64_t v187 = v85;
    uint64_t v195 = v54 * v85;
    uint64_t v87 = v193;
    uint64_t v88 = (uint64_t)v186;
    Swift::Int v173 = v84;
LABEL_85:
    uint64_t v90 = 0;
    Swift::Int v192 = v54;
    unint64_t v190 = v86;
    while (1)
    {
      uint64_t v91 = *v196;
      sub_14FB4C(v195 + v90 + *v196, v88, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_14FB4C(v86 + v90 + v91, v201, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      uint64_t v92 = v88 + *(int *)(v87 + 28);
      uint64_t v93 = v200;
      uint64_t v94 = (void (*)(char *, uint64_t, uint64_t))*v199;
      uint64_t v95 = v188;
      ((void (*)(char *, uint64_t, uint64_t))*v199)(v188, v92, v200);
      long long v96 = *v198;
      int v97 = (*v198)(v95, v93);
      if (v97 == v197) {
        goto LABEL_88;
      }
      if (v97 == v191)
      {
        unint64_t v98 = 1;
        goto LABEL_95;
      }
      if (v97 == v185) {
        goto LABEL_92;
      }
      if (v97 != v184) {
        break;
      }
      unint64_t v98 = 2;
LABEL_95:
      uint64_t v99 = v201 + *(int *)(v87 + 28);
      uint64_t v100 = v189;
      uint64_t v101 = v200;
      v94(v189, v99, v200);
      int v102 = v96(v100, v101);
      if (v102 == v197)
      {
        unint64_t v103 = 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v87 = v193;
        uint64_t v88 = (uint64_t)v186;
        goto LABEL_107;
      }
      uint64_t v87 = v193;
      uint64_t v88 = (uint64_t)v186;
      if (v102 == v191)
      {
        unint64_t v103 = 1;
        goto LABEL_107;
      }
      if (v102 == v185)
      {
LABEL_100:
        unint64_t v103 = 0;
        goto LABEL_107;
      }
      if (v102 == v184)
      {
        unint64_t v103 = 2;
      }
      else
      {
        if (v102 == v181) {
          goto LABEL_100;
        }
        (*v174)(v189, v200);
        unint64_t v103 = 0x7FFFFFFFFFFFFFFFLL;
      }
LABEL_107:
      sub_150A88(v201, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_150A88(v88, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      if (v98 >= v103)
      {
        Swift::Int v89 = v192;
        uint64_t v86 = v190;
LABEL_84:
        Swift::Int v54 = v89 + 1;
        v86 += v187;
        v195 += v187;
        Swift::Int v41 = v178;
        if (v54 != v173) {
          goto LABEL_85;
        }
        Swift::Int v54 = v173;
        uint64_t v2 = v172;
        uint64_t v42 = v167;
LABEL_111:
        if (v54 < v41) {
          goto LABEL_197;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v192 = v54;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v42 = sub_14F73C(0, *((void *)v42 + 2) + 1, 1, v42);
        }
        unint64_t v108 = *((void *)v42 + 2);
        unint64_t v107 = *((void *)v42 + 3);
        unint64_t v43 = v108 + 1;
        if (v108 >= v107 >> 1) {
          uint64_t v42 = sub_14F73C((char *)(v107 > 1), v108 + 1, 1, v42);
        }
        *((void *)v42 + 2) = v43;
        unint64_t v109 = v42 + 32;
        unint64_t v110 = &v42[16 * v108 + 32];
        Swift::Int v111 = v192;
        *(void *)unint64_t v110 = v41;
        *((void *)v110 + 1) = v111;
        if (v108)
        {
          while (2)
          {
            unint64_t v112 = v43 - 1;
            if (v43 >= 4)
            {
              uint64_t v117 = &v109[16 * v43];
              uint64_t v118 = *((void *)v117 - 8);
              uint64_t v119 = *((void *)v117 - 7);
              BOOL v123 = __OFSUB__(v119, v118);
              uint64_t v120 = v119 - v118;
              if (v123) {
                goto LABEL_186;
              }
              uint64_t v122 = *((void *)v117 - 6);
              uint64_t v121 = *((void *)v117 - 5);
              BOOL v123 = __OFSUB__(v121, v122);
              uint64_t v115 = v121 - v122;
              char v116 = v123;
              if (v123) {
                goto LABEL_187;
              }
              unint64_t v124 = v43 - 2;
              uint64_t v125 = &v109[16 * v43 - 32];
              uint64_t v127 = *(void *)v125;
              uint64_t v126 = *((void *)v125 + 1);
              BOOL v123 = __OFSUB__(v126, v127);
              uint64_t v128 = v126 - v127;
              if (v123) {
                goto LABEL_189;
              }
              BOOL v123 = __OFADD__(v115, v128);
              uint64_t v129 = v115 + v128;
              if (v123) {
                goto LABEL_192;
              }
              if (v129 >= v120)
              {
                __n128 v147 = &v109[16 * v112];
                uint64_t v149 = *(void *)v147;
                uint64_t v148 = *((void *)v147 + 1);
                BOOL v123 = __OFSUB__(v148, v149);
                uint64_t v150 = v148 - v149;
                if (v123) {
                  goto LABEL_196;
                }
                BOOL v140 = v115 < v150;
              }
              else
              {
LABEL_130:
                if (v116) {
                  goto LABEL_188;
                }
                unint64_t v124 = v43 - 2;
                uint64_t v130 = &v109[16 * v43 - 32];
                uint64_t v132 = *(void *)v130;
                uint64_t v131 = *((void *)v130 + 1);
                BOOL v133 = __OFSUB__(v131, v132);
                uint64_t v134 = v131 - v132;
                char v135 = v133;
                if (v133) {
                  goto LABEL_191;
                }
                uint64_t v136 = &v109[16 * v112];
                uint64_t v138 = *(void *)v136;
                uint64_t v137 = *((void *)v136 + 1);
                BOOL v123 = __OFSUB__(v137, v138);
                uint64_t v139 = v137 - v138;
                if (v123) {
                  goto LABEL_194;
                }
                if (__OFADD__(v134, v139)) {
                  goto LABEL_195;
                }
                if (v134 + v139 < v115) {
                  goto LABEL_142;
                }
                BOOL v140 = v115 < v139;
              }
              if (v140) {
                unint64_t v112 = v124;
              }
            }
            else
            {
              if (v43 == 3)
              {
                uint64_t v114 = *((void *)v42 + 4);
                uint64_t v113 = *((void *)v42 + 5);
                BOOL v123 = __OFSUB__(v113, v114);
                uint64_t v115 = v113 - v114;
                char v116 = v123;
                goto LABEL_130;
              }
              uint64_t v141 = *((void *)v42 + 4);
              uint64_t v142 = *((void *)v42 + 5);
              BOOL v123 = __OFSUB__(v142, v141);
              uint64_t v134 = v142 - v141;
              char v135 = v123;
LABEL_142:
              if (v135) {
                goto LABEL_190;
              }
              unint64_t v143 = &v109[16 * v112];
              uint64_t v145 = *(void *)v143;
              uint64_t v144 = *((void *)v143 + 1);
              BOOL v123 = __OFSUB__(v144, v145);
              uint64_t v146 = v144 - v145;
              if (v123) {
                goto LABEL_193;
              }
              if (v146 < v134) {
                goto LABEL_15;
              }
            }
            unint64_t v151 = v112 - 1;
            if (v112 - 1 >= v43)
            {
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
              goto LABEL_206;
            }
            if (!*v196) {
              goto LABEL_208;
            }
            uint64_t v152 = v42;
            uint64_t v153 = &v109[16 * v151];
            uint64_t v154 = *(void *)v153;
            uint64_t v155 = &v109[16 * v112];
            uint64_t v156 = *((void *)v155 + 1);
            sub_14ED10(*v196 + *(void *)(v182 + 72) * *(void *)v153, *v196 + *(void *)(v182 + 72) * *(void *)v155, *v196 + *(void *)(v182 + 72) * v156, v180);
            if (v2) {
              goto LABEL_179;
            }
            if (v156 < v154) {
              goto LABEL_183;
            }
            if (v112 > *((void *)v152 + 2)) {
              goto LABEL_184;
            }
            *(void *)uint64_t v153 = v154;
            *(void *)&v109[16 * v151 + 8] = v156;
            unint64_t v157 = *((void *)v152 + 2);
            if (v112 >= v157) {
              goto LABEL_185;
            }
            uint64_t v42 = v152;
            unint64_t v43 = v157 - 1;
            memmove(&v109[16 * v112], v155 + 16, 16 * (v157 - 1 - v112));
            *((void *)v152 + 2) = v157 - 1;
            if (v157 <= 2) {
              goto LABEL_15;
            }
            continue;
          }
        }
        unint64_t v43 = 1;
LABEL_15:
        Swift::Int v33 = v196[1];
        Swift::Int v41 = v192;
        uint64_t v36 = v182;
        if (v192 >= v33)
        {
          uint64_t v40 = v165;
          goto LABEL_168;
        }
        goto LABEL_16;
      }
      uint64_t v104 = *v196;
      uint64_t v86 = v190;
      if (!*v196) {
        goto LABEL_207;
      }
      uint64_t v105 = v104 + v190 + v90;
      sub_150AE8(v104 + v195 + v90, v194, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      swift_arrayInitWithTakeFrontToBack();
      sub_150AE8(v194, v105, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      v90 -= v187;
      ++v41;
      Swift::Int v89 = v192;
      if (v192 == v41) {
        goto LABEL_84;
      }
    }
    if (v97 != v181)
    {
      (*v174)(v188, v200);
LABEL_88:
      unint64_t v98 = 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_95;
    }
LABEL_92:
    unint64_t v98 = 0;
    goto LABEL_95;
  }
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  sub_2E4DB0();
  __break(1u);
}

void sub_14E7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v59 = a4;
  uint64_t v44 = a1;
  uint64_t v63 = sub_2DEC50();
  uint64_t v6 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  int v52 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v41 - v9;
  uint64_t v10 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  __chkstk_darwin(v10);
  uint64_t v56 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v55 = a3;
  uint64_t v43 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    Swift::Int v62 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    Swift::Int v61 = (uint64_t (**)(char *, uint64_t))(v6 + 88);
    int v60 = enum case for ContentKind.pdf(_:);
    int v49 = enum case for ContentKind.audiobook(_:);
    int v47 = enum case for ContentKind.regularBook(_:);
    int v45 = enum case for ContentKind.unknownBook(_:);
    int v46 = enum case for ContentKind.manga(_:);
    uint64_t v42 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v20 = v19 * (v55 - 1);
    uint64_t v50 = v19;
    uint64_t v21 = v19 * v55;
    uint64_t v48 = (char *)&v41 - v17;
LABEL_5:
    uint64_t v22 = 0;
    uint64_t v23 = v44;
    uint64_t v53 = v20;
    uint64_t v54 = v21;
    while (1)
    {
      uint64_t v24 = *v59;
      uint64_t v58 = v21 + v22;
      sub_14FB4C(v21 + v22 + v24, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      uint64_t v57 = v20 + v22;
      sub_14FB4C(v20 + v22 + v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      uint64_t v25 = *v62;
      uint64_t v26 = v51;
      uint64_t v27 = v63;
      (*v62)(v51, &v18[*(int *)(v10 + 28)], v63);
      uint64_t v28 = *v61;
      int v29 = (*v61)(v26, v27);
      if (v29 != v60)
      {
        if (v29 == v49)
        {
          unint64_t v30 = 1;
          goto LABEL_16;
        }
        if (v29 == v47) {
          goto LABEL_15;
        }
        if (v29 == v46)
        {
          unint64_t v30 = 2;
          goto LABEL_16;
        }
        if (v29 == v45)
        {
LABEL_15:
          unint64_t v30 = 0;
          goto LABEL_16;
        }
        (*v42)(v51, v63);
      }
      unint64_t v30 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_16:
      uint64_t v31 = v10;
      uint64_t v32 = v14;
      Swift::Int v33 = &v14[*(int *)(v10 + 28)];
      Swift::Int v34 = v52;
      uint64_t v35 = v63;
      v25(v52, v33, v63);
      int v36 = v28(v34, v35);
      if (v36 == v60)
      {
        unint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v10 = v31;
        uint64_t v14 = v32;
LABEL_20:
        uint64_t v18 = v48;
        uint64_t v20 = v53;
        goto LABEL_21;
      }
      uint64_t v10 = v31;
      uint64_t v14 = v32;
      if (v36 == v49)
      {
        unint64_t v37 = 1;
        goto LABEL_20;
      }
      uint64_t v18 = v48;
      uint64_t v20 = v53;
      if (v36 == v47) {
        goto LABEL_28;
      }
      if (v36 == v46)
      {
        unint64_t v37 = 2;
        goto LABEL_21;
      }
      if (v36 == v45)
      {
LABEL_28:
        unint64_t v37 = 0;
      }
      else
      {
        (*v42)(v52, v63);
        unint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
      }
LABEL_21:
      sub_150A88((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_150A88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      BOOL v38 = v30 >= v37;
      uint64_t v21 = v54;
      if (v38) {
        goto LABEL_4;
      }
      uint64_t v39 = *v59;
      if (!*v59)
      {
        __break(1u);
        return;
      }
      uint64_t v40 = v39 + v20 + v22;
      sub_150AE8(v39 + v54 + v22, v56, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      swift_arrayInitWithTakeFrontToBack();
      sub_150AE8(v56, v40, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      v22 -= v50;
      if (v55 == ++v23)
      {
LABEL_4:
        v20 += v50;
        v21 += v50;
        if (++v55 == v43) {
          return;
        }
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_14ED10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v84 = sub_2DEC50();
  uint64_t v8 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::Int v77 = (char *)&v70 - v11;
  __chkstk_darwin(v12);
  uint64_t v79 = (char *)&v70 - v13;
  __chkstk_darwin(v14);
  uint64_t v76 = (char *)&v70 - v15;
  uint64_t v85 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v80 = (uint64_t)&v70 - v18;
  __chkstk_darwin(v19);
  unint64_t v82 = (void (**)(char *, char *, uint64_t))((char *)&v70 - v20);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v70 - v22;
  uint64_t v81 = *(void *)(v24 + 72);
  if (!v81)
  {
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  if (a2 - a1 == 0x8000000000000000 && v81 == -1) {
    goto LABEL_102;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v81 == -1) {
    goto LABEL_103;
  }
  uint64_t v26 = (uint64_t)(a2 - a1) / v81;
  unint64_t v88 = a1;
  unint64_t v87 = a4;
  uint64_t v27 = v25 / v81;
  if (v26 >= v25 / v81)
  {
    if (v27 < 0) {
      goto LABEL_104;
    }
    uint64_t v29 = v27 * v81;
    if (a4 < a2 || a2 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v48 = a4 + v29;
    unint64_t v86 = a4 + v29;
    unint64_t v88 = a2;
    if (v29 < 1 || a1 >= a2)
    {
LABEL_100:
      sub_14F868(&v88, &v87, (uint64_t *)&v86, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      return 1;
    }
    uint64_t v50 = -v81;
    uint64_t v81 = v8 + 88;
    unint64_t v82 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    LODWORD(v79) = enum case for ContentKind.pdf(_:);
    int v74 = enum case for ContentKind.audiobook(_:);
    int v73 = enum case for ContentKind.regularBook(_:);
    LODWORD(v72) = enum case for ContentKind.manga(_:);
    int v71 = enum case for ContentKind.unknownBook(_:);
    uint64_t v70 = (void (**)(char *, uint64_t))(v8 + 8);
    unint64_t v75 = a4;
    uint64_t v76 = (char *)a1;
    while (1)
    {
      unint64_t v51 = a3;
      uint64_t v52 = v80;
      sub_14FB4C(v48 + v50, v80, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      unint64_t v53 = a2 + v50;
      sub_14FB4C(a2 + v50, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      uint64_t v54 = v52 + *(int *)(v85 + 28);
      uint64_t v55 = *v82;
      uint64_t v56 = v77;
      uint64_t v57 = v84;
      (*v82)(v77, (char *)v54, v84);
      uint64_t v58 = *(uint64_t (**)(char *, uint64_t))v81;
      int v59 = (*(uint64_t (**)(char *, uint64_t))v81)(v56, v57);
      if (v59 == v79) {
        goto LABEL_66;
      }
      if (v59 == v74)
      {
        unint64_t v60 = 1;
        goto LABEL_73;
      }
      if (v59 == v73) {
        goto LABEL_70;
      }
      if (v59 != v72) {
        break;
      }
      unint64_t v60 = 2;
LABEL_73:
      uint64_t v61 = v84;
      Swift::Int v62 = v78;
      v55(v78, &v83[*(int *)(v85 + 28)], v84);
      int v63 = v58(v62, v61);
      if (v63 == v79)
      {
        unint64_t v64 = 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v65 = v75;
      }
      else
      {
        unint64_t v65 = v75;
        if (v63 == v74)
        {
          unint64_t v64 = 1;
        }
        else
        {
          if (v63 != v73)
          {
            if (v63 == v72)
            {
              unint64_t v64 = 2;
              goto LABEL_85;
            }
            if (v63 != v71)
            {
              (*v70)(v78, v84);
              unint64_t v64 = 0x7FFFFFFFFFFFFFFFLL;
              goto LABEL_85;
            }
          }
          unint64_t v64 = 0;
        }
      }
LABEL_85:
      unint64_t v66 = v51 + v50;
      sub_150A88((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      sub_150A88(v80, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
      if (v60 >= v64)
      {
        unint64_t v68 = v86;
        v86 += v50;
        int v67 = v76;
        if (v51 < v68 || v66 >= v68)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v51 != v68)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v53 = a2;
      }
      else
      {
        int v67 = v76;
        if (v51 < a2 || v66 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v51 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v88 += v50;
      }
      unint64_t v48 = v86;
      if (v86 > v65)
      {
        a2 = v53;
        a3 = v51 + v50;
        if (v53 > (unint64_t)v67) {
          continue;
        }
      }
      goto LABEL_100;
    }
    if (v59 != v71)
    {
      (*v70)(v77, v84);
LABEL_66:
      unint64_t v60 = 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_73;
    }
LABEL_70:
    unint64_t v60 = 0;
    goto LABEL_73;
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = v26 * v81;
    if (a4 < a1 || a1 + v28 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v78 = (char *)(a4 + v28);
    unint64_t v86 = a4 + v28;
    if (v28 >= 1 && a2 < a3)
    {
      uint64_t v83 = (char *)(v8 + 16);
      uint64_t v31 = (uint64_t (**)(char *, uint64_t))(v8 + 88);
      LODWORD(v80) = enum case for ContentKind.pdf(_:);
      LODWORD(v77) = enum case for ContentKind.audiobook(_:);
      int v74 = enum case for ContentKind.manga(_:);
      LODWORD(v75) = enum case for ContentKind.regularBook(_:);
      int v73 = enum case for ContentKind.unknownBook(_:);
      unint64_t v72 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v32 = a3;
        sub_14FB4C(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        sub_14FB4C(a4, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        uint64_t v33 = v84;
        Swift::Int v34 = v23;
        uint64_t v35 = &v23[*(int *)(v85 + 28)];
        int v36 = *(void (**)(char *, char *, uint64_t))v83;
        unint64_t v37 = v76;
        (*(void (**)(char *, char *, uint64_t))v83)(v76, v35, v84);
        BOOL v38 = *v31;
        int v39 = (*v31)(v37, v33);
        if (v39 == v80) {
          goto LABEL_24;
        }
        if (v39 == v77)
        {
          unint64_t v40 = 1;
          goto LABEL_31;
        }
        if (v39 == v75) {
          goto LABEL_28;
        }
        if (v39 != v74) {
          break;
        }
        unint64_t v40 = 2;
LABEL_31:
        uint64_t v41 = v84;
        uint64_t v42 = v79;
        v36(v79, (char *)v82 + *(int *)(v85 + 28), v84);
        int v43 = v38(v42, v41);
        if (v43 == v80)
        {
          unint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v23 = v34;
        }
        else
        {
          uint64_t v23 = v34;
          if (v43 == v77)
          {
            unint64_t v44 = 1;
          }
          else
          {
            if (v43 != v75)
            {
              if (v43 == v74)
              {
                unint64_t v44 = 2;
                goto LABEL_43;
              }
              if (v43 != v73)
              {
                (*v72)(v79, v84);
                unint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
                goto LABEL_43;
              }
            }
            unint64_t v44 = 0;
          }
        }
LABEL_43:
        sub_150A88((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        sub_150A88((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
        unint64_t v45 = v88;
        if (v40 >= v44)
        {
          unint64_t v47 = v87 + v81;
          a3 = v32;
          if (v88 < v87 || v88 >= v47)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 != v87)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v87 = v47;
          unint64_t v46 = a2;
        }
        else
        {
          unint64_t v46 = a2 + v81;
          a3 = v32;
          if (v88 < a2 || v88 >= v46)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 == a2)
          {
            unint64_t v45 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v88 = v45 + v81;
        a4 = v87;
        if (v87 < (unint64_t)v78)
        {
          a2 = v46;
          if (v46 < a3) {
            continue;
          }
        }
        goto LABEL_100;
      }
      if (v39 != v73)
      {
        (*v72)(v76, v84);
LABEL_24:
        unint64_t v40 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_31;
      }
LABEL_28:
      unint64_t v40 = 0;
      goto LABEL_31;
    }
    goto LABEL_100;
  }
LABEL_104:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

char *sub_14F73C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_63BAC(qword_3CC760);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_14F838(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_14F868(a1, a2, a3, type metadata accessor for GenreHighlight);
}

uint64_t sub_14F850(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_14F868(a1, a2, a3, type metadata accessor for ReadingInsightsDataProvider.MonthEntry);
}

uint64_t sub_14F868(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_2E4E20();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_14F9AC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_2E4E20();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_14FA64(uint64_t a1)
{
  return sub_14F73C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_14FA78(void *a1)
{
  return sub_2A5144(0, a1[2], 0, a1);
}

uint64_t sub_14FA8C(void *a1)
{
  return sub_2A5AF8(0, a1[2], 0, a1);
}

uint64_t sub_14FAA0(uint64_t a1)
{
  return sub_2A5FB0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_14FAB4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_71088((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_65CF4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_14FB4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_14FBB4()
{
  return sub_14FBFC(&qword_3CC6B0, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
}

uint64_t sub_14FBFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_14FC44()
{
  return &protocol witness table for String;
}

void *initializeBufferWithCopyOfBuffer for SeriesRoomListHeaderSegmentedItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2DF5D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_63BAC(&qword_3C97E8);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_2DEC50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return v4;
}

uint64_t destroy for SeriesRoomListHeaderSegmentedItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_2DF5D0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_2DEC50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[8];

  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v9);
}

void *initializeWithCopy for SeriesRoomListHeaderSegmentedItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_2DEC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[8];
  long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

void *assignWithCopy for SeriesRoomListHeaderSegmentedItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DF5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_63BAC(&qword_3C97E8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_2DEC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  sub_6FA20((void *)((char *)a1 + a3[8]), (void *)((char *)a2 + a3[8]));
  return a1;
}

_OWORD *initializeWithTake for SeriesRoomListHeaderSegmentedItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DF5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_63BAC(&qword_3C97E8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_2DEC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  return a1;
}

void *assignWithTake for SeriesRoomListHeaderSegmentedItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_2DEC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[8];
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1 + v20);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesRoomListHeaderSegmentedItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15070C);
}

uint64_t sub_15070C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_63BAC(&qword_3C97E8);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_2DEC50();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesRoomListHeaderSegmentedItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_150838);
}

uint64_t sub_150838(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_63BAC(&qword_3C97E8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_2DEC50();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 24) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_15094C()
{
  sub_150A30();
  if (v0 <= 0x3F)
  {
    sub_2DEC50();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_150A30()
{
  if (!qword_3CC720)
  {
    sub_2DF5D0();
    unint64_t v0 = sub_2E4B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3CC720);
    }
  }
}

uint64_t sub_150A88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_150AE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_150B50(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 40);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_11581C(*(void *)v2, v4, v5);
  uint64_t v6 = sub_86DEC(v3, v4, v5);
  sub_881D0(v3, v4, v5);
  return v6;
}

uint64_t PerformActionView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v21 = sub_2DF6E0();
  uint64_t v4 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v14 = (char *)&v20 - v13;
  uint64_t v20 = *(void (**)(unsigned char *, char *, uint64_t, uint64_t))(v2 + *(int *)(a1 + 44));
  sub_84F34((uint64_t)v23);
  sub_84F60((uint64_t)v6);
  uint64_t v15 = sub_150B50(a1);
  v20(v23, v6, v15, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  sub_662B4((uint64_t)v23, &qword_3C75B0);
  uint64_t v17 = *(void *)(a1 + 24);
  sub_173884(v11, v7, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  sub_173884(v14, v7, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v7);
}

uint64_t sub_150E08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_150E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_150E58()
{
  sub_15197C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_150F08(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    if (a2[5])
    {
      uint64_t v7 = a2[3];
      if (v7)
      {
        uint64_t v8 = a2[4];
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = a2[4];
      }
      *(unsigned char *)(v4 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v11 = a3[9];
    uint64_t v12 = (void *)(v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_63BAC(&qword_3C7490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2DF6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[10];
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_11581C(*(void *)v17, v19, v20);
    *(void *)uint64_t v16 = v18;
    *(void *)(v16 + 8) = v19;
    *(unsigned char *)(v16 + 16) = v20;
    uint64_t v21 = a3[11];
    uint64_t v22 = (void *)(v4 + v21);
    long long v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1510EC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)(a1 + 24)) {
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_63BAC(&qword_3C7490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2DF6E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_881D0(*(void *)(a1 + *(int *)(a2 + 40)), *(void *)(a1 + *(int *)(a2 + 40) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 40) + 16));

  return swift_release();
}

uint64_t sub_1511D8(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 24);
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v9 = a3[9];
  long long v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_63BAC(&qword_3C7490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_2DF6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *long long v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  char v18 = *(unsigned char *)(v15 + 16);
  sub_11581C(*(void *)v15, v17, v18);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  *(unsigned char *)(v14 + 16) = v18;
  uint64_t v19 = a3[11];
  char v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  return a1;
}

uint64_t sub_151370(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    sub_662B4(a1, &qword_3C74A0);
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
    }
    uint64_t v9 = a3[9];
    long long v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_662B4(a1 + v9, &qword_3C7490);
    sub_63BAC(&qword_3C7490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2DF6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *long long v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  char v18 = *(unsigned char *)(v15 + 16);
  sub_11581C(*(void *)v15, v17, v18);
  uint64_t v19 = *(void *)v14;
  uint64_t v20 = *(void *)(v14 + 8);
  char v21 = *(unsigned char *)(v14 + 16);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  *(unsigned char *)(v14 + 16) = v18;
  sub_881D0(v19, v20, v21);
  uint64_t v22 = a3[11];
  long long v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *long long v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_15154C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v7 = a3[9];
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_63BAC(&qword_3C7490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_2DF6E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

_OWORD *sub_15165C(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_662B4((uint64_t)a1, &qword_3C74A0);
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    uint64_t v7 = a3[9];
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_662B4((uint64_t)a1 + v7, &qword_3C7490);
    uint64_t v10 = sub_63BAC(&qword_3C7490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_2DF6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[16];
  uint64_t v16 = *(void *)v13;
  uint64_t v17 = *((void *)v13 + 1);
  char v18 = v13[16];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v15;
  sub_881D0(v16, v17, v18);
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t sub_1517B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1517C4);
}

uint64_t sub_1517C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3CE200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_15188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1518A0);
}

uint64_t sub_1518A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_63BAC(&qword_3CE200);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PerformActionView()
{
  return sub_65E20();
}

void sub_15197C()
{
  if (!qword_3C7518)
  {
    sub_2DF6E0();
    unint64_t v0 = sub_2E1610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3C7518);
    }
  }
}

uint64_t sub_1519D4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_1519DC()
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_151A4C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_151A54()
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_151AC4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_151B3C()
{
  return swift_release();
}

uint64_t sub_151BDC()
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_151C4C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) = a2;
  return result;
}

uint64_t sub_151C54()
{
  return swift_retain();
}

uint64_t sub_151CC8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_151D04(uint64_t a1)
{
  swift_beginAccess();
  sub_1527B4(a1, v1 + 32);
  swift_endAccess();
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  swift_getKeyPath();
  sub_2DE000();
  swift_release();
  return sub_15281C(a1);
}

uint64_t sub_151E14@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  swift_beginAccess();
  return sub_15274C(v1 + 32, a1);
}

uint64_t sub_151EA8(uint64_t a1, uint64_t a2)
{
  sub_15274C(a2, (uint64_t)v3);
  return sub_151D04((uint64_t)v3);
}

uint64_t sub_151EF0()
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_151F60(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 72) = a2;
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  swift_getKeyPath();
  sub_2DE000();
  return swift_release();
}

uint64_t sub_152048()
{
  return swift_retain();
}

uint64_t sub_1520BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 80) = a2;
  swift_retain();
  return swift_release();
}

double sub_1520F8()
{
  swift_getKeyPath();
  sub_1526CC();
  sub_2DE010();
  swift_release();
  return *(double *)(v0 + 88);
}

uint64_t sub_152168(uint64_t result, double a2)
{
  *(double *)(result + 88) = a2;
  return result;
}

uint64_t sub_152170(char a1, char a2, char a3, uint64_t a4, uint64_t a5, char a6, double a7)
{
  *(void *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(void *)(v7 + 64) = 0;
  *(_OWORD *)(v7 + 32) = 0u;
  swift_unknownObjectWeakInit();
  sub_2DE040();
  *(unsigned char *)(v7 + 16) = a1;
  *(unsigned char *)(v7 + 17) = a2;
  *(unsigned char *)(v7 + 18) = a3;
  *(void *)(v7 + 24) = a4;
  sub_15281C(v7 + 32);
  sub_15289C(a5, v7 + 32);
  *(unsigned char *)(v7 + 72) = a6;
  *(double *)(v7 + 88) = a7;
  return v7;
}

uint64_t sub_15222C()
{
  swift_getKeyPath();
  v8[0] = v0;
  sub_1526CC();
  sub_2DE010();
  swift_release();
  char v1 = *(unsigned char *)(v0 + 16);
  swift_getKeyPath();
  sub_2DE010();
  swift_release();
  char v2 = *(unsigned char *)(v0 + 17);
  swift_getKeyPath();
  v8[0] = v0;
  sub_2DE010();
  swift_release();
  char v3 = *(unsigned char *)(v0 + 18);
  swift_getKeyPath();
  sub_2DE010();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 24);
  swift_getKeyPath();
  v8[0] = v0;
  swift_retain();
  sub_2DE010();
  swift_release();
  swift_beginAccess();
  sub_15274C(v0 + 32, (uint64_t)v8);
  swift_getKeyPath();
  sub_2DE010();
  swift_release();
  char v5 = *(unsigned char *)(v0 + 72);
  swift_getKeyPath();
  sub_2DE010();
  swift_release();
  double v6 = *(double *)(v0 + 88);
  swift_allocObject();
  return sub_152170(v1, v2, v3, v4, (uint64_t)v8, v5, v6);
}

uint64_t sub_152464()
{
  swift_release();
  sub_15281C(v0 + 32);
  swift_release();
  sub_77460(v0 + 96);
  uint64_t v1 = v0 + OBJC_IVAR____TtC11BookStoreUI35CardAuxiliaryNavigationBarViewModel___observationRegistrar;
  uint64_t v2 = sub_2DE050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_152524()
{
  return type metadata accessor for CardAuxiliaryNavigationBarViewModel();
}

uint64_t type metadata accessor for CardAuxiliaryNavigationBarViewModel()
{
  uint64_t result = qword_3CC818;
  if (!qword_3CC818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_152578()
{
  uint64_t result = sub_2DE050();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1526CC()
{
  unint64_t result = qword_3CC8E8;
  if (!qword_3CC8E8)
  {
    type metadata accessor for CardAuxiliaryNavigationBarViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC8E8);
  }
  return result;
}

void sub_15273C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_15274C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1527B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_15281C(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C8950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15289C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_152904()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_152914(uint64_t a1, void *a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  v6._rawValue = &off_3910C8;
  v12._countAndFlagsBits = a1;
  v12._object = a2;
  Swift::Int v7 = sub_2E4E50(v6, v12);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_1526CC();
    sub_2DE000();
    swift_release();
    swift_getKeyPath();
    sub_2DE010();
    swift_release();
    uint64_t v10 = swift_getKeyPath();
    __chkstk_darwin(v10);
    sub_2DE000();
    swift_release();
    if (a3 != 3)
    {
      swift_getKeyPath();
      sub_2DE010();
      swift_release();
    }
    uint64_t v11 = swift_getKeyPath();
    __chkstk_darwin(v11);
    sub_2DE000();
    return swift_release();
  }
  return result;
}

void sub_152B90()
{
}

void sub_152BA8()
{
}

uint64_t sub_152BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a7;
  *(unsigned char *)(v8 + 137) = a6;
  *(unsigned char *)(v8 + 136) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  sub_63BAC(&qword_3CA500);
  *(void *)(v8 + 72) = swift_task_alloc();
  type metadata accessor for SeriesRoomPageIntent();
  *(void *)(v8 + 80) = swift_task_alloc();
  sub_2E4740();
  *(void *)(v8 + 88) = sub_2E4730();
  uint64_t v10 = sub_2E46E0();
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = v9;
  return _swift_task_switch(sub_152CD0, v10, v9);
}

uint64_t sub_152CD0()
{
  sub_156734(v0[2], v0[10]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v1;
  *unint64_t v1 = v0;
  v1[1] = sub_152D70;
  return BaseObjectGraph.withSyncDependenciesForSwiftUI.getter();
}

uint64_t sub_152D70(uint64_t a1)
{
  uint64_t v4 = *v2;
  (*v2)[15] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_156560(v4[10]);
    uint64_t v5 = v4[12];
    uint64_t v6 = v4[13];
    Swift::Int v7 = sub_152FBC;
  }
  else
  {
    v4[16] = a1;
    uint64_t v5 = v4[12];
    uint64_t v6 = v4[13];
    Swift::Int v7 = sub_152E9C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_152E9C()
{
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 137);
  char v6 = *(unsigned char *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 32);
  Swift::Int v7 = *(void **)(v0 + 40);
  uint64_t v9 = *(void **)(v0 + 24);
  swift_release();
  sub_66444(v8, v2, &qword_3CA500);
  id v10 = objc_allocWithZone((Class)type metadata accessor for PageHostingController());
  swift_bridgeObjectRetain();
  id v11 = sub_153034(v1, v14, v9, v2, v7, v6, v5, v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
  return v12(v11);
}

uint64_t sub_152FBC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_153034(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v26 = a8;
  id v24 = a5;
  uint64_t v25 = a3;
  uint64_t v13 = sub_63BAC(&qword_3CA500);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C7020);
  sub_2E3690();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2FEFE0;
  type metadata accessor for PaginationController();
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  *(unsigned char *)(v17 + 18) = 0;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  uint64_t v29 = v17;
  sub_2E3680();
  uint64_t v29 = v16;
  sub_63BAC((uint64_t *)&unk_3C7EE0);
  sub_8D924();
  uint64_t v18 = sub_2E3AD0();
  swift_bridgeObjectRelease();
  sub_66444(a4, (uint64_t)v15, &qword_3CA500);
  uint64_t v28 = a1;
  if (a7) {
    int v19 = 256;
  }
  else {
    int v19 = 0;
  }
  unsigned int v20 = v19 & 0xFFFFFFFE | a6 & 1;
  id v21 = v24;
  swift_bridgeObjectRetain();
  id v22 = sub_2BEA38(v18, v25, (uint64_t)v15, v21, v20, v26, a9, (void (*)(uint64_t))sub_156798, (uint64_t)v27, (uint64_t (*)(uint64_t, uint64_t))sub_BB8E0, 0);
  swift_bridgeObjectRelease();
  swift_release();

  sub_662B4(a4, &qword_3CA500);
  sub_156560(a1);
  return v22;
}

uint64_t sub_1532B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v8[3] = type metadata accessor for SeriesRoomPageIntent();
  v8[4] = sub_1567A0(&qword_3C7FC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomPageIntent);
  char v6 = sub_71088(v8);
  sub_156734(a2, (uint64_t)v6);
  swift_retain();
  return sub_EE99C(v8, a1, a3);
}

uint64_t static BSUIFeedViewController.createSeriesViewController(from:with:navigationTypeValue:navigationContext:shouldReportFigaro:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3CC8F8
                                                                                     + dword_3CC8F8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_AF750;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1535F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a6;
  *(unsigned char *)(v6 + 96) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  sub_2E4740();
  *(void *)(v6 + 56) = sub_2E4730();
  uint64_t v8 = sub_2E46E0();
  return _swift_task_switch(sub_153694, v8, v7);
}

uint64_t sub_153694()
{
  uint64_t v1 = *(const void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  *(void *)(v0 + 64) = _Block_copy(v1);
  uint64_t v3 = sub_2E4350();
  *(void *)(v0 + 72) = v3;
  if (v2)
  {
    uint64_t v4 = sub_2E4420();
    uint64_t v2 = v5;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)(v0 + 80) = v2;
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_3CC8F8 + dword_3CC8F8);
  id v7 = *(id *)(v0 + 24);
  id v8 = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v9;
  void *v9 = v0;
  v9[1] = sub_1537D8;
  char v10 = *(unsigned char *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 24);
  return v14(v3, v12, v4, v2, v11, v10);
}

uint64_t sub_1537D8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 40);
  id v7 = *(void **)(*v2 + 24);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (***)(void, void, void))(v5 + 64);
  swift_bridgeObjectRelease();
  if (v3)
  {
    char v10 = (void *)sub_2DDC60();
    swift_errorRelease();
    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

void sub_1539CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_2DEBB0();
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    if (qword_3C6570 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_2DF850();
    sub_58BA0(v15, (uint64_t)qword_3CD120);
    swift_errorRetain();
    swift_errorRetain();
    *(void *)&long long v33 = sub_2DF830();
    os_log_type_t v16 = sub_2E48F0();
    if (os_log_type_enabled((os_log_t)v33, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v19;
      sub_2E4B40();
      void *v18 = v19;
      swift_errorRelease();
      swift_errorRelease();
      sub_63BAC(&qword_3D20E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_16;
  }
  if (!a1 || (objc_msgSend(a1, "BOOLValue", v12) & 1) == 0)
  {
    if (qword_3C6570 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_2DF850();
    sub_58BA0(v21, (uint64_t)qword_3CD120);
    *(void *)&long long v33 = sub_2DF830();
    os_log_type_t v22 = sub_2E4910();
    if (os_log_type_enabled((os_log_t)v33, v22))
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v23 = 0;
      _os_log_impl(&dword_0, (os_log_t)v33, v22, "Skip live fetching series info, because server or fallback said so.", v23, 2u);
      swift_slowDealloc();
    }
LABEL_16:
    id v24 = (void *)v33;

    return;
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for SeriesType.audiobook(_:), v10);
  sub_1567A0((unint64_t *)&qword_3CBA90, (void (*)(uint64_t))&type metadata accessor for SeriesType);
  sub_2E45C0();
  sub_2E45C0();
  if (v36 == v34 && v37 == v35)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    unsigned int v20 = (id *)&BKSeriesManagerSeriesTypeAudiobookSeries;
  }
  else
  {
    char v25 = sub_2E5020();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    unsigned int v20 = (id *)&BKSeriesManagerSeriesTypeBookSeries;
    if (v25) {
      unsigned int v20 = (id *)&BKSeriesManagerSeriesTypeAudiobookSeries;
    }
  }
  id v26 = *v20;
  sub_63BAC(&qword_3CC930);
  uint64_t inited = swift_initStackObject();
  long long v33 = xmmword_2FEFE0;
  *(_OWORD *)(inited + 16) = xmmword_2FEFE0;
  *(void *)(inited + 32) = v26;
  sub_63BAC(&qword_3C9CD0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v33;
  *(void *)(v28 + 32) = a5;
  *(void *)(v28 + 40) = a6;
  *(void *)(inited + 40) = v28;
  id v29 = v26;
  swift_bridgeObjectRetain();
  sub_59B50(inited);
  id v30 = [self sharedManager];
  if (v30)
  {
    uint64_t v31 = v30;
    type metadata accessor for SeriesManagerSeriesType(0);
    sub_63BAC(&qword_3C7748);
    sub_1567A0(&qword_3C7168, type metadata accessor for SeriesManagerSeriesType);
    Class isa = sub_2E4330().super.isa;
    swift_bridgeObjectRelease();
    [v31 updateSeriesForSeriesAdamIDsWithTypes:isa forceCheck:1];
  }
  else
  {
    __break(1u);
  }
}

void sub_153F78(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

void sub_15400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2DEBB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [self defaultBag];
  id v10 = [v9 seriesInfoLiveFetchesEnabled];

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v13 = (void *)(v12 + ((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v13 = a1;
  v13[1] = a2;
  aBlock[4] = sub_156664;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_153F78;
  aBlock[3] = &unk_395198;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  [v10 valueWithCompletion:v14];
  _Block_release(v14);
}

uint64_t sub_154220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 880) = a6;
  *(void *)(v6 + 568) = a5;
  *(void *)(v6 + 560) = a4;
  *(void *)(v6 + 552) = a3;
  *(void *)(v6 + 544) = a2;
  *(void *)(v6 + 536) = a1;
  sub_63BAC(&qword_3CA500);
  *(void *)(v6 + 576) = swift_task_alloc();
  uint64_t v7 = sub_2DF340();
  *(void *)(v6 + 584) = v7;
  *(void *)(v6 + 592) = *(void *)(v7 - 8);
  *(void *)(v6 + 600) = swift_task_alloc();
  *(void *)(v6 + 608) = swift_task_alloc();
  sub_63BAC(&qword_3C9BC8);
  *(void *)(v6 + 616) = swift_task_alloc();
  *(void *)(v6 + 624) = swift_task_alloc();
  *(void *)(v6 + 632) = swift_task_alloc();
  uint64_t v8 = sub_2DEBB0();
  *(void *)(v6 + 640) = v8;
  *(void *)(v6 + 648) = *(void *)(v8 - 8);
  *(void *)(v6 + 656) = swift_task_alloc();
  *(void *)(v6 + 664) = swift_task_alloc();
  *(void *)(v6 + 672) = swift_task_alloc();
  *(void *)(v6 + 680) = type metadata accessor for SeriesRoomPageIntent();
  *(void *)(v6 + 688) = swift_task_alloc();
  *(void *)(v6 + 696) = swift_task_alloc();
  sub_63BAC(&qword_3CC910);
  *(void *)(v6 + 704) = swift_task_alloc();
  uint64_t v9 = sub_2E12F0();
  *(void *)(v6 + 712) = v9;
  *(void *)(v6 + 720) = *(void *)(v9 - 8);
  *(void *)(v6 + 728) = swift_task_alloc();
  *(void *)(v6 + 736) = swift_task_alloc();
  sub_2E4740();
  *(void *)(v6 + 744) = sub_2E4730();
  uint64_t v11 = sub_2E46E0();
  *(void *)(v6 + 752) = v11;
  *(void *)(v6 + 760) = v10;
  return _swift_task_switch(sub_15450C, v11, v10);
}

uint64_t sub_15450C()
{
  uint64_t v1 = v0;
  [self jsa_topMostViewControllerForWindow:];
  v0[96] = v2;
  UIViewController.jetActionHandlerInContext.getter();
  uint64_t v4 = v3;
  uint64_t v5 = v0[92];
  uint64_t v6 = v0[90];
  uint64_t v7 = v1[89];
  uint64_t v8 = v1[70];
  uint64_t ObjectType = swift_getObjectType();
  v1[97] = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease();
  sub_2E3B30();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for Metrics.NavigationType.forward(_:), v7);
  if (v8)
  {
    uint64_t v10 = v1[90];
    uint64_t v11 = v1[89];
    uint64_t v12 = v1[88];
    swift_bridgeObjectRetain();
    sub_2E12E0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
    {
      sub_662B4(v1[88], &qword_3CC910);
    }
    else
    {
      uint64_t v13 = v1[92];
      uint64_t v14 = v1[90];
      uint64_t v15 = v1[89];
      uint64_t v16 = v1[88];
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v16, v15);
    }
  }
  uint64_t v17 = v1 + 67;
  uint64_t v18 = v1[67];
  if (!*(void *)(v18 + 16)) {
    goto LABEL_34;
  }
  unint64_t v19 = sub_5F740(0x656372756F736572, 0xE800000000000000);
  if ((v20 & 1) == 0) {
    goto LABEL_34;
  }
  sub_65C98(*(void *)(*v17 + 56) + 32 * v19, (uint64_t)(v1 + 39));
  sub_63BAC(&qword_3C7C58);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v21 = v1[63];
  v1[53] = 25705;
  v1[54] = 0xE200000000000000;
  sub_2E4C10();
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_5F7B8((uint64_t)(v1 + 12)), (v23 & 1) != 0))
  {
    sub_65C98(*(void *)(v21 + 56) + 32 * v22, (uint64_t)(v1 + 27));
  }
  else
  {
    *(_OWORD *)(v1 + 27) = 0u;
    *(_OWORD *)(v1 + 29) = 0u;
  }
  sub_65D68((uint64_t)(v1 + 12));
  if (!v1[30])
  {
    swift_bridgeObjectRelease();
    id v30 = &qword_3C78D0;
    uint64_t v31 = (uint64_t)(v1 + 27);
LABEL_33:
    sub_662B4(v31, v30);
    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  id v24 = v1;
  uint64_t v25 = (uint64_t)(v1 + 7);
  id v26 = v24 + 47;
  uint64_t v27 = v24[56];
  uint64_t v117 = v24[55];
  uint64_t v118 = v24;
  v24[61] = 1701869940;
  v24[62] = 0xE400000000000000;
  sub_2E4C10();
  if (*(void *)(v21 + 16) && (unint64_t v28 = sub_5F7B8(v25), (v29 & 1) != 0))
  {
    sub_65C98(*(void *)(v21 + 56) + 32 * v28, (uint64_t)v26);
  }
  else
  {
    *id v26 = 0u;
    v26[1] = 0u;
  }
  sub_65D68(v25);
  uint64_t v1 = v118;
  if (!v118[50])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v30 = &qword_3C78D0;
    uint64_t v31 = (uint64_t)v26;
    goto LABEL_33;
  }
  if (swift_dynamicCast())
  {
    uint64_t v116 = v27;
    if (sub_2DED10())
    {
      sub_2DEE00();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v32 = v118[81];
        uint64_t v33 = v118[80];
        uint64_t v34 = v118[79];
        uint64_t v35 = (unsigned int *)&enum case for SeriesType.audiobook(_:);
LABEL_29:
        (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v34, *v35, v33);
        uint64_t v36 = v34;
        uint64_t v1 = v118;
        uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
        v114(v36, 0, 1, v33);
LABEL_31:
        uint64_t v37 = v1[81];
        uint64_t v38 = v1[80];
        uint64_t v39 = v1[79];
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v38) != 1)
        {
          uint64_t v58 = (uint64_t)(v1 + 2);
          int v59 = v1 + 35;
          uint64_t v60 = v1[83];
          uint64_t v61 = v1[81];
          uint64_t v62 = v1[80];
          uint64_t v63 = v1[79];
          uint64_t v64 = v1[76];
          uint64_t v65 = v1[75];
          uint64_t v66 = v1[74];
          uint64_t v67 = v1[73];
          Swift::Int v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32);
          v111(v60, v63, v62);
          (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))(v64, enum case for MResource.Keys.attributes(_:), v67);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v64, v67);
          sub_1567A0(&qword_3CC928, (void (*)(uint64_t))&type metadata accessor for MResource.Keys);
          sub_2E4C10();
          (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v67);
          if (*(void *)(v21 + 16) && (unint64_t v68 = sub_5F7B8(v58), (v69 & 1) != 0))
          {
            sub_65C98(*(void *)(v21 + 56) + 32 * v68, (uint64_t)v59);
          }
          else
          {
            *int v59 = 0u;
            v59[1] = 0u;
          }
          uint64_t v1 = v118;
          sub_65D68(v58);
          uint64_t v85 = v118[38];
          sub_662B4((uint64_t)v59, &qword_3C78D0);
          if (v85)
          {
            sub_2DF370();
            sub_2DF120();
            sub_2DF310();
          }
          swift_bridgeObjectRelease();
          uint64_t v86 = v118[92];
          uint64_t v120 = v118[91];
          uint64_t v87 = v1[90];
          uint64_t v88 = v1[89];
          uint64_t v102 = v88;
          uint64_t v104 = v87;
          Swift::Int v89 = (char *)v1[86];
          uint64_t v108 = v1[87];
          uint64_t v110 = v1[84];
          uint64_t v106 = v1[83];
          uint64_t v90 = v1[81];
          uint64_t v91 = v1[80];
          uint64_t v92 = v1[78];
          uint64_t v100 = v1[82];
          unint64_t v98 = (int *)v1[85];
          uint64_t v99 = *(void (**)(void))(v90 + 16);
          v99();
          v114(v92, 1, 1, v91);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v120, v86, v88);
          uint64_t v93 = v98[8];
          sub_2DF120();
          swift_bridgeObjectRetain();
          *(void *)&v89[v93] = sub_2E0D80();
          *(void *)Swift::Int v89 = v117;
          *((void *)v89 + 1) = v116;
          ((void (*)(char *, uint64_t, uint64_t))v99)(&v89[v98[5]], v100, v91);
          uint64_t v94 = &v89[v98[6]];
          *(void *)uint64_t v94 = 0;
          *((void *)v94 + 1) = 0;
          sub_66444(v92, (uint64_t)&v89[v98[7]], &qword_3C9BC8);
          uint64_t v95 = sub_2E0D80();
          sub_662B4(v92, &qword_3C9BC8);
          uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
          v84(v100, v91);

          *(void *)&v89[v93] = v95;
          (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(&v89[v98[9]], v120, v102);
          sub_C57DC((uint64_t)v89, v108);
          v111(v110, v106, v91);
          goto LABEL_62;
        }
        uint64_t v40 = v1[79];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v30 = &qword_3C9BC8;
        uint64_t v31 = v40;
        goto LABEL_33;
      }
      sub_2DEC70();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v32 = v118[81];
        uint64_t v33 = v118[80];
        uint64_t v34 = v118[79];
        uint64_t v35 = (unsigned int *)&enum case for SeriesType.book(_:);
        goto LABEL_29;
      }
    }
    uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118[81] + 56);
    v114(v118[79], 1, 1, v118[80]);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_34:
  if (!*(void *)(v18 + 16)
    || (unint64_t v41 = sub_5F740(25705, 0xE200000000000000), (v42 & 1) == 0)
    || (uint64_t v43 = *v17, sub_65C98(*(void *)(*v17 + 56) + 32 * v41, (uint64_t)(v1 + 43)), (swift_dynamicCast() & 1) == 0))
  {
    swift_release();
LABEL_44:
    uint64_t v53 = v1[92];
    uint64_t v54 = v1[90];
    uint64_t v55 = v1[89];
    sub_15650C();
    swift_allocError();
    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v56 = (uint64_t (*)(void))v1[1];
    return v56();
  }
  uint64_t v44 = v1[52];
  if (!*(void *)(v18 + 16)
    || (uint64_t v45 = v1[51], v46 = sub_5F740(0x7954736569726573, 0xEA00000000006570), (v47 & 1) == 0)
    || (sub_65C98(*(void *)(v43 + 56) + 32 * v46, (uint64_t)(v1 + 31)), (swift_dynamicCast() & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if (!sub_2DED10()) {
    goto LABEL_54;
  }
  sub_2DEE00();
  if (!swift_dynamicCastMetatype())
  {
    sub_2DEC70();
    if (swift_dynamicCastMetatype())
    {
      uint64_t v48 = v45;
      uint64_t v49 = v1[81];
      uint64_t v50 = v1[80];
      uint64_t v51 = v1[77];
      uint64_t v52 = (unsigned int *)&enum case for SeriesType.book(_:);
      goto LABEL_53;
    }
LABEL_54:
    uint64_t v48 = v45;
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1[81] + 56);
    v70(v1[77], 1, 1, v1[80]);
    goto LABEL_55;
  }
  uint64_t v48 = v45;
  uint64_t v49 = v1[81];
  uint64_t v50 = v1[80];
  uint64_t v51 = v1[77];
  uint64_t v52 = (unsigned int *)&enum case for SeriesType.audiobook(_:);
LABEL_53:
  (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v51, *v52, v50);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
  v70(v51, 0, 1, v50);
LABEL_55:
  uint64_t v71 = v1[81];
  uint64_t v72 = v1[80];
  uint64_t v73 = v1[77];
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v73, 1, v72) == 1)
  {
    uint64_t v74 = v1[77];
    swift_release();
    swift_bridgeObjectRelease();
    sub_662B4(v74, &qword_3C9BC8);
    goto LABEL_44;
  }
  uint64_t v103 = v1[92];
  uint64_t v113 = v1[90];
  uint64_t v115 = v1[91];
  uint64_t v119 = v1[89];
  uint64_t v112 = v1[87];
  unint64_t v75 = (char *)v1[86];
  uint64_t v101 = (int *)v1[85];
  uint64_t v76 = v1[84];
  uint64_t v77 = v1[82];
  uint64_t v107 = v77;
  uint64_t v78 = v1[81];
  uint64_t v117 = v48;
  uint64_t v79 = v1[80];
  uint64_t v80 = v1[78];
  uint64_t v109 = v80;
  (*(void (**)(uint64_t, void, uint64_t))(v78 + 32))(v76, v1[77], v79);
  uint64_t v116 = v44;
  uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
  v105(v77, v76, v79);
  v70(v80, 1, 1, v79);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v115, v103, v119);
  uint64_t v81 = v101[8];
  sub_2DF120();
  swift_bridgeObjectRetain();
  *(void *)&v75[v81] = sub_2E0D80();
  *(void *)unint64_t v75 = v117;
  *((void *)v75 + 1) = v44;
  v105((uint64_t)&v75[v101[5]], v77, v79);
  unint64_t v82 = &v75[v101[6]];
  *(void *)unint64_t v82 = 0;
  *((void *)v82 + 1) = 0;
  sub_66444(v109, (uint64_t)&v75[v101[7]], &qword_3C9BC8);
  uint64_t v83 = sub_2E0D80();
  sub_662B4(v109, &qword_3C9BC8);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v84(v107, v79);

  *(void *)&v75[v81] = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(&v75[v101[9]], v115, v119);
  sub_C57DC((uint64_t)v75, v112);
LABEL_62:
  v1[100] = v116;
  v1[99] = v117;
  v1[98] = v84;
  uint64_t v96 = sub_63BAC(&qword_3C8918);
  int v97 = (void *)swift_task_alloc();
  v1[101] = v97;
  *int v97 = v1;
  v97[1] = sub_1554E4;
  return BaseObjectGraph.inject<A>(_:)(v1 + 22, v96, v96);
}

uint64_t sub_1554E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 816) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 760);
    uint64_t v4 = *(void *)(v2 + 752);
    uint64_t v5 = sub_155E70;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 760);
    uint64_t v4 = *(void *)(v2 + 752);
    uint64_t v5 = sub_155608;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_155608()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  sub_71044(v0 + 22, v1);
  v0[65] = 0;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(v2 + 8)
                                                                                      + **(int **)(v2 + 8));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[103] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_155734;
  uint64_t v4 = v0[100];
  uint64_t v5 = v0[99];
  return v7(v0 + 17, v5, v4, v0 + 65, v1, v2);
}

uint64_t sub_155734()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 760);
  uint64_t v3 = *(void *)(v1 + 752);
  return _swift_task_switch(sub_155854, v3, v2);
}

uint64_t sub_155854()
{
  if (v0[20]) {
    sub_15400C(v0[99], v0[100], v0[84]);
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[104] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_155920;
  return BaseObjectGraph.inject<A>(_:)(v0 + 64, &type metadata for PageControllerFactory, &type metadata for PageControllerFactory);
}

uint64_t sub_155920()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 840) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 760);
  uint64_t v4 = *(void *)(v2 + 752);
  if (v0) {
    uint64_t v5 = sub_156018;
  }
  else {
    uint64_t v5 = sub_155A5C;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_155A5C()
{
  uint64_t v1 = v0[72];
  v0[106] = v0[64];
  uint64_t v2 = swift_bridgeObjectRetain();
  ActionOrigin.init(jsActionOptions:)(v2, v1);
  uint64_t v4 = (char *)&dword_3CC920 + dword_3CC920;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[107] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_155B48;
  __asm { BR              X8 }
}

uint64_t sub_155B48(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 864) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[95];
    uint64_t v6 = v4[94];
    uint64_t v7 = sub_1561E4;
  }
  else
  {
    v4[109] = a1;
    uint64_t v5 = v4[95];
    uint64_t v6 = v4[94];
    uint64_t v7 = sub_155C78;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_155C78()
{
  uint64_t v1 = (void *)v0[96];
  uint64_t v2 = v0[92];
  uint64_t v3 = v0[90];
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[98];
  uint64_t v12 = v0[89];
  uint64_t v10 = v0[87];
  uint64_t v4 = v0[84];
  uint64_t v5 = v0[80];
  uint64_t v6 = v0[72];
  swift_release();
  swift_release();

  swift_release();
  sub_662B4(v6, &qword_3CA500);
  v11(v4, v5);
  sub_156560(v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  sub_662B4((uint64_t)(v0 + 17), &qword_3C8920);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 22));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[109];
  return v7(v8);
}

uint64_t sub_155E70()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[98];
  uint64_t v2 = (void *)v0[96];
  uint64_t v10 = v0[92];
  uint64_t v3 = v0[90];
  uint64_t v4 = v0[89];
  uint64_t v5 = v0[87];
  uint64_t v6 = v0[84];
  uint64_t v7 = v0[80];
  swift_release();
  swift_release();

  v1(v6, v7);
  sub_156560(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_156018()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[98];
  uint64_t v2 = (void *)v0[96];
  uint64_t v10 = v0[92];
  uint64_t v3 = v0[90];
  uint64_t v4 = v0[89];
  uint64_t v5 = v0[87];
  uint64_t v6 = v0[84];
  uint64_t v7 = v0[80];
  swift_release();
  swift_release();

  v1(v6, v7);
  sub_156560(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  sub_662B4((uint64_t)(v0 + 17), &qword_3C8920);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 22));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1561E4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[98];
  uint64_t v2 = (void *)v0[96];
  uint64_t v3 = v0[90];
  uint64_t v10 = v0[89];
  uint64_t v11 = v0[92];
  uint64_t v4 = v0[87];
  uint64_t v5 = v0[84];
  uint64_t v6 = v0[80];
  uint64_t v7 = v0[72];
  swift_release();
  swift_release();

  sub_662B4(v7, &qword_3CA500);
  v1(v5, v6);
  sub_156560(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  sub_662B4((uint64_t)(v0 + 17), &qword_3C8920);
  swift_release();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 22));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1563D0()
{
  _Block_release(*(const void **)(v0 + 56));

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_156428()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_8BBE0;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_3CC900 + dword_3CC900);
  return v9(v2, v3, v4, v5, v6, v7);
}

unint64_t sub_15650C()
{
  unint64_t result = qword_3CC918;
  if (!qword_3CC918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC918);
  }
  return result;
}

uint64_t sub_156560(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesRoomPageIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1565BC()
{
  uint64_t v1 = sub_2DEBB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_156664(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_2DEBB0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = (uint64_t *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  sub_1539CC(a1, a2, a3, v9, v11, v12);
}

uint64_t sub_15671C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_15672C()
{
  return swift_release();
}

uint64_t sub_156734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesRoomPageIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_156798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1532B8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1567A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s23FeedViewControllerErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x156884);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s23FeedViewControllerErrorOMa()
{
  return &_s23FeedViewControllerErrorON;
}

unint64_t sub_1568C0()
{
  unint64_t result = qword_3CC938;
  if (!qword_3CC938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC938);
  }
  return result;
}

uint64_t type metadata accessor for YearInReviewHostingController()
{
  uint64_t result = qword_3CC940;
  if (!qword_3CC940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_156960()
{
  return swift_initClassMetadata2();
}

id sub_1569A0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return [super initWithCoder:a3];
}

uint64_t sub_1569E8()
{
  return type metadata accessor for YearInReviewHostingController();
}

id sub_1569F0(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_63BAC(&qword_3CA500);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = (objc_class *)type metadata accessor for NavigationContext();
  uint64_t v17 = objc_allocWithZone(v16);
  v17[OBJC_IVAR___BSUINavigationContext_isInCard] = 0;
  v17[OBJC_IVAR___BSUINavigationContext_isInModal] = 1;
  v26.receiver = v17;
  v26.super_class = v16;
  [super init];
  sub_775A4(a4, (uint64_t)v15);
  unint64_t v19 = (char *)objc_allocWithZone((Class)type metadata accessor for YearInReviewHostingController());
  sub_775A4((uint64_t)v15, (uint64_t)v12);
  swift_retain();
  id v20 = a3;
  id v21 = v18;
  id v22 = sub_71F98(a1, v20, (uint64_t)v12, v21, a5 & 1, 0, 0, 0, 0, v19, a2);
  sub_D9804((uint64_t)v15);
  id result = [v22 view];
  if (result)
  {
    id v24 = result;
    sub_156BF8();
    sub_2E07E0();
    uint64_t v25 = (void *)sub_2E4A90();
    [v24 setBackgroundColor:v25];
    swift_bridgeObjectRelease();

    swift_release();
    sub_D9804(a4);
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_156BF8()
{
  unint64_t result = qword_3CC990;
  if (!qword_3CC990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3CC990);
  }
  return result;
}

uint64_t sub_156C38()
{
  uint64_t v1 = sub_2E2F90();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5._object = *(void **)(v0 + 32);
  if (v5._object && (v5._countAndFlagsBits = *(void *)(v0 + 24), (unint64_t v6 = sub_2E01C0(v5)) != 0))
  {
    uint64_t v7 = (void *)v6;
    if (sub_2E0240()) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = 2;
    }
    id v9 = [self traitCollectionWithUserInterfaceStyle:v8];
    id v10 = [v7 resolvedColorWithTraitCollection:v9];

    id v11 = v10;
    uint64_t v12 = sub_2E3060();
    swift_bridgeObjectRetain();
    if (!sub_2E2F80())
    {

      return v12;
    }
    sub_2E2F70();
    sub_2E2F70();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
    uint64_t v13 = sub_2E3050();

    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    if (!sub_2E2F80()) {
      return 0;
    }
    sub_2E2F70();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
    uint64_t v13 = sub_2E3050();
  }
  swift_release();
  return v13;
}

uint64_t sub_156EC0()
{
  unint64_t v1 = 0x63726550746E6974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F6C6F43786568;
  }
}

uint64_t sub_156F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1577EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_156F50(uint64_t a1)
{
  unint64_t v2 = sub_157194();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_156F8C(uint64_t a1)
{
  unint64_t v2 = sub_157194();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TintColorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_63BAC(&qword_3CC998);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  v11[0] = v1[4];
  v11[1] = v8;
  sub_71044(a1, a1[3]);
  sub_157194();
  sub_2E5230();
  char v15 = 0;
  uint64_t v9 = v11[2];
  sub_2E4F80();
  if (!v9)
  {
    uint64_t v14 = v7;
    char v13 = 1;
    sub_1571E8();
    sub_2E4FA0();
    char v12 = 2;
    sub_2E4F70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_157194()
{
  unint64_t result = qword_3CC9A0;
  if (!qword_3CC9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC9A0);
  }
  return result;
}

unint64_t sub_1571E8()
{
  unint64_t result = qword_3CC9A8;
  if (!qword_3CC9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC9A8);
  }
  return result;
}

uint64_t TintColorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3CC9B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_157194();
  sub_2E5220();
  if (v2) {
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_2E4ED0();
  uint64_t v11 = v10;
  char v20 = 1;
  sub_B5850();
  swift_bridgeObjectRetain();
  sub_2E4F10();
  uint64_t v12 = v21;
  char v19 = 2;
  uint64_t v13 = sub_2E4E80();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v13;
  v17(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v18;
  a2[4] = v16;
  swift_bridgeObjectRetain();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_157490@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TintColorInfo.init(from:)(a1, a2);
}

uint64_t sub_1574A8(void *a1)
{
  return TintColorInfo.encode(to:)(a1);
}

uint64_t initializeWithCopy for TintColorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TintColorInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TintColorInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TintColorInfo()
{
  return &type metadata for TintColorInfo;
}

unsigned char *storeEnumTagSinglePayload for TintColorInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1576ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TintColorInfo.CodingKeys()
{
  return &type metadata for TintColorInfo.CodingKeys;
}

unint64_t sub_1576E8()
{
  unint64_t result = qword_3CC9B8;
  if (!qword_3CC9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC9B8);
  }
  return result;
}

unint64_t sub_157740()
{
  unint64_t result = qword_3CC9C0;
  if (!qword_3CC9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC9C0);
  }
  return result;
}

unint64_t sub_157798()
{
  unint64_t result = qword_3CC9C8;
  if (!qword_3CC9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC9C8);
  }
  return result;
}

uint64_t sub_1577EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6C6F43786568 && a2 == 0xE800000000000000;
  if (v2 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63726550746E6974 && a2 == 0xEB00000000746E65 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000317A90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2E5020();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_157958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15796C);
}

uint64_t sub_15796C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C9EE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_157A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_157A34);
}

uint64_t sub_157A34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_63BAC(&qword_3C9EE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SeeAllFooterComponentModel()
{
  uint64_t result = qword_3CCA28;
  if (!qword_3CCA28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_157B2C()
{
  sub_CE848();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_157BCC(void *a1)
{
  uint64_t v3 = sub_63BAC(&qword_3CCA80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_71044(a1, a1[3]);
  sub_158440();
  sub_2E5230();
  v8[15] = 0;
  sub_63BAC(&qword_3C8B88);
  sub_71AA4(&qword_3CA088, &qword_3C8B88);
  sub_2E4FA0();
  if (!v1)
  {
    v8[14] = 1;
    sub_63BAC(&qword_3C8B78);
    sub_71AA4(&qword_3CA090, &qword_3C8B78);
    sub_2E4FA0();
    type metadata accessor for SeeAllFooterComponentModel();
    v8[13] = 2;
    sub_63BAC(&qword_3C9EE0);
    sub_CF398();
    sub_2E4FA0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_157E04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_63BAC(&qword_3C9EE0);
  __chkstk_darwin(v4);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CCA70);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SeeAllFooterComponentModel();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v13 + 40;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  sub_9F64C((uint64_t)&v30, (uint64_t)&v27);
  long long v14 = v28;
  *(_OWORD *)(v13 + 40) = v27;
  *(_OWORD *)(v13 + 56) = v14;
  *((void *)v13 + 9) = v29;
  sub_662B4((uint64_t)&v30, &qword_3C8B80);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 32)];
  uint64_t v16 = sub_2E3CC0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v26 = v15;
  v17(v15, 1, 1, v16);
  sub_71044(a1, a1[3]);
  sub_158440();
  sub_2E5220();
  if (v2)
  {
    uint64_t v19 = (uint64_t)v33;
    uint64_t v20 = v26;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
    sub_662B4(v19, &qword_3C8B78);
    return sub_662B4(v20, &qword_3C9EE0);
  }
  else
  {
    sub_63BAC(&qword_3C8B88);
    LOBYTE(v27) = 0;
    sub_71AA4((unint64_t *)&qword_3C8BA0, &qword_3C8B88);
    uint64_t v18 = v25;
    sub_2E4F10();
    long long v21 = v31;
    *(_OWORD *)uint64_t v13 = v30;
    *((_OWORD *)v13 + 1) = v21;
    *((void *)v13 + 4) = v32;
    sub_63BAC(&qword_3C8B78);
    LOBYTE(v27) = 1;
    sub_71AA4(&qword_3C8BA8, &qword_3C8B78);
    sub_2E4F10();
    sub_9F708((uint64_t)&v30, (uint64_t)v33, &qword_3C8B78);
    LOBYTE(v30) = 2;
    sub_CF198();
    sub_2E4F10();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v18);
    sub_9F708((uint64_t)v6, v26, &qword_3C9EE0);
    sub_158494((uint64_t)v13, v23);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
    return sub_1584F8((uint64_t)v13);
  }
}

uint64_t sub_15825C(uint64_t a1)
{
  unint64_t v2 = sub_158440();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_158298(uint64_t a1)
{
  unint64_t v2 = sub_158440();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1582D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_157E04(a1, a2);
}

uint64_t sub_1582EC(void *a1)
{
  return sub_157BCC(a1);
}

uint64_t sub_158304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3C9EE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66444(v2 + *(int *)(a1 + 24), (uint64_t)v7, &qword_3C9EE0);
  return sub_71900((uint64_t)v7, a2, &qword_3C7498);
}

uint64_t sub_1583B0()
{
  return sub_158554(&qword_3C80A0, (void (*)(uint64_t))type metadata accessor for SeeAllFooterComponentModel);
}

uint64_t sub_1583F8()
{
  return sub_158554(&qword_3CCA68, (void (*)(uint64_t))type metadata accessor for SeeAllFooterComponentModel);
}

unint64_t sub_158440()
{
  unint64_t result = qword_3CCA78;
  if (!qword_3CCA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCA78);
  }
  return result;
}

uint64_t sub_158494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeeAllFooterComponentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1584F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeeAllFooterComponentModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_158554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeeAllFooterComponentModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x158668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeeAllFooterComponentModel.CodingKeys()
{
  return &type metadata for SeeAllFooterComponentModel.CodingKeys;
}

unint64_t sub_1586A4()
{
  unint64_t result = qword_3CCA88;
  if (!qword_3CCA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCA88);
  }
  return result;
}

unint64_t sub_1586FC()
{
  unint64_t result = qword_3CCA90;
  if (!qword_3CCA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCA90);
  }
  return result;
}

unint64_t sub_158754()
{
  unint64_t result = qword_3CCA98;
  if (!qword_3CCA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCA98);
  }
  return result;
}

id SwiftUICoverAnimationProvider.__allocating_init(frame:image:imageViewIdentifier:referenceView:isInNonHorizontalLayout:isVisible:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12)
{
  uint64_t v25 = objc_allocWithZone(v12);
  *(void *)&v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset] = 0;
  uint64_t v26 = (double *)&v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame];
  *uint64_t v26 = a9;
  v26[1] = a10;
  v26[2] = a11;
  v26[3] = a12;
  long long v27 = &v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_imageViewIdentifier];
  *long long v27 = a2;
  v27[1] = a3;
  *(void *)&v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView] = a4;
  *(void *)&v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_coverSourceImage] = a1;
  v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_isInNonHorizontalLayout] = a5;
  long long v28 = &v25[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider__isVisible];
  *(void *)long long v28 = a6;
  *((void *)v28 + 1) = a7;
  v28[16] = a8;
  v30.receiver = v25;
  v30.super_class = v12;
  return [super init];
}

id SwiftUICoverAnimationProvider.init(frame:image:imageViewIdentifier:referenceView:isInNonHorizontalLayout:isVisible:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12)
{
  *(void *)&v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset] = 0;
  uint64_t v13 = (double *)&v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame];
  double *v13 = a9;
  v13[1] = a10;
  long long v13[2] = a11;
  v13[3] = a12;
  long long v14 = &v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_imageViewIdentifier];
  *long long v14 = a2;
  v14[1] = a3;
  *(void *)&v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView] = a4;
  *(void *)&v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_coverSourceImage] = a1;
  v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_isInNonHorizontalLayout] = a5;
  uint64_t v15 = &v12[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider__isVisible];
  *(void *)uint64_t v15 = a6;
  *((void *)v15 + 1) = a7;
  v15[16] = a8;
  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for SwiftUICoverAnimationProvider();
  return [super init];
}

uint64_t type metadata accessor for SwiftUICoverAnimationProvider()
{
  return self;
}

uint64_t SwiftUICoverAnimationProvider.isInNonHorizontalLayout.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_isInNonHorizontalLayout);
}

double sub_1589D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_158A74(double a1)
{
  int v3 = (double *)(v1
                + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_158AC8())()
{
  return j__swift_endAccess;
}

void SwiftUICoverAnimationProvider.init()()
{
}

id SwiftUICoverAnimationProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUICoverAnimationProvider();
  return [super dealloc];
}

Swift::Void __swiftcall SwiftUICoverAnimationProvider.cardStackTransitioningCoverSourceReplaceReferenceView(_:)(UIView a1)
{
  int v3 = (double *)(v1 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame);
  if (!CGRectIsEmpty(*(CGRect *)(v1 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame)))
  {
    uint64_t v4 = OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView;
    -[objc_class convertRect:fromCoordinateSpace:](a1.super.super.isa, "convertRect:fromCoordinateSpace:", *(void *)(v1 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView), *v3, v3[1], v3[2], v3[3]);
    *(void *)int v3 = v5;
    *((void *)v3 + 1) = v6;
    *((void *)v3 + 2) = v7;
    *((void *)v3 + 3) = v8;
    id v10 = *(id *)(v1 + v4);
    *(UIView *)(v1 + v4) = a1;
    uint64_t v9 = a1.super.super.isa;
  }
}

uint64_t (*SwiftUICoverAnimationProvider.cardStackTransitioningCoverSourceHide()())()
{
  sub_63BAC(&qword_3CCAD8);
  sub_2E3290();
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  return sub_158E98;
}

uint64_t sub_158DFC()
{
  return sub_2E3290();
}

uint64_t sub_158E60()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_158E98()
{
  return sub_158DFC();
}

double _s11BookStoreUI29SwiftUICoverAnimationProviderC38cardStackTransitioningCoverSourceFrameSo6CGRectVvg_0()
{
  return *(double *)(v0 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame);
}

UIView __swiftcall SwiftUICoverAnimationProvider.coverAnimationSourceReferenceView()()
{
  return (UIView)objc_retain(*(id *)(v0
                                   + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView));
}

UIImage_optional __swiftcall SwiftUICoverAnimationProvider.coverAnimationSourceImage()()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_coverSourceImage);
  id v2 = v1;
  uint64_t v4 = (objc_class *)v1;
  result.value.super.Class isa = v4;
  result.is_nil = v3;
  return result;
}

UIView_optional __swiftcall SwiftUICoverAnimationProvider.coverAnimationSourceView()()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2E4A20();
  swift_bridgeObjectRelease();

  uint64_t v4 = (objc_class *)v2;
  result.value.super.super.Class isa = v4;
  result.is_nil = v3;
  return result;
}

Swift::Void __swiftcall SwiftUICoverAnimationProvider.coverAnimationSourcePrepare()()
{
}

Swift::Void __swiftcall SwiftUICoverAnimationProvider.coverAnimationSourceFinalize()()
{
}

double sub_1592FC@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  Swift::Bool v3 = (double *)(*a1
                + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_159350(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  Swift::Bool v3 = (void *)(*a2
                + OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset);
  uint64_t result = swift_beginAccess();
  *Swift::Bool v3 = v2;
  return result;
}

uint64_t method lookup function for SwiftUICoverAnimationProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SwiftUICoverAnimationProvider);
}

uint64_t dispatch thunk of SwiftUICoverAnimationProvider.__allocating_init(frame:image:imageViewIdentifier:referenceView:isInNonHorizontalLayout:isVisible:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of SwiftUICoverAnimationProvider.cardStackTransitioningCoverSourceExtraXOffset.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of SwiftUICoverAnimationProvider.cardStackTransitioningCoverSourceExtraXOffset.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of SwiftUICoverAnimationProvider.cardStackTransitioningCoverSourceExtraXOffset.modify()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t sub_159488(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_159498()
{
  return swift_release();
}

uint64_t JSABridge.perform<A, B>(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[48] = a6;
  v7[49] = v6;
  v7[46] = a4;
  v7[47] = a5;
  v7[44] = a2;
  v7[45] = a3;
  v7[43] = a1;
  uint64_t v9 = sub_2E4240();
  v7[50] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[51] = v10;
  v7[52] = *(void *)(v10 + 64);
  v7[53] = swift_task_alloc();
  v7[54] = swift_task_alloc();
  uint64_t v11 = sub_2E3960();
  v7[55] = v11;
  v7[56] = *(void *)(v11 - 8);
  v7[57] = swift_task_alloc();
  uint64_t v12 = sub_2E3B50();
  v7[58] = v12;
  v7[59] = *(void *)(v12 - 8);
  v7[60] = swift_task_alloc();
  v7[61] = swift_task_alloc();
  v7[62] = swift_task_alloc();
  v7[63] = swift_task_alloc();
  sub_63BAC(&qword_3CB900);
  v7[64] = swift_task_alloc();
  v7[65] = swift_task_alloc();
  v7[66] = swift_task_alloc();
  v7[67] = swift_task_alloc();
  v7[68] = swift_task_alloc();
  v7[69] = swift_task_alloc();
  sub_63BAC(&qword_3CB908);
  v7[70] = swift_task_alloc();
  uint64_t v13 = sub_2E4030();
  v7[71] = v13;
  v7[72] = *(void *)(v13 - 8);
  v7[73] = swift_task_alloc();
  v7[74] = swift_task_alloc();
  v7[75] = *(void *)(a5 - 8);
  v7[76] = swift_task_alloc();
  return _swift_task_switch(sub_1597DC, 0, 0);
}

uint64_t sub_1597DC()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 600) + 16))(*(void *)(v0 + 608), *(void *)(v0 + 352), *(void *)(v0 + 376));
  sub_63BAC(&qword_3CCB10);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 576);
    uint64_t v2 = *(void *)(v0 + 568);
    uint64_t v3 = *(void *)(v0 + 560);
    sub_1285DC((long long *)(v0 + 136), (_OWORD *)(v0 + 88));
    sub_2E3AF0();
    int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 576);
    uint64_t v7 = *(void *)(v0 + 568);
    uint64_t v8 = *(void *)(v0 + 560);
    if (v4 == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for PageIntentInstrumentation.notInstrumented(_:), v7);
      sub_662B4(v8, &qword_3CB908);
    }
    else
    {
      (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, *(void *)(v0 + 560), v7);
    }
    uint64_t v13 = v0 + 16;
    long long v14 = (void *)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 584);
    uint64_t v16 = *(void *)(v0 + 576);
    uint64_t v17 = *(void *)(v0 + 568);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 16))(v15, *(void *)(v0 + 592), v17);
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17);
    uint64_t v100 = v0 + 232;
    if (v18 == enum case for PageIntentInstrumentation.primaryData(_:))
    {
      uint64_t v19 = *(void *)(v0 + 584);
      uint64_t v20 = *(void *)(v0 + 552);
      uint64_t v22 = *(void *)(v0 + 464);
      uint64_t v21 = *(void *)(v0 + 472);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 576) + 96))(v19, *(void *)(v0 + 568));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v20, v19, v22);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
    }
    else
    {
      int v23 = v18;
      if (v18 == enum case for PageIntentInstrumentation.secondaryData(_:))
      {
        uint64_t v24 = *(void *)(v0 + 584);
        uint64_t v25 = *(void *)(v0 + 576);
        uint64_t v26 = *(void *)(v0 + 568);
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 472) + 56))(*(void *)(v0 + 552), 1, 1, *(void *)(v0 + 464));
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      }
      else
      {
        int v27 = enum case for PageIntentInstrumentation.notInstrumented(_:);
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 472) + 56))(*(void *)(v0 + 552), 1, 1, *(void *)(v0 + 464));
        if (v23 != v27) {
          (*(void (**)(void, void))(*(void *)(v0 + 576) + 8))(*(void *)(v0 + 584), *(void *)(v0 + 568));
        }
      }
    }
    uint64_t v28 = *(void *)(v0 + 544);
    uint64_t v29 = *(void *)(v0 + 464);
    uint64_t v30 = *(void *)(v0 + 472);
    sub_15AFCC(*(void *)(v0 + 552), v28);
    long long v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    *(void *)(v0 + 616) = v31;
    *(void *)(v0 + 624) = (v30 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    int v32 = v31(v28, 1, v29);
    uint64_t v33 = *(void *)(v0 + 544);
    if (v32 == 1)
    {
      sub_662B4(v33, &qword_3CB900);
      uint64_t v34 = v0 + 272;
      uint64_t v35 = v0 + 88;
    }
    else
    {
      (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 472) + 32))(*(void *)(v0 + 504), v33, *(void *)(v0 + 464));
      if (qword_3C6730 != -1) {
        swift_once();
      }
      uint64_t v36 = *(void *)(v0 + 504);
      uint64_t v37 = *(void *)(v0 + 464);
      uint64_t v38 = *(void *)(v0 + 472);
      uint64_t v39 = *(void *)(v0 + 448);
      uint64_t v40 = *(void *)(v0 + 456);
      uint64_t v41 = *(void *)(v0 + 440);
      uint64_t v42 = sub_63BAC(&qword_3CB920);
      sub_58BA0(v42, (uint64_t)qword_3EE1E8);
      sub_2E3B40();
      sub_2E3950();
      sub_2E3B70();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      uint64_t v13 = v0 + 16;
      uint64_t v35 = v0 + 88;
      long long v14 = (void *)(v0 + 184);
      uint64_t v34 = v0 + 272;
    }
    uint64_t v43 = *(void *)(v0 + 552);
    uint64_t v44 = *(void *)(v0 + 536);
    uint64_t v46 = *(void *)(v0 + 424);
    uint64_t v45 = *(void *)(v0 + 432);
    uint64_t v47 = *(void *)(v0 + 408);
    uint64_t v98 = *(void *)(v0 + 416);
    uint64_t v48 = *(void *)(v0 + 400);
    sub_15B034(v35, (uint64_t)v14);
    sub_15AFCC(v43, v44);
    sub_15B098(v14, v44, v13);
    uint64_t v99 = v45;
    sub_2E4210();
    *(void *)(v0 + 256) = &_s15DecoratedIntentVN;
    *(void *)(v0 + 264) = sub_15B2A8();
    uint64_t v49 = swift_allocObject();
    *(void *)(v0 + 232) = v49;
    sub_15B344(v13, v49 + 16);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v46, v45, v48);
    uint64_t v51 = (long long *)v34;
    sub_66310(v100, v34);
    unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v53 = (v98 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v47 + 32))(v54 + v52, v46, v48);
    sub_65CF4(v51, v54 + v53);
    *(void *)(v54 + ((v53 + 47) & 0xFFFFFFFFFFFFFFF8)) = v50;
    swift_retain();
    sub_2E4AE0();
    swift_release();
    swift_beginAccess();
    uint64_t v55 = *(void *)(v50 + 16);
    *(void *)(v0 + 632) = v55;
    swift_retain();
    swift_release();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v100);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v99, v48);
    if (v55)
    {
      swift_retain();
      uint64_t v56 = sub_63BAC(&qword_3CCB30);
      unint64_t v57 = sub_15CEA4();
      uint64_t v58 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v58;
      *uint64_t v58 = v0;
      v58[1] = sub_15A5EC;
      return dispatch thunk of Future.then()(v0 + 336, v56, v57);
    }
    int v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 616);
    uint64_t v60 = *(void *)(v0 + 528);
    uint64_t v61 = *(void *)(v0 + 464);
    sub_15AFCC(*(void *)(v0 + 552), v60);
    if (v59(v60, 1, v61) == 1)
    {
      sub_662B4(*(void *)(v0 + 528), &qword_3CB900);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 472) + 32))(*(void *)(v0 + 496), *(void *)(v0 + 528), *(void *)(v0 + 464));
      if (qword_3C6730 != -1) {
        swift_once();
      }
      uint64_t v62 = *(void *)(v0 + 496);
      uint64_t v63 = *(void *)(v0 + 464);
      uint64_t v64 = *(void *)(v0 + 472);
      uint64_t v66 = *(void *)(v0 + 448);
      uint64_t v65 = *(void *)(v0 + 456);
      uint64_t v67 = *(void *)(v0 + 440);
      uint64_t v68 = sub_63BAC(&qword_3CB920);
      sub_58BA0(v68, (uint64_t)qword_3EE1E8);
      sub_2E3B40();
      sub_2E3950();
      sub_2E3B60();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
    }
    char v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 616);
    uint64_t v70 = *(void *)(v0 + 520);
    uint64_t v71 = *(void *)(v0 + 464);
    sub_15AFCC(*(void *)(v0 + 552), v70);
    if (v69(v70, 1, v71) == 1)
    {
      sub_662B4(*(void *)(v0 + 520), &qword_3CB900);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 472) + 32))(*(void *)(v0 + 488), *(void *)(v0 + 520), *(void *)(v0 + 464));
      if (qword_3C6738 != -1) {
        swift_once();
      }
      uint64_t v72 = *(void *)(v0 + 488);
      uint64_t v73 = *(void *)(v0 + 464);
      uint64_t v74 = *(void *)(v0 + 472);
      uint64_t v76 = *(void *)(v0 + 448);
      uint64_t v75 = *(void *)(v0 + 456);
      uint64_t v77 = *(void *)(v0 + 440);
      uint64_t v78 = sub_63BAC(&qword_3CB920);
      sub_58BA0(v78, (uint64_t)qword_3EE200);
      sub_2E3B40();
      sub_2E3950();
      sub_2E3B70();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
    }
    uint64_t v79 = *(void *)(v0 + 376);
    uint64_t v81 = *(void *)(v0 + 360);
    uint64_t v80 = *(void *)(v0 + 368);
    uint64_t v82 = *(void *)(v0 + 344);
    swift_getDynamicType();
    uint64_t v83 = sub_15B3B4(v82, 0, v81, v79, v80);
    uint64_t v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 616);
    uint64_t v85 = *(void *)(v0 + 512);
    uint64_t v86 = *(void *)(v0 + 464);
    sub_15AFCC(*(void *)(v0 + 552), v85);
    if (v84(v85, 1, v86) == 1)
    {
      sub_662B4(*(void *)(v0 + 512), &qword_3CB900);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 472) + 32))(*(void *)(v0 + 480), *(void *)(v0 + 512), *(void *)(v0 + 464));
      if (qword_3C6738 != -1) {
        swift_once();
      }
      uint64_t v88 = *(void *)(v0 + 472);
      uint64_t v87 = *(void *)(v0 + 480);
      uint64_t v89 = *(void *)(v0 + 456);
      uint64_t v101 = *(void *)(v0 + 464);
      uint64_t v91 = *(void *)(v0 + 440);
      uint64_t v90 = *(void *)(v0 + 448);
      uint64_t v92 = sub_63BAC(&qword_3CB920);
      sub_58BA0(v92, (uint64_t)qword_3EE200);
      sub_2E3B40();
      sub_2E3950();
      sub_2E3B60();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v101);
    }
    uint64_t v93 = *(void *)(v0 + 592);
    uint64_t v94 = *(void *)(v0 + 576);
    uint64_t v95 = *(void *)(v0 + 568);
    uint64_t v96 = *(void *)(v0 + 552);
    v97._rawValue = v83;
    sub_2E4020(v97);
    swift_bridgeObjectRelease();
    swift_release();
    sub_15C94C(v0 + 16);
    sub_662B4(v96, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 88);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    sub_662B4(v0 + 136, &qword_3CCB18);
    uint64_t v9 = sub_2E3DF0();
    sub_15D134(&qword_3CCB20, (void (*)(uint64_t))&type metadata accessor for IntentDispatcherError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, enum case for IntentDispatcherError.unsupported(_:), v9);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v11();
}

uint64_t sub_15A5EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_15AE1C;
  }
  else
  {
    *(void *)(v2 + 656) = *(void *)(v2 + 336);
    uint64_t v3 = sub_15A728;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_15A728()
{
  uint64_t v1 = (void *)v0[82];
  uint64_t v55 = v0[81];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[77];
  uint64_t v3 = v0[66];
  uint64_t v4 = v0[58];
  sub_15AFCC(v0[69], v3);
  int v5 = v2(v3, 1, v4);
  uint64_t v6 = v0[66];
  if (v5 == 1)
  {
    sub_662B4(v6, &qword_3CB900);
  }
  else
  {
    (*(void (**)(void, uint64_t, void))(v0[59] + 32))(v0[62], v6, v0[58]);
    if (qword_3C6730 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[62];
    uint64_t v8 = v0[58];
    uint64_t v9 = v0[59];
    uint64_t v10 = v0[56];
    uint64_t v11 = v0[57];
    uint64_t v12 = v0[55];
    uint64_t v13 = sub_63BAC(&qword_3CB920);
    sub_58BA0(v13, (uint64_t)qword_3EE1E8);
    sub_2E3B40();
    sub_2E3950();
    sub_2E3B60();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v14 = (uint64_t)(v0 + 2);
  uint64_t v15 = (uint64_t)(v0 + 11);
  uint64_t v16 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[77];
  uint64_t v17 = v0[65];
  uint64_t v18 = v0[58];
  sub_15AFCC(v0[69], v17);
  if (v16(v17, 1, v18) == 1)
  {
    sub_662B4(v0[65], &qword_3CB900);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[59] + 32))(v0[61], v0[65], v0[58]);
    if (qword_3C6738 != -1) {
      swift_once();
    }
    uint64_t v19 = v0[61];
    uint64_t v21 = v0[58];
    uint64_t v20 = v0[59];
    uint64_t v23 = v0[56];
    uint64_t v22 = v0[57];
    uint64_t v24 = v0[55];
    uint64_t v25 = sub_63BAC(&qword_3CB920);
    sub_58BA0(v25, (uint64_t)qword_3EE200);
    sub_2E3B40();
    sub_2E3950();
    sub_2E3B70();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v14 = (uint64_t)(v0 + 2);
    uint64_t v15 = (uint64_t)(v0 + 11);
  }
  uint64_t v26 = v0[47];
  uint64_t v28 = v0[45];
  uint64_t v27 = v0[46];
  uint64_t v29 = v0[43];
  swift_getDynamicType();
  uint64_t v30 = sub_15B3B4(v29, (uint64_t)v1, v28, v26, v27);
  if (v55)
  {
    uint64_t v31 = v0[74];
    uint64_t v32 = v0[72];
    uint64_t v33 = v0[71];
    uint64_t v34 = v0[69];

    swift_release();
    sub_15C94C(v14);
    sub_662B4(v34, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v36 = v30;
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[77];
    uint64_t v38 = v0[64];
    uint64_t v39 = v0[58];
    sub_15AFCC(v0[69], v38);
    int v40 = v37(v38, 1, v39);
    uint64_t v41 = v0[64];
    uint64_t v54 = v14;
    if (v40 == 1)
    {
      sub_662B4(v41, &qword_3CB900);
    }
    else
    {
      (*(void (**)(void, uint64_t, void))(v0[59] + 32))(v0[60], v41, v0[58]);
      if (qword_3C6738 != -1) {
        swift_once();
      }
      uint64_t v43 = v0[59];
      uint64_t v42 = v0[60];
      uint64_t v44 = v0[57];
      uint64_t v56 = v0[58];
      uint64_t v46 = v0[55];
      uint64_t v45 = v0[56];
      uint64_t v47 = sub_63BAC(&qword_3CB920);
      sub_58BA0(v47, (uint64_t)qword_3EE200);
      sub_2E3B40();
      sub_2E3950();
      sub_2E3B60();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v56);
    }
    uint64_t v48 = v0[74];
    uint64_t v49 = v0[72];
    uint64_t v50 = v0[71];
    uint64_t v51 = v0[69];
    v52._rawValue = v36;
    sub_2E4020(v52);

    swift_bridgeObjectRelease();
    swift_release();
    sub_15C94C(v54);
    sub_662B4(v51, &qword_3CB900);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
  }
  return v35();
}

uint64_t sub_15AE1C()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[72];
  uint64_t v3 = v0[71];
  uint64_t v4 = v0[69];
  swift_release();
  sub_15C94C((uint64_t)(v0 + 2));
  sub_662B4(v4, &qword_3CB900);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 11));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_15AFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3CB900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15B034(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_15B098@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_63BAC(&qword_3CB900);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  long long v19 = *(_OWORD *)(a1 + 3);
  uint64_t v9 = v19;
  uint64_t v10 = sub_71044(a1, v19);
  long long v21 = v19;
  uint64_t v11 = sub_71088(v20);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v11, v10, v9);
  sub_71044(a1, a1[3]);
  uint64_t v22 = sub_2E37A0();
  uint64_t v23 = v12;
  sub_15AFCC(a2, (uint64_t)v8);
  uint64_t v13 = sub_2E3B50();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_662B4(a2, &qword_3CB900);
    sub_662B4((uint64_t)v8, &qword_3CB900);
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v15 = sub_2E3B40();
    uint64_t v16 = v17;
    sub_662B4(a2, &qword_3CB900);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  sub_15B344((uint64_t)v20, a3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  return sub_15C94C((uint64_t)v20);
}

unint64_t sub_15B2A8()
{
  unint64_t result = qword_3CCB28;
  if (!qword_3CCB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCB28);
  }
  return result;
}

uint64_t sub_15B2FC()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_15B344(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_15B37C()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

char *sub_15B3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v69 = a3;
  uint64_t v65 = a1;
  uint64_t v8 = sub_2E4B10();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  __chkstk_darwin(v8);
  uint64_t v62 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v60 - v11;
  uint64_t v12 = sub_63BAC(&qword_3CCB60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2E3890();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v75 = (char *)&v60 - v20;
  uint64_t v21 = sub_63BAC(&qword_3CCB68);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2E3720();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v31 = __chkstk_darwin(v27);
  if (a2)
  {
    uint64_t v70 = (char *)&v60 - v29;
    uint64_t v67 = v30;
    uint64_t v68 = v28;
    sub_2E4A40();
    if (!v5)
    {
      uint64_t v32 = v67;
      uint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56);
      uint64_t v61 = v15;
      uint64_t v34 = v16;
      uint64_t v35 = v68;
      v33(v23, 0, 1, v68);
      uint64_t v36 = v35;
      uint64_t v37 = v34;
      uint64_t v38 = v61;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v70, v23, v36);
      sub_2E3AF0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v38) == 1)
      {
        sub_2E3880();
        sub_662B4((uint64_t)v14, &qword_3CCB60);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v75, v14, v38);
      }
      uint64_t v41 = a5;
      uint64_t v69 = sub_2E4050();
      uint64_t v42 = swift_conformsToProtocol2();
      if (v42) {
        uint64_t v43 = v42;
      }
      else {
        uint64_t v43 = 0;
      }
      if (v42) {
        uint64_t v44 = a5;
      }
      else {
        uint64_t v44 = 0;
      }
      if (v44)
      {
        uint64_t v73 = v44;
        uint64_t v74 = v43;
        sub_71088(v72);
        uint64_t v18 = v75;
        sub_2E36F0();
        sub_66310((uint64_t)v72, (uint64_t)v71);
        sub_63BAC(&qword_3CCB88);
        uint64_t v48 = v66;
        int v49 = swift_dynamicCast();
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
        if (v49)
        {
          uint64_t v51 = *(void *)(v41 - 8);
          v50(v48, 0, 1, v41);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v68);
          (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v65, v48, v41);
          _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v72);
          return (char *)v69;
        }
        v50(v48, 1, 1, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
        sub_15D1D0();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
      }
      else
      {
        uint64_t v45 = swift_conformsToProtocol2();
        if (v45) {
          uint64_t v46 = v45;
        }
        else {
          uint64_t v46 = 0;
        }
        if (v45) {
          uint64_t v47 = a5;
        }
        else {
          uint64_t v47 = 0;
        }
        if (!v47)
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = sub_2E42B0();
          sub_15D134(&qword_3CCB70, (void (*)(uint64_t))&type metadata accessor for JSONError);
          swift_allocError();
          *unint64_t v53 = a5;
          v53[1] = _swiftEmptyArrayStorage;
          (*(void (**)(void *, void, uint64_t))(*(void *)(v52 - 8) + 104))(v53, enum case for JSONError.malformedDocument(_:), v52);
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v75, v38);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v68);
          return v18;
        }
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v26, v70, v68);
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v18, v75, v38);
        uint64_t v73 = v47;
        uint64_t v74 = v46;
        sub_71088(v72);
        sub_2E3C70();
        sub_66310((uint64_t)v72, (uint64_t)v71);
        sub_63BAC(&qword_3CCB78);
        uint64_t v54 = v62;
        int v55 = swift_dynamicCast();
        uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56);
        uint64_t v57 = v75;
        uint64_t v18 = (char *)v69;
        if (v55)
        {
          uint64_t v58 = *(void *)(v41 - 8);
          v56(v54, 0, 1, v41);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v57, v61);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v68);
          (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v65, v54, v41);
          _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v72);
          return v18;
        }
        v56(v54, 1, 1, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v64);
        sub_15D1D0();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v57, v61);
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v68);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v72);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 56))(v23, 1, 1, v31);
    sub_662B4((uint64_t)v23, &qword_3CCB68);
    uint64_t v39 = sub_2E42B0();
    sub_15D134(&qword_3CCB70, (void (*)(uint64_t))&type metadata accessor for JSONError);
    swift_allocError();
    *int v40 = a5;
    v40[1] = _swiftEmptyArrayStorage;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v40, enum case for JSONError.malformedDocument(_:), v39);
    swift_willThrow();
  }
  return v18;
}

void sub_15BD98(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v58 = a4;
  uint64_t v62 = a3;
  uint64_t v6 = sub_2E4240();
  uint64_t v66 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v56 - v9;
  uint64_t v10 = sub_63BAC(&qword_3CCB90);
  __chkstk_darwin(v10 - 8);
  int v59 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E42D0();
  Class isa = v12[-1].isa;
  os_log_t v61 = v12;
  __chkstk_darwin(v12);
  uint64_t v57 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_63BAC(&qword_3CCB98);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2E36B0();
  uint64_t v63 = *(void *)(v17 - 8);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = [a1 globalObject];
  if (v21)
  {
    uint64_t v22 = v21;
    sub_2E4220();
    uint64_t v23 = (void *)sub_2E4A70();
    swift_bridgeObjectRelease();

    if ([v23 isObject])
    {
      sub_2E4230();
      sub_2E4A70();
      swift_bridgeObjectRelease();
      v67[3] = sub_2E3CD0();
      v67[4] = (uint64_t)&protocol witness table for JSStrongReference;
      sub_71088(v67);
      sub_2E3CE0();
      sub_2E36C0();
      uint64_t v24 = v63;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v17) == 1)
      {
        sub_662B4((uint64_t)v16, &qword_3CCB98);
        sub_2E4230();
        sub_2E4A70();
        swift_bridgeObjectRelease();
        sub_2E4200();
        sub_15D134(&qword_3CCBA0, (void (*)(uint64_t))&type metadata accessor for JSError);
        swift_allocError();
        sub_2E41E0();
        swift_willThrow();
      }
      else
      {
        uint64_t v56 = a2;
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v16, v17);
        sub_63BAC(&qword_3C7000);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_2FEFE0;
        sub_71044(v62, v62[3]);
        uint64_t v27 = sub_2E3FF0();
        *(void *)(v26 + 56) = sub_63BF0(0, (unint64_t *)&qword_3CCB58);
        *(void *)(v26 + 32) = v27;
        v28.super.Class isa = (Class)v23;
        v29._rawValue = (void *)v26;
        Class v30 = sub_2E36A0(v28, v29).super.isa;
        swift_bridgeObjectRelease();
        __n128 v31 = v30;
        uint64_t v32 = (uint64_t)v59;
        sub_2E42E0();
        Class v34 = isa;
        os_log_t v33 = v61;
        int v35 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))isa + 6))(v32, 1, v61);
        a2 = v56;
        if (v35 != 1)
        {
          unint64_t v53 = v57;
          uint64_t v54 = (uint64_t *)(v58 + 16);
          (*((void (**)(char *, uint64_t, os_log_t))v34 + 4))(v57, v32, v33);
          uint64_t v55 = sub_2E42C0();

          (*((void (**)(char *, os_log_t))v34 + 1))(v53, v33);
          (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v17);
          swift_beginAccess();
          *uint64_t v54 = v55;
          swift_release();
          return;
        }
        sub_662B4(v32, &qword_3CCB90);
        sub_2E4200();
        sub_15D134(&qword_3CCBA0, (void (*)(uint64_t))&type metadata accessor for JSError);
        swift_allocError();
        uint64_t v36 = v31;
        sub_2E41E0();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v17);
      }
    }
    else
    {
      sub_2E4200();
      sub_15D134(&qword_3CCBA0, (void (*)(uint64_t))&type metadata accessor for JSError);
      swift_allocError();
      id v25 = v23;
      sub_2E41E0();
      swift_willThrow();
    }
    uint64_t v38 = v65;
    uint64_t v37 = v66;
    uint64_t v39 = v64;
    if (qword_3C65C0 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_2DF850();
    sub_58BA0(v40, (uint64_t)qword_3CD210);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v41(v39, a2, v6);
    v41(v38, a2, v6);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v42 = sub_2DF830();
    os_log_type_t v43 = sub_2E48F0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v62 = (void *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v67[0] = v63;
      *(_DWORD *)uint64_t v44 = 136315650;
      os_log_t v61 = v42;
      uint64_t v45 = sub_2E4220();
      uint64_t v68 = sub_5F150(v45, v46, v67);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v37 + 8);
      v47(v39, v6);
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v48 = sub_2E4230();
      uint64_t v68 = sub_5F150(v48, v49, v67);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      v47(v38, v6);
      *(_WORD *)(v44 + 22) = 2112;
      swift_errorRetain();
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v68 = v50;
      sub_2E4B40();
      *uint64_t v62 = v50;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v51 = v61;
      _os_log_impl(&dword_0, v61, v43, "performRawCall to %s.%s failed with error: %@", (uint8_t *)v44, 0x20u);
      sub_63BAC(&qword_3D20E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v37 + 8);
      v52(v39, v6);
      v52(v38, v6);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_15C7E8()
{
  uint64_t v1 = sub_2E4240();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + v6);
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_15C8A4(void *a1)
{
  uint64_t v3 = *(void *)(sub_2E4240() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8));

  sub_15BD98(a1, v1 + v4, (void *)(v1 + v5), v6);
}

uint64_t sub_15C94C(uint64_t a1)
{
  return a1;
}

void sub_15C97C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = v2;
  sub_71044(v2, v2[3]);
  uint64_t v7 = sub_2E3FF0();
  if (!v3)
  {
    uint64_t v8 = v7;
    v21._countAndFlagsBits = 0x646E696B24;
    v21._object = (void *)0xE500000000000000;
    if (!sub_2E4A60(v21))
    {
      uint64_t v17 = v4[5];
      uint64_t v19 = v4[6];
      swift_bridgeObjectRetain();
      id v9 = a1;
      uint64_t v10 = sub_2E50C0();
      id v11 = [self valueWithObject:v10 inContext:v9];
      swift_unknownObjectRelease();

      if (!v11)
      {
        __break(1u);
        goto LABEL_13;
      }
      sub_2E4A80();
    }
    uint64_t v12 = v4[8];
    if (!v12)
    {
LABEL_10:
      a2[3] = sub_63BF0(0, (unint64_t *)&qword_3CCB58);
      a2[4] = (uint64_t)&protocol witness table for JSValue;
      *a2 = v8;
      return;
    }
    uint64_t v13 = v4[7];
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = 0x6E65526567617024;
    v22._object = (void *)0xED00004449726564;
    if (sub_2E4A60(v22))
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    uint64_t v18 = v13;
    uint64_t v20 = v12;
    id v14 = a1;
    uint64_t v15 = sub_2E50C0();
    id v16 = [self valueWithObject:v15 inContext:v14, v18, v20];
    swift_unknownObjectRelease();

    if (v16)
    {
      sub_2E4A80();
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
  }
}

void sub_15CB90(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_15CBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_8BBE0;
  return JSABridge.perform<A, B>(_:asPartOf:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_15CC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  void *v15 = v7;
  v15[1] = sub_6E3CC;
  return CustomIntentDispatcher.dispatcher<A, B>(for:asPartOf:)(a1, a2, a3, a7, a4, a5, WitnessTable, a6);
}

uint64_t sub_15CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  void *v13 = v6;
  v13[1] = sub_8BBE0;
  return CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(a1, a2, a3, a6, a4, WitnessTable, a5);
}

uint64_t sub_15CE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return IntentDispatcher.dispatch<A>(intent:jsonContext:)(a1, a2, a5, a3, a6, a4);
}

unint64_t sub_15CEA4()
{
  unint64_t result = qword_3CCB38[0];
  if (!qword_3CCB38[0])
  {
    sub_70ECC(&qword_3CCB30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_3CCB38);
  }
  return result;
}

uint64_t _s15DecoratedIntentVwxx(uint64_t a1)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s15DecoratedIntentVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s15DecoratedIntentVwca(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15DecoratedIntentVwta(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15DecoratedIntentVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15DecoratedIntentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15DecoratedIntentVMa()
{
  return &_s15DecoratedIntentVN;
}

uint64_t sub_15D134(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15D17C(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

unint64_t sub_15D1D0()
{
  unint64_t result = qword_3CCB80;
  if (!qword_3CCB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCB80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IntentModelError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x15D2C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentModelError()
{
  return &type metadata for IntentModelError;
}

unint64_t sub_15D2FC()
{
  unint64_t result = qword_3CCBA8;
  if (!qword_3CCBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCBA8);
  }
  return result;
}

unint64_t static JSShelfPaginationIntent.kind.getter()
{
  return 0xD000000000000017;
}

uint64_t JSShelfPaginationIntent.offset.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t JSShelfPaginationIntent.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JSShelfPaginationIntent() + 28);
  uint64_t v4 = sub_2E3720();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for JSShelfPaginationIntent()
{
  uint64_t result = qword_3CCC18;
  if (!qword_3CCC18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void JSShelfPaginationIntent.jsRepresentation(in:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_63BAC(&qword_3CCBB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSShelfPaginationIntent();
  sub_2E36D0();
  uint64_t v9 = sub_2E3A40();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_15D6FC((uint64_t)v8);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = sub_2E3A30();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  sub_63BAC(&qword_3CE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_304420;
  *(void *)(inited + 32) = 0x4449666C656873;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v13 = v3[1];
  *(void *)(inited + 48) = *v3;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x666572487478656ELL;
  *(void *)(inited + 88) = 0xE800000000000000;
  uint64_t v14 = v3[3];
  *(void *)(inited + 96) = v3[2];
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x74657366666FLL;
  *(void *)(inited + 136) = 0xE600000000000000;
  *(void *)(inited + 144) = v3[4];
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 176) = 0x747865746E6F63;
  *(void *)(inited + 184) = 0xE700000000000000;
  *(void *)(inited + 216) = sub_63BAC(&qword_3CCBB8);
  *(void *)(inited + 192) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18[31] = sub_59660(inited);
  id v15 = a1;
  sub_63BAC(&qword_3C8670);
  uint64_t v16 = sub_2E50C0();
  id v17 = [self valueWithObject:v16 inContext:v15];
  swift_unknownObjectRelease();

  if (v17)
  {
    a2[3] = sub_15D75C();
    a2[4] = &protocol witness table for JSValue;
    *a2 = v17;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_15D6FC(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CCBB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_15D75C()
{
  unint64_t result = qword_3CCB58;
  if (!qword_3CCB58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3CCB58);
  }
  return result;
}

void sub_15D79C(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000000305FB0;
}

void sub_15D7BC(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for JSShelfPaginationIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_2E3720();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for JSShelfPaginationIntent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_2E3720();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for JSShelfPaginationIntent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2E3720();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for JSShelfPaginationIntent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2E3720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for JSShelfPaginationIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_2E3720();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for JSShelfPaginationIntent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2E3720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSShelfPaginationIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15DC04);
}

uint64_t sub_15DC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2E3720();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for JSShelfPaginationIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15DCC8);
}

uint64_t sub_15DCC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2E3720();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_15DD70()
{
  uint64_t result = sub_2E3720();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewPageIntent()
{
  return &type metadata for YearInReviewPageIntent;
}

uint64_t sub_15DE28()
{
  return 1918985593;
}

uint64_t sub_15DE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2E5020();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_15DEC0(uint64_t a1)
{
  unint64_t v2 = sub_15E1E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15DEFC(uint64_t a1)
{
  unint64_t v2 = sub_15E1E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_15DF38(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000000306090;
}

uint64_t sub_15DF58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3CCC58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_15E1E8();
  sub_2E5220();
  if (v2) {
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_2E4F00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  *a2 = v9;
  return result;
}

uint64_t sub_15E0B4(void *a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CCC68);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_15E1E8();
  sub_2E5230();
  sub_2E4F90();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_15E1E8()
{
  unint64_t result = qword_3CCC60;
  if (!qword_3CCC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCC60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YearInReviewPageIntent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x15E2D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewPageIntent.CodingKeys()
{
  return &type metadata for YearInReviewPageIntent.CodingKeys;
}

unint64_t sub_15E314()
{
  unint64_t result = qword_3CCC70;
  if (!qword_3CCC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCC70);
  }
  return result;
}

unint64_t sub_15E36C()
{
  unint64_t result = qword_3CCC78;
  if (!qword_3CCC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCC78);
  }
  return result;
}

unint64_t sub_15E3C4()
{
  unint64_t result = qword_3CCC80;
  if (!qword_3CCC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCC80);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSActionImplementation()
{
  return &type metadata for JSActionImplementation;
}

uint64_t sub_15E428()
{
  return sub_15EE20(&qword_3C80D0);
}

id sub_15E45C(objc_class *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2E3920();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CCB90);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSAction();
  sub_15EE20(&qword_3CCC88);
  v12.super.Class isa = a1;
  v13.super.Class isa = sub_2E4000(v12).super.isa;
  v27[1] = a3;
  id result = [(objc_class *)a1 globalObject];
  if (result)
  {
    id v15 = result;
    uint64_t v16 = (void *)sub_2E4A70();

    NSString v17 = sub_2E43E0();
    sub_63BAC(&qword_3C7000);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_2FEFE0;
    *(void *)(v18 + 56) = sub_63BF0(0, (unint64_t *)&qword_3CCB58);
    *(JSValue *)(v18 + 32) = v13;
    uint64_t v19 = v13.super.isa;
    Class isa = sub_2E4630().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [v16 invokeMethod:v17 withArguments:isa];

    if (!v21)
    {
LABEL_5:
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ActionOutcome.unsupported(_:), v5);
      sub_2E4280();

      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    id v22 = v21;
    sub_2E42E0();
    uint64_t v23 = sub_2E42D0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1)
    {

      sub_15EE64((uint64_t)v11);
      goto LABEL_5;
    }
    sub_2E42C0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
    uint64_t v25 = sub_63BF0(0, (unint64_t *)&qword_3C7CF8);
    swift_retain_n();
    uint64_t v26 = sub_2E4970();
    v28[3] = v25;
    v28[4] = &protocol witness table for OS_dispatch_queue;
    v28[0] = v26;
    sub_2E4250();

    swift_release();
    swift_release_n();
    return (id)_s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_15E894()
{
  uint64_t v0 = sub_2E3920();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = sub_2E4A50();
  uint64_t v5 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
  if (v4) {
    uint64_t v5 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *v5, v0);
  sub_2E4280();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_15E9A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSAction();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_63BAC(&qword_3C8908);
  uint64_t v5 = sub_2E42A0();
  id v6 = [self sharedInstance];
  sub_15EB24(a1, (uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_15ED20((uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *(void *)(v8 + ((v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_2E4AE0();
  swift_release();

  return v5;
}

uint64_t sub_15EB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15EB88()
{
  uint64_t v1 = (int *)(type metadata accessor for JSAction() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_2E3910();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[9];
  uint64_t v7 = sub_2DE8E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_15ED20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_15ED84(objc_class *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for JSAction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_15E45C(a1, v1 + v4, v5);
}

uint64_t sub_15EE20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for JSAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15EE64(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CCB90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15EEC4()
{
  return sub_15E894();
}

uint64_t View.pageNamespace()()
{
  return sub_2E2EE0();
}

uint64_t PageNamespace.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t PageNamespace.wrappedValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 9);
  sub_12075C(*(void *)v0, v2, *(unsigned char *)(v0 + 9));
  uint64_t v4 = sub_87750(v1, v2 | (v3 << 8));
  char v6 = v5;
  sub_881C4(v1, v2, v3);
  if ((v6 & 1) == 0) {
    return v4;
  }
  if (qword_3C65E8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2DF850();
  sub_58BA0(v8, (uint64_t)qword_3CD288);
  uint64_t v9 = sub_2DF830();
  os_log_type_t v10 = sub_2E4900();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    swift_slowDealloc();
  }

  return sub_2E34D0();
}

void sub_15F0A0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_15F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_15F6FC();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_15F114()
{
  sub_15F5D0();
  sub_2E2050();
  return v1;
}

uint64_t sub_15F154@<X0>(uint64_t a1@<X8>)
{
  sub_15F5D0();
  uint64_t result = sub_2E2050();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_15F1AC@<X0>(uint64_t a1@<X8>)
{
  sub_15F5D0();
  uint64_t result = sub_2E2050();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_15F204()
{
  return sub_2E2060();
}

uint64_t sub_15F258()
{
  return sub_2E2060();
}

uint64_t sub_15F2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_2E34D0();
  uint64_t v6 = sub_63BAC(&qword_3CCC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t result = sub_63BAC(&qword_3CCC98);
  uint64_t v8 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v8 = KeyPath;
  *(void *)(v8 + 8) = v5;
  *(unsigned char *)(v8 + 16) = 0;
  return result;
}

uint64_t destroy for PageNamespace(uint64_t a1)
{
  return sub_881C4(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
}

uint64_t _s11BookStoreUI13PageNamespaceVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 8);
  sub_12075C(*(void *)a2, v6, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for PageNamespace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 8);
  sub_12075C(*(void *)a2, v6, v5);
  uint64_t v7 = *(void *)a1;
  char v8 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v4;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v5;
  sub_881C4(v7, v9, v8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PageNamespace(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 9) = v5;
  sub_881C4(v6, v8, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageNamespace(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageNamespace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageNamespace()
{
  return &type metadata for PageNamespace;
}

uint64_t sub_15F540()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PageNamespaceViewModifier()
{
  return &type metadata for PageNamespaceViewModifier;
}

uint64_t sub_15F5B4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_15F5D0()
{
  unint64_t result = qword_3CCCA0;
  if (!qword_3CCCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCCA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PageNamespaceKey()
{
  return &type metadata for PageNamespaceKey;
}

unint64_t sub_15F638()
{
  unint64_t result = qword_3CCCA8;
  if (!qword_3CCCA8)
  {
    sub_70ECC(&qword_3CCC98);
    sub_71AA4(&qword_3CCCB0, &qword_3CCC90);
    sub_71AA4(&qword_3CCCB8, &qword_3CCCC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCCA8);
  }
  return result;
}

unint64_t sub_15F6FC()
{
  unint64_t result = qword_3CCCC8;
  if (!qword_3CCCC8)
  {
    sub_70ECC(&qword_3CCCD0);
    sub_15F770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCCC8);
  }
  return result;
}

unint64_t sub_15F770()
{
  unint64_t result = qword_3CCCD8;
  if (!qword_3CCCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCCD8);
  }
  return result;
}

uint64_t initializeWithCopy for BooksFinishedFrameFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BooksFinishedFrameFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for BooksFinishedFrameFactory(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BooksFinishedFrameFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksFinishedFrameFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksFinishedFrameFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksFinishedFrameFactory()
{
  return &type metadata for BooksFinishedFrameFactory;
}

uint64_t sub_15FA2C()
{
  uint64_t v1 = sub_63BAC(&qword_3C8EF8);
  __chkstk_darwin(v1 - 8);
  uint64_t v73 = (char *)v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_63BAC(&qword_3C8F00);
  __chkstk_darwin(v3 - 8);
  uint64_t v72 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2DE3F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_2DDF10();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2DFB40();
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = (uint64_t *)sub_2E02A0();
  uint64_t v10 = *(v76 - 1);
  __chkstk_darwin(v76);
  JSContext v12 = (double *)((char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_2E02C0();
  uint64_t v13 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *v0;
  long long v15 = *(_OWORD *)(v0 + 1);
  uint64_t v60 = v0[3];
  int v59 = *((unsigned __int8 *)v0 + 32);
  uint64_t v68 = v0[5];
  uint64_t v67 = v0[6];
  uint64_t v66 = v0[7];
  uint64_t v65 = v0[8];
  uint64_t v16 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v89 = _swiftEmptyArrayStorage;
  long long v69 = v15;
  uint64_t v19 = v15;
  uint64_t v20 = *(void *)(v15 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20)
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v27 = v26[2];
    v58[1] = v26;
    v58[0] = v27;
    if (v27 >= 3)
    {
      double v38 = 192.0;
    }
    else
    {
      id v28 = [self mainScreen];
      [v28 bounds];
      CGFloat v30 = v29;
      CGFloat v32 = v31;
      CGFloat v34 = v33;
      CGFloat v36 = v35;

      v90.origin.x = v30;
      v90.origin.y = v32;
      v90.size.width = v34;
      v90.size.height = v36;
      double Height = CGRectGetHeight(v90);
      if (!v27)
      {
LABEL_24:
        uint64_t v46 = v64;
        uint64_t v47 = v63;
        uint64_t v48 = v62;
        uint64_t v49 = v61;
        uint64_t v50 = v60;
        char v51 = v59;
        LODWORD(v77) = v58[0] < 3uLL;
        sub_63BAC(&qword_3C7118);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_2FEFE0;
        uint64_t v76 = (uint64_t *)(v52 + 32);
        sub_2DDF00();
        uint64_t v75 = sub_1EAB00(v49, v48);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
        uint64_t v78 = v49;
        long long v79 = v69;
        uint64_t v80 = v50;
        LOBYTE(v81) = v51;
        uint64_t v82 = v68;
        uint64_t v83 = v67;
        uint64_t v84 = v66;
        uint64_t v85 = v65;
        uint64_t v86 = v16;
        uint64_t v87 = v17;
        sub_1603A8();
        uint64_t v53 = enum case for FrameName.booksFinished(_:);
        uint64_t v54 = sub_2DE910();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 104))(v72, v53, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v54);
        uint64_t v57 = sub_2DE1E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v73, 1, 1, v57);
        swift_release();
        sub_2DE3E0();
        sub_2DFB30();
        *(void *)(v52 + 56) = sub_2DFAD0();
        *(void *)(v52 + 64) = sub_160740();
        sub_71088(v76);
        sub_2DFAC0();
        return v52;
      }
      double v38 = Height;
    }
    *(void *)&long long v88 = _swiftEmptyArrayStorage;
    sub_2A4280(0, v27, 0);
    uint64_t v39 = (uint64_t)(v26 + 4);
    LODWORD(v74) = enum case for CoverViewModel.Style.image(_:);
    uint64_t v40 = (void (**)(double *, void, uint64_t *))(v10 + 104);
    unint64_t v41 = v27;
    do
    {
      sub_66310(v39, (uint64_t)&v78);
      sub_66310((uint64_t)&v78, (uint64_t)v12);
      sub_71044(&v78, v80);
      sub_2DF230();
      void v12[5] = v38 * v42;
      v12[6] = v38;
      (*v40)(v12, v74, v76);
      sub_2E02B0();
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v78);
      uint64_t v43 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A4280(0, *(void *)(v43 + 16) + 1, 1);
        uint64_t v43 = v88;
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_2A4280(v44 > 1, v45 + 1, 1);
        uint64_t v43 = v88;
      }
      *(void *)(v43 + 16) = v45 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v43+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v45, v77, v75);
      *(void *)&long long v88 = v43;
      v39 += 40;
      --v41;
    }
    while (v41);
    goto LABEL_24;
  }
  uint64_t v74 = v10;
  unint64_t v22 = 0;
  uint64_t v23 = v19 + 32;
  while (v22 < *(void *)(v19 + 16))
  {
    sub_66310(v23, (uint64_t)&v78);
    sub_71044(&v78, v80);
    sub_2DF140();
    if (sub_2DF2D0())
    {
      uint64_t result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v78);
    }
    else
    {
      sub_65CF4((long long *)&v78, (uint64_t)&v88);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2A4660(0, v18[2] + 1, 1);
      }
      uint64_t v18 = v89;
      unint64_t v25 = v89[2];
      unint64_t v24 = v89[3];
      if (v25 >= v24 >> 1)
      {
        sub_2A4660(v24 > 1, v25 + 1, 1);
        uint64_t v18 = v89;
      }
      v18[2] = v25 + 1;
      uint64_t result = sub_65CF4(&v88, (uint64_t)&v18[5 * v25 + 4]);
    }
    ++v22;
    v23 += 40;
    if (v20 == v22)
    {
      uint64_t v26 = v89;
      uint64_t v10 = v74;
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1603A8()
{
  uint64_t v0 = sub_2DDC50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = [v4 sharedProvider];
  id v6 = [v5 primaryAppleAccount];

  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = [v4 sharedProvider];
    id v6 = [v7 activeStoreAccount];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v6) {
      return 0;
    }
  }
  uint64_t v20 = v1;
  id v8 = [v6 ams_firstName];

  if (!v8) {
    return 0;
  }
  uint64_t v9 = v0;
  uint64_t v19 = sub_2E4420();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = [v4 sharedProvider];
  id v11 = [v10 primaryAppleAccount];

  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = [v4 sharedProvider];
    id v11 = [v12 activeStoreAccount];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v11)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  id v13 = [v11 ams_lastName];

  if (!v13) {
    goto LABEL_10;
  }
  sub_2E4420();

  id v14 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
  [v14 setStyle:1];
  sub_2DDC40();
  sub_2DDC10();
  sub_2DDC20();
  Class v15 = sub_2DDC30();
  id v16 = [v14 stringFromPersonNameComponents:v15];

  uint64_t v17 = sub_2E4420();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v9);
  return v17;
}

unint64_t sub_160740()
{
  unint64_t result = qword_3CCCE0;
  if (!qword_3CCCE0)
  {
    sub_2DFAD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCCE0);
  }
  return result;
}

uint64_t sub_160798@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  LODWORD(v230) = a6;
  uint64_t v229 = a5;
  uint64_t v278 = a3;
  long long v287 = a1;
  uint64_t v257 = a7;
  uint64_t v9 = sub_63BAC(&qword_3CBD18);
  __chkstk_darwin(v9 - 8);
  uint64_t v256 = (char *)&v210 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CBD20);
  __chkstk_darwin(v11 - 8);
  uint64_t v255 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_63BAC(&qword_3CBC60);
  __chkstk_darwin(v13 - 8);
  uint64_t v276 = (uint64_t)&v210 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2DEBB0();
  uint64_t v221 = *(void *)(v15 - 8);
  uint64_t v222 = v15;
  __chkstk_darwin(v15);
  long long v220 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_63BAC(&qword_3CCCE8);
  __chkstk_darwin(v17 - 8);
  uint64_t v262 = (char *)&v210 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_63BAC(&qword_3C7498);
  __chkstk_darwin(v19 - 8);
  uint64_t v277 = (uint64_t)&v210 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v219 = (char *)&v210 - v22;
  uint64_t v23 = sub_2E0E10();
  uint64_t v234 = *(void *)(v23 - 8);
  uint64_t v235 = v23;
  __chkstk_darwin(v23);
  uint64_t v233 = (char *)&v210 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2DE2E0();
  uint64_t v243 = *(void *)(v25 - 8);
  uint64_t v244 = v25;
  __chkstk_darwin(v25);
  uint64_t v245 = (char *)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2DE330();
  uint64_t v240 = *(void *)(v27 - 8);
  uint64_t v241 = v27;
  __chkstk_darwin(v27);
  uint64_t v242 = (char *)&v210 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = type metadata accessor for SeriesRoomListHeaderSegmentedItem();
  __chkstk_darwin(v217);
  uint64_t v232 = (uint64_t)&v210 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_63BAC(&qword_3CBAE8);
  __chkstk_darwin(v30 - 8);
  uint64_t v227 = (uint64_t)&v210 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = type metadata accessor for SeriesRoomListHeaderComponentModel();
  uint64_t v226 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  uint64_t v231 = (uint64_t)&v210 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_2E12D0();
  uint64_t v264 = *(void *)(v33 - 8);
  uint64_t v265 = v33;
  __chkstk_darwin(v33);
  uint64_t v267 = (uint64_t *)((char *)&v210 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v263 = sub_2E1350();
  uint64_t v270 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  uint64_t v266 = (char *)&v210 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_2E1290();
  uint64_t v258 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  uint64_t v261 = (char *)&v210 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_63BAC(&qword_3CCCF0);
  __chkstk_darwin(v37 - 8);
  uint64_t v259 = (char *)&v210 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v271 = (uint64_t *)sub_2DEC50();
  uint64_t v268 = (const char *)*(v271 - 1);
  __chkstk_darwin(v271);
  uint64_t v218 = (char *)&v210 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v214 = (char *)&v210 - v41;
  __chkstk_darwin(v42);
  uint64_t v215 = (char *)&v210 - v43;
  __chkstk_darwin(v44);
  uint64_t v223 = (char *)&v210 - v45;
  __chkstk_darwin(v46);
  uint64_t v224 = (char *)&v210 - v47;
  uint64_t v48 = sub_2E1260();
  uint64_t v248 = *(void *)(v48 - 8);
  uint64_t v249 = v48;
  __chkstk_darwin(v48);
  uint64_t v281 = (char *)&v210 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_63BAC(&qword_3CBD28);
  __chkstk_darwin(v50 - 8);
  uint64_t v254 = (uint64_t)&v210 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v210 - v53;
  uint64_t v285 = sub_2E0E40();
  uint64_t v282 = *(void *)(v285 - 8);
  __chkstk_darwin(v285);
  uint64_t v253 = (char *)&v210 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v228 = (char *)&v210 - v57;
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)&v210 - v59;
  uint64_t v61 = sub_63BAC(&qword_3CBC58);
  __chkstk_darwin(v61 - 8);
  uint64_t v252 = (uint64_t)&v210 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  long long v225 = (char *)&v210 - v64;
  __chkstk_darwin(v65);
  uint64_t v216 = (char *)&v210 - v66;
  __chkstk_darwin(v67);
  long long v69 = (char *)&v210 - v68;
  uint64_t v275 = sub_2E13F0();
  uint64_t v274 = *(void *)(v275 - 8);
  __chkstk_darwin(v275);
  uint64_t v280 = (char *)&v210 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = _s11ShelfGridIDVMa();
  __chkstk_darwin(v251);
  uint64_t v250 = (uint64_t)&v210 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v72);
  uint64_t v273 = (uint64_t)&v210 - v73;
  int v279 = *a2;
  LODWORD(v269) = *a4;
  uint64_t v74 = sub_2DE320();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v76 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56);
  long long v286 = v69;
  uint64_t v237 = v76;
  uint64_t v238 = v74;
  uint64_t v236 = v75 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v76)(v69, 1, 1);
  uint64_t v284 = v60;
  sub_2E0E30();
  if (qword_3C6700 != -1) {
    swift_once();
  }
  sub_164500((uint64_t)&unk_3CFFF0, (uint64_t)v306);
  uint64_t v77 = sub_2E0310();
  uint64_t v78 = *(void *)(v77 - 8);
  long long v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
  v79(v54, 1, 1, v77);
  v304 = 0;
  long long v302 = 0u;
  long long v303 = 0u;
  sub_71044(v287, v287[3]);
  uint64_t v80 = v283;
  sub_2DEB70();
  uint64_t v283 = v80;
  if (v80)
  {
    sub_662B4((uint64_t)&v302, &qword_3CCCF8);
    sub_662B4((uint64_t)v54, &qword_3CBD28);
    sub_16455C((uint64_t)v306);
    (*(void (**)(char *, uint64_t))(v282 + 8))(v284, v285);
    return sub_662B4((uint64_t)v286, &qword_3CBC58);
  }
  uint64_t v210 = v78;
  uint64_t v211 = (uint64_t (*)(void, void))v77;
  uint64_t v246 = v79;
  uint64_t v247 = (const char *)(v78 + 56);
  uint64_t v272 = v54;
  swift_getAssociatedTypeWitness();
  sub_63BAC(&qword_3C6F68);
  uint64_t v213 = sub_2E4D90();
  swift_bridgeObjectRelease();
  sub_71044(v287, v287[3]);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = sub_2E4B10();
  int v212 = &v210;
  uint64_t v84 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v86 = (char *)&v210 - v85;
  sub_2DEBD0();
  uint64_t v87 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v86, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v86, v83);
    uint64_t AssociatedConformanceWitness = 0;
    long long v299 = 0u;
    long long v300 = 0u;
    sub_662B4((uint64_t)&v299, &qword_3C8920);
    long long v88 = v287;
    sub_66310((uint64_t)v287, (uint64_t)&v299);
    sub_71044(&v299, *((uint64_t *)&v300 + 1));
    uint64_t v89 = (void *)sub_2DEC30();
    uint64_t v90 = (uint64_t)v271;
    uint64_t v91 = (uint64_t)v262;
    if (v89)
    {

      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v299);
      uint64_t v92 = v213;
      goto LABEL_10;
    }
  }
  else
  {
    *((void *)&v300 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v93 = sub_71088((uint64_t *)&v299);
    (*(void (**)(uint64_t *, char *, uint64_t))(v87 + 32))(v93, v86, AssociatedTypeWitness);
    sub_662B4((uint64_t)&v299, &qword_3C8920);
    long long v88 = v287;
    sub_66310((uint64_t)v287, (uint64_t)&v299);
    uint64_t v90 = (uint64_t)v271;
    uint64_t v91 = (uint64_t)v262;
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v299);
  uint64_t v92 = sub_2DEF50();
  swift_bridgeObjectRelease();
LABEL_10:
  int v94 = v279;
  LOBYTE(v296) = v279;
  uint64_t v95 = sub_200E2C(v92);
  swift_bridgeObjectRelease();
  BOOL v96 = v94 == 2 && *((void *)v95 + 2) == 0;
  uint64_t v262 = v95;
  LODWORD(v213) = v96;
  if (v269)
  {
    uint64_t v97 = v263;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v270 + 56))(v259, 1, 1, v263);
    (*(void (**)(char *, void, uint64_t))(v258 + 104))(v261, enum case for Metrics.LocationType.section(_:), v260);
    sub_2E13E0();
    sub_71044(v88, v88[3]);
    sub_2DEAF0();
    uint64_t v98 = sub_2DEEE0();
    uint64_t v99 = *(void *)(v98 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v91, 1, v98) == 1)
    {
      sub_662B4(v91, &qword_3CCCE8);
    }
    else
    {
      uint64_t v105 = sub_2DEED0();
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v91, v98);
      if (v105)
      {
        if (*(void *)(v105 + 16))
        {
          long long v271 = *(uint64_t **)(v105 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_36:
          (*(void (**)(char *, void, uint64_t))(v270 + 104))(v266, enum case for Metrics.IdType.sequential(_:), v97);
          (*(void (**)(uint64_t *, void, uint64_t))(v264 + 104))(v267, enum case for Metrics.ImpressionType.section(_:), v265);
          sub_2E1360();
          sub_71044(v88, v88[3]);
          sub_2DEC00();
          uint64_t v268 = "series-see-all-list";
          sub_2E1250();
          sub_71044(v88, v88[3]);
          sub_2DEC00();
          (*(void (**)(char *, void, uint64_t))(v240 + 104))(v242, enum case for SectionType.swoosh(_:), v241);
          (*(void (**)(char *, void, uint64_t))(v243 + 104))(v245, enum case for SectionData.ComponentContained.swoosh(_:), v244);
          uint64_t v125 = (uint64_t)v225;
          sub_2DE300();
          uint64_t v126 = (uint64_t)v286;
          sub_662B4((uint64_t)v286, &qword_3CBC58);
          v237(v125, 0, 1, v238);
          sub_71900(v125, v126, &qword_3CBC58);
          sub_164500((uint64_t)&unk_3CFFF0, (uint64_t)&v296);
          sub_16455C((uint64_t)v306);
          v306[0] = v296;
          v306[1] = v297;
          uint64_t v307 = v298;
          if (qword_3C6710 != -1) {
            goto LABEL_89;
          }
          while (1)
          {
            sub_1645B0((uint64_t)&unk_3D0040, (uint64_t)v305);
            if ((v230 & 1) == 0)
            {
              sub_662B4((uint64_t)&v302, &qword_3CCCF8);
              uint64_t v142 = (uint64_t)v272;
              sub_662B4((uint64_t)v272, &qword_3CBD28);
              v246((char *)v142, 1, 1, (uint64_t)v211);
              goto LABEL_58;
            }
            sub_71044(v88, v88[3]);
            uint64_t v127 = swift_getAssociatedTypeWitness();
            uint64_t v128 = sub_2E4B10();
            long long v271 = &v210;
            uint64_t v129 = *(void *)(v128 - 8);
            __chkstk_darwin(v128);
            uint64_t v131 = (char *)&v210 - v130;
            sub_2DEBD0();
            uint64_t v132 = *(void *)(v127 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v131, 1, v127) == 1) {
              break;
            }
            *((void *)&v297 + 1) = v127;
            uint64_t v298 = swift_getAssociatedConformanceWitness();
            unint64_t v143 = sub_71088((uint64_t *)&v296);
            (*(void (**)(uint64_t *, char *, uint64_t))(v132 + 32))(v143, v131, v127);
            sub_662B4((uint64_t)&v296, &qword_3C8920);
            uint64_t v144 = v262;
            unint64_t v145 = *((void *)v262 + 2);
            if (v145 >= 0xA) {
              uint64_t v146 = 10;
            }
            else {
              uint64_t v146 = *((void *)v262 + 2);
            }
            __n128 v147 = _swiftEmptyArrayStorage;
            long long v88 = v287;
            uint64_t v148 = v272;
            uint64_t v149 = v246;
            if (v145 < 0xB)
            {
LABEL_55:
              sub_662B4((uint64_t)&v302, &qword_3CCCF8);
              sub_662B4((uint64_t)v148, &qword_3CBD28);
              *uint64_t v148 = v147;
              uint64_t v159 = v211;
              (*(void (**)(char *, void, uint64_t (*)(void, void)))(v210 + 104))((char *)v148, enum case for PaginationInfo.nextAssetIDs(_:), v211);
              v149((char *)v148, 0, 1, (uint64_t)v159);
              uint64_t v160 = (uint64_t)v144;
              goto LABEL_59;
            }
            unint64_t v150 = v145 - v146;
            *(void *)&long long v292 = _swiftEmptyArrayStorage;
            int64_t v151 = (v145 - v146) & ~((uint64_t)(v145 - v146) >> 63);
            swift_bridgeObjectRetain();
            uint64_t result = sub_2A47F4(0, v151, 0);
            if ((v150 & 0x8000000000000000) != 0)
            {
              __break(1u);
              return result;
            }
            uint64_t v152 = (uint64_t)&v144[40 * v146 + 32];
            while (v150)
            {
              sub_66310(v152, (uint64_t)&v296);
              sub_71044(&v296, *((uint64_t *)&v297 + 1));
              uint64_t v153 = sub_2DEC00();
              uint64_t v155 = v154;
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v296);
              __n128 v147 = (void *)v292;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2A47F4(0, v147[2] + 1, 1);
                __n128 v147 = (void *)v292;
              }
              unint64_t v157 = v147[2];
              unint64_t v156 = v147[3];
              if (v157 >= v156 >> 1)
              {
                sub_2A47F4(v156 > 1, v157 + 1, 1);
                __n128 v147 = (void *)v292;
              }
              v147[2] = v157 + 1;
              uint64_t v158 = &v147[2 * v157];
              v158[4] = v153;
              v158[5] = v155;
              v152 += 40;
              --v150;
              uint64_t v148 = v272;
              uint64_t v149 = v246;
              if (!v150)
              {
                uint64_t v144 = v262;
                swift_bridgeObjectRelease();
                goto LABEL_55;
              }
            }
            __break(1u);
LABEL_89:
            swift_once();
          }
          (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);
          uint64_t v298 = 0;
          long long v296 = 0u;
          long long v297 = 0u;
          sub_662B4((uint64_t)&v296, &qword_3C8920);
          long long v88 = v287;
          sub_71044(v287, v287[3]);
          uint64_t v133 = sub_2DEB80();
          uint64_t v135 = v134;
          sub_662B4((uint64_t)&v302, &qword_3CCCF8);
          uint64_t v136 = v272;
          sub_662B4((uint64_t)v272, &qword_3CBD28);
          uint64_t v137 = v246;
          if (v135)
          {
            uint64_t *v136 = v133;
            v136[1] = v135;
            uint64_t v138 = v211;
            (*(void (**)(uint64_t *, void, uint64_t (*)(void, void)))(v210 + 104))(v136, enum case for PaginationInfo.nextHref(_:), v211);
            uint64_t v139 = v136;
            uint64_t v140 = 0;
            uint64_t v141 = v138;
          }
          else
          {
            uint64_t v139 = v136;
            uint64_t v140 = 1;
            uint64_t v141 = v211;
          }
          v137((char *)v139, v140, 1, (uint64_t)v141);
LABEL_58:
          uint64_t v160 = (uint64_t)v262;
LABEL_59:
          int v161 = v213;
          *((void *)&v303 + 1) = &_s36SeriesSeeAllPaginationIntentProviderVN;
          v304 = &off_395918;
          uint64_t v162 = swift_allocObject();
          *(void *)&long long v302 = v162;
          sub_66310((uint64_t)v88, v162 + 16);
          *(unsigned char *)(v162 + 56) = v279;
          uint64_t v270 = 0xD000000000000013;
          long long v271 = (uint64_t *)0x8000000000317E50;
          if (v161) {
            goto LABEL_83;
          }
          goto LABEL_60;
        }
        swift_bridgeObjectRelease();
      }
    }
    long long v271 = 0;
    goto LABEL_36;
  }
  sub_71044(v88, v88[3]);
  long long v225 = (char *)sub_2DEC00();
  uint64_t v230 = v100;
  sub_71044(v88, v88[3]);
  uint64_t v101 = v224;
  sub_2DEAD0();
  uint64_t v102 = v268;
  uint64_t v103 = v223;
  uint64_t v246 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v268 + 2);
  uint64_t v247 = v268 + 16;
  ((void (*)(char *, char *, uint64_t))v246)(v223, v101, v90);
  uint64_t v211 = (uint64_t (*)(void, void))*((void *)v102 + 11);
  int v212 = (uint64_t *)(v102 + 88);
  int v104 = v211(v103, v90);
  LODWORD(v210) = enum case for ContentKind.pdf(_:);
  if (v104 != enum case for ContentKind.pdf(_:)
    && v104 != enum case for ContentKind.audiobook(_:)
    && v104 != enum case for ContentKind.regularBook(_:)
    && v104 != enum case for ContentKind.manga(_:)
    && v104 != enum case for ContentKind.unknownBook(_:))
  {
    (*((void (**)(char *, uint64_t))v102 + 1))(v103, v90);
  }
  uint64_t v106 = (char *)*((void *)v102 + 1);
  uint64_t v268 = v102 + 8;
  uint64_t v224 = v106;
  ((void (*)(char *, uint64_t))v106)(v101, v90);
  uint64_t v107 = enum case for Metrics.IdType.itsId(_:);
  uint64_t v108 = v270;
  uint64_t v109 = *(void (**)(char *, void, uint64_t))(v270 + 104);
  uint64_t v110 = v259;
  uint64_t v111 = v263;
  v109(v259, enum case for Metrics.IdType.itsId(_:), v263);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v110, 0, 1, v111);
  (*(void (**)(char *, void, uint64_t))(v258 + 104))(v261, enum case for Metrics.LocationType.filter(_:), v260);
  swift_bridgeObjectRetain();
  sub_2E13E0();
  uint64_t v112 = v287;
  sub_71044(v287, v287[3]);
  uint64_t v270 = sub_2DEC00();
  uint64_t v261 = v113;
  v109(v266, v107, v111);
  long long v88 = v112;
  uint64_t v114 = (uint64_t)v271;
  (*(void (**)(uint64_t *, void, uint64_t))(v264 + 104))(v267, enum case for Metrics.ImpressionType.section(_:), v265);
  sub_2E1360();
  sub_71044(v112, v112[3]);
  sub_2DEC10();
  sub_2E1250();
  uint64_t v115 = v227;
  sub_66444(v229, v227, &qword_3CBAE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v115, 1, v239) == 1)
  {
    sub_662B4(v115, &qword_3CBAE8);
    uint64_t v116 = v285;
    uint64_t v117 = v282;
    uint64_t v118 = v284;
  }
  else
  {
    sub_164A3C(v115, v231);
    sub_63BAC(&qword_3CA910);
    uint64_t v119 = v232;
    sub_2E0EC0();
    uint64_t v120 = v119 + *(int *)(v217 + 28);
    uint64_t v121 = v114;
    uint64_t v122 = v215;
    ((void (*)(char *, uint64_t, uint64_t))v246)(v215, v120, v121);
    int v123 = v211(v122, v121);
    uint64_t v118 = v284;
    if (v123 == v210)
    {
      uint64_t v270 = 0xD000000000000010;
      unint64_t v124 = v218;
    }
    else
    {
      unint64_t v124 = v218;
      if (v123 == enum case for ContentKind.audiobook(_:))
      {
        uint64_t v270 = 0xD000000000000016;
      }
      else if (v123 == enum case for ContentKind.regularBook(_:))
      {
        uint64_t v270 = 0xD000000000000011;
      }
      else if (v123 == enum case for ContentKind.manga(_:))
      {
        uint64_t v270 = 0xD000000000000012;
      }
      else if (v123 == enum case for ContentKind.unknownBook(_:))
      {
        uint64_t v270 = 0xD000000000000018;
      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t))v246)(v214, v120, v121);
        uint64_t v270 = sub_2E4480();
        ((void (*)(char *, uint64_t))v224)(v122, v121);
      }
    }
    ((void (*)(char *, uint64_t, uint64_t))v246)(v124, v120, v121);
    int v167 = v211(v124, v121);
    if (v167 != v210
      && v167 != enum case for ContentKind.audiobook(_:)
      && v167 != enum case for ContentKind.regularBook(_:)
      && v167 != enum case for ContentKind.manga(_:)
      && v167 != enum case for ContentKind.unknownBook(_:))
    {
      ((void (*)(char *, uint64_t, uint64_t))v246)(v214, v120, v121);
      sub_2E4480();
      ((void (*)(char *, uint64_t))v224)(v124, v121);
    }
    (*(void (**)(char *, void, uint64_t))(v240 + 104))(v242, enum case for SectionType.swoosh(_:), v241);
    (*(void (**)(char *, void, uint64_t))(v243 + 104))(v245, enum case for SectionData.ComponentContained.swoosh(_:), v244);
    uint64_t v168 = (uint64_t)v216;
    sub_2DE300();
    uint64_t v169 = (uint64_t)v286;
    sub_662B4((uint64_t)v286, &qword_3CBC58);
    v237(v168, 0, 1, v238);
    sub_71900(v168, v169, &qword_3CBC58);
    *((void *)&v297 + 1) = v239;
    uint64_t v298 = sub_165364(&qword_3CBBC0, (void (*)(uint64_t))type metadata accessor for SeriesRoomListHeaderComponentModel);
    uint64_t v170 = sub_71088((uint64_t *)&v296);
    sub_164A3C(v231, (uint64_t)v170);
    sub_164AA0(v232, (uint64_t (*)(void))type metadata accessor for SeriesRoomListHeaderSegmentedItem);
    sub_16455C((uint64_t)v306);
    sub_65CF4(&v296, (uint64_t)v306);
    uint64_t v116 = v285;
    uint64_t v117 = v282;
  }
  int v171 = v213;
  (*(void (**)(char *, void, uint64_t))(v234 + 104))(v233, enum case for ShelfBackgroundViewModel.BackgroundKind.none(_:), v235);
  uint64_t v172 = v228;
  sub_2E0E20();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v116);
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v118, v172, v116);
  sub_71044(v88, v88[3]);
  sub_2DEB80();
  uint64_t v174 = v173;
  swift_bridgeObjectRelease();
  sub_66310((uint64_t)v88, (uint64_t)&v296);
  uint64_t v160 = (uint64_t)v262;
  if (v174)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v296);
LABEL_81:
    v291[0] = 0xD000000000000015;
    v291[1] = 0x8000000000317E90;
    uint64_t v180 = type metadata accessor for SeeAllFooterComponentModel();
    uint64_t v293 = v180;
    uint64_t v294 = sub_165364(&qword_3C80A0, (void (*)(uint64_t))type metadata accessor for SeeAllFooterComponentModel);
    int v181 = sub_71088((uint64_t *)&v292);
    sub_2E4C10();
    sub_163134(v88, v279, v278, v291);
    uint64_t v182 = sub_2E3CC0();
    uint64_t v183 = (uint64_t)v219;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v219, 1, 1, v182);
    uint64_t v290 = 0;
    long long v288 = 0u;
    long long v289 = 0u;
    sub_9F64C((uint64_t)v291, (uint64_t)&v288);
    long long v184 = v289;
    *(_OWORD *)(v181 + 5) = v288;
    *(_OWORD *)(v181 + 7) = v184;
    v181[9] = v290;
    sub_662B4((uint64_t)v291, &qword_3C8B80);
    sub_71900(v183, (uint64_t)v181 + *(int *)(v180 + 24), &qword_3C7498);
    sub_65CF4(&v292, (uint64_t)v305);
    goto LABEL_82;
  }
  sub_71044(&v296, *((uint64_t *)&v297 + 1));
  uint64_t v175 = sub_2DEB10();
  char v177 = v176;
  sub_66310((uint64_t)&v296, (uint64_t)&v292);
  if (v177)
  {
    sub_71044(&v292, v293);
    uint64_t v178 = sub_2DEB40();
    if (v179) {
      uint64_t v175 = 0;
    }
    else {
      uint64_t v175 = v178;
    }
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v292);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v296);
  if (v175 >= 11) {
    goto LABEL_81;
  }
  if (qword_3C6708 != -1) {
    swift_once();
  }
  sub_1645B0((uint64_t)&unk_3D0018, (uint64_t)v305);
LABEL_82:
  long long v271 = (uint64_t *)0xEB00000000747369;
  uint64_t v270 = 0x6C2D736569726573;
  if (v171)
  {
LABEL_83:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v185 = v88;
    uint64_t v186 = type metadata accessor for ContentUnavailableComponentModel();
    uint64_t v268 = (const char *)sub_165364(&qword_3C8050, (void (*)(uint64_t))type metadata accessor for ContentUnavailableComponentModel);
    sub_63BAC(&qword_3CCD08);
    uint64_t v166 = swift_allocObject();
    *(_OWORD *)(v166 + 16) = xmmword_2FEFE0;
    uint64_t v267 = (uint64_t *)(v166 + 32);
    sub_71044(v185, v185[3]);
    uint64_t v187 = (uint64_t)v220;
    sub_2DEAC0();
    LOBYTE(v296) = v269;
    uint64_t v269 = v186;
    *(void *)(v166 + 56) = v186;
    *(void *)(v166 + 64) = sub_165364(&qword_3CCD10, (void (*)(uint64_t))type metadata accessor for ContentUnavailableComponentModel);
    long long v88 = v185;
    int v188 = sub_71088(v267);
    sub_1C65F4(v187, (unsigned __int8 *)&v296, (uint64_t)v188);
    (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v187, v222);
    goto LABEL_84;
  }
LABEL_60:
  uint64_t v269 = type metadata accessor for ListItemComponentModel();
  uint64_t v268 = (const char *)sub_165364(&qword_3C8078, (void (*)(uint64_t))type metadata accessor for ListItemComponentModel);
  __chkstk_darwin(v268);
  uint64_t v163 = v283;
  uint64_t v166 = sub_1647B0(v160, v164, 0, v165, (void (*)(long long *__return_ptr, void, char *))sub_164644);
  uint64_t v283 = v163;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_84:
  uint64_t v189 = v276;
  uint64_t v190 = v273;
  sub_71044(v88, v88[3]);
  uint64_t v191 = (uint64_t)v271;
  swift_bridgeObjectRetain();
  uint64_t v192 = sub_2DEC00();
  uint64_t v194 = v193;
  uint64_t v195 = v190 + *(int *)(v251 + 28);
  uint64_t v196 = sub_2DEF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 16))(v195, v278, v196);
  *(void *)uint64_t v190 = v270;
  *(void *)(v190 + 8) = v191;
  *(void *)(v190 + 16) = v192;
  *(void *)(v190 + 24) = v194;
  *(unsigned char *)(v190 + 32) = v279;
  sub_164984(v190, v250);
  sub_165364(&qword_3CCD00, (void (*)(uint64_t))_s11ShelfGridIDVMa);
  sub_2E4C10();
  char v295 = 1;
  long long v287 = sub_1808A4(v166);
  swift_bridgeObjectRelease();
  uint64_t v197 = v277;
  sub_2E1230();
  uint64_t v198 = sub_2E3CC0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v198 - 8) + 56))(v197, 0, 1, v198);
  uint64_t v199 = v274;
  uint64_t v200 = v275;
  (*(void (**)(uint64_t, char *, uint64_t))(v274 + 16))(v189, v280, v275);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v199 + 56))(v189, 0, 1, v200);
  uint64_t v201 = v252;
  sub_66444((uint64_t)v286, v252, &qword_3CBC58);
  uint64_t v202 = v282;
  uint64_t v203 = (uint64_t)v253;
  (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v253, v284, v285);
  sub_164500((uint64_t)v306, (uint64_t)&v292);
  sub_1645B0((uint64_t)v305, (uint64_t)v291);
  uint64_t v204 = type metadata accessor for ContentUnavailableComponentModel();
  uint64_t v205 = (uint64_t)v255;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 56))(v255, 1, 1, v204);
  uint64_t v206 = (uint64_t)v256;
  sub_2DF620();
  uint64_t v207 = sub_2DF630();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v206, 0, 1, v207);
  uint64_t v208 = (uint64_t)v272;
  uint64_t v209 = v254;
  sub_66444((uint64_t)v272, v254, &qword_3CBD28);
  sub_66444((uint64_t)&v302, (uint64_t)&v288, &qword_3CCCF8);
  Shelf.init(id:shelfGridID:presentation:itemKind:items:impressionable:impressionMetrics:location:sectionData:backgroundViewModel:headerComponentModel:footerComponentModel:emptyComponentModel:spacing:paginationInfo:paginationIntentProvider:)(v270, (uint64_t)v271, (uint64_t)&v296, &v295, v269, (uint64_t)v268, (uint64_t)v287, 1, v257, v277, v276, v201, v203, (uint64_t)&v292, (uint64_t)v291, v205, v206, v209, (uint64_t)&v288);
  (*(void (**)(char *, uint64_t))(v248 + 8))(v281, v249);
  sub_662B4((uint64_t)&v302, &qword_3CCCF8);
  sub_662B4(v208, &qword_3CBD28);
  sub_1649E8((uint64_t)v305);
  sub_16455C((uint64_t)v306);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v284, v285);
  sub_662B4((uint64_t)v286, &qword_3CBC58);
  (*(void (**)(char *, uint64_t))(v274 + 8))(v280, v275);
  return sub_164AA0(v273, (uint64_t (*)(void))_s11ShelfGridIDVMa);
}

uint64_t _s11ShelfGridIDVMa()
{
  uint64_t result = qword_3CCD88;
  if (!qword_3CCD88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_163134@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v68 = a3;
  int v69 = a2;
  uint64_t v77 = a1;
  uint64_t v74 = a4;
  uint64_t v73 = sub_2DFE10();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CA500);
  __chkstk_darwin(v5 - 8);
  uint64_t v70 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3C75A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v67 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_2E13F0();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_2DDCD0();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_2E1300();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_2E1270();
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v13 = v55;
  __chkstk_darwin(v57);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2E3910();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v78 = v16;
  uint64_t v79 = v17;
  __chkstk_darwin(v16);
  uint64_t v61 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v76 = (char *)&v54 - v20;
  uint64_t v21 = sub_2DE410();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2DE8B0();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_2DE8E0();
  uint64_t v56 = *(void *)(v75 - 8);
  __n128 v29 = __chkstk_darwin(v75);
  uint64_t v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v26 + 104))(v28, enum case for ClickData.TargetType.navigate(_:), v25, v29);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for LinkActionType.click(_:), v21);
  sub_2DE8C0();
  uint64_t v32 = v57;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Metrics.TargetType.button(_:), v57);
  uint64_t v33 = v59;
  uint64_t v34 = v58;
  uint64_t v35 = v60;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, enum case for Metrics.ClickActionType.navigate(_:), v60);
  sub_71044(v77, v77[3]);
  sub_2DEB60();
  sub_2DDC90();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v63);
  uint64_t v36 = v64;
  sub_2E13A0();
  uint64_t v37 = v76;
  sub_2E1210();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v66);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v32);
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v61, v37, v78);
  uint64_t v38 = v56;
  uint64_t v39 = v67;
  uint64_t v40 = v75;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v67, v31, v75);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v40);
  uint64_t v41 = type metadata accessor for SeriesSeeAllPageIntent();
  v81[3] = v41;
  v81[4] = sub_165364((unint64_t *)&qword_3C7FC8, (void (*)(uint64_t))type metadata accessor for SeriesSeeAllPageIntent);
  uint64_t v42 = sub_71088(v81);
  uint64_t v43 = v77;
  sub_66310((uint64_t)v77, (uint64_t)v42);
  uint64_t v44 = (char *)v42 + *(int *)(v41 + 24);
  uint64_t v45 = sub_2DEF80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v44, v68, v45);
  uint64_t v46 = (char *)v42 + *(int *)(v41 + 28);
  uint64_t v47 = enum case for Metrics.NavigationType.forward(_:);
  uint64_t v48 = sub_2E12F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
  *((unsigned char *)v42 + 40) = v69;
  v82[3] = sub_63BAC(&qword_3C80F0);
  v82[4] = sub_164B00();
  sub_71088(v82);
  sub_66310((uint64_t)v81, (uint64_t)v80);
  type metadata accessor for Page();
  sub_165364((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
  sub_2DFBF0();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v81);
  sub_71044(v43, v43[3]);
  sub_2DEC10();
  sub_71044(v43, v43[3]);
  sub_2DEC00();
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, enum case for ActionOrigin.Kind.footer(_:), v73);
  uint64_t v49 = v70;
  sub_2DFE80();
  uint64_t v50 = sub_2DFEA0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
  sub_2E3ED0();
  uint64_t v51 = sub_2DFC90();
  uint64_t v52 = v74;
  v74[3] = v51;
  v52[4] = sub_165364((unint64_t *)&qword_3CCD18, (void (*)(uint64_t))&type metadata accessor for FlowAction);
  sub_71088(v52);
  sub_2DFC60();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v78);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v75);
}

uint64_t sub_163CD0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a1;
  uint64_t v27 = a4;
  uint64_t v9 = sub_63BAC(&qword_3CCD20);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E0700();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - v17;
  sub_71044(a3, a3[3]);
  sub_2DEC00();
  sub_66310((uint64_t)a2, (uint64_t)v28);
  sub_2E1410();
  sub_2E0640();
  swift_bridgeObjectRelease();
  sub_662B4((uint64_t)v11, &qword_3CCD20);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_66310((uint64_t)a2, (uint64_t)v28);
  sub_71044(a2, a2[3]);
  sub_2DF140();
  uint64_t v19 = sub_2E1280();
  uint64_t v21 = v20;
  a6[3] = type metadata accessor for ListItemComponentModel();
  a6[4] = sub_165364(&qword_3CCD28, (void (*)(uint64_t))type metadata accessor for ListItemComponentModel);
  uint64_t v22 = sub_71088(a6);
  uint64_t v23 = v25;
  swift_bridgeObjectRetain();
  sub_298138((uint64_t)v15, v28, v26, v19, v21, v27, v23, (uint64_t)v22);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_163F68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_63BAC(&qword_3CBD28);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E0310();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = type metadata accessor for Shelf();
  sub_66444((uint64_t)a1 + *(int *)(v15 + 68), (uint64_t)v7, &qword_3CBD28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t result = sub_662B4((uint64_t)v7, &qword_3CBD28);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
  }
  else
  {
    uint64_t v24 = (uint64_t *)a2;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v26(v14, v7, v8);
    uint64_t v17 = a1[1];
    uint64_t v25 = *a1;
    sub_66310(v2, (uint64_t)v27);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    uint64_t v18 = *(void *)(*(uint64_t *)((char *)a1 + *(int *)(v15 + 64)) + 16);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v19(v14, v8);
    char v20 = *(unsigned char *)(v2 + 40);
    uint64_t v21 = (int *)type metadata accessor for SeriesSeeAllPaginationIntent();
    uint64_t v22 = v24;
    v24[3] = (uint64_t)v21;
    void v22[4] = sub_165364(&qword_3C7FD0, (void (*)(uint64_t))type metadata accessor for SeriesSeeAllPaginationIntent);
    uint64_t v23 = sub_71088(v22);
    *uint64_t v23 = v25;
    v23[1] = v17;
    sub_65CF4(v27, (uint64_t)(v23 + 2));
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v26)((char *)v23 + v21[6], v11, v8);
    *(uint64_t *)((char *)v23 + v21[7]) = v18;
    *((unsigned char *)v23 + v21[8]) = v20;
  }
  return result;
}

Swift::Int sub_16422C()
{
  sub_2E51A0();
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  sub_2E51B0(*(unsigned __int8 *)(v0 + 32));
  sub_2DEF80();
  sub_165364(&qword_3CCDD0, (void (*)(uint64_t))&type metadata accessor for SeriesListSortOrder);
  sub_2E4390();
  return sub_2E51E0();
}

uint64_t sub_164324()
{
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  sub_2E51B0(*(unsigned __int8 *)(v0 + 32));
  sub_2DEF80();
  sub_165364(&qword_3CCDD0, (void (*)(uint64_t))&type metadata accessor for SeriesListSortOrder);
  return sub_2E4390();
}

Swift::Int sub_164408()
{
  sub_2E51A0();
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2E44A0();
  swift_bridgeObjectRelease();
  sub_2E51B0(*(unsigned __int8 *)(v0 + 32));
  sub_2DEF80();
  sub_165364(&qword_3CCDD0, (void (*)(uint64_t))&type metadata accessor for SeriesListSortOrder);
  sub_2E4390();
  return sub_2E51E0();
}

uint64_t sub_164500(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_16455C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1645B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_16460C()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_164644@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_163CD0(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

uint64_t sub_164650(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (sub_2E5020() & 1) != 0))
  {
    BOOL v6 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v6 || (char v5 = 0, (sub_2E5020() & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
      {
        _s11ShelfGridIDVMa();
        sub_2DEF80();
        sub_165364(&qword_3CCDD8, (void (*)(uint64_t))&type metadata accessor for SeriesListSortOrder);
        sub_2E45C0();
        sub_2E45C0();
        if (v10 == v8 && v11 == v9) {
          char v5 = 1;
        }
        else {
          char v5 = sub_2E5020();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v5 = 0;
      }
    }
  }
  return v5 & 1;
}

uint64_t sub_1647B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(long long *__return_ptr, void, char *))
{
  uint64_t v21 = _swiftEmptyArrayStorage;
  sub_2A47C4(0, 0, 0);
  uint64_t v8 = _swiftEmptyArrayStorage;
  int64_t v9 = a4 >> 1;
  uint64_t result = swift_unknownObjectRetain();
  if (v9 == a3)
  {
LABEL_2:
    swift_unknownObjectRelease();
    return (uint64_t)v8;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = a2 + 40 * a3;
    uint64_t v13 = a3;
    uint64_t v16 = a3 - v9;
    while (v13 + v11 < v9)
    {
      uint64_t result = sub_66310(v12, (uint64_t)v18);
      if (__OFADD__(v11, 1)) {
        goto LABEL_13;
      }
      *(void *)&v19[0] = v11;
      sub_65CF4(v18, (uint64_t)v19 + 8);
      v20[0] = v19[0];
      v20[1] = v19[1];
      void v20[2] = v19[2];
      a5(v19, *(void *)&v19[0], (char *)v20 + 8);
      sub_662B4((uint64_t)v20, &qword_3C7018);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A47C4(0, v8[2] + 1, 1);
        uint64_t v8 = v21;
      }
      unint64_t v15 = v8[2];
      unint64_t v14 = v8[3];
      if (v15 >= v14 >> 1)
      {
        sub_2A47C4(v14 > 1, v15 + 1, 1);
        uint64_t v8 = v21;
      }
      v8[2] = v15 + 1;
      uint64_t result = sub_65CF4(v19, (uint64_t)&v8[5 * v15 + 4]);
      ++v11;
      v12 += 40;
      if (!(v16 + v11)) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t sub_164984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11ShelfGridIDVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1649E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_164A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesRoomListHeaderComponentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_164AA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_164B00()
{
  unint64_t result = qword_3C80F8;
  if (!qword_3C80F8)
  {
    sub_70ECC(&qword_3C80F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3C80F8);
  }
  return result;
}

uint64_t _s36SeriesSeeAllPaginationIntentProviderVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s36SeriesSeeAllPaginationIntentProviderVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s36SeriesSeeAllPaginationIntentProviderVwta(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s36SeriesSeeAllPaginationIntentProviderVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s36SeriesSeeAllPaginationIntentProviderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s36SeriesSeeAllPaginationIntentProviderVMa()
{
  return &_s36SeriesSeeAllPaginationIntentProviderVN;
}

void *sub_164CDC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v10 = sub_2DEF80();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_164DDC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_2DEF80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_164E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2DEF80();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_164F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2DEF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_164FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_2DEF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_165054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2DEF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1650F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16510C);
}

uint64_t sub_16510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2DEF80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1651BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1651D0);
}

uint64_t sub_1651D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2DEF80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_165278()
{
  uint64_t result = sub_2DEF80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_16531C()
{
  return sub_165364(&qword_3CCDC8, (void (*)(uint64_t))_s11ShelfGridIDVMa);
}

uint64_t sub_165364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UIBarButtonItem._anchoringToolbarView.getter()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_3EE160);
  swift_endAccess();
  if (v1)
  {
    sub_2E4B80();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_8C168((uint64_t)v4, (uint64_t)v5);
  if (v6)
  {
    sub_165488();
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_7AF00((uint64_t)v5);
    return 0;
  }
}

unint64_t sub_165488()
{
  unint64_t result = qword_3D1990;
  if (!qword_3D1990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3D1990);
  }
  return result;
}

void sub_1654C8(void **a1, void **a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = v2;
  objc_setAssociatedObject(v3, &unk_3EE160, v4, 0);
  swift_endAccess();
}

void UIBarButtonItem._anchoringToolbarView.setter(void *a1)
{
  swift_beginAccess();
  objc_setAssociatedObject(v1, &unk_3EE160, a1, 0);
  swift_endAccess();
}

void (*UIBarButtonItem._anchoringToolbarView.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[3] = UIBarButtonItem._anchoringToolbarView.getter();
  return sub_16560C;
}

void sub_16560C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  id v4 = *(void **)(*(void *)a1 + 24);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  swift_beginAccess();
  if (a2)
  {
    id v6 = v4;
    objc_setAssociatedObject(v5, &unk_3EE160, v6, 0);
    swift_endAccess();

    id v4 = (void *)v3[3];
  }
  else
  {
    objc_setAssociatedObject(v5, &unk_3EE160, v4, 0);
    swift_endAccess();
  }

  free(v3);
}

uint64_t sub_1656CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UIBarButtonItem._anchoringToolbarView.getter();
  *a1 = result;
  return result;
}

id VCStackManager.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VCStackManager();
  return [super init];
}

id VCStackManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VCStackManager();
  return [super dealloc];
}

uint64_t _s11BookStoreUI14VCStackManagerC7presentyySo16UIViewControllerC_SbSDys11AnyHashableVypGtFZ_0(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_2E35E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E3600();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isMainThread])
  {
    sub_63BF0(0, (unint64_t *)&qword_3CCE20);
    return sub_2E4930();
  }
  else
  {
    sub_63BF0(0, (unint64_t *)&qword_3C7CF8);
    uint64_t v20 = sub_2E4970();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a3;
    *(unsigned char *)(v15 + 32) = a2 & 1;
    aBlock[4] = sub_165B84;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_74DF8;
    aBlock[3] = &unk_395960;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = a1;
    swift_bridgeObjectRetain();
    swift_release();
    sub_2E35F0();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_165C00();
    sub_63BAC(&qword_3CCE10);
    sub_165C58();
    sub_2E4BB0();
    uint64_t v18 = (void *)v20;
    sub_2E4980();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t type metadata accessor for VCStackManager()
{
  return self;
}

uint64_t sub_165B44()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_165B84()
{
  return sub_2E4930();
}

uint64_t sub_165BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_165BF8()
{
  return swift_release();
}

unint64_t sub_165C00()
{
  unint64_t result = qword_3CCE08;
  if (!qword_3CCE08)
  {
    sub_2E35E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCE08);
  }
  return result;
}

unint64_t sub_165C58()
{
  unint64_t result = qword_3CCE18;
  if (!qword_3CCE18)
  {
    sub_70ECC(&qword_3CCE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppAnalyticsActionImplementation()
{
  return &type metadata for AppAnalyticsActionImplementation;
}

uint64_t sub_165CC4()
{
  return sub_16B6B0(&qword_3C75B8, (void (*)(uint64_t))&type metadata accessor for AppAnalyticsAction);
}

uint64_t sub_165D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v28 = a1;
  uint64_t v5 = sub_2DE380();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = sub_2DE370();
  uint64_t v33 = *(void *)(v29 - 8);
  __n128 v9 = __chkstk_darwin(v29);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a2, v5, v9);
  uint64_t v30 = v11;
  sub_2DE360();
  uint64_t v12 = sub_63BAC(&qword_3CA5E0);
  uint64_t v13 = sub_2DE0A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = v12;
  uint64_t v27 = v16 + v15;
  uint64_t v17 = swift_allocObject();
  long long v34 = xmmword_2FEFE0;
  *(_OWORD *)(v17 + 16) = xmmword_2FEFE0;
  uint64_t v18 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  unsigned int v24 = enum case for DataEventTrait.onlyOnce(_:);
  v19(v17 + v16, enum case for DataEventTrait.onlyOnce(_:), v13);
  uint64_t v25 = v19;
  sub_16B6B0(&qword_3CCE50, (void (*)(uint64_t))&type metadata accessor for LocationData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v34;
  v19(v20 + v16, v18, v13);
  sub_2DE8E0();
  sub_16B6B0(&qword_3CA608, (void (*)(uint64_t))&type metadata accessor for ClickData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v34;
  v25(v21 + v16, v24, v13);
  sub_2DE320();
  sub_16B6B0(&qword_3CA5E8, (void (*)(uint64_t))&type metadata accessor for SectionData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE170();
  sub_16B6B0(&qword_3CA618, (void (*)(uint64_t))&type metadata accessor for ClickEvent);
  memset(v35, 0, sizeof(v35));
  sub_2DE090();
  sub_662B4((uint64_t)v35, &qword_3C78D0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v33 + 8))(v30, v29);
}

uint64_t sub_166190()
{
  uint64_t v0 = sub_2DE5E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2DE5D0();
  sub_63BAC(&qword_3CA5E0);
  uint64_t v4 = sub_2DE0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2FEFE0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, enum case for DataEventTrait.onlyOnce(_:), v4);
  sub_16B6B0(&qword_3CCE58, (void (*)(uint64_t))&type metadata accessor for SingleCollectionData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE5A0();
  sub_16B6B0(&qword_3CCE60, (void (*)(uint64_t))&type metadata accessor for AllInSeriesViewEvent);
  memset(v9, 0, sizeof(v9));
  sub_2DE090();
  sub_662B4((uint64_t)v9, &qword_3C78D0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_166414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a4;
  uint64_t v26 = a1;
  uint64_t v23 = sub_2DE410();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2DE7A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  __chkstk_darwin(v7);
  uint64_t v25 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2DE6B0();
  uint64_t v11 = sub_16B6B0(&qword_3CCE68, (void (*)(uint64_t))&type metadata accessor for ContextualActionSheetExposureEvent);
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  sub_2DE060();
  sub_2DE310();
  sub_2DE2F0();
  sub_2DE250();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LinkActionType.click(_:), v23);
  sub_2DE790();
  uint64_t v23 = sub_63BAC(&qword_3CA5E0);
  uint64_t v12 = sub_2DE0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  long long v22 = xmmword_2FEFE0;
  *(_OWORD *)(v15 + 16) = xmmword_2FEFE0;
  uint64_t v16 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104);
  v17(v15 + v14, enum case for DataEventTrait.onlyOnce(_:), v12);
  sub_2DE260();
  sub_16B6B0(&qword_3CCE70, (void (*)(uint64_t))&type metadata accessor for ContentData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v22;
  v17(v18 + v14, v16, v12);
  sub_16B6B0(&qword_3CB8C8, (void (*)(uint64_t))&type metadata accessor for LinkData);
  uint64_t v19 = v25;
  uint64_t v20 = v29;
  sub_2DE080();
  swift_bridgeObjectRelease();
  memset(v31, 0, sizeof(v31));
  sub_2DE090();
  sub_662B4((uint64_t)v31, &qword_3C78D0);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v20);
}

uint64_t sub_166880()
{
  sub_63BAC(&qword_3CA5E0);
  uint64_t v0 = sub_2DE0A0();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2FEFE0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_2DE1D0();
  sub_16B6B0(&qword_3CCE78, (void (*)(uint64_t))&type metadata accessor for RatingData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE2C0();
  sub_16B6B0(&qword_3CCE80, (void (*)(uint64_t))&type metadata accessor for RatingEvent);
  memset(v5, 0, sizeof(v5));
  sub_2DE090();
  return sub_662B4((uint64_t)v5, &qword_3C78D0);
}

uint64_t sub_166A5C()
{
  sub_63BAC(&qword_3CA5E0);
  uint64_t v0 = sub_2DE0A0();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2FEFE0;
  uint64_t v4 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 104);
  v5(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_2DE4A0();
  sub_16B6B0(&qword_3CCE88, (void (*)(uint64_t))&type metadata accessor for DialogActionData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2FEFE0;
  v5(v6 + v2, v4, v0);
  sub_2DE190();
  sub_16B6B0(&qword_3CCE90, (void (*)(uint64_t))&type metadata accessor for DialogData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE500();
  sub_16B6B0(&qword_3CCE98, (void (*)(uint64_t))&type metadata accessor for DialogActionEvent);
  memset(v8, 0, sizeof(v8));
  sub_2DE090();
  return sub_662B4((uint64_t)v8, &qword_3C78D0);
}

uint64_t sub_166CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a3;
  uint64_t v8 = sub_2DE6A0();
  unint64_t v27 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2DE610();
  v26[4] = sub_16B6B0(&qword_3CCEA8, (void (*)(uint64_t))&type metadata accessor for SeriesDetailsViewEvent);
  sub_2DE060();
  uint64_t v12 = sub_63BAC(&qword_3CA5E0);
  uint64_t v13 = sub_2DE0A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v36 = v12;
  uint64_t v31 = v16 | 7;
  uint64_t v32 = v17 + v15;
  uint64_t v18 = swift_allocObject();
  long long v30 = xmmword_2FEFE0;
  *(_OWORD *)(v18 + 16) = xmmword_2FEFE0;
  uint64_t v33 = v17;
  uint64_t v19 = *(void (**)(void))(v14 + 104);
  unsigned int v29 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v34 = v14 + 104;
  uint64_t v35 = v13;
  uint64_t v28 = (void (*)(uint64_t, void, uint64_t))v19;
  v19(v18 + v17);
  sub_2DE200();
  sub_16B6B0(&qword_3CBB00, (void (*)(uint64_t))&type metadata accessor for SeriesData);
  uint64_t v37 = a1;
  sub_2DE080();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v26[3] = v11;
    uint64_t v20 = sub_2DE510();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      v26[2] = a5;
      v26[1] = v20;
      long long v22 = (void *)(v20 + 32);
      uint64_t v23 = (void (**)(char *, uint64_t))(v27 + 8);
      unint64_t v27 = 0x8000000000317F60;
      do
      {
        sub_15B034((uint64_t)v22, (uint64_t)v38);
        sub_63BAC(&qword_3C6EB0);
        if (swift_dynamicCast())
        {
          (*v23)(v10, v8);
          sub_71044(v22, v22[3]);
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = v30;
          v28(v24 + v33, v29, v35);
          sub_2DE080();
          swift_bridgeObjectRelease();
        }
        v22 += 6;
        --v21;
      }
      while (v21);
    }
    swift_bridgeObjectRelease();
  }
  return sub_2DE070();
}

uint64_t sub_1670C0()
{
  sub_63BAC(&qword_3CA5E0);
  uint64_t v0 = sub_2DE0A0();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2FEFE0;
  uint64_t v4 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 104);
  v5(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_2DE200();
  sub_16B6B0(&qword_3CBB00, (void (*)(uint64_t))&type metadata accessor for SeriesData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2FEFE0;
  v5(v6 + v2, v4, v0);
  sub_2DE4E0();
  sub_16B6B0(&qword_3CCEB0, (void (*)(uint64_t))&type metadata accessor for FormatFilterData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE560();
  sub_16B6B0(&qword_3CCEB8, (void (*)(uint64_t))&type metadata accessor for SeriesFilterEvent);
  memset(v8, 0, sizeof(v8));
  sub_2DE090();
  return sub_662B4((uint64_t)v8, &qword_3C78D0);
}

uint64_t sub_167360()
{
  return sub_2DE070();
}

uint64_t sub_167488(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = sub_2DF850();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    sub_2DF800();
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_2DF830();
    os_log_type_t v16 = sub_2E48F0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      v18[1] = v17 + 4;
      swift_bridgeObjectRetain();
      long long v18[2] = sub_5F150(a2, a3, &v19);
      sub_2E4B40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v15, v16, "Failed to retrieve assetCount for series id:%s. This will result in failing to emit AllInSeriesViewEvent", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    long long v13[2] = a4;
    v13[3] = a2;
    v13[4] = a3;
    swift_bridgeObjectRetain();
    sub_2DE800();
    return swift_release();
  }
}

uint64_t sub_167718(uint64_t a1, double a2)
{
  uint64_t v27 = sub_2DE1D0();
  uint64_t v4 = *(void *)(v27 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v27);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_2DE760();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void (**)(char *, void, uint64_t, __n128))(v10 + 104);
  v17((char *)&v24 - v15, enum case for Rating.unknown(_:), v9, v14);
  uint64_t v26 = a1;
  if (a2 == 0.2)
  {
    uint64_t v18 = (unsigned int *)&enum case for Rating.one(_:);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    ((void (*)(char *, void, uint64_t))v17)(v16, *v18, v9);
    goto LABEL_12;
  }
  if (a2 == 0.4)
  {
    uint64_t v18 = (unsigned int *)&enum case for Rating.two(_:);
    goto LABEL_11;
  }
  if (a2 == 0.6)
  {
    uint64_t v18 = (unsigned int *)&enum case for Rating.three(_:);
    goto LABEL_11;
  }
  if (a2 == 0.8)
  {
    uint64_t v18 = (unsigned int *)&enum case for Rating.four(_:);
    goto LABEL_11;
  }
  if (a2 == 1.0)
  {
    uint64_t v18 = (unsigned int *)&enum case for Rating.five(_:);
    goto LABEL_11;
  }
LABEL_12:
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
  sub_2DE1C0();
  uint64_t v19 = v25;
  uint64_t v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v25, v8, v27);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v19, v20);
  sub_2DE800();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_167A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a1;
  uint64_t v42 = sub_2DE1A0();
  uint64_t v5 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_2DE190();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v7;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v39 - v9;
  uint64_t v50 = sub_2DE4A0();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v10 = *(void *)(v48 + 64);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v56 = (char *)&v39 - v12;
  uint64_t v13 = sub_2DE4C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  uint64_t v17 = enum case for DialogActionType.unknown(_:);
  uint64_t v18 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v19;
  uint64_t v41 = *(void (**)(__n128))(v14 + 104);
  v41(v15);
  uint64_t v21 = a2;
  uint64_t v46 = v14;
  if (a2 == 0x6C7566706C6568 && a3 == 0xE700000000000000 || (sub_2E5020() & 1) != 0)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
    v40(v18, v20);
    uint64_t v22 = (unsigned int *)&enum case for DialogActionType.sortMostHelpful(_:);
  }
  else if (a2 == 0x6C6261726F766166 && a3 == 0xE900000000000065 || (sub_2E5020() & 1) != 0)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
    v40(v18, v20);
    uint64_t v22 = (unsigned int *)&enum case for DialogActionType.sortMostFavorable(_:);
  }
  else
  {
    if ((a2 != 0x6C61636974697263 || a3 != 0xE800000000000000) && (sub_2E5020() & 1) == 0)
    {
      uint64_t v23 = v42;
      if (v21 == 0x746E65636572 && a3 == 0xE600000000000000)
      {
        uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
        v40(v18, v20);
        uint64_t v24 = v43;
        uint64_t v25 = v41;
      }
      else
      {
        char v38 = sub_2E5020();
        uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
        v40(v18, v20);
        uint64_t v24 = v43;
        uint64_t v25 = v41;
        if ((v38 & 1) == 0) {
          goto LABEL_6;
        }
      }
      uint64_t v17 = enum case for DialogActionType.sortMostRecent(_:);
      goto LABEL_6;
    }
    uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
    v40(v18, v20);
    uint64_t v22 = (unsigned int *)&enum case for DialogActionType.sortMostCritical(_:);
  }
  uint64_t v17 = *v22;
  uint64_t v23 = v42;
  uint64_t v24 = v43;
  uint64_t v25 = v41;
LABEL_6:
  uint64_t v44 = v20;
  uint64_t v45 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v18, v17, v20);
  sub_2DE4B0();
  uint64_t v26 = v56;
  sub_2DE490();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v24, enum case for DialogType.sortReviews(_:), v23);
  uint64_t v27 = v49;
  sub_2DE180();
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v30 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v26, v50);
  uint64_t v31 = v52;
  uint64_t v32 = v53;
  uint64_t v33 = v54;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v53, v27, v54);
  unint64_t v34 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v35 = (v10 + *(unsigned __int8 *)(v31 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v36 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v36 + v34, v28, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v36 + v35, v32, v33);
  sub_2DE800();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v56, v30);
  return ((uint64_t (*)(char *, uint64_t))v40)(v45, v44);
}

uint64_t sub_1680FC(void *a1, unint64_t a2)
{
  unint64_t v63 = a2;
  uint64_t v3 = sub_2E3920();
  uint64_t v72 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v71 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_2DE200();
  uint64_t v64 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v61 = v5;
  uint64_t v67 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3C7138);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = sub_2DDEA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v53 - v16;
  __chkstk_darwin(v17);
  int v69 = (char *)&v53 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v53 - v20;
  type metadata accessor for Page.LifecycleInfo();
  sub_2E3A90();
  uint64_t v22 = v75;
  sub_63BAC(&qword_3CCEA0);
  uint64_t v62 = a1;
  sub_2E3A90();
  uint64_t v70 = v75;
  uint64_t v23 = (uint64_t *)(v22 + 16);
  swift_beginAccess();
  uint64_t v24 = *(void *)(v22 + 16);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v73 = v3;
  if (!v25 || (unint64_t v26 = sub_5F86C(2u), (v27 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_10;
  }
  uint64_t v60 = v21;
  unint64_t v28 = *(void *)(v24 + 56) + *(void *)(v13 + 72) * v26;
  uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v57 = *(void *)(v13 + 72);
  uint64_t v58 = v29;
  v29(v11, v28, v12);
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v59(v11, 0, 1, v12);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v56(v11, 1, v12) == 1)
  {
LABEL_10:
    uint64_t v47 = (uint64_t)v11;
LABEL_11:
    sub_662B4(v47, &qword_3C7138);
LABEL_12:
    uint64_t v49 = v72;
    uint64_t v48 = v73;
    uint64_t v50 = v71;
    sub_63BAC(&qword_3C8908);
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v50, enum case for ActionOutcome.unsupported(_:), v48);
    uint64_t v45 = sub_2E4260();
    swift_release();
    swift_release();
    return v45;
  }
  uint64_t v55 = v13 + 16;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v54(v60, v11, v12);
  uint64_t v30 = *v23;
  if (!*(void *)(*v23 + 16) || (unint64_t v31 = sub_5F86C(3u), (v32 & 1) == 0))
  {
    v59(v8, 1, 1, v12);
    goto LABEL_15;
  }
  v58(v8, *(void *)(v30 + 56) + v31 * v57, v12);
  v59(v8, 0, 1, v12);
  if (v56(v8, 1, v12) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v60, v12);
    uint64_t v47 = (uint64_t)v8;
    goto LABEL_11;
  }
  uint64_t v33 = v69;
  v54(v69, v8, v12);
  unint64_t v34 = v60;
  if ((sub_2DDE30() & 1) == 0)
  {
    uint64_t v52 = *(void (**)(char *, uint64_t))(v13 + 8);
    v52(v33, v12);
    v52(v34, v12);
    goto LABEL_12;
  }
  sub_2DE8A0();
  sub_2E3A90();
  uint64_t v62 = v74;
  unint64_t v35 = (void (*)(char *, char *, uint64_t))v58;
  v58(v65, (unint64_t)v34, v12);
  uint64_t v36 = v64;
  (*(void (**)(char *, unint64_t, uint64_t))(v64 + 16))(v67, v63, v68);
  v35(v66, v33, v12);
  uint64_t v37 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v38 = (v37 + 16) & ~v37;
  unint64_t v39 = (v14 + *(unsigned __int8 *)(v36 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v63 = (v61 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (v37 + v63 + 8) & ~v37;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v41 + v38;
  uint64_t v43 = (void (*)(uint64_t, char *, uint64_t))v54;
  v54((char *)v42, v65, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v67, v68);
  *(void *)(v41 + v63) = v70;
  v43(v41 + v40, v66, v12);
  swift_retain();
  uint64_t v44 = v62;
  sub_2DE800();
  swift_release();
  sub_63BAC(&qword_3C8908);
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, enum case for ActionOutcome.performed(_:), v73);
  uint64_t v45 = sub_2E4260();
  swift_release();
  swift_release();

  uint64_t v46 = *(void (**)(char *, uint64_t))(v13 + 8);
  v46(v69, v12);
  v46(v60, v12);
  return v45;
}

uint64_t sub_168874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v57 = (void *)a3;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v4 = sub_2E3920();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2DE200();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  uint64_t v45 = v7;
  uint64_t v54 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_2DE4E0();
  uint64_t v50 = *(void *)(v56 - 8);
  uint64_t v8 = *(void *)(v50 + 64);
  __chkstk_darwin(v56);
  uint64_t v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v44 - v10;
  uint64_t v11 = sub_63BAC(&qword_3CCE28);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_2DE770();
  uint64_t v14 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v52 = (char *)&v44 - v18;
  uint64_t v19 = sub_63BAC(&qword_3CCE30);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_2DE1B0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v44 - v27;
  sub_66444((uint64_t)v57, (uint64_t)v21, &qword_3CCE30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    uint64_t v29 = &qword_3CCE30;
    uint64_t v30 = (uint64_t)v21;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v21, v22);
    sub_66444(v51, (uint64_t)v13, &qword_3CCE28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v58) != 1)
    {
      uint64_t v44 = v14;
      char v32 = v52;
      uint64_t v33 = v58;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v52, v13, v58);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v28, v22);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v32, v33);
      unint64_t v34 = v55;
      sub_2DE4D0();
      sub_2DE8A0();
      sub_2E3A90();
      uint64_t v57 = (void *)v62;
      uint64_t v35 = v48;
      uint64_t v36 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v54, v47, v49);
      uint64_t v37 = v50;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v34, v56);
      unint64_t v38 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      unint64_t v39 = (v45 + *(unsigned __int8 *)(v37 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      uint64_t v40 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v40 + v38, v54, v36);
      uint64_t v41 = v56;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v40 + v39, v53, v56);
      uint64_t v42 = v57;
      sub_2DE800();
      swift_release();
      sub_63BAC(&qword_3C8908);
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for ActionOutcome.performed(_:), v61);
      uint64_t v31 = sub_2E4260();

      (*(void (**)(char *, uint64_t))(v37 + 8))(v55, v41);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v52, v58);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    uint64_t v29 = &qword_3CCE28;
    uint64_t v30 = (uint64_t)v13;
  }
  sub_662B4(v30, v29);
  sub_63BAC(&qword_3C8908);
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for ActionOutcome.unsupported(_:), v61);
  return sub_2E4260();
}

uint64_t sub_168F58(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_2E3920();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2DE460();
  uint64_t v62 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v59 = v8;
  uint64_t v65 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3C7138);
  __chkstk_darwin(v9 - 8);
  uint64_t v67 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v53 - v12;
  uint64_t v14 = sub_2DDEA0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v64 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v63 = (char *)v53 - v18;
  __chkstk_darwin(v19);
  uint64_t v66 = (char *)v53 - v20;
  __chkstk_darwin(v21);
  uint64_t v68 = (char *)v53 - v22;
  type metadata accessor for Page.LifecycleInfo();
  uint64_t v60 = a1;
  sub_2E3A90();
  uint64_t v23 = v72;
  uint64_t v24 = (uint64_t *)(v72 + 16);
  swift_beginAccess();
  uint64_t v69 = v23;
  uint64_t v70 = v4;
  uint64_t v25 = *(void *)(v23 + 16);
  if (!*(void *)(v25 + 16) || (unint64_t v26 = sub_5F86C(2u), (v27 & 1) == 0))
  {
    uint64_t v28 = v3;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_10;
  }
  uint64_t v54 = v7;
  uint64_t v28 = v3;
  unint64_t v29 = *(void *)(v25 + 56) + *(void *)(v15 + 72) * v26;
  uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
  uint64_t v56 = *(void *)(v15 + 72);
  uint64_t v57 = v30;
  v30(v13, v29, v14);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v58(v13, 0, 1, v14);
  uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v55(v13, 1, v14) == 1)
  {
LABEL_10:
    sub_662B4((uint64_t)v13, &qword_3C7138);
    uint64_t v36 = v28;
    uint64_t v50 = v70;
    uint64_t v37 = v6;
LABEL_11:
    sub_63BAC(&qword_3C8908);
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v37, enum case for ActionOutcome.unsupported(_:), v36);
    uint64_t v48 = sub_2E4260();
    swift_release();
    return v48;
  }
  v53[1] = v15 + 16;
  v53[0] = *(void *)(v15 + 32);
  ((void (*)(char *, char *, uint64_t))v53[0])(v68, v13, v14);
  uint64_t v31 = *v24;
  if (!*(void *)(*v24 + 16) || (unint64_t v32 = sub_5F86C(3u), (v33 & 1) == 0))
  {
    uint64_t v13 = v67;
    v58(v67, 1, 1, v14);
    goto LABEL_14;
  }
  uint64_t v13 = v67;
  v57(v67, *(void *)(v31 + 56) + v32 * v56, v14);
  v58(v13, 0, 1, v14);
  if (v55(v13, 1, v14) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v14);
    goto LABEL_10;
  }
  unint64_t v34 = v66;
  ((void (*)(char *, char *, uint64_t))v53[0])(v66, v13, v14);
  uint64_t v35 = v68;
  uint64_t v36 = v28;
  uint64_t v37 = v6;
  if ((sub_2DDE30() & 1) == 0)
  {
    uint64_t v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v34, v14);
    v52(v35, v14);
    uint64_t v50 = v70;
    goto LABEL_11;
  }
  sub_2DE8A0();
  sub_2E3A90();
  uint64_t v67 = v71;
  unint64_t v38 = (void (*)(char *, char *, uint64_t))v57;
  v57(v63, (unint64_t)v35, v14);
  uint64_t v60 = v15 + 32;
  uint64_t v39 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v65, v61, v54);
  v38(v64, v34, v14);
  uint64_t v40 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v41 = (v40 + 16) & ~v40;
  unint64_t v42 = (v16 + *(unsigned __int8 *)(v39 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v43 = (v59 + v40 + v42) & ~v40;
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v44 + v41;
  uint64_t v46 = (void (*)(unint64_t, char *, uint64_t))v53[0];
  ((void (*)(uint64_t, char *, uint64_t))v53[0])(v45, v63, v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v44 + v42, v65, v54);
  v46(v44 + v43, v64, v14);
  uint64_t v47 = v67;
  sub_2DE800();
  swift_release();
  sub_63BAC(&qword_3C8908);
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v6, enum case for ActionOutcome.performed(_:), v36);
  uint64_t v48 = sub_2E4260();
  swift_release();

  uint64_t v49 = *(void (**)(char *, uint64_t))(v15 + 8);
  v49(v66, v14);
  v49(v68, v14);
  return v48;
}

uint64_t sub_1696A4(uint64_t a1, void (*a2)(char *, char *, void *))
{
  uint64_t v146 = a1;
  uint64_t v137 = sub_2E3920();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v135 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_2DE460();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3CCE28);
  __chkstk_darwin(v5 - 8);
  uint64_t v113 = (uint64_t)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CCE30);
  __chkstk_darwin(v7 - 8);
  uint64_t v112 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_2DE200();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v117 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_2DE260();
  uint64_t v126 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v122 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = v10;
  __chkstk_darwin(v11);
  uint64_t v128 = (char *)&v111 - v12;
  uint64_t v125 = sub_2DDEA0();
  uint64_t v127 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  int v123 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v13;
  __chkstk_darwin(v14);
  unint64_t v124 = (char *)&v111 - v15;
  uint64_t v16 = sub_2E15D0();
  uint64_t v132 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v131 = (void (*)(char *, char *, uint64_t))((char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v130 = (char *)&v111 - v19;
  uint64_t v148 = sub_2DE320();
  uint64_t v144 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = v20;
  __chkstk_darwin(v22);
  uint64_t v149 = (char *)&v111 - v23;
  __n128 v147 = (void *)sub_2DE8E0();
  uint64_t v142 = *(v147 - 1);
  uint64_t v24 = *(char **)(v142 + 64);
  __chkstk_darwin(v147);
  uint64_t v139 = (char *)&v111 - ((unint64_t)(v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v143 = (char *)&v111 - v26;
  uint64_t v140 = (void *)sub_2DE380();
  uint64_t v27 = *(v140 - 1);
  uint64_t v28 = *(void *)(v27 + 64);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v111 - v30;
  uint64_t v32 = sub_2DE130();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v111 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2DE8A0();
  uint64_t v133 = a2;
  sub_2E3A90();
  id v145 = (id)v150;
  sub_2DE150();
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v35, v32);
  if (v36 == enum case for AppAnalyticsAction.Type.clickEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v37 = sub_63BAC(&qword_3CCE48);
    unint64_t v38 = &v35[*(int *)(v37 + 48)];
    uint64_t v39 = &v35[*(int *)(v37 + 64)];
    uint64_t v133 = *(void (**)(char *, char *, void *))(v27 + 32);
    uint64_t v146 = v27 + 32;
    uint64_t v130 = v24;
    uint64_t v40 = v31;
    uint64_t v111 = v31;
    uint64_t v41 = v35;
    unint64_t v42 = v140;
    v133(v31, v41, v140);
    uint64_t v134 = v21;
    uint64_t v132 = *(void *)(v142 + 32);
    unint64_t v43 = v143;
    ((void (*)(char *, char *, void *))v132)(v143, v38, v147);
    uint64_t v44 = v144;
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
    uint64_t v45 = v149;
    uint64_t v46 = v39;
    uint64_t v47 = v148;
    v131(v149, v46, v148);
    (*(void (**)(char *, char *, void *))(v27 + 16))(v138, v40, v42);
    uint64_t v48 = v142;
    (*(void (**)(char *, char *, void *))(v142 + 16))(v139, v43, v147);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v134, v45, v47);
    uint64_t v49 = v27;
    unint64_t v50 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v51 = v48;
    unint64_t v52 = (v28 + *(unsigned __int8 *)(v48 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    unint64_t v53 = (unint64_t)&v130[*(unsigned __int8 *)(v44 + 80) + v52] & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v54 = swift_allocObject();
    unint64_t v55 = v54 + v50;
    uint64_t v56 = v140;
    v133((char *)v55, v138, v140);
    uint64_t v57 = v147;
    ((void (*)(unint64_t, char *, void *))v132)(v54 + v52, v139, v147);
    uint64_t v58 = v148;
    v131((char *)(v54 + v53), v134, v148);
    id v59 = v145;
    sub_2DE800();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v149, v58);
    (*(void (**)(char *, void *))(v51 + 8))(v143, v57);
    (*(void (**)(char *, void *))(v49 + 8))(v111, v56);
    id v60 = v59;
LABEL_10:
    sub_63BAC(&qword_3C8908);
    (*(void (**)(char *, void, uint64_t))(v136 + 104))(v135, enum case for ActionOutcome.performed(_:), v137);
    uint64_t v72 = sub_2E4260();

    return v72;
  }
  uint64_t v61 = v141;
  uint64_t v62 = v21;
  uint64_t v64 = v148;
  unint64_t v63 = v149;
  uint64_t v65 = v144;
  if (v36 == enum case for AppAnalyticsAction.Type.popData(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v66 = &v35[*(int *)(sub_63BAC(&qword_3CBAF8) + 48)];
    sub_1285DC((long long *)v35, &v150);
    uint64_t v67 = v132;
    uint64_t v68 = v130;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v130, v66, v16);
    uint64_t v69 = (char *)v131;
    sub_2E3A90();
    char v70 = sub_2E15C0();
    id v60 = v145;
    if (v70)
    {
      sub_71044(&v150, v151);
      swift_getDynamicType();
      sub_2DE840();
    }
    uint64_t v71 = *(void (**)(char *, uint64_t))(v67 + 8);
    v71(v69, v16);
    v71(v68, v16);
    goto LABEL_9;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.pushData(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    sub_1285DC((long long *)v35, &v150);
    sub_71044(&v150, v151);
    id v60 = v145;
    sub_2DE860();
LABEL_9:
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v150);
    goto LABEL_10;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportAllInSeriesView(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    id v60 = v145;
    sub_167488((uint64_t)v145, *(void *)v35, *((void *)v35 + 1), *((void *)v35 + 2), v35[24]);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportContextualActionSheetExposure(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v74 = sub_63BAC(&qword_3CCE40);
    uint64_t v75 = &v35[*(int *)(v74 + 48)];
    uint64_t v139 = &v35[*(int *)(v74 + 64)];
    uint64_t v76 = *(char **)(v127 + 32);
    uint64_t v142 = v127 + 32;
    unint64_t v143 = v76;
    uint64_t v77 = v124;
    uint64_t v78 = v35;
    uint64_t v79 = v125;
    ((void (*)(char *, char *, uint64_t))v76)(v124, v78, v125);
    uint64_t v80 = v126;
    uint64_t v81 = *(void **)(v126 + 32);
    uint64_t v146 = v126 + 32;
    __n128 v147 = v81;
    ((void (*)(char *, char *, uint64_t))v81)(v128, v75, v129);
    uint64_t v82 = v65;
    uint64_t v140 = *(void **)(v65 + 32);
    uint64_t v83 = v63;
    uint64_t v84 = v63;
    uint64_t v85 = v64;
    ((void (*)(char *, char *, uint64_t))v140)(v84, v139, v64);
    uint64_t v86 = v127;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v123, v77, v79);
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    uint64_t v134 = v62;
    v87(v62, v83, v85);
    uint64_t v88 = v80;
    uint64_t v89 = v122;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v122, v128, v129);
    unint64_t v90 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    unint64_t v91 = (v120 + *(unsigned __int8 *)(v82 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v92 = (v61 + *(unsigned __int8 *)(v88 + 80) + v91) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v93 = swift_allocObject();
    uint64_t v94 = v125;
    ((void (*)(unint64_t, char *, uint64_t))v143)(v93 + v90, v123, v125);
    ((void (*)(unint64_t, char *, uint64_t))v140)(v93 + v91, v134, v85);
    uint64_t v95 = v89;
    uint64_t v96 = v129;
    ((void (*)(unint64_t, char *, uint64_t))v147)(v93 + v92, v95, v129);
    id v60 = v145;
    sub_2DE800();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v149, v85);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v128, v96);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v94);
    goto LABEL_10;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportRatingEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    double v97 = *((double *)v35 + 2);
    swift_bridgeObjectRelease();
    id v60 = v145;
    sub_167718((uint64_t)v145, v97);
    goto LABEL_10;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportReviewsDialogEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    id v60 = v145;
    sub_167A78((uint64_t)v145, *(void *)v35, *((void *)v35 + 1));
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportSeriesDetailsView(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v98 = v118;
    unint64_t v99 = (unint64_t)v117;
    uint64_t v100 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v35, v119);
    uint64_t v101 = sub_1680FC(v133, v99);
LABEL_26:
    uint64_t v72 = v101;

    (*(void (**)(unint64_t, uint64_t))(v98 + 8))(v99, v100);
    return v72;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportSeriesFilter(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v102 = sub_63BAC(&qword_3CCE38);
    uint64_t v103 = (uint64_t)&v35[*(int *)(v102 + 48)];
    int v104 = &v35[*(int *)(v102 + 64)];
    uint64_t v105 = v118;
    uint64_t v106 = (uint64_t)v117;
    uint64_t v107 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v35, v119);
    uint64_t v108 = v112;
    sub_71900(v103, v112, &qword_3CCE30);
    uint64_t v109 = (uint64_t)v104;
    uint64_t v110 = v113;
    sub_71900(v109, v113, &qword_3CCE28);
    uint64_t v72 = sub_168874((uint64_t)v133, v106, v108, v110);

    sub_662B4(v110, &qword_3CCE28);
    sub_662B4(v108, &qword_3CCE30);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v106, v107);
    return v72;
  }
  if (v36 == enum case for AppAnalyticsAction.Type.reportYearInReviewViewEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
    uint64_t v98 = v115;
    unint64_t v99 = (unint64_t)v114;
    uint64_t v100 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v35, v116);
    uint64_t v101 = sub_168F58((uint64_t)v133, v99);
    goto LABEL_26;
  }
  uint64_t result = sub_2E5010();
  __break(1u);
  return result;
}

uint64_t sub_16A894()
{
  return sub_16A968((uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for SectionData, (uint64_t (*)(void))&type metadata accessor for ContentData);
}

uint64_t sub_16A8D4(uint64_t a1)
{
  return sub_16ABAC(a1, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for SectionData, (uint64_t (*)(void))&type metadata accessor for ContentData, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_166414);
}

uint64_t sub_16A928()
{
  return sub_16A968((uint64_t (*)(void))&type metadata accessor for LocationType, (uint64_t (*)(void))&type metadata accessor for ClickData, (uint64_t (*)(void))&type metadata accessor for SectionData);
}

uint64_t sub_16A968(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v22 = a1(0);
  uint64_t v6 = *(void *)(v22 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v21 = a2(0);
  uint64_t v10 = *(void *)(v21 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = a3(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (v12 + v13 + v16) & ~v16;
  uint64_t v20 = v17 + *(void *)(v15 + 64);
  uint64_t v18 = v7 | v11 | v16 | 7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3 + v8, v22);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3 + v12, v21);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3 + v17, v14);

  return _swift_deallocObject(v3, v20, v18);
}

uint64_t sub_16AB58(uint64_t a1)
{
  return sub_16ABAC(a1, (uint64_t (*)(void))&type metadata accessor for LocationType, (uint64_t (*)(void))&type metadata accessor for ClickData, (uint64_t (*)(void))&type metadata accessor for SectionData, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_165D0C);
}

uint64_t sub_16ABAC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(a2(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a3(0) - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(a4(0) - 8);
  uint64_t v16 = v5 + ((v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));

  return a5(a1, v5 + v10, v5 + v13, v16);
}

uint64_t sub_16AD0C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_16AD44()
{
  return sub_166190();
}

uint64_t sub_16AD50()
{
  uint64_t v1 = sub_2DE1D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_16ADE0()
{
  sub_2DE1D0();

  return sub_166880();
}

uint64_t sub_16AE50()
{
  return sub_16B190((uint64_t (*)(void))&type metadata accessor for DialogActionData, (uint64_t (*)(void))&type metadata accessor for DialogData);
}

uint64_t sub_16AE7C(uint64_t a1)
{
  return sub_16B330(a1, (uint64_t (*)(void))&type metadata accessor for DialogActionData, (uint64_t (*)(void))&type metadata accessor for DialogData, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_166A5C);
}

uint64_t sub_16AEBC()
{
  uint64_t v1 = sub_2DDEA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_2DE200();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v14 = v3 | v8 | 7;
  unint64_t v10 = (v3 + ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  v12(v0 + v10, v1);

  return _swift_deallocObject(v0, v10 + v5, v14);
}

uint64_t sub_16B04C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_2DDEA0() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = *(void *)(sub_2DE200() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v1 + v9);

  return sub_166CFC(a1, v1 + v5, v1 + v8, v10, v1 + ((v4 + v9 + 8) & ~v4));
}

uint64_t sub_16B164()
{
  return sub_16B190((uint64_t (*)(void))&type metadata accessor for SeriesData, (uint64_t (*)(void))&type metadata accessor for FormatFilterData);
}

uint64_t sub_16B190(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 16) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = a2(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v13 = v12 + *(void *)(v10 + 64);
  uint64_t v14 = v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2 + v12, v9);

  return _swift_deallocObject(v2, v13, v14);
}

uint64_t sub_16B2F0(uint64_t a1)
{
  return sub_16B330(a1, (uint64_t (*)(void))&type metadata accessor for SeriesData, (uint64_t (*)(void))&type metadata accessor for FormatFilterData, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1670C0);
}

uint64_t sub_16B330(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = v4 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return a4(a1, v4 + v8, v11);
}

uint64_t sub_16B42C()
{
  uint64_t v1 = sub_2DDEA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_2DE460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v14 = v3 | v8 | 7;
  uint64_t v10 = (*(void *)(v7 + 64) + v3 + v9) & ~v3;
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  v12(v0 + v10, v1);

  return _swift_deallocObject(v0, v10 + v5, v14);
}

uint64_t sub_16B5A8()
{
  sub_2DDEA0();
  sub_2DE460();

  return sub_167360();
}

uint64_t sub_16B6B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_16B6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  uint64_t v9 = (char *)a8 + *(int *)(type metadata accessor for MCatalogRequestIntent() + 44);
  uint64_t v10 = sub_2DEE30();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a7, v10);
}

uint64_t sub_16B784(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2E5020();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void *sub_16B818(void *a1)
{
  type metadata accessor for MCatalogRequestIntent.Result.CodingKeys();
  swift_getWitnessTable();
  v10[0] = sub_2E4F50();
  uint64_t v3 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  uint64_t v5 = (char *)v10 - v4;
  uint64_t v6 = sub_71044(a1, a1[3]);
  sub_2E5220();
  if (!v1)
  {
    uint64_t v7 = v3;
    sub_2E04F0();
    sub_2E46C0();
    v10[1] = swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v8 = v10[0];
    sub_2E4F10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v8);
    uint64_t v6 = (void *)v10[3];
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)a1);
  return v6;
}

uint64_t sub_16BA30()
{
  return 0x656372756F736572;
}

uint64_t sub_16BA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16B784(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_16BA7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static Shelf.ValidationError.== infix(_:_:)();
  *a1 = result & 1;
  return result;
}

uint64_t sub_16BAAC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_16BB00(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void *sub_16BB54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_16B818(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_16BB84()
{
}

uint64_t sub_16BB98@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_63BAC(&qword_3CCEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2FFAC0;
  *(void *)(inited + 32) = 0x656372756F736572;
  *(void *)(inited + 40) = 0xE900000000000073;
  uint64_t v6 = sub_16D19C(v2[2]);
  *(void *)(inited + 72) = sub_63BAC(&qword_3C89D8);
  unint64_t v7 = sub_16D530();
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 80) = v7;
  strcpy((char *)(inited + 88), "relationships");
  *(_WORD *)(inited + 102) = -4864;
  uint64_t v8 = sub_63BAC(&qword_3CCF80);
  *(void *)(inited + 128) = v8;
  unint64_t v9 = sub_16D5D0();
  *(void *)(inited + 136) = v9;
  uint64_t v10 = v2[3];
  uint64_t v44 = inited;
  if (v10)
  {
    int64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      unint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = a1;
      swift_bridgeObjectRetain();
      sub_2A47F4(0, v11, 0);
      uint64_t v13 = 0;
      uint64_t v12 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v14 = sub_2E4420();
        uint64_t v16 = v15;
        uint64_t v45 = v12;
        unint64_t v18 = v12[2];
        unint64_t v17 = v12[3];
        if (v18 >= v17 >> 1)
        {
          sub_2A47F4(v17 > 1, v18 + 1, 1);
          uint64_t v12 = v45;
        }
        ++v13;
        void v12[2] = v18 + 1;
        uint64_t v19 = &v12[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
      }
      while (v11 != v13);
      swift_bridgeObjectRelease();
      uint64_t v8 = v40;
      a1 = v41;
      unint64_t v9 = v39;
    }
    uint64_t inited = v44;
  }
  else
  {
    uint64_t v12 = 0;
  }
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 144) = 0x7377656976;
  *(void *)(inited + 152) = 0xE500000000000000;
  *(void *)(inited + 184) = v8;
  *(void *)(inited + 192) = v9;
  uint64_t v20 = v2[4];
  if (v20)
  {
    int64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = _swiftEmptyArrayStorage;
    if (v21)
    {
      uint64_t v42 = a1;
      swift_bridgeObjectRetain();
      sub_2A47F4(0, v21, 0);
      uint64_t v23 = 0;
      uint64_t v22 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v24 = sub_2E4420();
        uint64_t v26 = v25;
        uint64_t v45 = v22;
        unint64_t v28 = v22[2];
        unint64_t v27 = v22[3];
        if (v28 >= v27 >> 1)
        {
          sub_2A47F4(v27 > 1, v28 + 1, 1);
          uint64_t v22 = v45;
        }
        ++v23;
        v22[2] = v28 + 1;
        uint64_t v29 = &v22[2 * v28];
        v29[4] = v24;
        v29[5] = v26;
      }
      while (v21 != v23);
      swift_bridgeObjectRelease();
      a1 = v42;
    }
    uint64_t inited = v44;
  }
  else
  {
    uint64_t v22 = 0;
  }
  *(void *)(inited + 160) = v22;
  *(void *)(inited + 200) = 0xD000000000000014;
  *(void *)(inited + 208) = 0x8000000000318020;
  uint64_t v30 = v2[5];
  *(void *)(inited + 240) = sub_63BAC(&qword_3CCF98);
  unint64_t v31 = sub_16D670();
  *(void *)(inited + 216) = v30;
  *(void *)(inited + 248) = v31;
  *(void *)(inited + 256) = 0x617461646174656DLL;
  *(void *)(inited + 264) = 0xE800000000000000;
  uint64_t v32 = (char *)v2 + *(int *)(a1 + 44);
  uint64_t v33 = sub_2DEE30();
  *(void *)(inited + 296) = v33;
  *(void *)(inited + 304) = sub_16D710();
  uint64_t v34 = sub_71088((uint64_t *)(inited + 272));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v34, v32, v33);
  a2[3] = &type metadata for AnyCustomJSValueConvertible;
  a2[4] = &protocol witness table for AnyCustomJSValueConvertible;
  uint64_t v35 = (void *)swift_allocObject();
  *a2 = v35;
  sub_63BAC(&qword_3C6EF0);
  uint64_t v45 = (void *)sub_2E4E10();
  swift_bridgeObjectRetain();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_16C35C(v36, 1, &v45);
  if (v3)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_setDeallocating();
    sub_63BAC(qword_3CCEE8);
    swift_arrayDestroy();
    uint64_t v37 = sub_16C738((uint64_t)v45);
    swift_release();
    v35[5] = sub_63BAC(&qword_3CCED0);
    uint64_t result = sub_C9368(&qword_3CCED8, &qword_3CCED0);
    v35[6] = result;
    _OWORD v35[2] = v37;
  }
  return result;
}

uint64_t AnyCustomJSValueConvertible.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_63BAC(&qword_3C6EF0);
    uint64_t v3 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v7 = (uint64_t)v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_16C35C(v4, 1, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_16C738(v7);
  swift_release();
  a2[3] = sub_63BAC(&qword_3CCED0);
  uint64_t result = sub_C9368(&qword_3CCED8, &qword_3CCED0);
  a2[4] = result;
  *a2 = v5;
  return result;
}

uint64_t sub_16C144@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_16BB98(a1, a2);
}

uint64_t MRequestMetadata.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  sub_63BAC(&qword_3CCEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2FCE70;
  *(void *)(inited + 32) = 0x4449656C6966;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v4 = sub_2DEE20();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = &protocol witness table for String;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 88) = 1701734764;
  *(void *)(inited + 96) = 0xE400000000000000;
  int v6 = sub_2DEE10();
  *(void *)(inited + 128) = &type metadata for Int32;
  *(void *)(inited + 136) = &protocol witness table for Int32;
  *(_DWORD *)(inited + 104) = v6;
  a1[3] = &type metadata for AnyCustomJSValueConvertible;
  a1[4] = &protocol witness table for AnyCustomJSValueConvertible;
  uint64_t v7 = (void *)swift_allocObject();
  *a1 = v7;
  sub_63BAC(&qword_3C6EF0);
  uint64_t v11 = sub_2E4E10();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_16C35C(v8, 1, &v11);
  if (v1)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_setDeallocating();
    sub_63BAC(qword_3CCEE8);
    swift_arrayDestroy();
    unint64_t v9 = sub_16C738(v11);
    swift_release();
    v7[5] = sub_63BAC(&qword_3CCED0);
    uint64_t result = sub_C9368(&qword_3CCED8, &qword_3CCED0);
    v7[6] = result;
    v7[2] = v9;
  }
  return result;
}

uint64_t sub_16C340@<X0>(void *a1@<X8>)
{
  return MRequestMetadata.jsRepresentation(in:)(a1);
}

uint64_t sub_16C35C(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_66444(a1 + 32, (uint64_t)&v44, qword_3CCEE8);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_65CF4(v46, (uint64_t)v41);
  unint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_5F740(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_62ED0();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    int64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *int64_t v21 = v7;
    v21[1] = v8;
    sub_65CF4(v41, v20[7] + 40 * v11);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 88; ; i += 56)
    {
      sub_66444(i, (uint64_t)&v44, qword_3CCEE8);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_65CF4(v46, (uint64_t)v41);
      uint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_5F740(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_189FEC(v34, 1);
        unint64_t v30 = sub_5F740(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      unint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      uint64_t *v38 = v27;
      v38[1] = v28;
      sub_65CF4(v41, v37[7] + 40 * v30);
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      uint64_t v37[2] = v40;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_189FEC(v14, a2 & 1);
  unint64_t v16 = sub_5F740(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = swift_allocError();
    swift_willThrow();
    uint64_t v47 = v19;
    swift_errorRetain();
    sub_63BAC((uint64_t *)&unk_3C9D00);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2E50E0();
  __break(1u);
LABEL_26:
  sub_2E4C50(30);
  v48._object = (void *)0x8000000000318060;
  v48._countAndFlagsBits = 0xD00000000000001BLL;
  sub_2E44C0(v48);
  sub_2E4DA0();
  v49._countAndFlagsBits = 39;
  v49._object = (void *)0xE100000000000000;
  sub_2E44C0(v49);
  uint64_t result = sub_2E4DC0();
  __break(1u);
  return result;
}

void *sub_16C738(uint64_t a1)
{
  sub_63BAC(&qword_3C6D80);
  uint64_t result = (void *)sub_2E4DF0();
  int64_t v3 = 0;
  BOOL v33 = result;
  uint64_t v34 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v30 = v5;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v32 = result + 8;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v35 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = *(void *)(v34 + 56);
    char v17 = (uint64_t *)(*(void *)(v34 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    uint64_t v40 = *v17;
    sub_66310(v16 + 40 * i, (uint64_t)v39);
    uint64_t v19 = sub_71044(v39, v39[3]);
    __n128 v20 = __chkstk_darwin(v19);
    (*(void (**)(char *, __n128))(v22 + 16))((char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
    swift_bridgeObjectRetain();
    sub_2E4040();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v39);
    uint64_t result = v33;
    *(void *)((char *)v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v23 = (void *)(result[6] + 16 * i);
    *BOOL v23 = v40;
    v23[1] = v18;
    uint64_t v24 = result[7] + 40 * i;
    long long v25 = v37;
    *(_OWORD *)uint64_t v24 = v36;
    *(_OWORD *)(v24 + 16) = v25;
    *(void *)(v24 + 32) = v38;
    uint64_t v26 = result[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v28;
    int64_t v3 = v35;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v31) {
      return result;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    int64_t v14 = v3 + 1;
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v31) {
        return result;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v3 + 3;
        if (v3 + 3 >= v31) {
          return result;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v35 = v14;
  }
  uint64_t v15 = v3 + 4;
  if (v3 + 4 >= v31) {
    return result;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v31) {
      return result;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_16CA1C()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_16CA54()
{
  uint64_t result = sub_2DEE30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_16CB08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int64_t v3 = *a2;
    int64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 44);
    int64_t v14 = (char *)a1 + v8;
    unint64_t v9 = (char *)a2 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v10 = sub_2DEE30();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v14, v9, v10);
  }
  return v3;
}

uint64_t sub_16CC34(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_2DEE30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_16CCCC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v12 = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v9 = sub_2DEE30();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v12, v8, v9);
  return a1;
}

void *sub_16CDA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DEE30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_16CEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_2DEE30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_16CF38(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DEE30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_16D004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16D018);
}

uint64_t sub_16D018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2DEE30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_16D0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_16D0DC);
}

uint64_t sub_16D0DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2DEE30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MCatalogRequestIntent()
{
  return sub_65E20();
}

uint64_t sub_16D19C(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(qword_3CCFB0);
  uint64_t v45 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v47 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - v5;
  sub_63BAC(&qword_3C6E50);
  uint64_t result = sub_2E4DF0();
  uint64_t v8 = (void *)result;
  int64_t v9 = 0;
  uint64_t v46 = a1;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v11 = a1 + 64;
  uint64_t v10 = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v11 - 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v10;
  uint64_t v41 = v11;
  int64_t v42 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void *)result;
  uint64_t v44 = result + 64;
  if ((v14 & v10) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v15));
  uint64_t v17 = (v15 - 1) & v15;
  unint64_t v18 = v16 | (v9 << 6);
  uint64_t v19 = (uint64_t)v47;
  while (1)
  {
    uint64_t v23 = *(void *)(v46 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v18);
    uint64_t v25 = v24[1];
    uint64_t v49 = *v24;
    sub_66444(v23 + *(void *)(v45 + 72) * v18, (uint64_t)v6, qword_3CCFB0);
    uint64_t v26 = (uint64_t)v6;
    sub_66444((uint64_t)v6, v19, qword_3CCFB0);
    uint64_t v27 = sub_2DED30();
    uint64_t v28 = *(void *)(v27 - 8);
    int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v19, 1, v27);
    swift_bridgeObjectRetain();
    unint64_t v48 = v17;
    int64_t v30 = v9;
    if (v29 == 1)
    {
      sub_16D768(v19);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v31 = sub_2DED20();
      uint64_t v32 = v33;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v27);
    }
    uint64_t v6 = (char *)v26;
    uint64_t v8 = v43;
    uint64_t v34 = v49;
    uint64_t result = sub_16D768(v26);
    *(void *)(v44 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v35 = (void *)(v8[6] + 16 * v18);
    *int64_t v35 = v34;
    v35[1] = v25;
    long long v36 = (uint64_t *)(v8[7] + 16 * v18);
    *long long v36 = v31;
    v36[1] = v32;
    uint64_t v37 = v8[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v8[2] = v39;
    int64_t v9 = v30;
    unint64_t v15 = v48;
    if (v48) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v9 + 1;
    uint64_t v19 = (uint64_t)v47;
    if (__OFADD__(v9, 1)) {
      goto LABEL_27;
    }
    if (v20 >= v42) {
      return (uint64_t)v8;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v42) {
        return (uint64_t)v8;
      }
      unint64_t v21 = *(void *)(v41 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v42) {
          return (uint64_t)v8;
        }
        unint64_t v21 = *(void *)(v41 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v17 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v9 << 6);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v42) {
    return (uint64_t)v8;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v42) {
      return (uint64_t)v8;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_16D530()
{
  unint64_t result = qword_3CCF70;
  if (!qword_3CCF70)
  {
    sub_70ECC(&qword_3C89D8);
    sub_C9368(&qword_3CCF78, &qword_3CE350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCF70);
  }
  return result;
}

unint64_t sub_16D5D0()
{
  unint64_t result = qword_3CCF88;
  if (!qword_3CCF88)
  {
    sub_70ECC(&qword_3CCF80);
    sub_C9368(&qword_3CCF90, &qword_3C7748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCF88);
  }
  return result;
}

unint64_t sub_16D670()
{
  unint64_t result = qword_3CCFA0;
  if (!qword_3CCFA0)
  {
    sub_70ECC(&qword_3CCF98);
    sub_C9368((unint64_t *)&qword_3C86E0, &qword_3C86D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCFA0);
  }
  return result;
}

unint64_t sub_16D710()
{
  unint64_t result = qword_3CCFA8;
  if (!qword_3CCFA8)
  {
    sub_2DEE30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CCFA8);
  }
  return result;
}

uint64_t sub_16D768(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(qword_3CCFB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MCatalogRequestIntent.Result()
{
  return sub_65E20();
}

uint64_t type metadata accessor for MCatalogRequestIntent.Result.CodingKeys()
{
  return sub_65E20();
}

unsigned char *sub_16D7F8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x16D894);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_16D8BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_16D8D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_16D8F4()
{
  return swift_getWitnessTable();
}

id NavigationContext.__allocating_init(isInCard:isInModal:)(char a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR___BSUINavigationContext_isInCard] = a1;
  v5[OBJC_IVAR___BSUINavigationContext_isInModal] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

id NavigationContext.init(isInCard:isInModal:)(char a1, char a2)
{
  v2[OBJC_IVAR___BSUINavigationContext_isInCard] = a1;
  v2[OBJC_IVAR___BSUINavigationContext_isInModal] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for NavigationContext();
  return [super init];
}

uint64_t type metadata accessor for NavigationContext()
{
  return self;
}

void NavigationContext.init()()
{
}

id NavigationContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationContext();
  return [super dealloc];
}

uint64_t method lookup function for NavigationContext(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NavigationContext);
}

uint64_t dispatch thunk of NavigationContext.__allocating_init(isInCard:isInModal:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t destroy for SeriesListShelfUpdateIntent(uint64_t a1)
{
  uint64_t result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (*(void *)(a1 + 72))
  {
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 48);
  }
  return result;
}

uint64_t initializeWithCopy for SeriesListShelfUpdateIntent(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 64);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for SeriesListShelfUpdateIntent(uint64_t a1, uint64_t a2)
{
  sub_6FA20((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v4)
    {
      *(void *)(a1 + 72) = v4;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 48, a2 + 48);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 48);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = v6;
    return a1;
  }
  if (!v4)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 48);
    goto LABEL_7;
  }
  sub_6FA20((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for SeriesListShelfUpdateIntent(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (*(void *)(a1 + 72)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 48);
  }
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesListShelfUpdateIntent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesListShelfUpdateIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesListShelfUpdateIntent()
{
  return &type metadata for SeriesListShelfUpdateIntent;
}

void sub_16DDE0(void *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000000003068C0;
}

uint64_t sub_16DE00(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD0F0);
}

uint64_t static Logger.assetActionImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6560, (uint64_t)qword_3CD0F0, a1);
}

uint64_t sub_16DE48(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD108);
}

uint64_t static Logger.booksUIComponentHostingController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6568, (uint64_t)qword_3CD108, a1);
}

uint64_t sub_16DE90(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD120);
}

uint64_t static Logger.feedViewController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6570, (uint64_t)qword_3CD120, a1);
}

uint64_t sub_16DED8(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD138);
}

uint64_t static Logger.cardAuxiliaryNavigationBarViewController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6578, (uint64_t)qword_3CD138, a1);
}

uint64_t sub_16DF20(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD150);
}

uint64_t static Logger.contextActionItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6580, (uint64_t)qword_3CD150, a1);
}

uint64_t sub_16DF68(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD168);
}

uint64_t static Logger.convertRectFromGlobalHandler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6588, (uint64_t)qword_3CD168, a1);
}

uint64_t sub_16DFB0(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD180);
}

uint64_t static Logger.dependencyInjectionView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6590, (uint64_t)qword_3CD180, a1);
}

uint64_t sub_16DFF8(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD198);
}

uint64_t static Logger.figaroProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6598, (uint64_t)qword_3CD198, a1);
}

uint64_t sub_16E040(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD1B0);
}

uint64_t static Logger.objectGraph.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65A0, (uint64_t)qword_3CD1B0, a1);
}

uint64_t sub_16E088(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD1C8);
}

uint64_t static Logger.imageRenderer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65A8, (uint64_t)qword_3CD1C8, a1);
}

uint64_t sub_16E0D0(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD1E0);
}

uint64_t static Logger.imageResourceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65B0, (uint64_t)qword_3CD1E0, a1);
}

uint64_t sub_16E118(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD1F8);
}

uint64_t static Logger.jetActionHandler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65B8, (uint64_t)qword_3CD1F8, a1);
}

uint64_t sub_16E160(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD210);
}

uint64_t static Logger.jsIntentDispatcher.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65C0, (uint64_t)qword_3CD210, a1);
}

uint64_t sub_16E1A8(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD228);
}

uint64_t static Logger.jsonInitFailureObserver.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65C8, (uint64_t)qword_3CD228, a1);
}

uint64_t sub_16E1F0(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD240);
}

uint64_t static Logger.libraryAssetState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65D0, (uint64_t)qword_3CD240, a1);
}

uint64_t sub_16E238(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD258);
}

uint64_t static Logger.likeActionItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65D8, (uint64_t)qword_3CD258, a1);
}

uint64_t sub_16E280(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD270);
}

uint64_t static Logger.markAsFinishedHostingController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65E0, (uint64_t)qword_3CD270, a1);
}

uint64_t sub_16E2C8(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD288);
}

uint64_t static Logger.page.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65E8, (uint64_t)qword_3CD288, a1);
}

uint64_t sub_16E310(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD2A0);
}

uint64_t static Logger.pageControllerFactory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65F0, (uint64_t)qword_3CD2A0, a1);
}

uint64_t sub_16E358(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD2B8);
}

uint64_t static Logger.pageView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C65F8, (uint64_t)qword_3CD2B8, a1);
}

uint64_t sub_16E3A0(uint64_t a1)
{
  return sub_16EA18(a1, qword_3EE168);
}

uint64_t sub_16E3C4(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD2D0);
}

uint64_t static Logger.ratingSummaryComponent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6608, (uint64_t)qword_3CD2D0, a1);
}

uint64_t sub_16E40C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD2E8);
}

uint64_t static Logger.readerTypeFramesFactory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6610, (uint64_t)qword_3CD2E8, a1);
}

uint64_t sub_16E454(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD300);
}

uint64_t static Logger.refreshSeriesUberHeaderActionImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6618, (uint64_t)qword_3CD300, a1);
}

uint64_t sub_16E49C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD318);
}

uint64_t static Logger.rootHostingController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6620, (uint64_t)qword_3CD318, a1);
}

uint64_t sub_16E4E4(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD330);
}

uint64_t static Logger.rootView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6628, (uint64_t)qword_3CD330, a1);
}

uint64_t sub_16E52C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD348);
}

uint64_t static Logger.readingInsights.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6630, (uint64_t)qword_3CD348, a1);
}

uint64_t sub_16E574(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD360);
}

uint64_t static Logger.seriesEntityCardComponentModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6638, (uint64_t)qword_3CD360, a1);
}

uint64_t sub_16E5BC(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD378);
}

uint64_t static Logger.seriesListShelfUpdateIntentImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6640, (uint64_t)qword_3CD378, a1);
}

uint64_t sub_16E604(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD390);
}

uint64_t static Logger.seriesRoomHeaderComponentModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6648, (uint64_t)qword_3CD390, a1);
}

uint64_t sub_16E64C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD3A8);
}

uint64_t static Logger.seriesRoomPageIntentImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6650, (uint64_t)qword_3CD3A8, a1);
}

uint64_t sub_16E694(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD3C0);
}

uint64_t static Logger.seriesSeeAllPaginationIntentImplementation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6658, (uint64_t)qword_3CD3C0, a1);
}

uint64_t sub_16E6DC(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD3D8);
}

uint64_t static Logger.shareActionItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6660, (uint64_t)qword_3CD3D8, a1);
}

uint64_t sub_16E724(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD3F0);
}

uint64_t static Logger.sheetHeaderComponentModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6668, (uint64_t)qword_3CD3F0, a1);
}

uint64_t sub_16E76C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD408);
}

uint64_t static Logger.shelf.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6670, (uint64_t)qword_3CD408, a1);
}

uint64_t sub_16E7B4(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD420);
}

uint64_t static Logger.snapshotImageItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6678, (uint64_t)qword_3CD420, a1);
}

uint64_t sub_16E7FC(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD438);
}

uint64_t static Logger.swipeActionsViewModifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6680, (uint64_t)qword_3CD438, a1);
}

uint64_t sub_16E844(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD450);
}

uint64_t static Logger.textComponentModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6688, (uint64_t)qword_3CD450, a1);
}

uint64_t sub_16E88C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD468);
}

uint64_t static Logger.tvAppService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6690, (uint64_t)qword_3CD468, a1);
}

uint64_t sub_16E8D4(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD480);
}

uint64_t static Logger.yearInReviewEligibleFrameFactory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C6698, (uint64_t)qword_3CD480, a1);
}

uint64_t sub_16E91C(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD498);
}

uint64_t static Logger.yearInReviewFrameFactory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C66A0, (uint64_t)qword_3CD498, a1);
}

uint64_t sub_16E964(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD4B0);
}

uint64_t static Logger.yearInReviewHighlightFramesFactory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C66A8, (uint64_t)qword_3CD4B0, a1);
}

uint64_t sub_16E9AC(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD4C8);
}

uint64_t static Logger.yearInReviewHostingController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C66B0, (uint64_t)qword_3CD4C8, a1);
}

uint64_t sub_16E9F4(uint64_t a1)
{
  return sub_16EA18(a1, qword_3CD4E0);
}

uint64_t sub_16EA18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2DF850();
  sub_65DBC(v3, a2);
  sub_58BA0(v3, (uint64_t)a2);
  return sub_2DF840();
}

uint64_t static Logger.yearInReviewPageView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_16EAB4(&qword_3C66B8, (uint64_t)qword_3CD4E0, a1);
}

uint64_t sub_16EAB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2DF850();
  uint64_t v6 = sub_58BA0(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_16EB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a1;
  sub_63BAC(&qword_3C75A0);
  v3[23] = swift_task_alloc();
  sub_2E3910();
  v3[24] = swift_task_alloc();
  uint64_t v6 = sub_63BAC(&qword_3C80D8);
  v3[25] = v6;
  v3[26] = *(void *)(v6 - 8);
  v3[27] = swift_task_alloc();
  uint64_t v7 = sub_63BAC(&qword_3C6F10);
  v3[28] = v7;
  v3[29] = *(void *)(v7 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v3[33] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_16ED2C;
  return sub_16F750(a2, a3);
}

uint64_t sub_16ED2C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1) {
    long long v4 = sub_16F014;
  }
  else {
    long long v4 = sub_16EE40;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_16EE40()
{
  uint64_t v11 = *(void (**)(unint64_t *, void, uint64_t))(v0[29] + 104);
  v11((unint64_t *)v0[32], enum case for PageUpdateInstruction.stopPendingData<A, B>(_:), v0[28]);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = v0[34];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v2 = sub_5E9D0(0, *(void *)(v2 + 16) + 1, 1, v0[34]);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_5E9D0(v3 > 1, v4 + 1, 1, v2);
  }
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[28];
  uint64_t v8 = (unint64_t *)v0[22];
  *(void *)(v2 + 16) = v4 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v2+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v4, v5, v7);
  *uint64_t v8 = v2;
  v11(v8, enum case for PageUpdateInstruction.compound<A, B>(_:), v7);
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_16F014()
{
  v0[21] = v0[35];
  swift_errorRetain();
  sub_63BAC((uint64_t *)&unk_3C9D00);
  if (swift_dynamicCast()) {
    uint64_t v1 = (void *)v0[20];
  }
  else {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = v0 + 7;
  uint64_t v28 = v0 + 2;
  uint64_t v25 = *(void (**)(void *, void, uint64_t))(v0[29] + 104);
  v25((void *)v0[31], enum case for PageUpdateInstruction.stopPendingData<A, B>(_:), v0[28]);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = (void *)sub_5E9D0(0, v1[2] + 1, 1, (unint64_t)v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = (void *)sub_5E9D0(v2 > 1, v3 + 1, 1, (unint64_t)v1);
  }
  uint64_t v5 = (void *)v0[30];
  uint64_t v4 = v0[31];
  uint64_t v7 = v0[28];
  uint64_t v6 = v0[29];
  uint64_t v8 = v0[27];
  uint64_t v24 = v0[26];
  uint64_t v26 = v0[25];
  uint64_t v9 = v0[23];
  v1[2] = v3 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))((unint64_t)v1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v3, v4, v7);
  sub_2E3900();
  *uint64_t v5 = v1;
  v25(v5, enum case for PageUpdateInstruction.compound<A, B>(_:), v7);
  uint64_t v10 = sub_2DE8E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for Page();
  type metadata accessor for Shelf();
  sub_17313C((unint64_t *)&qword_3C8140, (void (*)(uint64_t))type metadata accessor for Page);
  sub_17313C(&qword_3C8148, (void (*)(uint64_t))type metadata accessor for Shelf);
  sub_2E0540();
  swift_getErrorValue();
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  v0[10] = v26;
  v0[11] = sub_D0A80();
  uint64_t v13 = sub_71088(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(v13, v8, v26);
  v0[17] = v11;
  v0[18] = v12;
  v0[5] = swift_getOpaqueTypeMetadata2();
  v0[15] = v11;
  v0[16] = v12;
  v0[6] = swift_getOpaqueTypeConformance2();
  sub_71088(v28);
  sub_2E5130();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v27);
  uint64_t v14 = v0[5];
  unint64_t v15 = sub_71044(v28, v14);
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v16 + 16))(v17, v15, v14);
  if (sub_2E4FF0())
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v14);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v18, v17, v14);
  }
  uint64_t v19 = v0[26];
  uint64_t v20 = v0[27];
  uint64_t v21 = v0[25];
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  swift_task_dealloc();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_16F530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_6E3CC;
  return sub_16EB4C(a1, a2, a3);
}

unint64_t sub_16F5E4()
{
  unint64_t result = qword_3CD4F8;
  if (!qword_3CD4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD4F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesRoomType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16F704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesRoomType()
{
  return &type metadata for SeriesRoomType;
}

ValueMetadata *type metadata accessor for SeriesListShelfUpdateIntentImplementation()
{
  return &type metadata for SeriesListShelfUpdateIntentImplementation;
}

uint64_t sub_16F750(uint64_t a1, uint64_t a2)
{
  v2[99] = a2;
  v2[98] = a1;
  uint64_t v3 = sub_2DE200();
  v2[100] = v3;
  v2[101] = *(void *)(v3 - 8);
  v2[102] = swift_task_alloc();
  sub_63BAC(&qword_3CBAE0);
  v2[103] = swift_task_alloc();
  sub_63BAC(&qword_3CBAE8);
  v2[104] = swift_task_alloc();
  v2[105] = swift_task_alloc();
  v2[106] = *(void *)(type metadata accessor for Shelf() - 8);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = type metadata accessor for SeriesPageStoreResourceIntent();
  v2[110] = swift_task_alloc();
  v2[111] = swift_task_alloc();
  v2[112] = swift_task_alloc();
  sub_63BAC(&qword_3C8A48);
  v2[113] = swift_task_alloc();
  v2[114] = swift_task_alloc();
  v2[115] = swift_task_alloc();
  uint64_t v4 = sub_2DEF80();
  v2[116] = v4;
  v2[117] = *(void *)(v4 - 8);
  v2[118] = swift_task_alloc();
  v2[119] = swift_task_alloc();
  v2[120] = swift_task_alloc();
  uint64_t v5 = sub_2DEBB0();
  v2[121] = v5;
  v2[122] = *(void *)(v5 - 8);
  v2[123] = swift_task_alloc();
  v2[124] = swift_task_alloc();
  uint64_t v6 = sub_63BAC(&qword_3C8A50);
  uint64_t v7 = (void *)swift_task_alloc();
  v2[125] = v7;
  void *v7 = v2;
  v7[1] = sub_16FACC;
  return BaseObjectGraph.inject<A>(_:)(v2 + 28, v6, v6);
}

uint64_t sub_16FACC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 1008) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_172D0C, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_63BAC(&qword_3C7E98);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 1016) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_16FC6C;
    return BaseObjectGraph.inject<A>(_:)(v2 + 104, v3, v3);
  }
}

uint64_t sub_16FC6C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 1024) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_172E68, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_63BAC(&qword_3C8918);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 1032) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_16FE0C;
    return BaseObjectGraph.inject<A>(_:)(v2 + 144, v3, v3);
  }
}

uint64_t sub_16FE0C()
{
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_172FCC;
  }
  else {
    uint64_t v2 = sub_16FF20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_16FF20()
{
  uint64_t v1 = (void *)*((void *)v0 + 98);
  sub_71044(v1, v1[3]);
  uint64_t v2 = sub_2DEC00();
  uint64_t v4 = v3;
  *((void *)v0 + 131) = v2;
  *((void *)v0 + 132) = v3;
  sub_71044(v1, v1[3]);
  sub_2DEAC0();
  uint64_t v5 = *((void *)v0 + 31);
  uint64_t v6 = *((void *)v0 + 32);
  sub_71044((void *)v0 + 28, v5);
  uint64_t v9 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 56) + **(int **)(v6 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *((void *)v0 + 133) = v7;
  void *v7 = v0;
  v7[1] = sub_1700B4;
  return v9(v0 + 1170, v2, v4, v5, v6);
}

uint64_t sub_1700B4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1701B0, 0, 0);
}

uint64_t sub_1701B0()
{
  *(unsigned char *)(v0 + 1171) = *(unsigned char *)(v0 + 1170);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 256);
  sub_71044((void *)(v0 + 224), v1);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 64) + **(int **)(v2 + 64));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1072) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1702C8;
  uint64_t v4 = *(void *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 1048);
  uint64_t v6 = *(void *)(v0 + 920);
  return v8(v6, v5, v4, v1, v2);
}

uint64_t sub_1702C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1703C4, 0, 0);
}

uint64_t sub_1703C4()
{
  uint64_t v1 = v0[117];
  uint64_t v2 = v0[116];
  uint64_t v3 = v0[115];
  sub_114ADC(v0[98], (uint64_t)(v0 + 2));
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[135] = v4;
  v0[136] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v2) == 1)
  {
    uint64_t v5 = v0[115];
    sub_71044(v0 + 2, v0[5]);
    sub_2DEB30();
    sub_662B4(v5, &qword_3C8A48);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[117] + 32))(v0[120], v0[115], v0[116]);
  }
  sub_114B38((uint64_t)(v0 + 2));
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  sub_71044(v0 + 18, v6);
  v0[97] = 4;
  uint64_t v12 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(v7 + 8)
                                                                                       + **(int **)(v7 + 8));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[137] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1705B8;
  uint64_t v9 = v0[132];
  uint64_t v10 = v0[131];
  return v12(v0 + 38, v10, v9, v0 + 97, v6, v7);
}

uint64_t sub_1705B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1706B4, 0, 0);
}

uint64_t sub_1706B4()
{
  sub_66444(v0 + 304, v0 + 424, &qword_3C8920);
  uint64_t v41 = (void *)(v0 + 104);
  if (!*(void *)(v0 + 448))
  {
    uint64_t v12 = &qword_3C8920;
    uint64_t v13 = v0 + 424;
LABEL_9:
    sub_662B4(v13, v12);
    uint64_t v14 = 0;
    goto LABEL_10;
  }
  uint64_t v1 = v0 + 384;
  sub_65CF4((long long *)(v0 + 424), v0 + 384);
  sub_2DEFF0();
  if (!*(void *)(v0 + 368))
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 384);
    uint64_t v12 = &qword_3C8928;
    uint64_t v13 = v0 + 344;
    goto LABEL_9;
  }
  uint64_t v2 = v0 + 464;
  uint64_t v3 = *(void *)(v0 + 1040);
  sub_65CF4((long long *)(v0 + 344), v0 + 464);
  sub_71044((void *)(v0 + 464), *(void *)(v0 + 488));
  sub_2DEB70();
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 992);
    uint64_t v5 = *(void *)(v0 + 976);
    uint64_t v6 = *(void *)(v0 + 968);
    uint64_t v7 = *(void *)(v0 + 960);
    uint64_t v8 = *(void *)(v0 + 936);
    uint64_t v9 = *(void *)(v0 + 928);
    swift_bridgeObjectRelease();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 384);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_662B4(v0 + 304, &qword_3C8920);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 464);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 144);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v41);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 224);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  swift_getAssociatedTypeWitness();
  sub_63BAC(&qword_3C6F68);
  uint64_t v30 = sub_2E4D90();
  swift_bridgeObjectRelease();
  sub_200E2C(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_2DEF50();
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16) >= 0xAuLL) {
    int64_t v32 = 10;
  }
  else {
    int64_t v32 = *(void *)(v31 + 16);
  }
  if (v32)
  {
    sub_2A47F4(0, v32, 0);
    uint64_t v33 = 0;
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v34 = v31;
    do
    {
      sub_66310(v31 + v33 + 32, v0 + 184);
      sub_71044((void *)(v0 + 184), *(void *)(v0 + 208));
      uint64_t v35 = sub_2DEC00();
      uint64_t v37 = v36;
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 184);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A47F4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        uint64_t v14 = _swiftEmptyArrayStorage;
      }
      unint64_t v39 = _swiftEmptyArrayStorage[2];
      unint64_t v38 = _swiftEmptyArrayStorage[3];
      if (v39 >= v38 >> 1)
      {
        sub_2A47F4(v38 > 1, v39 + 1, 1);
        uint64_t v14 = _swiftEmptyArrayStorage;
      }
      _swiftEmptyArrayStorage[2] = v39 + 1;
      uint64_t v40 = &_swiftEmptyArrayStorage[2 * v39];
      v40[4] = v35;
      v40[5] = v37;
      v33 += 40;
      uint64_t v31 = v34;
    }
    while (40 * v32 != v33);
    swift_bridgeObjectRelease();
    uint64_t v1 = v0 + 384;
    uint64_t v2 = v0 + 464;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v2);
LABEL_10:
  (*(void (**)(void, void, void))(*(void *)(v0 + 976) + 16))(*(void *)(v0 + 984), *(void *)(v0 + 992), *(void *)(v0 + 968));
  if (*(void *)(v0 + 328)) {
    (*(void (**)(void, void, void))(*(void *)(v0 + 936) + 104))(*(void *)(v0 + 912), enum case for SeriesListSortOrder.releaseDate(_:), *(void *)(v0 + 928));
  }
  else {
    (*(void (**)(void, void, void))(*(void *)(v0 + 936) + 16))(*(void *)(v0 + 912), *(void *)(v0 + 960), *(void *)(v0 + 928));
  }
  uint64_t v15 = *(void *)(v0 + 1056);
  uint64_t v16 = *(void *)(v0 + 1048);
  uint64_t v17 = *(void *)(v0 + 984);
  uint64_t v18 = *(void *)(v0 + 976);
  uint64_t v19 = *(void *)(v0 + 968);
  uint64_t v20 = *(void *)(v0 + 912);
  uint64_t v21 = *(char **)(v0 + 896);
  int64_t v22 = *(int **)(v0 + 872);
  (*(void (**)(uint64_t, void, uint64_t, void))(*(void *)(v0 + 936) + 56))(v20, 0, 1, *(void *)(v0 + 928));
  *(void *)uint64_t v21 = v16;
  *((void *)v21 + 1) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v21[v22[5]], v17, v19);
  *(void *)&v21[v22[6]] = v14;
  sub_71900(v20, (uint64_t)&v21[v22[7]], &qword_3C8A48);
  uint64_t v23 = *(void *)(v0 + 128);
  uint64_t v24 = *(void *)(v0 + 136);
  sub_71044(v41, v23);
  swift_bridgeObjectRetain();
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 1104) = v25;
  uint64_t v26 = sub_17313C(&qword_3CD518, (void (*)(uint64_t))type metadata accessor for SeriesPageStoreResourceIntent);
  *uint64_t v25 = v0;
  v25[1] = sub_170D2C;
  uint64_t v27 = *(void *)(v0 + 896);
  uint64_t v28 = *(void *)(v0 + 872);
  uint64_t v29 = *(void *)(v0 + 792);
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 744, v27, v29, v28, v26, v23, v24);
}

uint64_t sub_170D2C()
{
  *(void *)(*(void *)v1 + 1112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_170E48;
  }
  else
  {
    uint64_t v2 = sub_171B90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_170E48()
{
  uint64_t v83 = v0;
  uint64_t v1 = (long long *)(v0 + 544);
  if (qword_3C6640 != -1) {
    swift_once();
  }
  uint64_t v79 = (void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 896);
  uint64_t v3 = *(void *)(v0 + 888);
  uint64_t v4 = sub_2DF850();
  sub_58BA0(v4, (uint64_t)qword_3CD378);
  sub_1732F4(v2, v3, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
  uint64_t v5 = sub_2DF830();
  os_log_type_t v6 = sub_2E48F0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 888);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 880);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v82[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_1732F4(v8, v9, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
    uint64_t v11 = sub_2E4470();
    *(void *)(v0 + 768) = sub_5F150(v11, v12, v82);
    sub_2E4B40();
    swift_bridgeObjectRelease();
    sub_173294(v8, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
    _os_log_impl(&dword_0, v5, v6, "Received nil as return value for intent: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_173294(v8, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
  }

  *(void *)(v0 + 1136) = 0;
  *(_OWORD *)(v0 + 1120) = 0u;
  sub_2DEFD0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 568))
  {
    uint64_t v13 = *(void *)(v0 + 784);
    swift_bridgeObjectRelease();
    sub_65CF4(v1, v0 + 504);
    sub_65CF4((long long *)(v0 + 504), v0 + 264);
    int v14 = *(unsigned __int8 *)(v13 + 40);
    if (v14)
    {
      uint64_t v15 = *(void *)(v0 + 840);
      uint64_t v16 = type metadata accessor for SeriesRoomListHeaderComponentModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 784);
      sub_66310(v0 + 264, v0 + 664);
      sub_66444(v31 + 48, v0 + 584, &qword_3C8A58);
      uint64_t v32 = *(void *)(v0 + 824);
      if (*(void *)(v0 + 608))
      {
        sub_63BAC(&qword_3CD528);
        uint64_t v33 = type metadata accessor for SeriesRoomPageIntent();
        int v34 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, v34 ^ 1u, 1, v33);
      }
      else
      {
        sub_662B4(v0 + 584, &qword_3C8A58);
        uint64_t v41 = type metadata accessor for SeriesRoomPageIntent();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v32, 1, 1, v41);
      }
      uint64_t v42 = *(void *)(v0 + 840);
      uint64_t v43 = *(void *)(v0 + 832);
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v0 + 824);
      sub_10A498((void *)(v0 + 664), v44, v43);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 664);
      sub_662B4((uint64_t)v44, &qword_3CBAE0);
      uint64_t v45 = type metadata accessor for SeriesRoomListHeaderComponentModel();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v43, 0, 1, v45);
      sub_71900(v43, v42, &qword_3CBAE8);
    }
    int v46 = *(unsigned __int8 *)(v0 + 1171);
    uint64_t v47 = *(void *)(v0 + 960);
    uint64_t v48 = *(void *)(v0 + 856);
    uint64_t v49 = *(void *)(v0 + 840);
    if (v46 == 3) {
      LOBYTE(v46) = 0;
    }
    unsigned __int8 v81 = v46;
    unsigned __int8 v50 = *(unsigned char *)(v13 + 40);
    LOBYTE(v82[0]) = v50;
    sub_160798((void *)(v0 + 264), &v81, v47, (unsigned __int8 *)v82, v49, v14, v48);
    unint64_t v51 = *(void *)(v0 + 960);
    uint64_t v52 = *(void *)(v0 + 816);
    if (*(unsigned char *)(v0 + 1171) == 3) {
      char v53 = 0;
    }
    else {
      char v53 = *(unsigned char *)(v0 + 1171);
    }
    sub_173230(*(void *)(v0 + 856), *(void *)(v0 + 864));
    unsigned __int8 v81 = v50;
    uint64_t v54 = *(char **)(v0 + 288);
    unint64_t v55 = *(char **)(v0 + 296);
    sub_71044((void *)(v0 + 264), (uint64_t)v54);
    sub_2D8440(v54, v55, v52);
    LOBYTE(v82[0]) = v53;
    uint64_t v56 = sub_217E3C((void *)(v0 + 264), &v81, v52, (unsigned __int8 *)v82, v51);
    uint64_t v77 = *(void *)(v0 + 992);
    uint64_t v57 = v56;
    uint64_t v75 = *(void *)(v0 + 968);
    uint64_t v73 = *(void *)(v0 + 960);
    uint64_t v74 = *(void *)(v0 + 976);
    uint64_t v72 = *(void *)(v0 + 928);
    uint64_t v70 = *(void *)(v0 + 936);
    uint64_t v71 = *(void *)(v0 + 896);
    uint64_t v58 = *(void *)(v0 + 864);
    uint64_t v59 = *(void *)(v0 + 848);
    uint64_t v69 = *(void *)(v0 + 840);
    (*(void (**)(void))(*(void *)(v0 + 808) + 8))();
    sub_63BAC(&qword_3C6F08);
    uint64_t v60 = sub_63BAC(&qword_3C6F10);
    uint64_t v61 = *(void *)(v60 - 8);
    uint64_t v62 = *(void *)(v61 + 72);
    unint64_t v63 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_2FCE70;
    uint64_t v64 = (uint64_t *)(v76 + v63);
    sub_63BAC(&qword_3C6F48);
    unint64_t v65 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_2FEFE0;
    sub_1732F4(v58, v66 + v65, (uint64_t (*)(void))type metadata accessor for Shelf);
    *uint64_t v64 = v66;
    uint64_t v67 = *(void (**)(void))(v61 + 104);
    ((void (*)(uint64_t *, void, uint64_t))v67)(v64, enum case for PageUpdateInstruction.replaceShelves<A, B>(_:), v60);
    *(uint64_t *)((char *)v64 + v62) = v57;
    v67();
    sub_173184(0, 0);
    sub_662B4(v69, &qword_3CBAE8);
    sub_173294(v58, (uint64_t (*)(void))type metadata accessor for Shelf);
    sub_173294(v71, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v72);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v77, v75);
    sub_662B4(v0 + 304, &qword_3C8920);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 264);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 144);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 104);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v79);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v68 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v68(v76);
  }
  else
  {
    uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1080);
    uint64_t v17 = *(void *)(v0 + 1056);
    uint64_t v18 = *(void *)(v0 + 1048);
    uint64_t v19 = *(void *)(v0 + 960);
    uint64_t v20 = *(void *)(v0 + 944);
    uint64_t v21 = *(void *)(v0 + 936);
    uint64_t v22 = *(void *)(v0 + 928);
    uint64_t v23 = *(void *)(v0 + 904);
    sub_662B4((uint64_t)v1, &qword_3C8928);
    uint64_t v24 = *(void *)(v0 + 248);
    uint64_t v25 = *(void *)(v0 + 256);
    sub_71044(v79, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v18, v17, v24, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v19, v22);
    int v26 = v78(v23, 1, v22);
    uint64_t v27 = *(void *)(v0 + 952);
    uint64_t v28 = *(void *)(v0 + 936);
    uint64_t v29 = *(void *)(v0 + 928);
    uint64_t v30 = *(void *)(v0 + 904);
    if (v26 == 1)
    {
      (*(void (**)(void, void, void))(v28 + 32))(*(void *)(v0 + 952), *(void *)(v0 + 944), *(void *)(v0 + 928));
      sub_662B4(v30, &qword_3C8A48);
    }
    else
    {
      (*(void (**)(void, void))(v28 + 8))(*(void *)(v0 + 944), *(void *)(v0 + 928));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v27, v30, v29);
    }
    int v35 = *(unsigned __int8 *)(v0 + 1171);
    uint64_t v36 = *(void *)(v0 + 784);
    if (v35 == 3) {
      LOBYTE(v35) = 0;
    }
    *(unsigned char *)(v0 + 1169) = v35;
    sub_66310(v36, v0 + 624);
    *(unsigned char *)(v0 + 1168) = *(unsigned char *)(v36 + 40);
    sub_66444(v36 + 48, v0 + 704, &qword_3C8A58);
    uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C8A40
                                                                                       + dword_3C8A40);
    swift_retain();
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 1144) = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_17276C;
    uint64_t v38 = *(void *)(v0 + 952);
    uint64_t v39 = *(void *)(v0 + 792);
    return v80(v38, v0 + 1169, v0 + 624, v0 + 1168, v0 + 704, v39);
  }
}

uint64_t sub_171B90()
{
  uint64_t v95 = v0;
  uint64_t v89 = (void *)(v0 + 224);
  uint64_t v1 = *(void **)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 1112);
  *(void *)(v0 + 1136) = *(void *)(v0 + 760);
  *(void *)(v0 + 1128) = v1;
  *(void *)(v0 + 1120) = v2;
  id v4 = v1;
  swift_bridgeObjectRetain();
  sub_2DEFD0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 568))
  {
    uint64_t v82 = v0 + 104;
    uint64_t v85 = v0 + 144;
    uint64_t v87 = v0 + 304;
    uint64_t v5 = (void *)(v0 + 264);
    uint64_t v6 = *(void *)(v0 + 784);
    swift_bridgeObjectRelease();
    sub_65CF4((long long *)(v0 + 544), v0 + 504);
    sub_65CF4((long long *)(v0 + 504), v0 + 264);
    int v7 = *(unsigned __int8 *)(v6 + 40);
    uint64_t v80 = v4;
    unsigned __int8 v81 = v1;
    if (v7)
    {
      uint64_t v8 = *(void *)(v0 + 840);
      uint64_t v9 = type metadata accessor for SeriesRoomListHeaderComponentModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    }
    else
    {
      uint64_t v77 = v6;
      uint64_t v22 = *(void *)(v0 + 784);
      sub_66310(v0 + 264, v0 + 664);
      sub_66444(v22 + 48, v0 + 584, &qword_3C8A58);
      uint64_t v23 = *(void *)(v0 + 824);
      if (*(void *)(v0 + 608))
      {
        sub_63BAC(&qword_3CD528);
        uint64_t v24 = type metadata accessor for SeriesRoomPageIntent();
        uint64_t v5 = (void *)(v0 + 264);
        int v25 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, v25 ^ 1u, 1, v24);
      }
      else
      {
        sub_662B4(v0 + 584, &qword_3C8A58);
        uint64_t v32 = type metadata accessor for SeriesRoomPageIntent();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v23, 1, 1, v32);
      }
      uint64_t v33 = *(void *)(v0 + 840);
      uint64_t v34 = *(void *)(v0 + 832);
      int v35 = *(void (**)(char *, char *, uint64_t))(v0 + 824);
      sub_10A498((void *)(v0 + 664), v35, v34);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 664);
      sub_662B4((uint64_t)v35, &qword_3CBAE0);
      uint64_t v36 = type metadata accessor for SeriesRoomListHeaderComponentModel();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
      sub_71900(v34, v33, &qword_3CBAE8);
      uint64_t v6 = v77;
    }
    int v37 = *(unsigned __int8 *)(v0 + 1171);
    uint64_t v38 = *(void *)(v0 + 960);
    uint64_t v39 = *(void *)(v0 + 856);
    uint64_t v40 = *(void *)(v0 + 840);
    if (v37 == 3) {
      LOBYTE(v37) = 0;
    }
    unsigned __int8 v91 = v37;
    unsigned __int8 v41 = *(unsigned char *)(v6 + 40);
    unsigned __int8 v92 = v41;
    sub_160798(v5, &v91, v38, &v92, v40, v7, v39);
    uint64_t v84 = (uint64_t)v5;
    if (v3)
    {
      uint64_t v78 = *(void *)(v0 + 992);
      uint64_t v42 = *(void *)(v0 + 976);
      uint64_t v43 = *(void *)(v0 + 968);
      uint64_t v44 = *(void *)(v0 + 960);
      uint64_t v45 = v2;
      uint64_t v46 = *(void *)(v0 + 936);
      uint64_t v47 = *(void *)(v0 + 928);
      uint64_t v48 = *(void *)(v0 + 896);
      uint64_t v49 = *(void *)(v0 + 840);

      sub_173184(v81, v45);
      sub_662B4(v49, &qword_3CBAE8);
      sub_173294(v48, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v47);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v78, v43);
      sub_662B4(v87, &qword_3C8920);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v84);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v85);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v82);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v89);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
      return v56();
    }
    else
    {
      unint64_t v50 = *(void *)(v0 + 960);
      uint64_t v51 = *(void *)(v0 + 816);
      if (*(unsigned char *)(v0 + 1171) == 3) {
        unsigned __int8 v52 = 0;
      }
      else {
        unsigned __int8 v52 = *(unsigned char *)(v0 + 1171);
      }
      sub_173230(*(void *)(v0 + 856), *(void *)(v0 + 864));
      unsigned __int8 v93 = v41;
      char v53 = *(char **)(v0 + 288);
      uint64_t v54 = *(char **)(v0 + 296);
      sub_71044(v5, (uint64_t)v53);
      sub_2D8440(v53, v54, v51);
      v94[0] = v52;
      uint64_t v55 = sub_217E3C(v5, &v93, v51, v94, v50);
      uint64_t v79 = *(void *)(v0 + 992);
      uint64_t v75 = *(void *)(v0 + 968);
      uint64_t v73 = *(void *)(v0 + 960);
      uint64_t v74 = *(void *)(v0 + 976);
      uint64_t v71 = *(void *)(v0 + 936);
      uint64_t v72 = *(void *)(v0 + 928);
      uint64_t v67 = *(void *)(v0 + 864);
      uint64_t v57 = *(void *)(v0 + 848);
      uint64_t v69 = *(void *)(v0 + 840);
      uint64_t v70 = *(void *)(v0 + 896);
      uint64_t v68 = v55;
      (*(void (**)(void))(*(void *)(v0 + 808) + 8))();
      sub_63BAC(&qword_3C6F08);
      uint64_t v58 = sub_63BAC(&qword_3C6F10);
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v60 = *(void *)(v59 + 72);
      unint64_t v61 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      uint64_t v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = xmmword_2FCE70;
      uint64_t v62 = (uint64_t *)(v76 + v61);
      sub_63BAC(&qword_3C6F48);
      unint64_t v63 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_2FEFE0;
      sub_1732F4(v67, v64 + v63, (uint64_t (*)(void))type metadata accessor for Shelf);
      *uint64_t v62 = v64;
      unint64_t v65 = *(void (**)(void))(v59 + 104);
      ((void (*)(uint64_t *, void, uint64_t))v65)(v62, enum case for PageUpdateInstruction.replaceShelves<A, B>(_:), v58);
      *(uint64_t *)((char *)v62 + v60) = v68;
      v65();

      sub_173184(v81, v2);
      sub_662B4(v69, &qword_3CBAE8);
      sub_173294(v67, (uint64_t (*)(void))type metadata accessor for Shelf);
      sub_173294(v70, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v72);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v79, v75);
      sub_662B4(v87, &qword_3C8920);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v84);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v85);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v82);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v89);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v66 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v66(v76);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 1056);
    uint64_t v11 = *(void *)(v0 + 1048);
    uint64_t v86 = *(void *)(v0 + 960);
    uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1080);
    uint64_t v83 = *(void *)(v0 + 944);
    uint64_t v12 = *(void *)(v0 + 936);
    uint64_t v13 = *(void *)(v0 + 928);
    uint64_t v14 = *(void *)(v0 + 904);
    sub_662B4(v0 + 544, &qword_3C8928);
    uint64_t v15 = *(void *)(v0 + 248);
    uint64_t v16 = *(void *)(v0 + 256);
    sub_71044(v89, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16))(v11, v10, v15, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v83, v86, v13);
    int v17 = v88(v14, 1, v13);
    uint64_t v18 = *(void *)(v0 + 952);
    uint64_t v19 = *(void *)(v0 + 936);
    uint64_t v20 = *(void *)(v0 + 928);
    uint64_t v21 = *(void *)(v0 + 904);
    if (v17 == 1)
    {
      (*(void (**)(void, void, void))(v19 + 32))(*(void *)(v0 + 952), *(void *)(v0 + 944), *(void *)(v0 + 928));
      sub_662B4(v21, &qword_3C8A48);
    }
    else
    {
      (*(void (**)(void, void))(v19 + 8))(*(void *)(v0 + 944), *(void *)(v0 + 928));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v21, v20);
    }
    int v26 = *(unsigned __int8 *)(v0 + 1171);
    uint64_t v27 = *(void *)(v0 + 784);
    if (v26 == 3) {
      LOBYTE(v26) = 0;
    }
    *(unsigned char *)(v0 + 1169) = v26;
    sub_66310(v27, v0 + 624);
    *(unsigned char *)(v0 + 1168) = *(unsigned char *)(v27 + 40);
    sub_66444(v27 + 48, v0 + 704, &qword_3C8A58);
    unint64_t v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C8A40
                                                                                       + dword_3C8A40);
    swift_retain();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 1144) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_17276C;
    uint64_t v29 = *(void *)(v0 + 952);
    uint64_t v30 = *(void *)(v0 + 792);
    return v90(v29, v0 + 1169, v0 + 624, v0 + 1168, v0 + 704, v30);
  }
}

uint64_t sub_17276C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_172AE4;
  }
  else
  {
    *(void *)(v4 + 1160) = a1;
    uint64_t v5 = sub_172894;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_172894()
{
  uint64_t v1 = v0[145];
  uint64_t v2 = (void *)v0[141];
  uint64_t v3 = v0[140];
  uint64_t v13 = v0[124];
  uint64_t v4 = v0[122];
  uint64_t v12 = v0[121];
  uint64_t v5 = v0[120];
  uint64_t v6 = v0[117];
  uint64_t v7 = v0[116];
  uint64_t v8 = v0[112];
  sub_1731DC();
  swift_allocError();
  void *v9 = v1;
  swift_willThrow();

  sub_173184(v2, v3);
  sub_173294(v8, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v13, v12);
  sub_662B4((uint64_t)(v0 + 38), &qword_3C8920);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 18));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 13));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 28));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_172AE4()
{
  uint64_t v1 = (void *)v0[141];
  uint64_t v2 = v0[140];
  uint64_t v11 = v0[124];
  uint64_t v3 = v0[122];
  uint64_t v4 = v0[121];
  uint64_t v5 = v0[120];
  uint64_t v6 = v0[117];
  uint64_t v7 = v0[116];
  uint64_t v8 = v0[112];

  sub_173184(v1, v2);
  sub_173294(v8, (uint64_t (*)(void))type metadata accessor for SeriesPageStoreResourceIntent);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  sub_662B4((uint64_t)(v0 + 38), &qword_3C8920);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 18));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 13));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 28));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_172D0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_172E68()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_172FCC()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 104);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17313C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_173184(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1731DC()
{
  unint64_t result = qword_3CD520;
  if (!qword_3CD520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD520);
  }
  return result;
}

uint64_t sub_173230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_173294(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1732F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_17335C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_63BAC(&qword_3C7138);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2DDEA0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_662B4(a1, &qword_3C7138);
    unint64_t v13 = sub_5F86C(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_6242C();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_260DC8(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_662B4((uint64_t)v8, &qword_3C7138);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_613BC((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1735B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_65CF4((long long *)a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_61668(v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_662B4(a1, &qword_3C8B80);
    unint64_t v7 = sub_5F86C(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_62D0C();
        uint64_t v11 = v13;
      }
      sub_65CF4((long long *)(*(void *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_2611B0(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_662B4((uint64_t)v14, &qword_3C8B80);
  }
}

uint64_t sub_1736D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_64F80((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_617A8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_662B4(a1, &qword_3C78D0);
    sub_260B44(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_662B4((uint64_t)v9, &qword_3C78D0);
  }
}

uint64_t sub_1737AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_65CF4((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_61918(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_662B4(a1, &qword_3C8950);
    sub_260B70(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_662B4((uint64_t)v9, &qword_3C8950);
  }
}

uint64_t sub_173888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t View.actionDispatcherRespectingFigaroRestriction<A>(with:implementations:)()
{
  sub_2E3A90();
  if (v1)
  {
    swift_retain();
  }
  else
  {
    sub_2E3B20();
    sub_2E3AA0();
  }
  sub_2E2980();
  return swift_release();
}

uint64_t sub_173990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2E2320();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_2E2330();
}

uint64_t sub_173A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2E2320();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_2E2330();
}

uint64_t ModifiedContent<>.pageRenderMetricsRespectingFigaroRestriction<A>(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v10 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_2E3B20();
  uint64_t v50 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v60 = *(void *)(a2 + 24);
  uint64_t v61 = v18;
  uint64_t v71 = v18;
  uint64_t v72 = v60;
  uint64_t v57 = a3;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v59 = a4;
  uint64_t v62 = a5;
  uint64_t v75 = a5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  int v25 = (char *)&v49 - v24;
  uint64_t v52 = v26;
  uint64_t v27 = sub_2E2340();
  uint64_t v55 = *(void *)(v27 - 8);
  uint64_t v56 = v27;
  __chkstk_darwin(v27);
  uint64_t v54 = (char *)&v49 - v28;
  sub_2E3A90();
  if (v71 == 1)
  {
    sub_2E1320();
    sub_2E3A90();
    uint64_t v29 = v57;
    uint64_t v51 = v25;
    uint64_t v30 = v59;
    uint64_t v31 = v62;
    sub_2E1A30();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v15);
    uint64_t v71 = v61;
    uint64_t v72 = v60;
    uint64_t v73 = v29;
    uint64_t v74 = v30;
    uint64_t v75 = v31;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v33 = v51;
    uint64_t v34 = v52;
    v32(v51, v22, v52);
    int v35 = *(void (**)(char *, uint64_t))(v20 + 8);
    v35(v22, v34);
    v32(v22, v33, v34);
    uint64_t v36 = v29;
    uint64_t v37 = *(void *)(v30 + 8);
    uint64_t v63 = v29;
    uint64_t v64 = v37;
    swift_getWitnessTable();
    uint64_t v38 = v54;
    sub_173990((uint64_t)v22, v34);
    v35(v22, v34);
    v35(v33, v34);
  }
  else
  {
    uint64_t v39 = v59;
    uint64_t v37 = *(void *)(v59 + 8);
    uint64_t v36 = v57;
    uint64_t v69 = v57;
    uint64_t v70 = v37;
    swift_getWitnessTable();
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    unsigned __int8 v41 = v14;
    v40(v14, OpaqueTypeConformance2, a2);
    uint64_t v42 = (uint64_t)v51;
    v40(v51, (uint64_t)v41, a2);
    uint64_t v71 = v61;
    uint64_t v72 = v60;
    uint64_t v73 = v36;
    uint64_t v74 = v39;
    uint64_t v75 = v62;
    swift_getOpaqueTypeConformance2();
    uint64_t v38 = v54;
    sub_173A88(v42, v52, a2);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v43(v42, a2);
    v43((uint64_t)v41, a2);
  }
  uint64_t v71 = v61;
  uint64_t v72 = v60;
  uint64_t v73 = v36;
  uint64_t v74 = v59;
  uint64_t v75 = v62;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v36;
  uint64_t v68 = v37;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = v44;
  uint64_t v66 = WitnessTable;
  uint64_t v46 = v56;
  swift_getWitnessTable();
  uint64_t v47 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v58, v38, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v38, v46);
}

uint64_t View.actionDispatcherRespectingFigaroRestriction<A>(from:)()
{
  sub_2E3A90();
  if (v1)
  {
    swift_retain();
  }
  else
  {
    sub_2E3B20();
    sub_2E3AA0();
  }
  sub_2E2970();
  return swift_release();
}

uint64_t View.pageViewEvent(_:pageData:additionalEventData:pageMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v28 = a7;
  uint64_t v29 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v25 = a2;
  uint64_t v8 = sub_2E38D0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2DE7F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for PageViewEventViewModifier();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v24 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v25, v12, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
  *(void *)uint64_t v18 = swift_getKeyPath();
  v18[8] = 0;
  *((void *)v18 + 2) = a1;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16[6]], v15, v12);
  *(void *)&v18[v16[7]] = v27;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v16[8]], v11, v8);
  sub_176388((uint64_t)v18, (uint64_t)v22);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2E2EE0();
  return sub_1763EC((uint64_t)v22);
}

uint64_t type metadata accessor for PageViewEventViewModifier()
{
  uint64_t result = qword_3CD650;
  if (!qword_3CD650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t IntentView<>.pageRenderMetricsRespectingFigaroRestriction<A>(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v6 = *(a2 - 1);
  __chkstk_darwin(a1);
  uint64_t v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_2E3B20();
  uint64_t v41 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2[2];
  uint64_t v15 = a2[4];
  uint64_t v16 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v18 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v20 = a2[9];
  uint64_t v54 = a2[3];
  uint64_t v55 = v14;
  uint64_t v59 = v14;
  uint64_t v60 = v54;
  uint64_t v52 = v16;
  uint64_t v53 = v15;
  uint64_t v61 = v15;
  uint64_t v62 = v16;
  uint64_t v50 = v18;
  uint64_t v51 = v17;
  uint64_t v63 = v17;
  uint64_t v64 = v18;
  uint64_t v48 = v20;
  uint64_t v49 = v19;
  uint64_t v65 = v19;
  uint64_t v66 = v20;
  uint64_t v56 = a3;
  uint64_t v67 = a3;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v22 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v41 - v26;
  uint64_t v45 = sub_2E2340();
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v41 - v28;
  sub_2E3A90();
  if (v59 == 1)
  {
    sub_2E1320();
    sub_2E3A90();
    uint64_t v29 = v56;
    sub_2DF430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v11);
    uint64_t v59 = v55;
    uint64_t v60 = v54;
    uint64_t v61 = v53;
    uint64_t v62 = v52;
    uint64_t v63 = v51;
    uint64_t v64 = v50;
    uint64_t v65 = v49;
    uint64_t v66 = v48;
    uint64_t v67 = v29;
    swift_getOpaqueTypeConformance2();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v30(v27, v24, OpaqueTypeMetadata2);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v22 + 8);
    v31(v24, OpaqueTypeMetadata2);
    v30(v24, v27, OpaqueTypeMetadata2);
    swift_getWitnessTable();
    sub_173990((uint64_t)v24, OpaqueTypeMetadata2);
    v31(v24, OpaqueTypeMetadata2);
    v31(v27, OpaqueTypeMetadata2);
  }
  else
  {
    swift_getWitnessTable();
    uint64_t v32 = *(void (**)(char *, uint64_t, void *))(v6 + 16);
    v32(v10, v43, a2);
    uint64_t v33 = (uint64_t)v42;
    v32(v42, (uint64_t)v10, a2);
    uint64_t v59 = v55;
    uint64_t v60 = v54;
    uint64_t v61 = v53;
    uint64_t v62 = v52;
    uint64_t v63 = v51;
    uint64_t v64 = v50;
    uint64_t v65 = v49;
    uint64_t v66 = v48;
    uint64_t v67 = v56;
    swift_getOpaqueTypeConformance2();
    sub_173A88(v33, OpaqueTypeMetadata2, (uint64_t)a2);
    uint64_t v34 = *(void (**)(uint64_t, void *))(v6 + 8);
    v34(v33, a2);
    v34((uint64_t)v10, a2);
  }
  uint64_t v59 = v55;
  uint64_t v60 = v54;
  uint64_t v61 = v53;
  uint64_t v62 = v52;
  uint64_t v63 = v51;
  uint64_t v64 = v50;
  uint64_t v65 = v49;
  uint64_t v66 = v48;
  uint64_t v67 = v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v57 = OpaqueTypeConformance2;
  uint64_t v58 = WitnessTable;
  uint64_t v37 = v45;
  swift_getWitnessTable();
  uint64_t v38 = v44;
  uint64_t v39 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v46, v47, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v37);
}

uint64_t sub_174BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2E38D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_63BAC(&qword_3C7E40);
  sub_2E3A90();
  id v8 = [v20[0] figaroPageContext];
  swift_unknownObjectRelease();
  if (v8)
  {
    uint64_t v9 = sub_2E4420();
    uint64_t v11 = v10;

    uint64_t v12 = type metadata accessor for PageViewEventViewModifier();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(int *)(v12 + 32), v4);
    uint64_t v13 = (void (*)(id *, void))sub_2E38A0();
    if (*v14)
    {
      uint64_t v15 = sub_2E1330();
      long long v19[3] = &type metadata for String;
      v19[0] = v9;
      v19[1] = v11;
      sub_1736D4((uint64_t)v19, v15, v16);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v13(v20, 0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  }
  else
  {
    uint64_t v17 = type metadata accessor for PageViewEventViewModifier();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v2 + *(int *)(v17 + 32), v4);
  }
}

uint64_t sub_174DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v97 = a2;
  uint64_t v103 = type metadata accessor for PageViewEventViewModifier();
  uint64_t v94 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v95 = v3;
  uint64_t v96 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_2DE2B0();
  uint64_t v93 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  unsigned __int8 v92 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned __int8 v91 = (char *)&v70 - v6;
  uint64_t v7 = sub_63BAC((uint64_t *)&unk_3CE210);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v70 - v11;
  uint64_t v13 = sub_63BAC(&qword_3CD698);
  __chkstk_darwin(v13 - 8);
  uint64_t v75 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2E3B20();
  uint64_t v74 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_63BAC((uint64_t *)&unk_3CE220);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_63BAC(&qword_3CD6A0);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v98 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_63BAC(&qword_3CD6A8);
  __chkstk_darwin(v80);
  unint64_t v99 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_63BAC(&qword_3CD6B0);
  uint64_t v81 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_63BAC(&qword_3CD6B8);
  uint64_t v88 = *(void *)(v24 - 8);
  uint64_t v89 = v24;
  __chkstk_darwin(v24);
  uint64_t v83 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_63BAC(&qword_3CD6C0);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v82 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2E38D0();
  uint64_t v101 = *(void *)(v27 - 8);
  uint64_t v102 = v27;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E3A90();
  unint64_t v90 = v12;
  uint64_t v86 = v9;
  uint64_t v73 = v2;
  if (v105 == 1)
  {
    sub_174BE4((uint64_t)v29);
    sub_63BAC(&qword_3C7AA8);
    sub_2E3A90();
    uint64_t v30 = v105;
    uint64_t v70 = v106;
  }
  else
  {
    sub_2E38C0();
    type metadata accessor for NoopImpressionTracker();
    uint64_t v30 = swift_allocObject();
    uint64_t v70 = sub_17757C(&qword_3CD6C8, (void (*)(uint64_t))type metadata accessor for NoopImpressionTracker);
  }
  uint64_t v31 = v101;
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  uint64_t v32 = v29;
  uint64_t v100 = v29;
  uint64_t v33 = v102;
  v72(v20, v32, v102);
  uint64_t v71 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
  v71(v20, 0, 1, v33);
  uint64_t v34 = v15;
  sub_2E3A90();
  uint64_t v35 = sub_2DF6D0();
  uint64_t v36 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v75, 1, 1, v35);
  swift_unknownObjectRetain();
  sub_63BAC(&qword_3CD6D0);
  sub_71AA4(&qword_3CD6D8, &qword_3CD6D0);
  sub_2E2920();
  uint64_t v78 = v30;
  swift_unknownObjectRelease();
  sub_662B4(v36, &qword_3CD698);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v17, v34);
  sub_662B4((uint64_t)v20, (uint64_t *)&unk_3CE220);
  uint64_t KeyPath = swift_getKeyPath();
  v72(v20, v100, v33);
  v71(v20, 0, 1, v33);
  uint64_t v38 = v80;
  uint64_t v39 = v99;
  uint64_t v40 = (uint64_t *)&v99[*(int *)(v80 + 36)];
  uint64_t v41 = sub_63BAC(&qword_3CD6E0);
  sub_66444((uint64_t)v20, (uint64_t)v40 + *(int *)(v41 + 28), (uint64_t *)&unk_3CE220);
  *uint64_t v40 = KeyPath;
  uint64_t v42 = v76;
  uint64_t v43 = v39;
  uint64_t v44 = v98;
  uint64_t v45 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v43, v98, v77);
  sub_662B4((uint64_t)v20, (uint64_t *)&unk_3CE220);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  uint64_t v46 = v73;
  uint64_t v47 = v73 + *(int *)(v103 + 24);
  uint64_t v48 = sub_2DE7F0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v90, v47, v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
  sub_2DE7E0();
  uint64_t v51 = v91;
  sub_2DE2A0();
  sub_63BAC(&qword_3C9F58);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_2FEFE0;
  uint64_t v53 = (uint64_t *)(v52 + 32);
  uint64_t v54 = (uint64_t)v86;
  sub_66444(v50, (uint64_t)v86, (uint64_t *)&unk_3CE210);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v54, 1, v48) == 1)
  {
    sub_662B4(v54, (uint64_t *)&unk_3CE210);
    *(_OWORD *)uint64_t v53 = 0u;
    *(_OWORD *)(v52 + 48) = 0u;
    *(_OWORD *)(v52 + 64) = 0u;
  }
  else
  {
    *(void *)(v52 + 56) = v48;
    *(void *)(v52 + 64) = sub_17757C(&qword_3CA5F8, (void (*)(uint64_t))&type metadata accessor for PageData);
    *(void *)(v52 + 72) = sub_17757C(&qword_3CA600, (void (*)(uint64_t))&type metadata accessor for PageData);
    uint64_t v55 = sub_71088(v53);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 32))(v55, v54, v48);
  }
  unint64_t v56 = sub_1771F0();
  uint64_t v57 = v79;
  uint64_t v58 = (uint64_t)v99;
  sub_2E2BF0();
  swift_bridgeObjectRelease();
  uint64_t v98 = *(char **)(v93 + 8);
  ((void (*)(char *, uint64_t))v98)(v51, v104);
  sub_662B4(v50, (uint64_t *)&unk_3CE210);
  sub_662B4(v58, &qword_3CD6A8);
  uint64_t v59 = v46;
  sub_180A8C(*(void *)(v46 + *(int *)(v103 + 28)));
  uint64_t v60 = v92;
  sub_2DE290();
  uint64_t v105 = v38;
  uint64_t v106 = v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v62 = v83;
  uint64_t v63 = v84;
  sub_2E2BF0();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v98)(v60, v104);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v57, v63);
  uint64_t v64 = v96;
  sub_1772F0(v59, v96);
  unint64_t v65 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v66 = swift_allocObject();
  sub_176388(v64, v66 + v65);
  uint64_t v105 = v63;
  uint64_t v106 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v67 = v82;
  uint64_t v68 = v89;
  sub_2E2910();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v62, v68);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v85 + 32))(v97, v67, v87);
}

uint64_t sub_175AD4()
{
  return sub_2E1E50();
}

uint64_t sub_175AF8(uint64_t a1)
{
  uint64_t v2 = sub_63BAC((uint64_t *)&unk_3CE220);
  __chkstk_darwin(v2 - 8);
  sub_66444(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_3CE220);
  return sub_2E1E60();
}

void sub_175B8C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for PageViewEventViewModifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = *v0;
  char v13 = *(unsigned char *)(v1 + 8);
  sub_C9A1C(v12, v13);
  id v29 = (id)sub_86770(v12, v13);
  sub_88154(v12, v13);
  if (v29)
  {
    uint64_t v14 = sub_2DE850();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      sub_1772F0(v1, (uint64_t)v11);
      unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v17 = swift_allocObject();
      sub_176388((uint64_t)v11, v17 + v16);
      sub_2DE800();
      swift_release();
    }
    else
    {
      id v27 = v29;
    }
  }
  else
  {
    if (qword_3C65F8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_2DF850();
    sub_58BA0(v18, (uint64_t)qword_3CD2B8);
    sub_1772F0(v1, (uint64_t)v8);
    sub_1772F0(v1, (uint64_t)v5);
    uint64_t v19 = sub_2DF830();
    os_log_type_t v20 = sub_2E48F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v22 = sub_2DE7E0();
      uint64_t v30 = sub_5F150(v22, v23, &v31);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      sub_1763EC((uint64_t)v8);
      *(_WORD *)(v21 + 12) = 2082;
      uint64_t v24 = sub_2DE7D0();
      if (v25)
      {
        unint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 0x6E776F6E6B6E753CLL;
        unint64_t v26 = 0xE90000000000003ELL;
      }
      uint64_t v30 = sub_5F150(v24, v26, &v31);
      sub_2E4B40();
      swift_bridgeObjectRelease();
      sub_1763EC((uint64_t)v5);
      _os_log_impl(&dword_0, v19, v20, "Unable to submit PageViewEvent for <%{public}s:%{public}s> due to missing tracker", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1763EC((uint64_t)v8);
      sub_1763EC((uint64_t)v5);
    }
  }
}

uint64_t sub_175F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + *(int *)(type metadata accessor for PageViewEventViewModifier() + 28));
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = &unk_2FE000;
  if (v3)
  {
    uint64_t v5 = (void *)(v2 + 32);
    swift_bridgeObjectRetain();
    unsigned int v16 = enum case for DataEventTrait.onlyOnce(_:);
    do
    {
      sub_71044(v5, v5[3]);
      sub_63BAC(&qword_3CA5E0);
      uint64_t v6 = sub_2DE0A0();
      uint64_t v7 = *(void *)(v6 - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_2FEFE0;
      (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9 + v8, v16, v6);
      sub_2DE080();
      swift_bridgeObjectRelease();
      v5 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = (_OWORD *)&unk_2FE000;
    uint64_t v10 = v16;
  }
  else
  {
    uint64_t v10 = enum case for DataEventTrait.onlyOnce(_:);
  }
  sub_63BAC(&qword_3CA5E0);
  uint64_t v11 = sub_2DE0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v4[254];
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 104))(v14 + v13, v10, v11);
  sub_2DE7F0();
  sub_17757C(&qword_3CA5F8, (void (*)(uint64_t))&type metadata accessor for PageData);
  sub_2DE080();
  swift_bridgeObjectRelease();
  sub_2DE3D0();
  sub_17757C(&qword_3CD6F8, (void (*)(uint64_t))&type metadata accessor for PageViewEvent);
  memset(v17, 0, sizeof(v17));
  sub_2DE090();
  return sub_662B4((uint64_t)v17, &qword_3C78D0);
}

void *ContextActionItem.subContextActionItems.getter()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1762D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1EC0();
  *a1 = result;
  return result;
}

uint64_t sub_1762FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1EC0();
  *a1 = result;
  return result;
}

uint64_t sub_176328(id *a1)
{
  id v1 = *a1;
  return sub_2E1ED0();
}

uint64_t sub_176358(id *a1)
{
  id v1 = *a1;
  return sub_2E1ED0();
}

uint64_t sub_176388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageViewEventViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1763EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageViewEventViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for NoopImpressionTracker()
{
  return self;
}

uint64_t sub_17646C()
{
  return swift_getWitnessTable();
}

uint64_t sub_176508()
{
  return sub_176538();
}

uint64_t sub_176520()
{
  return sub_176538();
}

uint64_t sub_176538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_176570()
{
  return swift_getWitnessTable();
}

uint64_t sub_1766A4()
{
  return swift_getWitnessTable();
}

char *sub_1767B8(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = &v19[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    sub_C9A1C(*a2, v8);
    *(void *)a1 = v7;
    a1[8] = v8;
    *((void *)a1 + 2) = a2[2];
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_2DE7F0();
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    *(void *)&a1[a3[7]] = *(char **)((char *)a2 + a3[7]);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_2E38D0();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_176928(uint64_t a1, uint64_t a2)
{
  sub_88154(*(id *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_2E38D0();
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_176A00(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_C9A1C(*(id *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2DE7F0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_2E38D0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  return a1;
}

uint64_t sub_176B20(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_C9A1C(*(id *)a2, v7);
  uint64_t v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_88154(v8, v9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_176C48(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_176D34(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_88154(v8, v9);
  *(void *)(a1 + 16) = a2[2];
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_176E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_176E54);
}

uint64_t sub_176E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2DE7F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_2E38D0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_176F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_176F94);
}

uint64_t sub_176F94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2DE7F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_2E38D0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1770C0()
{
  uint64_t result = sub_2DE7F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2E38D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1771AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1771C8()
{
  return sub_2E1E50();
}

unint64_t sub_1771F0()
{
  unint64_t result = qword_3CD6E8;
  if (!qword_3CD6E8)
  {
    sub_70ECC(&qword_3CD6A8);
    sub_70ECC(&qword_3CD6D0);
    sub_71AA4(&qword_3CD6D8, &qword_3CD6D0);
    swift_getOpaqueTypeConformance2();
    sub_71AA4(&qword_3CD6F0, &qword_3CD6E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD6E8);
  }
  return result;
}

uint64_t sub_1772F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageViewEventViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_177358(char a1)
{
  if (a1) {
    sub_175B8C();
  }
}

uint64_t sub_1773C0()
{
  unint64_t v1 = (int *)(type metadata accessor for PageViewEventViewModifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_88154(*(id *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  swift_release();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v6 + v1[10];
  uint64_t v10 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_17750C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PageViewEventViewModifier() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_175F58(a1, v4);
}

uint64_t sub_17757C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1775C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_177684(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = (int *)type metadata accessor for YearInReviewPage();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_2DE7F0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v7 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    *(uint64_t *)((char *)v7 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    uint64_t v14 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v15 = (uint64_t *)((char *)v7 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1777CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for YearInReviewPage() + 20);
  uint64_t v3 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_177888(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for YearInReviewPage();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DE7F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  uint64_t v12 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_17798C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for YearInReviewPage();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_177AB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for YearInReviewPage();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  uint64_t v11 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  return a1;
}

void *sub_177B78(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for YearInReviewPage();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = *v13;
  swift_release();
  *((void *)v12 + 1) = v13[1];
  swift_release();
  return a1;
}

uint64_t sub_177C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_177C8C);
}

uint64_t sub_177C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for YearInReviewPage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_177D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_177D60);
}

uint64_t sub_177D60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for YearInReviewPage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for YearInReviewPageView()
{
  uint64_t result = qword_3CD758;
  if (!qword_3CD758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_177E68()
{
  uint64_t result = type metadata accessor for YearInReviewPage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_177F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_177F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v70 = type metadata accessor for PageViewEventViewModifier() - 8;
  __chkstk_darwin(v70);
  uint64_t v61 = (uint64_t *)((char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_2DE7F0();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_2E38D0();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v55 - v7;
  uint64_t v8 = sub_2E2090();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2E0400();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_63BAC(&qword_3CD798);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v59 = v16;
  uint64_t v60 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_63BAC(&qword_3CD7A0);
  uint64_t v62 = *(void *)(v20 - 8);
  uint64_t v63 = v20;
  __chkstk_darwin(v20);
  uint64_t v57 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v56 = v1;
  sub_180BCC(*v1);
  uint64_t v58 = type metadata accessor for YearInReviewPageView();
  uint64_t v22 = (uint64_t *)((char *)v1 + *(int *)(v58 + 24));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v74 = v24;
  uint64_t v75 = v23;
  sub_63BAC(&qword_3CD7A8);
  sub_2E3140();
  sub_2E03F0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v8);
  sub_2E2FE0();
  uint64_t v25 = sub_17961C(&qword_3CD7B0, (void (*)(uint64_t))&type metadata accessor for PagedScrollView);
  sub_2E2B30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t v26 = v56;
  uint64_t v73 = v56;
  sub_63BAC(&qword_3CD7B8);
  uint64_t v74 = v12;
  uint64_t v75 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = type metadata accessor for YearInReviewToolbarContent();
  uint64_t v28 = sub_17961C(&qword_3CD7C0, (void (*)(uint64_t))type metadata accessor for YearInReviewToolbarContent);
  uint64_t v74 = v27;
  uint64_t v75 = v28;
  swift_getOpaqueTypeConformance2();
  id v29 = v57;
  uint64_t v30 = v59;
  sub_2E2ED0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v30);
  uint64_t v31 = *(uint64_t *)((char *)v26 + *(int *)(v58 + 20));
  uint64_t v32 = (uint64_t)v26 + *(int *)(type metadata accessor for YearInReviewPage() + 20);
  uint64_t v33 = v72;
  sub_2E38C0();
  uint64_t v35 = v68;
  uint64_t v34 = v69;
  uint64_t v36 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v32, v69);
  uint64_t v38 = v64;
  uint64_t v37 = v65;
  uint64_t v39 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v64, v33, v67);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = (uint64_t)v61;
  uint64_t *v61 = KeyPath;
  *(unsigned char *)(v41 + 8) = 0;
  *(void *)(v41 + 16) = v31;
  uint64_t v42 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v41 + *(int *)(v70 + 32), v36, v34);
  *(void *)(v41 + *(int *)(v42 + 36)) = _swiftEmptyArrayStorage;
  uint64_t v43 = v41 + *(int *)(v42 + 40);
  uint64_t v44 = v37;
  uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v46 = v39;
  v45(v43, v38, v39);
  uint64_t v47 = sub_63BAC(&qword_3CD7C8);
  uint64_t v48 = v71;
  sub_179328(v41, v71 + *(int *)(v47 + 36), (uint64_t (*)(void))type metadata accessor for PageViewEventViewModifier);
  uint64_t v49 = v62;
  uint64_t v50 = v29;
  uint64_t v51 = v29;
  uint64_t v52 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v48, v51, v63);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v44 + 8);
  swift_retain();
  v53(v72, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v50, v52);
}

uint64_t sub_178678@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_2E1600();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2E0300();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3C8F18);
  __chkstk_darwin(v8 - 8);
  uint64_t v41 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for YearInReviewToolbarContent();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = sub_178AD4();
  uint64_t v33 = v17;
  uint64_t v34 = v16;
  uint64_t v18 = *a1;
  uint64_t v19 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for YearInReviewPageView() + 24));
  uint64_t v20 = v19[1];
  uint64_t v44 = *v19;
  uint64_t v45 = v20;
  sub_63BAC(&qword_3CD7A8);
  sub_2E3140();
  unint64_t v21 = sub_2E08D0();
  uint64_t result = swift_release();
  if ((v21 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v21 >= *(void *)(v18 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_66310(v18 + 40 * v21 + 32, (uint64_t)&v44);
  uint64_t v23 = v41;
  sub_178F64(&v44, v41);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v44);
  uint64_t v24 = *a1;
  uint64_t v25 = v19[1];
  uint64_t v44 = *v19;
  uint64_t v45 = v25;
  sub_2E3140();
  unint64_t v26 = sub_2E08D0();
  uint64_t result = swift_release();
  if ((v26 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v26 < *(void *)(v24 + 16))
  {
    sub_66310(v24 + 40 * v26 + 32, (uint64_t)&v44);
    sub_71044(&v44, v46);
    sub_2DFCA0();
    uint64_t v27 = v37;
    sub_2E02F0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v36);
    uint64_t v28 = v19[1];
    uint64_t v42 = *v19;
    uint64_t v43 = v28;
    sub_2E3140();
    uint64_t v29 = sub_2E08D0();
    swift_release();
    *uint64_t v12 = swift_getKeyPath();
    sub_63BAC((uint64_t *)&unk_3D20F0);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t *)((char *)v12 + v10[5]);
    uint64_t v31 = v33;
    *uint64_t v30 = v34;
    v30[1] = v31;
    sub_1792C0(v23, (uint64_t)v12 + v10[6]);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v12 + v10[7], v27, v39);
    *((unsigned char *)v12 + v10[8]) = v29 != 0;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v44);
    sub_179328((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for YearInReviewToolbarContent);
    sub_17961C(&qword_3CD7C0, (void (*)(uint64_t))type metadata accessor for YearInReviewToolbarContent);
    sub_2E2420();
    return sub_179390((uint64_t)v15);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_178AD4()
{
  uint64_t v1 = sub_2DDDB0();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2DDDF0();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = sub_2DDFB0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_63BAC(&qword_3C7138);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2DDEA0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v0 + *(int *)(type metadata accessor for YearInReviewPage() + 24));
  sub_2DDF20();
  sub_2DDD00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1793EC((uint64_t)v13);
    if (qword_3C66B8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_2DF850();
    sub_58BA0(v19, (uint64_t)qword_3CD4E0);
    uint64_t v20 = sub_2DF830();
    os_log_type_t v21 = sub_2E48F0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134217984;
      uint64_t v30 = v18;
      sub_2E4B40();
      _os_log_impl(&dword_0, v20, v21, "Failed to create date for last day of '%ld'.", v22, 0xCu);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_2DDAB0();
    sub_2DDDA0();
    sub_2DDD60();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
    uint64_t v24 = v29;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v28 + 8);
    v25(v6, v29);
    sub_17961C(&qword_3C9190, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    sub_2DDE80();
    v25(v9, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v30;
  }
}

uint64_t sub_178F64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2E0300();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_2E0F20();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  sub_71044(a1, a1[3]);
  uint64_t v12 = sub_2E0C70();
  if (v12)
  {
    uint64_t v35 = &type metadata for AnyView;
    uint64_t v36 = &protocol witness table for AnyView;
    uint64_t v34 = v12;
    uint64_t v32 = v6;
    sub_71044(a1, a1[3]);
    swift_retain();
    sub_2DFCA0();
    sub_178AD4();
    sub_2E0F00();
    uint64_t v13 = v32;
    uint64_t v14 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v11, v32);
    sub_2E0EF0();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v19 = sub_2E0F10();
    uint64_t v21 = v20;
    swift_release();
    uint64_t v22 = v11;
    uint64_t v23 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v13);
    uint64_t v24 = *(void *)(v2 + *(int *)(type metadata accessor for YearInReviewPageView() + 20));
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v14, v23);
    uint64_t v25 = (int *)sub_63BAC(&qword_3C8F10);
    uint64_t v26 = (void *)(a2 + v25[9]);
    *uint64_t v26 = v16;
    v26[1] = v18;
    uint64_t v27 = (uint64_t *)(a2 + v25[10]);
    *uint64_t v27 = v19;
    v27[1] = v21;
    *(void *)(a2 + v25[11]) = v24;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v25 - 1) + 56))(a2, 0, 1, v25);
    return swift_retain();
  }
  else
  {
    uint64_t v29 = sub_63BAC(&qword_3C8F10);
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    return v30(a2, 1, 1, v29);
  }
}

uint64_t sub_1792AC@<X0>(uint64_t a1@<X8>)
{
  return sub_178678(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1792C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C8F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_179328(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_179390(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YearInReviewToolbarContent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1793EC(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C7138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_179450()
{
  unint64_t result = qword_3CD7D0;
  if (!qword_3CD7D0)
  {
    sub_70ECC(&qword_3CD7C8);
    sub_70ECC(&qword_3CD798);
    sub_70ECC(&qword_3CD7B8);
    sub_2E0400();
    sub_17961C(&qword_3CD7B0, (void (*)(uint64_t))&type metadata accessor for PagedScrollView);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for YearInReviewToolbarContent();
    sub_17961C(&qword_3CD7C0, (void (*)(uint64_t))type metadata accessor for YearInReviewToolbarContent);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_17961C(&qword_3CD5F0, (void (*)(uint64_t))type metadata accessor for PageViewEventViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD7D0);
  }
  return result;
}

uint64_t sub_17961C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_179664@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t)@<X1>, char a3@<W2>, void (*a4)(char *, char *, uint64_t)@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  LODWORD(v53) = a5;
  uint64_t v52 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v10 = sub_63BAC(&qword_3C97E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2DF5D0();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v56 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = sub_2DF300();
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  uint64_t v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v45 - v21;
  if (a6 && *(void *)(a6 + 16))
  {
    uint64_t v47 = a7;
    uint64_t v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v22;
    uint64_t v51 = v24;
    uint64_t v26 = v13;
    uint64_t v49 = v23;
    uint64_t v27 = *(unsigned __int8 *)(v23 + 80);
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v46((char *)&v45 - v21, a6 + ((v27 + 32) & ~v27), v22);
    if ((a3 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_17A00C((uint64_t)v54, v55, (uint64_t)v12);
LABEL_14:
      uint64_t v45 = ~v27;
      uint64_t v30 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
      uint64_t v53 = a6;
      uint64_t v54 = v30;
      uint64_t v55 = v56 + 56;
      v30((uint64_t)v12, 0, 1, v13);
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      v52(v17, v12, v13);
      uint64_t v31 = v50;
      v46(v51, (uint64_t)v25, v50);
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v48, v17, v13);
      uint64_t v32 = (v27 + 16) & v45;
      unint64_t v33 = (v19 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v34 = (v33 + *(unsigned __int8 *)(v56 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v35 + v32;
      uint64_t v37 = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v36, v51, v31);
      *(void *)(v35 + v33) = v53;
      v52((char *)(v35 + v34), v48, v26);
      uint64_t v38 = v47;
      sub_2DF580();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v26);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v31);
      return v54(v38, 0, 1, v26);
    }
    if ((v53 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_17A620((uint64_t)v52, v55, (uint64_t)v12);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v12, 1, 1, v13);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v50);
    sub_662B4((uint64_t)v12, &qword_3C97E8);
    a7 = v47;
    uint64_t v24 = v51;
    if (!*(void *)(a6 + 16)) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(a7, 1, 1, v13);
    }
    goto LABEL_17;
  }
  if (a3)
  {
    if (v53)
    {
      uint64_t v49 = v23;
      uint64_t v50 = v22;
      if (!a6 || !*(void *)(a6 + 16)) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(a7, 1, 1, v13);
      }
LABEL_17:
      uint64_t v40 = v49;
      uint64_t v39 = v50;
      uint64_t v41 = *(unsigned __int8 *)(v49 + 80);
      uint64_t v42 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v24, a6 + ((v41 + 32) & ~v41), v50);
      uint64_t v43 = (v41 + 16) & ~v41;
      uint64_t v44 = swift_allocObject();
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v44 + v43, v42, v39);
      *(void *)(v44 + ((v19 + v43 + 7) & 0xFFFFFFFFFFFFFFF8)) = a6;
      swift_bridgeObjectRetain();
      sub_2DF580();
      swift_release();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(a7, 0, 1, v13);
    }
    sub_17A620((uint64_t)v52, v55, a7);
  }
  else
  {
    sub_17A00C((uint64_t)v54, v55, a7);
  }
  uint64_t v28 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);

  return v28(a7, 0, 1, v13);
}

uint64_t sub_179C48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v27[1] = a2;
  long long v27[2] = a4;
  uint64_t v6 = sub_2E3FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E3E10();
  uint64_t v28 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2DF5D0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a3 + 16) < 2uLL)
  {
    sub_2DF2F0();
    sub_2DF5C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2E3E00();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for LocalizerLookupStrategy.default(_:), v6);
    sub_2DF590();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  }
  uint64_t v17 = v10;
  uint64_t v18 = sub_2DF5B0();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v21 = sub_2DF5B0();
  uint64_t v23 = v22;
  sub_71044(a1, a1[3]);
  sub_63BAC(&qword_3C86D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2FCE70;
  strcpy((char *)(inited + 32), "localizedCount");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = v21;
  *(void *)(inited + 56) = v23;
  *(void *)(inited + 64) = 0x65726E6567;
  *(void *)(inited + 72) = 0xE500000000000000;
  *(void *)(inited + 80) = v18;
  *(void *)(inited + 88) = v20;
  sub_592C4(inited);
  sub_2E3E00();
  uint64_t v25 = sub_2E4310();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v17);
  return v25;
}

uint64_t sub_17A00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v5 = sub_2E3FA0();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CD7D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v38 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v40 = (char *)v36 - v10;
  uint64_t v11 = sub_2E3E10();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v36 - v14;
  uint64_t v16 = sub_2DEC50();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v36 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v23((char *)v36 - v21, a2, v16);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v16);
  if (v24 == enum case for ContentKind.pdf(_:)) {
    goto LABEL_2;
  }
  v36[1] = a3;
  if (v24 == enum case for ContentKind.audiobook(_:) || v24 == enum case for ContentKind.regularBook(_:)) {
    goto LABEL_7;
  }
  if (v24 == enum case for ContentKind.manga(_:))
  {
LABEL_2:
    v23(v20, a2, v16);
    sub_2E4480();
    sub_2DF5C0();
    return swift_bridgeObjectRelease();
  }
  if (v24 == enum case for ContentKind.unknownBook(_:))
  {
LABEL_7:
    uint64_t v26 = v15;
    sub_2E3E00();
    uint64_t v27 = v37;
    sub_2E3E00();
    uint64_t v28 = v42;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    uint64_t v30 = (uint64_t)v40;
    v29(v40, 1, 1, v11);
    uint64_t v31 = (uint64_t)v38;
    v29(v38, 1, 1, v11);
    uint64_t v33 = v43;
    uint64_t v32 = v44;
    unint64_t v34 = v41;
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, enum case for LocalizerLookupStrategy.default(_:), v44);
    sub_2DF570();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    sub_662B4(v31, &qword_3CD7D8);
    sub_662B4(v30, &qword_3CD7D8);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v28 + 8);
    v35(v27, v11);
    return ((uint64_t (*)(char *, uint64_t))v35)(v26, v11);
  }
  else
  {
    v23(v20, a2, v16);
    sub_2E4480();
    sub_2DF5C0();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
}

uint64_t sub_17A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v5 = sub_2E3FA0();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_63BAC(&qword_3CD7D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v38 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v40 = (char *)v36 - v10;
  uint64_t v11 = sub_2E3E10();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v36 - v14;
  uint64_t v16 = sub_2DEC50();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v36 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v23((char *)v36 - v21, a2, v16);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v16);
  if (v24 == enum case for ContentKind.pdf(_:)) {
    goto LABEL_2;
  }
  v36[1] = a3;
  if (v24 == enum case for ContentKind.audiobook(_:) || v24 == enum case for ContentKind.regularBook(_:)) {
    goto LABEL_7;
  }
  if (v24 == enum case for ContentKind.manga(_:))
  {
LABEL_2:
    v23(v20, a2, v16);
    sub_2E4480();
    sub_2DF5C0();
    return swift_bridgeObjectRelease();
  }
  if (v24 == enum case for ContentKind.unknownBook(_:))
  {
LABEL_7:
    uint64_t v26 = v15;
    sub_2E3E00();
    uint64_t v27 = v37;
    sub_2E3E00();
    uint64_t v28 = v42;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    uint64_t v30 = (uint64_t)v40;
    v29(v40, 1, 1, v11);
    uint64_t v31 = (uint64_t)v38;
    v29(v38, 1, 1, v11);
    uint64_t v33 = v43;
    uint64_t v32 = v44;
    unint64_t v34 = v41;
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, enum case for LocalizerLookupStrategy.default(_:), v44);
    sub_2DF570();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    sub_662B4(v31, &qword_3CD7D8);
    sub_662B4(v30, &qword_3CD7D8);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v28 + 8);
    v35(v27, v11);
    return ((uint64_t (*)(char *, uint64_t))v35)(v26, v11);
  }
  else
  {
    v23(v20, a2, v16);
    sub_2E4480();
    sub_2DF5C0();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
}

uint64_t sub_17AC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[0] = a2;
  v18[1] = a1;
  uint64_t v4 = sub_2E3FA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E3E10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2DF5D0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a3 + 16) < 2uLL)
  {
    sub_2DF2F0();
    sub_2DF5C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2E3E00();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizerLookupStrategy.default(_:), v4);
    sub_2DF590();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v16 = sub_2DF5B0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v16;
}

uint64_t sub_17AEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v94 = a6;
  int v87 = a5;
  v79[0] = a4;
  int v100 = a3;
  uint64_t v82 = a2;
  uint64_t v85 = a1;
  uint64_t v91 = a7;
  uint64_t v7 = sub_63BAC(&qword_3C97E8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  unsigned __int8 v92 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v90 = (char *)v79 - v11;
  __chkstk_darwin(v10);
  uint64_t v89 = (char *)v79 - v12;
  uint64_t v13 = sub_2DF300();
  uint64_t v98 = *(void *)(v13 - 8);
  uint64_t v99 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v86 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v88 = (char *)v79 - v16;
  uint64_t v17 = sub_2E3FA0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_2E3E10();
  uint64_t v21 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v23 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2DF5D0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v95 = v24;
  uint64_t v96 = v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v83 = (char *)v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v97 = (char *)v79 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v102 = (uint64_t)v79 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v84 = (char *)v79 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v104 = (char *)v79 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v79 - v36;
  sub_2E3E00();
  uint64_t v38 = enum case for LocalizerLookupStrategy.default(_:);
  uint64_t v93 = *(void (**)(char *, void, uint64_t))(v18 + 104);
  v93(v20, enum case for LocalizerLookupStrategy.default(_:), v17);
  uint64_t v103 = v37;
  sub_2DF590();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v18 + 8);
  v39(v20, v17);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v41 = v101;
  v40(v23, v101);
  sub_2E3E00();
  unsigned int v81 = v38;
  uint64_t v42 = v38;
  uint64_t v43 = v93;
  v93(v20, v42, v17);
  sub_2DF590();
  uint64_t v80 = v39;
  v39(v20, v17);
  uint64_t v44 = v40;
  v79[1] = v21 + 8;
  v40(v23, v41);
  uint64_t v45 = v94;
  if (v94)
  {
    unint64_t v46 = *(void *)(v94 + 16);
    if (v46)
    {
      uint64_t v47 = v94;
      (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v88, v94 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80)), v99);
      if (v100 & 1) != 0 && (v87) {
        goto LABEL_5;
      }
      if (v46 < 2)
      {
        sub_2DF2F0();
        sub_2DF5C0();
        swift_bridgeObjectRelease();
        if ((v100 & 1) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_2E3E00();
        v43(v20, v81, v17);
        sub_2DF590();
        v80(v20, v17);
        v44(v23, v101);
        if ((v100 & 1) == 0)
        {
LABEL_13:
          uint64_t v58 = v102;
          sub_17A00C(v82, v85, v102);
          goto LABEL_24;
        }
      }
      if (v87)
      {
        (*(void (**)(char *, uint64_t))(v96 + 8))(v84, v95);
LABEL_5:
        (*(void (**)(char *, uint64_t))(v98 + 8))(v88, v99);
        uint64_t v48 = v86;
        uint64_t v45 = v47;
        goto LABEL_15;
      }
      uint64_t v58 = v102;
      sub_17A620(v79[0], v85, v102);
LABEL_24:
      uint64_t v72 = v96;
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
      uint64_t v52 = v95;
      v73(v97, v103, v95);
      uint64_t v74 = v89;
      v73(v89, (char *)v58, v52);
      uint64_t v75 = *(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56);
      v75(v74, 0, 1, v52);
      uint64_t v76 = v90;
      v73(v90, v84, v52);
      v75(v76, 0, 1, v52);
      uint64_t v77 = v92;
      uint64_t v71 = v104;
      v73(v92, v104, v52);
      v75(v77, 0, 1, v52);
      sub_2E0B60();
      uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v57(v102, v52);
      v57((uint64_t)v84, v52);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v88, v99);
LABEL_25:
      v57((uint64_t)v71, v52);
      return ((uint64_t (*)(char *, uint64_t))v57)(v103, v52);
    }
  }
  if (v100)
  {
    if (v87)
    {
      uint64_t v48 = v86;
      if (!v94)
      {
LABEL_18:
        uint64_t v52 = v95;
        uint64_t v61 = v96;
        uint64_t v62 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 16);
        v62(v102, v103, v95);
        uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v63(v89, 1, 1, v52);
        v63(v90, 1, 1, v52);
        uint64_t v64 = v92;
        uint64_t v65 = v104;
        v62((uint64_t)v92, v104, v52);
        v63(v64, 0, 1, v52);
        sub_2E0B60();
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
        v57((uint64_t)v65, v52);
        return ((uint64_t (*)(char *, uint64_t))v57)(v103, v52);
      }
LABEL_15:
      uint64_t v59 = *(void *)(v45 + 16);
      if (v59)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v48, v45 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80)), v99);
        if (v59 == 1)
        {
          sub_2DF2F0();
          uint64_t v60 = v83;
          sub_2DF5C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_2E3E00();
          v43(v20, v81, v17);
          uint64_t v60 = v83;
          sub_2DF590();
          v80(v20, v17);
          v44(v23, v101);
        }
        uint64_t v52 = v95;
        uint64_t v66 = v96;
        uint64_t v67 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 16);
        v67(v102, v103, v95);
        uint64_t v68 = v89;
        v67((uint64_t)v89, v60, v52);
        uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
        v69(v68, 0, 1, v52);
        v69(v90, 1, 1, v52);
        uint64_t v70 = v92;
        uint64_t v71 = v104;
        v67((uint64_t)v92, v104, v52);
        v69(v70, 0, 1, v52);
        sub_2E0B60();
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v57((uint64_t)v83, v52);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v86, v99);
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    uint64_t v49 = v102;
    sub_17A620(v79[0], v85, v102);
  }
  else
  {
    uint64_t v49 = v102;
    sub_17A00C(v82, v85, v102);
  }
  uint64_t v50 = v96;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  uint64_t v52 = v95;
  v51(v97, v103, v95);
  uint64_t v53 = v89;
  v51(v89, (char *)v49, v52);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v54(v53, 0, 1, v52);
  v54(v90, 1, 1, v52);
  uint64_t v55 = v92;
  uint64_t v56 = v104;
  v51(v92, v104, v52);
  v54(v55, 0, 1, v52);
  sub_2E0B60();
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v57(v102, v52);
  v57((uint64_t)v56, v52);
  return ((uint64_t (*)(void, void))v57)(v103, v52);
}

uint64_t sub_17BAF0()
{
  uint64_t v1 = sub_2DF300();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_17BB94(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_2DF300() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_17AC38(a1, v1 + v4, v5);
}

uint64_t sub_17BC30()
{
  uint64_t v1 = sub_2DF300();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_2DF5D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_17BD94(void *a1)
{
  uint64_t v3 = *(void *)(sub_2DF300() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_2DF5D0() - 8);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_179C48(a1, v1 + v4, v7, v8);
}

uint64_t sub_17BE78(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = (_OWORD *)(v4 + 40);
    uint64_t v9 = a2 + 5;
    uint64_t v10 = a2[8];
    if (v10)
    {
      uint64_t v11 = a2[9];
      *(void *)(v4 + 64) = v10;
      *(void *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 7);
      *uint64_t v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(void *)(v4 + 72) = a2[9];
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(v4 + v14);
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_2E3CC0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_63BAC(&qword_3C7498);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
    uint64_t v24 = v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)uint64_t v24 = *(void *)v25;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  }
  return v4;
}

uint64_t sub_17C0BC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    _OWORD *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v12 = a3[6];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_2E3CC0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_63BAC(&qword_3C7498);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  return a1;
}

uint64_t sub_17C2A8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_6FA20((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      sub_6FA20((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 40);
  }
  else if (v6)
  {
    *(void *)(a1 + 64) = v6;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  long long v7 = *(_OWORD *)(a2 + 40);
  long long v8 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  long long v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_2E3CC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    uint64_t v17 = sub_63BAC(&qword_3C7498);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_14:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  *(unsigned char *)(v19 + 8) = *((unsigned char *)v20 + 8);
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  return a1;
}

uint64_t sub_17C4FC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = sub_2E3CC0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_63BAC(&qword_3C7498);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t sub_17C674(uint64_t a1, uint64_t a2, int *a3)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 40);
  }
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_2E3CC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_8;
  }
  if (v15)
  {
LABEL_8:
    uint64_t v16 = sub_63BAC(&qword_3C7498);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_9:
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_17C864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17C878);
}

uint64_t sub_17C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C7498);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_17C92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17C940);
}

uint64_t sub_17C940(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_63BAC(&qword_3C7498);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DividerComponentModel()
{
  uint64_t result = qword_3CD838;
  if (!qword_3CD838) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_17CA38()
{
  sub_CE848();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_17CAE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_63BAC(&qword_3C7498);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC(&qword_3CD888);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DividerComponentModel();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v9 + 40;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  sub_9F64C((uint64_t)&v35, (uint64_t)&v32);
  long long v10 = v33;
  *(_OWORD *)(v9 + 40) = v32;
  *(_OWORD *)(v9 + 56) = v10;
  *((void *)v9 + 9) = v34;
  sub_662B4((uint64_t)&v35, &qword_3C8B80);
  uint64_t v11 = (uint64_t)&v9[*(int *)(v7 + 24)];
  uint64_t v12 = sub_2E3CC0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v38 = v11;
  v13(v11, 1, 1, v12);
  uint64_t v14 = a1[3];
  uint64_t v29 = a1;
  sub_71044(a1, v14);
  sub_17D1E4();
  uint64_t v15 = v31;
  sub_2E5220();
  if (v15)
  {
    uint64_t v18 = (uint64_t)v30;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v29);
    sub_662B4(v18, &qword_3C8B78);
    return sub_662B4(v38, &qword_3C7498);
  }
  else
  {
    uint64_t v31 = v7;
    uint64_t v16 = v27;
    sub_63BAC(&qword_3C8B88);
    LOBYTE(v32) = 0;
    sub_71AA4((unint64_t *)&qword_3C8BA0, &qword_3C8B88);
    uint64_t v17 = v28;
    sub_2E4F10();
    long long v19 = v36;
    *(_OWORD *)uint64_t v9 = v35;
    *((_OWORD *)v9 + 1) = v19;
    *((void *)v9 + 4) = v37;
    sub_63BAC(&qword_3C8B78);
    LOBYTE(v32) = 1;
    sub_71AA4(&qword_3C8BA8, &qword_3C8B78);
    sub_2E4F10();
    sub_9F708((uint64_t)&v35, (uint64_t)v30, &qword_3C8B78);
    LOBYTE(v35) = 2;
    sub_17D238(&qword_3C8BB0, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    sub_2E4EC0();
    sub_9F708((uint64_t)v5, v38, &qword_3C7498);
    LOBYTE(v32) = 3;
    sub_B5850();
    sub_2E4EC0();
    char v20 = BYTE8(v35);
    uint64_t v21 = v31;
    uint64_t v22 = &v9[*(int *)(v31 + 28)];
    *(void *)uint64_t v22 = v35;
    v22[8] = v20;
    LOBYTE(v32) = 4;
    sub_2E4EC0();
    (*(void (**)(void, uint64_t))(v16 + 8))(0, v17);
    char v23 = BYTE8(v35);
    uint64_t v24 = &v9[*(int *)(v21 + 32)];
    *(void *)uint64_t v24 = v35;
    v24[8] = v23;
    sub_17D280((uint64_t)v9, v26);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v29);
    return sub_17D2E4((uint64_t)v9);
  }
}

uint64_t sub_17D028()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6575676573;
      break;
    case 2:
      uint64_t result = 0xD000000000000011;
      break;
    case 3:
      uint64_t result = 0x6964646150706F74;
      break;
    case 4:
      uint64_t result = 0x61506D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_17D0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_17D5DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_17D100(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_17D10C(uint64_t a1)
{
  unint64_t v2 = sub_17D1E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_17D148(uint64_t a1)
{
  unint64_t v2 = sub_17D1E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_17D184@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_17CAE4(a1, a2);
}

uint64_t sub_17D19C()
{
  return sub_17D238(&qword_3CD880, (void (*)(uint64_t))type metadata accessor for DividerComponentModel);
}

unint64_t sub_17D1E4()
{
  unint64_t result = qword_3CD890;
  if (!qword_3CD890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD890);
  }
  return result;
}

uint64_t sub_17D238(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_17D280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DividerComponentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_17D2E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DividerComponentModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for DividerComponentModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DividerComponentModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17D49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DividerComponentModel.CodingKeys()
{
  return &type metadata for DividerComponentModel.CodingKeys;
}

unint64_t sub_17D4D8()
{
  unint64_t result = qword_3CD898;
  if (!qword_3CD898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD898);
  }
  return result;
}

unint64_t sub_17D530()
{
  unint64_t result = qword_3CD8A0;
  if (!qword_3CD8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD8A0);
  }
  return result;
}

unint64_t sub_17D588()
{
  unint64_t result = qword_3CD8A8;
  if (!qword_3CD8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD8A8);
  }
  return result;
}

uint64_t sub_17D5DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6575676573 && a2 == 0xE500000000000000 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000003140E0 || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6964646150706F74 && a2 == 0xEA0000000000676ELL || (sub_2E5020() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61506D6F74746F62 && a2 == 0xED0000676E696464)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2E5020();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

ValueMetadata *type metadata accessor for YearInReviewPageIntentImplementation()
{
  return &type metadata for YearInReviewPageIntentImplementation;
}

uint64_t sub_17D818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[45] = a3;
  v3[43] = a1;
  v3[44] = a2;
  uint64_t v4 = sub_2DE130();
  v3[46] = v4;
  v3[47] = *(void *)(v4 - 8);
  v3[48] = swift_task_alloc();
  uint64_t v5 = sub_2DE7F0();
  v3[49] = v5;
  v3[50] = *(void *)(v5 - 8);
  v3[51] = swift_task_alloc();
  uint64_t v6 = sub_2DED90();
  v3[52] = v6;
  v3[53] = *(void *)(v6 - 8);
  v3[54] = swift_task_alloc();
  uint64_t v7 = sub_63BAC(&qword_3CD8C0);
  int v8 = (void *)swift_task_alloc();
  v3[55] = v8;
  *int v8 = v3;
  v8[1] = sub_17D9F8;
  return BaseObjectGraph.inject<A>(_:)(v3 + 20, v7, v7);
}

uint64_t sub_17D9F8()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_17E8D8;
  }
  else {
    BOOL v2 = sub_17DB0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17DB0C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  sub_71044(v0 + 20, v1);
  uint64_t v6 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
  int v3 = (void *)swift_task_alloc();
  v0[57] = v3;
  *int v3 = v0;
  v3[1] = sub_17DC28;
  uint64_t v4 = v0[44];
  return v6(v0 + 38, v4, v1, v2);
}

uint64_t sub_17DC28()
{
  uint64_t v2 = (void *)*v1;
  v2[58] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_17E95C, 0, 0);
  }
  else
  {
    int v3 = (void *)swift_task_alloc();
    v2[59] = v3;
    *int v3 = v2;
    v3[1] = sub_17DDA8;
    uint64_t v4 = v2[54];
    uint64_t v5 = v2[52];
    return BaseObjectGraph.inject<A>(_:)(v4, v5, v5);
  }
}

uint64_t sub_17DDA8()
{
  uint64_t v2 = *v1;
  v2[60] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_17E9E8, 0, 0);
  }
  else
  {
    v2[30] = v2[38];
    uint64_t v3 = v2[39];
    uint64_t v4 = v2[40];
    v2[61] = v3;
    v2[62] = v4;
    uint64_t v5 = v2[41];
    v2[63] = v5;
    v2[31] = v3;
    v2[32] = v4;
    v2[33] = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v2[64] = (uint64_t)v6;
    *uint64_t v6 = v2;
    v6[1] = sub_17DF60;
    uint64_t v7 = v2[54];
    return sub_17EBC4((uint64_t)(v2 + 34), v2 + 30, v7);
  }
}

uint64_t sub_17DF60()
{
  *(void *)(*(void *)v1 + 520) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_17EA74;
  }
  else {
    uint64_t v2 = sub_17E0D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17E0D0()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[35];
  v0[66] = v2;
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[37];
  v0[67] = v3;
  v0[68] = v4;
  v0[38] = v1;
  v0[39] = v2;
  v0[40] = v3;
  v0[41] = v4;
  unint64_t v5 = sub_17FDB0();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[69] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_17E1A8;
  return BaseObjectGraph.inject<A>(_:)(v0 + 42, v5, v5);
}

uint64_t sub_17E1A8()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_17EB1C;
  }
  else
  {
    uint64_t v2 = sub_17E2E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17E2E4()
{
  uint64_t v1 = (void *)v0[42];
  v0[71] = v1;
  v0[2] = v0;
  v0[7] = v0 + 72;
  v0[3] = sub_17E3E4;
  uint64_t v2 = swift_continuation_init();
  v0[25] = _NSConcreteStackBlock;
  v0[26] = 0x40000000;
  v0[27] = sub_AB0B4;
  v0[28] = &unk_395E60;
  v0[29] = v2;
  [v1 isMangaStoreEnabled:v0 + 25];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_17E3E4()
{
  return _swift_task_switch(sub_17E4C4, 0, 0);
}

uint64_t sub_17E4C4()
{
  uint64_t v20 = v0[54];
  uint64_t v17 = (void *)v0[71];
  uint64_t v18 = v0[53];
  uint64_t v19 = v0[52];
  uint64_t v21 = v0[50];
  uint64_t v22 = v0[49];
  uint64_t v1 = v0[47];
  uint64_t v14 = v0[48];
  uint64_t v15 = v0[51];
  uint64_t v16 = v0[46];
  uint64_t v2 = (uint64_t *)v0[43];
  uint64_t v3 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = [v3 books];
  id v5 = [v4 userDefaults];

  NSString v6 = sub_2E43E0();
  [v5 BOOLForKey:v6];

  swift_retain();
  uint64_t v7 = sub_1B8934();
  sub_2DE7C0();
  sub_63BAC(&qword_3CD8D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2FEFE0;
  *(unsigned char *)(inited + 32) = 3;
  sub_2DE450();
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v14, enum case for AppAnalyticsAction.Type.reportYearInReviewViewEvent(_:), v16);
  *(void *)(inited + 64) = sub_2DE160();
  *(void *)(inited + 72) = sub_180378(&qword_3C75B8, (void (*)(uint64_t))&type metadata accessor for AppAnalyticsAction);
  sub_71088((uint64_t *)(inited + 40));
  sub_2DE140();
  unint64_t v9 = sub_63760(inited);
  swift_setDeallocating();
  sub_63BAC(&qword_3C6EE8);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  uint64_t v10 = v0[38];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v2 = v7;
  uint64_t v11 = (int *)type metadata accessor for YearInReviewPage();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))((char *)v2 + v11[5], v15, v22);
  *(uint64_t *)((char *)v2 + v11[6]) = v10;
  *(uint64_t *)((char *)v2 + v11[7]) = v9;
  (*(void (**)(uint64_t *, void, uint64_t, int *))(*((void *)v11 - 1) + 56))(v2, 0, 1, v11);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 20));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_17E8D8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17E95C()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17E9E8()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17EA74()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 20));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_17EB1C()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)(v0 + 20));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_17EBC4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = a3;
  uint64_t v5 = sub_2DEE30();
  *(void *)(v3 + 256) = v5;
  *(void *)(v3 + 264) = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  *(void *)(v3 + 272) = v6;
  *(void *)(v3 + 280) = v7;
  *(_OWORD *)(v3 + 288) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 304) = a2[3];
  return _swift_task_switch(sub_17EC9C, 0, 0);
}

uint64_t sub_17EC9C()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(v1 + 32);
    swift_bridgeObjectRetain();
    id v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_71044(v3, v3[3]);
      sub_2DF140();
      if (sub_2DF2D0())
      {
        sub_71044(v3, v3[3]);
        uint64_t v7 = sub_2DEC00();
        uint64_t v9 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_5E640(0, v5[2] + 1, 1, v5);
        }
        unint64_t v11 = v5[2];
        unint64_t v10 = v5[3];
        if (v11 >= v10 >> 1) {
          uint64_t v5 = sub_5E640((void *)(v10 > 1), v11 + 1, 1, v5);
        }
        _OWORD v5[2] = v11 + 1;
        uint64_t v6 = &v5[2 * v11];
      }
      else
      {
        sub_2DF140();
        if ((sub_2DF2D0() & 1) == 0) {
          goto LABEL_5;
        }
        sub_71044(v3, v3[3]);
        uint64_t v7 = sub_2DEC00();
        uint64_t v9 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v4 = sub_5E640(0, v4[2] + 1, 1, v4);
        }
        unint64_t v14 = v4[2];
        unint64_t v13 = v4[3];
        if (v14 >= v13 >> 1) {
          id v4 = sub_5E640((void *)(v13 > 1), v14 + 1, 1, v4);
        }
        _OWORD v4[2] = v14 + 1;
        uint64_t v6 = &v4[2 * v14];
      }
      v6[4] = v7;
      v6[5] = v9;
LABEL_5:
      v3 += 5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  id v4 = _swiftEmptyArrayStorage;
  uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_19:
  v0[39] = v4;
  v0[40] = v5;
  sub_63BAC(&qword_3CD8D8);
  uint64_t v15 = swift_allocObject();
  v0[41] = v15;
  *(_OWORD *)(v15 + 16) = xmmword_2FCE70;
  uint64_t v16 = (void *)BFMCatalogRequestRelationshipAuthors;
  uint64_t v17 = (void *)BFMCatalogRequestRelationshipGenres;
  *(void *)(v15 + 32) = BFMCatalogRequestRelationshipAuthors;
  *(void *)(v15 + 40) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v16;
  id v19 = v17;
  unint64_t v20 = sub_592C4((uint64_t)&off_391128);
  v0[42] = v20;
  sub_2DEE40();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[43] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_17EFB8;
  uint64_t v22 = v0[34];
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v5, v4, v15, 0, v20, 150, v22);
}

uint64_t sub_17EFB8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 272);
  uint64_t v5 = *(void *)(*v2 + 264);
  uint64_t v6 = *(void *)(*v2 + 256);
  *(void *)(v3 + 352) = a1;
  *(void *)(v3 + 360) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v7 = sub_17F5F0;
  }
  else {
    uint64_t v7 = sub_17F1AC;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_17F1AC()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 296);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    long long v33 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_2A4894(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = v1 + 32;
    do
    {
      sub_66310(v4, v0 + 72);
      sub_71044((void *)(v0 + 72), *(void *)(v0 + 96));
      *(void *)(v0 + 16) = sub_2DEC00();
      *(void *)(v0 + 24) = v5;
      sub_65CF4((long long *)(v0 + 72), v0 + 32);
      long long v33 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A4894(0, v3[2] + 1, 1);
        uint64_t v3 = v33;
      }
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1)
      {
        sub_2A4894(v6 > 1, v7 + 1, 1);
        uint64_t v3 = v33;
      }
      v3[2] = v7 + 1;
      uint64_t v8 = &v3[7 * v7];
      long long v9 = *(_OWORD *)(v0 + 16);
      long long v10 = *(_OWORD *)(v0 + 32);
      long long v11 = *(_OWORD *)(v0 + 48);
      v8[10] = *(void *)(v0 + 64);
      *((_OWORD *)v8 + 3) = v10;
      *((_OWORD *)v8 + 4) = v11;
      *((_OWORD *)v8 + 2) = v9;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  if (v3[2])
  {
    sub_63BAC(&qword_3C7158);
    uint64_t v12 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = *(void *)(v0 + 360);
  long long v33 = v12;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_17FDF0(v14, 1, &v33);
  if (v13)
  {
    return swift_unexpectedError();
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 352);
    uint64_t v18 = *(void *)(v0 + 296);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = v33;
    *(void *)(swift_task_alloc() + 16) = v0 + 232;
    sub_1801C0(v17, (void (*)(uint64_t, uint64_t, id))sub_1801B8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      unint64_t v20 = (void *)(*(void *)(v0 + 296) + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v21 = (char *)_swiftEmptyArrayStorage;
      do
      {
        sub_71044(v20, v20[3]);
        uint64_t v22 = sub_2DEC00();
        uint64_t v24 = *v16;
        if (*(void *)(*v16 + 16) && (unint64_t v25 = sub_5F740(v22, v23), (v26 & 1) != 0))
        {
          sub_66310(*(void *)(v24 + 56) + 40 * v25, v0 + 152);
        }
        else
        {
          *(void *)(v0 + 184) = 0;
          *(_OWORD *)(v0 + 152) = 0u;
          *(_OWORD *)(v0 + 168) = 0u;
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v0 + 176))
        {
          sub_65CF4((long long *)(v0 + 152), v0 + 112);
          sub_65CF4((long long *)(v0 + 112), v0 + 192);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v21 = sub_5E480(0, *((void *)v21 + 2) + 1, 1, v21);
          }
          unint64_t v28 = *((void *)v21 + 2);
          unint64_t v27 = *((void *)v21 + 3);
          if (v28 >= v27 >> 1) {
            uint64_t v21 = sub_5E480((char *)(v27 > 1), v28 + 1, 1, v21);
          }
          *((void *)v21 + 2) = v28 + 1;
          sub_65CF4((long long *)(v0 + 192), (uint64_t)&v21[40 * v28 + 32]);
        }
        else
        {
          sub_662B4(v0 + 152, &qword_3C8950);
        }
        v20 += 5;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v29 = *(void *)(v0 + 304);
    uint64_t v30 = *(void *)(v0 + 288);
    uint64_t v31 = *(void **)(v0 + 240);
    *uint64_t v31 = *(void *)(v0 + 280);
    v31[1] = v30;
    _OWORD v31[2] = v21;
    v31[3] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    long long v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
}

uint64_t sub_17F5F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17F668(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_63BAC(&qword_3CAA70);
  __chkstk_darwin(v8 - 8);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2DECF0();
  uint64_t v45 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC(&qword_3CAA50);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2DEAA0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2DF060();
  if (swift_dynamicCastClass())
  {
    uint64_t v46 = a2;
    uint64_t v19 = a4;
    uint64_t v20 = *a4;
    if (*(void *)(v20 + 16))
    {
      uint64_t v40 = v18;
      uint64_t v41 = a3;
      uint64_t v42 = v10;
      id v21 = a3;
      uint64_t v22 = v46;
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_5F740(a1, v22);
      if (v24)
      {
        id v39 = v21;
        sub_66310(*(void *)(v20 + 56) + 40 * v23, (uint64_t)&v47);
        swift_bridgeObjectRelease();
        a4 = v19;
        a3 = v41;
        uint64_t v10 = v42;
        if (*((void *)&v48 + 1))
        {
          sub_63BAC(&qword_3C6F68);
          int v25 = swift_dynamicCast();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v25 ^ 1u, 1, v15);
          int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
          a2 = v46;
          if (v26 != 1)
          {
            unint64_t v27 = v40;
            (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v40, v14, v15);
            *((void *)&v48 + 1) = v15;
            uint64_t v49 = sub_180378(&qword_3CAA58, (void (*)(uint64_t))&type metadata accessor for BookInfo);
            sub_71088((uint64_t *)&v47);
            sub_180378(&qword_3CD8E8, (void (*)(uint64_t))&type metadata accessor for BookInfo);
            swift_bridgeObjectRetain();
            sub_2DEBE0();
            sub_1737AC((uint64_t)&v47, a1, a2);

            return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v27, v15);
          }
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v49 = 0;
        long long v47 = 0u;
        long long v48 = 0u;
        swift_bridgeObjectRelease();
        a4 = v19;
        a3 = v41;
        uint64_t v10 = v42;
      }
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      id v29 = a3;
      a4 = v19;
    }
    sub_662B4((uint64_t)&v47, &qword_3C8950);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    a2 = v46;
LABEL_10:

    sub_662B4((uint64_t)v14, &qword_3CAA50);
  }
  sub_2DEAB0();
  uint64_t result = swift_dynamicCastClass();
  if (!result) {
    return result;
  }
  uint64_t v30 = *a4;
  if (*(void *)(v30 + 16))
  {
    id v31 = a3;
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_5F740(a1, a2);
    uint64_t v33 = v45;
    if (v34)
    {
      sub_66310(*(void *)(v30 + 56) + 40 * v32, (uint64_t)&v47);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
    id v35 = a3;
    uint64_t v33 = v45;
  }
  uint64_t v36 = (uint64_t)v44;
  if (*((void *)&v48 + 1))
  {
    sub_63BAC(&qword_3C6F68);
    int v37 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v36, v37 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1, v10) != 1)
    {
      uint64_t v38 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v43, v36, v10);
      *((void *)&v48 + 1) = v10;
      uint64_t v49 = sub_180378(&qword_3CAA78, (void (*)(uint64_t))&type metadata accessor for AudiobookInfo);
      sub_71088((uint64_t *)&v47);
      sub_180378(&qword_3CD8E0, (void (*)(uint64_t))&type metadata accessor for AudiobookInfo);
      swift_bridgeObjectRetain();
      sub_2DEBE0();
      sub_1737AC((uint64_t)&v47, a1, a2);

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v38, v10);
    }
  }
  else
  {
    sub_662B4((uint64_t)&v47, &qword_3C8950);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v36, 1, 1, v10);
  }

  return sub_662B4(v36, &qword_3CAA70);
}

uint64_t sub_17FD00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_6E3CC;
  return sub_17D818(a1, v6, a3);
}

unint64_t sub_17FDB0()
{
  unint64_t result = qword_3C7E70;
  if (!qword_3C7E70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3C7E70);
  }
  return result;
}

uint64_t sub_17FDF0(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1803C0(a1 + 32, (uint64_t)&v44);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_65CF4(v46, (uint64_t)v41);
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_5F740(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_62F10();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    id v21 = (uint64_t *)(v20[6] + 16 * v11);
    *id v21 = v7;
    v21[1] = v8;
    sub_65CF4(v41, v20[7] + 40 * v11);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 88; ; i += 56)
    {
      sub_1803C0(i, (uint64_t)&v44);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_65CF4(v46, (uint64_t)v41);
      id v29 = (void *)*a3;
      unint64_t v30 = sub_5F740(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_18A02C(v34, 1);
        unint64_t v30 = sub_5F740(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      int v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      uint64_t *v38 = v27;
      v38[1] = v28;
      sub_65CF4(v41, v37[7] + 40 * v30);
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      uint64_t v37[2] = v40;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_18A02C(v14, a2 & 1);
  unint64_t v16 = sub_5F740(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = swift_allocError();
    swift_willThrow();
    uint64_t v47 = v19;
    swift_errorRetain();
    sub_63BAC((uint64_t *)&unk_3C9D00);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2E50E0();
  __break(1u);
LABEL_26:
  sub_2E4C50(30);
  v48._object = (void *)0x8000000000318060;
  v48._countAndFlagsBits = 0xD00000000000001BLL;
  sub_2E44C0(v48);
  sub_2E4DA0();
  v49._countAndFlagsBits = 39;
  v49._object = (void *)0xE100000000000000;
  sub_2E44C0(v49);
  uint64_t result = sub_2E4DC0();
  __break(1u);
  return result;
}

uint64_t sub_1801B8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_17F668(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1801C0(uint64_t a1, void (*a2)(uint64_t, uint64_t, id))
{
  uint64_t v20 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v7) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v20 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v20 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v20 + 8 * v9);
        if (!v18)
        {
          int64_t v9 = v17 + 3;
          if (v17 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v20 + 8 * v9);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    char v15 = *(void **)(*(void *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v16 = v15;
    a2(v13, v14, v16);

    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v7) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v20 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_180378(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1803C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3CD8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t *sub_180428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesRoomHeaderComponentModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  int64_t v7 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v6)
  {
    int64_t v17 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_2A42BC(0, v6, 0);
    int64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_18EF58(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderComponentModel);
      int64_t v17 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_2A42BC(v10 > 1, v11 + 1, 1);
        int64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_18EF10((unint64_t *)&qword_3C80B0, (void (*)(uint64_t))type metadata accessor for SeriesRoomHeaderComponentModel);
      uint64_t v12 = sub_71088((uint64_t *)&v14);
      sub_18EF58((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderComponentModel);
      v7[2] = v11 + 1;
      sub_65CF4(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_18EEB0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SeriesRoomHeaderComponentModel);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_18062C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2A4690(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_63BAC(&qword_3CDB18);
      sub_63BAC(&qword_3CDB20);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2A4690(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_2A4690(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      int64_t v6 = (char *)&_swiftEmptyArrayStorage[2 * v5];
      v6[32] = v8;
      *((void *)v6 + 5) = v9;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_180778(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2A4784(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2A4784(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_2A4784(v4 > 1, v5 + 1, 1);
      }
      v3 += 16;
      _swiftEmptyArrayStorage[2] = v5 + 1;
      int64_t v6 = &_swiftEmptyArrayStorage[5 * v5];
      v6[8] = v10;
      *((_OWORD *)v6 + 2) = v8;
      *((_OWORD *)v6 + 3) = v9;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1808A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_2A42BC(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_66310(v4, (uint64_t)v16);
      sub_63BAC(&qword_3CDB00);
      sub_63BAC(&qword_3C6F40);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A42BC(0, v2[2] + 1, 1);
        uint64_t v2 = v20;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1) {
        sub_2A42BC(v5 > 1, v6 + 1, 1);
      }
      uint64_t v7 = v18;
      uint64_t v8 = v19;
      uint64_t v9 = sub_8FA30((uint64_t)v17, v18);
      __n128 v10 = __chkstk_darwin(v9);
      uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *, __n128))(v13 + 16))(v12, v10);
      sub_18B6F4(v6, (uint64_t)v12, (uint64_t *)&v20, v7, v8);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v17);
      uint64_t v2 = v20;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_180A8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    __n128 v10 = _swiftEmptyArrayStorage;
    sub_2A4844(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_15B034(v4, (uint64_t)v8);
      sub_63BAC(&qword_3C6EB0);
      sub_63BAC(&qword_3CDAE8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A4844(0, v2[2] + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_2A4844(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      v2[2] = v6 + 1;
      sub_71900((uint64_t)v9, (uint64_t)&v2[6 * v6 + 4], &qword_3CDAE8);
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_180BCC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    __n128 v10 = _swiftEmptyArrayStorage;
    sub_2A4864(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_66310(v4, (uint64_t)v8);
      sub_63BAC(&qword_3C7120);
      sub_63BAC(&qword_3CDB30);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A4864(0, v2[2] + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_2A4864(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      v2[2] = v6 + 1;
      sub_65CF4(&v9, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_180D08(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2A48D4(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_63BAC(&qword_3CDB08);
      sub_63BAC(&qword_3C7C58);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2A48D4(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_2A48D4(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_180E4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListItemComponentModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    int64_t v17 = _swiftEmptyArrayStorage;
    sub_2A42BC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_18EF58(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ListItemComponentModel);
      int64_t v17 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_2A42BC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_18EF10(&qword_3C8078, (void (*)(uint64_t))type metadata accessor for ListItemComponentModel);
      uint64_t v12 = sub_71088((uint64_t *)&v14);
      sub_18EF58((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ListItemComponentModel);
      v7[2] = v11 + 1;
      sub_65CF4(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_18EEB0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ListItemComponentModel);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_181050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unsigned __int8 *a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  uint64_t v65 = a8;
  uint64_t v66 = a2;
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v53 = a3;
  int v61 = a18;
  uint64_t v59 = a15;
  uint64_t v60 = a16;
  uint64_t v62 = a17;
  uint64_t v63 = a14;
  uint64_t v58 = a13;
  int v57 = a12;
  uint64_t v64 = a10;
  uint64_t v22 = sub_2DDEE0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v51) = *a4;
  int v54 = *a11;
  int v26 = (int *)type metadata accessor for Page();
  uint64_t v27 = (uint64_t *)((char *)a9 + v26[22]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = (char *)a9 + v26[23];
  *((void *)v28 + 4) = 0;
  *(_OWORD *)uint64_t v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  uint64_t v67 = sub_2DE7E0();
  uint64_t v68 = v29;
  v69._countAndFlagsBits = 45;
  v69._object = (void *)0xE100000000000000;
  sub_2E44C0(v69);
  uint64_t v30 = sub_2DE7D0();
  if (v31)
  {
    uint64_t v32 = v30;
    BOOL v33 = v31;
  }
  else
  {
    sub_2DDED0();
    uint64_t v32 = sub_2DDEB0();
    BOOL v33 = v34;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  v70._countAndFlagsBits = v32;
  v70._object = v33;
  sub_2E44C0(v70);
  swift_bridgeObjectRelease();
  uint64_t v35 = v68;
  *a9 = v67;
  a9[1] = v35;
  char v36 = (char *)a9 + v26[15];
  uint64_t v52 = sub_2DE7F0();
  uint64_t v37 = *(void *)(v52 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, a1, v52);
  *(uint64_t *)((char *)a9 + v26[16]) = v53;
  *((unsigned char *)a9 + v26[12]) = v51;
  uint64_t v51 = v26[13];
  *(uint64_t *)((char *)a9 + v51) = a5;
  uint64_t v38 = (char *)a9 + v26[17];
  uint64_t v39 = sub_2E38D0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v53 = a1;
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v38, v66, v39);
  uint64_t v42 = (uint64_t *)((char *)a9 + v26[14]);
  uint64_t v43 = v56;
  *uint64_t v42 = v55;
  v42[1] = v43;
  uint64_t v44 = v65;
  sub_66444(v65, (uint64_t)a9 + v26[5], &qword_3C97E8);
  uint64_t v45 = v64;
  sub_66444(v64, (uint64_t)a9 + v26[6], &qword_3C97E8);
  *((unsigned char *)a9 + v26[7]) = v54;
  *((unsigned char *)a9 + v26[8]) = v57 & 1;
  *(uint64_t *)((char *)a9 + v26[19]) = v58;
  uint64_t v46 = v63;
  sub_66444(v63, (uint64_t)a9 + v26[9], &qword_3CB0B8);
  *(uint64_t *)((char *)a9 + v26[10]) = v59;
  *(uint64_t *)((char *)a9 + v26[11]) = v60;
  *(uint64_t *)((char *)a9 + v26[20]) = v62;
  *((unsigned char *)a9 + v26[21]) = 0;
  *((unsigned char *)a9 + v26[18]) = v61 & 1;
  swift_retain();
  uint64_t v47 = swift_bridgeObjectRetain();
  Swift::String v48 = sub_110F84(v47);
  swift_release();
  swift_bridgeObjectRelease_n();
  *(uint64_t *)((char *)a9 + v51) = (uint64_t)v48;
  sub_662B4(v46, &qword_3CB0B8);
  sub_662B4(v45, &qword_3C97E8);
  sub_662B4(v44, &qword_3C97E8);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v66, v39);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v53, v52);
}

uint64_t Page.appendingShelves(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = sub_18EF58(v3, a2, (uint64_t (*)(void))type metadata accessor for Page);
  if (v5)
  {
    uint64_t v7 = (void *)(a2 + *(int *)(type metadata accessor for Page() + 52));
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1112BC(v8);
    uint64_t v9 = swift_bridgeObjectRetain();
    unint64_t v10 = sub_110F84(v9);
    uint64_t result = swift_bridgeObjectRelease_n();
    void *v7 = v10;
  }
  return result;
}

uint64_t type metadata accessor for Page()
{
  uint64_t result = qword_3CDA48;
  if (!qword_3CDA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Page.updatingShelves(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for Shelf();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (void *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void *)(a1 + 16);
  if (!v36) {
    return sub_18EF58(v2, a2, (uint64_t (*)(void))type metadata accessor for Page);
  }
  uint64_t v33 = a2;
  uint64_t v31 = type metadata accessor for Page();
  uint64_t v32 = v2;
  unint64_t v10 = *(void *)(v2 + *(int *)(v31 + 52));
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_185590(v11);
  swift_bridgeObjectRelease();
  if (v12[2])
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v13 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v37 = v13;
  sub_18C1FC(v12, 1, &v37);
  v30[1] = v3;
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = v37;
    unint64_t v35 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v16 = a1 + v35;
    uint64_t v17 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    uint64_t v34 = a1;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v19 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      sub_18EF58(v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
      if (!v15[2]) {
        goto LABEL_18;
      }
      uint64_t v20 = *v9;
      uint64_t v21 = v9[1];
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_5F740(v20, v21);
      if ((v23 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      unint64_t v24 = *(void *)(v15[7] + 8 * v22);
      swift_bridgeObjectRelease();
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v24 & 0x8000000000000000) != 0) {
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v10 = sub_18B6A4(v10);
        if ((v24 & 0x8000000000000000) != 0)
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          swift_release();
LABEL_20:
          swift_bridgeObjectRelease();
          sub_18B7D8();
          swift_allocError();
          *uint64_t v25 = 0;
          swift_willThrow();
          return sub_18EEB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
        }
      }
      if (v24 >= *(void *)(v10 + 16)) {
        goto LABEL_22;
      }
      sub_18B82C((uint64_t)v9, v10 + v35 + v24 * v17);
      v16 += v17;
      if (v19 == v36)
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v26 = v33;
        sub_18EF58(v32, v33, (uint64_t (*)(void))type metadata accessor for Page);
        uint64_t v27 = *(int *)(v31 + 52);
        swift_bridgeObjectRelease();
        *(void *)(v26 + v27) = v10;
        uint64_t v28 = swift_bridgeObjectRetain();
        uint64_t v29 = sub_110F84(v28);
        uint64_t result = swift_bridgeObjectRelease_n();
        *(void *)(v26 + v27) = v29;
        return result;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t Page.removingShelves(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = sub_18EF58(v3, a2, (uint64_t (*)(void))type metadata accessor for Page);
  if (v6)
  {
    uint64_t v8 = (unint64_t *)(a2 + *(int *)(type metadata accessor for Page() + 52));
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_18B890(v8, a1);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v10 = *(void *)(*v8 + 16);
    if (v10 < v9) {
      __break(1u);
    }
    else {
      return sub_18BDC8(v9, v10);
    }
  }
  return result;
}

unint64_t Page.removingShelves(after:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for Page() + 52));
  unint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return sub_18EF58(v3, a3, (uint64_t (*)(void))type metadata accessor for Page);
  }
  unint64_t v9 = 0;
  uint64_t v10 = *(void *)(type metadata accessor for Shelf() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = (void *)(((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v7 + 8);
  while (1)
  {
    BOOL v13 = *(v12 - 1) == a1 && *v12 == a2;
    if (v13 || (sub_2E5020() & 1) != 0) {
      break;
    }
    uint64_t v12 = (void *)((char *)v12 + v11);
    if (v8 == ++v9) {
      return sub_18EF58(v3, a3, (uint64_t (*)(void))type metadata accessor for Page);
    }
  }
  unint64_t v14 = v8 - v9;
  if (v8 <= v9) {
    return sub_18EF58(v3, a3, (uint64_t (*)(void))type metadata accessor for Page);
  }
  sub_18EF58(v3, a3, (uint64_t (*)(void))type metadata accessor for Page);
  unint64_t result = v14 - 1;
  if (!__OFSUB__(v14, 1)) {
    return sub_188518(result);
  }
  __break(1u);
  return result;
}

uint64_t Page.appendingItems(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v141 = sub_2E0590();
  uint64_t v146 = *(char **)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v111 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_2E0310();
  id v145 = *(void (***)(char *, uint64_t))(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v104 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_63BAC(&qword_3CD900);
  __chkstk_darwin(v117);
  uint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CBD28);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v110 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v97 - v15;
  __chkstk_darwin(v14);
  uint64_t v121 = (uint64_t)&v97 - v17;
  uint64_t v106 = sub_63BAC(&qword_3CD908);
  uint64_t v18 = __chkstk_darwin(v106);
  uint64_t v105 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v122 = (char *)&v97 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v116 = (char *)&v97 - v23;
  __chkstk_darwin(v22);
  uint64_t v132 = (char *)&v97 - v24;
  uint64_t v134 = type metadata accessor for Shelf();
  uint64_t v131 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_63BAC(&qword_3CD910);
  uint64_t v135 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v115 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v130 = (char *)&v97 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v97 - v32;
  uint64_t v34 = type metadata accessor for Page();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v124 = (uint64_t)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = *(void *)(a1 + 16);
  if (!v128) {
    return sub_18EF58(v4, a2, (uint64_t (*)(void))type metadata accessor for Page);
  }
  uint64_t v148 = v26;
  uint64_t v108 = v16;
  uint64_t v120 = v35;
  uint64_t v127 = *(int *)(v35 + 52);
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_185590(v37);
  swift_bridgeObjectRelease();
  if (v38[2])
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v39 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v39 = &_swiftEmptyDictionarySingleton;
  }
  int v123 = v10;
  uint64_t v98 = a2;
  uint64_t v149 = (uint64_t)v39;
  sub_18C1FC(v38, 1, &v149);
  uint64_t v136 = v3;
  if (v3) {
    goto LABEL_48;
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v149;
  sub_18EF58(v4, v124, (uint64_t (*)(void))type metadata accessor for Page);
  uint64_t v129 = a1 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
  uint64_t v147 = v135 + 16;
  uint64_t v140 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  uint64_t v119 = (void (**)(uint64_t, uint64_t))(v146 + 8);
  uint64_t v113 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 7);
  uint64_t v42 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 6);
  int v100 = (void (**)(char *, uint64_t, uint64_t))(v145 + 4);
  uint64_t v107 = (void (**)(uint64_t, uint64_t))(v145 + 1);
  id v145 = (void (**)(char *, uint64_t))(v135 + 8);
  uint64_t v109 = (void (**)(char *, uint64_t, uint64_t))(v146 + 32);
  uint64_t v99 = a1;
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  *(void *)&long long v44 = 136315138;
  long long v103 = v44;
  uint64_t v102 = (char *)&type metadata for Any + 8;
  uint64_t v45 = v141;
  uint64_t v114 = v27;
  uint64_t v133 = v33;
  uint64_t v125 = v4;
  uint64_t v126 = v41;
  uint64_t v112 = v42;
  while (!__OFADD__(v43, 1))
  {
    uint64_t v144 = v43 + 1;
    uint64_t v50 = v129 + *(void *)(v135 + 72) * v43;
    uint64_t v146 = *(char **)(v135 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v146)(v33, v50, v27);
    uint64_t v51 = sub_2E0AB0();
    if (!*(void *)(v41 + 16) || (unint64_t v53 = sub_5F740(v51, v52), (v54 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_18B7D8();
      swift_allocError();
      *uint64_t v96 = 0;
      swift_willThrow();
      (*v145)(v33, v27);
      return sub_18EEB0(v124, (uint64_t (*)(void))type metadata accessor for Page);
    }
    unint64_t v55 = *(void *)(*(void *)(v41 + 56) + 8 * v53);
    swift_bridgeObjectRelease();
    if ((v55 & 0x8000000000000000) != 0) {
      goto LABEL_45;
    }
    uint64_t v56 = *(void *)(v4 + v127);
    if (v55 >= *(void *)(v56 + 16)) {
      goto LABEL_46;
    }
    uint64_t v142 = v43;
    unint64_t v138 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    uint64_t v137 = *(void *)(v131 + 72) * v55;
    sub_18EF58(v56 + v138 + v137, (uint64_t)v148, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v57 = (uint64_t)v132;
    sub_2E0A80();
    uint64_t v58 = *v140;
    unsigned int v59 = (*v140)(v57, 1, v45);
    sub_662B4(v57, &qword_3CD908);
    uint64_t v60 = v130;
    ((void (*)(char *, char *, uint64_t))v146)(v130, v33, v27);
    uint64_t v139 = v58;
    if (v59 == 1)
    {
      unint64_t v143 = *v145;
      v143(v60, v27);
      uint64_t v61 = (uint64_t)v122;
    }
    else
    {
      uint64_t v66 = (uint64_t)v116;
      sub_2E0A80();
      if (v58(v66, 1, v45) == 1)
      {
        sub_662B4(v66, &qword_3CD908);
        uint64_t v67 = 1;
        uint64_t v68 = v134;
        uint64_t v69 = v121;
      }
      else
      {
        uint64_t v69 = v121;
        sub_2E0580();
        (*v119)(v66, v45);
        uint64_t v67 = 0;
        uint64_t v68 = v134;
      }
      uint64_t v76 = v112;
      uint64_t v77 = v118;
      (*v113)(v69, v67, 1, v118);
      uint64_t v78 = (uint64_t)&v148[*(int *)(v68 + 68)];
      uint64_t v79 = (uint64_t)v123;
      uint64_t v80 = (uint64_t)&v123[*(int *)(v117 + 48)];
      sub_66444(v69, (uint64_t)v123, &qword_3CBD28);
      sub_66444(v78, v80, &qword_3CBD28);
      unsigned int v81 = *v76;
      if ((*v76)(v79, 1, v77) == 1)
      {
        sub_662B4(v69, &qword_3CBD28);
        uint64_t v27 = v114;
        unint64_t v143 = *v145;
        v143(v60, v114);
        if (v81(v80, 1, v77) != 1) {
          goto LABEL_34;
        }
        sub_662B4((uint64_t)v123, &qword_3CBD28);
        uint64_t v61 = (uint64_t)v122;
        uint64_t v33 = v133;
      }
      else
      {
        uint64_t v82 = (uint64_t)v108;
        sub_66444(v79, (uint64_t)v108, &qword_3CBD28);
        if (v81(v80, 1, v77) == 1)
        {
          sub_662B4(v121, &qword_3CBD28);
          uint64_t v27 = v114;
          unint64_t v143 = *v145;
          v143(v60, v114);
          (*v107)(v82, v77);
LABEL_34:
          uint64_t v33 = v133;
          sub_662B4((uint64_t)v123, &qword_3CD900);
LABEL_35:
          if (qword_3C65E8 != -1) {
            swift_once();
          }
          uint64_t v83 = sub_2DF850();
          sub_58BA0(v83, (uint64_t)qword_3CD288);
          uint64_t v84 = v115;
          ((void (*)(char *, char *, uint64_t))v146)(v115, v33, v27);
          uint64_t v85 = sub_2DF830();
          os_log_type_t v86 = sub_2E48F0();
          if (os_log_type_enabled(v85, v86))
          {
            uint64_t v87 = swift_slowAlloc();
            uint64_t v146 = (char *)swift_slowAlloc();
            uint64_t v149 = (uint64_t)v146;
            *(_DWORD *)uint64_t v87 = v103;
            uint64_t v88 = (uint64_t)v105;
            sub_2E0A80();
            uint64_t v89 = sub_2E4B00();
            unint64_t v91 = v90;
            sub_662B4(v88, &qword_3CD908);
            *(void *)(v87 + 4) = sub_5F150(v89, v91, &v149);
            swift_bridgeObjectRelease();
            uint64_t v46 = v143;
            v143(v115, v27);
            _os_log_impl(&dword_0, v85, v86, "Skipping this pagination update because it has already been handled: %s", (uint8_t *)v87, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v46 = v143;
            v143(v84, v27);
          }
          v46(v33, v27);
          uint64_t v4 = v125;
          uint64_t v47 = (uint64_t)v148;
          goto LABEL_10;
        }
        unsigned __int8 v92 = v104;
        (*v100)(v104, v80, v77);
        sub_18EF10(&qword_3CD918, (void (*)(uint64_t))&type metadata accessor for PaginationInfo);
        int v101 = sub_2E43D0();
        uint64_t v93 = *v107;
        (*v107)((uint64_t)v92, v77);
        sub_662B4(v121, &qword_3CBD28);
        uint64_t v94 = v114;
        unint64_t v143 = *v145;
        v143(v60, v114);
        v93(v82, v77);
        uint64_t v95 = v79;
        uint64_t v27 = v94;
        sub_662B4(v95, &qword_3CBD28);
        uint64_t v61 = (uint64_t)v122;
        uint64_t v33 = v133;
        if ((v101 & 1) == 0) {
          goto LABEL_35;
        }
      }
    }
    uint64_t v62 = sub_2E0AA0();
    uint64_t v47 = (uint64_t)v148;
    uint64_t v63 = v136;
    sub_2035F8();
    uint64_t v136 = v63;
    if (v63)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v143(v33, v27);
      swift_bridgeObjectRelease();
      sub_18EEB0(v124, (uint64_t (*)(void))type metadata accessor for Page);
      return sub_18EEB0(v47, (uint64_t (*)(void))type metadata accessor for Shelf);
    }
    uint64_t v64 = v134;
    sub_1114A8(v62);
    sub_2E0A80();
    uint64_t v65 = v141;
    if (v139(v61, 1, v141) == 1)
    {
      sub_662B4(v61, &qword_3CD908);
    }
    else
    {
      Swift::String v70 = v111;
      (*v109)(v111, v61, v65);
      uint64_t v71 = (uint64_t)v110;
      sub_2E0560();
      (*v119)((uint64_t)v70, v65);
      sub_18C014(v71, v47 + *(int *)(v64 + 68));
    }
    uint64_t v4 = v125;
    uint64_t v72 = *(int *)(v120 + 52);
    uint64_t v73 = v124;
    unint64_t v74 = *(void *)(v124 + v72);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v73 + v72) = v74;
    uint64_t v33 = v133;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v74 = sub_18B6A4(v74);
      *(void *)(v124 + v72) = v74;
    }
    if (v55 >= *(void *)(v74 + 16)) {
      goto LABEL_47;
    }
    sub_18BFB0(v47, v74 + v138 + v137);
    v143(v33, v27);
LABEL_10:
    uint64_t v48 = v144;
    sub_18EEB0(v47, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v43 = v142 + 1;
    BOOL v49 = v48 == v128;
    uint64_t v45 = v141;
    uint64_t v41 = v126;
    if (v49)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_18EFC0(v124, v98, (uint64_t (*)(void))type metadata accessor for Page);
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t Page.removingItems(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v80 = type metadata accessor for Shelf();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CD920);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Page();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a1;
  if (!*(void *)(a1 + 16)) {
    return sub_18EF58(v4, a2, (uint64_t (*)(void))type metadata accessor for Page);
  }
  uint64_t v82 = *(void *)(a1 + 16);
  uint64_t v65 = a2;
  uint64_t v70 = v14;
  uint64_t v73 = *(int *)(v14 + 52);
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_185590(v17);
  swift_bridgeObjectRelease();
  if (v18[2])
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v19 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v19 = &_swiftEmptyDictionarySingleton;
  }
  *(void *)&long long v94 = v19;
  sub_18C1FC(v18, 1, &v94);
  uint64_t v64 = v3;
  if (v3) {
    goto LABEL_78;
  }
  swift_bridgeObjectRelease();
  uint64_t v81 = v94;
  sub_18EF58(v4, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Page);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v21 = v10 + 16;
  uint64_t v77 = v22;
  uint64_t v76 = v66 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
  uint64_t v75 = *(void *)(v21 + 56);
  uint64_t v78 = v21;
  unint64_t v74 = (void (**)(char *, uint64_t))(v21 - 8);
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v24 = v82;
  uint64_t v69 = v9;
  uint64_t v68 = v4;
  uint64_t v67 = v16;
  uint64_t v72 = v12;
  uint64_t v71 = v8;
LABEL_8:
  if (v23 == v24) {
    goto LABEL_72;
  }
  v77(v12, v76 + v75 * v23, v9);
  uint64_t v25 = sub_2E0AD0();
  uint64_t v27 = v81;
  if (!*(void *)(v81 + 16) || (unint64_t v28 = sub_5F740(v25, v26), (v29 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_18B7D8();
    swift_allocError();
    *uint64_t v63 = 0;
    swift_willThrow();
    (*v74)(v12, v9);
    return sub_18EEB0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Page);
  }
  unint64_t v30 = *(void *)(*(void *)(v27 + 56) + 8 * v28);
  swift_bridgeObjectRelease();
  if ((v30 & 0x8000000000000000) != 0) {
    goto LABEL_73;
  }
  uint64_t v31 = *(void *)(v4 + v73);
  if (v30 < *(void *)(v31 + 16))
  {
    uint64_t v88 = v23;
    unint64_t v86 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v87 = v30;
    uint64_t v85 = *(void *)(v79 + 72) * v30;
    sub_18EF58(v31 + v86 + v85, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v32 = sub_2E0AC0();
    uint64_t v33 = sub_180778(v32);
    swift_bridgeObjectRelease();
    unint64_t v91 = (char **)&v8[*(int *)(v80 + 64)];
    uint64_t v34 = *v91;
    unint64_t v35 = *((void *)*v91 + 2);
    if (!v35)
    {
      unint64_t v45 = 0;
      goto LABEL_56;
    }
    uint64_t v36 = v33[2];
    uint64_t v37 = v34 + 32;
    uint64_t v89 = v33 + 9;
    unint64_t v90 = v33 + 4;
    uint64_t v83 = v34;
    swift_bridgeObjectRetain();
    unint64_t v38 = 0;
    uint64_t v84 = v33 + 14;
    while (1)
    {
      sub_66310((uint64_t)&v37[40 * v38], (uint64_t)&v94);
      sub_71044(&v94, v95);
      sub_2E39D0();
      if (v36)
      {
        sub_65D0C((uint64_t)v90, (uint64_t)v92);
        swift_bridgeObjectRetain();
        char v39 = sub_2E4C00();
        sub_65D68((uint64_t)v92);
        if (v39) {
          goto LABEL_27;
        }
        if (v36 != 1)
        {
          sub_65D0C((uint64_t)v89, (uint64_t)v92);
          char v40 = sub_2E4C00();
          sub_65D68((uint64_t)v92);
          if (v40)
          {
LABEL_27:
            swift_bridgeObjectRelease();
            sub_65D68((uint64_t)&v93);
            _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v94);
            swift_bridgeObjectRelease();
            unint64_t v45 = v38 + 1;
            if (__OFADD__(v38, 1)) {
              goto LABEL_77;
            }
            uint64_t v46 = *v91;
            unint64_t v47 = *((void *)*v91 + 2);
            unint64_t v35 = v38;
            if (v45 != v47)
            {
              while (2)
              {
                if (v45 >= v47) {
                  goto LABEL_64;
                }
                sub_66310((uint64_t)&v46[40 * v45 + 32], (uint64_t)&v94);
                sub_71044(&v94, v95);
                sub_2E39D0();
                sub_65D0C((uint64_t)v90, (uint64_t)v92);
                swift_bridgeObjectRetain();
                char v48 = sub_2E4C00();
                sub_65D68((uint64_t)v92);
                if (v48)
                {
LABEL_31:
                  swift_bridgeObjectRelease();
                  sub_65D68((uint64_t)&v93);
                  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v94);
                }
                else
                {
                  if (v36 != 1)
                  {
                    sub_65D0C((uint64_t)v89, (uint64_t)v92);
                    char v55 = sub_2E4C00();
                    sub_65D68((uint64_t)v92);
                    if (v55) {
                      goto LABEL_31;
                    }
                    if (v36 != 2)
                    {
                      uint64_t v56 = (uint64_t)v84;
                      uint64_t v57 = 2;
                      do
                      {
                        sub_65D0C(v56, (uint64_t)v92);
                        uint64_t v58 = v57 + 1;
                        if (__OFADD__(v57, 1)) {
                          goto LABEL_63;
                        }
                        char v59 = sub_2E4C00();
                        sub_65D68((uint64_t)v92);
                        if (v59) {
                          goto LABEL_31;
                        }
                        ++v57;
                        v56 += 40;
                      }
                      while (v58 != v36);
                    }
                  }
                  swift_bridgeObjectRelease();
                  sub_65D68((uint64_t)&v93);
                  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v94);
                  if (v35 != v45)
                  {
                    if ((v35 & 0x8000000000000000) != 0) {
                      goto LABEL_67;
                    }
                    BOOL v49 = *v91;
                    unint64_t v50 = *((void *)*v91 + 2);
                    if (v35 >= v50) {
                      goto LABEL_68;
                    }
                    sub_66310((uint64_t)&v49[40 * v35 + 32], (uint64_t)&v94);
                    if (v45 >= v50) {
                      goto LABEL_69;
                    }
                    sub_66310((uint64_t)&v49[40 * v45 + 32], (uint64_t)&v93);
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *unint64_t v91 = v49;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      BOOL v49 = sub_18B6B8((uint64_t)v49);
                      *unint64_t v91 = v49;
                    }
                    if (v35 >= *((void *)v49 + 2)) {
                      goto LABEL_70;
                    }
                    uint64_t v52 = (uint64_t)&v49[40 * v35 + 32];
                    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v52);
                    sub_65CF4(&v93, v52);
                    if (v45 >= *((void *)*v91 + 2)) {
                      goto LABEL_71;
                    }
                    uint64_t v53 = (uint64_t)&(*v91)[40 * v45 + 32];
                    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v53);
                    sub_65CF4(&v94, v53);
                  }
                  BOOL v54 = __OFADD__(v35++, 1);
                  if (v54) {
                    goto LABEL_66;
                  }
                }
                BOOL v54 = __OFADD__(v45++, 1);
                if (v54) {
                  goto LABEL_65;
                }
                uint64_t v46 = *v91;
                unint64_t v47 = *((void *)*v91 + 2);
                if (v45 == v47) {
                  break;
                }
                continue;
              }
            }
LABEL_55:
            uint64_t v9 = v69;
            uint64_t v4 = v68;
            uint64_t v16 = v67;
            if ((uint64_t)v45 < (uint64_t)v35) {
              goto LABEL_75;
            }
LABEL_56:
            sub_18C07C(v35, v45);
            swift_bridgeObjectRelease();
            uint64_t v60 = *(int *)(v70 + 52);
            unint64_t v61 = *(void *)&v16[v60];
            char v62 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v16[v60] = v61;
            if ((v62 & 1) == 0)
            {
              unint64_t v61 = sub_18B6A4(v61);
              *(void *)&v16[v60] = v61;
            }
            uint64_t v12 = v72;
            uint64_t v8 = v71;
            if (v87 >= *(void *)(v61 + 16)) {
              goto LABEL_76;
            }
            uint64_t v23 = v88 + 1;
            sub_18BFB0((uint64_t)v71, v61 + v86 + v85);
            sub_18EEB0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Shelf);
            (*v74)(v12, v9);
            uint64_t v24 = v82;
            if (v23 == v82)
            {
              swift_release();
              swift_bridgeObjectRelease();
              return sub_18EFC0((uint64_t)v16, v65, (uint64_t (*)(void))type metadata accessor for Page);
            }
            goto LABEL_8;
          }
          if (v36 != 2)
          {
            uint64_t v41 = (uint64_t)v84;
            uint64_t v42 = 2;
            while (1)
            {
              sub_65D0C(v41, (uint64_t)v92);
              uint64_t v43 = v42 + 1;
              if (__OFADD__(v42, 1)) {
                break;
              }
              char v44 = sub_2E4C00();
              sub_65D68((uint64_t)v92);
              if (v44) {
                goto LABEL_27;
              }
              ++v42;
              v41 += 40;
              if (v43 == v36) {
                goto LABEL_15;
              }
            }
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            break;
          }
        }
LABEL_15:
        swift_bridgeObjectRelease();
      }
      sub_65D68((uint64_t)&v93);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v94);
      if (++v38 == v35)
      {
        swift_bridgeObjectRelease();
        unint64_t v45 = *((void *)*v91 + 2);
        goto LABEL_55;
      }
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t Page.updatingItems(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v152 = a2;
  uint64_t v181 = sub_2E0590();
  char v179 = *(void (**)(char *, uint64_t))(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v149 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E0310();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_63BAC(&qword_3CD900);
  __chkstk_darwin(v158);
  uint64_t v165 = (uint64_t)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC(&qword_3CBD28);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v151 = (uint64_t)&v138 - v16;
  __chkstk_darwin(v15);
  uint64_t v164 = (uint64_t)&v138 - v17;
  uint64_t v18 = sub_63BAC(&qword_3CD908);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v148 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v156 = (char *)&v138 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v157 = (char *)&v138 - v24;
  __chkstk_darwin(v23);
  uint64_t v173 = (char *)&v138 - v25;
  uint64_t v180 = type metadata accessor for Shelf();
  uint64_t v172 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  int v188 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_63BAC(&qword_3CD910);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v159 = (char *)&v138 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v175 = (char *)&v138 - v32;
  __chkstk_darwin(v31);
  uint64_t v187 = (char *)&v138 - v33;
  uint64_t v34 = type metadata accessor for Page();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v177 = (uint64_t)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = a1;
  if (!*(void *)(a1 + 16)) {
    return sub_18EF58(v3, v152, (uint64_t (*)(void))type metadata accessor for Page);
  }
  uint64_t v171 = *(void *)(a1 + 16);
  uint64_t v143 = v18;
  id v145 = v14;
  uint64_t v140 = v9;
  uint64_t v155 = v6;
  uint64_t v147 = v35;
  uint64_t v166 = *(int *)(v35 + 52);
  uint64_t v37 = v3;
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v39 = v186;
  char v40 = sub_185590(v38);
  swift_bridgeObjectRelease();
  uint64_t v41 = &_swiftEmptyDictionarySingleton;
  if (v40[2])
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v41 = (void *)sub_2E4E10();
  }
  *(void *)&long long v192 = v41;
  sub_18C1FC(v40, 1, &v192);
  if (v39) {
    goto LABEL_80;
  }
  uint64_t v42 = 0;
  swift_bridgeObjectRelease();
  uint64_t v43 = v192;
  uint64_t v167 = v37;
  sub_18EF58(v37, v177, (uint64_t (*)(void))type metadata accessor for Page);
  unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v44 = v28 + 16;
  long long v184 = v45;
  uint64_t v170 = v168 + ((*(unsigned __int8 *)(v44 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 64));
  uint64_t v169 = *(void *)(v44 + 56);
  char v176 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)v179 + 48);
  long long v150 = (void (**)(uint64_t, uint64_t))((char *)v179 + 8);
  uint64_t v154 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v153 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v139 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v146 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v185 = v44;
  uint64_t v183 = (void (**)(char *, uint64_t))(v44 - 8);
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))((char *)v179 + 32);
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  *(void *)&long long v47 = 136315138;
  long long v142 = v47;
  uint64_t v141 = (char *)&type metadata for Any + 8;
  uint64_t v48 = (uint64_t)v188;
  uint64_t v178 = v27;
  BOOL v49 = v187;
  uint64_t v50 = v171;
  uint64_t v182 = v43;
  while (v46 != v50)
  {
    v184(v49, v170 + v169 * v46, v27);
    uint64_t v51 = sub_2E0AB0();
    if (!*(void *)(v43 + 16) || (unint64_t v53 = sub_5F740(v51, v52), (v54 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_18B7D8();
      swift_allocError();
      unsigned char *v136 = 0;
      swift_willThrow();
      (*v183)(v187, v27);
      uint64_t v134 = type metadata accessor for Page;
      uint64_t v135 = v177;
      return sub_18EEB0(v135, (uint64_t (*)(void))v134);
    }
    unint64_t v55 = *(void *)(*(void *)(v43 + 56) + 8 * v53);
    swift_bridgeObjectRelease();
    if ((v55 & 0x8000000000000000) != 0) {
      goto LABEL_76;
    }
    uint64_t v56 = *(void *)(v167 + v166);
    if (v55 >= *(void *)(v56 + 16)) {
      goto LABEL_77;
    }
    uint64_t v174 = v46;
    unint64_t v161 = (*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
    uint64_t v57 = *(void *)(v172 + 72);
    uint64_t v163 = v55;
    uint64_t v160 = v57 * v55;
    sub_18EF58(v56 + v161 + v57 * v55, v48, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v58 = (uint64_t)v173;
    char v59 = v187;
    sub_2E0A80();
    uint64_t v60 = *v176;
    uint64_t v61 = v181;
    unsigned int v62 = (*v176)(v58, 1, v181);
    sub_662B4(v58, &qword_3CD908);
    uint64_t v63 = v175;
    v184(v175, (uint64_t)v59, v27);
    uint64_t v162 = v60;
    if (v62 == 1)
    {
      char v179 = *v183;
      v179(v63, v27);
    }
    else
    {
      uint64_t v186 = v42;
      uint64_t v88 = (uint64_t)v157;
      sub_2E0A80();
      if (v60(v88, 1, v61) == 1)
      {
        sub_662B4(v88, &qword_3CD908);
        uint64_t v89 = 1;
        unint64_t v90 = v153;
        uint64_t v91 = v164;
      }
      else
      {
        uint64_t v91 = v164;
        sub_2E0580();
        (*v150)(v88, v61);
        uint64_t v89 = 0;
        unint64_t v90 = v153;
      }
      uint64_t v93 = v155;
      (*v154)(v91, v89, 1, v155);
      uint64_t v94 = v48 + *(int *)(v180 + 68);
      uint64_t v95 = v165;
      uint64_t v96 = v165 + *(int *)(v158 + 48);
      sub_66444(v91, v165, &qword_3CBD28);
      sub_66444(v94, v96, &qword_3CBD28);
      uint64_t v97 = *v90;
      if ((*v90)(v95, 1, v93) == 1)
      {
        sub_662B4(v91, &qword_3CBD28);
        uint64_t v27 = v178;
        char v179 = *v183;
        v179(v63, v178);
        if (v97(v96, 1, v93) != 1)
        {
          uint64_t v95 = v165;
          goto LABEL_55;
        }
        sub_662B4(v165, &qword_3CBD28);
        uint64_t v42 = v186;
      }
      else
      {
        uint64_t v98 = v151;
        sub_66444(v95, v151, &qword_3CBD28);
        if (v97(v96, 1, v93) == 1)
        {
          sub_662B4(v164, &qword_3CBD28);
          char v179 = *v183;
          v179(v63, v178);
          (*v146)(v98, v93);
LABEL_55:
          uint64_t v43 = v182;
          sub_662B4(v95, &qword_3CD900);
          uint64_t v27 = v178;
          uint64_t v42 = v186;
          uint64_t v115 = v159;
LABEL_56:
          if (qword_3C65E8 != -1) {
            swift_once();
          }
          uint64_t v116 = sub_2DF850();
          sub_58BA0(v116, (uint64_t)qword_3CD288);
          BOOL v49 = v187;
          v184(v115, (uint64_t)v187, v27);
          uint64_t v117 = sub_2DF830();
          os_log_type_t v118 = sub_2E48F0();
          if (os_log_type_enabled(v117, v118))
          {
            uint64_t v119 = swift_slowAlloc();
            *(void *)&long long v192 = swift_slowAlloc();
            *(_DWORD *)uint64_t v119 = v142;
            uint64_t v120 = v148;
            sub_2E0A80();
            uint64_t v121 = sub_2E4B00();
            unint64_t v123 = v122;
            uint64_t v124 = (uint64_t)v120;
            uint64_t v43 = v182;
            sub_662B4(v124, &qword_3CD908);
            *(void *)(v119 + 4) = sub_5F150(v121, v123, (uint64_t *)&v192);
            swift_bridgeObjectRelease();
            uint64_t v125 = v179;
            v179(v159, v27);
            _os_log_impl(&dword_0, v117, v118, "Skipping this pagination update because it has already been handled: %s", (uint8_t *)v119, 0xCu);
            swift_arrayDestroy();
            BOOL v49 = v187;
            swift_slowDealloc();
            swift_slowDealloc();

            v125(v49, v27);
          }
          else
          {

            uint64_t v126 = v179;
            v179(v115, v27);
            v126(v49, v27);
          }
          uint64_t v48 = (uint64_t)v188;
          uint64_t v108 = v174;
          goto LABEL_62;
        }
        uint64_t v127 = v95;
        uint64_t v128 = v98;
        uint64_t v129 = v140;
        (*v139)(v140, v96, v93);
        sub_18EF10(&qword_3CD918, (void (*)(uint64_t))&type metadata accessor for PaginationInfo);
        char v130 = sub_2E43D0();
        uint64_t v131 = *v146;
        uint64_t v132 = (uint64_t)v129;
        uint64_t v48 = (uint64_t)v188;
        (*v146)(v132, v93);
        sub_662B4(v164, &qword_3CBD28);
        uint64_t v27 = v178;
        char v179 = *v183;
        v179(v175, v178);
        v131(v128, v93);
        sub_662B4(v127, &qword_3CBD28);
        uint64_t v43 = v182;
        uint64_t v42 = v186;
        uint64_t v115 = v159;
        if ((v130 & 1) == 0) {
          goto LABEL_56;
        }
      }
    }
    uint64_t v64 = v187;
    uint64_t v65 = sub_2E0AA0();
    sub_2035F8();
    if (v42)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v179(v64, v27);
      swift_bridgeObjectRelease();
      sub_18EEB0(v177, (uint64_t (*)(void))type metadata accessor for Page);
      uint64_t v134 = type metadata accessor for Shelf;
      uint64_t v135 = v48;
      return sub_18EEB0(v135, (uint64_t (*)(void))v134);
    }
    uint64_t v66 = *(int *)(v180 + 64);
    uint64_t v67 = swift_bridgeObjectRetain();
    uint64_t v68 = sub_18583C(v67);
    swift_bridgeObjectRelease();
    if (!v68[2])
    {
      uint64_t v69 = &_swiftEmptyDictionarySingleton;
      uint64_t v196 = &_swiftEmptyDictionarySingleton;
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v92 = *(void *)(v65 + 16);
      if (v92)
      {
LABEL_37:
        uint64_t v99 = v65 + 32;
        while (1)
        {
          sub_66310(v99, (uint64_t)&v192);
          sub_71044(&v192, *((uint64_t *)&v193 + 1));
          sub_2E39D0();
          if (!v69[2]) {
            break;
          }
          unint64_t v100 = sub_5F7B8((uint64_t)&v189);
          if ((v101 & 1) == 0) {
            break;
          }
          unint64_t v102 = *(void *)(v69[7] + 8 * v100);
          sub_65D68((uint64_t)&v189);
          uint64_t v48 = (uint64_t)v188;
          long long v103 = *(char **)&v188[v66];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v48 + v66) = v103;
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v102 & 0x8000000000000000) != 0) {
              goto LABEL_72;
            }
          }
          else
          {
            long long v103 = sub_18B6B8((uint64_t)v103);
            *(void *)(v48 + v66) = v103;
            if ((v102 & 0x8000000000000000) != 0) {
              goto LABEL_72;
            }
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_73;
          }
          sub_6FA20((uint64_t *)&v103[40 * v102 + 32], (uint64_t *)&v192);
          _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v192);
          v99 += 40;
          if (!--v92) {
            goto LABEL_47;
          }
        }
        sub_65D68((uint64_t)&v189);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_18B7D8();
        swift_allocError();
        *uint64_t v133 = 1;
        swift_willThrow();
        v179(v187, v178);
        sub_18EEB0(v177, (uint64_t (*)(void))type metadata accessor for Page);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v192);
        uint64_t v134 = type metadata accessor for Shelf;
        uint64_t v135 = (uint64_t)v188;
        return sub_18EEB0(v135, (uint64_t (*)(void))v134);
      }
      goto LABEL_47;
    }
    sub_63BAC(&qword_3CD928);
    uint64_t v69 = (void *)sub_2E4E10();
    uint64_t v70 = v68[2];
    uint64_t v196 = v69;
    if (!v70) {
      goto LABEL_36;
    }
    uint64_t v186 = 0;
    uint64_t v71 = (uint64_t)(v68 + 4);
    swift_bridgeObjectRetain();
    do
    {
      sub_66444(v71, (uint64_t)&v192, &qword_3CD930);
      long long v189 = v192;
      long long v190 = v193;
      uint64_t v74 = v195;
      uint64_t v191 = v194;
      unint64_t v75 = sub_5F7B8((uint64_t)&v189);
      uint64_t v77 = v69[2];
      BOOL v78 = (v76 & 1) == 0;
      BOOL v79 = __OFADD__(v77, v78);
      uint64_t v80 = v77 + v78;
      if (v79)
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      char v81 = v76;
      if (v69[3] < v80)
      {
        sub_1896C8(v80, 1);
        unint64_t v75 = sub_5F7B8((uint64_t)&v189);
        if ((v81 & 1) != (v82 & 1)) {
          goto LABEL_79;
        }
      }
      uint64_t v69 = v196;
      if (v81)
      {
        uint64_t v72 = 8 * v75;
        uint64_t v73 = *(void *)(v196[7] + 8 * v75);
        sub_65D68((uint64_t)&v189);
        *(void *)(v69[7] + v72) = v73;
      }
      else
      {
        v196[(v75 >> 6) + 8] |= 1 << v75;
        uint64_t v83 = v69[6] + 40 * v75;
        long long v84 = v189;
        long long v85 = v190;
        *(void *)(v83 + 32) = v191;
        *(_OWORD *)uint64_t v83 = v84;
        *(_OWORD *)(v83 + 16) = v85;
        *(void *)(v69[7] + 8 * v75) = v74;
        uint64_t v86 = v69[2];
        BOOL v79 = __OFADD__(v86, 1);
        uint64_t v87 = v86 + 1;
        if (v79) {
          goto LABEL_74;
        }
        v69[2] = v87;
      }
      v71 += 48;
      --v70;
    }
    while (v70);
    swift_bridgeObjectRelease_n();
    uint64_t v42 = v186;
    uint64_t v48 = (uint64_t)v188;
    uint64_t v92 = *(void *)(v65 + 16);
    if (v92) {
      goto LABEL_37;
    }
LABEL_47:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v105 = (uint64_t)v156;
    uint64_t v27 = v178;
    sub_2E0A80();
    uint64_t v106 = v181;
    int v107 = v162(v105, 1, v181);
    uint64_t v108 = v174;
    if (v107 == 1)
    {
      sub_662B4(v105, &qword_3CD908);
    }
    else
    {
      uint64_t v109 = v149;
      (*v144)(v149, v105, v106);
      uint64_t v110 = (uint64_t)v145;
      sub_2E0560();
      (*v150)((uint64_t)v109, v106);
      sub_18C014(v110, v48 + *(int *)(v180 + 68));
    }
    uint64_t v111 = *(int *)(v147 + 52);
    uint64_t v112 = v177;
    unint64_t v113 = *(void *)(v177 + v111);
    char v114 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v112 + v111) = v113;
    if ((v114 & 1) == 0)
    {
      unint64_t v113 = sub_18B6A4(v113);
      *(void *)(v177 + v111) = v113;
    }
    uint64_t v43 = v182;
    if (v163 >= *(void *)(v113 + 16)) {
      goto LABEL_78;
    }
    sub_18BFB0(v48, v113 + v161 + v160);
    BOOL v49 = v187;
    v179(v187, v27);
LABEL_62:
    uint64_t v46 = v108 + 1;
    sub_18EEB0(v48, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v50 = v171;
    if (v46 == v171)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_18EFC0(v177, v152, (uint64_t (*)(void))type metadata accessor for Page);
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  sub_2E50E0();
  __break(1u);
LABEL_80:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t Page.updatingTrailingToolbarItems(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_18EF58(v2, a2, (uint64_t (*)(void))type metadata accessor for Page);
  uint64_t v5 = *(int *)(type metadata accessor for Page() + 44);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v5) = a1;
  return result;
}

uint64_t Page.updatingShelfHeader(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for Shelf();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  uint64_t v58 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CC6A8);
  uint64_t v55 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Page();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v56 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(a1 + 16);
  if (!v48) {
    return sub_18EF58(v4, a2, (uint64_t (*)(void))type metadata accessor for Page);
  }
  char v54 = v11;
  uint64_t v15 = *(int *)(v13 + 52);
  uint64_t v46 = v13;
  uint64_t v47 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_185590(v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17[2];
  uint64_t v42 = a2;
  if (v18)
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v19 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v19 = &_swiftEmptyDictionarySingleton;
  }
  *(void *)&v59[0] = v19;
  sub_18C1FC(v17, 1, v59);
  uint64_t v41 = v3;
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)&v59[0];
    sub_18EF58(v4, v56, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v53 = a1 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    uint64_t v51 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v52 = v55 + 16;
    uint64_t v43 = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = v54;
    uint64_t v44 = v4;
    uint64_t v45 = v21;
    while (!__OFADD__(v22, 1))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v23, v53 + *(void *)(v55 + 72) * v22, v9);
      uint64_t v24 = sub_2E0A60();
      if (!*(void *)(v21 + 16) || (unint64_t v26 = sub_5F740(v24, v25), (v27 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_18B7D8();
        swift_allocError();
        *char v40 = 0;
        swift_willThrow();
        (*v51)(v23, v9);
        return sub_18EEB0(v56, (uint64_t (*)(void))type metadata accessor for Page);
      }
      unint64_t v28 = *(void *)(*(void *)(v21 + 56) + 8 * v26);
      swift_bridgeObjectRelease();
      if ((v28 & 0x8000000000000000) != 0) {
        goto LABEL_20;
      }
      uint64_t v29 = *(void *)(v4 + v47);
      if (v28 >= *(void *)(v29 + 16)) {
        goto LABEL_21;
      }
      uint64_t v57 = v22 + 1;
      unint64_t v30 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v31 = *(void *)(v49 + 72) * v28;
      uint64_t v32 = v58;
      sub_18EF58(v29 + v30 + v31, v58, (uint64_t (*)(void))type metadata accessor for Shelf);
      uint64_t v33 = v9;
      sub_2E0A50();
      uint64_t v34 = v32 + *(int *)(v50 + 52);
      sub_16455C(v34);
      sub_65CF4(v59, v34);
      uint64_t v35 = *(int *)(v46 + 52);
      uint64_t v36 = v56;
      unint64_t v37 = *(void *)(v56 + v35);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v36 + v35) = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v37 = sub_18B6A4(v37);
        *(void *)(v56 + v35) = v37;
      }
      uint64_t v23 = v54;
      uint64_t v21 = v45;
      if (v28 >= *(void *)(v37 + 16)) {
        goto LABEL_22;
      }
      uint64_t v9 = v33;
      uint64_t v39 = v58;
      sub_18BFB0(v58, v37 + v30 + v31);
      (*v51)(v23, v33);
      sub_18EEB0(v39, (uint64_t (*)(void))type metadata accessor for Shelf);
      ++v22;
      uint64_t v4 = v44;
      if (v57 == v48)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return sub_18EFC0(v56, v42, (uint64_t (*)(void))type metadata accessor for Page);
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t Page.updatingShelfFooter(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for Shelf();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  uint64_t v58 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_63BAC(&qword_3CC6A8);
  uint64_t v55 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Page();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v56 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(a1 + 16);
  if (!v48) {
    return sub_18EF58(v4, a2, (uint64_t (*)(void))type metadata accessor for Page);
  }
  char v54 = v11;
  uint64_t v15 = *(int *)(v13 + 52);
  uint64_t v46 = v13;
  uint64_t v47 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_185590(v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17[2];
  uint64_t v42 = a2;
  if (v18)
  {
    sub_63BAC(&qword_3C6F30);
    uint64_t v19 = (void *)sub_2E4E10();
  }
  else
  {
    uint64_t v19 = &_swiftEmptyDictionarySingleton;
  }
  *(void *)&v59[0] = v19;
  sub_18C1FC(v17, 1, v59);
  uint64_t v41 = v3;
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)&v59[0];
    sub_18EF58(v4, v56, (uint64_t (*)(void))type metadata accessor for Page);
    uint64_t v53 = a1 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    uint64_t v51 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v52 = v55 + 16;
    uint64_t v43 = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = v54;
    uint64_t v44 = v4;
    uint64_t v45 = v21;
    while (!__OFADD__(v22, 1))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v23, v53 + *(void *)(v55 + 72) * v22, v9);
      uint64_t v24 = sub_2E0A60();
      if (!*(void *)(v21 + 16) || (unint64_t v26 = sub_5F740(v24, v25), (v27 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_18B7D8();
        swift_allocError();
        *char v40 = 0;
        swift_willThrow();
        (*v51)(v23, v9);
        return sub_18EEB0(v56, (uint64_t (*)(void))type metadata accessor for Page);
      }
      unint64_t v28 = *(void *)(*(void *)(v21 + 56) + 8 * v26);
      swift_bridgeObjectRelease();
      if ((v28 & 0x8000000000000000) != 0) {
        goto LABEL_20;
      }
      uint64_t v29 = *(void *)(v4 + v47);
      if (v28 >= *(void *)(v29 + 16)) {
        goto LABEL_21;
      }
      uint64_t v57 = v22 + 1;
      unint64_t v30 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v31 = *(void *)(v49 + 72) * v28;
      uint64_t v32 = v58;
      sub_18EF58(v29 + v30 + v31, v58, (uint64_t (*)(void))type metadata accessor for Shelf);
      uint64_t v33 = v9;
      sub_2E0A50();
      uint64_t v34 = v32 + *(int *)(v50 + 56);
      sub_1649E8(v34);
      sub_65CF4(v59, v34);
      uint64_t v35 = *(int *)(v46 + 52);
      uint64_t v36 = v56;
      unint64_t v37 = *(void *)(v56 + v35);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v36 + v35) = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v37 = sub_18B6A4(v37);
        *(void *)(v56 + v35) = v37;
      }
      uint64_t v23 = v54;
      uint64_t v21 = v45;
      if (v28 >= *(void *)(v37 + 16)) {
        goto LABEL_22;
      }
      uint64_t v9 = v33;
      uint64_t v39 = v58;
      sub_18BFB0(v58, v37 + v30 + v31);
      (*v51)(v23, v33);
      sub_18EEB0(v39, (uint64_t (*)(void))type metadata accessor for Shelf);
      ++v22;
      uint64_t v4 = v44;
      if (v57 == v48)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return sub_18EFC0(v56, v42, (uint64_t (*)(void))type metadata accessor for Page);
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_185590(uint64_t a1)
{
  uint64_t v30 = sub_63BAC(&qword_3CBAC0);
  uint64_t v2 = __chkstk_darwin(v30);
  uint64_t v29 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v28 = (void *)((char *)v25 - v5);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v25 - v6);
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_2A4764(0, 0, 0);
  uint64_t v8 = v31;
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v27 = v9;
  v25[1] = a1;
  if (v9)
  {
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)(type metadata accessor for Shelf() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v26 = *(void *)(v11 + 72);
    do
    {
      uint64_t v13 = v30;
      uint64_t v14 = (uint64_t)&v29[*(int *)(v30 + 48)];
      sub_18EF58(v12, v14, (uint64_t (*)(void))type metadata accessor for Shelf);
      uint64_t v15 = (uint64_t)v28;
      uint64_t v16 = (uint64_t)v28 + *(int *)(v13 + 48);
      *unint64_t v28 = v10;
      sub_18EFC0(v14, v16, (uint64_t (*)(void))type metadata accessor for Shelf);
      sub_71900(v15, (uint64_t)v7, &qword_3CBAC0);
      uint64_t v17 = *v7;
      uint64_t v18 = (uint64_t *)((char *)v7 + *(int *)(v13 + 48));
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
      sub_662B4((uint64_t)v7, &qword_3CBAC0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A4764(0, v8[2] + 1, 1);
        uint64_t v8 = v31;
      }
      unint64_t v22 = v8[2];
      unint64_t v21 = v8[3];
      if (v22 >= v21 >> 1)
      {
        sub_2A4764(v21 > 1, v22 + 1, 1);
        uint64_t v8 = v31;
      }
      ++v10;
      _OWORD v8[2] = v22 + 1;
      uint64_t v23 = &v8[3 * v22];
      unsigned char v23[4] = v19;
      void v23[5] = v20;
      v23[6] = v17;
      v12 += v26;
    }
    while (v27 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_18583C(uint64_t a1)
{
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_2A47A4(0, 0, 0);
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a1 + 32;
    do
    {
      sub_66310(v5, (uint64_t)v13);
      *(void *)&long long v14 = v4;
      sub_65CF4(v13, (uint64_t)&v14 + 8);
      v17[1] = v15;
      _OWORD v17[2] = v16;
      v17[0] = v14;
      uint64_t v6 = v14;
      sub_71044((void *)v17 + 1, v16);
      sub_2E39D0();
      *((void *)&v16 + 1) = v6;
      sub_662B4((uint64_t)v17, &qword_3CDB10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2A47A4(0, v2[2] + 1, 1);
        uint64_t v2 = v18;
      }
      unint64_t v8 = v2[2];
      unint64_t v7 = v2[3];
      if (v8 >= v7 >> 1)
      {
        sub_2A47A4(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v18;
      }
      ++v4;
      v2[2] = v8 + 1;
      uint64_t v9 = &v2[6 * v8];
      long long v10 = v14;
      long long v11 = v16;
      v9[3] = v15;
      v9[4] = v11;
      long long v9[2] = v10;
      v5 += 40;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Page.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Page();
  return sub_66444(v1 + *(int *)(v3 + 20), a1, &qword_3C97E8);
}

uint64_t Page.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Page();
  return sub_66444(v1 + *(int *)(v3 + 24), a1, &qword_3C97E8);
}

uint64_t Page.pageMarginConfiguration.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Page();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t Page.isUber.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Page() + 32));
}

uint64_t Page.toolbarPrincipal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Page();
  return sub_66444(v1 + *(int *)(v3 + 36), a1, &qword_3CB0B8);
}

uint64_t Page.leadingToolbarItems.getter()
{
  type metadata accessor for Page();

  return swift_bridgeObjectRetain();
}

uint64_t Page.trailingToolbarItems.getter()
{
  type metadata accessor for Page();

  return swift_bridgeObjectRetain();
}

BookStoreUI::Page::StackType_optional __swiftcall Page.StackType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_390AC8;
  v8._object = object;
  Swift::Int v5 = sub_2E4E50(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t Page.StackType.rawValue.getter()
{
  if (*v0) {
    return 1953720684;
  }
  else {
    return 0x676150666C656873;
  }
}

uint64_t sub_185C08(char *a1, char *a2)
{
  return sub_201C54(*a1, *a2);
}

Swift::Int sub_185C14()
{
  return sub_2E51E0();
}

uint64_t sub_185C94()
{
  sub_2E44A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_185D00()
{
  return sub_2E51E0();
}

BookStoreUI::Page::StackType_optional sub_185D7C(Swift::String *a1)
{
  return Page.StackType.init(rawValue:)(*a1);
}

void sub_185D88(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953720684;
  if (!*v1) {
    uint64_t v2 = 0x676150666C656873;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_185DC4()
{
  return sub_2E4610();
}

uint64_t sub_185E24()
{
  return sub_2E45D0();
}

uint64_t Page.stackType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Page();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t Page.shelves.getter()
{
  type metadata accessor for Page();

  return swift_bridgeObjectRetain();
}

uint64_t Page.shelfIDToLoadMore.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Page() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Page.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Page() + 60);
  uint64_t v4 = sub_2DE7F0();
  Swift::Int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Page.additionalEventData.getter()
{
  type metadata accessor for Page();

  return swift_bridgeObjectRetain();
}

uint64_t Page.pageMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Page() + 68);
  uint64_t v4 = sub_2E38D0();
  Swift::Int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Page.isValidFallback.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Page() + 72));
}

uint64_t Page.intentToLoadMore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3CD938);
  __chkstk_darwin(v3 - 8);
  Swift::Int v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Shelf();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t result = type metadata accessor for Page();
  long long v14 = (uint64_t *)(v1 + *(int *)(result + 56));
  uint64_t v15 = v14[1];
  if (!v15) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v1 + *(int *)(result + 52));
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v26 = v12;
    uint64_t v27 = a1;
    uint64_t v18 = *v14;
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v20 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_18EF58(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
      BOOL v21 = *v9 == v18 && v15 == v9[1];
      if (v21 || (sub_2E5020() & 1) != 0) {
        break;
      }
      sub_18EEB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
      v19 += v20;
      if (!--v17)
      {
        uint64_t v22 = 1;
        goto LABEL_12;
      }
    }
    sub_18EFC0((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v22 = 0;
LABEL_12:
    uint64_t v12 = v26;
    a1 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v22, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t result = sub_662B4((uint64_t)v5, &qword_3CD938);
LABEL_16:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  sub_18EFC0((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Shelf);
  sub_66444((uint64_t)&v12[*(int *)(v6 + 72)], (uint64_t)v28, &qword_3CCCF8);
  uint64_t v23 = v29;
  if (v29)
  {
    uint64_t v24 = v30;
    sub_71044(v28, v29);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 8))(v12, v23, v24);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v28);
  }
  else
  {
    sub_662B4((uint64_t)v28, &qword_3CCCF8);
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return sub_18EEB0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Shelf);
}

uint64_t Page.shelfGridIDToLoadMore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_63BAC(&qword_3CD938);
  __chkstk_darwin(v3 - 8);
  Swift::Int v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Shelf();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char **)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t result = type metadata accessor for Page();
  long long v14 = (uint64_t *)(v1 + *(int *)(result + 56));
  uint64_t v15 = v14[1];
  if (!v15) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v1 + *(int *)(result + 52));
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v23 = v12;
    uint64_t v24 = a1;
    uint64_t v18 = *v14;
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v20 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_18EF58(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
      BOOL v21 = *v9 == v18 && v15 == v9[1];
      if (v21 || (sub_2E5020() & 1) != 0) {
        break;
      }
      sub_18EEB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Shelf);
      v19 += v20;
      if (!--v17)
      {
        uint64_t v22 = 1;
        goto LABEL_12;
      }
    }
    sub_18EFC0((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Shelf);
    uint64_t v22 = 0;
LABEL_12:
    uint64_t v12 = v23;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v22, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t result = sub_662B4((uint64_t)v5, &qword_3CD938);
LABEL_16:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  sub_18EFC0((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Shelf);
  sub_65D0C((uint64_t)&v12[*(int *)(v6 + 40)], a1);
  return sub_18EEB0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Shelf);
}

uint64_t Page.lifecycleEventHandlers.getter()
{
  type metadata accessor for Page();

  return swift_bridgeObjectRetain();
}

uint64_t Page.pageUpdatePublisher.getter()
{
  type metadata accessor for Page();

  return swift_retain();
}

uint64_t Page.isPendingData.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Page() + 84));
}

uint64_t Page.isPendingData.setter(char a1)
{
  uint64_t result = type metadata accessor for Page();
  *(unsigned char *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

void (__swiftcall *Page.isPendingData.modify())()
{
  return ContextActionItemCoverProvider.init();
}

uint64_t Page.backgroundColor.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Page() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Page.backgroundColor.setter(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = (void *)(v2 + *(int *)(type metadata accessor for Page() + 88));
  uint64_t result = swift_bridgeObjectRelease();
  *Swift::Int v5 = a1;
  v5[1] = a2;
  return result;
}

void (__swiftcall *Page.backgroundColor.modify())()
{
  return ContextActionItemCoverProvider.init();
}

uint64_t Page.backgroundTintInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Page() + 92));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_18C48C(v4, v5);
}

__n128 Page.backgroundTintInfo.setter(__n128 *a1)
{
  __n128 v5 = a1[1];
  __n128 v6 = *a1;
  unint64_t v2 = a1[2].n128_u64[0];
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for Page() + 92));
  sub_18C4D0(v3->n128_u64[0], v3->n128_i64[1]);
  __n128 result = v5;
  *uint64_t v3 = v6;
  v3[1] = v5;
  v3[2].n128_u64[0] = v2;
  return result;
}

void (__swiftcall *Page.backgroundTintInfo.modify())()
{
  return ContextActionItemCoverProvider.init();
}

unint64_t sub_18695C(char a1)
{
  unint64_t result = 0x756F72676B636162;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x726562557369;
      break;
    case 3:
      unint64_t result = 0x697461676976616ELL;
      break;
    case 4:
      unint64_t result = 0x6174614465676170;
      break;
    case 5:
      unint64_t result = 0x444965676170;
      break;
    case 6:
      unint64_t result = 0x7274654D65676170;
      break;
    case 7:
      unint64_t result = 0x6570795465676170;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x7365766C656873;
      break;
    case 10:
      unint64_t result = 0x7079546B63617473;
      break;
    case 11:
      unint64_t result = 0x656C746974627573;
      break;
    case 12:
      unint64_t result = 0x656C746974;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_186B40(char a1)
{
  unint64_t result = 0x756F72676B636162;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x726562557369;
      break;
    case 3:
      unint64_t result = 0x697461676976616ELL;
      break;
    case 4:
      unint64_t result = 0x6174614465676170;
      break;
    case 5:
      unint64_t result = 0x444965676170;
      break;
    case 6:
      unint64_t result = 0x7274654D65676170;
      break;
    case 7:
      unint64_t result = 0x6570795465676170;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x7365766C656873;
      break;
    case 10:
      unint64_t result = 0x7079546B63617473;
      break;
    case 11:
      unint64_t result = 0x656C746974627573;
      break;
    case 12:
      unint64_t result = 0x656C746974;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_186D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 68);
  uint64_t v5 = sub_2E38D0();
  __n128 v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_186D94@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_186DA0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_18695C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_18695C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2E5020();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_186E2C()
{
  char v1 = *v0;
  sub_2E51A0();
  sub_18695C(v1);
  sub_2E44A0();
  swift_bridgeObjectRelease();
  return sub_2E51E0();
}

uint64_t sub_186E90()
{
  sub_18695C(*v0);
  sub_2E44A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_186EE4()
{
  char v1 = *v0;
  sub_2E51A0();
  sub_18695C(v1);
  sub_2E44A0();
  swift_bridgeObjectRelease();
  return sub_2E51E0();
}

uint64_t sub_186F44@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_18B78C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_186F74@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_18695C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_186FA0()
{
  return sub_186B40(*v0);
}

uint64_t sub_186FA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18B78C(a1, a2);
  *a3 = result;
  return result;
}

void sub_186FD0(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_186FDC(uint64_t a1)
{
  unint64_t v2 = sub_18C514();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_187018(uint64_t a1)
{
  unint64_t v2 = sub_18C514();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Page.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v100 = sub_63BAC(&qword_3CC450);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_63BAC(&qword_3CD940);
  __chkstk_darwin(v4 - 8);
  uint64_t v105 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_63BAC((uint64_t *)&unk_3CE220);
  __chkstk_darwin(v6 - 8);
  uint64_t v101 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E38D0();
  uint64_t v109 = *(void *)(v8 - 8);
  uint64_t v110 = v8;
  __chkstk_darwin(v8);
  unint64_t v102 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_2DDEE0();
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  long long v103 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_63BAC((uint64_t *)&unk_3CE210);
  __chkstk_darwin(v11 - 8);
  uint64_t v107 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2DE7F0();
  uint64_t v111 = *(void *)(v13 - 8);
  uint64_t v112 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_63BAC(&qword_3C97E8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  BOOL v21 = (char *)&v93 - v20;
  uint64_t v22 = sub_63BAC(&qword_3CD948);
  uint64_t v108 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v93 - v26;
  uint64_t v28 = type metadata accessor for Page();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = &v30[v31[22]];
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  *(void *)&long long v116 = v32;
  uint64_t v117 = v31;
  os_log_type_t v118 = v30;
  uint64_t v33 = &v30[v31[23]];
  *((void *)v33 + 4) = 0;
  *(_OWORD *)uint64_t v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  unint64_t v113 = a1;
  char v114 = (uint64_t *)v33;
  sub_71044(a1, a1[3]);
  sub_18C514();
  uint64_t v34 = v115;
  sub_2E5220();
  if (v34)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v113);
    uint64_t v36 = v114;
    swift_bridgeObjectRelease();
    return sub_18C4D0(*v36, v36[1]);
  }
  *(void *)&long long v115 = v24;
  uint64_t v96 = v15;
  sub_2DF5D0();
  LOBYTE(v119) = 12;
  sub_18EF10(&qword_3CD958, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
  sub_2E4EC0();
  unint64_t v37 = v117;
  sub_71900((uint64_t)v21, (uint64_t)v118 + v117[5], &qword_3C97E8);
  LOBYTE(v119) = 11;
  uint64_t v38 = (uint64_t)v18;
  sub_2E4EC0();
  uint64_t v39 = v118;
  sub_71900(v38, (uint64_t)v118 + v37[6], &qword_3C97E8);
  uint64_t v95 = v22;
  uint64_t v94 = v27;
  swift_beginAccess();
  char v40 = v94;
  uint64_t v41 = v95;
  *((unsigned char *)v39 + v37[7]) = byte_3C87E8;
  LOBYTE(v119) = 4;
  sub_18EF10(&qword_3CD960, (void (*)(uint64_t))&type metadata accessor for PageData);
  uint64_t v42 = v107;
  uint64_t v43 = v112;
  sub_2E4EC0();
  uint64_t v44 = v108;
  (*(void (**)(void, char *, uint64_t))(v108 + 16))(v115, v40, v41);
  uint64_t v45 = v111;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v42, 1, v43) == 1)
  {
    LOBYTE(v119) = 5;
    sub_2E4E80();
    uint64_t v46 = v96;
    LOBYTE(v119) = 7;
    sub_2E4ED0();
    sub_2DE7C0();
    uint64_t v64 = *(void (**)(char *, uint64_t))(v108 + 8);
    v64((char *)v115, v41);
    sub_662B4(v107, (uint64_t *)&unk_3CE210);
    uint64_t v45 = v111;
  }
  else
  {
    uint64_t v47 = v42;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v44 + 8);
    v64((char *)v115, v41);
    uint64_t v46 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v96, v47, v43);
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v118 + v37[15], v46, v43);
  *(void *)&long long v119 = sub_2DE7E0();
  *((void *)&v119 + 1) = v48;
  v123._countAndFlagsBits = 45;
  v123._object = (void *)0xE100000000000000;
  sub_2E44C0(v123);
  uint64_t v49 = sub_2DE7D0();
  uint64_t v51 = v106;
  if (v50)
  {
    uint64_t v52 = v49;
    uint64_t v53 = v50;
  }
  else
  {
    char v54 = v103;
    sub_2DDED0();
    uint64_t v52 = sub_2DDEB0();
    uint64_t v53 = v55;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v54, v51);
  }
  v124._countAndFlagsBits = v52;
  v124._object = v53;
  sub_2E44C0(v124);
  swift_bridgeObjectRelease();
  uint64_t v56 = *((void *)&v119 + 1);
  uint64_t v57 = v118;
  void *v118 = v119;
  v57[1] = v56;
  LOBYTE(v119) = 2;
  *((unsigned char *)v57 + v37[8]) = sub_2E4EE0() & 1;
  *(void *)((char *)v57 + v37[16]) = _swiftEmptyArrayStorage;
  uint64_t v58 = sub_63BAC(&qword_3CD968);
  LOBYTE(v119) = 6;
  sub_18C704(&qword_3CD970, &qword_3CD968, (void (*)(void))sub_18C568);
  uint64_t v59 = (uint64_t)v105;
  sub_2E4EC0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v59, 1, v58) == 1)
  {
    sub_662B4(v59, &qword_3CD940);
    uint64_t v60 = v109;
    uint64_t v61 = v110;
    uint64_t v62 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v101, 1, 1, v110);
    uint64_t v63 = v102;
  }
  else
  {
    uint64_t v62 = v101;
    sub_66444(v59, v101, (uint64_t *)&unk_3CE220);
    sub_662B4(v59, &qword_3CD968);
    uint64_t v60 = v109;
    uint64_t v61 = v110;
    int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v62, 1, v110);
    uint64_t v63 = v102;
    if (v65 != 1)
    {
      uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
      v66(v102, v62, v61);
      goto LABEL_15;
    }
  }
  sub_2E38C0();
  sub_662B4(v62, (uint64_t *)&unk_3CE220);
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
LABEL_15:
  uint64_t v67 = v118;
  v66((char *)v118 + v37[17], (uint64_t)v63, v61);
  char v122 = 10;
  sub_18C60C();
  sub_2E4EC0();
  *((unsigned char *)v67 + v37[12]) = v119 & 1;
  sub_63BAC(&qword_3CD990);
  char v122 = 9;
  sub_18C704(&qword_3CD998, &qword_3CD990, (void (*)(void))sub_18C660);
  sub_2E4F10();
  uint64_t v68 = v37[13];
  *(void *)((char *)v118 + v68) = v119;
  LOBYTE(v119) = 8;
  uint64_t v69 = sub_2E4E80();
  uint64_t v70 = v117;
  uint64_t v71 = v118;
  uint64_t v72 = (void *)((char *)v118 + v117[14]);
  *uint64_t v72 = v69;
  v72[1] = v73;
  *(void *)((char *)v71 + v70[19]) = sub_63760((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v74 = (char *)v71 + v70[9];
  uint64_t v75 = sub_2E0980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 1, 1, v75);
  sub_63BAC(&qword_3CD9B8);
  char v122 = 13;
  sub_18C704(&qword_3CD9C0, &qword_3CD9B8, (void (*)(void))sub_18C77C);
  sub_2E4EC0();
  char v76 = (void *)v119;
  if (!(void)v119) {
    char v76 = _swiftEmptyArrayStorage;
  }
  *(void *)((char *)v118 + v117[10]) = v76;
  char v122 = 14;
  sub_2E4EC0();
  uint64_t v77 = (void *)v119;
  if (!(void)v119) {
    uint64_t v77 = _swiftEmptyArrayStorage;
  }
  BOOL v78 = v117;
  BOOL v79 = v118;
  *(void *)((char *)v118 + v117[11]) = v77;
  sub_63BAC(&qword_3C80D8);
  uint64_t v80 = v98;
  sub_2E14D0();
  sub_18C820();
  uint64_t v81 = v100;
  uint64_t v82 = sub_2E14E0();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v80, v81);
  *(void *)((char *)v79 + v78[20]) = v82;
  *((unsigned char *)v79 + v78[21]) = 0;
  LOBYTE(v119) = 0;
  uint64_t v83 = sub_2E4E80();
  uint64_t v85 = v84;
  uint64_t v86 = (uint64_t *)v116;
  swift_bridgeObjectRelease();
  *uint64_t v86 = v83;
  v86[1] = v85;
  char v122 = 1;
  sub_B5948();
  sub_2E4EC0();
  long long v115 = v120;
  long long v116 = v119;
  uint64_t v87 = v121;
  uint64_t v88 = v114;
  sub_18C4D0(*v114, v114[1]);
  long long v89 = v115;
  *(_OWORD *)uint64_t v88 = v116;
  *((_OWORD *)v88 + 1) = v89;
  v88[4] = v87;
  uint64_t v90 = (uint64_t)v118;
  *((unsigned char *)v118 + v117[18]) = 0;
  uint64_t v91 = swift_bridgeObjectRetain();
  uint64_t v92 = sub_110F84(v91);
  swift_bridgeObjectRelease_n();
  *(void *)(v90 + v68) = v92;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v96, v112);
  v64(v94, v95);
  sub_18EF58(v90, v97, (uint64_t (*)(void))type metadata accessor for Page);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v113);
  return sub_18EEB0(v90, (uint64_t (*)(void))type metadata accessor for Page);
}

uint64_t sub_188500@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Page.init(from:)(a1, a2);
}

unint64_t sub_188518(unint64_t result)
{
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v2 = *(void *)(*(void *)v1 + 16);
      BOOL v3 = v2 >= result;
      uint64_t result = v2 - result;
      if (v3) {
        return sub_18BDC8(result, v2);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_188540(uint64_t a1, char a2)
{
  return sub_1888B0(a1, a2, &qword_3C7030);
}

uint64_t sub_18854C(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6E58);
  char v42 = a2;
  uint64_t v6 = sub_2E4E00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    uint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          BOOL v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 40 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    char v44 = *(unsigned char *)(v33 + 16);
    uint64_t v36 = *(void *)(v33 + 32);
    uint64_t v43 = *(void *)(v33 + 24);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 40 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(unsigned char *)(v19 + 16) = v44;
    *(void *)(v19 + 24) = v43;
    *(void *)(v19 + 32) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  BOOL v3 = v38;
  uint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_1888A4(uint64_t a1, char a2)
{
  return sub_1888B0(a1, a2, &qword_3C6F98);
}

uint64_t sub_1888B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_63BAC(a3);
  char v39 = a2;
  uint64_t v7 = sub_2E4E00();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_188BBC(uint64_t a1, int a2)
{
  BOOL v3 = v2;
  uint64_t v43 = sub_2DDEA0();
  uint64_t v5 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_63BAC(&qword_3C6E48);
  int v41 = a2;
  uint64_t result = sub_2E4E00();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    int64_t v37 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    char v39 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    char v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v20 >= v38) {
          goto LABEL_34;
        }
        unint64_t v21 = v39[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v21 = v39[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                BOOL v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              BOOL v3 = v37;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v10 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v21 = v39[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = *(void *)(v7 + 56);
      uint64_t v24 = v7;
      Swift::UInt v25 = *(unsigned __int8 *)(*(void *)(v7 + 48) + v19);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      uint64_t v28 = v23 + v27 * v19;
      if (v41) {
        (*v15)(v42, v28, v43);
      }
      else {
        (*v40)(v42, v28, v43);
      }
      sub_2E51A0();
      sub_2E51B0(v25);
      uint64_t result = sub_2E51E0();
      uint64_t v29 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v9 + 48) + v17) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v9 + 56) + v27 * v17, v42, v43);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v26;
      uint64_t v7 = v24;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *BOOL v3 = v9;
  return result;
}

uint64_t sub_188F74(uint64_t a1, int a2)
{
  return sub_189004(a1, a2, type metadata accessor for GenreHighlight, &qword_3C71C0, type metadata accessor for GenreHighlight, type metadata accessor for GenreHighlight);
}

uint64_t sub_188FBC(uint64_t a1, int a2)
{
  return sub_189004(a1, a2, type metadata accessor for TopAuthorHighlightData, &qword_3C71B0, type metadata accessor for TopAuthorHighlightData, type metadata accessor for TopAuthorHighlightData);
}

uint64_t sub_189004(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v47 = a6;
  uint64_t v50 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v48 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = *v6;
  sub_63BAC(a4);
  int v49 = a2;
  uint64_t v14 = sub_2E4E00();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v46 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  char v44 = v6;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45) {
      break;
    }
    uint64_t v28 = v46;
    unint64_t v29 = v46[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v29 = v46[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v44;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v45) {
              goto LABEL_34;
            }
            unint64_t v29 = v46[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_22:
    unint64_t v31 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v26);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v48 + 72);
    uint64_t v35 = *(void *)(v13 + 56) + v34 * v26;
    if (v49)
    {
      sub_18EFC0(v35, (uint64_t)v12, v50);
    }
    else
    {
      sub_18EF58(v35, (uint64_t)v12, v47);
      swift_bridgeObjectRetain();
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v36 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v23 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v24 = (void *)(*(void *)(v15 + 48) + 16 * v23);
    void *v24 = v33;
    v24[1] = v32;
    uint64_t result = sub_18EFC0((uint64_t)v12, *(void *)(v15 + 56) + v34 * v23, v50);
    ++*(void *)(v15 + 16);
  }
  swift_release();
  uint64_t v8 = v44;
  uint64_t v28 = v46;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v13 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v43;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v8 = v15;
  return result;
}

uint64_t sub_1893BC(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6F30);
  char v37 = a2;
  uint64_t v6 = sub_2E4E00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          BOOL v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  BOOL v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_1896C8(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3CD928);
  char v38 = a2;
  uint64_t v6 = sub_2E4E00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((v38 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (v38)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v41 = *(void *)(v25 + 32);
      long long v39 = v26;
      long long v40 = v27;
    }
    else
    {
      sub_65D0C(v25, (uint64_t)&v39);
    }
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    uint64_t result = sub_2E4BF0(*(void *)(v7 + 40));
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v39;
    long long v18 = v40;
    *(void *)(v16 + 32) = v41;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v28;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_1899D0(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6F90);
  char v35 = a2;
  uint64_t v6 = sub_2E4E00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    long long v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_64F80(v22, v36);
    }
    else
    {
      sub_65C98((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_2E4420();
    sub_2E51A0();
    sub_2E44A0();
    Swift::Int v24 = sub_2E51E0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_64F80(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  long long v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_189D0C(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6EC8);
  uint64_t result = sub_2E4E00();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v16 >= v29) {
          goto LABEL_34;
        }
        unint64_t v17 = v30[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v29) {
            goto LABEL_34;
          }
          unint64_t v17 = v30[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v29)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                BOOL v3 = v2;
                goto LABEL_41;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v30 = -1 << v28;
              }
              BOOL v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v30[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v29) {
                  goto LABEL_34;
                }
                unint64_t v17 = v30[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      Swift::UInt v19 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v15);
      int64_t v20 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2) {
        sub_65CF4(v20, (uint64_t)v31);
      }
      else {
        sub_66310((uint64_t)v20, (uint64_t)v31);
      }
      sub_2E51A0();
      sub_2E51B0(v19);
      uint64_t result = sub_2E51E0();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
      uint64_t result = sub_65CF4(v31, *(void *)(v7 + 56) + 40 * v13);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_189FEC(uint64_t a1, char a2)
{
  return sub_18A04C(a1, a2, &qword_3C6EF0, (void (*)(uint64_t, unsigned char *))sub_65CF4);
}

uint64_t sub_18A00C(uint64_t a1, char a2)
{
  return sub_18A62C(a1, a2, &qword_3C6D78, (void (*)(uint64_t, unsigned char *))sub_64F80);
}

uint64_t sub_18A02C(uint64_t a1, char a2)
{
  return sub_18A04C(a1, a2, &qword_3C7158, (void (*)(uint64_t, unsigned char *))sub_65CF4);
}

uint64_t sub_18A04C(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_63BAC(a3);
  char v38 = a2;
  uint64_t v9 = sub_2E4E00();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      char v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_66310(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_2E51A0();
      sub_2E44A0();
      uint64_t result = sub_2E51E0();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      void *v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_18A36C(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = sub_63BAC(&qword_3C7138);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_63BAC(&qword_3CDB28);
  uint64_t v10 = (void *)sub_2E4E00();
  if (*(void *)(v9 + 16))
  {
    uint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                BOOL v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              BOOL v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_71900(v24, (uint64_t)v8, &qword_3C7138);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_66444(v24, (uint64_t)v8, &qword_3C7138);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_18B248((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *BOOL v3 = v10;
  return result;
}

uint64_t sub_18A60C(uint64_t a1, char a2)
{
  return sub_18A62C(a1, a2, &qword_3C6EB8, (void (*)(uint64_t, unsigned char *))sub_64F80);
}

uint64_t sub_18A62C(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_63BAC(a3);
  char v39 = a2;
  uint64_t v9 = sub_2E4E00();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = (void *)(v8 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v16);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v16);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v8 + 56) + 32 * v20;
    if (v39)
    {
      a4(v28, v40);
    }
    else
    {
      sub_65C98(v28, (uint64_t)v40);
      swift_bridgeObjectRetain();
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    void *v18 = v27;
    v18[1] = v26;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v40, *(void *)(v10 + 56) + 32 * v17);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_18A95C(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6D70);
  char v42 = a2;
  uint64_t v6 = sub_2E4E00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          BOOL v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    char v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2E51A0();
    sub_2E44A0();
    uint64_t result = sub_2E51E0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  BOOL v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_18AC84(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3C6D68);
  uint64_t result = sub_2E4E00();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                BOOL v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v33;
              }
              BOOL v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v22 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      int64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v18);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      sub_2E51A0();
      sub_2E51B0(v22);
      uint64_t result = sub_2E51E0();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
      unint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v15);
      *unint64_t v16 = v25;
      v16[1] = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_18AF58(uint64_t a1, char a2)
{
  BOOL v3 = v2;
  uint64_t v5 = *v2;
  sub_63BAC(&qword_3CDAF8);
  uint64_t result = sub_2E4E00();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v16 >= v29) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v29) {
            goto LABEL_36;
          }
          unint64_t v17 = v30[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v29)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                BOOL v3 = v2;
                goto LABEL_43;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              BOOL v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v30[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_45;
                }
                if (v8 >= v29) {
                  goto LABEL_36;
                }
                unint64_t v17 = v30[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      Swift::UInt v19 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_2E51A0();
      if (v19 == 9)
      {
        sub_2E51C0(0);
      }
      else
      {
        sub_2E51C0(1u);
        sub_2E51B0(v19);
      }
      uint64_t result = sub_2E51E0();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_43:
  *BOOL v3 = v7;
  return result;
}

uint64_t sub_18B248(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_2DDEA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_63BAC(&qword_3C7138);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  unint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E51A0();
  sub_66444(a1, (uint64_t)v13, &qword_3C7138);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_2E51C0(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_2E51C0(1u);
    sub_18EF10(&qword_3C7140, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_2E4390();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_2E51E0();
  unint64_t v14 = sub_2E4BD0();
  *(void *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  uint64_t result = sub_71900(a1, a3[6] + *(void *)(v11 + 72) * v14, &qword_3C7138);
  *(void *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_18B4E0(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *BOOL v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_5E2C0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *BOOL v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[40 * a1 + 32];
  sub_63BAC(&qword_3C7120);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = *((void *)v5 + 2);
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    int64_t v18 = (char *)(v14 + 40);
    Swift::UInt v19 = &v5[40 * a2 + 32];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = *((void *)v5 + 2);
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      *((void *)v5 + 2) = v21;
LABEL_20:
      sub_66310(a3, v14);
      return sub_662B4(a3, &qword_3CDB38);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

char *sub_18B690(uint64_t a1)
{
  return sub_5DEB0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18B6A4(unint64_t a1)
{
  return sub_5E5C4(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_18B6B8(uint64_t a1)
{
  return sub_5E5F8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18B6CC(unint64_t a1)
{
  return sub_5E60C(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_18B6E0(uint64_t a1)
{
  return sub_5E480(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18B6F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_71088((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_65CF4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_18B78C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_390940;
  v6._object = a2;
  unint64_t v4 = sub_2E4E50(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xF) {
    return 15;
  }
  else {
    return v4;
  }
}

unint64_t sub_18B7D8()
{
  unint64_t result = qword_3CD8F8;
  if (!qword_3CD8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD8F8);
  }
  return result;
}

uint64_t sub_18B82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_18B890(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v57 = (uint64_t)&v53 - v8;
  __chkstk_darwin(v7);
  uint64_t v60 = (uint64_t *)((char *)&v53 - v10);
  unint64_t v11 = *a1;
  uint64_t v12 = *(void *)(*a1 + 16);
  if (!v12) {
    return 0;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v55 = v11 + v13;
  uint64_t v61 = *(void *)(v9 + 72);
  uint64_t v62 = a2 + 56;
  swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  uint64_t v56 = a1;
  unint64_t v59 = v13;
  uint64_t v54 = v12;
  while (1)
  {
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
    uint64_t v15 = (uint64_t *)(v55 + v61 * v14);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_2E51A0();
    swift_bridgeObjectRetain();
    sub_2E44A0();
    Swift::Int v18 = sub_2E51E0();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if ((*(void *)(v62 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20)) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v12 = v54;
LABEL_4:
    if (++v14 == v12)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v11 + 16);
    }
  }
  uint64_t v21 = *(void *)(a2 + 48);
  unint64_t v22 = (void *)(v21 + 16 * v20);
  BOOL v23 = *v22 == v17 && v22[1] == v16;
  if (!v23 && (sub_2E5020() & 1) == 0)
  {
    uint64_t v24 = ~v19;
    for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
    {
      uint64_t v26 = i & v24;
      if (((*(void *)(v62 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
        break;
      }
      uint64_t v27 = (void *)(v21 + 16 * v26);
      BOOL v28 = *v27 == v17 && v27[1] == v16;
      if (v28 || (sub_2E5020() & 1) != 0) {
        goto LABEL_20;
      }
    }
    goto LABEL_3;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v30 = v14 + 1;
  BOOL v31 = v56;
  unint64_t v32 = v59;
  if (__OFADD__(v14, 1)) {
    goto LABEL_65;
  }
  unint64_t v33 = *(void *)(v11 + 16);
  if (v30 == v33) {
    return v14;
  }
  char v34 = v60;
  while (2)
  {
    if (v30 < v33)
    {
      unint64_t v35 = v11 + v32;
      uint64_t v36 = v30 * v61;
      sub_18EF58(v35 + v30 * v61, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for Shelf);
      if (*(void *)(a2 + 16))
      {
        uint64_t v38 = *v34;
        uint64_t v37 = v34[1];
        sub_2E51A0();
        swift_bridgeObjectRetain();
        sub_2E44A0();
        Swift::Int v39 = sub_2E51E0();
        uint64_t v40 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v41 = v39 & ~v40;
        if ((*(void *)(v62 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41))
        {
          uint64_t v42 = *(void *)(a2 + 48);
          uint64_t v43 = (void *)(v42 + 16 * v41);
          BOOL v44 = *v43 == v38 && v43[1] == v37;
          if (v44 || (sub_2E5020() & 1) != 0)
          {
LABEL_31:
            swift_bridgeObjectRelease();
            char v34 = v60;
            uint64_t result = sub_18EEB0((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for Shelf);
            BOOL v31 = v56;
            unint64_t v32 = v59;
LABEL_51:
            BOOL v52 = __OFADD__(v30++, 1);
            if (v52) {
              goto LABEL_58;
            }
            unint64_t v11 = *v31;
            unint64_t v33 = *(void *)(*v31 + 16);
            if (v30 == v33) {
              return v14;
            }
            continue;
          }
          uint64_t v45 = ~v40;
          while (1)
          {
            unint64_t v41 = (v41 + 1) & v45;
            if (((*(void *)(v62 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
              break;
            }
            uint64_t v46 = (void *)(v42 + 16 * v41);
            BOOL v47 = *v46 == v38 && v46[1] == v37;
            if (v47 || (sub_2E5020() & 1) != 0) {
              goto LABEL_31;
            }
          }
        }
        swift_bridgeObjectRelease();
        BOOL v31 = v56;
        unint64_t v32 = v59;
        char v34 = v60;
      }
      uint64_t result = sub_18EEB0((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for Shelf);
      if (v14 != v30)
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        unint64_t v48 = *v31;
        unint64_t v49 = *(void *)(*v31 + 16);
        if (v14 >= v49) {
          goto LABEL_61;
        }
        unint64_t v50 = v48 + v32;
        uint64_t v51 = v14 * v61;
        uint64_t result = sub_18EF58(v50 + v14 * v61, v57, (uint64_t (*)(void))type metadata accessor for Shelf);
        if (v30 >= v49) {
          goto LABEL_62;
        }
        sub_18EF58(v50 + v36, v58, (uint64_t (*)(void))type metadata accessor for Shelf);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *BOOL v31 = v48;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_18B6A4(v48);
          unint64_t v48 = result;
          *BOOL v31 = result;
        }
        unint64_t v32 = v59;
        if (v14 >= *(void *)(v48 + 16)) {
          goto LABEL_63;
        }
        uint64_t result = sub_18B82C(v58, v48 + v59 + v51);
        if (v30 >= *(void *)(*v31 + 16)) {
          goto LABEL_64;
        }
        uint64_t result = sub_18B82C(v57, *v31 + v32 + v36);
        char v34 = v60;
      }
      BOOL v52 = __OFADD__(v14++, 1);
      if (v52) {
        goto LABEL_59;
      }
      goto LABEL_51;
    }
    break;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_18BDC8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_5E5C4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Shelf() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *unint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

uint64_t sub_18BFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3CBD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C07C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_5E5F8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_63BAC(&qword_3C6F40);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = &v4[40 * a2 + 32];
    if (a1 != a2 || &v4[40 * a1 + 32] >= &v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[40 * a1 + 32], v16, 40 * v15);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      *unint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2E4E20();
  __break(1u);
  return result;
}

void *sub_18C1FC(void *result, char a2, void *a3)
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v8 = result[4];
    uint64_t v7 = result[5];
    uint64_t v44 = result[6];
    int64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_5F740(v8, v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_1893BC(v14, a2 & 1);
      unint64_t v16 = sub_5F740(v8, v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_27:
        uint64_t result = (void *)sub_2E50E0();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v19 = 8 * v11;
      uint64_t v20 = *(void *)(v18[7] + 8 * v11);
      swift_bridgeObjectRelease();
      *(void *)(v18[7] + v19) = v20;
      uint64_t v21 = v3 - 1;
      if (v3 == 1) {
        return (void *)swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = v6 + 9; ; i += 3)
      {
        uint64_t v30 = *(i - 2);
        uint64_t v29 = *(i - 1);
        uint64_t v31 = *i;
        unint64_t v32 = (void *)*a3;
        swift_bridgeObjectRetain();
        unint64_t v33 = sub_5F740(v30, v29);
        uint64_t v35 = v32[2];
        BOOL v36 = (v34 & 1) == 0;
        BOOL v24 = __OFADD__(v35, v36);
        uint64_t v37 = v35 + v36;
        if (v24) {
          break;
        }
        char v38 = v34;
        if (v32[3] < v37)
        {
          sub_1893BC(v37, 1);
          unint64_t v33 = sub_5F740(v30, v29);
          if ((v38 & 1) != (v39 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v40 = (void *)*a3;
        if (v38)
        {
          uint64_t v27 = 8 * v33;
          uint64_t v28 = *(void *)(v40[7] + 8 * v33);
          swift_bridgeObjectRelease();
          *(void *)(v40[7] + v27) = v28;
        }
        else
        {
          v40[(v33 >> 6) + 8] |= 1 << v33;
          unint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
          *unint64_t v41 = v30;
          v41[1] = v29;
          *(void *)(v40[7] + 8 * v33) = v31;
          uint64_t v42 = v40[2];
          BOOL v24 = __OFADD__(v42, 1);
          uint64_t v43 = v42 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v40[2] = v43;
        }
        if (!--v21) {
          return (void *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_62994();
      uint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    BOOL v22 = (uint64_t *)(v18[6] + 16 * v11);
    *BOOL v22 = v8;
    v22[1] = v7;
    *(void *)(v18[7] + 8 * v11) = v44;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v18[2] = v25;
    uint64_t v21 = v3 - 1;
    if (v3 == 1) {
      return (void *)swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_18C48C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_18C4D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_18C514()
{
  unint64_t result = qword_3CD950;
  if (!qword_3CD950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD950);
  }
  return result;
}

unint64_t sub_18C568()
{
  unint64_t result = qword_3CD978;
  if (!qword_3CD978)
  {
    sub_70ECC((uint64_t *)&unk_3CE220);
    sub_18EF10(&qword_3CD980, (void (*)(uint64_t))&type metadata accessor for PageMetrics);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD978);
  }
  return result;
}

unint64_t sub_18C60C()
{
  unint64_t result = qword_3CD988;
  if (!qword_3CD988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD988);
  }
  return result;
}

unint64_t sub_18C660()
{
  unint64_t result = qword_3CD9A0;
  if (!qword_3CD9A0)
  {
    sub_70ECC(&qword_3CD9A8);
    sub_18EF10(&qword_3CD9B0, (void (*)(uint64_t))type metadata accessor for Shelf);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD9A0);
  }
  return result;
}

uint64_t sub_18C704(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_70ECC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18C77C()
{
  unint64_t result = qword_3CD9C8;
  if (!qword_3CD9C8)
  {
    sub_70ECC(&qword_3CD9D0);
    sub_18EF10(&qword_3CD9D8, (void (*)(uint64_t))&type metadata accessor for ToolbarItemType);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD9C8);
  }
  return result;
}

unint64_t sub_18C820()
{
  unint64_t result = qword_3CC458;
  if (!qword_3CC458)
  {
    sub_70ECC(&qword_3CC450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CC458);
  }
  return result;
}

unint64_t sub_18C880()
{
  unint64_t result = qword_3CD9E0;
  if (!qword_3CD9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD9E0);
  }
  return result;
}

unint64_t sub_18C8D8()
{
  unint64_t result = qword_3CD9E8;
  if (!qword_3CD9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CD9E8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Page(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    int64_t v9 = (char *)a1 + v8;
    char v10 = &a2[v8];
    uint64_t v11 = sub_2DF5D0();
    uint64_t v12 = *(void *)(v11 - 8);
    BOOL v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_63BAC(&qword_3C97E8);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    char v17 = (char *)v4 + v16;
    uint64_t v18 = &a2[v16];
    if (v13(&a2[v16], 1, v11))
    {
      uint64_t v19 = sub_63BAC(&qword_3C97E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    *((unsigned char *)v4 + a3[7]) = a2[a3[7]];
    *((unsigned char *)v4 + v20) = a2[v20];
    uint64_t v21 = a3[9];
    BOOL v22 = (char *)v4 + v21;
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_2E0980();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_63BAC(&qword_3CB0B8);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)&a2[a3[10]];
    *(void *)((char *)v4 + v27) = *(void *)&a2[v27];
    uint64_t v28 = a3[13];
    *((unsigned char *)v4 + a3[12]) = a2[a3[12]];
    *(void *)((char *)v4 + v28) = *(void *)&a2[v28];
    uint64_t v29 = a3[14];
    uint64_t v30 = a3[15];
    uint64_t v31 = (void *)((char *)v4 + v29);
    unint64_t v32 = &a2[v29];
    uint64_t v33 = *((void *)v32 + 1);
    *uint64_t v31 = *(void *)v32;
    v31[1] = v33;
    uint64_t v53 = (char *)v4 + v30;
    uint64_t v54 = &a2[v30];
    uint64_t v34 = sub_2DE7F0();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v53, v54, v34);
    uint64_t v36 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(void *)&a2[a3[16]];
    uint64_t v37 = (char *)v4 + v36;
    char v38 = &a2[v36];
    uint64_t v39 = sub_2E38D0();
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    v40(v37, v38, v39);
    uint64_t v41 = a3[19];
    *((unsigned char *)v4 + a3[18]) = a2[a3[18]];
    *(void *)((char *)v4 + v41) = *(void *)&a2[v41];
    uint64_t v42 = a3[21];
    *(void *)((char *)v4 + a3[20]) = *(void *)&a2[a3[20]];
    *((unsigned char *)v4 + v42) = a2[v42];
    uint64_t v43 = a3[22];
    uint64_t v44 = a3[23];
    uint64_t v45 = (void *)((char *)v4 + v43);
    uint64_t v46 = &a2[v43];
    uint64_t v47 = *((void *)v46 + 1);
    void *v45 = *(void *)v46;
    v45[1] = v47;
    unint64_t v48 = (char *)v4 + v44;
    unint64_t v49 = &a2[v44];
    uint64_t v50 = *(void *)&a2[v44 + 8];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)unint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((void *)v48 + 4) = *((void *)v49 + 4);
    }
  }
  return v4;
}

uint64_t destroy for Page(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_2DF5D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = sub_2E0980();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[15];
  uint64_t v13 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[17];
  uint64_t v15 = sub_2E38D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[23] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for Page(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_63BAC(&qword_3C97E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  *((unsigned char *)a1 + v18) = a2[v18];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_2E0980();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_63BAC(&qword_3CB0B8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)&a2[a3[10]];
  *(void *)((char *)a1 + v25) = *(void *)&a2[v25];
  uint64_t v26 = a3[13];
  *((unsigned char *)a1 + a3[12]) = a2[a3[12]];
  *(void *)((char *)a1 + v26) = *(void *)&a2[v26];
  uint64_t v27 = a3[14];
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = &a2[v27];
  uint64_t v31 = *((void *)v30 + 1);
  *uint64_t v29 = *(void *)v30;
  v29[1] = v31;
  long long v51 = (char *)a1 + v28;
  BOOL v52 = &a2[v28];
  uint64_t v32 = sub_2DE7F0();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v51, v52, v32);
  uint64_t v34 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)&a2[a3[16]];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = &a2[v34];
  uint64_t v37 = sub_2E38D0();
  char v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  v38(v35, v36, v37);
  uint64_t v39 = a3[19];
  *((unsigned char *)a1 + a3[18]) = a2[a3[18]];
  *(void *)((char *)a1 + v39) = *(void *)&a2[v39];
  uint64_t v40 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)&a2[a3[20]];
  *((unsigned char *)a1 + v40) = a2[v40];
  uint64_t v41 = a3[22];
  uint64_t v42 = a3[23];
  uint64_t v43 = (void *)((char *)a1 + v41);
  uint64_t v44 = &a2[v41];
  uint64_t v45 = *((void *)v44 + 1);
  *uint64_t v43 = *(void *)v44;
  v43[1] = v45;
  uint64_t v46 = (char *)a1 + v42;
  uint64_t v47 = &a2[v42];
  uint64_t v48 = *(void *)&a2[v42 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    *((_OWORD *)v46 + 1) = *((_OWORD *)v47 + 1);
    *((void *)v46 + 4) = *((void *)v47 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v49 = *((_OWORD *)v47 + 1);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v49;
    *((void *)v46 + 4) = *((void *)v47 + 4);
  }
  return a1;
}

char *assignWithCopy for Page(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DF5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_63BAC(&qword_3C97E8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_63BAC(&qword_3C97E8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  a1[a3[7]] = *((unsigned char *)a2 + a3[7]);
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_2E0980();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    uint64_t v29 = sub_63BAC(&qword_3CB0B8);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[12]] = *((unsigned char *)a2 + a3[12]);
  *(void *)&a1[a3[13]] = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[14];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (void *)((char *)a2 + v30);
  *(void *)uint64_t v31 = *v32;
  *((void *)v31 + 1) = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[15];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[17];
  char v38 = &a1[v37];
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  a1[a3[18]] = *((unsigned char *)a2 + a3[18]);
  *(void *)&a1[a3[19]] = *(void *)((char *)a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)((char *)a2 + a3[20]);
  swift_retain();
  swift_release();
  a1[a3[21]] = *((unsigned char *)a2 + a3[21]);
  uint64_t v41 = a3[22];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = (void *)((char *)a2 + v41);
  *(void *)uint64_t v42 = *v43;
  *((void *)v42 + 1) = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[23];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v47 = *(void *)&a1[v44 + 8];
  uint64_t v48 = v46[1];
  if (v47)
  {
    if (v48)
    {
      *(void *)uint64_t v45 = *v46;
      *((void *)v45 + 1) = v46[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v45 + 2) = v46[2];
      *((void *)v45 + 3) = v46[3];
      *((void *)v45 + 4) = v46[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B0F2C((uint64_t)v45);
      uint64_t v49 = v46[4];
      long long v50 = *((_OWORD *)v46 + 1);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v50;
      *((void *)v45 + 4) = v49;
    }
  }
  else if (v48)
  {
    *(void *)uint64_t v45 = *v46;
    *((void *)v45 + 1) = v46[1];
    *((void *)v45 + 2) = v46[2];
    *((void *)v45 + 3) = v46[3];
    *((void *)v45 + 4) = v46[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)v46;
    long long v52 = *((_OWORD *)v46 + 1);
    *((void *)v45 + 4) = v46[4];
    *(_OWORD *)uint64_t v45 = v51;
    *((_OWORD *)v45 + 1) = v52;
  }
  return a1;
}

_OWORD *initializeWithTake for Page(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_2DF5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_63BAC(&qword_3C97E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_63BAC(&qword_3C97E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  *((unsigned char *)a1 + v17) = a2[v17];
  uint64_t v18 = a3[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_2E0980();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_63BAC(&qword_3CB0B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)&a2[a3[10]];
  *(void *)((char *)a1 + v24) = *(void *)&a2[v24];
  uint64_t v25 = a3[13];
  *((unsigned char *)a1 + a3[12]) = a2[a3[12]];
  *(void *)((char *)a1 + v25) = *(void *)&a2[v25];
  uint64_t v26 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  int v27 = (char *)a1 + v26;
  int v28 = &a2[v26];
  uint64_t v29 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)&a2[a3[16]];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  uint64_t v34 = a3[19];
  *((unsigned char *)a1 + a3[18]) = a2[a3[18]];
  *(void *)((char *)a1 + v34) = *(void *)&a2[v34];
  uint64_t v35 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)&a2[a3[20]];
  *((unsigned char *)a1 + v35) = a2[v35];
  uint64_t v36 = a3[23];
  *(_OWORD *)((char *)a1 + a3[22]) = *(_OWORD *)&a2[a3[22]];
  uint64_t v37 = (char *)a1 + v36;
  char v38 = &a2[v36];
  *((void *)v37 + 4) = *((void *)v38 + 4);
  long long v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v39;
  return a1;
}

char *assignWithTake for Page(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2DF5D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_63BAC(&qword_3C97E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12(&a1[v16], 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_63BAC(&qword_3C97E8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  a1[a3[7]] = *((unsigned char *)a2 + a3[7]);
  a1[v22] = *((unsigned char *)a2 + v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_2E0980();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_18:
    uint64_t v31 = sub_63BAC(&qword_3CB0B8);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_19:
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  a1[a3[12]] = *((unsigned char *)a2 + a3[12]);
  *(void *)&a1[v32] = *(void *)((char *)a2 + v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[14];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[15];
  long long v39 = &a1[v38];
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[17];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_2E38D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  uint64_t v46 = a3[19];
  a1[a3[18]] = *((unsigned char *)a2 + a3[18]);
  *(void *)&a1[v46] = *(void *)((char *)a2 + v46);
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)((char *)a2 + a3[20]);
  swift_release();
  uint64_t v47 = a3[22];
  a1[a3[21]] = *((unsigned char *)a2 + a3[21]);
  uint64_t v48 = &a1[v47];
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *(void *)uint64_t v48 = v51;
  *((void *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[23];
  uint64_t v53 = (uint64_t)&a1[v52];
  uint64_t v54 = (char *)a2 + v52;
  if (!*(void *)&a1[v52 + 8])
  {
LABEL_23:
    long long v57 = *((_OWORD *)v54 + 1);
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    *(_OWORD *)(v53 + 16) = v57;
    *(void *)(v53 + 32) = *((void *)v54 + 4);
    return a1;
  }
  uint64_t v55 = *((void *)v54 + 1);
  if (!v55)
  {
    sub_B0F2C(v53);
    goto LABEL_23;
  }
  *(void *)uint64_t v53 = *(void *)v54;
  *(void *)(v53 + 8) = v55;
  swift_bridgeObjectRelease();
  *(void *)(v53 + 16) = *((void *)v54 + 2);
  uint64_t v56 = *((void *)v54 + 4);
  *(void *)(v53 + 24) = *((void *)v54 + 3);
  *(void *)(v53 + 32) = v56;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Page(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18E4C8);
}

uint64_t sub_18E4C8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_63BAC(&qword_3C97E8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_63BAC(&qword_3CB0B8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  uint64_t v13 = sub_2DE7F0();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[15];
    goto LABEL_11;
  }
  uint64_t v15 = sub_2E38D0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[17];

  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for Page(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18E6A8);
}

uint64_t sub_18E6A8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_63BAC(&qword_3C97E8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_63BAC(&qword_3CB0B8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t v13 = sub_2DE7F0();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[15];
    goto LABEL_9;
  }
  uint64_t v15 = sub_2E38D0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[17];

  return v16(v18, a2, a2, v17);
}

void sub_18E874()
{
  sub_18EA54(319, (unint64_t *)&qword_3CC720, (void (*)(uint64_t))&type metadata accessor for LocalizerRequest);
  if (v0 <= 0x3F)
  {
    sub_18EA54(319, (unint64_t *)&unk_3CDA58, (void (*)(uint64_t))&type metadata accessor for ToolbarPrincipalType);
    if (v1 <= 0x3F)
    {
      sub_2DE7F0();
      if (v2 <= 0x3F)
      {
        sub_2E38D0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_18EA54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2E4B10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for Page.StackType()
{
  return &type metadata for Page.StackType;
}

unsigned char *_s11BookStoreUI4PageV9StackTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18EB88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Page.UpdateError()
{
  return &type metadata for Page.UpdateError;
}

uint64_t getEnumTagSinglePayload for Page.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Page.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18ED1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Page.CodingKeys()
{
  return &type metadata for Page.CodingKeys;
}

unint64_t sub_18ED58()
{
  unint64_t result = qword_3CDAD0;
  if (!qword_3CDAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDAD0);
  }
  return result;
}

unint64_t sub_18EDB0()
{
  unint64_t result = qword_3CDAD8;
  if (!qword_3CDAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDAD8);
  }
  return result;
}

unint64_t sub_18EE08()
{
  unint64_t result = qword_3CDAE0;
  if (!qword_3CDAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDAE0);
  }
  return result;
}

unint64_t sub_18EE5C()
{
  unint64_t result = qword_3CDAF0;
  if (!qword_3CDAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDAF0);
  }
  return result;
}

uint64_t sub_18EEB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18EF10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EF58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_18EFC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18F028(uint64_t a1)
{
  return sub_18F070(a1, qword_3EE180);
}

uint64_t sub_18F04C(uint64_t a1)
{
  return sub_18F070(a1, qword_3EE198);
}

uint64_t sub_18F070(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2E1640();
  sub_65DBC(v3, a2);
  sub_58BA0(v3, (uint64_t)a2);
  return sub_2E1650();
}

uint64_t sub_18F0D0(uint64_t a1, uint64_t a2)
{
  return sub_18F120(a1, a2, (uint64_t)&unk_396088, (uint64_t)sub_18F684, (uint64_t)&unk_3960A0);
}

uint64_t sub_18F0F8(uint64_t a1, uint64_t a2)
{
  return sub_18F120(a1, a2, (uint64_t)&unk_396038, (uint64_t)sub_18F684, (uint64_t)&unk_396050);
}

uint64_t sub_18F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v42 = a1;
  uint64_t v49 = sub_2E35E0();
  uint64_t v52 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E3600();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2E1A70();
  uint64_t v8 = *(void *)(v37 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E1660();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_2E3620();
  uint64_t v14 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v38 = (char *)&v34 - v18;
  sub_18F640();
  uint64_t v40 = sub_2E4970();
  sub_2E3610();
  sub_2E3640();
  int v19 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v39 = v14 + 8;
  uint64_t v41 = v19;
  int v20 = v16;
  uint64_t v21 = v35;
  v19(v20, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v42, v10);
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v36, v43, v37);
  unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v25 = (v12 + *(unsigned __int8 *)(v8 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v24, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v26 + v25, v22, v23);
  aBlock[4] = v46;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_74DF8;
  aBlock[3] = v47;
  uint64_t v27 = _Block_copy(aBlock);
  swift_release();
  int v28 = v45;
  sub_2E35F0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_165C00();
  sub_63BAC(&qword_3CCE10);
  sub_165C58();
  int v30 = v48;
  uint64_t v29 = v49;
  sub_2E4BB0();
  uint64_t v31 = v38;
  uint64_t v32 = (void *)v40;
  sub_2E4950();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v51);
  return v41(v31, v21);
}

unint64_t sub_18F640()
{
  unint64_t result = qword_3C7CF8;
  if (!qword_3C7CF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_3C7CF8);
  }
  return result;
}

uint64_t sub_18F688(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_18F698()
{
  return swift_release();
}

uint64_t sub_18F6A4()
{
  uint64_t v1 = sub_2E1660();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_2E1A70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_18F7F4()
{
  return sub_2E1630();
}

unsigned char *storeEnumTagSinglePayload for PageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18F98CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageError()
{
  return &type metadata for PageError;
}

void *sub_18F9C4(void *a1, uint64_t *a2, int *a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    int v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    swift_errorRetain();
    *int v3 = v5;
    *((unsigned char *)v3 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2[3];
    v3[2] = a2[2];
    v3[3] = v8;
    v3[4] = a2[4];
    uint64_t v9 = a3[8];
    uint64_t v10 = (void *)((char *)v3 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[9];
    uint64_t v14 = (void *)((char *)v3 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_2DFFB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)v3 + v17;
    int v19 = (char *)a2 + v17;
    char *v18 = *v19;
    *((void *)v18 + 1) = *((void *)v19 + 1);
  }
  swift_retain();
  return v3;
}

uint64_t sub_18FBC0(uint64_t a1, uint64_t a2)
{
  swift_errorRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2DFFB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_18FCF8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  swift_errorRetain();
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = a2[4];
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)((char *)a2 + v8);
  swift_retain();
  swift_retain();
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_2E01B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_2DFFB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    void *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t)a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_18FEA8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  swift_errorRetain();
  *(void *)a1 = v6;
  swift_errorRelease();
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_662B4(a1 + v8, &qword_3C8180);
    sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_2E01B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_662B4(a1 + v12, &qword_3C82B0);
    sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_2DFFB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t)a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1900A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_2E01B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_2DFFB0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_190250(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_errorRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[8];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_662B4(a1 + v6, &qword_3C8180);
    uint64_t v9 = sub_63BAC(&qword_3C8180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_2E01B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = a3[9];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_662B4(a1 + v11, &qword_3C82B0);
    uint64_t v14 = sub_63BAC(&qword_3C82B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_2DFFB0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  return a1;
}

uint64_t sub_190450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_190464);
}

uint64_t sub_190464(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C81D0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3C8BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_190598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1905AC);
}

void *sub_1905AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C81D0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_63BAC(&qword_3C8BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for PageErrorView()
{
  uint64_t result = qword_3CDB98;
  if (!qword_3CDB98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_19072C()
{
  sub_190864(319, (unint64_t *)&qword_3C8240, (void (*)(uint64_t))&type metadata accessor for SizeConstants);
  if (v0 <= 0x3F)
  {
    sub_190864(319, &qword_3C8C48, (void (*)(uint64_t))&type metadata accessor for FontConstants);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_190864(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2E1610();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1908B8()
{
  uint64_t v0 = sub_2E3FA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2E3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E3E00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizerLookupStrategy.default(_:), v0);
  sub_2DF590();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_190C78@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2E3FA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E3E10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      uint64_t v12 = sub_2DF5D0();
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
      uint64_t result = v13(a2, 1, 1, v12);
      break;
    default:
      sub_2E3E00();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizerLookupStrategy.default(_:), v4);
      sub_2DF590();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v15 = sub_2DF5D0();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
      break;
  }
  return result;
}

unint64_t sub_191088@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_19671C(*a1);
  *a2 = result;
  return result;
}

void sub_1910B4(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1910C4()
{
  unint64_t result = qword_3CDBE8;
  if (!qword_3CDBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDBE8);
  }
  return result;
}

uint64_t sub_191118(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_196674();
  unint64_t v5 = sub_1966C8();

  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_191170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19118C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v85 = a1;
  uint64_t v84 = type metadata accessor for PageViewEventViewModifier();
  __chkstk_darwin(v84);
  uint64_t v73 = (uint64_t *)((char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_63BAC(&qword_3CB8D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v80 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E12F0();
  uint64_t v78 = *(void *)(v6 - 8);
  uint64_t v79 = v6;
  __chkstk_darwin(v6);
  char v76 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E38D0();
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v87 = (char *)&v65 - v11;
  uint64_t v12 = sub_2DE7F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v65 - v16;
  uint64_t v17 = sub_2DE2B0();
  uint64_t v68 = *(void *)(v17 - 8);
  uint64_t v69 = v17;
  __chkstk_darwin(v17);
  int v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_63BAC((uint64_t *)&unk_3CE210);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  unint64_t v25 = (char *)&v65 - v24;
  uint64_t v67 = sub_63BAC(&qword_3CDBF0);
  __chkstk_darwin(v67);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_63BAC(&qword_3CDBF8);
  uint64_t v74 = *(void *)(v28 - 8);
  uint64_t v75 = v28;
  __chkstk_darwin(v28);
  int v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_63BAC(&qword_3CDC00);
  __chkstk_darwin(v71);
  uint64_t v72 = (char *)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v27 = sub_2E2290();
  *((void *)v27 + 1) = 0;
  unsigned char v27[16] = 0;
  uint64_t v32 = (uint64_t)&v27[*(int *)(sub_63BAC(&qword_3CDC08) + 44)];
  uint64_t v77 = v2;
  uint64_t v33 = v2;
  uint64_t v34 = v13;
  sub_191AFC(v33, v32);
  sub_2DE7C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
  sub_2DE2A0();
  sub_63BAC(&qword_3C9F58);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_2FEFE0;
  uint64_t v36 = (uint64_t *)(v35 + 32);
  sub_66444((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_3CE210);
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v12);
  uint64_t v66 = v34;
  if (v37 == 1)
  {
    sub_662B4((uint64_t)v22, (uint64_t *)&unk_3CE210);
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v35 + 48) = 0u;
    *(_OWORD *)(v35 + 64) = 0u;
    uint64_t v38 = v12;
  }
  else
  {
    *(void *)(v35 + 56) = v12;
    *(void *)(v35 + 64) = sub_196B54(&qword_3CA5F8, (void (*)(uint64_t))&type metadata accessor for PageData);
    *(void *)(v35 + 72) = sub_196B54(&qword_3CA600, (void (*)(uint64_t))&type metadata accessor for PageData);
    uint64_t v39 = sub_71088(v36);
    uint64_t v40 = v22;
    uint64_t v38 = v12;
    (*(void (**)(uint64_t *, char *, uint64_t))(v34 + 32))(v39, v40, v12);
  }
  sub_71AA4(&qword_3CDC10, &qword_3CDBF0);
  int v65 = v30;
  sub_2E2BF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v69);
  sub_662B4((uint64_t)v25, (uint64_t *)&unk_3CE210);
  sub_662B4((uint64_t)v27, &qword_3CDBF0);
  uint64_t v41 = *(void *)(v77 + 32);
  uint64_t v42 = v86;
  sub_2DE7C0();
  uint64_t v44 = v78;
  uint64_t v43 = v79;
  uint64_t v45 = v76;
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v76, enum case for Metrics.NavigationType.forward(_:), v79);
  uint64_t v46 = sub_2E4060();
  uint64_t v47 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v80, 1, 1, v46);
  uint64_t v48 = v87;
  sub_2E1200();
  sub_662B4(v47, &qword_3CB8D8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  uint64_t v49 = v66;
  uint64_t v50 = v70;
  uint64_t v51 = v42;
  uint64_t v52 = v38;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v70, v51, v38);
  uint64_t v54 = v81;
  uint64_t v53 = v82;
  uint64_t v55 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v81, v48, v83);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v57 = (uint64_t)v73;
  *uint64_t v73 = KeyPath;
  *(unsigned char *)(v57 + 8) = 0;
  *(void *)(v57 + 16) = v41;
  uint64_t v58 = v84;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v57 + *(int *)(v84 + 24), v50, v52);
  *(void *)(v57 + *(int *)(v58 + 28)) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v57 + *(int *)(v58 + 32), v54, v55);
  uint64_t v59 = (uint64_t)v72;
  sub_196320(v57, (uint64_t)&v72[*(int *)(v71 + 36)], (uint64_t (*)(void))type metadata accessor for PageViewEventViewModifier);
  uint64_t v61 = v74;
  uint64_t v60 = v75;
  uint64_t v62 = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v59, v65, v75);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v53 + 8);
  swift_retain();
  v63(v87, v55);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v86, v52);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
  return sub_71900(v59, v85, &qword_3CDC00);
}

uint64_t sub_191AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v247 = a2;
  uint64_t v233 = sub_2E0360();
  uint64_t v231 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  uint64_t v232 = (uint64_t *)((char *)&v180 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v230 = sub_2E3FA0();
  uint64_t v229 = *(void *)(v230 - 8);
  __chkstk_darwin(v230);
  uint64_t v226 = (char *)&v180 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = sub_2E3E10();
  uint64_t v224 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  long long v220 = (char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_2E03C0();
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  uint64_t v227 = (char *)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_2E03B0();
  uint64_t v212 = *(void *)(v213 - 8);
  __chkstk_darwin(v213);
  uint64_t v218 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_2E0370();
  uint64_t v209 = *(void *)(v210 - 8);
  __chkstk_darwin(v210);
  uint64_t v216 = (char *)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_2E03A0();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v215 = (char *)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_2E0380();
  uint64_t v205 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  uint64_t v214 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2E03D0();
  __chkstk_darwin(v11 - 8);
  uint64_t v211 = (char *)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_2DFB70();
  uint64_t v223 = *(void *)(v225 - 8);
  __chkstk_darwin(v225);
  uint64_t v219 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = sub_63BAC(&qword_3CDC18);
  uint64_t v245 = *(void *)(v266 - 8);
  __chkstk_darwin(v266);
  uint64_t v217 = (char *)&v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_63BAC(&qword_3CDC20);
  __chkstk_darwin(v15 - 8);
  uint64_t v246 = (uint64_t)&v180 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v259 = (char *)&v180 - v18;
  uint64_t v19 = sub_63BAC(&qword_3C82A8);
  __chkstk_darwin(v19 - 8);
  uint64_t v182 = (uint64_t)&v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = sub_63BAC(&qword_3CDC28);
  uint64_t v241 = *(void *)(v254 - 8);
  __chkstk_darwin(v254);
  uint64_t v181 = (uint64_t)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = type metadata accessor for PageErrorView();
  __chkstk_darwin(v269);
  uint64_t v237 = (char *)&v180 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_63BAC(&qword_3CDC30);
  __chkstk_darwin(v23 - 8);
  uint64_t v244 = (uint64_t)&v180 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v258 = (char *)&v180 - v26;
  uint64_t v257 = sub_63BAC(&qword_3C8398);
  uint64_t v248 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  uint64_t v256 = (char *)&v180 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = sub_2E0180();
  uint64_t v253 = *(void *)(v255 - 8);
  __chkstk_darwin(v255);
  uint64_t v252 = (char *)&v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_2E01B0();
  uint64_t v250 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v249 = (uint64_t)&v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_63BAC(&qword_3CDC38);
  __chkstk_darwin(v200);
  uint64_t v202 = (uint64_t)&v180 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_63BAC(&qword_3CDC40);
  __chkstk_darwin(v201);
  uint64_t v204 = (uint64_t)&v180 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_63BAC(&qword_3CDC48);
  uint64_t v236 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  uint64_t v203 = (uint64_t)&v180 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_63BAC(&qword_3C97E8);
  __chkstk_darwin(v33 - 8);
  uint64_t v240 = (char *)&v180 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_63BAC(&qword_3CDC50);
  __chkstk_darwin(v35 - 8);
  uint64_t v243 = (uint64_t)&v180 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v267 = (uint64_t)&v180 - v38;
  uint64_t v39 = sub_63BAC(&qword_3C7800);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = (char *)&v180 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_2E27D0();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v180 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = sub_2DFFB0();
  uint64_t v270 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  uint64_t v47 = (char *)&v180 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = v47;
  uint64_t v48 = sub_2DF5D0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v260 = v48;
  uint64_t v261 = v49;
  __chkstk_darwin(v48);
  uint64_t v234 = (char *)&v180 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v180 - v52;
  uint64_t v264 = sub_2DF4D0();
  uint64_t v242 = *(char **)(v264 - 8);
  __chkstk_darwin(v264);
  uint64_t v55 = (char *)&v180 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = sub_63BAC(&qword_3CDC58);
  __chkstk_darwin(v262);
  uint64_t v238 = (char *)&v180 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_63BAC(&qword_3CDC60) - 8;
  __chkstk_darwin(v239);
  uint64_t v58 = (char *)&v180 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  uint64_t v268 = (uint64_t)&v180 - v60;
  uint64_t v271 = a1;
  sub_1908B8();
  uint64_t v195 = v53;
  sub_2DF4E0();
  uint64_t v183 = a1 + *(int *)(v269 + 36);
  sub_85D7C((uint64_t)v47);
  uint64_t v194 = *(void (**)(char *, void, uint64_t))(v43 + 104);
  uint64_t v193 = v43 + 104;
  v194(v45, enum case for Font.TextStyle.title2(_:), v42);
  uint64_t v61 = enum case for Font.Design.serif (_:);
  uint64_t v62 = sub_2E2700();
  uint64_t v63 = *(void *)(v62 - 8);
  long long v190 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 104);
  uint64_t v188 = v63 + 104;
  v190(v41, v61, v62);
  uint64_t v64 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56);
  uint64_t v192 = v62;
  uint64_t v191 = v63 + 56;
  long long v189 = v64;
  v64((uint64_t)v41, 0, 1, v62);
  sub_2E2710();
  uint64_t v65 = sub_2E2760();
  uint64_t v199 = v41;
  sub_662B4((uint64_t)v41, &qword_3C7800);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v196 = v45;
  uint64_t v198 = v42;
  uint64_t v197 = v43 + 8;
  uint64_t v187 = v66;
  v66(v45, v42);
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v270 + 8);
  v270 += 8;
  uint64_t v186 = v67;
  v67((uint64_t)v265, v263);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = (uint64_t)v242;
  uint64_t v70 = (uint64_t)v238;
  uint64_t v71 = v264;
  uint64_t v185 = (void (*)(char *, char *, uint64_t))*((void *)v242 + 2);
  v185(v238, v55, v264);
  uint64_t v72 = (uint64_t *)(v70 + *(int *)(v262 + 36));
  *uint64_t v72 = KeyPath;
  v72[1] = v65;
  long long v184 = *(void (**)(char *, uint64_t))(v69 + 8);
  v184(v55, v71);
  uint64_t v73 = sub_2E3030();
  uint64_t v74 = swift_getKeyPath();
  sub_66444(v70, (uint64_t)v58, &qword_3CDC58);
  uint64_t v75 = (uint64_t *)&v58[*(int *)(v239 + 44)];
  uint64_t *v75 = v74;
  v75[1] = v73;
  uint64_t v76 = (uint64_t)v240;
  sub_662B4(v70, &qword_3CDC58);
  uint64_t v242 = v58;
  sub_71900((uint64_t)v58, v268, &qword_3CDC60);
  sub_190C78(*(unsigned char *)(v271 + 8), v76);
  uint64_t v77 = v261;
  uint64_t v78 = v260;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v261 + 48))(v76, 1) == 1)
  {
    sub_662B4(v76, &qword_3C97E8);
    uint64_t v79 = 1;
    uint64_t v80 = (uint64_t)v258;
    uint64_t v81 = (uint64_t)v259;
    uint64_t v82 = v257;
    uint64_t v83 = v269;
    uint64_t v84 = v256;
    uint64_t v85 = v267;
    uint64_t v86 = v255;
    uint64_t v87 = (uint64_t)v237;
    uint64_t v88 = v235;
  }
  else
  {
    long long v89 = v234;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v234, v76, v78);
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v195, v89, v78);
    uint64_t v90 = v55;
    sub_2DF4E0();
    uint64_t v91 = (uint64_t)v265;
    sub_85D7C((uint64_t)v265);
    uint64_t v92 = v196;
    uint64_t v93 = v198;
    v194(v196, enum case for Font.TextStyle.body(_:), v198);
    uint64_t v94 = (uint64_t)v199;
    uint64_t v95 = v192;
    v190(v199, enum case for Font.Design.default(_:), v192);
    v189(v94, 0, 1, v95);
    uint64_t v96 = sub_2E2760();
    sub_662B4(v94, &qword_3C7800);
    v187(v92, v93);
    v186(v91, v263);
    uint64_t v97 = swift_getKeyPath();
    uint64_t v98 = v264;
    v185((char *)v70, v90, v264);
    uint64_t v99 = (uint64_t *)(v70 + *(int *)(v262 + 36));
    uint64_t *v99 = v97;
    v99[1] = v96;
    v184(v90, v98);
    uint64_t v100 = swift_getKeyPath();
    uint64_t v101 = v202;
    sub_66444(v70, v202, &qword_3CDC58);
    uint64_t v102 = v101 + *(int *)(v200 + 36);
    *(void *)uint64_t v102 = v100;
    *(unsigned char *)(v102 + 8) = 1;
    sub_662B4(v70, &qword_3CDC58);
    id v103 = [self bc_booksGray];
    uint64_t v104 = sub_2E3060();
    uint64_t v105 = swift_getKeyPath();
    uint64_t v106 = v204;
    sub_66444(v101, v204, &qword_3CDC38);
    uint64_t v107 = (uint64_t *)(v106 + *(int *)(v201 + 36));
    uint64_t *v107 = v105;
    v107[1] = v104;
    sub_662B4(v101, &qword_3CDC38);
    LOBYTE(v104) = sub_2E2630();
    uint64_t v83 = v269;
    uint64_t v108 = v249;
    sub_85250(v249);
    uint64_t v109 = v252;
    sub_2E0190();
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v108, v251);
    uint64_t v84 = v256;
    uint64_t v86 = v255;
    sub_2E0AF0();
    (*(void (**)(char *, uint64_t))(v253 + 8))(v109, v86);
    swift_getKeyPath();
    sub_88340();
    uint64_t v82 = v257;
    sub_2E00F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v248 + 8))(v84, v82);
    sub_2E15A0();
    uint64_t v111 = v110;
    uint64_t v113 = v112;
    uint64_t v115 = v114;
    uint64_t v117 = v116;
    uint64_t v118 = v203;
    sub_66444(v106, v203, &qword_3CDC40);
    uint64_t v119 = v235;
    uint64_t v120 = v118 + *(int *)(v235 + 36);
    *(unsigned char *)uint64_t v120 = v104;
    *(void *)(v120 + 8) = v111;
    *(void *)(v120 + 16) = v113;
    *(void *)(v120 + 24) = v115;
    *(void *)(v120 + 32) = v117;
    *(unsigned char *)(v120 + 40) = 0;
    sub_662B4(v106, &qword_3CDC40);
    (*(void (**)(char *, uint64_t))(v261 + 8))(v234, v260);
    uint64_t v121 = v267;
    sub_71900(v118, v267, &qword_3CDC48);
    uint64_t v79 = 0;
    uint64_t v80 = (uint64_t)v258;
    uint64_t v81 = (uint64_t)v259;
    uint64_t v85 = v121;
    uint64_t v87 = (uint64_t)v237;
    uint64_t v88 = v119;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v236 + 56))(v85, v79, 1, v88);
  char v122 = sub_2DECC0();
  sub_1960EC(v271, v87, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  if (v122)
  {
    uint64_t v123 = v87 + *(int *)(v83 + 40);
    char v124 = *(unsigned char *)v123;
    uint64_t v125 = *(void *)(v123 + 8);
    LOBYTE(v272) = v124;
    uint64_t v273 = v125;
    sub_63BAC(&qword_3CDC70);
    sub_2E3140();
    sub_196154(v87, (uint64_t (*)(void))type metadata accessor for PageErrorView);
    if (v274)
    {
      uint64_t v126 = 1;
    }
    else
    {
      uint64_t v127 = v182;
      sub_1939AC(v182);
      LODWORD(v270) = sub_2E2630();
      uint64_t v128 = v249;
      sub_85250(v249);
      uint64_t v129 = v252;
      sub_2E0190();
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v128, v251);
      sub_2E0AF0();
      (*(void (**)(char *, uint64_t))(v253 + 8))(v129, v86);
      swift_getKeyPath();
      sub_88340();
      sub_2E00F0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v248 + 8))(v84, v82);
      sub_2E15A0();
      uint64_t v131 = v130;
      uint64_t v133 = v132;
      uint64_t v135 = v134;
      uint64_t v137 = v136;
      uint64_t v138 = v181;
      sub_66444(v127, v181, &qword_3C82A8);
      uint64_t v139 = v138 + *(int *)(v254 + 36);
      *(unsigned char *)uint64_t v139 = v270;
      *(void *)(v139 + 8) = v131;
      *(void *)(v139 + 16) = v133;
      *(void *)(v139 + 24) = v135;
      *(void *)(v139 + 32) = v137;
      *(unsigned char *)(v139 + 40) = 0;
      sub_662B4(v127, &qword_3C82A8);
      sub_71900(v138, v80, &qword_3CDC28);
      uint64_t v126 = 0;
    }
  }
  else
  {
    sub_196154(v87, (uint64_t (*)(void))type metadata accessor for PageErrorView);
    uint64_t v126 = 1;
  }
  uint64_t v140 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v80, v126, 1, v254);
  if (*(unsigned __int8 *)(v271 + 8) >= 2u)
  {
    (*(void (**)(char *, void, uint64_t))(v205 + 104))(v214, enum case for ButtonViewModel.Size.small(_:), v206);
    (*(void (**)(char *, void, uint64_t))(v207 + 104))(v215, enum case for ButtonViewModel.Shape.capsule(_:), v208);
    (*(void (**)(char *, void, uint64_t))(v209 + 104))(v216, enum case for ButtonViewModel.Kind.solid(_:), v210);
    (*(void (**)(char *, void, uint64_t))(v212 + 104))(v218, enum case for ButtonViewModel.Style.primary(_:), v213);
    uint64_t v141 = v220;
    sub_2E3E00();
    uint64_t v142 = v229;
    uint64_t v143 = v248;
    uint64_t v144 = v226;
    uint64_t v145 = v230;
    (*(void (**)(char *, void, uint64_t))(v229 + 104))(v226, enum case for LocalizerLookupStrategy.default(_:), v230);
    uint64_t v146 = v227;
    sub_2DF590();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v145);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v141, v228);
    (*(void (**)(char *, void, uint64_t))(v221 + 104))(v146, enum case for ButtonViewModel.Content.title(_:), v222);
    uint64_t v147 = v232;
    sub_193D74(v232);
    (*(void (**)(uint64_t *, void, uint64_t))(v231 + 104))(v147, enum case for ButtonViewModel.ActionKind.actionModel(_:), v233);
    uint64_t v148 = v258;
    uint64_t v81 = (uint64_t)v259;
    sub_2E0390();
    uint64_t v149 = v219;
    sub_2DFB60();
    LOBYTE(v147) = sub_2E2630();
    uint64_t v150 = v249;
    sub_85250(v249);
    uint64_t v151 = v252;
    sub_2E0190();
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v150, v251);
    uint64_t v152 = v256;
    uint64_t v153 = v255;
    sub_2E0AF0();
    (*(void (**)(char *, uint64_t))(v253 + 8))(v151, v153);
    swift_getKeyPath();
    sub_88340();
    uint64_t v154 = v257;
    sub_2E00F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v152, v154);
    sub_2E15A0();
    uint64_t v156 = v155;
    uint64_t v158 = v157;
    uint64_t v160 = v159;
    uint64_t v162 = v161;
    uint64_t v163 = v223;
    uint64_t v164 = (uint64_t)v217;
    uint64_t v165 = v225;
    (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v217, v149, v225);
    uint64_t v166 = v164 + *(int *)(v266 + 36);
    *(unsigned char *)uint64_t v166 = (_BYTE)v147;
    *(void *)(v166 + 8) = v156;
    *(void *)(v166 + 16) = v158;
    *(void *)(v166 + 24) = v160;
    *(void *)(v166 + 32) = v162;
    *(unsigned char *)(v166 + 40) = 0;
    uint64_t v167 = v165;
    uint64_t v80 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t))(v163 + 8))(v149, v167);
    sub_71900(v164, v81, &qword_3CDC18);
    uint64_t v140 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56))(v81, v140, 1, v266);
  uint64_t v168 = v268;
  uint64_t v169 = (uint64_t)v242;
  sub_66444(v268, (uint64_t)v242, &qword_3CDC60);
  uint64_t v170 = v267;
  uint64_t v171 = v243;
  sub_66444(v267, v243, &qword_3CDC50);
  uint64_t v172 = v244;
  sub_66444(v80, v244, &qword_3CDC30);
  uint64_t v173 = v81;
  uint64_t v174 = v81;
  uint64_t v175 = v246;
  sub_66444(v173, v246, &qword_3CDC20);
  uint64_t v176 = v80;
  uint64_t v177 = v247;
  sub_66444(v169, v247, &qword_3CDC60);
  uint64_t v178 = (int *)sub_63BAC(&qword_3CDC68);
  sub_66444(v171, v177 + v178[12], &qword_3CDC50);
  sub_66444(v172, v177 + v178[16], &qword_3CDC30);
  sub_66444(v175, v177 + v178[20], &qword_3CDC20);
  sub_662B4(v174, &qword_3CDC20);
  sub_662B4(v176, &qword_3CDC30);
  sub_662B4(v170, &qword_3CDC50);
  sub_662B4(v168, &qword_3CDC60);
  sub_662B4(v175, &qword_3CDC20);
  sub_662B4(v172, &qword_3CDC30);
  sub_662B4(v171, &qword_3CDC50);
  return sub_662B4(v169, &qword_3CDC60);
}

uint64_t sub_1939AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v32 = sub_2E0090();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_2E01B0();
  uint64_t v5 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2E1AE0();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_63BAC(&qword_3CDC78);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_63BAC(&qword_3C82A0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v14 = sub_2E33E0();
  v14[1] = v19;
  uint64_t v20 = sub_63BAC(&qword_3CDC80);
  sub_1942F0(v1, (uint64_t)v14 + *(int *)(v20 + 44));
  type metadata accessor for PageErrorView();
  sub_85250((uint64_t)v7);
  sub_2E00A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
  sub_2E0070();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32);
  uint64_t v23 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v24 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v25 = sub_2E2130();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  void *v11 = v22;
  v11[1] = v22;
  uint64_t v26 = (uint64_t)&v18[*(int *)(v16 + 44)];
  sub_1960EC((uint64_t)v11, v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v26 + *(int *)(sub_63BAC(&qword_3CDC88) + 36)) = 256;
  sub_66444((uint64_t)v14, (uint64_t)v18, &qword_3CDC78);
  sub_196154((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_662B4((uint64_t)v14, &qword_3CDC78);
  uint64_t v27 = sub_2E3440();
  sub_82274(0.0, 1, 0.0, 1, 320.0, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1, v27, v28);
  return sub_662B4((uint64_t)v18, &qword_3C82A0);
}

uint64_t sub_193D74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v1 = type metadata accessor for PageErrorView();
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v32 = *(void *)(v33 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2E13F0();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E1300();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E1270();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_2E3910();
  uint64_t v14 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v28 - v19;
  (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))(v13, enum case for Metrics.TargetType.button(_:), v10, v18);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Metrics.ClickActionType.reload(_:), v6);
  sub_2E13A0();
  sub_2E1210();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v20, v28);
  uint64_t v22 = v31;
  sub_1960EC(v34, v31, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  unint64_t v23 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v24 = swift_allocObject();
  sub_196320(v22, v24 + v23, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v25 = sub_2E3940();
  uint64_t v26 = v35;
  v35[3] = v25;
  v26[4] = (uint64_t)&protocol witness table for ClosureAction;
  sub_71088(v26);
  sub_2E3930();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v21);
}

uint64_t sub_1941E8()
{
  uint64_t v1 = *v0;
  uint64_t v6 = *v0;
  swift_errorRetain();
  sub_63BAC((uint64_t *)&unk_3C9D00);
  sub_63BAC(&qword_3CDCF0);
  if (swift_dynamicCast())
  {
    sub_65CF4(v4, (uint64_t)v7);
    sub_71044(v7, v7[3]);
    uint64_t v2 = sub_2E5120();
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v7);
  }
  else
  {
    uint64_t v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_662B4((uint64_t)v4, &qword_3CDCF8);
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    *(void *)&v4[0] = v1;
    sub_2E4DA0();
    return v7[0];
  }
  return v2;
}

uint64_t sub_1942F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = sub_63BAC(&qword_3CDC90);
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = &v60[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v69 = (uint64_t *)&v60[-v6];
  uint64_t v71 = sub_63BAC(&qword_3C8398);
  uint64_t v85 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v8 = &v60[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_2E0180();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_2E01B0();
  uint64_t v63 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v60[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v72 = a1 + *(int *)(type metadata accessor for PageErrorView() + 32);
  uint64_t v65 = a1;
  sub_85250((uint64_t)v16);
  sub_2E0190();
  uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  uint64_t v76 = v14 + 8;
  v64(v16, v13);
  sub_2E0AF0();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
  uint64_t v74 = v10 + 8;
  uint64_t v75 = v17;
  v17(v12, v9);
  swift_getKeyPath();
  unint64_t v73 = sub_88340();
  uint64_t v18 = v71;
  sub_2E00F0();
  swift_release();
  uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v85 + 8);
  v85 += 8;
  v62(v8, v18);
  uint64_t v78 = v98;
  uint64_t v83 = sub_2E2290();
  sub_194BA0((uint64_t)&v111);
  uint64_t v81 = v112;
  uint64_t v82 = v111;
  int v80 = v113;
  uint64_t v77 = v115;
  uint64_t v67 = v116;
  uint64_t v84 = v117;
  int v61 = v118;
  uint64_t v79 = v119;
  int v68 = sub_2E2610();
  sub_85250((uint64_t)v16);
  sub_2E0190();
  uint64_t v19 = v63;
  uint64_t v20 = v64;
  v64(v16, v63);
  sub_2E0AF0();
  v75(v12, v9);
  swift_getKeyPath();
  sub_2E00F0();
  swift_release();
  uint64_t v21 = v62;
  v62(v8, v18);
  sub_2E15A0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  unsigned __int8 v93 = 0;
  unsigned __int8 v91 = v80;
  unsigned __int8 v89 = v61;
  unsigned __int8 v86 = 0;
  int v80 = sub_2E2680();
  sub_85250((uint64_t)v16);
  sub_2E0190();
  v20(v16, v19);
  sub_2E0AF0();
  v75(v12, v9);
  swift_getKeyPath();
  uint64_t v30 = v71;
  sub_2E00F0();
  swift_release();
  v21(v8, v30);
  sub_2E15A0();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  LOBYTE(v20) = v93;
  LODWORD(v74) = v93;
  LOBYTE(v9) = v91;
  LODWORD(v75) = v91;
  LOBYTE(v19) = v89;
  LODWORD(v76) = v89;
  LOBYTE(v18) = v86;
  LODWORD(v85) = v86;
  char v94 = 0;
  id v39 = [self secondarySystemBackgroundColor];
  uint64_t v40 = sub_2E3060();
  LODWORD(v73) = sub_2E2620();
  LOBYTE(v8) = v94;
  uint64_t v41 = sub_2E2290();
  uint64_t v42 = (uint64_t)v69;
  *uint64_t v69 = v41;
  *(void *)(v42 + 8) = 0;
  *(unsigned char *)(v42 + 16) = 1;
  uint64_t v43 = sub_63BAC(&qword_3CDC98);
  sub_194D94(v65, v42 + *(int *)(v43 + 44));
  uint64_t v44 = v70;
  sub_66444(v42, (uint64_t)v70, &qword_3CDC90);
  *(void *)&long long v98 = v83;
  *((void *)&v98 + 1) = v78;
  LOBYTE(v99) = (_BYTE)v20;
  *(_DWORD *)((char *)&v99 + 1) = *(_DWORD *)v92;
  DWORD1(v99) = *(_DWORD *)&v92[3];
  *((void *)&v99 + 1) = v82;
  *(void *)&long long v100 = v81;
  BYTE8(v100) = v9;
  *(_DWORD *)((char *)&v100 + 9) = *(_DWORD *)v90;
  HIDWORD(v100) = *(_DWORD *)&v90[3];
  uint64_t v45 = v67;
  *(void *)&long long v101 = v77;
  *((void *)&v101 + 1) = v67;
  *(void *)&long long v102 = v84;
  BYTE8(v102) = v19;
  HIDWORD(v102) = *(_DWORD *)&v88[3];
  *(_DWORD *)((char *)&v102 + 9) = *(_DWORD *)v88;
  *(void *)&long long v103 = v79;
  LOBYTE(v9) = v68;
  BYTE8(v103) = v68;
  HIDWORD(v103) = *(_DWORD *)&v87[3];
  *(_DWORD *)((char *)&v103 + 9) = *(_DWORD *)v87;
  *(void *)&long long v104 = v23;
  *((void *)&v104 + 1) = v25;
  *(void *)&long long v105 = v27;
  *((void *)&v105 + 1) = v29;
  LOBYTE(v106) = v18;
  *(_DWORD *)((char *)&v106 + 1) = *(_DWORD *)v96;
  DWORD1(v106) = *(_DWORD *)&v96[3];
  BYTE8(v106) = v80;
  *(_DWORD *)((char *)&v106 + 9) = *(_DWORD *)v95;
  HIDWORD(v106) = *(_DWORD *)&v95[3];
  *(void *)&long long v107 = v32;
  *((void *)&v107 + 1) = v34;
  *(void *)&long long v108 = v36;
  *((void *)&v108 + 1) = v38;
  LOBYTE(v109) = (_BYTE)v8;
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v97;
  DWORD1(v109) = *(_DWORD *)&v97[3];
  *((void *)&v109 + 1) = v40;
  LOBYTE(v18) = v73;
  char v110 = v73;
  long long v46 = v98;
  long long v47 = v99;
  long long v48 = v101;
  uint64_t v49 = v66;
  *(_OWORD *)(v66 + 32) = v100;
  *(_OWORD *)(v49 + 48) = v48;
  *(_OWORD *)uint64_t v49 = v46;
  *(_OWORD *)(v49 + 16) = v47;
  long long v50 = v102;
  long long v51 = v103;
  long long v52 = v105;
  *(_OWORD *)(v49 + 96) = v104;
  *(_OWORD *)(v49 + 112) = v52;
  *(_OWORD *)(v49 + 64) = v50;
  *(_OWORD *)(v49 + 80) = v51;
  long long v53 = v106;
  long long v54 = v107;
  long long v55 = v108;
  long long v56 = v109;
  *(unsigned char *)(v49 + 192) = v18;
  *(_OWORD *)(v49 + 160) = v55;
  *(_OWORD *)(v49 + 176) = v56;
  *(_OWORD *)(v49 + 128) = v53;
  *(_OWORD *)(v49 + 144) = v54;
  uint64_t v57 = v49;
  uint64_t v58 = sub_63BAC(&qword_3CDCA0);
  sub_66444((uint64_t)v44, v57 + *(int *)(v58 + 48), &qword_3CDC90);
  sub_19620C((uint64_t)&v98);
  sub_662B4(v42, &qword_3CDC90);
  sub_662B4((uint64_t)v44, &qword_3CDC90);
  uint64_t v111 = v83;
  uint64_t v112 = v78;
  unsigned __int8 v113 = v74;
  *(_DWORD *)uint64_t v114 = *(_DWORD *)v92;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v92[3];
  uint64_t v115 = v82;
  uint64_t v116 = v81;
  LOBYTE(v117) = (_BYTE)v75;
  *(_DWORD *)((char *)&v117 + 1) = *(_DWORD *)v90;
  HIDWORD(v117) = *(_DWORD *)&v90[3];
  uint64_t v118 = v77;
  uint64_t v119 = v45;
  uint64_t v120 = v84;
  char v121 = v76;
  *(_DWORD *)&v122[3] = *(_DWORD *)&v88[3];
  *(_DWORD *)char v122 = *(_DWORD *)v88;
  uint64_t v123 = v79;
  char v124 = v9;
  *(_DWORD *)&v125[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)uint64_t v125 = *(_DWORD *)v87;
  uint64_t v126 = v23;
  uint64_t v127 = v25;
  uint64_t v128 = v27;
  uint64_t v129 = v29;
  char v130 = v85;
  *(_DWORD *)uint64_t v131 = *(_DWORD *)v96;
  *(_DWORD *)&v131[3] = *(_DWORD *)&v96[3];
  char v132 = v80;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v95[3];
  *(_DWORD *)uint64_t v133 = *(_DWORD *)v95;
  uint64_t v134 = v32;
  uint64_t v135 = v34;
  uint64_t v136 = v36;
  uint64_t v137 = v38;
  char v138 = (char)v8;
  *(_DWORD *)uint64_t v139 = *(_DWORD *)v97;
  *(_DWORD *)&v139[3] = *(_DWORD *)&v97[3];
  uint64_t v140 = v40;
  char v141 = v18;
  return sub_196294((uint64_t)&v111);
}

uint64_t sub_194BA0@<X0>(uint64_t a1@<X8>)
{
  sub_2E2110();
  uint64_t v2 = sub_2E28D0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_2E27C0();
  uint64_t v7 = sub_2E2880();
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  char v10 = v9;
  uint64_t v28 = v11;
  swift_release();
  char v25 = v10 & 1;
  sub_71140(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1941E8();
  sub_710EC();
  uint64_t v12 = sub_2E28F0();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_2E2790();
  uint64_t v17 = sub_2E2880();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  swift_release();
  v21 &= 1u;
  sub_71140(v12, v14, v16);
  swift_bridgeObjectRelease();
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v26;
  *(unsigned char *)(a1 + 16) = v25;
  *(void *)(a1 + 24) = v28;
  *(void *)(a1 + 32) = v17;
  *(void *)(a1 + 40) = v19;
  *(unsigned char *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v23;
  sub_8B5D4(v27, v26, v25);
  swift_bridgeObjectRetain();
  sub_8B5D4(v17, v19, v21);
  swift_bridgeObjectRetain();
  sub_71140(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_71140(v27, v26, v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_194D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v146 = sub_2E0180();
  uint64_t v152 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v145 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_2E01B0();
  uint64_t v151 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v143 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_2E2350();
  uint64_t v149 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  long long v109 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E2410();
  uint64_t v148 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for PageErrorView();
  uint64_t v131 = *(void *)(v125 - 8);
  uint64_t v9 = *(void *)(v131 + 64);
  __chkstk_darwin(v125);
  uint64_t v10 = sub_63BAC(&qword_3CDCA8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_63BAC(&qword_3CDCB0);
  uint64_t v147 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  char v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_63BAC(&qword_3CDCB8);
  uint64_t v150 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v133 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v104 = (char *)&v104 - v18;
  uint64_t v139 = sub_63BAC(&qword_3CDCC0);
  __chkstk_darwin(v139);
  char v132 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v124 = (char *)&v104 - v21;
  uint64_t v22 = sub_63BAC(&qword_3CDCC8);
  __chkstk_darwin(v22 - 8);
  uint64_t v135 = (uint64_t)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v134 = (uint64_t)&v104 - v25;
  __chkstk_darwin(v26);
  uint64_t v140 = (uint64_t *)((char *)&v104 - v27);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v104 - v29;
  *(void *)uint64_t v30 = sub_2E20C0();
  *((void *)v30 + 1) = 0;
  char v138 = v30;
  v30[16] = 1;
  uint64_t v122 = a1;
  sub_1960EC(a1, (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v31 = *(unsigned __int8 *)(v131 + 80);
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v121 = v32 + v9;
  uint64_t v120 = v31 | 7;
  uint64_t v33 = swift_allocObject();
  uint64_t v123 = v32;
  uint64_t v126 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_196320(v126, v33 + v32, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v34 = sub_63BAC(&qword_3C77D0);
  unint64_t v35 = sub_71A04();
  uint64_t v119 = v34;
  unint64_t v118 = v35;
  sub_2E3180();
  sub_2E2400();
  uint64_t v36 = sub_71AA4(&qword_3CDCD0, &qword_3CDCA8);
  uint64_t v37 = sub_196B54(&qword_3CDCD8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  sub_2E2CA0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v148 + 8);
  uint64_t v129 = v8;
  v148 += 8;
  uint64_t v115 = v38;
  v38(v8, v6);
  id v39 = v109;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v127 = v13;
  uint64_t v128 = v11 + 8;
  uint64_t v114 = v40;
  v40(v13, v10);
  uint64_t v41 = v15;
  sub_2E1B50();
  uint64_t v130 = v10;
  uint64_t v153 = v10;
  uint64_t v154 = v6;
  uint64_t v42 = v104;
  uint64_t v131 = v6;
  uint64_t v117 = v36;
  uint64_t v155 = v36;
  uint64_t v156 = v37;
  uint64_t v116 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = sub_196B54(&qword_3C9FB8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v45 = v137;
  uint64_t v46 = v141;
  uint64_t v113 = OpaqueTypeConformance2;
  uint64_t v112 = v44;
  sub_2E2CF0();
  long long v47 = *(void (**)(char *, uint64_t))(v149 + 8);
  v149 += 8;
  uint64_t v111 = v47;
  v47(v39, v46);
  long long v48 = *(void (**)(char *, uint64_t))(v147 + 8);
  v147 += 8;
  char v110 = v48;
  v48(v41, v45);
  LOBYTE(v6) = sub_2E2630();
  unsigned __int8 v49 = sub_2E2670();
  char v50 = sub_2E2660();
  sub_2E2660();
  if (sub_2E2660() != v6) {
    char v50 = sub_2E2660();
  }
  sub_2E2660();
  if (sub_2E2660() != v49) {
    char v50 = sub_2E2660();
  }
  uint64_t v108 = sub_63BAC(&qword_3CDCE0);
  uint64_t v51 = (uint64_t)&v138[*(int *)(v108 + 44)];
  uint64_t v52 = v122;
  uint64_t v53 = v143;
  uint64_t v125 = v122 + *(int *)(v125 + 32);
  sub_85250(v143);
  long long v54 = v145;
  sub_2E0190();
  long long v55 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
  v151 += 8;
  long long v107 = v55;
  v55(v53, v144);
  sub_2E0150();
  long long v56 = *(void (**)(char *, uint64_t))(v152 + 8);
  v152 += 8;
  long long v106 = v56;
  v56(v54, v146);
  sub_2E15A0();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v150;
  uint64_t v66 = (uint64_t)v124;
  uint64_t v67 = v142;
  long long v105 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
  v105(v124, v42, v142);
  uint64_t v68 = v66 + *(int *)(v139 + 36);
  *(unsigned char *)uint64_t v68 = v50;
  *(void *)(v68 + 8) = v58;
  *(void *)(v68 + 16) = v60;
  *(void *)(v68 + 24) = v62;
  *(void *)(v68 + 32) = v64;
  *(unsigned char *)(v68 + 40) = 0;
  uint64_t v69 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v150 = v65 + 8;
  v69(v42, v67);
  sub_71900(v66, v51, &qword_3CDCC0);
  uint64_t v70 = sub_2E20C0();
  uint64_t v71 = v140;
  uint64_t *v140 = v70;
  v71[1] = 0;
  *((unsigned char *)v71 + 16) = 1;
  uint64_t v72 = v126;
  sub_1960EC(v52, v126, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v73 = swift_allocObject();
  sub_196320(v72, v73 + v123, (uint64_t (*)(void))type metadata accessor for PageErrorView);
  uint64_t v74 = v127;
  sub_2E3180();
  uint64_t v75 = v129;
  sub_2E2400();
  uint64_t v76 = v130;
  uint64_t v77 = v131;
  sub_2E2CA0();
  v115(v75, v77);
  v114(v74, v76);
  sub_2E1B50();
  uint64_t v78 = v133;
  uint64_t v79 = v137;
  uint64_t v80 = v141;
  sub_2E2CF0();
  v111(v39, v80);
  v110(v41, v79);
  LOBYTE(v79) = sub_2E2630();
  unsigned __int8 v81 = sub_2E2670();
  char v82 = sub_2E2660();
  sub_2E2660();
  if (sub_2E2660() != v79) {
    char v82 = sub_2E2660();
  }
  sub_2E2660();
  if (sub_2E2660() != v81) {
    char v82 = sub_2E2660();
  }
  uint64_t v83 = (uint64_t)v140;
  uint64_t v84 = (uint64_t)v140 + *(int *)(v108 + 44);
  uint64_t v85 = v143;
  sub_85250(v143);
  unsigned __int8 v86 = v145;
  sub_2E0190();
  v107(v85, v144);
  sub_2E0150();
  v106(v86, v146);
  sub_2E15A0();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = (uint64_t)v132;
  uint64_t v96 = v142;
  v105(v132, v78, v142);
  uint64_t v97 = v95 + *(int *)(v139 + 36);
  *(unsigned char *)uint64_t v97 = v82;
  *(void *)(v97 + 8) = v88;
  *(void *)(v97 + 16) = v90;
  *(void *)(v97 + 24) = v92;
  *(void *)(v97 + 32) = v94;
  *(unsigned char *)(v97 + 40) = 0;
  v69(v78, v96);
  sub_71900(v95, v84, &qword_3CDCC0);
  uint64_t v98 = (uint64_t)v138;
  uint64_t v99 = v134;
  sub_66444((uint64_t)v138, v134, &qword_3CDCC8);
  uint64_t v100 = v135;
  sub_66444(v83, v135, &qword_3CDCC8);
  uint64_t v101 = v136;
  sub_66444(v99, v136, &qword_3CDCC8);
  uint64_t v102 = sub_63BAC(&qword_3CDCE8);
  sub_66444(v100, v101 + *(int *)(v102 + 48), &qword_3CDCC8);
  sub_662B4(v83, &qword_3CDCC8);
  sub_662B4(v98, &qword_3CDCC8);
  sub_662B4(v100, &qword_3CDCC8);
  return sub_662B4(v99, &qword_3CDCC8);
}

uint64_t sub_195C44()
{
  return swift_release();
}

uint64_t sub_195CC0()
{
  return swift_release();
}

uint64_t sub_195D74@<X0>(uint64_t *a1@<X8>)
{
  return sub_195E3C(a1);
}

void sub_195D90()
{
  id v0 = [self generalPasteboard];
  sub_1941E8();
  id v1 = sub_2E43E0();
  swift_bridgeObjectRelease();
  [v0 setString:v1];
}

uint64_t sub_195E20@<X0>(uint64_t *a1@<X8>)
{
  return sub_195E3C(a1);
}

uint64_t sub_195E3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2E3090();
  id v3 = [self tertiaryLabelColor];
  uint64_t v4 = sub_2E3060();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = result;
  a1[2] = v4;
  return result;
}

uint64_t sub_195EB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1F00();
  *a1 = result;
  return result;
}

uint64_t sub_195EE0()
{
  return sub_2E1F10();
}

uint64_t sub_195F0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1F80();
  *a1 = result;
  return result;
}

uint64_t sub_195F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1F80();
  *a1 = result;
  return result;
}

uint64_t sub_195F64()
{
  return sub_2E1F90();
}

uint64_t sub_195F90()
{
  return sub_2E1F90();
}

uint64_t sub_195FBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2E1F00();
  *a1 = result;
  return result;
}

uint64_t sub_195FE8()
{
  return sub_2E1F10();
}

uint64_t sub_196018@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2E1F60();
  *a1 = result;
  return result;
}

uint64_t sub_196044@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2E1F60();
  *a1 = result;
  return result;
}

uint64_t sub_196070()
{
  return sub_2E1F70();
}

uint64_t sub_196098()
{
  return sub_2E1F70();
}

uint64_t sub_1960C0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2E0120();
  *a1 = v3;
  return result;
}

uint64_t sub_1960EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_196154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1961B4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2E0110();
  *a1 = v3;
  return result;
}

uint64_t sub_1961E0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2E0140();
  *a1 = v3;
  return result;
}

uint64_t sub_19620C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_8B5D4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_8B5D4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_196294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_71140(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_71140(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_196320(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_196388()
{
  return sub_1963BC((uint64_t (*)(uint64_t))sub_195C44);
}

uint64_t sub_1963A4()
{
  return sub_1963BC((uint64_t (*)(uint64_t))sub_195D90);
}

uint64_t sub_1963BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PageErrorView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_196430()
{
  return sub_195CC0();
}

uint64_t sub_196450()
{
  uint64_t v1 = type metadata accessor for PageErrorView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_errorRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  sub_63BAC(&qword_3C8180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2E01B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 36);
  sub_63BAC(&qword_3C82B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2DFFB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_196608()
{
  uint64_t v1 = *(void *)(type metadata accessor for PageErrorView() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

unint64_t sub_196674()
{
  unint64_t result = qword_3CDD00;
  if (!qword_3CDD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDD00);
  }
  return result;
}

unint64_t sub_1966C8()
{
  unint64_t result = qword_3CDD08;
  if (!qword_3CDD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDD08);
  }
  return result;
}

unint64_t sub_19671C(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_19672C(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CDD10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_2E4200();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v20[-v10];
  uint64_t v21 = a1;
  swift_errorRetain();
  sub_63BAC((uint64_t *)&unk_3C9D00);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v12 = v20[7];
LABEL_3:
    swift_errorRelease();
    return v12;
  }
  swift_errorRelease();
  uint64_t v21 = a1;
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v9, v11, v5);
    sub_2E41F0();
    uint64_t v13 = sub_2E3C60();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
      sub_662B4((uint64_t)v4, &qword_3CDD10);
      uint64_t v12 = 2;
    }
    else
    {
      unint64_t v17 = sub_2E3C50();
      char v19 = v18;
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v4, v13);
      uint64_t v12 = 2;
      if ((v19 & 1) == 0)
      {
        if (v17 >= 6) {
          uint64_t v12 = 2;
        }
        else {
          uint64_t v12 = v17;
        }
      }
    }
    goto LABEL_3;
  }
  swift_errorRelease();
  uint64_t v21 = a1;
  int v15 = swift_dynamicCast();
  swift_errorRelease();
  if (v15) {
    return 0;
  }
  else {
    return 2;
  }
}

unint64_t sub_196A48()
{
  unint64_t result = qword_3CDD18;
  if (!qword_3CDD18)
  {
    sub_70ECC(&qword_3CDC00);
    sub_70ECC(&qword_3CDBF0);
    sub_71AA4(&qword_3CDC10, &qword_3CDBF0);
    swift_getOpaqueTypeConformance2();
    sub_196B54(&qword_3CD5F0, (void (*)(uint64_t))type metadata accessor for PageViewEventViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDD18);
  }
  return result;
}

uint64_t sub_196B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_196B9C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2DE7F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_196CA8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2DE7F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_196D34(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DE7F0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_196DF4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_196EB8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_196F58(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2DE7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_197008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19701C);
}

uint64_t sub_19701C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2DE7F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1970CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1970E0);
}

void *sub_1970E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2DE7F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for YearInReviewPage()
{
  uint64_t result = qword_3CDD78;
  if (!qword_3CDD78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1971D4()
{
  uint64_t result = sub_2DE7F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_197280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2DDEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_2E4C50(17);
  sub_2DDED0();
  uint64_t v6 = sub_2DDEB0();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v13 = v6;
  unint64_t v14 = v8;
  v15._countAndFlagsBits = 0x746C75616665642DLL;
  v15._object = (void *)0xEF7265646165682DLL;
  sub_2E44C0(v15);
  sub_2E4C10();
  uint64_t v9 = type metadata accessor for DefaultHeaderComponentModel(0);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  uint64_t v10 = a1 + *(int *)(v9 + 24);
  uint64_t v11 = sub_2E3CC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
}

uint64_t type metadata accessor for DefaultHeaderComponentModel(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CDE10);
}

uint64_t sub_197454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_197468);
}

uint64_t sub_197468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_63BAC(&qword_3C7498);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_197530);
}

uint64_t sub_197530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_63BAC(&qword_3C7498);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1975DC()
{
  sub_FF444(319, (unint64_t *)&qword_3C8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1976AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1976C0);
}

uint64_t sub_1976C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C81D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_197730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_197744);
}

uint64_t sub_197744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C81D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DefaultHeaderComponent(uint64_t a1)
{
  return sub_6E6E0(a1, qword_3CDEA8);
}

uint64_t sub_1977D8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_197858@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2E0180();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2E01B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E2FE0();
  sub_85250((uint64_t)v9);
  sub_2E0190();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2E0170();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2E3440();
  sub_2E17A0();
  uint64_t v11 = v16;
  char v12 = v17;
  uint64_t v13 = v18;
  char v14 = v19;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v14;
  double result = *(double *)&v20;
  *(_OWORD *)(a1 + 40) = v20;
  return result;
}

uint64_t sub_197A40()
{
  __chkstk_darwin(v0);
  sub_197C88(v2, (uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_197B4C(&qword_3CDEE0, (void (*)(uint64_t))type metadata accessor for DefaultHeaderComponent);
  return sub_2DF540();
}

uint64_t sub_197B04()
{
  return sub_197B4C(&qword_3CDEE8, (void (*)(uint64_t))type metadata accessor for DefaultHeaderComponentModel);
}

uint64_t sub_197B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_197B94()
{
  return sub_197B4C(&qword_3CDEF0, (void (*)(uint64_t))type metadata accessor for DefaultHeaderComponent);
}

uint64_t sub_197BDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_197BF8()
{
  return sub_197B4C(&qword_3CDEF8, (void (*)(uint64_t))type metadata accessor for DefaultHeaderComponentModel);
}

uint64_t sub_197C40()
{
  return sub_197B4C(&qword_3C7480, (void (*)(uint64_t))&type metadata accessor for _ComponentBodyButtonStyle);
}

uint64_t sub_197C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultHeaderComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s14WantToReadMenuVwxx(uint64_t a1)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (*(unsigned char *)(a1 + 80))
  {
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 40);
  }
  else
  {
    return swift_release();
  }
}

uint64_t _s14WantToReadMenuVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = (void *)(a1 + 40);
  uint64_t v6 = (void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 80);
  if (v7)
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(void *, void *))(v8 - 8))(v5, v6);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  *(unsigned char *)(a1 + 80) = v7;
  return a1;
}

uint64_t _s14WantToReadMenuVwca(uint64_t a1, uint64_t a2)
{
  sub_6FA20((uint64_t *)a1, (uint64_t *)a2);
  if (a1 != a2)
  {
    sub_662B4(a1 + 40, &qword_3C8300);
    if (*(unsigned char *)(a2 + 80))
    {
      uint64_t v4 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v4;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      *(unsigned char *)(a1 + 80) = 1;
    }
    else
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 80) = 0;
      swift_retain();
    }
  }
  return a1;
}

__n128 _s14WantToReadMenuVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s14WantToReadMenuVwta(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    sub_662B4(a1 + 40, &qword_3C8300);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  return a1;
}

uint64_t _s14WantToReadMenuVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14WantToReadMenuVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14WantToReadMenuVMa()
{
  return &_s14WantToReadMenuVN;
}

uint64_t sub_198004()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_198020(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    swift_getKeyPath();
    swift_getAtKeyPath();
    swift_release();
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_5E640(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        uint64_t v3 = sub_5E640((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      long long v4 = &v3[2 * v6];
      v4[4] = v8;
      v4[5] = v9;
    }
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_198150@<X0>(uint64_t a1@<X8>)
{
  sub_71044(v1, v1[3]);
  if (sub_2DF240())
  {
    sub_71044(v1, v1[3]);
    if (sub_2DF270())
    {
      sub_198370(v1);
      uint64_t v7 = sub_1E1E80();
      __chkstk_darwin(v7);
      sub_63BAC(&qword_3CDF08);
      sub_199E14();
      sub_710EC();
      sub_2E3330();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = sub_63BAC(&qword_3CDF00);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = sub_63BAC(&qword_3CDF00);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(a1, 1, 1, v5);
}

uint64_t sub_198370(void *a1)
{
  sub_71044(a1, a1[3]);
  uint64_t v1 = sub_2DF240();
  if (v1)
  {
    uint64_t v2 = sub_198020(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  uint64_t v3 = (void *)sub_59C5C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = v2[2];
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 5;
    while (1)
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v10 = sub_5F740(v7, v6);
      uint64_t v11 = v3[2];
      BOOL v12 = (v9 & 1) == 0;
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12)) {
        break;
      }
      char v14 = v9;
      if (v3[3] >= v13)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_62994();
        }
      }
      else
      {
        sub_1893BC(v13, isUniquelyReferenced_nonNull_native);
        unint64_t v15 = sub_5F740(v7, v6);
        if ((v14 & 1) != (v16 & 1)) {
          goto LABEL_22;
        }
        unint64_t v10 = v15;
      }
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        v3[(v10 >> 6) + 8] |= 1 << v10;
        char v17 = (uint64_t *)(v3[6] + 16 * v10);
        *char v17 = v7;
        v17[1] = v6;
        *(void *)(v3[7] + 8 * v10) = 0;
        uint64_t v18 = v3[2];
        BOOL v19 = __OFADD__(v18, 1);
        uint64_t v20 = v18 + 1;
        if (v19) {
          goto LABEL_21;
        }
        v3[2] = v20;
        swift_bridgeObjectRetain();
      }
      uint64_t v21 = v3[7];
      uint64_t v22 = *(void *)(v21 + 8 * v10);
      BOOL v19 = __OFADD__(v22, 1);
      uint64_t v23 = v22 + 1;
      if (v19) {
        goto LABEL_20;
      }
      v5 += 2;
      *(void *)(v21 + 8 * v10) = v23;
      swift_bridgeObjectRelease_n();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t result = sub_2E50E0();
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_198570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_63BAC(&qword_3CDF28);
  __chkstk_darwin(v6);
  *(void *)&v15[0] = a1;
  swift_bridgeObjectRetain();
  sub_63BAC(&qword_3CDF30);
  sub_71AA4(&qword_3CDF38, &qword_3CDF30);
  sub_2DF6F0();
  swift_getKeyPath();
  sub_199F90(a3, (uint64_t)v15);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  long long v8 = v15[3];
  *(_OWORD *)(v7 + 56) = v15[2];
  *(_OWORD *)(v7 + 72) = v8;
  *(_OWORD *)(v7 + 88) = v15[4];
  *(unsigned char *)(v7 + 104) = v16;
  long long v9 = v15[1];
  *(_OWORD *)(v7 + 24) = v15[0];
  *(_OWORD *)(v7 + 40) = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_19A024;
  *(void *)(v10 + 24) = v7;
  swift_bridgeObjectRetain();
  sub_63BAC(&qword_3CDF40);
  sub_71AA4(&qword_3CDF48, &qword_3CDF28);
  uint64_t v11 = sub_70ECC(&qword_3CDF18);
  unint64_t v12 = sub_199EE8();
  *(void *)&v15[0] = &_s18WantToReadMenuItemVN;
  *((void *)&v15[0] + 1) = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&v15[0] = v11;
  *((void *)&v15[0] + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  return sub_2E3310();
}

uint64_t sub_1987E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_63BAC(&qword_3CDF18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a2, a2[3]);
  uint64_t v9 = sub_2DF170();
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0xE000000000000000;
  }
  if (!*(void *)(a3 + 16)) {
    goto LABEL_9;
  }
  if (!v10) {
    uint64_t v9 = 0;
  }
  unint64_t v12 = sub_5F740(v9, v11);
  if (v13)
  {
    uint64_t v14 = *(void *)(*(void *)(a3 + 56) + 8 * v12);
    swift_bridgeObjectRelease();
    BOOL v15 = v14 > 1;
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    BOOL v15 = 0;
  }
  sub_66310((uint64_t)a2, (uint64_t)v19);
  v19[40] = v15;
  uint64_t KeyPath = swift_getKeyPath();
  char v21 = 0;
  unint64_t v16 = sub_199EE8();
  sub_2E2B80();
  sub_19A070((uint64_t)v19);
  sub_71044(a2, a2[3]);
  sub_2DEC00();
  sub_8747C((uint64_t)v19);
  v18[0] = &_s18WantToReadMenuItemVN;
  v18[1] = v16;
  swift_getOpaqueTypeConformance2();
  sub_2E2B50();
  swift_bridgeObjectRelease();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v19);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_198A2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v71 = a1;
  uint64_t v3 = sub_2DDEE0();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  __chkstk_darwin(v3);
  uint64_t v68 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_63BAC(&qword_3C75A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v67 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_2E1290();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v72 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_63BAC(&qword_3CCCF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v76 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2E13F0();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_63BAC((uint64_t *)&unk_3CE240);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_2E1270();
  uint64_t v75 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v74 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2E3910();
  __chkstk_darwin(v16 - 8);
  uint64_t v77 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2DFD40();
  uint64_t v63 = *(void *)(v18 - 8);
  uint64_t v64 = v18;
  __chkstk_darwin(v18);
  uint64_t v58 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = sub_2E1300();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(v1, v1[3]);
  uint64_t v57 = sub_2DEC00();
  uint64_t v73 = v27;
  uint64_t v28 = v1[6];
  char v29 = *((unsigned char *)v2 + 56);
  sub_6EC64(v2[6], v29);
  char v30 = sub_84CF0(v28, v29);
  sub_6EF10(v28, v29);
  uint64_t v60 = v24;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 104);
  uint64_t v32 = (unsigned int *)&enum case for Metrics.ClickActionType.removeFromWantToRead(_:);
  if ((v30 & 1) == 0) {
    uint64_t v32 = (unsigned int *)&enum case for Metrics.ClickActionType.addToWantToRead(_:);
  }
  uint64_t v33 = *v32;
  uint64_t v61 = v23;
  v31(v26, v33, v23);
  sub_6EC64(v28, v29);
  char v34 = sub_84CF0(v28, v29);
  sub_6EF10(v28, v29);
  if (v34) {
    sub_2DFD30();
  }
  else {
    sub_2DFD20();
  }
  uint64_t v53 = v22;
  sub_71044(v2, v2[3]);
  int v54 = sub_2DF150();
  uint64_t v35 = v59;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for Metrics.TargetType.button(_:), v59);
  sub_2E12B0();
  sub_71044(v2, v2[3]);
  sub_2DF1B0();
  uint64_t v36 = sub_2DDCD0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v36) == 1)
  {
    sub_662B4((uint64_t)v14, (uint64_t *)&unk_3CE240);
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v52 = sub_2DDC90();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v36);
  }
  uint64_t v38 = sub_2E1350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v76, 1, 1, v38);
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v72, enum case for Metrics.LocationType.button(_:), v56);
  uint64_t v39 = v2[6];
  char v40 = *((unsigned char *)v2 + 56);
  swift_bridgeObjectRetain();
  sub_6EC64(v39, v40);
  char v41 = sub_84CF0(v39, v40);
  sub_6EF10(v39, v40);
  if (v41)
  {
    _s11BookStoreUI26ContextActionStringBuilderV31removeEditionKindFromWantToRead3forSS0A10Foundation9AssetInfo_p_tFZ_0(v2);
  }
  else
  {
    sub_71044(v2, v2[3]);
    sub_2DF140();
    sub_2DF2D0();
    sub_1E1E80();
    sub_71044(v2, v2[3]);
    sub_2DF170();
    if (v42) {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v43 = v62;
  sub_2E13E0();
  uint64_t v44 = v74;
  uint64_t v51 = v26;
  sub_2E1210();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v66);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v35);
  uint64_t v46 = v63;
  uint64_t v45 = v64;
  long long v47 = v53;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v58, v53, v64);
  uint64_t v48 = sub_2DE8E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v67, 1, 1, v48);
  unsigned __int8 v49 = v68;
  sub_2DDED0();
  sub_2DDEB0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v70);
  swift_bridgeObjectRetain();
  sub_2DFD10();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v51, v61);
}

uint64_t sub_199420()
{
  return sub_2E15B0();
}

uint64_t sub_1994B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_63BAC(&qword_3CDF90);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v24[-v9];
  __chkstk_darwin(v11);
  uint64_t v13 = &v24[-v12];
  uint64_t v26 = a1;
  uint64_t v25 = a1;
  sub_2DFF30();
  sub_19A55C((unint64_t *)&qword_3CA1E0, (void (*)(uint64_t))&type metadata accessor for FlatCoverView);
  sub_2E30C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v13, v10, v4);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if (*(unsigned char *)(a1 + 40) == 1)
  {
    sub_71044((void *)a1, *(void *)(a1 + 24));
    int v17 = sub_2DF140();
    if (v17)
    {
      if (v17 != 1)
      {
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        goto LABEL_16;
      }
      uint64_t v18 = _s11BookStoreUI26ContextActionStringBuilderV011publishedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0((void *)a1);
    }
    else
    {
      uint64_t v18 = _s11BookStoreUI26ContextActionStringBuilderV010narratedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0(a1);
    }
    if (v19) {
      uint64_t v14 = v18;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v19) {
      uint64_t v15 = v19;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v19) {
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    else {
      uint64_t v16 = 0;
    }
  }
LABEL_16:
  uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16);
  v20(v7, v13, v4);
  v20(a2, v7, v4);
  uint64_t v21 = (uint64_t *)&a2[*(int *)(sub_63BAC(&qword_3CDF98) + 48)];
  *uint64_t v21 = v14;
  v21[1] = v15;
  long long v21[2] = 0;
  v21[3] = (uint64_t)v16;
  sub_B564C(v14, v15, 0, (uint64_t)v16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v22(v13, v4);
  sub_B5690(v14, v15, 0, (uint64_t)v16);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v7, v4);
}

uint64_t sub_1997A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  sub_6EC64(v4, v5);
  char v6 = sub_84CF0(v4, v5);
  sub_6EF10(v4, v5);
  if (v6)
  {
    uint64_t result = _s11BookStoreUI26ContextActionStringBuilderV31removeEditionKindFromWantToRead3forSS0A10Foundation9AssetInfo_p_tFZ_0((void *)a1);
    uint64_t v8 = result;
    uint64_t v10 = v9;
  }
  else
  {
    sub_71044((void *)a1, *(void *)(a1 + 24));
    sub_2DF140();
    sub_2DF2D0();
    uint64_t v8 = sub_1E1E80();
    uint64_t v10 = v11;
    sub_71044((void *)a1, *(void *)(a1 + 24));
    uint64_t result = sub_2DF170();
    if (v12)
    {
      uint64_t v13 = result;
      uint64_t v14 = v12;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = v13;
      uint64_t v10 = v14;
    }
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1998D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2DFF30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_66310((uint64_t)a1, (uint64_t)v10);
  sub_71044(a1, a1[3]);
  sub_2DF140();
  sub_2DF2D0();
  sub_2DFF20();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_199A04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_63BAC(&qword_3C9D60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A0A4(v1, (uint64_t)v4);
  uint64_t v5 = sub_2E0620();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_662B4((uint64_t)v4, &qword_3C9D60);
    char v7 = 0;
  }
  else
  {
    char v7 = sub_2E05E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return v7 & 1;
}

uint64_t sub_199B20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_63BAC(&qword_3C9D60);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A0A4(a1, (uint64_t)v6);
  uint64_t v7 = sub_2E0620();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_662B4((uint64_t)v6, &qword_3C9D60);
    char v10 = 0;
  }
  else
  {
    char v10 = sub_2E05E0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_199C4C()
{
  uint64_t v1 = sub_63BAC(&qword_3C90D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2E1580();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v12[3] = sub_2DFD70();
  v12[4] = sub_19A55C(&qword_3CDF68, (void (*)(uint64_t))&type metadata accessor for AssetAction);
  uint64_t v5 = sub_71088(v12);
  sub_198A2C((uint64_t)v5);
  sub_19A4C0(v0, (uint64_t)v10);
  uint64_t v6 = (_OWORD *)swift_allocObject();
  long long v7 = v10[1];
  v6[1] = v10[0];
  v6[2] = v7;
  v6[3] = v11[0];
  *(_OWORD *)((char *)v6 + 57) = *(_OWORD *)((char *)v11 + 9);
  sub_63BAC(&qword_3CDF70);
  sub_71AA4(&qword_3CDF78, &qword_3CDF70);
  return sub_2DFAB0();
}

uint64_t sub_199E08()
{
  return sub_198570(v0[2], v0[3], v0[4]);
}

unint64_t sub_199E14()
{
  unint64_t result = qword_3CDF10;
  if (!qword_3CDF10)
  {
    sub_70ECC(&qword_3CDF08);
    sub_70ECC(&qword_3CDF18);
    sub_199EE8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDF10);
  }
  return result;
}

unint64_t sub_199EE8()
{
  unint64_t result = qword_3CDF20;
  if (!qword_3CDF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDF20);
  }
  return result;
}

uint64_t sub_199F3C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_199F44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_71044(a1, a1[3]);
  uint64_t result = sub_2DEC00();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_199F90(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_199FC8()
{
  swift_bridgeObjectRelease();
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 24);
  if (*(unsigned char *)(v0 + 104)) {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 64);
  }
  else {
    swift_release();
  }

  return _swift_deallocObject(v0, 105, 7);
}

uint64_t sub_19A024(uint64_t a1, void *a2)
{
  return sub_1987E4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_19A030()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_19A070(uint64_t a1)
{
  return a1;
}

uint64_t sub_19A0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_63BAC(&qword_3C9D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A10C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_71044(a1, a1[3]);
  uint64_t result = sub_2DF170();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t _s18WantToReadMenuItemVwxx(uint64_t a1)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);

  return sub_6EF10(v2, v3);
}

uint64_t _s18WantToReadMenuItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_6EC64(v5, v2);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t _s18WantToReadMenuItemVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  sub_6FA20((uint64_t *)a1, a2);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  uint64_t v4 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_6EC64(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_6EF10(v5, v6);
  return a1;
}

__n128 _s18WantToReadMenuItemVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s18WantToReadMenuItemVwta(uint64_t a1, uint64_t a2)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v5;
  sub_6EF10(v6, v7);
  return a1;
}

uint64_t _s18WantToReadMenuItemVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18WantToReadMenuItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18WantToReadMenuItemVMa()
{
  return &_s18WantToReadMenuItemVN;
}

unint64_t sub_19A3A8()
{
  unint64_t result = qword_3CDF50;
  if (!qword_3CDF50)
  {
    sub_70ECC(&qword_3CDF58);
    sub_19A41C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDF50);
  }
  return result;
}

unint64_t sub_19A41C()
{
  unint64_t result = qword_3CDF60;
  if (!qword_3CDF60)
  {
    sub_70ECC(&qword_3CDF00);
    sub_199E14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3CDF60);
  }
  return result;
}

uint64_t sub_19A4A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19A4C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19A4F8()
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v0 + 16);
  sub_6EF10(*(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_19A53C()
{
  return sub_199420();
}

uint64_t sub_19A544@<X0>(unsigned char *a1@<X8>)
{
  return sub_1994B4(*(void *)(v1 + 16), a1);
}

uint64_t sub_19A54C@<X0>(uint64_t a1@<X8>)
{
  return sub_1997A0(*(void *)(v1 + 16), a1);
}

uint64_t sub_19A554@<X0>(uint64_t a1@<X8>)
{
  return sub_1998D0(*(void **)(v1 + 16), a1);
}

uint64_t sub_19A55C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19A5A4()
{
  return sub_71AA4(&qword_3CDFA0, &qword_3CDFA8);
}

uint64_t static ContextActionStringBuilder.editionKindTitle(for:)(void *a1)
{
  sub_71044(a1, a1[3]);
  sub_2DF140();
  sub_2DF2D0();
  uint64_t v2 = sub_1E1E80();
  sub_71044(a1, a1[3]);
  uint64_t v3 = sub_2DF170();
  if (v4)
  {
    uint64_t v5 = v3;
    swift_bridgeObjectRelease();
    return v5;
  }
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  long long v11;
  uint64_t v12;
  void v13[3];
  uint64_t v14;

  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_71044(a1, v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 344))(&v11, v2, v3);
  if (v12)
  {
    sub_65CF4(&v11, (uint64_t)v13);
    sub_71044(v13, v14);
    sub_2DF140();
    sub_2DF2D0();
    uint64_t v6 = sub_1E1E80();
    sub_71044(v13, v14);
    char v7 = sub_2DF170();
    if (v8)
    {
      uint64_t v9 = v7;
      swift_bridgeObjectRelease();
      uint64_t v6 = v9;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v13);
  }
  else
  {
    sub_662B4((uint64_t)&v11, &qword_3C8950);
    uint64_t v4 = a1[3];
    uint64_t v5 = a1[4];
    sub_71044(a1, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  }
  return v6;
}

uint64_t static ContextActionStringBuilder.narratedByString(for:)(void *a1)
{
  return sub_19A864(a1, (uint64_t (*)(unsigned char *))_s11BookStoreUI26ContextActionStringBuilderV010narratedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0);
}

uint64_t static ContextActionStringBuilder.publishedByString(for:)(void *a1)
{
  return sub_19A864(a1, (uint64_t (*)(unsigned char *))_s11BookStoreUI26ContextActionStringBuilderV011publishedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0);
}

uint64_t sub_19A864(void *a1, uint64_t (*a2)(unsigned char *))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_71044(a1, v3);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 344))(&v7, v3, v4);
  if (v8)
  {
    sub_65CF4(&v7, (uint64_t)v9);
    uint64_t v5 = a2(v9);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)v9);
  }
  else
  {
    sub_662B4((uint64_t)&v7, &qword_3C8950);
    return 0;
  }
  return v5;
}

uint64_t _s11BookStoreUI26ContextActionStringBuilderV31removeEditionKindFromWantToRead3forSS0A10Foundation9AssetInfo_p_tFZ_0(void *a1)
{
  sub_71044(a1, a1[3]);
  sub_2DF140();
  sub_2DF2D0();
  uint64_t v2 = sub_1E1E80();
  uint64_t v4 = v3;
  sub_71044(a1, a1[3]);
  uint64_t v5 = sub_2DF170();
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    swift_bridgeObjectRelease();
    uint64_t v2 = v7;
    uint64_t v4 = v8;
  }
  sub_1E1E80();
  sub_63BAC((uint64_t *)&unk_3CE340);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2FEFE0;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_AA4E0();
  *(void *)(v9 + 32) = v2;
  *(void *)(v9 + 40) = v4;
  uint64_t v10 = sub_2E43F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s11BookStoreUI26ContextActionStringBuilderV010narratedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_63BAC(&qword_3CAA70);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_66310(a1, (uint64_t)v16);
  sub_63BAC(&qword_3C6F68);
  uint64_t v5 = sub_2DECF0();
  int v6 = swift_dynamicCast();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  if (!v6)
  {
    v7(v4, 1, 1, v5);
    sub_662B4((uint64_t)v4, &qword_3CAA70);
    return 0;
  }
  uint64_t v8 = *(void *)(v5 - 8);
  v7(v4, 0, 1, v5);
  uint64_t v9 = sub_2DECE0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v5);
  if (!v11) {
    return 0;
  }
  sub_1E1E80();
  sub_63BAC((uint64_t *)&unk_3CE340);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2FEFE0;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_AA4E0();
  *(void *)(v12 + 32) = v9;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = sub_2E43F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19AC8C(void *a1)
{
  uint64_t v2 = sub_63BAC(&qword_3C7138);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2DDEA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_71044(a1, a1[3]);
  sub_2DF1A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_662B4((uint64_t)v4, &qword_3C7138);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v10 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v11 = sub_2E43E0();
    [v10 setDateFormat:v11];

    Class isa = sub_2DDE10().super.isa;
    id v13 = [v10 stringFromDate:isa];

    uint64_t v9 = sub_2E4420();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t _s11BookStoreUI26ContextActionStringBuilderV011publishedByF03forSSSg0A10Foundation9AssetInfo_p_tFZ_0(void *a1)
{
  sub_71044(a1, a1[3]);
  uint64_t v2 = sub_2DF1D0();
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = sub_19AC8C(a1);
    if (v6)
    {
      uint64_t v7 = v5;
      uint64_t v8 = v6;
      sub_1E1E80();
      sub_63BAC((uint64_t *)&unk_3CE340);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_2FCE70;
      *(void *)(v9 + 56) = &type metadata for String;
      unint64_t v10 = sub_AA4E0();
      *(void *)(v9 + 32) = v2;
      *(void *)(v9 + 40) = v4;
      *(void *)(v9 + 96) = &type metadata for String;
      *(void *)(v9 + 104) = v10;
      *(void *)(v9 + 64) = v10;
      *(void *)(v9 + 72) = v7;
      *(void *)(v9 + 80) = v8;
      uint64_t v2 = sub_2E43F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

ValueMetadata *type metadata accessor for ContextActionStringBuilder()
{
  return &type metadata for ContextActionStringBuilder;
}

uint64_t ImageResourceProvider.init(cache:registry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id sub_19AFE8()
{
  id result = [self mapTableWithKeyOptions:517 valueOptions:517];
  qword_3CDFB0 = (uint64_t)result;
  return result;
}

uint64_t sub_19B02C(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v11 = sub_2E0800();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v30 - v17);
  uint64_t v20 = *v5;
  unint64_t v19 = v5[1];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v21((char *)v30 - v17, a1, v11, v16);
  int v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v18, v11);
  if (v22 == enum case for ImageResourceSource.persistedCache(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v18, v11);
    uint64_t v23 = *v18;
    unint64_t v24 = v18[1];
    uint64_t v34 = v20;
    unint64_t v35 = v19;
    uint64_t v33 = &type metadata for String;
    uint64_t v31 = v23;
    unint64_t v32 = v24;
    unint64_t v25 = sub_59D70((uint64_t)&off_3912C8);
    v30[3] = sub_63BAC((uint64_t *)&unk_3CE000);
    v30[0] = v25;
    id v26 = sub_19C154(&v31, (uint64_t)v30, a2, a3, a4, a5);
    sub_662B4((uint64_t)v30, &qword_3C78D0);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((uint64_t)&v31);
    return (uint64_t)v26;
  }
  if (v22 == enum case for ImageResourceSource.network(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v18, v11);
    uint64_t v27 = *v18;
    unint64_t v28 = v18[1];
    uint64_t v31 = v20;
    unint64_t v32 = v19;
    id v26 = sub_19B324(v27, v28, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    return (uint64_t)v26;
  }
  ((void (*)(char *, uint64_t, uint64_t))v21)(v14, a1, v11);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_2E4C50(42);
  v36._object = (void *)0x80000000003190A0;
  v36._countAndFlagsBits = 0xD000000000000028;
  sub_2E44C0(v36);
  sub_2E4DA0();
  uint64_t result = sub_2E4DC0();
  __break(1u);
  return result;
}

id sub_19B324(uint64_t a1, unint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v13 = sub_63BAC(&qword_3CDFB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2DFD90();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v6;
  NSString v21 = sub_2E43E0();
  id v22 = [v20 imageResourceForTemplatedURL:v21 baseURL:0 naturalSize:a4 contentsScale:a5];

  if (v22)
  {
    sub_66444(a3, (uint64_t)v15, &qword_3CDFB8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_662B4((uint64_t)v15, &qword_3CDFB8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      swift_unknownObjectRetain();
      sub_2DFD80();
      NSString v28 = sub_2E43E0();
      swift_bridgeObjectRelease();
      sub_59660((uint64_t)_swiftEmptyArrayStorage);
      Class isa = sub_2E4330().super.isa;
      swift_bridgeObjectRelease();
      id v30 = [v20 imageResource:v22 naturalSize:v28 contentsScale:isa withFilter:a4 filterOptions:a5 a6];
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      if (v30)
      {
        swift_unknownObjectRelease();
        return v30;
      }
    }
  }
  else
  {
    if (qword_3C65B0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_2DF850();
    sub_58BA0(v23, (uint64_t)qword_3CD1E0);
    os_log_type_t v24 = sub_2E48F0();
    swift_bridgeObjectRetain_n();
    unint64_t v25 = sub_2DF830();
    os_log_type_t v26 = v24;
    if (os_log_type_enabled(v25, v24))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_5F150(a1, a2, &v33);
      sub_2E4B40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v25, v26, "Failed to create image resource for: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v22;
}