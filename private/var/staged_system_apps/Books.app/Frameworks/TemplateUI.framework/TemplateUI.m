TUI::ElementInstantiating::BuilderCache *TUI::ElementInstantiating::BuilderCache::BuilderCache(TUI::ElementInstantiating::BuilderCache *this)
{
  char *v2;
  __objc2_prot *v4;
  __objc2_prot *v5;
  __objc2_prot **v6;

  *(_OWORD *)((char *)this + 8) = 0u;
  v2 = (char *)this + 8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  v5 = &OBJC_PROTOCOL___TUIBoxBuilding;
  v6 = &v5;
  sub_3C54((uint64_t)v2, (unint64_t *)&v5, (uint64_t)&std::piecewise_construct, (uint64_t **)&v6)[3] = 0;

  v4 = &OBJC_PROTOCOL___TUIAnimationBuilding;
  v6 = &v4;
  sub_3C54((uint64_t)v2, (unint64_t *)&v4, (uint64_t)&std::piecewise_construct, (uint64_t **)&v6)[3] = 1;

  *(_DWORD *)this = 0;
  return this;
}

void sub_26BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_3BD4(v10);
  sub_3BD4(v9);
  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::~BuilderCache(TUI::ElementInstantiating::BuilderCache *this)
{
}

{
  sub_3BD4((uint64_t)this + 48);
  sub_3BD4((uint64_t)this + 8);
}

uint64_t TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(os_unfair_lock_s *this, objc_class *a2)
{
  id v7 = a2;
  os_unfair_lock_lock(this);
  v3 = sub_417C(&this[12]._os_unfair_lock_opaque, (unint64_t *)&v7);
  if (v3)
  {
    uint64_t v4 = v3[3];
  }
  else
  {
    v5 = *(uint64_t **)&this[6]._os_unfair_lock_opaque;
    if (v5)
    {
      uint64_t v4 = 0;
      do
      {
        if ([v7 conformsToProtocol:v5[2]]) {
          v4 |= 1 << *((_DWORD *)v5 + 6);
        }
        v5 = (uint64_t *)*v5;
      }
      while (v5);
    }
    else
    {
      uint64_t v4 = 0;
    }
    v8 = &v7;
    sub_4234((uint64_t)&this[12], (unint64_t *)&v7, (uint64_t)&std::piecewise_construct, &v8)[3] = v4;
  }
  os_unfair_lock_unlock(this);
  return v4;
}

uint64_t TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_unfair_lock_lock((os_unfair_lock_t)a1);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v3;
  uint64_t v5 = 0;
  id v6 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        unint64_t v15 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v8);
        uint64_t v9 = sub_417C((void *)(a1 + 8), &v15);
        if (v9) {
          v5 |= 1 << *((_DWORD *)v9 + 6);
        }
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
    }
    while (v6);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)a1);
  return v5;
}

void sub_2974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(os_unfair_lock_s *this, Protocol *a2)
{
  id v6 = a2;
  os_unfair_lock_lock(this);
  if (!sub_417C(&this[2]._os_unfair_lock_opaque, (unint64_t *)&v6))
  {
    uint64_t v3 = *(void *)&this[8]._os_unfair_lock_opaque;
    uint64_t v7 = (id *)&v6;
    sub_4234((uint64_t)&this[2], (unint64_t *)&v6, (uint64_t)&std::piecewise_construct, &v7)[3] = v3;
    id v4 = *(uint64_t ***)&this[16]._os_unfair_lock_opaque;
    if (v4)
    {
      uint64_t v5 = 1 << v3;
      do
      {
        if ([v4[2] conformsToProtocol:v6]) {
          v4[3] = (uint64_t *)((unint64_t)v4[3] | v5);
        }
        id v4 = (uint64_t **)*v4;
      }
      while (v4);
    }
  }
  os_unfair_lock_unlock(this);
}

void sub_2A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::updateProtocolsWithBuilderProtocol(uint64_t a1, void *a2, void *a3)
{
  id v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)a1);
  uint64_t v5 = sub_417C((void *)(a1 + 8), (unint64_t *)&v6);
  if (v5) {
    *a2 |= 1 << *((_DWORD *)v5 + 6);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)a1);
}

void sub_2AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id TUI::ElementInstantiating::BuilderCache::description(uint64_t a1, unint64_t a2)
{
  id v4 = objc_opt_new();
  [v4 appendString:@"["];
  uint64_t v5 = *(uint64_t **)(a1 + 24);
  if (v5)
  {
    char v6 = 1;
    do
    {
      if (((1 << *((_DWORD *)v5 + 6)) & a2) != 0)
      {
        if ((v6 & 1) == 0) {
          [v4 appendString:@","];
        }
        uint64_t v7 = NSStringFromProtocol((Protocol *)v5[2]);
        [v4 appendString:v7];

        char v6 = 0;
      }
      uint64_t v5 = (uint64_t *)*v5;
    }
    while (v5);
  }
  [v4 appendString:@"]"];
  id v8 = [v4 copy];

  return v8;
}

void sub_2BF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

TUI::ElementInstantiating::ConformanceCache::Conformance *TUI::ElementInstantiating::ConformanceCache::Conformance::Conformance(TUI::ElementInstantiating::ConformanceCache::Conformance *this)
{
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  bzero(this, 0x30uLL);
  return this;
}

{
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  bzero(this, 0x30uLL);
  return this;
}

TUI::ElementInstantiating::ConformanceCache *TUI::ElementInstantiating::ConformanceCache::ConformanceCache(TUI::ElementInstantiating::ConformanceCache *this, TUIElementRegistry *a2, const StringsSection *a3, os_unfair_lock_s *a4)
{
  v130 = a2;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = 0;
  bzero((char *)this + 24, 0x30uLL);
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  v129 = (char **)((char *)this + 72);
  *((void *)this + 11) = 0;
  TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, (Protocol *)&OBJC_PROTOCOL___TUIModelBuilding);
  if (a3->count)
  {
    unint64_t v7 = 0;
    do
    {
      if (a3->base)
      {
        id v8 = +[NSString stringWithUTF8String:&a3->base[a3->offsets[v7]]];
        uint64_t v9 = [(TUIElementRegistry *)v130 elementClassForName:v8];

        if (v9)
        {
          if (objc_opt_respondsToSelector())
          {
            uint64_t v10 = [(objc_class *)v9 requiredBuilderProtocol];
            if (v10) {
              TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, v10);
            }
          }
          else
          {
            uint64_t v10 = 0;
          }
          if (objc_opt_respondsToSelector())
          {
            long long v11 = [(objc_class *)v9 requiredBuilderProtocols];
          }
          else
          {
            long long v11 = 0;
          }
          long long v136 = 0u;
          long long v137 = 0u;
          long long v134 = 0u;
          long long v135 = 0u;
          id v12 = v11;
          id v13 = [v12 countByEnumeratingWithState:&v134 objects:v139 count:16];
          if (v13)
          {
            uint64_t v14 = *(void *)v135;
            do
            {
              for (i = 0; i != v13; i = (char *)i + 1)
              {
                if (*(void *)v135 != v14) {
                  objc_enumerationMutation(v12);
                }
                TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, *(Protocol **)(*((void *)&v134 + 1) + 8 * i));
              }
              id v13 = [v12 countByEnumeratingWithState:&v134 objects:v139 count:16];
            }
            while (v13);
          }
        }
      }
      ++v7;
    }
    while (v7 < a3->count);
  }
  v16 = (objc_class *)objc_opt_class();
  *(void *)this = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v16);
  v17 = (objc_class *)objc_opt_class();
  *((void *)this + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v17);
  v138 = &OBJC_PROTOCOL___TUITextModelBuilding;
  v18 = +[NSArray arrayWithObjects:&v138 count:1];
  *((void *)this + 2) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v18);

  if (a3->count)
  {
    uint64_t v19 = 0;
    while (1)
    {
      *((void *)&v132 + 1) = 0;
      *(void *)&long long v133 = 0;
      bzero(v131, 0x30uLL);
      if (a3->base)
      {
        v20 = +[NSString stringWithUTF8String:&a3->base[a3->offsets[v19]]];
        v21 = [(TUIElementRegistry *)v130 elementClassForName:v20];

        if (v21)
        {
          if (objc_opt_respondsToSelector()) {
            break;
          }
        }
      }
LABEL_154:
      v110 = (_OWORD *)*((void *)this + 10);
      unint64_t v111 = *((void *)this + 11);
      if ((unint64_t)v110 >= v111)
      {
        unint64_t v115 = 0xAAAAAAAAAAAAAAABLL * (((char *)v110 - *v129) >> 4);
        unint64_t v116 = v115 + 1;
        if (v115 + 1 > 0x555555555555555) {
          sub_4484();
        }
        unint64_t v117 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v111 - (void)*v129) >> 4);
        if (2 * v117 > v116) {
          unint64_t v116 = 2 * v117;
        }
        if (v117 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v118 = 0x555555555555555;
        }
        else {
          unint64_t v118 = v116;
        }
        if (v118) {
          v119 = (char *)sub_452C((uint64_t)this + 88, v118);
        }
        else {
          v119 = 0;
        }
        v120 = &v119[48 * v115];
        long long v121 = *(_OWORD *)v131;
        long long v122 = v133;
        *((_OWORD *)v120 + 1) = v132;
        *((_OWORD *)v120 + 2) = v122;
        *(_OWORD *)v120 = v121;
        v124 = (char *)*((void *)this + 9);
        v123 = (char *)*((void *)this + 10);
        v125 = v120;
        if (v123 != v124)
        {
          do
          {
            long long v126 = *((_OWORD *)v123 - 3);
            long long v127 = *((_OWORD *)v123 - 2);
            *(_OWORD *)((char *)v125 - 19) = *(_OWORD *)(v123 - 19);
            *(v125 - 3) = v126;
            *(v125 - 2) = v127;
            v125 -= 3;
            v123 -= 48;
          }
          while (v123 != v124);
          v123 = *v129;
        }
        v114 = v120 + 48;
        *((void *)this + 9) = v125;
        *((void *)this + 10) = v120 + 48;
        *((void *)this + 11) = &v119[48 * v118];
        if (v123) {
          operator delete(v123);
        }
      }
      else
      {
        long long v112 = *(_OWORD *)v131;
        long long v113 = v133;
        v110[1] = v132;
        v110[2] = v113;
        _OWORD *v110 = v112;
        v114 = v110 + 3;
      }
      *((void *)this + 10) = v114;
      if (++v19 >= a3->count) {
        goto LABEL_171;
      }
    }
    v131[0] = v21;
    if (objc_opt_respondsToSelector()) {
      id v22 = [(objc_class *)v21 objectClass];
    }
    else {
      id v22 = 0;
    }
    *(void *)&long long v132 = v22;
    if (objc_opt_respondsToSelector()) {
      v23 = (objc_class *)[(objc_class *)v21 builderClass];
    }
    else {
      v23 = 0;
    }
    v131[1] = v23;
    if (objc_opt_respondsToSelector())
    {
      v24 = [(objc_class *)v21 requiredBuilderProtocol];
      if (v24)
      {
        TUI::ElementInstantiating::BuilderCache::updateProtocolsWithBuilderProtocol((uint64_t)a4, &v133, v24);
LABEL_39:

LABEL_40:
        unsigned int v25 = [(id)v132 isSubclassOfClass:objc_opt_class()];
        int v26 = 0x8000000;
        if (!v25) {
          int v26 = 0;
        }
        unint64_t v27 = DWORD2(v133) & 0xF7FFFFFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xF7FFFFFF | v26;
        BYTE12(v133) = BYTE4(v27);
        if (v131[1])
        {
          *((void *)&v132 + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v131[1]);
        }
        else if (objc_opt_respondsToSelector())
        {
          v28 = [(objc_class *)v21 builderProtocols];
          if ([v28 count]) {
            *((void *)&v132 + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v28);
          }
          else {
            DWORD2(v133) |= 2u;
          }
        }
        if (!v131[1] && !*((void *)&v132 + 1))
        {
          int v29 = 0x4000000;
          if (!v25) {
            int v29 = 0;
          }
          unint64_t v30 = DWORD2(v133) & 0xFBFFFFFF | ((unint64_t)BYTE12(v133) << 32);
          DWORD2(v133) = DWORD2(v133) & 0xFBFFFFFF | v29;
          BYTE12(v133) = BYTE4(v30);
        }
        if ((void)v133) {
          unsigned int v31 = 0;
        }
        else {
          unsigned int v31 = v25;
        }
        if (v31 == 1) {
          *(void *)&long long v133 = *(void *)this;
        }
        char v32 = objc_opt_respondsToSelector();
        int v33 = 4;
        if ((v32 & 1) == 0) {
          int v33 = 0;
        }
        unint64_t v34 = DWORD2(v133) & 0xFFFFFFFB | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFFFFFB | v33;
        BYTE12(v133) = BYTE4(v34);
        if (objc_opt_respondsToSelector())
        {
          unsigned int v35 = [(objc_class *)v21 evaluateAttributes];
          uint64_t v36 = 8;
          if (!v35) {
            uint64_t v36 = 0;
          }
          unint64_t v37 = DWORD2(v133) & 0xFFFFFFF7 | ((unint64_t)BYTE12(v133) << 32) | v36;
          DWORD2(v133) = DWORD2(v133) & 0xFFFFFFF7 | v36;
          if ((v35 & 1) == 0) {
            goto LABEL_71;
          }
        }
        else
        {
          DWORD2(v133) |= 8u;
        }
        if (objc_opt_respondsToSelector())
        {
          unsigned int v38 = [(objc_class *)v21 resolveAttributes];
          unint64_t v37 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          if (!v38)
          {
            uint64_t v39 = 0;
            goto LABEL_72;
          }
        }
        else
        {
          unint64_t v37 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
LABEL_71:
        uint64_t v39 = 16;
LABEL_72:
        unint64_t v40 = v37 & 0xFFFFFFFFFFFFFFEFLL | v39;
        BYTE12(v133) = BYTE4(v37);
        DWORD2(v133) = v40;
        if ((v37 & 8) != 0)
        {
          if (objc_opt_respondsToSelector())
          {
            unsigned int v41 = [(objc_class *)v21 resolveAttributesForInvocation];
            unint64_t v40 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
            if (!v41)
            {
              int v42 = 0;
              goto LABEL_78;
            }
          }
          else
          {
            unint64_t v40 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          }
        }
        int v42 = 32;
LABEL_78:
        BYTE12(v133) = BYTE4(v40);
        DWORD2(v133) = v40 & 0xFFFFFFDF | v42;
        char v43 = objc_opt_respondsToSelector();
        int v44 = 64;
        if ((v43 & 1) == 0) {
          int v44 = 0;
        }
        unint64_t v45 = DWORD2(v133) & 0xFFFFFFBF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFFFFBF | v44;
        BYTE12(v133) = BYTE4(v45);
        char v46 = objc_opt_respondsToSelector();
        int v47 = 128;
        if ((v46 & 1) == 0) {
          int v47 = 0;
        }
        unint64_t v48 = DWORD2(v133) & 0xFFFFFF7F | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFFFF7F | v47;
        BYTE12(v133) = BYTE4(v48);
        char v49 = objc_opt_respondsToSelector();
        int v50 = 256;
        if ((v49 & 1) == 0) {
          int v50 = 0;
        }
        unint64_t v51 = DWORD2(v133) & 0xFFFFFEFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFFFEFF | v50;
        BYTE12(v133) = BYTE4(v51);
        char v52 = objc_opt_respondsToSelector();
        uint64_t v53 = 512;
        if ((v52 & 1) == 0) {
          uint64_t v53 = 0;
        }
        unint64_t v54 = DWORD2(v133) & 0xFFFFFDFF | ((unint64_t)BYTE12(v133) << 32) | v53;
        DWORD2(v133) = DWORD2(v133) & 0xFFFFFDFF | v53;
        if (v25)
        {
          char v55 = objc_opt_respondsToSelector();
          int v56 = 1024;
          if ((v55 & 1) == 0) {
            int v56 = 0;
          }
          unint64_t v57 = DWORD2(v133) & 0xFFFFFBFF | ((unint64_t)BYTE12(v133) << 32);
          DWORD2(v133) = DWORD2(v133) & 0xFFFFFBFF | v56;
          BYTE12(v133) = BYTE4(v57);
          char v58 = objc_opt_respondsToSelector();
          int v59 = 0;
          uint64_t v60 = 2048;
          if ((v58 & 1) == 0) {
            uint64_t v60 = 0;
          }
          unint64_t v61 = DWORD2(v133) & 0xFFFFF7FF | ((unint64_t)BYTE12(v133) << 32) | v60;
        }
        else
        {
          BYTE12(v133) = BYTE4(v54);
          DWORD2(v133) = v54 & 0xFFFFF3FF;
          char v62 = objc_opt_respondsToSelector();
          unint64_t v61 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          int v59 = 4096;
          if ((v62 & 1) == 0) {
            int v59 = 0;
          }
        }
        BYTE12(v133) = BYTE4(v61);
        DWORD2(v133) = v61 & 0xFFFFEFFF | v59;
        char v63 = objc_opt_respondsToSelector();
        int v64 = 0x2000;
        if ((v63 & 1) == 0) {
          int v64 = 0;
        }
        unint64_t v65 = DWORD2(v133) & 0xFFFFDFFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFFDFFF | v64;
        BYTE12(v133) = BYTE4(v65);
        if (objc_opt_respondsToSelector())
        {
          unsigned int v66 = [(objc_class *)v21 instantiateChildren];
          unint64_t v67 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          if (!v66)
          {
            int v68 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          unint64_t v67 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
        int v68 = 0x8000;
LABEL_101:
        BYTE12(v133) = BYTE4(v67);
        DWORD2(v133) = v67 & 0xFFFF7FFF | v68;
        char v69 = objc_opt_respondsToSelector();
        int v70 = 0x10000;
        if ((v69 & 1) == 0) {
          int v70 = 0;
        }
        unint64_t v71 = DWORD2(v133) & 0xFFFEFFFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFEFFFF | v70;
        BYTE12(v133) = BYTE4(v71);
        char v72 = objc_opt_respondsToSelector();
        int v73 = 0x20000;
        if ((v72 & 1) == 0) {
          int v73 = 0;
        }
        unint64_t v74 = DWORD2(v133) & 0xFFFDFFFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFFDFFFF | v73;
        BYTE12(v133) = BYTE4(v74);
        char v75 = objc_opt_respondsToSelector();
        int v76 = 0;
        uint64_t v77 = 0x40000;
        if ((v75 & 1) == 0) {
          uint64_t v77 = 0;
        }
        unint64_t v78 = DWORD2(v133) & 0xFFFBFFFF | ((unint64_t)BYTE12(v133) << 32) | v77;
        DWORD2(v133) = DWORD2(v133) & 0xFFFBFFFF | v77;
        if ((void)v132)
        {
          if (*((void *)&v132 + 1))
          {
            char v79 = objc_opt_respondsToSelector();
            unint64_t v78 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
            int v76 = 0x80000;
            if ((v79 & 1) == 0) {
              int v76 = 0;
            }
          }
        }
        BYTE12(v133) = BYTE4(v78);
        DWORD2(v133) = v78 & 0xFFF7FFFF | v76;
        char v80 = objc_opt_respondsToSelector();
        int v81 = 0x100000;
        if ((v80 & 1) == 0) {
          int v81 = 0;
        }
        unint64_t v82 = DWORD2(v133) & 0xFFEFFFFF | ((unint64_t)BYTE12(v133) << 32);
        DWORD2(v133) = DWORD2(v133) & 0xFFEFFFFF | v81;
        BYTE12(v133) = BYTE4(v82);
        if (objc_opt_respondsToSelector())
        {
          unsigned int v83 = [(objc_class *)v21 supportOnlyImmediateChildrenForContainedBuilding];
          unint64_t v84 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          int v85 = 0x200000;
          if (!v83) {
            int v85 = 0;
          }
        }
        else
        {
          int v85 = 0;
          unint64_t v84 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
        BYTE12(v133) = BYTE4(v84);
        DWORD2(v133) = v84 & 0xFFDFFFFF | v85;
        if (objc_opt_respondsToSelector())
        {
          unsigned int v86 = [(objc_class *)v21 shouldAutoEnumerateNode];
          unint64_t v87 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          int v88 = 0x400000;
          if (!v86) {
            int v88 = 0;
          }
        }
        else
        {
          int v88 = 0;
          unint64_t v87 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
        BYTE12(v133) = BYTE4(v87);
        DWORD2(v133) = v87 & 0xFFBFFFFF | v88;
        if (objc_opt_respondsToSelector())
        {
          unsigned int v89 = [(objc_class *)v21 allowEmptyEnumerator];
          unint64_t v90 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          int v91 = 0x800000;
          if (!v89) {
            int v91 = 0;
          }
        }
        else
        {
          int v91 = 0;
          unint64_t v90 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
        BYTE12(v133) = BYTE4(v90);
        DWORD2(v133) = v90 & 0xFF7FFFFF | v91;
        if (objc_opt_respondsToSelector())
        {
          unsigned int v92 = [(objc_class *)v21 allowedAsChildInContainedBuilding];
          unint64_t v93 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
          if (!v92)
          {
            int v94 = 0;
LABEL_133:
            int v95 = v93 & 0xEEFFFFFF | v94;
            BOOL v96 = v131[1] != (objc_class *)v132 || (void)v132 == 0;
            int v97 = 0x10000000;
            if (v96) {
              int v97 = 0;
            }
            BYTE12(v133) = BYTE4(v93);
            DWORD2(v133) = v97 | v95;
            unsigned __int8 v98 = [(objc_class *)v21 definesScopes];
            unint64_t v99 = (DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32)) & 0xFFFFFFE07FFFFFFFLL | ((unint64_t)(v98 & 0x3F) << 31);
            DWORD2(v133) = DWORD2(v133) & 0x7FFFFFFF | (v98 << 31);
            BYTE12(v133) = BYTE4(v99);
            char v100 = objc_opt_respondsToSelector();
            uint64_t v101 = 0x4000;
            if ((v100 & 1) == 0) {
              uint64_t v101 = 0;
            }
            unint64_t v102 = DWORD2(v133) & 0xFFFFBFFF | ((unint64_t)BYTE12(v133) << 32) | v101;
            DWORD2(v133) = DWORD2(v133) & 0xFFFFBFFF | v101;
            if (v131[1])
            {
              unsigned int v103 = [(objc_class *)v131[1] instancesRespondToSelector:"configureWithChildNode:attributes:"];
              unint64_t v102 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
              int v104 = 0x2000000;
              if (!v103) {
                int v104 = 0;
              }
            }
            else
            {
              int v104 = 0;
            }
            BYTE12(v133) = BYTE4(v102);
            DWORD2(v133) = v102 & 0xFDFFFFFF | v104;
            unsigned int v105 = [(id)v132 instancesRespondToSelector:"layoutClass"];
            uint64_t v106 = 0x20000000;
            if (!v105) {
              uint64_t v106 = 0;
            }
            unint64_t v107 = DWORD2(v133) & 0xDFFFFFFF | ((unint64_t)BYTE12(v133) << 32) | v106;
            DWORD2(v133) = DWORD2(v133) & 0xDFFFFFFF | v106;
            if (v105)
            {
              unsigned int v108 = [(id)v132 instancesRespondToSelector:"allowDynamicWindowInstantiation"];
              unint64_t v107 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
              int v109 = 0x40000000;
              if (!v108) {
                int v109 = 0;
              }
            }
            else
            {
              int v109 = 0;
            }
            BYTE12(v133) = BYTE4(v107);
            DWORD2(v133) = v107 & 0xBFFFFFFF | v109;
            goto LABEL_154;
          }
        }
        else
        {
          unint64_t v93 = DWORD2(v133) | ((unint64_t)BYTE12(v133) << 32);
        }
        int v94 = 0x1000000;
        goto LABEL_133;
      }
    }
    else
    {
      if ((objc_opt_respondsToSelector() & 1) == 0) {
        goto LABEL_40;
      }
      v24 = [(objc_class *)v21 requiredBuilderProtocols];
      if ([v24 count])
      {
        *(void *)&long long v133 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v24);
        goto LABEL_39;
      }
    }
    DWORD2(v133) |= 1u;
    goto LABEL_39;
  }
LABEL_171:

  return this;
}

void sub_3AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void **a43,void *a44)
{
  int v47 = *a43;
  if (*a43)
  {
    *(void *)(v44 + 80) = v47;
    operator delete(v47);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_3BD4(uint64_t a1)
{
  sub_3C10(a1, *(id **)(a1 + 16));
  v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_3C10(uint64_t a1, id *a2)
{
  if (a2)
  {
    v2 = a2;
    do
    {
      uint64_t v3 = (id *)*v2;

      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void *sub_3C54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  id v13 = (void *)(a1 + 16);
  i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v7;
  uint64_t v14 = **a4;
  **a4 = 0;
  i[2] = v14;
  i[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    BOOL v17 = 1;
    if (v8 >= 3) {
      BOOL v17 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v8);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_3ED8(a1, v20);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v21 = *(void *)a1;
  id v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    void *i = *v22;
LABEL_38:
    *id v22 = i;
    goto LABEL_39;
  }
  void *i = *v13;
  *id v13 = i;
  *(void *)(v21 + 8 * v4) = v13;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v23 >= v8) {
        v23 %= v8;
      }
    }
    else
    {
      v23 &= v8 - 1;
    }
    id v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_3E88(_Unwind_Exception *a1)
{
  sub_4124(v2, v1);
  _Unwind_Resume(a1);
}

void sub_3EA4()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_3ED8(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_3FC8(a1, prime);
    }
  }
}

void sub_3FC8(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_3EA4();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * vsub_3BD4((uint64_t)this + 8) = a1 + 16;
      long long v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            *long long v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            long long v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          long long v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = 0;
  }
}

void sub_4124(uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void *sub_417C(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL) {
    uint64_t v5 = *(void *)&v2 <= v3 ? v3 % *(void *)&v2 : *a2;
  }
  else {
    uint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_4234(uint64_t a1, unint64_t *a2, uint64_t a3, id **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  id v13 = (void *)(a1 + 16);
  i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_3ED8(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    void *i = *v21;
LABEL_38:
    void *v21 = i;
    goto LABEL_39;
  }
  void *i = *v13;
  *id v13 = i;
  *(void *)(v20 + 8 * v4) = v13;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_4468(_Unwind_Exception *a1)
{
  sub_4124(v2, v1);
  _Unwind_Resume(a1);
}

void sub_4484()
{
}

void sub_449C(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_44F8(exception, a1);
}

void sub_44E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_44F8(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_452C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    sub_3EA4();
  }
  return operator new(48 * a2);
}

void sub_5434(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  unint64_t v4 = [*(id *)(a1 + 32) evaluateStringForAttribute:176 node:a2];
  unint64_t v5 = +[TUIAdornmentModel adornmentRoleFromString:v4];

  uint64_t v6 = [*(id *)(a1 + 32) evaluateStringForAttribute:116 node:v3];
  unint64_t v7 = +[TUIAdornmentModel adornmentKindFromString:v6];

  if ([*(id *)(a1 + 40) supportAdornmentWithRole:v5 kind:v7]) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    long long v11 = objc_alloc_init(TUISingleContentBoxBuilder);
    [*(id *)(a1 + 32) instantiateNode:v3 withBuilder:v11];
    uint8x8_t v9 = objc_alloc_init(TUIAdornmentModel);
    [(TUIAdornmentModel *)v9 setRole:v5];
    [(TUIBoxBuilder *)v11 finalizeModelsWithParent:v9 context:*(void *)(a1 + 32)];
    uint64_t v10 = [(TUIAdornmentModel *)v9 submodel];

    if (v10) {
      [*(id *)(a1 + 40) addAdornment:v9];
    }
  }
}

void sub_561C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5A6C()
{
}

void sub_5FD0(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_6A44((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_6180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)TUIBinaryPackage;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_61AC(void *a1)
{
}

void sub_6480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_65F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_6760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_6A44(uint64_t a1)
{
  sub_6A80(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_6A80(int a1, void *__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void *)*v2;
      unint64_t v4 = (void *)v2[3];
      if (v4)
      {
        v2[4] = v4;
        operator delete(v4);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_6ACC(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_6B80();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_6B80()
{
}

void *sub_6B98(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_3EA4();
  }
  return operator new(2 * a2);
}

void sub_6EF0(uint64_t a1)
{
  uint64_t v2 = +[TUIResourceCollector createResourceCollectorForEverything];
  uint64_t v3 = *(void **)(a1 + 32);
  long long v72 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v92 = *(_OWORD *)&CGAffineTransformIdentity.a;
  long long v70 = v92;
  long long v93 = v72;
  long long v94 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  long long v68 = v94;
  [v3 appendResourcesToCollector:v2 transform:&v92];
  size_t v4 = (id *)(a1 + 56);
  size_t v5 = +[TUIResourceCollector createResourceCollectorForVisibleBounds:viewState:](TUIResourceCollector, "createResourceCollectorForVisibleBounds:viewState:", *(void *)(a1 + 40), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  uint64_t v6 = *(void **)(a1 + 32);
  long long v92 = v70;
  long long v93 = v72;
  long long v94 = v68;
  [v6 appendResourcesToCollector:v5 transform:&v92];
  double v9 = *(double *)(a1 + 72);
  double v10 = *(double *)(a1 + 80);
  if (v10 >= v9) {
    double v11 = *(double *)(a1 + 80);
  }
  else {
    double v11 = *(double *)(a1 + 72);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  CGRect v98 = CGRectInset(*(CGRect *)(&v9 - 2), -v11, -v11);
  unint64_t v12 = +[TUIResourceCollector createResourceCollectorForVisibleBounds:viewState:](TUIResourceCollector, "createResourceCollectorForVisibleBounds:viewState:", *(void *)(a1 + 40), v98.origin.x, v98.origin.y, v98.size.width, v98.size.height);
  uint64_t v67 = a1;
  id v13 = *(void **)(a1 + 32);
  long long v92 = v70;
  long long v93 = v72;
  long long v94 = v68;
  [v13 appendResourcesToCollector:v12 transform:&v92];
  unint64_t v71 = v5;
  float v14 = [v5 resources];
  float v15 = +[NSMutableSet setWithSet:v14];

  char v69 = v12;
  BOOL v16 = [v12 resources];
  unint64_t v17 = +[NSMutableSet setWithSet:v16];

  int v73 = v2;
  unint64_t v18 = [v2 resources];
  size_t v19 = +[NSMutableSet setWithSet:v18];

  [v19 minusSet:v17];
  [v17 minusSet:v15];
  uint64_t v20 = objc_opt_new();
  HIDWORD(v21) = 1072168960;
  *(float *)&double v21 = 0.75;
  [*(v4 - 1) _adjustedPriority:v21];
  int v23 = v22;
  HIDWORD(v24) = 1071644672;
  *(float *)&double v24 = 0.5;
  [*(v4 - 1) _adjustedPriority:v24];
  int v26 = v25;
  HIDWORD(v27) = 1070596096;
  *(float *)&double v27 = 0.25;
  [*(v4 - 1) _adjustedPriority:v27];
  int v29 = v28;
  long long v88 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  id v30 = v15;
  id v31 = [v30 countByEnumeratingWithState:&v88 objects:v97 count:16];
  if (v31)
  {
    id v32 = v31;
    uint64_t v33 = *(void *)v89;
    do
    {
      for (i = 0; i != v32; i = (char *)i + 1)
      {
        if (*(void *)v89 != v33) {
          objc_enumerationMutation(v30);
        }
        uint64_t v35 = *(void *)(*((void *)&v88 + 1) + 8 * i);
        uint64_t v36 = [TUIPrioritizedResource alloc];
        LODWORD(v37) = v23;
        unsigned int v38 = [(TUIPrioritizedResource *)v36 initWithResource:v35 priority:v37];
        [v20 addObject:v38];
      }
      id v32 = [v30 countByEnumeratingWithState:&v88 objects:v97 count:16];
    }
    while (v32);
  }

  long long v86 = 0u;
  long long v87 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  id v39 = v17;
  id v40 = [v39 countByEnumeratingWithState:&v84 objects:v96 count:16];
  if (v40)
  {
    id v41 = v40;
    uint64_t v42 = *(void *)v85;
    do
    {
      for (j = 0; j != v41; j = (char *)j + 1)
      {
        if (*(void *)v85 != v42) {
          objc_enumerationMutation(v39);
        }
        uint64_t v44 = *(void *)(*((void *)&v84 + 1) + 8 * (void)j);
        unint64_t v45 = [TUIPrioritizedResource alloc];
        LODWORD(v46) = v26;
        int v47 = [(TUIPrioritizedResource *)v45 initWithResource:v44 priority:v46];
        [v20 addObject:v47];
      }
      id v41 = [v39 countByEnumeratingWithState:&v84 objects:v96 count:16];
    }
    while (v41);
  }

  long long v82 = 0u;
  long long v83 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  id v48 = v19;
  id v49 = [v48 countByEnumeratingWithState:&v80 objects:v95 count:16];
  if (v49)
  {
    id v50 = v49;
    uint64_t v51 = *(void *)v81;
    do
    {
      for (k = 0; k != v50; k = (char *)k + 1)
      {
        if (*(void *)v81 != v51) {
          objc_enumerationMutation(v48);
        }
        uint64_t v53 = *(void *)(*((void *)&v80 + 1) + 8 * (void)k);
        unint64_t v54 = [TUIPrioritizedResource alloc];
        LODWORD(v55) = v29;
        int v56 = [(TUIPrioritizedResource *)v54 initWithResource:v53 priority:v55];
        [v20 addObject:v56];
      }
      id v50 = [v48 countByEnumeratingWithState:&v80 objects:v95 count:16];
    }
    while (v50);
  }

  uint64_t v57 = *(void *)(v67 + 48);
  char v58 = *(NSObject **)(v57 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_74BC;
  block[3] = &unk_2517B0;
  block[4] = v57;
  id v75 = *(id *)(v67 + 32);
  long long v59 = *((_OWORD *)v4 + 1);
  long long v78 = *(_OWORD *)v4;
  long long v79 = v59;
  id v60 = v30;
  id v76 = v60;
  id v61 = v20;
  id v77 = v61;
  dispatch_sync(v58, block);
  uint64_t v62 = *(void *)(v67 + 48);
  if (!*(unsigned char *)(v62 + 72))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v62 + 80));
    char v64 = objc_opt_respondsToSelector();

    if (v64)
    {
      id v65 = objc_loadWeakRetained((id *)(*(void *)(v67 + 48) + 80));
      [v65 imagePrefetchControllerDidStartLoadingInitialResources:*(void *)(v67 + 48)];
    }
    *(unsigned char *)(*(void *)(v67 + 48) + 72) = 1;
  }
  unsigned int v66 = +[TUIImagePrefetchControllerManager sharedManager];
  [v66 prefetchResources:v61 controllerID:*(void *)(*(void *)(v67 + 48) + 88) loader:*(void *)(*(void *)(v67 + 48) + 64)];
}

void sub_74BC(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 73))
  {
    uint64_t v4 = objc_opt_class();
    size_t v5 = TUIDynamicCast(v4, *(void **)(a1 + 40));
    [v5 size];
    double v7 = v6;
    double v8 = *(double *)(a1 + 88);
    if (v6 >= v8
      || ([v5 info],
          v1 = objc_claimAutoreleasedReturnValue(),
          [v1 objectForKeyedSubscript:@"TUIRenderInfoKeyIsFinal"],
          uint64_t v2 = objc_claimAutoreleasedReturnValue(),
          ([v2 BOOLValue] & 1) != 0))
    {
      double v9 = [v5 sections];
      id v10 = [v9 count];

      if (v7 < v8)
      {
      }
      if (v10)
      {
        if (!*(void *)(*(void *)(a1 + 32) + 40))
        {
          uint64_t v11 = +[NSMutableSet set];
          uint64_t v12 = *(void *)(a1 + 32);
          id v13 = *(void **)(v12 + 40);
          *(void *)(v12 + 40) = v11;
        }
        id v14 = [*(id *)(a1 + 48) mutableCopy];
        uint64_t v15 = *(void *)(a1 + 32);
        BOOL v16 = *(void **)(v15 + 24);
        *(void *)(v15 + 24) = v14;

        id v17 = [*(id *)(*(void *)(a1 + 32) + 24) mutableCopy];
        uint64_t v18 = *(void *)(a1 + 32);
        size_t v19 = *(void **)(v18 + 32);
        *(void *)(v18 + 32) = v17;

        uint64_t v20 = *(void *)(a1 + 32);
        double v21 = *(void **)(v20 + 32);
        id v22 = [*(id *)(v20 + 40) copy];
        [v21 minusSet:v22];

        [*(id *)(a1 + 32) _checkInitialResourcesAndInvokeDelegateIfNeeded];
      }
    }
    else
    {
    }
  }
  uint64_t v23 = +[NSMutableSet setWithSet:*(void *)(a1 + 56)];
  uint64_t v24 = *(void *)(a1 + 32);
  int v25 = *(void **)(v24 + 48);
  *(void *)(v24 + sub_3BD4((uint64_t)this + 48) = v23;
}

void sub_76F4(uint64_t a1)
{
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  char v13 = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(NSObject **)(v2 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_7820;
  block[3] = &unk_251800;
  block[4] = v2;
  id v8 = *(id *)(a1 + 40);
  double v9 = &v10;
  dispatch_sync(v3, block);
  if (*((unsigned char *)v11 + 24))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 80));
    char v5 = objc_opt_respondsToSelector();

    if (v5)
    {
      id v6 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 80));
      [v6 imagePrefetchControllerDidLoadAllResources:*(void *)(a1 + 32)];
    }
  }

  _Block_object_dispose(&v10, 8);
}

void sub_7808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7820(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 48);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id v8 = [v7 resource:v12];
        unsigned __int8 v9 = [v8 isEqual:*(void *)(a1 + 40)];

        if (v9)
        {
          id v10 = v7;

          if (v10)
          {
            uint64_t v11 = *(void *)(a1 + 32);
            if (!*(unsigned char *)(v11 + 73))
            {
              [*(id *)(v11 + 40) addObject:v10];
              [*(id *)(*(void *)(a1 + 32) + 32) removeObject:v10];
              [*(id *)(a1 + 32) _checkInitialResourcesAndInvokeDelegateIfNeeded];
              uint64_t v11 = *(void *)(a1 + 32);
            }
            [*(id *)(v11 + 48) removeObject:v10];
          }
          goto LABEL_14;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v10 = 0;
LABEL_14:
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(*(void *)(a1 + 32) + 48) count] == 0;
}

void sub_7BA4(id a1)
{
  v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"start-color";
  v6[1] = @"end-color";
  v6[2] = @"start-position";
  v6[3] = @"end-position";
  v6[4] = @"direction";
  v6[5] = @"role";
  v6[6] = @"blend-mode";
  v6[7] = @"continuous-corners";
  v6[8] = @"opacity";
  id v3 = +[NSArray arrayWithObjects:v6 count:9];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  uint64_t v5 = (void *)qword_2DF160;
  qword_2DF160 = (uint64_t)v4;
}

TUI::Instruction::Evaluation *TUI::Instruction::Evaluation::Evaluation(TUI::Instruction::Evaluation *this, const TUI::Package::Buffer *a2, TUI::Evaluation::Context *a3)
{
  *(void *)this = a2;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = a3;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 1065353216;
  *(_OWORD *)((char *)this + 8sub_3BD4((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 1065353216;
  *((_OWORD *)this + sub_3BD4((uint64_t)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_DWORD *)this + 40) = 1065353216;
  *(_OWORD *)((char *)this + 16sub_3BD4((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_DWORD *)this + 50) = 1065353216;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 2sub_3BD4((uint64_t)this + 48) = 0u;
  *((_DWORD *)this + 60) = 1065353216;
  *(_OWORD *)((char *)this + 264) = 0u;
  *((_DWORD *)this + 70) = 1065353216;
  *((_OWORD *)this + 1sub_3BD4((uint64_t)this + 8) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_DWORD *)this + 80) = 1065353216;
  *(_OWORD *)((char *)this + 32sub_3BD4((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 90) = 1065353216;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_DWORD *)this + 100) = 1065353216;
  sub_80CC((uint64_t *)this + 3, 0x20uLL);
  return this;
}

void sub_8068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10)
{
  sub_1265C(v18);
  sub_1265C(v17);
  sub_1265C(v16);
  sub_1265C(v15);
  sub_1265C(v14);
  sub_1265C(v13);
  sub_125DC(v11);
  sub_125DC(v10);
  sub_125DC(v12 + 48);
  sub_12554((void ***)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_80CC(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_4484();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_12768(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 24 * v6;
    sub_126A8(a1, v7);
    return sub_127B0((uint64_t)v7);
  }
  return result;
}

void sub_816C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_127B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void TUI::Instruction::Evaluation::~Evaluation(TUI::Instruction::Evaluation *this)
{
  sub_1265C((uint64_t)this + 368);
  sub_1265C((uint64_t)this + 328);
  sub_1265C((uint64_t)this + 288);
  sub_1265C((uint64_t)this + 248);
  sub_1265C((uint64_t)this + 208);
  sub_1265C((uint64_t)this + 168);
  sub_125DC((uint64_t)this + 128);
  sub_125DC((uint64_t)this + 88);
  sub_125DC((uint64_t)this + 48);
  id v2 = (void **)((char *)this + 24);
  sub_12554(&v2);
}

void TUI::Instruction::Evaluation::evaluate(double *__return_ptr a1@<X8>, TUI::Instruction::Evaluation *this@<X0>, TUI::Instruction::Decoder *a3@<X1>)
{
  *(_DWORD *)a1 = 0;
  a1[1] = 0.0;
  *((_DWORD *)this + 2) = TUI::Instruction::Decoder::offsetKind((uint64_t)a3);
  uint64_t v6 = (TUI::Instruction::Decoder *)TUI::Instruction::Decoder::offsetIndex(a3);
  *((_DWORD *)this + 3) = v6;
  uint64_t v7 = 1029;
  switch(*((_DWORD *)this + 2))
  {
    case 0:
    case 0x15:
      goto LABEL_3;
    case 1:
      uint64_t v15 = *((void *)this + 3);
      uint64_t v16 = *((void *)this + 4);
      TUI::Instruction::Evaluation::run(this);
      unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((v16 - v15) >> 3);
      uint64_t v18 = *((void *)this + 4);
      if (v18 == *((void *)this + 3))
      {
        int v19 = 0;
        id v20 = 0;
      }
      else
      {
        int v19 = *(_DWORD *)(v18 - 24);
        id v20 = *(id *)(v18 - 16);
        uint64_t v18 = *(void *)(v18 - 8);
        uint64_t v21 = *((void *)this + 4);
        uint64_t v22 = v21 - 24;

        *((void *)this + 4) = v22;
      }
      *(_DWORD *)a1 = v19;
      *((void *)a1 + 1) = v20;
      *((void *)a1 + 2) = v18;
      uint64_t v39 = *((void *)this + 3);
      uint64_t v38 = *((void *)this + 4);
      unint64_t v40 = 0xAAAAAAAAAAAAAAABLL * ((v38 - v39) >> 3);
      if (v40 <= v17)
      {
        if (v40 < v17) {
          TUI::Evaluation::Context::reportError(*((void *)this + 2), 1024, 0);
        }
      }
      else
      {
        sub_F6BC((uint64_t)this + 24, v39 + 24 * v17, v38);
      }
      return;
    case 2:
      uint64_t v23 = *(void *)this;
      if (*(void *)(*(void *)this + 64) <= (unint64_t)v6) {
        goto LABEL_22;
      }
      uint64_t v24 = *(void *)(v23 + 56);
      if (!v24) {
        goto LABEL_22;
      }
      uint64_t v25 = +[NSString stringWithUTF8String:v24 + *(unsigned int *)(*(void *)(v23 + 72) + 4 * v6)];
      goto LABEL_23;
    case 3:
      double v8 = 0.0;
      if (*(void *)(*(void *)this + 32) > (unint64_t)v6) {
        double v8 = *(float *)(*(void *)(*(void *)this + 24) + 4 * v6);
      }
      *(_DWORD *)a1 = 1;
      a1[1] = 0.0;
      a1[2] = v8;
      return;
    case 4:
      if (*(void *)(*(void *)this + 48) <= (unint64_t)v6) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = *(int *)(*(void *)(*(void *)this + 40) + 4 * v6);
      }
      int v37 = 2;
      goto LABEL_29;
    case 5:
      double v27 = (TUI::Evaluation::Context *)*((void *)this + 2);
      unsigned int v28 = TUI::Instruction::Decoder::symbolNameFromU24(v6);
      TUI::Evaluation::Context::lookupConstant(v27, v28, (uint64_t)&v41);
      *(_DWORD *)a1 = v41;
      id v29 = v42;
      id v31 = v42;
      uint64_t v30 = v43;
      *((void *)a1 + 1) = v29;
      *((void *)a1 + 2) = v30;

      return;
    case 6:
      id v32 = (id *)*((void *)this + 2);
      unsigned int v33 = TUI::Instruction::Decoder::symbolNameFromU24(v6);
      uint64_t v25 = TUI::Evaluation::Context::objectForBinding(v32, v33);
      int v34 = 16;
      goto LABEL_24;
    case 7:
      uint64_t v35 = *(void *)this;
      if (*(void *)(*(void *)this + 88) > (unint64_t)v6
        && (uint64_t v36 = *(void *)(v35 + 80)) != 0)
      {
        uint64_t v25 = +[NSString stringWithUTF8String:v36 + *(unsigned int *)(*(void *)(v35 + 96) + 4 * v6)];
      }
      else
      {
LABEL_22:
        uint64_t v25 = 0;
      }
LABEL_23:
      int v34 = 9;
LABEL_24:
      *(_DWORD *)a1 = v34;
      *((void *)a1 + 1) = v25;
      break;
    case 8:
      uint64_t v9 = *((void *)this + 2);
      uint64_t v10 = *(void *)(v9 + 560);
      id v11 = *(id *)(v9 + 584);
      unint64_t v12 = (unint64_t)[v11 contentSizeCategorySymbol];
      uint64_t v13 = *(void *)(v10 + 40);
      if (v12 >= (*(void *)(v10 + 48) - v13) >> 1) {
        int v14 = 0xFFFF;
      }
      else {
        int v14 = *(unsigned __int16 *)(v13 + 2 * v12);
      }

      uint64_t v26 = v14 == *((unsigned __int16 *)this + 6);
      int v37 = 12;
LABEL_29:
      *(_DWORD *)a1 = v37;
      a1[1] = 0.0;
      *((void *)a1 + 2) = v26;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
      uint64_t v7 = 1005;
LABEL_3:
      TUI::Evaluation::Context::reportError(*((void *)this + 2), v7, 0);
      break;
    default:
      return;
  }
}

void sub_850C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Instruction::Evaluation::run(TUI::Instruction::Evaluation *this)
{
  v1 = this;
  TUI::Instruction::Decoder::Decoder(&v774, *(void *)this, *((_DWORD *)this + 3));
  id v2 = (uint64_t *)((char *)v1 + 16);
  unint64_t v3 = v776;
  unint64_t v4 = v777;
  if (v776 >= v777) {
    goto LABEL_1001;
  }
  uint64_t v5 = (uint64_t *)((char *)v1 + 24);
  uint64_t v737 = *(void *)(*((void *)v1 + 2) + 560);
  uint64_t v6 = (uint64_t *)((char *)v1 + 32);
  while (2)
  {
    if (*(unsigned __int16 *)(v775 + 2 * v3) >= 0x64u) {
      __int16 v7 = 0;
    }
    else {
      __int16 v7 = *(_WORD *)(v775 + 2 * v3);
    }
    unint64_t v8 = v3 + 1;
    unint64_t v776 = v3 + 1;
    switch(v7)
    {
      case 0:
      case 11:
        TUI::Evaluation::Context::reportError(*v2, 1029, 0);
        goto LABEL_1000;
      case 1:
LABEL_1000:
        unint64_t v3 = v776;
        unint64_t v4 = v777;
        goto LABEL_1001;
      case 2:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_730;
      case 3:
        if (v8 >= v4) {
          unint64_t v142 = 0xFFFFLL;
        }
        else {
          unint64_t v142 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        double v425 = 0.0;
        if (*(void *)(*(void *)v1 + 32) > v142) {
          double v425 = *(float *)(*(void *)(*(void *)v1 + 24) + 4 * v142);
        }
        int v131 = 1;
        v778[0]._int kind = 1;
        v778[0]._object = 0;
        v778[0].var0._float = v425;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 4:
        int v131 = 1;
        v778[0]._int kind = 1;
        v778[0]._object = 0;
        v778[0].var0._integer = 0;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 5:
        int v126 = 1;
        v778[0]._int kind = 1;
        v778[0]._object = 0;
        v778[0].var0._integer = 0x3FF0000000000000;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_149;
      case 6:
        int v126 = 1;
        v778[0]._int kind = 1;
        v778[0]._object = 0;
        v778[0].var0._integer = 0x7FF8000000000000;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_149;
      case 7:
        if (v8 >= v4) {
          unint64_t v171 = 0xFFFFLL;
        }
        else {
          unint64_t v171 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        if (*(void *)(*(void *)v1 + 48) <= v171) {
          int64_t v426 = 0;
        }
        else {
          int64_t v426 = *(int *)(*(void *)(*(void *)v1 + 40) + 4 * v171);
        }
        int v131 = 2;
        v778[0]._int kind = 2;
        v778[0]._object = 0;
        v778[0].var0._integer = v426;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 8:
        int v126 = 2;
        v778[0]._int kind = 2;
        v778[0]._object = 0;
        v778[0].var0._integer = 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_149;
      case 9:
        if (v8 >= v4) {
          unsigned __int16 v133 = -1;
        }
        else {
          unsigned __int16 v133 = *(_WORD *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        v778[0]._int kind = 6;
        v778[0]._object = 0;
        v778[0].var0._symbol = v133;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        *(_DWORD *)unint64_t v132 = 6;
        goto LABEL_785;
      case 10:
        if (v8 >= v4) {
          unint64_t v187 = 0xFFFFLL;
        }
        else {
          unint64_t v187 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        uint64_t v433 = *(void *)v1;
        if (*(void *)(*(void *)v1 + 64) > v187 && (uint64_t v434 = *(void *)(v433 + 56)) != 0)
        {
          v435 = +[NSString stringWithUTF8String:v434 + *(unsigned int *)(*(void *)(v433 + 72) + 4 * v187)];
        }
        else
        {
          v435 = 0;
        }
        char v100 = v435;
        int v101 = 9;
        v778[0]._int kind = 9;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 12:
        int v126 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = 1;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_149;
      case 13:
        int v126 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = 0;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 < *((void *)v1 + 5)) {
          goto LABEL_149;
        }
        goto LABEL_781;
      case 14:
        if (v8 >= v4) {
          uint64_t v188 = 0xFFFFLL;
        }
        else {
          uint64_t v188 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v436 = -65536;
        }
        else {
          int v436 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v437 = v188 | v726 & 0xFFFFFFFF00000000 | v436 & 0xFFFF0000;
        unsigned int v438 = v188 | v436 & 0xFFFF0000;
        TUI::Evaluation::Context::lookupConstant((TUI::Evaluation::Context *)*v2, v438, (uint64_t)v778);
        unint64_t v439 = *((void *)v1 + 4);
        unint64_t v726 = v437;
        if (v439 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        *(_DWORD *)unint64_t v439 = v778[0]._kind;
        *(void *)(v439 + sub_3BD4((uint64_t)this + 8) = v778[0]._object;
        *(void *)(v439 + 16) = v778[0].var0._integer;
        uint64_t v147 = v439 + 24;
        goto LABEL_786;
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v9 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v9 - 24);
          v778[0]._object = (_value *)*(id *)(v9 - 16);
          v778[0].var0._integer = *(void *)(v9 - 8);
          uint64_t v10 = *v6;
          uint64_t v11 = *v6 - 24;

          *uint64_t v6 = v11;
          uint64_t v12 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v11 != v12)
          {
            LODWORD(v771) = *(_DWORD *)(v10 - 48);
            id v772 = *(id *)(v10 - 40);
            double v773 = *(double *)(v10 - 32);
            uint64_t v13 = *v6 - 24;

            *uint64_t v6 = v13;
          }
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)v778, 1, (TUI::Evaluation::Context *)*v2))
        {
          double v14 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
          double v15 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
          switch(v7)
          {
            case 15:
              char v16 = v14 < v15;
              break;
            case 16:
              char v16 = v14 <= v15;
              break;
            case 17:
              char v16 = v14 > v15;
              break;
            case 18:
              char v16 = v14 >= v15;
              break;
            case 19:
              BOOL v645 = v14 == v15;
              goto LABEL_825;
            case 20:
              BOOL v21 = v14 == v15;
              goto LABEL_829;
            default:
              goto LABEL_815;
          }
          goto LABEL_817;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 12, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)v778, 12, (TUI::Evaluation::Context *)*v2))
        {
          unsigned __int8 v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
          unsigned __int8 v18 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
          if (v7 == 19)
          {
            char v16 = v17 ^ v18 ^ 1;
            goto LABEL_817;
          }
          if (v7 == 20)
          {
            char v16 = v17 ^ v18;
            goto LABEL_817;
          }
          goto LABEL_815;
        }
        if (!TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 6, (TUI::Evaluation::Context *)*v2)|| !TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)v778, 6, (TUI::Evaluation::Context *)*v2))
        {
          goto LABEL_816;
        }
        int v19 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        int v20 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        if (v7 == 19)
        {
          BOOL v645 = v19 == v20;
LABEL_825:
          char v16 = v645;
        }
        else
        {
          if (v7 != 20)
          {
LABEL_815:
            TUI::Evaluation::Context::reportError(*v2, 1020, 0);
LABEL_816:
            char v16 = 0;
            goto LABEL_817;
          }
          BOOL v21 = v19 == v20;
LABEL_829:
          char v16 = !v21;
        }
LABEL_817:
        int v499 = 12;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 12;
        id v769 = 0;
        LOBYTE(v770) = v16;
        unint64_t v500 = *((void *)v1 + 4);
        if (v500 >= *((void *)v1 + 5))
        {
LABEL_819:
          uint64_t v566 = sub_12878(v5, (uint64_t)&v768);
        }
        else
        {
LABEL_818:
          *(_DWORD *)unint64_t v500 = v499;
          *(void *)(v500 + sub_3BD4((uint64_t)this + 8) = 0;
          *(double *)(v500 + 16) = v770;
          uint64_t v566 = v500 + 24;
        }
LABEL_820:
        *uint64_t v6 = v566;
        goto LABEL_993;
      case 21:
        if (v8 >= v4) {
          uint64_t v113 = 0xFFFFLL;
        }
        else {
          uint64_t v113 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v408 = -65536;
        }
        else {
          int v408 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        BOOL isDefined = TUI::Evaluation::Context::isDefined((id *)*v2, v408 & 0xFFFF0000 | (unint64_t)v113);
        int v131 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = isDefined;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 22:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v235 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v235 - 24);
          v778[0]._object = (_value *)*(id *)(v235 - 16);
          v778[0].var0._integer = *(void *)(v235 - 8);
          uint64_t v236 = *v6 - 24;

          *uint64_t v6 = v236;
        }
        double v237 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v137 = 1;
        LODWORD(v771) = 1;
        id v772 = 0;
        double v773 = ceil(v237);
        unint64_t v138 = *((void *)v1 + 4);
        if (v138 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
        goto LABEL_234;
      case 23:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v143 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v143 - 24);
          v778[0]._object = (_value *)*(id *)(v143 - 16);
          v778[0].var0._integer = *(void *)(v143 - 8);
          uint64_t v144 = *v6 - 24;

          *uint64_t v6 = v144;
        }
        double v145 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v137 = 1;
        LODWORD(v771) = 1;
        id v772 = 0;
        double v773 = floor(v145);
        unint64_t v138 = *((void *)v1 + 4);
        if (v138 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
        goto LABEL_234;
      case 24:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v148 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v148 - 24);
          v778[0]._object = (_value *)*(id *)(v148 - 16);
          v778[0].var0._integer = *(void *)(v148 - 8);
          uint64_t v149 = *v6 - 24;

          *uint64_t v6 = v149;
        }
        double v150 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v137 = 1;
        LODWORD(v771) = 1;
        id v772 = 0;
        double v773 = round(v150);
        unint64_t v138 = *((void *)v1 + 4);
        if (v138 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
        goto LABEL_234;
      case 25:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v114 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v114 - 24);
          v778[0]._object = (_value *)*(id *)(v114 - 16);
          v778[0].var0._integer = *(void *)(v114 - 8);
          uint64_t v115 = *v6;
          uint64_t v116 = *v6 - 24;

          *uint64_t v6 = v116;
          uint64_t v117 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v116 != v117)
          {
            LODWORD(v771) = *(_DWORD *)(v115 - 48);
            id v772 = *(id *)(v115 - 40);
            double v773 = *(double *)(v115 - 32);
            uint64_t v118 = *v6 - 24;

            *uint64_t v6 = v118;
          }
        }
        double v505 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        double v506 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
        id v769 = 0;
        double v770 = v505 + v506;
        unint64_t v507 = *((void *)v1 + 4);
        if (v507 >= *((void *)v1 + 5)) {
          goto LABEL_614;
        }
        *(_DWORD *)unint64_t v507 = 1;
        *(void *)(v507 + sub_3BD4((uint64_t)this + 8) = 0;
        *(double *)(v507 + 16) = v770;
        uint64_t v504 = v507 + 24;
        goto LABEL_615;
      case 26:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v119 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v119 - 24);
          v778[0]._object = (_value *)*(id *)(v119 - 16);
          v778[0].var0._integer = *(void *)(v119 - 8);
          uint64_t v120 = *v6;
          uint64_t v121 = *v6 - 24;

          *uint64_t v6 = v121;
          uint64_t v122 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v121 != v122)
          {
            LODWORD(v771) = *(_DWORD *)(v120 - 48);
            id v772 = *(id *)(v120 - 40);
            double v773 = *(double *)(v120 - 32);
            uint64_t v123 = *v6 - 24;

            *uint64_t v6 = v123;
          }
        }
        double v508 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        double v509 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
        id v769 = 0;
        double v770 = v508 - v509;
        unint64_t v510 = *((void *)v1 + 4);
        if (v510 >= *((void *)v1 + 5)) {
          goto LABEL_614;
        }
        *(_DWORD *)unint64_t v510 = 1;
        *(void *)(v510 + sub_3BD4((uint64_t)this + 8) = 0;
        *(double *)(v510 + 16) = v770;
        uint64_t v504 = v510 + 24;
        goto LABEL_615;
      case 27:
        LODWORD(v771) = 0;
        id v772 = 0;
        uint64_t v202 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
        }
        else
        {
          LODWORD(v771) = *(_DWORD *)(v202 - 24);
          id v772 = *(id *)(v202 - 16);
          double v773 = *(double *)(v202 - 8);
          uint64_t v203 = *v6;
          uint64_t v204 = *v6 - 24;

          *uint64_t v6 = v204;
          uint64_t v205 = *v5;
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
          if (v204 != v205)
          {
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v203 - 48);
            id v769 = *(id *)(v203 - 40);
            double v770 = *(double *)(v203 - 32);
            uint64_t v206 = *v6 - 24;

            *uint64_t v6 = v206;
          }
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)&v768, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 1, (TUI::Evaluation::Context *)*v2))
        {
          double v522 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
          double v523 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
          v778[0]._int kind = 1;
          v778[0]._object = 0;
          v778[0].var0._float = v522 * v523;
          unint64_t v524 = *((void *)v1 + 4);
          if (v524 >= *((void *)v1 + 5))
          {
            uint64_t v525 = sub_12878(v5, (uint64_t)v778);
          }
          else
          {
            *(_DWORD *)unint64_t v524 = 1;
            *(void *)(v524 + sub_3BD4((uint64_t)this + 8) = 0;
            *(void *)(v524 + 16) = v778[0].var0._integer;
            uint64_t v525 = v524 + 24;
          }
          *uint64_t v6 = v525;
          object = v778[0]._object;
          goto LABEL_897;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)&v768, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 13, (TUI::Evaluation::Context *)*v2))
        {
          double v526 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
          CGAffineTransformMakeScale(&t1, v526, v526);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2, &t2);
          CGAffineTransformConcat(&v764, &t1, &t2);
          int v765 = 13;
          v766 = 0;
          *(CGAffineTransform *)&v778[0]._int kind = v764;
          v527 = +[NSValue valueWithCGAffineTransform:v778];
          v766 = v527;
          unint64_t v528 = *((void *)v1 + 4);
          if (v528 >= *((void *)v1 + 5)) {
            goto LABEL_894;
          }
          goto LABEL_607;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)&v768, 13, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 1, (TUI::Evaluation::Context *)*v2))
        {
          double v529 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2, &v760);
          CGAffineTransformMakeScale(&v759, v529, v529);
          CGAffineTransformConcat(&v761, &v760, &v759);
          int v765 = 13;
          v766 = 0;
          *(CGAffineTransform *)&v778[0]._int kind = v761;
          v527 = +[NSValue valueWithCGAffineTransform:v778];
          v766 = v527;
          unint64_t v528 = *((void *)v1 + 4);
          if (v528 >= *((void *)v1 + 5))
          {
LABEL_894:
            uint64_t v530 = sub_12878(v5, (uint64_t)&v765);
            goto LABEL_895;
          }
LABEL_607:
          *(_DWORD *)unint64_t v528 = v765;
          *(void *)(v528 + sub_3BD4((uint64_t)this + 8) = v527;
          *(void *)(v528 + 16) = v767;
          uint64_t v530 = v528 + 24;
LABEL_895:
          *uint64_t v6 = v530;
          goto LABEL_896;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)&v768, 13, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind(&v771, 13, (TUI::Evaluation::Context *)*v2))
        {
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2, &v757);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2, &v756);
          CGAffineTransformConcat(&v758, &v757, &v756);
          int v765 = 13;
          v766 = 0;
          *(CGAffineTransform *)&v778[0]._int kind = v758;
          v766 = +[NSValue valueWithCGAffineTransform:v778];
          sub_F858(v5, (uint64_t)&v765);
LABEL_896:
          object = v766;
LABEL_897:

          goto LABEL_898;
        }
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        unint64_t v641 = *((void *)v1 + 4);
        if (v641 >= *((void *)v1 + 5))
        {
          uint64_t v642 = sub_12878(v5, (uint64_t)v778);
        }
        else
        {
          *(_DWORD *)unint64_t v641 = 0;
          *(void *)(v641 + sub_3BD4((uint64_t)this + 8) = 0;
          *(void *)(v641 + 16) = v778[0].var0._integer;
          uint64_t v642 = v641 + 24;
        }
        *uint64_t v6 = v642;

        TUI::Evaluation::Context::reportError(*v2, 1000, 0);
LABEL_898:
        TUI::Instruction::Evaluation::fixFloatIfNeeded(v1);
        goto LABEL_899;
      case 28:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v189 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v189 - 24);
          v778[0]._object = (_value *)*(id *)(v189 - 16);
          v778[0].var0._integer = *(void *)(v189 - 8);
          uint64_t v190 = *v6;
          uint64_t v191 = *v6 - 24;

          *uint64_t v6 = v191;
          uint64_t v192 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v191 != v192)
          {
            LODWORD(v771) = *(_DWORD *)(v190 - 48);
            id v772 = *(id *)(v190 - 40);
            double v773 = *(double *)(v190 - 32);
            uint64_t v193 = *v6 - 24;

            *uint64_t v6 = v193;
          }
        }
        double v518 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        if (v518 == 0.0)
        {
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
          id v769 = 0;
          double v770 = INFINITY;
          unint64_t v609 = *((void *)v1 + 4);
          if (v609 >= *((void *)v1 + 5))
          {
            uint64_t v610 = sub_12878(v5, (uint64_t)&v768);
          }
          else
          {
            *(_DWORD *)unint64_t v609 = 1;
            *(void *)(v609 + sub_3BD4((uint64_t)this + 8) = 0;
            *(double *)(v609 + 16) = v770;
            uint64_t v610 = v609 + 24;
          }
          *uint64_t v6 = v610;

          TUI::Evaluation::Context::reportError(*v2, 1026, 0);
        }
        else
        {
          double v519 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
          id v769 = 0;
          double v770 = v519 / v518;
          unint64_t v520 = *((void *)v1 + 4);
          if (v520 >= *((void *)v1 + 5))
          {
            uint64_t v521 = sub_12878(v5, (uint64_t)&v768);
          }
          else
          {
            *(_DWORD *)unint64_t v520 = 1;
            *(void *)(v520 + sub_3BD4((uint64_t)this + 8) = 0;
            *(double *)(v520 + 16) = v770;
            uint64_t v521 = v520 + 24;
          }
          *uint64_t v6 = v521;
        }
        TUI::Instruction::Evaluation::fixFloatIfNeeded(v1);
        goto LABEL_994;
      case 29:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v262 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v262 - 24);
          v778[0]._object = (_value *)*(id *)(v262 - 16);
          v778[0].var0._integer = *(void *)(v262 - 8);
          uint64_t v263 = *v6;
          uint64_t v264 = *v6 - 24;

          *uint64_t v6 = v264;
          uint64_t v265 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v264 != v265)
          {
            LODWORD(v771) = *(_DWORD *)(v263 - 48);
            id v772 = *(id *)(v263 - 40);
            double v773 = *(double *)(v263 - 32);
            uint64_t v266 = *v6 - 24;

            *uint64_t v6 = v266;
          }
        }
        double v558 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        uint64_t v559 = (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        if (v559) {
          uint64_t v559 = (uint64_t)v558 % v559;
        }
        int v499 = 1;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
        id v769 = 0;
        double v770 = (double)v559;
        unint64_t v500 = *((void *)v1 + 4);
        if (v500 >= *((void *)v1 + 5)) {
          goto LABEL_819;
        }
        goto LABEL_818;
      case 30:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v103 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v103 - 24);
          v778[0]._object = (_value *)*(id *)(v103 - 16);
          v778[0].var0._integer = *(void *)(v103 - 8);
          uint64_t v104 = *v6;
          uint64_t v105 = *v6 - 24;

          *uint64_t v6 = v105;
          uint64_t v106 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v105 != v106)
          {
            LODWORD(v771) = *(_DWORD *)(v104 - 48);
            id v772 = *(id *)(v104 - 40);
            double v773 = *(double *)(v104 - 32);
            uint64_t v107 = *v6 - 24;

            *uint64_t v6 = v107;
          }
        }
        double v501 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        double v502 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
        id v769 = 0;
        double v770 = fmin(v501, v502);
        unint64_t v503 = *((void *)v1 + 4);
        if (v503 >= *((void *)v1 + 5)) {
          goto LABEL_614;
        }
        *(_DWORD *)unint64_t v503 = 1;
        *(void *)(v503 + sub_3BD4((uint64_t)this + 8) = 0;
        *(double *)(v503 + 16) = v770;
        uint64_t v504 = v503 + 24;
        goto LABEL_615;
      case 31:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v207 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v207 - 24);
          v778[0]._object = (_value *)*(id *)(v207 - 16);
          v778[0].var0._integer = *(void *)(v207 - 8);
          uint64_t v208 = *v6;
          uint64_t v209 = *v6 - 24;

          *uint64_t v6 = v209;
          uint64_t v210 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v209 != v210)
          {
            LODWORD(v771) = *(_DWORD *)(v208 - 48);
            id v772 = *(id *)(v208 - 40);
            double v773 = *(double *)(v208 - 32);
            uint64_t v211 = *v6 - 24;

            *uint64_t v6 = v211;
          }
        }
        double v531 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        double v532 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 1;
        id v769 = 0;
        double v770 = fmax(v531, v532);
        unint64_t v533 = *((void *)v1 + 4);
        if (v533 >= *((void *)v1 + 5))
        {
LABEL_614:
          uint64_t v504 = sub_12878(v5, (uint64_t)&v768);
        }
        else
        {
          *(_DWORD *)unint64_t v533 = 1;
          *(void *)(v533 + sub_3BD4((uint64_t)this + 8) = 0;
          *(double *)(v533 + 16) = v770;
          uint64_t v504 = v533 + 24;
        }
LABEL_615:
        *((void *)v1 + 4) = v504;

        TUI::Instruction::Evaluation::fixFloatIfNeeded(v1);
        goto LABEL_994;
      case 32:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v248 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v248 - 24);
          v778[0]._object = (_value *)*(id *)(v248 - 16);
          v778[0].var0._integer = *(void *)(v248 - 8);
          uint64_t v249 = *v6 - 24;

          *uint64_t v6 = v249;
        }
        double v250 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v137 = 1;
        LODWORD(v771) = 1;
        id v772 = 0;
        double v773 = -v250;
        unint64_t v138 = *((void *)v1 + 4);
        if (v138 < *((void *)v1 + 5)) {
          goto LABEL_234;
        }
        goto LABEL_948;
      case 33:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v134 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v134 - 24);
          v778[0]._object = (_value *)*(id *)(v134 - 16);
          v778[0].var0._integer = *(void *)(v134 - 8);
          uint64_t v135 = *v6 - 24;

          *uint64_t v6 = v135;
        }
        unsigned __int8 v136 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v137 = 12;
        LODWORD(v771) = 12;
        id v772 = 0;
        LOBYTE(v773) = v136 ^ 1;
        unint64_t v138 = *((void *)v1 + 4);
        if (v138 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
LABEL_234:
        *(_DWORD *)unint64_t v138 = v137;
        *(void *)(v138 + sub_3BD4((uint64_t)this + 8) = 0;
        *(double *)(v138 + 16) = v773;
        uint64_t v251 = v138 + 24;
        goto LABEL_949;
      case 34:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v95 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v95 - 24);
          v778[0]._object = (_value *)*(id *)(v95 - 16);
          v778[0].var0._integer = *(void *)(v95 - 8);
          uint64_t v96 = *v6;
          uint64_t v97 = *v6 - 24;

          *uint64_t v6 = v97;
          uint64_t v98 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v97 != v98)
          {
            LODWORD(v771) = *(_DWORD *)(v96 - 48);
            id v772 = *(id *)(v96 - 40);
            double v773 = *(double *)(v96 - 32);
            uint64_t v99 = *v6 - 24;

            *uint64_t v6 = v99;
          }
        }
        unsigned int v498 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        if (v498) {
          LOBYTE(v49sub_3BD4((uint64_t)this + 8) = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        }
        int v499 = 12;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 12;
        id v769 = 0;
        LOBYTE(v770) = v498;
        unint64_t v500 = *((void *)v1 + 4);
        if (v500 >= *((void *)v1 + 5)) {
          goto LABEL_819;
        }
        goto LABEL_818;
      case 35:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v257 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v257 - 24);
          v778[0]._object = (_value *)*(id *)(v257 - 16);
          v778[0].var0._integer = *(void *)(v257 - 8);
          uint64_t v258 = *v6;
          uint64_t v259 = *v6 - 24;

          *uint64_t v6 = v259;
          uint64_t v260 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v259 != v260)
          {
            LODWORD(v771) = *(_DWORD *)(v258 - 48);
            id v772 = *(id *)(v258 - 40);
            double v773 = *(double *)(v258 - 32);
            uint64_t v261 = *v6 - 24;

            *uint64_t v6 = v261;
          }
        }
        if (TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2))unsigned __int8 v557 = 1; {
        else
        }
          unsigned __int8 v557 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v499 = 12;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 12;
        id v769 = 0;
        LOBYTE(v770) = v557;
        unint64_t v500 = *((void *)v1 + 4);
        if (v500 >= *((void *)v1 + 5)) {
          goto LABEL_819;
        }
        goto LABEL_818;
      case 36:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v139 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v139 - 24);
          v778[0]._object = (_value *)*(id *)(v139 - 16);
          v778[0].var0._integer = *(void *)(v139 - 8);
          uint64_t v140 = *v6 - 24;

          *uint64_t v6 = v140;
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        if (v8 >= v4) {
          unsigned int v141 = 0xFFFF;
        }
        else {
          unsigned int v141 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v8 + 1;
        TUI::Evaluation::ResolvedValue::resolveProperty((id *)v778, (const TUI::Evaluation::Context *)*v2, v141, (uint64_t)&v771);
        unint64_t v424 = *((void *)v1 + 4);
        if (v424 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
        goto LABEL_454;
      case 37:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v276 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v276 - 24);
          v778[0]._object = (_value *)*(id *)(v276 - 16);
          v778[0].var0._integer = *(void *)(v276 - 8);
          uint64_t v277 = *v6 - 24;

          *uint64_t v6 = v277;
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        if (v8 >= v4) {
          unsigned int v278 = 0xFFFF;
        }
        else {
          unsigned int v278 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v8 + 1;
        TUI::Evaluation::ResolvedValue::testProperty((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2, v278, (uint64_t)&v771);
        unint64_t v424 = *((void *)v1 + 4);
        if (v424 >= *((void *)v1 + 5)) {
          goto LABEL_948;
        }
LABEL_454:
        *(_DWORD *)unint64_t v424 = v771;
        id v440 = v772;
        goto LABEL_947;
      case 38:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v108 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v108 - 24);
          v778[0]._object = (_value *)*(id *)(v108 - 16);
          v778[0].var0._integer = *(void *)(v108 - 8);
          uint64_t v109 = *v6 - 24;

          *uint64_t v6 = v109;
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        if (v8 >= v4) {
          int v110 = -65536;
        }
        else {
          int v110 = *(unsigned __int16 *)(v775 + 2 * v8) << 16;
        }
        if (v8 + 1 >= v4) {
          uint64_t v407 = 0xFFFFLL;
        }
        else {
          uint64_t v407 = *(unsigned __int16 *)(v775 + 2 * (v8 + 1));
        }
        goto LABEL_547;
      case 39:
        uint64_t v72 = *v6;
        if (*v6 == *v5)
        {
          int v73 = 0;
          unint64_t v74 = 0;
        }
        else
        {
          int v73 = *(_DWORD *)(v72 - 24);
          unint64_t v74 = (_value *)*(id *)(v72 - 16);
          v778[0].var0._integer = *(void *)(v72 - 8);
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        v778[0]._int kind = v73;
        v778[0]._object = v74;
        if (v8 >= v4) {
          int v110 = -65536;
        }
        else {
          int v110 = *(unsigned __int16 *)(v775 + 2 * v8) << 16;
        }
        if (v8 + 1 >= v4) {
          uint64_t v407 = 0xFFFFLL;
        }
        else {
          uint64_t v407 = *(unsigned __int16 *)(v775 + 2 * (v8 + 1));
        }
LABEL_547:
        unint64_t v776 = v8 + 2;
        if (!TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2))goto LABEL_995; {
        goto LABEL_581;
        }
      case 40:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v111 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v111 - 24);
          v778[0]._object = (_value *)*(id *)(v111 - 16);
          v778[0].var0._integer = *(void *)(v111 - 8);
          uint64_t v112 = *v6 - 24;

          *uint64_t v6 = v112;
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        if (v8 >= v4) {
          int v110 = -65536;
        }
        else {
          int v110 = *(unsigned __int16 *)(v775 + 2 * v8) << 16;
        }
        if (v8 + 1 >= v4) {
          uint64_t v407 = 0xFFFFLL;
        }
        else {
          uint64_t v407 = *(unsigned __int16 *)(v775 + 2 * (v8 + 1));
        }
        goto LABEL_580;
      case 41:
        uint64_t v128 = *v6;
        if (*v6 == *v5)
        {
          int v129 = 0;
          v130 = 0;
        }
        else
        {
          int v129 = *(_DWORD *)(v128 - 24);
          v130 = (_value *)*(id *)(v128 - 16);
          v778[0].var0._integer = *(void *)(v128 - 8);
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        v778[0]._int kind = v129;
        v778[0]._object = v130;
        if (v8 >= v4) {
          int v110 = -65536;
        }
        else {
          int v110 = *(unsigned __int16 *)(v775 + 2 * v8) << 16;
        }
        if (v8 + 1 >= v4) {
          uint64_t v407 = 0xFFFFLL;
        }
        else {
          uint64_t v407 = *(unsigned __int16 *)(v775 + 2 * (v8 + 1));
        }
LABEL_580:
        unint64_t v776 = v8 + 2;
        if ((TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2) & 1) == 0)LABEL_581:unint64_t v776 = v407 | v110 & 0xFFFF0000; {
        goto LABEL_995;
        }
      case 42:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v279 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v279 - 24);
          v778[0]._object = (_value *)*(id *)(v279 - 16);
          v778[0].var0._integer = *(void *)(v279 - 8);
          uint64_t v280 = *v6;
          uint64_t v281 = *v6 - 24;

          *uint64_t v6 = v281;
          uint64_t v282 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v281 != v282)
          {
            LODWORD(v771) = *(_DWORD *)(v280 - 48);
            id v772 = *(id *)(v280 - 40);
            double v773 = *(double *)(v280 - 32);
            uint64_t v283 = *v6 - 24;

            *uint64_t v6 = v283;
          }
        }
        double v562 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        double v563 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 3;
        id v769 = 0;
        v564 = +[NSValue valueWithCGSize:](NSValue, "valueWithCGSize:", v562, v563);
        id v769 = v564;
        unint64_t v565 = *((void *)v1 + 4);
        if (v565 >= *((void *)v1 + 5)) {
          goto LABEL_819;
        }
        *(_DWORD *)unint64_t v565 = v768;
        *(void *)(v565 + sub_3BD4((uint64_t)this + 8) = v564;
        *(double *)(v565 + 16) = v770;
        uint64_t v566 = v565 + 24;
        goto LABEL_820;
      case 43:
        LODWORD(v771) = 0;
        id v772 = 0;
        uint64_t v75 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
        }
        else
        {
          LODWORD(v771) = *(_DWORD *)(v75 - 24);
          id v772 = *(id *)(v75 - 16);
          double v773 = *(double *)(v75 - 8);
          uint64_t v76 = *v6;
          uint64_t v77 = *v6 - 24;

          *uint64_t v6 = v77;
          uint64_t v78 = *v5;
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
          if (v77 != v78)
          {
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v76 - 48);
            id v769 = *(id *)(v76 - 40);
            double v770 = *(double *)(v76 - 32);
            uint64_t v79 = *v6;
            uint64_t v80 = *v6 - 24;

            *uint64_t v6 = v80;
            uint64_t v81 = *v5;
            int v765 = 0;
            v766 = 0;
            if (v80 != v81)
            {
              int v765 = *(_DWORD *)(v79 - 48);
              v766 = (_value *)*(id *)(v79 - 40);
              uint64_t v767 = *(void *)(v79 - 32);
              uint64_t v82 = *v6;
              uint64_t v83 = *v6 - 24;

              *uint64_t v6 = v83;
              uint64_t v84 = *v5;
              LODWORD(v754) = 0;
              *((void *)&v754 + 1) = 0;
              if (v83 != v84)
              {
                LODWORD(v754) = *(_DWORD *)(v82 - 48);
                *((void *)&v754 + 1) = *(id *)(v82 - 40);
                uint64_t v755 = *(void *)(v82 - 32);
                uint64_t v85 = *v6 - 24;

                *uint64_t v6 = v85;
              }
LABEL_552:
              double v491 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v754, (const TUI::Evaluation::Context *)*v2);
              double v492 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v765, (const TUI::Evaluation::Context *)*v2);
              int64_t v493 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
              double v494 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
              *(double *)&v778[0]._int kind = v491;
              *(double *)&v778[0]._object = v492;
              v778[0].var0._integer = v493;
              *(double *)&v778[1]._int kind = v494;
              LODWORD(v751) = 4;
              id v752 = 0;
              id v495 = [objc_alloc((Class)NSData) initWithBytes:v778 length:32];
              id v752 = v495;
              unint64_t v496 = *((void *)v1 + 4);
              if (v496 >= *((void *)v1 + 5))
              {
                uint64_t v497 = sub_12878(v5, (uint64_t)&v751);
              }
              else
              {
                *(_DWORD *)unint64_t v496 = v751;
                *(void *)(v496 + sub_3BD4((uint64_t)this + 8) = v495;
                *(void *)(v496 + 16) = v753;
                uint64_t v497 = v496 + 24;
              }
              *uint64_t v6 = v497;

LABEL_697:
LABEL_899:

LABEL_900:
              v674 = (_value *)v772;
              goto LABEL_996;
            }
LABEL_551:
            LODWORD(v754) = 0;
            *((void *)&v754 + 1) = 0;
            goto LABEL_552;
          }
        }
        int v765 = 0;
        v766 = 0;
        goto LABEL_551;
      case 44:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v284 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v284 - 24);
          v778[0]._object = (_value *)*(id *)(v284 - 16);
          v778[0].var0._integer = *(void *)(v284 - 8);
          uint64_t v285 = *v6;
          uint64_t v286 = *v6 - 24;

          *uint64_t v6 = v286;
          uint64_t v287 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v286 != v287)
          {
            LODWORD(v771) = *(_DWORD *)(v285 - 48);
            id v772 = *(id *)(v285 - 40);
            double v773 = *(double *)(v285 - 32);
            uint64_t v288 = *v6;
            uint64_t v289 = *v6 - 24;

            *uint64_t v6 = v289;
            uint64_t v290 = *v5;
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
            id v769 = 0;
            if (v289 != v290)
            {
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v288 - 48);
              id v769 = *(id *)(v288 - 40);
              double v770 = *(double *)(v288 - 32);
              uint64_t v291 = *v6;
              uint64_t v292 = *v6 - 24;

              *uint64_t v6 = v292;
              uint64_t v293 = *v5;
              int v765 = 0;
              v766 = 0;
              if (v292 != v293)
              {
                int v765 = *(_DWORD *)(v291 - 48);
                v766 = (_value *)*(id *)(v291 - 40);
                uint64_t v767 = *(void *)(v291 - 32);
                uint64_t v294 = *v6 - 24;

                *uint64_t v6 = v294;
              }
LABEL_661:
              double v567 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v765, (const TUI::Evaluation::Context *)*v2);
              double v568 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
              double v569 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
              id v570 = +[UIColor colorWithRed:v567 green:v568 blue:v569 alpha:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              v571 = v570;
              LODWORD(v754) = 11;
              *((void *)&v754 + 1) = v570;
              unint64_t v572 = *((void *)v1 + 4);
              if (v572 >= *((void *)v1 + 5))
              {
                uint64_t v573 = sub_12878(v5, (uint64_t)&v754);
              }
              else
              {
                *(_DWORD *)unint64_t v572 = 11;
                *(void *)(v572 + sub_3BD4((uint64_t)this + 8) = v570;
                *(void *)(v572 + 16) = v755;
                uint64_t v573 = v572 + 24;
              }
              *uint64_t v6 = v573;

              goto LABEL_992;
            }
LABEL_660:
            int v765 = 0;
            v766 = 0;
            goto LABEL_661;
          }
        }
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
        id v769 = 0;
        goto LABEL_660;
      case 45:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v172 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v172 - 24);
          v778[0]._object = (_value *)*(id *)(v172 - 16);
          v778[0].var0._integer = *(void *)(v172 - 8);
          uint64_t v173 = *v6 - 24;

          *uint64_t v6 = v173;
        }
        TUI::Evaluation::ResolvedValue::colorValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        v174 = (objc_object *)objc_claimAutoreleasedReturnValue();
        v175 = v174;
        if (v174)
        {
          v176 = v174;
          int v177 = 11;
        }
        else
        {
          int v177 = 0;
        }
        LODWORD(v771) = v177;
        id v772 = v175;
        unint64_t v446 = *((void *)v1 + 4);
        if (v446 >= *((void *)v1 + 5)) {
          goto LABEL_791;
        }
        goto LABEL_744;
      case 46:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v299 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v299 - 24);
          v778[0]._object = (_value *)*(id *)(v299 - 16);
          v778[0].var0._integer = *(void *)(v299 - 8);
          uint64_t v300 = *v6;
          uint64_t v301 = *v6 - 24;

          *uint64_t v6 = v301;
          uint64_t v302 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v301 != v302)
          {
            LODWORD(v771) = *(_DWORD *)(v300 - 48);
            id v772 = *(id *)(v300 - 40);
            double v773 = *(double *)(v300 - 32);
            uint64_t v303 = *v6;
            uint64_t v304 = *v6 - 24;

            *uint64_t v6 = v304;
            uint64_t v305 = *v5;
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
            id v769 = 0;
            if (v304 != v305)
            {
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v303 - 48);
              id v769 = *(id *)(v303 - 40);
              double v770 = *(double *)(v303 - 32);
              uint64_t v306 = *v6;
              uint64_t v307 = *v6 - 24;

              *uint64_t v6 = v307;
              uint64_t v308 = *v5;
              int v765 = 0;
              v766 = 0;
              if (v307 != v308)
              {
                int v765 = *(_DWORD *)(v306 - 48);
                v766 = (_value *)*(id *)(v306 - 40);
                uint64_t v767 = *(void *)(v306 - 32);
                uint64_t v309 = *v6 - 24;

                *uint64_t v6 = v309;
                int v310 = HIWORD(TUILengthNull);
                if (v765 == 6)
                {
                  unsigned int v311 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)&v765, (const TUI::Evaluation::Context *)*v2);
                  v312 = *(unsigned __int16 **)(v737 + 40);
                  unint64_t v313 = *(void *)(v737 + 48) - (void)v312;
                  if (v313 < 0x43) {
                    int v314 = 0xFFFF;
                  }
                  else {
                    int v314 = v312[33];
                  }
                  int v676 = HIWORD(TUILengthNull) & 0xFFF8;
                  if (v311 == v314)
                  {
                    int v575 = v676 | 4;
                  }
                  else
                  {
                    if (v313 < 0x45) {
                      int v677 = 0xFFFF;
                    }
                    else {
                      int v677 = v312[34];
                    }
                    if (v311 == v677)
                    {
                      int v575 = v676 | 5;
                    }
                    else
                    {
                      if (v313 < 0xDF) {
                        int v696 = 0xFFFF;
                      }
                      else {
                        int v696 = v312[111];
                      }
                      if (v311 == v696)
                      {
                        int v575 = v676 | 6;
                      }
                      else
                      {
                        if (v313 < 0x41) {
                          int v697 = 0xFFFF;
                        }
                        else {
                          int v697 = v312[32];
                        }
                        if (v311 == v697)
                        {
                          int v575 = v676 | 3;
                        }
                        else
                        {
                          uint64_t v699 = *v2;
                          v700 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v311);
                          v701 = +[NSString stringWithFormat:@"invalid symbol for length: %@", v700];
                          TUI::Evaluation::Context::reportError(v699, 1016, v701);
                          int v575 = v676 | 2;
                        }
                      }
                    }
                  }
                  double v574 = NAN;
                  goto LABEL_970;
                }
LABEL_669:
                double v574 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v765, (const TUI::Evaluation::Context *)*v2);
                int v575 = v310 | 7;
                if (v574 <= -3.40282347e38)
                {
                  *(float *)&int v576 = -3.4028e38;
                }
                else
                {
                  if (v574 < 3.40282347e38)
                  {
LABEL_970:
                    float v577 = v574;
LABEL_971:
                    double v702 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
                    if (v702 <= -3.40282347e38)
                    {
                      *(float *)&int v704 = -3.4028e38;
                    }
                    else
                    {
                      if (v702 < 3.40282347e38)
                      {
                        float v703 = v702;
                        goto LABEL_977;
                      }
                      *(float *)&int v704 = 3.4028e38;
                    }
                    float v703 = *(float *)&v704;
LABEL_977:
                    double v705 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
                    if (v705 <= -3.40282347e38)
                    {
                      *(float *)&int v707 = -3.4028e38;
                    }
                    else
                    {
                      if (v705 < 3.40282347e38)
                      {
                        float v706 = v705;
LABEL_983:
                        double v708 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
                        if (v708 <= -32768.0)
                        {
                          LOWORD(v709) = 0x8000;
                        }
                        else if (v708 >= 32767.0)
                        {
                          LOWORD(v709) = 0x7FFF;
                        }
                        else
                        {
                          int v709 = (int)v708;
                        }
                        unint64_t v751 = LODWORD(v577) | ((unint64_t)LODWORD(v703) << 32);
                        id v752 = (id)(((unint64_t)(unsigned __int16)v709 << 32) | ((unint64_t)(v575 & 0xFFFFFFE7 | 8) << 48) | LODWORD(v706));
                        LODWORD(v754) = 5;
                        *((void *)&v754 + 1) = 0;
                        id v710 = [objc_alloc((Class)NSData) initWithBytes:&v751 length:16];
                        *((void *)&v754 + 1) = v710;
                        unint64_t v711 = *((void *)v1 + 4);
                        if (v711 >= *((void *)v1 + 5))
                        {
                          uint64_t v712 = sub_12878(v5, (uint64_t)&v754);
                        }
                        else
                        {
                          *(_DWORD *)unint64_t v711 = v754;
                          *(void *)(v711 + sub_3BD4((uint64_t)this + 8) = v710;
                          *(void *)(v711 + 16) = v755;
                          uint64_t v712 = v711 + 24;
                        }
                        *uint64_t v6 = v712;

LABEL_992:
LABEL_993:

LABEL_994:
                        goto LABEL_995;
                      }
                      *(float *)&int v707 = 3.4028e38;
                    }
                    float v706 = *(float *)&v707;
                    goto LABEL_983;
                  }
                  *(float *)&int v576 = 3.4028e38;
                }
                float v577 = *(float *)&v576;
                goto LABEL_971;
              }
LABEL_668:
              int v310 = HIWORD(TUILengthNull);
              goto LABEL_669;
            }
LABEL_667:
            int v765 = 0;
            v766 = 0;
            goto LABEL_668;
          }
        }
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
        id v769 = 0;
        goto LABEL_667;
      case 47:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v268 = *v6;
        if (*v6 == *v5)
        {
          int v270 = HIWORD(TUILengthNull);
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v268 - 24);
          v778[0]._object = (_value *)*(id *)(v268 - 16);
          v778[0].var0._integer = *(void *)(v268 - 8);
          uint64_t v269 = *v6 - 24;

          *uint64_t v6 = v269;
          int v270 = HIWORD(TUILengthNull);
          if (v778[0]._kind == 6)
          {
            unsigned int v271 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
            v272 = *(unsigned __int16 **)(v737 + 40);
            unint64_t v273 = *(void *)(v737 + 48) - (void)v272;
            if (v273 < 0x43) {
              int v274 = 0xFFFF;
            }
            else {
              int v274 = v272[33];
            }
            int v653 = HIWORD(TUILengthNull) & 0xFFF8;
            if (v271 == v274)
            {
              int v561 = v653 | 4;
            }
            else
            {
              if (v273 < 0x45) {
                int v654 = 0xFFFF;
              }
              else {
                int v654 = v272[34];
              }
              if (v271 == v654)
              {
                int v561 = v653 | 5;
              }
              else
              {
                if (v273 < 0xDF) {
                  int v673 = 0xFFFF;
                }
                else {
                  int v673 = v272[111];
                }
                if (v271 == v673)
                {
                  int v561 = v653 | 6;
                }
                else
                {
                  if (v273 < 0x41) {
                    int v675 = 0xFFFF;
                  }
                  else {
                    int v675 = v272[32];
                  }
                  if (v271 == v675)
                  {
                    int v561 = v653 | 3;
                  }
                  else
                  {
                    uint64_t v691 = *v2;
                    v692 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v271);
                    v693 = +[NSString stringWithFormat:@"invalid symbol for length: %@", v692];
                    TUI::Evaluation::Context::reportError(v691, 1016, v693);
                    int v561 = v653 | 2;
                  }
                }
              }
            }
            double v560 = NAN;
LABEL_945:
            *(float *)&unsigned int v694 = v560;
            uint64_t v768 = v694 | 0x7FC0000000000000;
            id v769 = (id)(((unint64_t)(v561 & 0xFFFFFFE7 | (16 * ((~v561 & 7) == 0))) << 48) | 0x7FC00000);
            LODWORD(v771) = 5;
            id v772 = 0;
            id v695 = [objc_alloc((Class)NSData) initWithBytes:&v768 length:16];
            id v772 = v695;
            unint64_t v424 = *((void *)v1 + 4);
            if (v424 >= *((void *)v1 + 5))
            {
LABEL_948:
              uint64_t v251 = sub_12878(v5, (uint64_t)&v771);
            }
            else
            {
              *(_DWORD *)unint64_t v424 = v771;
              id v440 = v695;
LABEL_947:
              *(void *)(v424 + sub_3BD4((uint64_t)this + 8) = v440;
              *(double *)(v424 + 16) = v773;
              uint64_t v251 = v424 + 24;
            }
LABEL_949:
            *uint64_t v6 = v251;
            goto LABEL_994;
          }
        }
        double v560 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v561 = v270 | 7;
        goto LABEL_945;
      case 48:
        unint64_t v776 = v3 + 2;
        long long v238 = *(_OWORD *)&CGAffineTransformIdentity.c;
        *(_OWORD *)&v778[0]._int kind = *(_OWORD *)&CGAffineTransformIdentity.a;
        *(_OWORD *)&v778[0].var0._BOOL = v238;
        *(_OWORD *)&v778[1]._object = *(_OWORD *)&CGAffineTransformIdentity.tx;
        LODWORD(v771) = 13;
        id v772 = 0;
        v239 = +[NSValue valueWithCGAffineTransform:v778];
        id v772 = v239;
        unint64_t v240 = *((void *)v1 + 4);
        if (v240 >= *((void *)v1 + 5)) {
          goto LABEL_521;
        }
        goto LABEL_313;
      case 49:
        LODWORD(v771) = 0;
        id v772 = 0;
        uint64_t v320 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
        }
        else
        {
          LODWORD(v771) = *(_DWORD *)(v320 - 24);
          id v772 = *(id *)(v320 - 16);
          double v773 = *(double *)(v320 - 8);
          uint64_t v321 = *v6;
          uint64_t v322 = *v6 - 24;

          *uint64_t v6 = v322;
          uint64_t v323 = *v5;
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
          if (v322 != v323)
          {
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v321 - 48);
            id v769 = *(id *)(v321 - 40);
            double v770 = *(double *)(v321 - 32);
            uint64_t v324 = *v6 - 24;

            *uint64_t v6 = v324;
          }
        }
        double v589 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
        double v590 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        if (v589 == 0.0)
        {
          double v589 = 1.0;
          TUI::Evaluation::Context::reportError(*v2, 1027, 0);
        }
        if (v590 == 0.0)
        {
          double v590 = 1.0;
          TUI::Evaluation::Context::reportError(*v2, 1027, 0);
        }
        CGAffineTransformMakeScale(&v750, v589, v590);
        int v765 = 13;
        v766 = 0;
        *(CGAffineTransform *)&v778[0]._int kind = v750;
        v591 = +[NSValue valueWithCGAffineTransform:v778];
        v766 = v591;
        unint64_t v592 = *((void *)v1 + 4);
        if (v592 >= *((void *)v1 + 5)) {
          goto LABEL_695;
        }
        goto LABEL_694;
      case 50:
        LODWORD(v771) = 0;
        id v772 = 0;
        uint64_t v151 = *v6;
        if (*v6 != *v5)
        {
          LODWORD(v771) = *(_DWORD *)(v151 - 24);
          id v772 = *(id *)(v151 - 16);
          double v773 = *(double *)(v151 - 8);
          uint64_t v152 = *v6 - 24;

          *uint64_t v6 = v152;
        }
        double v153 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        CGAffineTransformMakeRotation(&v749, v153 * 3.14159265 / 180.0);
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 13;
        id v769 = 0;
        *(CGAffineTransform *)&v778[0]._int kind = v749;
        v154 = +[NSValue valueWithCGAffineTransform:v778];
        id v769 = v154;
        unint64_t v155 = *((void *)v1 + 4);
        if (v155 >= *((void *)v1 + 5))
        {
          uint64_t v156 = sub_12878(v5, (uint64_t)&v768);
        }
        else
        {
          *(_DWORD *)unint64_t v155 = v768;
          *(void *)(v155 + sub_3BD4((uint64_t)this + 8) = v154;
          *(double *)(v155 + 16) = v770;
          uint64_t v156 = v155 + 24;
        }
        *uint64_t v6 = v156;
        goto LABEL_899;
      case 51:
        LODWORD(v771) = 0;
        id v772 = 0;
        uint64_t v325 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
        }
        else
        {
          LODWORD(v771) = *(_DWORD *)(v325 - 24);
          id v772 = *(id *)(v325 - 16);
          double v773 = *(double *)(v325 - 8);
          uint64_t v326 = *v6;
          uint64_t v327 = *v6 - 24;

          *uint64_t v6 = v327;
          uint64_t v328 = *v5;
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
          id v769 = 0;
          if (v327 != v328)
          {
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v326 - 48);
            id v769 = *(id *)(v326 - 40);
            double v770 = *(double *)(v326 - 32);
            uint64_t v329 = *v6 - 24;

            *uint64_t v6 = v329;
          }
        }
        double v593 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
        double v594 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
        CGAffineTransformMakeTranslation(&v748, v593, v594);
        int v765 = 13;
        v766 = 0;
        *(CGAffineTransform *)&v778[0]._int kind = v748;
        v591 = +[NSValue valueWithCGAffineTransform:v778];
        v766 = v591;
        unint64_t v592 = *((void *)v1 + 4);
        if (v592 >= *((void *)v1 + 5))
        {
LABEL_695:
          uint64_t v595 = sub_12878(v5, (uint64_t)&v765);
        }
        else
        {
LABEL_694:
          *(_DWORD *)unint64_t v592 = v765;
          *(void *)(v592 + sub_3BD4((uint64_t)this + 8) = v591;
          *(void *)(v592 + 16) = v767;
          uint64_t v595 = v592 + 24;
        }
        *uint64_t v6 = v595;
        goto LABEL_697;
      case 52:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v212 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v212 - 24);
          v778[0]._object = (_value *)*(id *)(v212 - 16);
          v778[0].var0._integer = *(void *)(v212 - 8);
          uint64_t v213 = *v6;
          uint64_t v214 = *v6 - 24;

          *uint64_t v6 = v214;
          uint64_t v215 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v214 != v215)
          {
            LODWORD(v771) = *(_DWORD *)(v213 - 48);
            id v772 = *(id *)(v213 - 40);
            double v773 = *(double *)(v213 - 32);
            uint64_t v216 = *v6;
            uint64_t v217 = *v6 - 24;

            *uint64_t v6 = v217;
            uint64_t v218 = *v5;
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
            id v769 = 0;
            if (v217 != v218)
            {
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v216 - 48);
              id v769 = *(id *)(v216 - 40);
              double v770 = *(double *)(v216 - 32);
              uint64_t v219 = *v6 - 24;

              *uint64_t v6 = v219;
            }
LABEL_618:
            long long v754 = unk_243508;
            double v534 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v768, (const TUI::Evaluation::Context *)*v2);
            double v535 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
            double v536 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
            *(double *)v746 = v534;
            *(double *)&v746[1] = v535;
            *(double *)&v746[2] = v536;
            long long v747 = v754;
            int v765 = 14;
            v766 = 0;
            v537 = (_value *)[objc_alloc((Class)NSData) initWithBytes:v746 length:40];
            v766 = v537;
            unint64_t v538 = *((void *)v1 + 4);
            if (v538 >= *((void *)v1 + 5))
            {
              uint64_t v539 = sub_12878(v5, (uint64_t)&v765);
            }
            else
            {
              *(_DWORD *)unint64_t v538 = v765;
              *(void *)(v538 + sub_3BD4((uint64_t)this + 8) = v537;
              *(void *)(v538 + 16) = v767;
              uint64_t v539 = v538 + 24;
            }
            *uint64_t v6 = v539;
            goto LABEL_992;
          }
        }
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
        id v769 = 0;
        goto LABEL_618;
      case 53:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v296 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v296 - 24);
          v778[0]._object = (_value *)*(id *)(v296 - 16);
          v778[0].var0._integer = *(void *)(v296 - 8);
          uint64_t v297 = *v6 - 24;

          *uint64_t v6 = v297;
          unint64_t v8 = v776;
          unint64_t v4 = v777;
        }
        if (v8 >= v4) {
          uint64_t v298 = 0xFFFFLL;
        }
        else {
          uint64_t v298 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v8 + 1;
        v175 = +[TUIGuideSpec columnWithIndex:TUI::Evaluation::ResolvedValue::integerValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2) edge:v298];
        int v177 = 10;
        LODWORD(v771) = 10;
        id v772 = v175;
        unint64_t v446 = *((void *)v1 + 4);
        if (v446 >= *((void *)v1 + 5)) {
          goto LABEL_791;
        }
        goto LABEL_744;
      case 54:
        if (v8 >= v4) {
          uint64_t v275 = 0xFFFFLL;
        }
        else {
          uint64_t v275 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        char v100 = +[TUIGuideSpec gridWithEdge:v275];
        int v101 = 10;
        v778[0]._int kind = 10;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 55:
        if (v8 >= v4) {
          uint64_t v267 = 0xFFFFLL;
        }
        else {
          uint64_t v267 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        char v100 = +[TUIGuideSpec contentWithEdge:v267];
        int v101 = 10;
        v778[0]._int kind = 10;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 56:
        if (v8 >= v4) {
          uint64_t v146 = 0xFFFFLL;
        }
        else {
          uint64_t v146 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        unint64_t v776 = v3 + 2;
        char v100 = +[TUIGuideSpec named:v146];
        int v101 = 10;
        v778[0]._int kind = 10;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 57:
        char v100 = +[TUIGuideSpec unbound];
        int v101 = 10;
        v778[0]._int kind = 10;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 58:
        int v131 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = 0;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 59:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v341 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v341 - 24);
          v778[0]._object = (_value *)*(id *)(v341 - 16);
          v778[0].var0._integer = *(void *)(v341 - 8);
          uint64_t v342 = *v6 - 24;

          *uint64_t v6 = v342;
        }
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        v175 = (objc_object *)objc_claimAutoreleasedReturnValue();
        int v343 = 12;
        LODWORD(v771) = 12;
        id v772 = 0;
        LOBYTE(v773) = v175 != 0;
        unint64_t v344 = *((void *)v1 + 4);
        if (v344 >= *((void *)v1 + 5)) {
          goto LABEL_791;
        }
        goto LABEL_790;
      case 60:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v220 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v220 - 24);
          v778[0]._object = (_value *)*(id *)(v220 - 16);
          v778[0].var0._integer = *(void *)(v220 - 8);
          uint64_t v221 = *v6 - 24;

          *uint64_t v6 = v221;
        }
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        v175 = (objc_object *)objc_claimAutoreleasedReturnValue();
        if (v175)
        {
          if (objc_opt_respondsToSelector())
          {
            id v222 = [(objc_object *)v175 count];
          }
          else
          {
            TUI::Evaluation::Context::reportError(*v2, 1000, 0);
            id v222 = 0;
          }
        }
        else
        {
          id v222 = 0;
        }
        int v343 = 1;
        LODWORD(v771) = 1;
        id v772 = 0;
        double v773 = (double)(unint64_t)v222;
        unint64_t v344 = *((void *)v1 + 4);
        if (v344 >= *((void *)v1 + 5)) {
          goto LABEL_791;
        }
LABEL_790:
        *(_DWORD *)unint64_t v344 = v343;
        *(void *)(v344 + sub_3BD4((uint64_t)this + 8) = 0;
        *(double *)(v344 + 16) = v773;
        uint64_t v626 = v344 + 24;
        goto LABEL_792;
      case 61:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v252 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v252 - 24);
          v778[0]._object = (_value *)*(id *)(v252 - 16);
          v778[0].var0._integer = *(void *)(v252 - 8);
          uint64_t v253 = *v6;
          uint64_t v254 = *v6 - 24;

          *uint64_t v6 = v254;
          uint64_t v255 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v254 != v255)
          {
            LODWORD(v771) = *(_DWORD *)(v253 - 48);
            id v772 = *(id *)(v253 - 40);
            double v773 = *(double *)(v253 - 32);
            uint64_t v256 = *v6 - 24;

            *uint64_t v6 = v256;
          }
        }
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v771, (TUI::Symbol::Tab **)*v2);
        v554 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if ([(__CFString *)v554 conformsToProtocol:&OBJC_PROTOCOL___TUIIndexedSubscripting])
        {
          if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)v778, 1, (TUI::Evaluation::Context *)*v2))
          {
            v555 = [(__CFString *)v554 tui_objectAtIndex:(uint64_t)TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
          }
          else
          {
            TUI::Evaluation::Context::reportError(*v2, 1000, 0);
            v555 = 0;
          }
        }
        else if ([(__CFString *)v554 conformsToProtocol:&OBJC_PROTOCOL___TUIKeyedSubscripting])
        {
          v556 = (const TUI::Evaluation::Context *)*v2;
          if (v778[0]._kind == 1) {
            +[NSNumber numberWithInteger:(uint64_t)TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, v556)];
          }
          else {
          v663 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)v556);
          }
          if (v663)
          {
            v555 = [(__CFString *)v554 tui_objectForKey:v663];
          }
          else
          {
            v555 = 0;
          }
        }
        else
        {
          v555 = 0;
        }
        v670 = v555;
        v584 = v670;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
        id v769 = v670;
        unint64_t v671 = *((void *)v1 + 4);
        if (v671 >= *((void *)v1 + 5))
        {
          uint64_t v672 = sub_12878(v5, (uint64_t)&v768);
        }
        else
        {
          *(_DWORD *)unint64_t v671 = 16;
          *(void *)(v671 + sub_3BD4((uint64_t)this + 8) = v670;
          *(double *)(v671 + 16) = v770;
          uint64_t v672 = v671 + 24;
        }
        *uint64_t v6 = v672;

        goto LABEL_888;
      case 62:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v178 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v178 - 24);
          v778[0]._object = (_value *)*(id *)(v178 - 16);
          v778[0].var0._integer = *(void *)(v178 - 8);
          uint64_t v179 = *v6;
          uint64_t v180 = *v6 - 24;

          *uint64_t v6 = v180;
          uint64_t v181 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v180 != v181)
          {
            LODWORD(v771) = *(_DWORD *)(v179 - 48);
            id v772 = *(id *)(v179 - 40);
            double v773 = *(double *)(v179 - 32);
            uint64_t v182 = *v6;
            uint64_t v183 = *v6 - 24;

            *uint64_t v6 = v183;
            uint64_t v184 = *v5;
            LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
            id v769 = 0;
            if (v183 != v184)
            {
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = *(_DWORD *)(v182 - 48);
              id v769 = *(id *)(v182 - 40);
              double v770 = *(double *)(v182 - 32);
              uint64_t v185 = *v6 - 24;

              *uint64_t v6 = v185;
            }
LABEL_584:
            v511 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v768, (TUI::Symbol::Tab **)*v2);
            if ([v511 conformsToProtocol:&OBJC_PROTOCOL___TUIIndexedSubscripting])
            {
              double v512 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)&v771, (const TUI::Evaluation::Context *)*v2);
              v513 = [v511 tui_subarrayWithStart:(uint64_t)v512 end:(uint64_t)TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
            }
            else
            {
              v513 = 0;
            }
            id v514 = v513;
            v515 = v514;
            int v765 = 16;
            v766 = (_value *)v514;
            unint64_t v516 = *((void *)v1 + 4);
            if (v516 >= *((void *)v1 + 5))
            {
              uint64_t v517 = sub_12878(v5, (uint64_t)&v765);
            }
            else
            {
              *(_DWORD *)unint64_t v516 = 16;
              *(void *)(v516 + sub_3BD4((uint64_t)this + 8) = v514;
              *(void *)(v516 + 16) = v767;
              uint64_t v517 = v516 + 24;
            }
            *uint64_t v6 = v517;

            goto LABEL_993;
          }
        }
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 0;
        id v769 = 0;
        goto LABEL_584;
      case 63:
        if (v8 >= v4) {
          uint64_t v51 = 0xFFFFLL;
        }
        else {
          uint64_t v51 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v384 = -65536;
        }
        else {
          int v384 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v730 = v51 | v730 & 0xFFFFFFFF00000000 | v384 & 0xFFFF0000;
        TUI::Evaluation::Context::objectForBinding((id *)*v2, v51 | v384 & 0xFFFF0000);
        char v100 = (_value *)(id)objc_claimAutoreleasedReturnValue();
        int v101 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 64:
        if (v8 >= v4) {
          uint64_t v50 = 0xFFFFLL;
        }
        else {
          uint64_t v50 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v371 = -65536;
        }
        else {
          int v371 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v380 = v371 & 0xFFFF0000 | (unint64_t)v50;
        unint64_t v731 = v380 | v731 & 0xFFFFFFFF00000000;
        uint64_t v381 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v371 & 0xFFFF0000 | v50);
        if (!v381)
        {
          uint64_t v602 = *v2;
          unint64_t v722 = v380 | v722 & 0xFFFFFFFF00000000;
          v383 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v722);
          TUI::Evaluation::Context::reportError(v602, 1010, v383);
          goto LABEL_707;
        }
        if (*(void *)(v381 + 16) == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v382 = *v2;
          unint64_t v719 = v380 | v719 & 0xFFFFFFFF00000000;
          v383 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v719);
          TUI::Evaluation::Context::reportError(v382, 1035, v383);
LABEL_707:

          BOOL v603 = 0;
          goto LABEL_777;
        }
        *(unsigned char *)(v381 + 40) |= 1u;
        BOOL v603 = *(unsigned char *)(v381 + 8) & 1;
LABEL_777:
        int v131 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = v603;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 65:
        if (v8 >= v4) {
          uint64_t v295 = 0xFFFFLL;
        }
        else {
          uint64_t v295 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v441 = -65536;
        }
        else {
          int v441 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v442 = v441 & 0xFFFF0000 | (unint64_t)v295;
        unint64_t v732 = v442 | v732 & 0xFFFFFFFF00000000;
        uint64_t v443 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v441 & 0xFFFF0000 | v295);
        if (!v443)
        {
          uint64_t v611 = *v2;
          unint64_t v720 = v442 | v720 & 0xFFFFFFFF00000000;
          v445 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v720);
          TUI::Evaluation::Context::reportError(v611, 1010, v445);
          goto LABEL_724;
        }
        if (*(void *)(v443 + 16) == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v444 = *v2;
          unint64_t v717 = v442 | v717 & 0xFFFFFFFF00000000;
          v445 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v717);
          TUI::Evaluation::Context::reportError(v444, 1035, v445);
LABEL_724:

          LOBYTE(v612) = 0;
          goto LABEL_783;
        }
        *(unsigned char *)(v443 + 40) |= 2u;
        BOOL v612 = (*(unsigned __int8 *)(v443 + 8) >> 1) & 1;
LABEL_783:
        int v131 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = v612;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 < *((void *)v1 + 5)) {
          goto LABEL_784;
        }
        goto LABEL_781;
      case 66:
        if (v8 >= v4) {
          uint64_t v186 = 0xFFFFLL;
        }
        else {
          uint64_t v186 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v427 = -65536;
        }
        else {
          int v427 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v428 = v427 & 0xFFFF0000 | (unint64_t)v186;
        unint64_t v733 = v428 | v733 & 0xFFFFFFFF00000000;
        uint64_t v429 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v427 & 0xFFFF0000 | v186);
        if (!v429)
        {
          uint64_t v608 = *v2;
          unint64_t v721 = v428 | v721 & 0xFFFFFFFF00000000;
          v432 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v721);
          TUI::Evaluation::Context::reportError(v608, 1010, v432);
          goto LABEL_720;
        }
        int64_t v430 = *(void *)(v429 + 16);
        if (v430 == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v431 = *v2;
          unint64_t v718 = v428 | v718 & 0xFFFFFFFF00000000;
          v432 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v718);
          TUI::Evaluation::Context::reportError(v431, 1035, v432);
LABEL_720:

          int64_t v430 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_780;
        }
        *(unsigned char *)(v429 + 40) |= 4u;
LABEL_780:
        int v131 = 2;
        v778[0]._int kind = 2;
        v778[0]._object = 0;
        v778[0].var0._integer = v430;
        unint64_t v132 = *((void *)v1 + 4);
        if (v132 >= *((void *)v1 + 5))
        {
LABEL_781:
          uint64_t v147 = sub_12878(v5, (uint64_t)v778);
LABEL_786:
          *uint64_t v6 = v147;
LABEL_995:
          v674 = v778[0]._object;
LABEL_996:

          goto LABEL_997;
        }
LABEL_784:
        *(_DWORD *)unint64_t v132 = v131;
        goto LABEL_785;
      case 67:
        if (v8 >= v4) {
          uint64_t v62 = 0xFFFFLL;
        }
        else {
          uint64_t v62 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v390 = -65536;
        }
        else {
          int v390 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v392 = v390 & 0xFFFF0000 | (unint64_t)v62;
        unint64_t v734 = v392 | v734 & 0xFFFFFFFF00000000;
        uint64_t v393 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v390 & 0xFFFF0000 | v62);
        if (v393)
        {
          v394 = *(void **)(v393 + 24);
          if (v394)
          {
            id v395 = v394;
            goto LABEL_810;
          }
          uint64_t v649 = *v2;
          unint64_t v715 = v392 | v715 & 0xFFFFFFFF00000000;
          v605 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v715);
          TUI::Evaluation::Context::reportError(v649, 1036, v605);
        }
        else
        {
          uint64_t v604 = *v2;
          unint64_t v723 = v392 | v723 & 0xFFFFFFFF00000000;
          v605 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v723);
          TUI::Evaluation::Context::reportError(v604, 1010, v605);
        }

        id v395 = 0;
LABEL_810:
        char v100 = (_value *)v395;
        int v101 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5))
        {
LABEL_751:
          uint64_t v631 = sub_12878(v5, (uint64_t)v778);
        }
        else
        {
LABEL_811:
          *(_DWORD *)unint64_t v102 = v101;
          *(void *)(v102 + sub_3BD4((uint64_t)this + 8) = v100;
          *(void *)(v102 + 16) = v778[0].var0._integer;
          uint64_t v631 = v102 + 24;
        }
        *uint64_t v6 = v631;
        v481 = v778[0]._object;
LABEL_813:

        goto LABEL_997;
      case 68:
        if (v8 >= v4) {
          uint64_t v86 = 0xFFFFLL;
        }
        else {
          uint64_t v86 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v400 = -65536;
        }
        else {
          int v400 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        Entry v401 = (Entry)(v86 | v400 & 0xFFFF0000);
        unint64_t v735 = v86 | v735 & 0xFFFFFFFF00000000 | v400 & 0xFFFF0000;
        uint64_t v402 = TUI::Evaluation::Context::lookupNamedElement((id *)*v2, v401);
        uint64_t v404 = v403;
        if (v403 == -1)
        {
          v405 = 0;
          int v406 = 0;
        }
        else
        {
          v405 = -[_TUIElementWithClosure initWithRef:context:]([_TUIElementWithClosure alloc], "initWithRef:context:", v402, v403, *v2);
          int v406 = 15;
          v724 = v405;
        }
        v778[0]._int kind = v406;
        v778[0]._object = (_value *)v405;
        unint64_t v606 = *((void *)v1 + 4);
        if (v606 >= *((void *)v1 + 5))
        {
          uint64_t v607 = sub_12878(v5, (uint64_t)v778);
        }
        else
        {
          *(_DWORD *)unint64_t v606 = v406;
          *(void *)(v606 + sub_3BD4((uint64_t)this + 8) = v405;
          *(void *)(v606 + 16) = v778[0].var0._integer;
          uint64_t v607 = v606 + 24;
        }
        unsigned int v66 = (_TUIStyleReferenceElement *)v724;
        *uint64_t v6 = v607;

        if (v404 == -1) {
          goto LABEL_997;
        }
        goto LABEL_762;
      case 69:
        if (v8 >= v4) {
          uint64_t v124 = 0xFFFFLL;
        }
        else {
          uint64_t v124 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v409 = -65536;
        }
        else {
          int v409 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v412 = v124 | v727 & 0xFFFFFFFF00000000 | v409 & 0xFFFF0000;
        Entry v413 = (Entry)(v124 | v409 & 0xFFFF0000);
        TUI::Evaluation::Context::lookupNamedElement((id *)*v2, v413);
        int v131 = 12;
        v778[0]._int kind = 12;
        v778[0]._object = 0;
        v778[0].var0._BOOL = v414 != -1;
        unint64_t v132 = *((void *)v1 + 4);
        unint64_t v727 = v412;
        if (v132 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
        goto LABEL_784;
      case 70:
        unint64_t v776 = v3 + 3;
        goto LABEL_997;
      case 71:
        unint64_t v776 = v3 + 2;
        TUI::Evaluation::Context::beginScope((TUI::Evaluation::Context *)*v2);
        goto LABEL_997;
      case 72:
        TUI::Evaluation::Context::endScope((TUI::Evaluation::Context *)*v2);
        goto LABEL_997;
      case 73:
        if (v8 >= v4) {
          uint64_t v361 = 0xFFFFLL;
        }
        else {
          uint64_t v361 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v451 = -65536;
        }
        else {
          int v451 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        unint64_t v729 = v361 | v729 & 0xFFFFFFFF00000000 | v451 & 0xFFFF0000;
        uint64_t v452 = TUI::Evaluation::Context::lookupFunction((TUI::Evaluation::Context *)*v2, v361 | v451 & 0xFFFF0000);
        if (v453 == -1)
        {
          TUI::Evaluation::Context::reportError(*v2, 1008, 0);
          v778[0]._int kind = 0;
          v778[0]._object = 0;
          unint64_t v132 = *((void *)v1 + 4);
          if (v132 >= *((void *)v1 + 5)) {
            goto LABEL_781;
          }
LABEL_730:
          *(_DWORD *)unint64_t v132 = 0;
LABEL_785:
          *(void *)(v132 + sub_3BD4((uint64_t)this + 8) = 0;
          *(void *)(v132 + 16) = v778[0].var0._integer;
          uint64_t v147 = v132 + 24;
          goto LABEL_786;
        }
        unint64_t v454 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v452 + 40))(v452, v453);
        TUI::Evaluation::Context::pushClosure(*v2);
        if (!TUIDefinitionNotNil(v454)) {
          goto LABEL_855;
        }
        uint64_t v455 = *(void *)(*v2 + 576);
        if (*(void *)(v455 + 184) <= (unint64_t)v454)
        {
          unint64_t v456 = 0;
        }
        else
        {
          unint64_t v456 = *(void *)(v455 + 176) + 12 * v454;
          if (v456)
          {
            uint64_t v457 = *(unsigned int *)(v456 + 8);
            unint64_t v456 = (unint64_t)*(unsigned __int16 *)(v456 + 6) << 32;
LABEL_854:
            TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)*v2, v457 | v456);
LABEL_855:
            v657 = (TUI::Instruction::Decoder *)HIDWORD(v454);
            if (TUIValueNotNil((int)v657))
            {
              TUI::Instruction::Evaluation::evaluate((uint64_t *)&v778[0]._kind, v1, v657);
              unint64_t v658 = *((void *)v1 + 4);
              if (v658 >= *((void *)v1 + 5))
              {
                uint64_t v659 = sub_12878(v5, (uint64_t)v778);
              }
              else
              {
                *(_DWORD *)unint64_t v658 = v778[0]._kind;
                *(void *)(v658 + sub_3BD4((uint64_t)this + 8) = v778[0]._object;
                *(void *)(v658 + 16) = v778[0].var0._integer;
                uint64_t v659 = v658 + 24;
              }
              *uint64_t v6 = v659;
            }
            else
            {
              v778[0]._int kind = 0;
              v778[0]._object = 0;
              unint64_t v660 = *((void *)v1 + 4);
              if (v660 >= *((void *)v1 + 5))
              {
                uint64_t v661 = sub_12878(v5, (uint64_t)v778);
              }
              else
              {
                *(_DWORD *)unint64_t v660 = 0;
                *(void *)(v660 + sub_3BD4((uint64_t)this + 8) = 0;
                *(void *)(v660 + 16) = v778[0].var0._integer;
                uint64_t v661 = v660 + 24;
              }
              *uint64_t v6 = v661;

              TUI::Evaluation::Context::reportError(*v2, 1005, 0);
            }
            TUI::Evaluation::Context::popClosure((TUI::Evaluation::Context *)*v2);
            goto LABEL_997;
          }
        }
        uint64_t v457 = 0xFFFFFFFFLL;
        goto LABEL_854;
      case 74:
        if (v8 >= v4) {
          uint64_t v52 = 0xFFFFLL;
        }
        else {
          uint64_t v52 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v385 = -65536;
        }
        else {
          int v385 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v386 = v736;
        unint64_t v776 = v3 + 3;
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v387 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v387 - 24);
          v778[0]._object = (_value *)*(id *)(v387 - 16);
          v778[0].var0._integer = *(void *)(v387 - 8);
          uint64_t v388 = *v6 - 24;

          unint64_t v386 = v736;
          *uint64_t v6 = v388;
        }
        Entry v389 = (Entry)(v52 | v385 & 0xFFFF0000);
        unint64_t v736 = v52 | v386 & 0xFFFFFFFF00000000 | v385 & 0xFFFF0000;
        TUI::Evaluation::Context::pushConstant((TUI::Evaluation::Context *)*v2, v389, v778);
        goto LABEL_995;
      case 75:
        if (v8 >= v4) {
          uint64_t v63 = 0xFFFFLL;
        }
        else {
          uint64_t v63 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v391 = -65536;
        }
        else {
          int v391 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v396 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v396 - 24);
          v778[0]._object = (_value *)*(id *)(v396 - 16);
          v778[0].var0._integer = *(void *)(v396 - 8);
          uint64_t v397 = *v6 - 24;

          *uint64_t v6 = v397;
        }
        v398 = (TUI::Evaluation::Context *)*v2;
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        v175 = (objc_object *)objc_claimAutoreleasedReturnValue();
        Entry v399 = (Entry)(v63 | v391 & 0xFFFF0000);
        unint64_t v725 = v63 | v725 & 0xFFFFFFFF00000000 | v391 & 0xFFFF0000;
        TUI::Evaluation::Context::pushBinding(v398, v399, v175);
        goto LABEL_793;
      case 76:
        if (v8 >= v4) {
          int v49 = 0xFFFF;
        }
        else {
          int v49 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v370 = -65536;
        }
        else {
          int v370 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        unint64_t v776 = v3 + 3;
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v372 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v372 - 24);
          v778[0]._object = (_value *)*(id *)(v372 - 16);
          v778[0].var0._integer = *(void *)(v372 - 8);
          uint64_t v373 = *v6 - 24;

          *uint64_t v6 = v373;
        }
        TUI::Evaluation::ResolvedValue::elementValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        id v374 = (id)objc_claimAutoreleasedReturnValue();
        v375 = [v374 parsedElement];
        uint64_t v376 = v370 | v49;

        v377 = (void *)*v2;
        if (v375)
        {
          unsigned int v378 = TUIClosureNil;
          id v379 = [v374 parsedElement];
          v771 = v379;
          LODWORD(v772) = TUIElementNodeNil;
          unint64_t v716 = v716 & 0xFFFFFFFF00000000 | v376;
          TUI::Evaluation::Context::pushNamedElement(v377, v376, v378, (uint64_t)&v771);
        }
        else
        {
          if (v374)
          {
            [v374 closureAndCapture];
          }
          else
          {
            v741[0] = 0;
            v741[1] = 0;
            v742 = 0;
          }
          unsigned int v662 = [v374 node];
          v771 = 0;
          LODWORD(v772) = v662;
          unint64_t v714 = v714 & 0xFFFFFFFF00000000 | v376;
          TUI::Evaluation::Context::pushNamedElement(v377, v376, (int *)v741, (uint64_t)&v771);

          if (v742) {
            sub_123E4(v742);
          }
        }
        goto LABEL_881;
      case 77:
        int v126 = 1;
        v778[0]._int kind = 1;
        v778[0]._object = 0;
        v778[0].var0._integer = 0x7FEFFFFFFFFFFFFFLL;
        unint64_t v127 = *((void *)v1 + 4);
        if (v127 >= *((void *)v1 + 5)) {
          goto LABEL_781;
        }
LABEL_149:
        *(_DWORD *)unint64_t v127 = v126;
        *(void *)(v127 + sub_3BD4((uint64_t)this + 8) = 0;
        *(void *)(v127 + 16) = v778[0].var0._integer;
        uint64_t v147 = v127 + 24;
        goto LABEL_786;
      case 78:
        long long v359 = *(_OWORD *)&CGAffineTransformIdentity.c;
        *(_OWORD *)&v778[0]._int kind = *(_OWORD *)&CGAffineTransformIdentity.a;
        *(_OWORD *)&v778[0].var0._BOOL = v359;
        *(_OWORD *)&v778[1]._object = *(_OWORD *)&CGAffineTransformIdentity.tx;
        LODWORD(v771) = 13;
        id v772 = 0;
        v239 = +[NSValue valueWithCGAffineTransform:v778];
        id v772 = v239;
        unint64_t v240 = *((void *)v1 + 4);
        if (v240 >= *((void *)v1 + 5))
        {
LABEL_521:
          uint64_t v360 = sub_12878(v5, (uint64_t)&v771);
        }
        else
        {
LABEL_313:
          *(_DWORD *)unint64_t v240 = v771;
          *(void *)(v240 + sub_3BD4((uint64_t)this + 8) = v239;
          *(double *)(v240 + 16) = v773;
          uint64_t v360 = v240 + 24;
        }
        *uint64_t v6 = v360;
        goto LABEL_900;
      case 79:
        if (v8 >= v4) {
          uint64_t v345 = 0xFFFFLL;
        }
        else {
          uint64_t v345 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          int v447 = -65536;
        }
        else {
          int v447 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2)) << 16;
        }
        if (v3 + 3 >= v4) {
          unsigned int v448 = 0xFFFF;
        }
        else {
          unsigned int v448 = *(unsigned __int16 *)(v775 + 2 * (v3 + 3));
        }
        unint64_t v776 = v3 + 4;
        unint64_t v728 = v345 | v728 & 0xFFFFFFFF00000000 | v447 & 0xFFFF0000;
        TUI::Evaluation::Context::objectForBinding((id *)*v2, v345 | v447 & 0xFFFF0000);
        char v100 = (_value *)(id)objc_claimAutoreleasedReturnValue();
        LODWORD(v771) = 16;
        id v772 = v100;
        TUI::Evaluation::ResolvedValue::resolveProperty(&v771, (const TUI::Evaluation::Context *)*v2, v448, (uint64_t)v778);
        unint64_t v449 = *((void *)v1 + 4);
        if (v449 >= *((void *)v1 + 5))
        {
          uint64_t v450 = sub_12878(v5, (uint64_t)v778);
        }
        else
        {
          *(_DWORD *)unint64_t v449 = v778[0]._kind;
          *(void *)(v449 + sub_3BD4((uint64_t)this + 8) = v778[0]._object;
          *(void *)(v449 + 16) = v778[0].var0._integer;
          uint64_t v450 = v449 + 24;
        }
        *uint64_t v6 = v450;

        v481 = (_value *)v772;
        goto LABEL_813;
      case 80:
        v738 = v1;
        v330 = objc_opt_new();
        if (v776 >= v777)
        {
          ++v776;
          uint64_t v331 = 0xFFFFLL;
        }
        else
        {
          uint64_t v331 = *(unsigned __int16 *)(v775 + 2 * v776++);
          if (!v331)
          {
            v332 = 0;
            goto LABEL_514;
          }
        }
        v458 = 0;
        do
        {
          if (v776 >= v777) {
            unsigned int v459 = 0xFFFF;
          }
          else {
            unsigned int v459 = *(unsigned __int16 *)(v775 + 2 * v776);
          }
          ++v776;
          v778[0]._int kind = 0;
          v778[0]._object = 0;
          uint64_t v460 = *v6;
          if (*v6 != *v5)
          {
            v778[0]._int kind = *(_DWORD *)(v460 - 24);
            v778[0]._object = (_value *)*(id *)(v460 - 16);
            v778[0].var0._integer = *(void *)(v460 - 8);
            uint64_t v461 = *v6 - 24;

            *uint64_t v6 = v461;
          }
          v332 = TUI::Evaluation::ResolvedValue::colorValue((id *)v778, (const TUI::Evaluation::Context *)*v2);

          if (v332)
          {
            v462 = objc_opt_new();
            if ((v459 & 7) != 0)
            {
              if ((v459 & 7) != 1) {
                goto LABEL_499;
              }
              uint64_t v463 = 1;
            }
            else
            {
              uint64_t v463 = v459 & 7;
            }
            v464 = +[UITraitCollection traitCollectionWithUserInterfaceLevel:v463];
            [v462 addObject:v464];

LABEL_499:
            uint64_t v465 = (v459 >> 3) & 3;
            if (v465)
            {
              if (v465 != 1) {
                goto LABEL_503;
              }
              uint64_t v465 = 1;
            }
            v466 = +[UITraitCollection traitCollectionWithDisplayGamut:v465];
            [v462 addObject:v466];

LABEL_503:
            uint64_t v467 = (v459 >> 5) & 3;
            if (v467)
            {
              if (v467 != 1) {
                goto LABEL_507;
              }
              uint64_t v467 = 1;
            }
            v468 = +[UITraitCollection traitCollectionWithAccessibilityContrast:v467];
            [v462 addObject:v468];

LABEL_507:
            int v469 = (v459 >> 7) & 7;
            if (v469)
            {
              if (v469 != 1)
              {
LABEL_512:
                v739[0] = _NSConcreteStackBlock;
                v739[1] = 3221225472;
                v739[2] = sub_F8C4;
                v739[3] = &unk_251890;
                id v472 = v462;
                id v740 = v472;
                v473 = +[UITraitCollection traitCollectionWithTraits:v739];
                [v330 setObject:v332 forKeyedSubscript:v473];

                goto LABEL_513;
              }
              uint64_t v470 = 2;
            }
            else
            {
              uint64_t v470 = 1;
            }
            v471 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:v470];
            [v462 addObject:v471];

            goto LABEL_512;
          }
LABEL_513:
          v458 = v332;
          --v331;
        }
        while (v331);
LABEL_514:
        v474 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:0];
        v475 = [v330 objectForKeyedSubscript:v474];

        if (!v475)
        {
          v476 = v332;
          if (!v332)
          {
            v713 = +[UIColor redColor];
            v476 = v713;
          }
          [v330 setObject:v476 forKeyedSubscript:v474];
          if (!v332) {
        }
          }
        v477 = +[UIColor _dynamicColorWithColorsByTraitCollection:v330];
        v478 = v477;
        if (v477)
        {
          v479 = v477;
          int v480 = 11;
        }
        else
        {
          int v480 = 0;
        }
        v778[0]._int kind = v480;
        v778[0]._object = v478;
        unint64_t v639 = *((void *)v738 + 4);
        if (v639 >= *((void *)v738 + 5))
        {
          uint64_t v640 = sub_12878(v5, (uint64_t)v778);
        }
        else
        {
          *(_DWORD *)unint64_t v639 = v480;
          *(void *)(v639 + sub_3BD4((uint64_t)this + 8) = v478;
          *(void *)(v639 + 16) = v778[0].var0._integer;
          uint64_t v640 = v639 + 24;
        }
        *uint64_t v6 = v640;

LABEL_771:
        v1 = v738;
LABEL_997:
        unint64_t v3 = v776;
        unint64_t v4 = v777;
        if (v776 < v777) {
          continue;
        }
LABEL_1001:
        if (v3 > v4) {
          TUI::Evaluation::Context::reportError(*v2, 1029, 0);
        }
        TUI::Instruction::Decoder::~Decoder((TUI::Instruction::Decoder *)&v774);
        return;
      case 81:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v64 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v64 - 24);
          v778[0]._object = (_value *)*(id *)(v64 - 16);
          v778[0].var0._integer = *(void *)(v64 - 8);
          uint64_t v65 = *v6 - 24;

          *uint64_t v6 = v65;
        }
        TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v67 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v67 - 24);
          v778[0]._object = (_value *)*(id *)(v67 - 16);
          v778[0].var0._integer = *(void *)(v67 - 8);
          uint64_t v68 = *v6 - 24;

          *uint64_t v6 = v68;
        }
        char v69 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        long long v70 = v69;
        if (v69)
        {
          id v71 = v69;
        }
        else
        {
          id v71 = +[TUIFontSpec defaultFontSpec];
        }
        v618 = v71;

        v619 = [v618 fontSpecWithFamily:v66];

        v485 = v619;
        int v486 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v485;
        unint64_t v487 = *((void *)v1 + 4);
        if (v487 >= *((void *)v1 + 5)) {
          goto LABEL_757;
        }
        goto LABEL_760;
      case 82:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v87 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v87 - 24);
          v778[0]._object = (_value *)*(id *)(v87 - 16);
          v778[0].var0._integer = *(void *)(v87 - 8);
          uint64_t v88 = *v6 - 24;

          *uint64_t v6 = v88;
        }
        unsigned __int16 v89 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        TUI::Instruction::Evaluation::systemDesignFromSymbol(v1, v89);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v90 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v90 - 24);
          v778[0]._object = (_value *)*(id *)(v90 - 16);
          v778[0].var0._integer = *(void *)(v90 - 8);
          uint64_t v91 = *v6 - 24;

          *uint64_t v6 = v91;
        }
        long long v92 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        long long v93 = v92;
        if (v92)
        {
          id v94 = v92;
        }
        else
        {
          id v94 = +[TUIFontSpec defaultFontSpec];
        }
        v632 = v94;

        v633 = [v632 fontSpecWithDesign:v66];

        v485 = v633;
        int v486 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v485;
        unint64_t v487 = *((void *)v1 + 4);
        if (v487 >= *((void *)v1 + 5)) {
          goto LABEL_757;
        }
        goto LABEL_760;
      case 83:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v346 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v346 - 24);
          v778[0]._object = (_value *)*(id *)(v346 - 16);
          v778[0].var0._integer = *(void *)(v346 - 8);
          uint64_t v347 = *v6 - 24;

          *uint64_t v6 = v347;
        }
        double v348 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v349 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v349 - 24);
          v778[0]._object = (_value *)*(id *)(v349 - 16);
          v778[0].var0._integer = *(void *)(v349 - 8);
          uint64_t v350 = *v6 - 24;

          *uint64_t v6 = v350;
        }
        v351 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        v352 = v351;
        if (v351)
        {
          id v353 = v351;
        }
        else
        {
          id v353 = +[TUIFontSpec defaultFontSpec];
        }
        v622 = v353;

        v623 = [v622 fontSpecWithPointSize:v348];

        char v100 = v623;
        int v101 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 84:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v194 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v194 - 24);
          v778[0]._object = (_value *)*(id *)(v194 - 16);
          v778[0].var0._integer = *(void *)(v194 - 8);
          uint64_t v195 = *v6 - 24;

          *uint64_t v6 = v195;
        }
        unsigned __int16 v196 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        TUI::Instruction::Evaluation::textStyleFromSymbol(v1, v196);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v197 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v197 - 24);
          v778[0]._object = (_value *)*(id *)(v197 - 16);
          v778[0].var0._integer = *(void *)(v197 - 8);
          uint64_t v198 = *v6 - 24;

          *uint64_t v6 = v198;
        }
        v199 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        v200 = v199;
        if (v199)
        {
          id v201 = v199;
        }
        else
        {
          id v201 = +[TUIFontSpec defaultFontSpec];
        }
        v634 = v201;

        v635 = [v634 fontSpecWithTextStyle:v66];

        v485 = v635;
        int v486 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v485;
        unint64_t v487 = *((void *)v1 + 4);
        if (v487 >= *((void *)v1 + 5)) {
          goto LABEL_757;
        }
        goto LABEL_760;
      case 85:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v157 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v157 - 24);
          v778[0]._object = (_value *)*(id *)(v157 - 16);
          v778[0].var0._integer = *(void *)(v157 - 8);
          uint64_t v158 = *v6 - 24;

          *uint64_t v6 = v158;
        }
        double v159 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v160 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v160 - 24);
          v778[0]._object = (_value *)*(id *)(v160 - 16);
          v778[0].var0._integer = *(void *)(v160 - 8);
          uint64_t v161 = *v6 - 24;

          *uint64_t v6 = v161;
        }
        v162 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        v163 = v162;
        if (v162)
        {
          id v164 = v162;
        }
        else
        {
          id v164 = +[TUIFontSpec defaultFontSpec];
        }
        v620 = v164;

        v621 = [v620 fontSpecWithMaxPointSize:v159];

        char v100 = v621;
        int v101 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 86:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v333 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v333 - 24);
          v778[0]._object = (_value *)*(id *)(v333 - 16);
          v778[0].var0._integer = *(void *)(v333 - 8);
          uint64_t v334 = *v6 - 24;

          *uint64_t v6 = v334;
        }
        unsigned __int16 v335 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        TUI::Instruction::Evaluation::contentSizeFromSymbol(v1, v335);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v336 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v336 - 24);
          v778[0]._object = (_value *)*(id *)(v336 - 16);
          v778[0].var0._integer = *(void *)(v336 - 8);
          uint64_t v337 = *v6 - 24;

          *uint64_t v6 = v337;
        }
        v338 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        v339 = v338;
        if (v338)
        {
          id v340 = v338;
        }
        else
        {
          id v340 = +[TUIFontSpec defaultFontSpec];
        }
        v637 = v340;

        v638 = [v637 fontSpecWithMaxContentSize:v66];

        v485 = v638;
        int v486 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v485;
        unint64_t v487 = *((void *)v1 + 4);
        if (v487 < *((void *)v1 + 5)) {
          goto LABEL_760;
        }
        goto LABEL_757;
      case 87:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v223 = *v6;
        if (*v6 == *v5)
        {
          v225 = (const TUI::Evaluation::Context *)*v2;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v223 - 24);
          v778[0]._object = (_value *)*(id *)(v223 - 16);
          v778[0].var0._integer = *(void *)(v223 - 8);
          uint64_t v224 = *v6 - 24;

          *uint64_t v6 = v224;
          v225 = (const TUI::Evaluation::Context *)*v2;
          if (v778[0]._kind == 6)
          {
            int v226 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, v225);
            v225 = (const TUI::Evaluation::Context *)*v2;
            uint64_t v227 = *(void *)(*(void *)(*v2 + 560) + 40);
            if ((unint64_t)(*(void *)(*(void *)(*v2 + 560) + 48) - v227) < 0x9F) {
              int v228 = 0xFFFF;
            }
            else {
              int v228 = *(unsigned __int16 *)(v227 + 158);
            }
            if (v226 == v228)
            {
              double v540 = NAN;
LABEL_624:
              LODWORD(v771) = 0;
              id v772 = 0;
              uint64_t v541 = *v6;
              if (*v6 != *v5)
              {
                LODWORD(v771) = *(_DWORD *)(v541 - 24);
                id v772 = *(id *)(v541 - 16);
                double v773 = *(double *)(v541 - 8);
                uint64_t v542 = *v6 - 24;

                *uint64_t v6 = v542;
              }
              v543 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v771, (const TUI::Evaluation::Context *)*v2);
              v544 = v543;
              if (v543)
              {
                id v545 = v543;
              }
              else
              {
                id v545 = +[TUIFontSpec defaultFontSpec];
              }
              v624 = v545;

              v625 = [v624 fontSpecWithLeading:v540];

              v175 = v625;
              int v177 = 17;
              LODWORD(v771) = 17;
              id v772 = v175;
              unint64_t v446 = *((void *)v1 + 4);
              if (v446 >= *((void *)v1 + 5))
              {
LABEL_791:
                uint64_t v626 = sub_12878(v5, (uint64_t)&v771);
              }
              else
              {
LABEL_744:
                *(_DWORD *)unint64_t v446 = v177;
                *(void *)(v446 + sub_3BD4((uint64_t)this + 8) = v175;
                *(double *)(v446 + 16) = v773;
                uint64_t v626 = v446 + 24;
              }
LABEL_792:
              *uint64_t v6 = v626;

LABEL_793:
              goto LABEL_995;
            }
            if (v778[0]._kind == 6)
            {
              int v650 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, v225);
              v225 = (const TUI::Evaluation::Context *)*v2;
              uint64_t v651 = *(void *)(*(void *)(*v2 + 560) + 40);
              int v652 = (unint64_t)(*(void *)(*(void *)(*v2 + 560) + 48) - v651) < 0xCF
                   ? 0xFFFF
                   : *(unsigned __int16 *)(v651 + 206);
              double v540 = 0.0;
              if (v650 == v652) {
                goto LABEL_624;
              }
            }
          }
        }
        double v540 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, v225);
        goto LABEL_624;
      case 88:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v27 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v27 - 24);
          v778[0]._object = (_value *)*(id *)(v27 - 16);
          v778[0].var0._integer = *(void *)(v27 - 8);
          uint64_t v28 = *v6 - 24;

          *uint64_t v6 = v28;
        }
        unsigned __int16 v29 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        double v30 = TUI::Instruction::Evaluation::fontWeightFromSymbol(v1, v29);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v31 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v31 - 24);
          v778[0]._object = (_value *)*(id *)(v31 - 16);
          v778[0].var0._integer = *(void *)(v31 - 8);
          uint64_t v32 = *v6 - 24;

          *uint64_t v6 = v32;
        }
        unsigned int v33 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        int v34 = v33;
        if (v33)
        {
          id v35 = v33;
        }
        else
        {
          id v35 = +[TUIFontSpec defaultFontSpec];
        }
        v627 = v35;

        v628 = [v627 fontSpecWithWeight:v30];

        char v100 = v628;
        int v101 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 89:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v53 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v53 - 24);
          v778[0]._object = (_value *)*(id *)(v53 - 16);
          v778[0].var0._integer = *(void *)(v53 - 8);
          uint64_t v54 = *v6 - 24;

          *uint64_t v6 = v54;
        }
        unsigned __int16 v55 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
        int v56 = TUI::Instruction::Evaluation::fontCapsFromSymbol(v1, v55);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v57 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v57 - 24);
          v778[0]._object = (_value *)*(id *)(v57 - 16);
          v778[0].var0._integer = *(void *)(v57 - 8);
          uint64_t v58 = *v6 - 24;

          *uint64_t v6 = v58;
        }
        long long v59 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
        id v60 = v59;
        if (v59)
        {
          id v61 = v59;
        }
        else
        {
          id v61 = +[TUIFontSpec defaultFontSpec];
        }
        v629 = v61;

        v630 = [v629 fontSpecWithCaps:v56];

        char v100 = v630;
        int v101 = 17;
        v778[0]._int kind = 17;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 90:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v354 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v354 - 24);
          v778[0]._object = (_value *)*(id *)(v354 - 16);
          v778[0].var0._integer = *(void *)(v354 - 8);
          uint64_t v355 = *v6;
          uint64_t v356 = *v6 - 24;

          *uint64_t v6 = v356;
          uint64_t v357 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v356 != v357)
          {
            LODWORD(v771) = *(_DWORD *)(v355 - 48);
            id v772 = *(id *)(v355 - 40);
            double v773 = *(double *)(v355 - 32);
            uint64_t v358 = *v6 - 24;

            *uint64_t v6 = v358;
          }
        }
        v596 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v771, (const TUI::Evaluation::Context *)*v2);
        v597 = v596;
        if (v596)
        {
          id v598 = v596;
        }
        else
        {
          id v598 = +[TUIFontSpec defaultFontSpec];
        }
        v613 = v598;

        v614 = (const TUI::Evaluation::Context *)*v2;
        if (v778[0]._kind == 6
          && ((int v615 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, v614),
               v614 = (const TUI::Evaluation::Context *)*v2,
               uint64_t v616 = *(void *)(*(void *)(*v2 + 560) + 40),
               (unint64_t)(*(void *)(*(void *)(*v2 + 560) + 48) - v616) < 0x9F)
            ? (int v617 = 0xFFFF)
            : (int v617 = *(unsigned __int16 *)(v616 + 158)),
              v615 == v617))
        {
          double v646 = NAN;
        }
        else
        {
          double v646 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, v614);
        }
        v647 = [v613 fontSpecWithTracking:v646];

        id v374 = v647;
        LODWORD(v771) = 17;
        id v772 = v374;
        unint64_t v648 = *((void *)v1 + 4);
        if (v648 >= *((void *)v1 + 5)) {
          goto LABEL_879;
        }
        goto LABEL_878;
      case 91:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v22 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v22 - 24);
          v778[0]._object = (_value *)*(id *)(v22 - 16);
          v778[0].var0._integer = *(void *)(v22 - 8);
          uint64_t v23 = *v6;
          uint64_t v24 = *v6 - 24;

          *uint64_t v6 = v24;
          uint64_t v25 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v24 != v25)
          {
            LODWORD(v771) = *(_DWORD *)(v23 - 48);
            id v772 = *(id *)(v23 - 40);
            double v773 = *(double *)(v23 - 32);
            uint64_t v26 = *v6 - 24;

            *uint64_t v6 = v26;
          }
        }
        v488 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v771, (const TUI::Evaluation::Context *)*v2);
        v489 = v488;
        if (v488)
        {
          id v490 = v488;
        }
        else
        {
          id v490 = +[TUIFontSpec defaultFontSpec];
        }
        v599 = v490;

        if (v776 >= v777)
        {
          ++v776;
        }
        else
        {
          int v600 = *(unsigned __int16 *)(v775 + 2 * v776++);
          switch(v600)
          {
            case 0:
              uint64_t v601 = [v599 fontSpecWithAdditionalLeading:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              goto LABEL_876;
            case 1:
              uint64_t v601 = [v599 fontSpecWithMinPointSize:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              goto LABEL_876;
            case 2:
              unsigned __int16 v665 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              v666 = TUI::Instruction::Evaluation::contentSizeFromSymbol(v1, v665);
              uint64_t v667 = [v599 fontSpecWithMinContentSize:v666];

              v599 = (void *)v667;
              break;
            case 3:
              uint64_t v601 = [v599 fontSpecWithMonospacedDigits:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
LABEL_876:
              v668 = (void *)v601;

              v599 = v668;
              break;
            default:
              break;
          }
        }
        id v374 = v599;
        LODWORD(v771) = 17;
        id v772 = v374;
        unint64_t v648 = *((void *)v1 + 4);
        if (v648 >= *((void *)v1 + 5))
        {
LABEL_879:
          uint64_t v669 = sub_12878(v5, (uint64_t)&v771);
        }
        else
        {
LABEL_878:
          *(_DWORD *)unint64_t v648 = 17;
          *(void *)(v648 + sub_3BD4((uint64_t)this + 8) = v374;
          *(double *)(v648 + 16) = v773;
          uint64_t v669 = v648 + 24;
        }
        *uint64_t v6 = v669;

LABEL_881:
        goto LABEL_995;
      case 92:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v229 = *v6;
        if (*v6 == *v5)
        {
          v232 = v5;
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v229 - 24);
          v778[0]._object = (_value *)*(id *)(v229 - 16);
          v778[0].var0._integer = *(void *)(v229 - 8);
          uint64_t v230 = *v6;
          uint64_t v231 = *v6 - 24;

          *uint64_t v6 = v231;
          v232 = v5;
          uint64_t v233 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v231 != v233)
          {
            LODWORD(v771) = *(_DWORD *)(v230 - 48);
            id v772 = *(id *)(v230 - 40);
            double v773 = *(double *)(v230 - 32);
            uint64_t v234 = *v6 - 24;

            *uint64_t v6 = v234;
          }
        }
        v546 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v771, (TUI::Symbol::Tab **)*v2);
        v547 = v546;
        if (v776 >= v777)
        {
          ++v776;
LABEL_633:
          id v553 = v546;
          LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
          id v769 = v553;
          sub_F858(v232, (uint64_t)&v768);
        }
        else
        {
          int v548 = *(unsigned __int16 *)(v775 + 2 * v776++);
          switch(v548)
          {
            case 0:
              v549 = sub_112A0(v546, *v2);
              unsigned __int16 v550 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              v551 = [v549 pointerStyleWithEffect:TUI::Instruction::Evaluation::pointerEffectFromSymbol(v1, v550)];

              v552 = v551;
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v552;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_962;
            case 1:
              sub_112A0(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 pointerStyleWithPrefersShadow:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 2:
              sub_112A0(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 pointerStyleWithPrefersScale:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 3:
              sub_112A0(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              unsigned __int16 v679 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              id v678 = [(TUISnap *)v552 pointerStyleWithPreferredTintMode:TUI::Instruction::Evaluation::hoverEffectTintModeFromSymbol(v1, v679)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 4:
              sub_112A0(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              v680 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
              sub_119C4(v680, *v2);
              id v678 = (id)objc_claimAutoreleasedReturnValue();

              id v681 = [(TUISnap *)v552 pointerStyleWithCursor:v678];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v681;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_933;
            case 5:
              sub_119C4(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              unsigned __int16 v685 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              id v678 = [(TUISnap *)v552 pointerCursorWithShape:TUI::Instruction::Evaluation::pointerShapeFromSymbol(v1, v685)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 6:
              sub_119C4(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 pointerCursorWithInsets:TUI::Evaluation::ResolvedValue::insetsValue((id *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 7:
              sub_119C4(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 pointerCursorWithCornerRadius:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 8:
              sub_119C4(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 pointerCursorWithScale:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 9:
              v682 = sub_11E18(v546, *v2);
              double v683 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              if (v682)
              {
                v684 = [v682 snapByAddingValue:v683];
              }
              else
              {
                v684 = [[TUISnap alloc] initWithValue:v683];
              }
              v552 = v684;
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v552;
              sub_F858(v232, (uint64_t)&v768);
LABEL_962:

              goto LABEL_938;
            case 10:
              v686 = sub_11E18(v546, *v2);
              v687 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
              v688 = TUIProtocolCast(&OBJC_PROTOCOL___NSCopying, v687);

              if (v688)
              {
                id v689 = [v686 snapWithIdentifier:v688];
                LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
                id v769 = v689;
                sub_F858(v232, (uint64_t)&v768);
              }
              else
              {
                id v698 = v686;
                LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
                id v769 = v698;
                sub_F858(v232, (uint64_t)&v768);
              }
              break;
            case 11:
              sub_11E18(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 snapWithStep:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 12:
              sub_11E18(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 snapWithMax:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 13:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              unsigned __int16 v690 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2);
              id v678 = [(TUISnap *)v552 focusStyleWithEffect:TUI::Instruction::Evaluation::focusEffectFromSymbol(v1, v690)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 14:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 focusStyleWithInsets:TUI::Evaluation::ResolvedValue::insetsValue((id *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 15:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              TUI::Evaluation::ResolvedValue::colorValue((id *)v778, (const TUI::Evaluation::Context *)*v2);
              id v678 = (id)objc_claimAutoreleasedReturnValue();
              id v681 = [(TUISnap *)v552 focusStyleWithColor:v678];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v681;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_933;
            case 16:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 focusStyleWithCornerRadius:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 17:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
              id v678 = (id)objc_claimAutoreleasedReturnValue();
              id v681 = [(TUISnap *)v552 focusStyleWithGroupIdentifier:v678];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v681;
              sub_F858(v232, (uint64_t)&v768);
LABEL_933:

              goto LABEL_937;
            case 18:
              sub_11F30(v546, *v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 focusStyleWithContinuousCurve:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 16;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
              goto LABEL_936;
            case 19:
              TUI::Evaluation::ResolvedValue::colorValue(&v771, (const TUI::Evaluation::Context *)*v2);
              v552 = (TUISnap *)objc_claimAutoreleasedReturnValue();
              id v678 = [(TUISnap *)v552 colorWithAlphaComponent:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)v778, (const TUI::Evaluation::Context *)*v2)];
              LODWORD(v76sub_3BD4((uint64_t)this + 8) = 11;
              id v769 = v678;
              sub_F858(v232, (uint64_t)&v768);
LABEL_936:

LABEL_937:
LABEL_938:

              break;
            default:
              goto LABEL_633;
          }
        }

        uint64_t v5 = v232;
        goto LABEL_997;
      case 93:
        if (v8 >= v4) {
          uint64_t v125 = 0xFFFFLL;
        }
        else {
          uint64_t v125 = *(unsigned __int16 *)(v775 + 2 * v8);
        }
        if (v3 + 2 >= v4) {
          uint64_t v410 = 0xFFFFLL;
        }
        else {
          uint64_t v410 = *(unsigned __int16 *)(v775 + 2 * (v3 + 2));
        }
        if (v3 + 3 >= v4) {
          int v415 = -65536;
        }
        else {
          int v415 = *(unsigned __int16 *)(v775 + 2 * (v3 + 3)) << 16;
        }
        if (v3 + 4 >= v4) {
          int v416 = 0xFFFF;
        }
        else {
          int v416 = *(unsigned __int16 *)(v775 + 2 * (v3 + 4));
        }
        unint64_t v776 = v3 + 5;
        uint64_t v417 = v416 | v415;
        unsigned int v418 = TUIClosureNil;
        if (TUI::Instruction::Decoder::offsetKind(v417) == 18) {
          unsigned int v418 = TUI::Instruction::Decoder::offsetIndex((TUI::Instruction::Decoder *)v417);
        }
        unsigned int v66 = [[_TUIStyleReferenceElement alloc] initWithStyleReference:v125 | (v410 << 32)];
        TUI::Evaluation::Context::captureClosure((void *)*v2, v418);
        v419 = [_TUIElementWithClosure alloc];
        int kind = v778[0]._kind;
        v744 = v778[0]._object;
        integer = (std::__shared_weak_count *)v778[0].var0._integer;
        if (v778[0].var0._integer) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v778[0].var0._integer + 8), 1uLL, memory_order_relaxed);
        }
        v420 = [(_TUIElementWithClosure *)v419 initWithParsedElement:v66 closureAndCapture:&kind];
        v421 = v420;
        LODWORD(v771) = 15;
        id v772 = v420;
        unint64_t v422 = *((void *)v1 + 4);
        if (v422 >= *((void *)v1 + 5))
        {
          uint64_t v423 = sub_12878(v5, (uint64_t)&v771);
        }
        else
        {
          *(_DWORD *)unint64_t v422 = 15;
          *(void *)(v422 + sub_3BD4((uint64_t)this + 8) = v420;
          *(double *)(v422 + 16) = v773;
          uint64_t v423 = v422 + 24;
        }
        *uint64_t v6 = v423;

        if (integer) {
          sub_123E4(integer);
        }
        if (v778[0].var0._integer) {
          sub_123E4((std::__shared_weak_count *)v778[0].var0._integer);
        }
        goto LABEL_762;
      case 94:
        char v100 = (_value *)(id)objc_opt_new();
        int v101 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 95:
        v738 = v1;
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v36 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v36 - 24);
          v778[0]._object = (_value *)*(id *)(v36 - 16);
          v778[0].var0._integer = *(void *)(v36 - 8);
          uint64_t v37 = *v6 - 24;

          *uint64_t v6 = v37;
        }
        uint64_t v38 = (TUI::Symbol::Tab ***)v2;
        uint64_t v39 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v40 = *v6;
        int v41 = v5;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v40 - 24);
          v778[0]._object = (_value *)*(id *)(v40 - 16);
          v778[0].var0._integer = *(void *)(v40 - 8);
          uint64_t v42 = *v6 - 24;

          *uint64_t v6 = v42;
        }
        uint64_t v43 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v778, *v38);

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v44 = *v6;
        if (*v6 != *v41)
        {
          v778[0]._int kind = *(_DWORD *)(v44 - 24);
          v778[0]._object = (_value *)*(id *)(v44 - 16);
          v778[0].var0._integer = *(void *)(v44 - 8);
          uint64_t v45 = *v6 - 24;

          *uint64_t v6 = v45;
        }
        double v46 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, *v38);

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector() & (v39 != 0)) == 1)
        {
          id v47 = v46;
          id v48 = v43;
          [v47 setObject:v39 forKeyedSubscript:v48];
        }
        else
        {
          v362 = *v38;
          v363 = (objc_class *)objc_opt_class();
          NSStringFromClass(v363);
          id v47 = (id)objc_claimAutoreleasedReturnValue();
          v364 = (objc_class *)objc_opt_class();
          NSStringFromClass(v364);
          id v48 = (id)objc_claimAutoreleasedReturnValue();
          v365 = +[NSString stringWithFormat:@"dict.class: %@, key.class: %@", v47, v48];
          TUI::Evaluation::Context::reportError((uint64_t)v362, 1000, v365);
        }
        v366 = v46;
        v367 = v366;
        v778[0]._int kind = 16;
        v778[0]._object = v366;
        unint64_t v368 = *((void *)v738 + 4);
        if (v368 >= *((void *)v738 + 5))
        {
          uint64_t v369 = sub_12878(v41, (uint64_t)v778);
        }
        else
        {
          *(_DWORD *)unint64_t v368 = 16;
          *(void *)(v368 + sub_3BD4((uint64_t)this + 8) = v366;
          *(void *)(v368 + 16) = v778[0].var0._integer;
          uint64_t v369 = v368 + 24;
        }
        *uint64_t v6 = v369;

        uint64_t v5 = v41;
        id v2 = (uint64_t *)v38;
        goto LABEL_771;
      case 96:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v241 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v241 - 24);
          v778[0]._object = (_value *)*(id *)(v241 - 16);
          v778[0].var0._integer = *(void *)(v241 - 8);
          uint64_t v242 = *v6 - 24;

          *uint64_t v6 = v242;
        }
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        if (v66 && (objc_opt_respondsToSelector() & 1) == 0)
        {
          v778[0]._int kind = 16;
          v778[0]._object = 0;
          unint64_t v643 = *((void *)v1 + 4);
          if (v643 >= *((void *)v1 + 5))
          {
            uint64_t v644 = sub_12878(v5, (uint64_t)v778);
          }
          else
          {
            *(_DWORD *)unint64_t v643 = 16;
            *(void *)(v643 + sub_3BD4((uint64_t)this + 8) = 0;
            *(void *)(v643 + 16) = v778[0].var0._integer;
            uint64_t v644 = v643 + 24;
          }
          *uint64_t v6 = v644;

          uint64_t v655 = *v2;
          v656 = (objc_class *)objc_opt_class();
          NSStringFromClass(v656);
          v243 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();
          v245 = +[NSString stringWithFormat:@"class: %@ not copyable", v243];
          TUI::Evaluation::Context::reportError(v655, 1000, v245);
        }
        else
        {
          v243 = v66;
          v244 = (_value *)[(_TUIStyleReferenceElement *)v243 copyWithZone:0];
          v245 = v244;
          v778[0]._int kind = 16;
          v778[0]._object = v244;
          unint64_t v246 = *((void *)v1 + 4);
          if (v246 >= *((void *)v1 + 5))
          {
            uint64_t v247 = sub_12878(v5, (uint64_t)v778);
          }
          else
          {
            *(_DWORD *)unint64_t v246 = 16;
            *(void *)(v246 + sub_3BD4((uint64_t)this + 8) = v244;
            *(void *)(v246 + 16) = v778[0].var0._integer;
            uint64_t v247 = v246 + 24;
          }
          *uint64_t v6 = v247;
        }
        goto LABEL_762;
      case 97:
        char v100 = (_value *)(id)objc_opt_new();
        int v101 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = v100;
        unint64_t v102 = *((void *)v1 + 4);
        if (v102 >= *((void *)v1 + 5)) {
          goto LABEL_751;
        }
        goto LABEL_811;
      case 98:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v165 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v165 - 24);
          v778[0]._object = (_value *)*(id *)(v165 - 16);
          v778[0].var0._integer = *(void *)(v165 - 8);
          uint64_t v166 = *v6 - 24;

          *uint64_t v6 = v166;
        }
        TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        unsigned int v66 = (_TUIStyleReferenceElement *)objc_claimAutoreleasedReturnValue();

        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v167 = *v6;
        if (*v6 != *v5)
        {
          v778[0]._int kind = *(_DWORD *)(v167 - 24);
          v778[0]._object = (_value *)*(id *)(v167 - 16);
          v778[0].var0._integer = *(void *)(v167 - 8);
          uint64_t v168 = *v6 - 24;

          *uint64_t v6 = v168;
        }
        v169 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & (v66 != 0)) == 1)
        {
          id v170 = v169;
          [v170 addObject:v66];
        }
        else
        {
          uint64_t v482 = *v2;
          v483 = (objc_class *)objc_opt_class();
          NSStringFromClass(v483);
          id v170 = (id)objc_claimAutoreleasedReturnValue();
          v484 = +[NSString stringWithFormat:@"array.class: %@", v170];
          TUI::Evaluation::Context::reportError(v482, 1000, v484);
        }
        v485 = v169;
        int v486 = 16;
        v778[0]._int kind = 16;
        v778[0]._object = v485;
        unint64_t v487 = *((void *)v1 + 4);
        if (v487 < *((void *)v1 + 5))
        {
LABEL_760:
          *(_DWORD *)unint64_t v487 = v486;
          *(void *)(v487 + sub_3BD4((uint64_t)this + 8) = v485;
          *(void *)(v487 + 16) = v778[0].var0._integer;
          uint64_t v636 = v487 + 24;
        }
        else
        {
LABEL_757:
          uint64_t v636 = sub_12878(v5, (uint64_t)v778);
        }
        *uint64_t v6 = v636;

LABEL_762:
        goto LABEL_997;
      case 99:
        v778[0]._int kind = 0;
        v778[0]._object = 0;
        uint64_t v315 = *v6;
        if (*v6 == *v5)
        {
          LODWORD(v771) = 0;
          id v772 = 0;
        }
        else
        {
          v778[0]._int kind = *(_DWORD *)(v315 - 24);
          v778[0]._object = (_value *)*(id *)(v315 - 16);
          v778[0].var0._integer = *(void *)(v315 - 8);
          uint64_t v316 = *v6;
          uint64_t v317 = *v6 - 24;

          *uint64_t v6 = v317;
          uint64_t v318 = *v5;
          LODWORD(v771) = 0;
          id v772 = 0;
          if (v317 != v318)
          {
            LODWORD(v771) = *(_DWORD *)(v316 - 48);
            id v772 = *(id *)(v316 - 40);
            double v773 = *(double *)(v316 - 32);
            uint64_t v319 = *v6 - 24;

            *uint64_t v6 = v319;
          }
        }
        uint64_t v578 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)&v771, (TUI::Symbol::Tab **)*v2);
        v579 = (void *)v578;
        if (v578) {
          v580 = (__CFString *)v578;
        }
        else {
          v580 = &stru_257BF0;
        }
        v554 = v580;

        uint64_t v581 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v778, (TUI::Symbol::Tab **)*v2);
        v582 = (void *)v581;
        if (v581) {
          v583 = (__CFString *)v581;
        }
        else {
          v583 = &stru_257BF0;
        }
        v584 = v583;

        id v585 = [(__CFString *)v554 stringByAppendingString:v584];
        v586 = v585;
        LODWORD(v76sub_3BD4((uint64_t)this + 8) = 9;
        id v769 = v585;
        unint64_t v587 = *((void *)v1 + 4);
        if (v587 >= *((void *)v1 + 5))
        {
          uint64_t v588 = sub_12878(v5, (uint64_t)&v768);
        }
        else
        {
          *(_DWORD *)unint64_t v587 = 9;
          *(void *)(v587 + sub_3BD4((uint64_t)this + 8) = v585;
          *(double *)(v587 + 16) = v770;
          uint64_t v588 = v587 + 24;
        }
        *uint64_t v6 = v588;

LABEL_888:
        goto LABEL_994;
      default:
        goto LABEL_997;
    }
  }
}

void sub_EB60(_Unwind_Exception *a1)
{
  TUI::Instruction::Decoder::~Decoder((TUI::Instruction::Decoder *)(v3 - 208));
  _Unwind_Resume(a1);
}

void sub_F4A0()
{
  JUMPOUT(0xF468);
}

uint64_t sub_F6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    sub_12804((uint64_t)&v10, a3, *(void *)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        uint64_t v8 = v7 - 24;

        uint64_t v7 = v8;
      }
      while (v8 != v6);
    }
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = v6;
  }
  return a2;
}

void TUI::Instruction::Evaluation::fixFloatIfNeeded(TUI::Instruction::Evaluation *this)
{
  uint64_t v1 = *((void *)this + 4);
  if (v1 != *((void *)this + 3) && *(_DWORD *)(v1 - 24) == 1)
  {
    TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)(v1 - 24), *((const TUI::Evaluation::Context **)this + 2));
    if (fabs(TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)(v1 - 24), *((const TUI::Evaluation::Context **)this + 2))) == INFINITY)
    {
      uint64_t v3 = (const TUI::Evaluation::Context *)*((void *)this + 2);
      unint64_t v4 = +[NSNumber numberWithDouble:TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)(v1 - 24), v3)];
      TUI::Evaluation::Context::reportError((uint64_t)v3, 1028, v4);

      *(_DWORD *)(v1 - 24) = 1;
      uint64_t v5 = *(void **)(v1 - 16);
      *(void *)(v1 - 16) = 0;

      *(void *)(v1 - sub_3BD4((uint64_t)this + 8) = 0;
    }
  }
}

void sub_F844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_F858(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= a1[2])
  {
    uint64_t result = sub_12878(a1, a2);
  }
  else
  {
    *(_DWORD *)unint64_t v4 = *(_DWORD *)a2;
    *(void *)(v4 + sub_3BD4((uint64_t)this + 8) = *(id *)(a2 + 8);
    *(void *)(v4 + 16) = *(void *)(a2 + 16);
    uint64_t result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

void sub_F8C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v10;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v4);
        }
        uint64_t v8 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        if (objc_msgSend(v8, "userInterfaceLevel", (void)v9) != (id)-1) {
          [v3 setUserInterfaceLevel:[v8 userInterfaceLevel]];
        }
        if ([v8 displayGamut] != (id)-1) {
          [v3 setDisplayGamut:[v8 displayGamut]];
        }
        if ([v8 accessibilityContrast] != (id)-1) {
          [v3 setAccessibilityContrast:[v8 accessibilityContrast]];
        }
        if ([v8 userInterfaceStyle]) {
          [v3 setUserInterfaceStyle:[v8 userInterfaceStyle]];
        }
      }
      id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
}

void sub_FA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::systemDesignFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  id v3 = UIFontDescriptorSystemDesignDefault;
  if (!*((void *)this + 19))
  {
    sub_6ACC(__p, "default");
    uint64_t v24 = v3;
    sub_6ACC(v25, "serif");
    v25[3] = UIFontDescriptorSystemDesignSerif;
    sub_6ACC(v26, "rounded");
    v26[3] = UIFontDescriptorSystemDesignRounded;
    sub_6ACC(v27, "monospaced");
    v27[3] = UIFontDescriptorSystemDesignMonospaced;
    sub_6ACC(v28, "compact");
    v28[3] = UIFontSystemFontDesignCompact;
    sub_6ACC(v29, "condensed");
    id v30 = UIFontSystemFontDesignCondensed;
    unsigned __int8 v17 = 0;
    unsigned __int8 v18 = 0;
    char v16 = 0;
    int v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    char v16 = (long long *)operator new(0xC0uLL);
    unsigned __int8 v17 = v16;
    unsigned __int8 v18 = v16 + 12;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (long long *)sub_1298C((uint64_t)&v18, (long long *)__p, &v31, v16);
    do
    {

      if (SHIBYTE(v29[v4 + 2]) < 0) {
        operator delete((void *)v29[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -24);
    id v5 = v16;
    uint64_t v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        sub_12458(__p, v5);
        unsigned __int16 v15 = 0;
        int v8 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v8;
        if (v8 != 0xFFFF)
        {
          long long v9 = v24;
          int v20 = &v15;
          long long v10 = (id *)sub_12BA4((uint64_t)this + 128, &v15, (uint64_t)&std::piecewise_construct, &v20);
          objc_storeStrong(v10 + 3, v9);
        }

        if (v23 < 0) {
          operator delete(__p[0]);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_12B0C((void ***)__p);
  }
  long long v11 = sub_12E50((void *)this + 16, &v19);
  if (v11)
  {
    long long v12 = v3;
    id v3 = v11[3];
  }
  else
  {
    uint64_t v13 = *((void *)this + 2);
    long long v12 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
    TUI::Evaluation::Context::reportError(v13, 1000, v12);
  }

  return v3;
}

void sub_FD80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::textStyleFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v28 = a2;
  id v3 = UIFontTextStyleBody;
  if (!*((void *)this + 9))
  {
    sub_6ACC(__p, "headline");
    int v34 = UIFontTextStyleHeadline;
    sub_6ACC(v35, "body");
    v35[3] = v3;
    sub_6ACC(v36, "title0");
    v36[3] = UIFontTextStyleTitle0;
    sub_6ACC(v37, "title1");
    v37[3] = UIFontTextStyleTitle1;
    sub_6ACC(v38, "title2");
    v38[3] = UIFontTextStyleTitle2;
    sub_6ACC(v39, "title3");
    v39[3] = UIFontTextStyleTitle3;
    sub_6ACC(v40, "title4");
    v40[3] = UIFontTextStyleTitle4;
    sub_6ACC(v41, "title5");
    v41[3] = UIFontTextStyleTitle5;
    sub_6ACC(v42, "callout");
    v42[3] = UIFontTextStyleCallout;
    sub_6ACC(v43, "caption1");
    v43[3] = UIFontTextStyleCaption1;
    sub_6ACC(v44, "caption2");
    v44[3] = UIFontTextStyleCaption2;
    sub_6ACC(v45, "footnote");
    v45[3] = UIFontTextStyleFootnote;
    sub_6ACC(v46, "footnote1");
    v46[3] = UIFontTextStyleFootnote1;
    sub_6ACC(v47, "footnote2");
    v47[3] = UIFontTextStyleFootnote2;
    sub_6ACC(v48, "largetitle");
    v48[3] = UIFontTextStyleLargeTitle;
    sub_6ACC(v49, "subheadline");
    v49[3] = UIFontTextStyleSubheadline;
    sub_6ACC(v50, "subtitle");
    v50[3] = UIFontTextStyleSubtitle;
    sub_6ACC(v51, "subtitle1");
    v51[3] = UIFontTextStyleSubtitle1;
    sub_6ACC(v52, "subtitle2");
    v52[3] = UIFontTextStyleSubtitle2;
    sub_6ACC(v53, "subtitle3");
    v53[3] = UIFontTextStyleSubtitle3;
    sub_6ACC(v54, "section1");
    v54[3] = UIFontTextStyleSection1;
    sub_6ACC(v55, "section2");
    v55[3] = UIFontTextStyleSection2;
    sub_6ACC(v56, "section3");
    v56[3] = UIFontTextStyleSection3;
    id v4 = kCTUIFontTextStyleShortHeadline;
    sub_6ACC(v57, "headline-short");
    v57[3] = v4;
    id v5 = kCTUIFontTextStyleShortBody;
    sub_6ACC(v58, "body-short");
    v58[3] = v5;
    id v6 = kCTUIFontTextStyleShortSubhead;
    sub_6ACC(v59, "subhead-short");
    v59[3] = v6;
    id v7 = kCTUIFontTextStyleShortFootnote;
    sub_6ACC(v60, "footnote-short");
    v60[3] = v7;
    id v8 = kCTUIFontTextStyleShortCaption1;
    sub_6ACC(v61, "caption1-short");
    v61[3] = v8;
    id v9 = kCTUIFontTextStyleTallBody;
    sub_6ACC(v62, "body-tall");
    v62[3] = v9;
    uint64_t v26 = 0;
    *(void *)uint64_t v27 = 0;
    uint64_t v25 = 0;
    unsigned __int16 v29 = (unsigned __int16 *)&v25;
    char v30 = 0;
    uint64_t v25 = (long long *)operator new(0x3A0uLL);
    uint64_t v26 = v25;
    *(void *)uint64_t v27 = v25 + 58;
    uint64_t v26 = (long long *)sub_1298C((uint64_t)v27, (long long *)__p, &v63, v25);
    unint64_t v10 = 928;
    do
    {

      if ((char)v31[v10] < 0) {
        operator delete(*(void **)&v27[v10 / 2 + 4]);
      }
      v10 -= 32;
    }
    while (v10);
    long long v11 = v25;
    long long v12 = v26;
    if (v25 != v26)
    {
      uint64_t v13 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        sub_12458(__p, v11);
        unsigned __int16 v24 = 0;
        int v14 = TUI::Symbol::Tab::lookup(v13, (unsigned __int8 *)__p);
        unsigned __int16 v24 = v14;
        if (v14 != 0xFFFF)
        {
          unsigned __int16 v15 = v34;
          unsigned __int16 v29 = &v24;
          char v16 = (id *)sub_12BA4((uint64_t)this + 48, &v24, (uint64_t)&std::piecewise_construct, &v29);
          objc_storeStrong(v16 + 3, v15);
        }

        if (v33 < 0) {
          operator delete(__p[0]);
        }
        v11 += 2;
      }
      while (v11 != v12);
    }
    __p[0] = &v25;
    sub_12B0C((void ***)__p);
  }
  unsigned __int8 v17 = sub_12E50((void *)this + 6, &v28);
  if (v17)
  {
    unsigned __int8 v18 = v3;
    id v3 = v17[3];
  }
  else
  {
    uint64_t v19 = *((void *)this + 2);
    int v20 = *(TUI::Symbol::Tab **)(v19 + 560);
    uint64_t v21 = *((void *)v20 + 5);
    if ((unint64_t)(*((void *)v20 + 6) - v21) < 0xCF) {
      int v22 = 0xFFFF;
    }
    else {
      int v22 = *(unsigned __int16 *)(v21 + 206);
    }
    if (v28 == v22)
    {
      unsigned __int8 v18 = v3;
      id v3 = 0;
    }
    else
    {
      unsigned __int8 v18 = TUI::Symbol::Tab::string(v20, v28);
      TUI::Evaluation::Context::reportError(v19, 1000, v18);
    }
  }

  return v3;
}

void sub_10540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::contentSizeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v22 = a2;
  id v3 = UIContentSizeCategoryUnspecified;
  if (!*((void *)this + 14))
  {
    sub_6ACC(__p, "x-small");
    unsigned __int16 v28 = UIContentSizeCategoryExtraSmall;
    sub_6ACC(v29, "small");
    void v29[3] = UIContentSizeCategorySmall;
    sub_6ACC(v30, "medium");
    v30[3] = UIContentSizeCategoryMedium;
    sub_6ACC(v31, "large");
    v31[3] = UIContentSizeCategoryLarge;
    sub_6ACC(v32, "x-large");
    v32[3] = UIContentSizeCategoryExtraLarge;
    sub_6ACC(v33, "xx-large");
    v33[3] = UIContentSizeCategoryExtraExtraLarge;
    sub_6ACC(v34, "xxx-large");
    v34[3] = UIContentSizeCategoryExtraExtraExtraLarge;
    sub_6ACC(v35, "ax-medium");
    v35[3] = UIContentSizeCategoryAccessibilityMedium;
    sub_6ACC(v36, "ax-large");
    v36[3] = UIContentSizeCategoryAccessibilityLarge;
    sub_6ACC(v37, "ax-x-large");
    v37[3] = UIContentSizeCategoryAccessibilityExtraLarge;
    sub_6ACC(v38, "ax-xx-large");
    v38[3] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
    sub_6ACC(v39, "ax-xxx-large");
    v39[3] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
    int v20 = 0;
    *(void *)uint64_t v21 = 0;
    uint64_t v19 = 0;
    char v23 = (unsigned __int16 *)&v19;
    char v24 = 0;
    uint64_t v19 = (long long *)operator new(0x180uLL);
    int v20 = v19;
    *(void *)uint64_t v21 = v19 + 24;
    int v20 = (long long *)sub_1298C((uint64_t)v21, (long long *)__p, &v40, v19);
    unint64_t v4 = 384;
    do
    {

      if ((char)v25[v4] < 0) {
        operator delete(*(void **)&v21[v4 / 2 + 4]);
      }
      v4 -= 32;
    }
    while (v4);
    id v5 = v19;
    id v6 = v20;
    if (v19 != v20)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        sub_12458(__p, v5);
        unsigned __int16 v18 = 0;
        int v8 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v18 = v8;
        if (v8 != 0xFFFF)
        {
          id v9 = v28;
          char v23 = &v18;
          unint64_t v10 = (id *)sub_12BA4((uint64_t)this + 88, &v18, (uint64_t)&std::piecewise_construct, &v23);
          objc_storeStrong(v10 + 3, v9);
        }

        if (v27 < 0) {
          operator delete(__p[0]);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
    __p[0] = &v19;
    sub_12B0C((void ***)__p);
  }
  long long v11 = sub_12E50((void *)this + 11, &v22);
  if (v11)
  {
    long long v12 = v3;
    id v3 = v11[3];
  }
  else
  {
    uint64_t v13 = *((void *)this + 2);
    int v14 = *(TUI::Symbol::Tab **)(v13 + 560);
    uint64_t v15 = *((void *)v14 + 5);
    if ((unint64_t)(*((void *)v14 + 6) - v15) < 0xCF) {
      int v16 = 0xFFFF;
    }
    else {
      int v16 = *(unsigned __int16 *)(v15 + 206);
    }
    if (v22 == v16)
    {
      long long v12 = v3;
      id v3 = 0;
    }
    else
    {
      long long v12 = TUI::Symbol::Tab::string(v14, v22);
      TUI::Evaluation::Context::reportError(v13, 1000, v12);
    }
  }

  return v3;
}

void sub_10A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double TUI::Instruction::Evaluation::fontWeightFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v20 = a2;
  double v3 = UIFontWeightRegular;
  unint64_t v4 = (void *)((char *)this + 168);
  if (!*((void *)this + 24))
  {
    sub_6ACC(__p, "ultralight");
    UIFontWeight v26 = UIFontWeightUltraLight;
    sub_6ACC(v27, "thin");
    *(UIFontWeight *)&v27[3] = UIFontWeightThin;
    sub_6ACC(v28, "light");
    *(UIFontWeight *)&v28[3] = UIFontWeightLight;
    sub_6ACC(v29, "regular");
    *(UIFontWeight *)&void v29[3] = UIFontWeightRegular;
    sub_6ACC(v30, "medium");
    *(UIFontWeight *)&v30[3] = UIFontWeightMedium;
    sub_6ACC(v31, "semibold");
    *(UIFontWeight *)&v31[3] = UIFontWeightSemibold;
    sub_6ACC(v32, "bold");
    *(UIFontWeight *)&v32[3] = UIFontWeightBold;
    sub_6ACC(v33, "heavy");
    *(UIFontWeight *)&v33[3] = UIFontWeightHeavy;
    sub_6ACC(v34, "black");
    *(UIFontWeight *)&v34[3] = UIFontWeightBlack;
    unsigned __int16 v18 = 0;
    *(void *)uint64_t v19 = 0;
    unsigned __int8 v17 = 0;
    uint64_t v21 = (unsigned __int16 *)&v17;
    char v22 = 0;
    unsigned __int8 v17 = (double *)operator new(0x120uLL);
    unsigned __int16 v18 = v17;
    *(void *)uint64_t v19 = v17 + 36;
    unsigned __int16 v18 = (double *)sub_12F04((uint64_t)v19, (long long *)__p, &v35, v17);
    uint64_t v5 = 144;
    do
    {
      if ((char)v23[v5 * 2] < 0) {
        operator delete(*(void **)&v19[v5 + 4]);
      }
      v5 -= 16;
    }
    while (v5 * 2);
    id v6 = v17;
    uint64_t v7 = v18;
    if (v17 != v18)
    {
      uint64_t v8 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v6 + 23) < 0)
        {
          sub_124B4(__p, *(void **)v6, *((void *)v6 + 1));
        }
        else
        {
          long long v9 = *(_OWORD *)v6;
          uint64_t v25 = *((void *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        UIFontWeight v26 = v6[3];
        unsigned __int16 v16 = 0;
        int v10 = TUI::Symbol::Tab::lookup(v8, (unsigned __int8 *)__p);
        unsigned __int16 v16 = v10;
        if (v10 != 0xFFFF)
        {
          UIFontWeight v11 = v26;
          uint64_t v21 = &v16;
          *((UIFontWeight *)sub_130F4((uint64_t)v4, &v16, (uint64_t)&std::piecewise_construct, &v21) + 3) = v11;
        }
        if (SHIBYTE(v25) < 0) {
          operator delete(__p[0]);
        }
        v6 += 4;
      }
      while (v6 != v7);
    }
    __p[0] = &v17;
    sub_13050((void ***)__p);
  }
  long long v12 = sub_12E50(v4, &v20);
  if (v12) {
    return *((double *)v12 + 3);
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return v3;
}

void sub_10E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::fontCapsFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  double v3 = (void *)((char *)this + 208);
  if (!*((void *)this + 29))
  {
    sub_6ACC(__p, "default");
    char v24 = 0;
    sub_6ACC(v25, "all");
    v25[3] = 2;
    sub_6ACC(v26, "titled");
    v26[3] = 4;
    sub_6ACC(v27, "capitalized");
    v27[3] = 4;
    sub_6ACC(v28, "lowercased");
    v28[3] = 5;
    sub_6ACC(v29, "smallcaps");
    void v29[3] = 3;
    unsigned __int8 v17 = 0;
    unsigned __int16 v18 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    unsigned __int16 v16 = (void **)operator new(0xC0uLL);
    unsigned __int8 v17 = v16;
    unsigned __int16 v18 = v16 + 24;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (void **)sub_1331C((uint64_t)&v18, (long long *)__p, &v30, v16);
    do
    {
      if (SHIBYTE(v29[v4 + 2]) < 0) {
        operator delete((void *)v29[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -24);
    uint64_t v5 = v16;
    id v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_124B4(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)v5;
          char v23 = v5[2];
          *(_OWORD *)__p = v8;
        }
        char v24 = v5[3];
        unsigned __int16 v15 = 0;
        int v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v9;
        if (v9 != 0xFFFF)
        {
          int v10 = v24;
          unsigned __int16 v20 = &v15;
          sub_130F4((uint64_t)v3, &v15, (uint64_t)&std::piecewise_construct, &v20)[3] = v10;
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(__p[0]);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_13050((void ***)__p);
  }
  UIFontWeight v11 = sub_12E50(v3, &v19);
  if (v11) {
    return v11[3];
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return 0;
}

void sub_111D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

id sub_112A0(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_5;
    }
    uint64_t v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    uint64_t v7 = (objc_class *)objc_opt_class();
    long long v8 = NSStringFromClass(v7);
    int v9 = +[NSString stringWithFormat:@"expected %@, got %@", v6, v8];
    TUI::Evaluation::Context::reportError(a2, 1000, v9);
  }
  uint64_t v4 = +[TUIPointerStyle defaultPointerStyle];
LABEL_5:

  return v4;
}

void sub_11394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::pointerEffectFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  id v3 = (void *)((char *)this + 248);
  if (!*((void *)this + 34))
  {
    sub_6ACC(__p, "automatic");
    char v24 = 0;
    sub_6ACC(v25, "lift");
    v25[3] = 2;
    sub_6ACC(v26, "highlight");
    v26[3] = 1;
    sub_6ACC(v27, "hover");
    v27[3] = 3;
    unsigned __int8 v17 = 0;
    unsigned __int16 v18 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    unsigned __int16 v16 = (void **)operator new(0x80uLL);
    unsigned __int8 v17 = v16;
    unsigned __int16 v18 = v16 + 16;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (void **)sub_13420((uint64_t)&v18, (long long *)__p, &v28, v16);
    do
    {
      if (SHIBYTE(v27[v4 + 2]) < 0) {
        operator delete((void *)v27[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -16);
    uint64_t v5 = v16;
    id v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_124B4(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)v5;
          char v23 = v5[2];
          *(_OWORD *)__p = v8;
        }
        char v24 = v5[3];
        unsigned __int16 v15 = 0;
        int v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v9;
        if (v9 != 0xFFFF)
        {
          int v10 = v24;
          unsigned __int16 v20 = &v15;
          sub_130F4((uint64_t)v3, &v15, (uint64_t)&std::piecewise_construct, &v20)[3] = v10;
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(__p[0]);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_13050((void ***)__p);
  }
  UIFontWeight v11 = sub_12E50(v3, &v19);
  if (v11) {
    return v11[3];
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return 0;
}

void sub_11634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::hoverEffectTintModeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  id v3 = (void *)((char *)this + 328);
  if (!*((void *)this + 44))
  {
    sub_6ACC(__p, "overlay");
    uint64_t v24 = 1;
    sub_6ACC(v25, "none");
    v25[3] = 0;
    unsigned __int8 v17 = 0;
    unsigned __int16 v18 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    unsigned __int16 v16 = (void **)operator new(0x40uLL);
    unsigned __int8 v17 = v16;
    unsigned __int16 v18 = v16 + 8;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (void **)sub_13628((uint64_t)&v18, (long long *)__p, &v26, v16);
    do
    {
      if (SHIBYTE(v25[v4 + 2]) < 0) {
        operator delete((void *)v25[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -8);
    uint64_t v5 = v16;
    id v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_124B4(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)v5;
          char v23 = v5[2];
          *(_OWORD *)__p = v8;
        }
        uint64_t v24 = (uint64_t)v5[3];
        unsigned __int16 v15 = 0;
        int v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v9;
        if (v9 != 0xFFFF)
        {
          uint64_t v10 = v24;
          unsigned __int16 v20 = &v15;
          sub_130F4((uint64_t)v3, &v15, (uint64_t)&std::piecewise_construct, &v20)[3] = v10;
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(__p[0]);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_13050((void ***)__p);
  }
  UIFontWeight v11 = sub_12E50(v3, &v19);
  if (v11) {
    return v11[3];
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return (void *)(&def_141F14 + 1);
}

void sub_1191C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

id sub_119C4(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_5;
    }
    uint64_t v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    uint64_t v7 = (objc_class *)objc_opt_class();
    long long v8 = NSStringFromClass(v7);
    int v9 = +[NSString stringWithFormat:@"expected %@, got %@", v6, v8];
    TUI::Evaluation::Context::reportError(a2, 1000, v9);
  }
  uint64_t v4 = +[TUIPointerCursor defaultPointerCursor];
LABEL_5:

  return v4;
}

void sub_11AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::pointerShapeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  id v3 = (void *)((char *)this + 288);
  if (!*((void *)this + 39))
  {
    sub_6ACC(__p, "default");
    uint64_t v24 = 0;
    sub_6ACC(v25, "rounded");
    v25[3] = 1;
    sub_6ACC(v26, "circle");
    v26[3] = 2;
    sub_6ACC(v27, "link");
    v27[3] = 3;
    unsigned __int8 v17 = 0;
    unsigned __int16 v18 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    unsigned __int16 v16 = (void **)operator new(0x80uLL);
    unsigned __int8 v17 = v16;
    unsigned __int16 v18 = v16 + 16;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (void **)sub_13524((uint64_t)&v18, (long long *)__p, &v28, v16);
    do
    {
      if (SHIBYTE(v27[v4 + 2]) < 0) {
        operator delete((void *)v27[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -16);
    uint64_t v5 = v16;
    id v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_124B4(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)v5;
          char v23 = v5[2];
          *(_OWORD *)__p = v8;
        }
        uint64_t v24 = v5[3];
        unsigned __int16 v15 = 0;
        int v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v9;
        if (v9 != 0xFFFF)
        {
          uint64_t v10 = v24;
          unsigned __int16 v20 = &v15;
          sub_130F4((uint64_t)v3, &v15, (uint64_t)&std::piecewise_construct, &v20)[3] = v10;
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(__p[0]);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_13050((void ***)__p);
  }
  UIFontWeight v11 = sub_12E50(v3, &v19);
  if (v11) {
    return v11[3];
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return 0;
}

void sub_11D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

id sub_11E18(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (v3)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v4 = (objc_class *)objc_opt_class();
      uint64_t v5 = NSStringFromClass(v4);
      id v6 = (objc_class *)objc_opt_class();
      uint64_t v7 = NSStringFromClass(v6);
      long long v8 = +[NSString stringWithFormat:@"expected %@, got %@", v5, v7];
      TUI::Evaluation::Context::reportError(a2, 1000, v8);

      id v3 = 0;
    }
  }

  return v3;
}

void sub_11EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_11F30(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_5;
    }
    uint64_t v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    uint64_t v7 = (objc_class *)objc_opt_class();
    long long v8 = NSStringFromClass(v7);
    int v9 = +[NSString stringWithFormat:@"expected %@, got %@", v6, v8];
    TUI::Evaluation::Context::reportError(a2, 1000, v9);
  }
  uint64_t v4 = +[TUIFocusStyle defaultFocusStyle];
LABEL_5:

  return v4;
}

void sub_12024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::focusEffectFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  unsigned __int16 v19 = a2;
  id v3 = (void *)((char *)this + 368);
  if (!*((void *)this + 49))
  {
    sub_6ACC(__p, "none");
    uint64_t v24 = 0;
    sub_6ACC(v25, "default");
    v25[3] = 1;
    sub_6ACC(v26, "inside");
    v26[3] = 2;
    sub_6ACC(v27, "outside");
    v27[3] = 3;
    sub_6ACC(v28, "background");
    v28[3] = 4;
    unsigned __int8 v17 = 0;
    unsigned __int16 v18 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v20 = (unsigned __int16 *)&v16;
    char v21 = 0;
    unsigned __int16 v16 = (void **)operator new(0xA0uLL);
    unsigned __int8 v17 = v16;
    unsigned __int16 v18 = v16 + 20;
    uint64_t v4 = 0;
    unsigned __int8 v17 = (void **)sub_1372C((uint64_t)&v18, (long long *)__p, &v29, v16);
    do
    {
      if (SHIBYTE(v28[v4 + 2]) < 0) {
        operator delete((void *)v28[v4]);
      }
      v4 -= 4;
    }
    while (v4 != -20);
    uint64_t v5 = v16;
    id v6 = v17;
    if (v16 != v17)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_124B4(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)v5;
          char v23 = v5[2];
          *(_OWORD *)__p = v8;
        }
        uint64_t v24 = v5[3];
        unsigned __int16 v15 = 0;
        int v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        unsigned __int16 v15 = v9;
        if (v9 != 0xFFFF)
        {
          uint64_t v10 = v24;
          unsigned __int16 v20 = &v15;
          sub_130F4((uint64_t)v3, &v15, (uint64_t)&std::piecewise_construct, &v20)[3] = v10;
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(__p[0]);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v16;
    sub_13050((void ***)__p);
  }
  UIFontWeight v11 = sub_12E50(v3, &v19);
  if (v11) {
    return v11[3];
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v19);
  TUI::Evaluation::Context::reportError(v13, 1000, v14);

  return (void *)(&def_141F14 + 1);
}

void sub_122E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

uint64_t sub_123A8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_123E4(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void *sub_12458(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_124B4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  __dst[3] = *((id *)a2 + 3);
  return __dst;
}

void *sub_124B4(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_6B80();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    long long v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    void *v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_12554(void ***a1)
{
  uint64_t v1 = *a1;
  id v2 = (id *)**a1;
  if (v2)
  {
    long long v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 3;

        long long v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_125DC(uint64_t a1)
{
  sub_12618(a1, *(id **)(a1 + 16));
  id v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_12618(uint64_t a1, id *a2)
{
  if (a2)
  {
    id v2 = a2;
    do
    {
      id v3 = (id *)*v2;

      operator delete(v2);
      id v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_1265C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      id v3 = (void *)*v2;
      operator delete(v2);
      id v2 = v3;
    }
    while (v3);
  }
  long long v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t *sub_126A8(uint64_t *result, void *a2)
{
  id v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  if (v4 != *result)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = v6 + v7;
      *(_DWORD *)(v6 + v7 - 24) = *(_DWORD *)(v4 + v7 - 24);
      uint64_t result = (uint64_t *)*(id *)(v4 + v7 - 16);
      *(void *)(v8 - 16) = result;
      *(void *)(v8 - sub_3BD4((uint64_t)this + 8) = *(void *)(v4 + v7 - 8);
      v7 -= 24;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  uint64_t v9 = *v3;
  uint64_t *v3 = v6;
  a2[1] = v9;
  uint64_t v10 = v3[1];
  v3[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = v3[2];
  v3[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return result;
}

void *sub_12768(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_3EA4();
  }
  return operator new(24 * a2);
}

uint64_t sub_127B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_12804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    *(_DWORD *)a4 = *(_DWORD *)v5;
    objc_storeStrong((id *)(a4 + 8), *(id *)(v5 + 8));
    *(void *)(a4 + 16) = *(void *)(v5 + 16);
    a4 += 24;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

uint64_t sub_12878(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_12768(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[24 * v9];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)a2;
  *((void *)v11 + 1) = *(id *)(a2 + 8);
  *((void *)v11 + 2) = *(void *)(a2 + 16);
  v14[2] = v11 + 24;
  sub_126A8(a1, v14);
  uint64_t v12 = a1[1];
  sub_127B0((uint64_t)v14);
  return v12;
}

void sub_12978(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_127B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1298C(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v10 = __dst;
  uint64_t v11 = (char *)__dst;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_12458(v4, v6);
      v6 += 2;
      unint64_t v4 = v11 + 32;
      v11 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_12A30((uint64_t)v8);
  return v4;
}

void sub_12A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_12A30(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_12A68((uint64_t *)a1);
  }
  return a1;
}

void sub_12A68(uint64_t *a1)
{
  id v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 32;
      sub_12ABC(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_12ABC(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v3 = *(void **)a2;
    operator delete(v3);
  }
}

void sub_12B0C(void ***a1)
{
  uint64_t v1 = *a1;
  id v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_12ABC((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_12BA4(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint64_t v13 = (void *)(a1 + 16);
  uint64_t v11 = operator new(0x20uLL);
  *uint64_t v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + sub_3BD4((uint64_t)this + 8) = **a4;
  v11[3] = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_3ED8(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  char v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *uint64_t v11 = *v21;
LABEL_38:
    void *v21 = v11;
    goto LABEL_39;
  }
  *uint64_t v11 = *v13;
  *uint64_t v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    unint64_t v22 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    char v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_12DDC(_Unwind_Exception *a1)
{
  sub_12DF8(v2, v1);
  _Unwind_Resume(a1);
}

void sub_12DF8(uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t **sub_12E50(void *a1, unsigned __int16 *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (v2.i32[0] - 1) & v3;
  }
  uint64_t v6 = *(uint64_t ****)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  for (uint64_t result = *v6; result; uint64_t result = (uint64_t **)*result)
  {
    unint64_t v8 = (unint64_t)result[1];
    if (v8 == v3)
    {
      if (*((unsigned __int16 *)result + 8) == v3) {
        return result;
      }
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }
      else
      {
        v8 &= *(void *)&v2 - 1;
      }
      if (v8 != v5) {
        return 0;
      }
    }
  }
  return result;
}

void *sub_12F04(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  uint8x8_t v4 = __dst;
  unint64_t v12 = __dst;
  uint64_t v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)uint8x8_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      uint8x8_t v4 = v8 + 4;
      uint64_t v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_12FD0((uint64_t)v10);
  return v4;
}

void sub_12FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_12FD0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void sub_13008(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 9) < 0) {
      operator delete(*(void **)(v1 - 32));
    }
    v1 -= 32;
  }
}

void sub_13050(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_130A4((uint64_t *)v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_130A4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  a1[1] = v2;
}

void *sub_130F4(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      char v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          char v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  char v11 = operator new(0x20uLL);
  *char v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + sub_3BD4((uint64_t)this + 8) = **a4;
  v11[3] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_3ED8(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *char v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *char v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_13308(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1331C(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  unint64_t v12 = __dst;
  float v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = v8 + 4;
      float v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_133E8((uint64_t)v10);
  return v4;
}

void sub_133D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_133E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void *sub_13420(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  unint64_t v12 = __dst;
  float v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = v8 + 4;
      float v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_134EC((uint64_t)v10);
  return v4;
}

void sub_134D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_134EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void *sub_13524(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  unint64_t v12 = __dst;
  float v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = v8 + 4;
      float v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_135F0((uint64_t)v10);
  return v4;
}

void sub_135DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_135F0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void *sub_13628(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  unint64_t v12 = __dst;
  float v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = v8 + 4;
      float v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_136F4((uint64_t)v10);
  return v4;
}

void sub_136E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_136F4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void *sub_1372C(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  unint64_t v4 = __dst;
  unint64_t v12 = __dst;
  float v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_124B4(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4[2] = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
        unint64_t v8 = v4;
      }
      v4[3] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = v8 + 4;
      float v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_137F8((uint64_t)v10);
  return v4;
}

void sub_137E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_137F8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_13008(a1);
  }
  return a1;
}

void sub_13A50(id a1, TUIIdentifier *a2, TUIImageResource *a3, BOOL *a4)
{
}

void sub_13A58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  [v4 removeInterest];
  [v4 removeObserver:*(void *)(a1 + 32)];
}

id sub_13AAC(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 addObserver:*(void *)(a1 + 32)];
}

void sub_13B5C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  [v4 removeInterest];
  [v4 removeObserver:*(void *)(a1 + 32)];
}

void sub_13C48(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 72);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_13D9C;
  v9[3] = &unk_251920;
  id v10 = *(id *)(a1 + 40);
  unint64_t v3 = [v2 keysOfEntriesPassingTest:v9];
  id v4 = [v3 allObjects];

  if ([v4 count])
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if (*(void *)(v5 + 56))
    {
      uint64_t v6 = [*(id *)(v5 + 72) objectsForKeys:v4 notFoundMarker:*(void *)(a1 + 40)];
      long long v7 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v4];
      [*(id *)(*(void *)(a1 + 32) + 56) loadImagesFromResourceMap:v7];
      id v8 = [*(id *)(*(void *)(a1 + 32) + 56) newUIMenuElement];
      [*(id *)(a1 + 32) setMenu:v8];
    }
  }
}

BOOL sub_13D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a1 + 32) == a3;
}

void sub_14D80(id a1, _TUITransaction *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = TUITransactionLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    sub_190B70((uint64_t)v5, a3, v6);
  }

  long long v7 = TUITransactionLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_190AC0(v5, a3, v7);
  }
}

void sub_14F70(uint64_t a1)
{
}

void sub_14F7C(uint64_t a1)
{
}

uint64_t sub_15038(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_15294(uint64_t a1)
{
}

void sub_15C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_15C3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_15C4C(uint64_t a1)
{
}

void sub_15C54(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + sub_3BD4((uint64_t)this + 8) = 1;
  if (*(unsigned char *)(*(void *)(a1 + 32) + 48))
  {
    dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 16);
    *(void *)(v3 + 16) = v2;

    uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 16);
    uint64_t v6 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    objc_storeStrong(v6, v5);
  }
}

void sub_15D7C(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 8))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *(void *)(*(void *)(a1 + 32) + 48) &= ~1uLL;
    uint64_t v2 = +[TUITransactionOptions defaultImplicitOptions];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;

    uint64_t v5 = *(NSObject **)(*(void *)(a1 + 32) + 112);
    dispatch_suspend(v5);
  }
}

void sub_15EEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 48)) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(v1 + 16));
  }
}

void sub_16554(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 80) copy];
  [*(id *)(*(void *)(a1 + 32) + 80) removeAllObjects];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      long long v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v7) + 16))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v7));
        long long v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

id sub_1666C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_16674(uint64_t a1)
{
  id v2 = TUITransactionLog();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 40);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)long long v7 = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v3, OS_SIGNPOST_EVENT, v4, "TUITransaction.applyUpdates completion on main", (const char *)&unk_243F7A, v7, 2u);
  }

  id v5 = TUITransactionLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_190CCC();
  }

  return [*(id *)(a1 + 32) _invokeCompletions];
}

id sub_16908(uint64_t a1)
{
  id v2 = TUITransactionLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_190DA8();
  }

  return [*(id *)(a1 + 32) _invokeCompletions];
}

void sub_171E4(id a1)
{
  if (_TUIDeviceHasInternalInstall())
  {
    id v1 = +[NSUserDefaults standardUserDefaults];
    byte_2DF180 = [v1 BOOLForKey:@"TUIUserDefaultCaptureTransactionCallstack"];
  }
  else
  {
    byte_2DF180 = 0;
  }
}

void sub_17274(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_172A8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_17970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1798C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _removeObserver:*(void *)(a1 + 32)];
}

void sub_17B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_17BA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _removeObserver:*(void *)(a1 + 32)];
}

id sub_182CC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 0;
  return _[*(id *)(a1 + 32) _timeCheck];
}

void sub_188E0(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_188EC(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

id sub_189A0(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

id sub_18A44(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_18B10(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 appendObjectsWithProtocol:*(void *)(a1 + 32) toArray:*(void *)(a1 + 40)];
  }
}

void sub_18D84(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"accepts-drop";
  v6[1] = @"deceleration-rate";
  id v3 = +[NSArray arrayWithObjects:v6 count:2];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF190;
  qword_2DF190 = (uint64_t)v4;
}

void sub_190F4(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSizeAndIntrinsic];
  id v2 = [v1 mutableCopy];

  v6[0] = @"background-color";
  v6[1] = @"layer-contents-gravity";
  void v6[2] = @"start-at-end";
  v6[3] = @"observe-trigger";
  v6[4] = @"observe-trigger-delay";
  v6[5] = @"observe-trigger-value";
  v6[6] = @"url";
  id v3 = +[NSArray arrayWithObjects:v6 count:7];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF1A0;
  qword_2DF1A0 = (uint64_t)v4;
}

void sub_197A8(uint64_t a1, uint64_t a2, void *a3)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1984C;
  v5[3] = &unk_251B70;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  [a3 sortUsingComparator:v5];
}

uint64_t sub_1984C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];
  long long v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];
  id v9 = [v7 groupPriority];
  if (v9 >= [v8 groupPriority])
  {
    id v11 = [v7 groupPriority];
    if (v11 <= [v8 groupPriority])
    {
      id v12 = [*(id *)(*(void *)(a1 + 40) + 8) indexOfObject:v5];
      id v13 = [*(id *)(*(void *)(a1 + 40) + 8) indexOfObject:v6];
      if (v12 < v13) {
        uint64_t v10 = -1;
      }
      else {
        uint64_t v10 = v12 > v13;
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
  }
  else
  {
    uint64_t v10 = -1;
  }

  return v10;
}

void sub_1A360(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 newAdded];
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v5];
}

void sub_1A4BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 newRemoved];
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v5];
}

void sub_1A754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

double sub_1A768()
{
  uint64_t v0 = +[NSDate date];
  [v0 timeIntervalSinceReferenceDate];
  double v2 = v1;

  return v2;
}

void sub_1A7B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v8 = WeakRetained;
    [*(id *)(*(void *)(a1 + 32) + 16) addObject:WeakRetained];
    id WeakRetained = v8;
    uint64_t v3 = *(void *)(a1 + 32);
    if (*(void *)(v3 + 32))
    {
      if (*(double *)(a1 + 48) >= *(double *)(v3 + 40)) {
        double v4 = *(double *)(a1 + 48);
      }
      else {
        double v4 = *(double *)(v3 + 40);
      }
      id v5 = [TUIVisibilityChangeRecord alloc];
      id v6 = [*(id *)(*(void *)(a1 + 32) + 32) newAdded];
      id v7 = [(TUIVisibilityChangeRecord *)v5 initWithLastTimestamp:v6 timestamp:v4 rootNode:v4];

      [v8 visibleContentsChanged:v7];
      id WeakRetained = v8;
    }
  }
}

void sub_1A958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1A96C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v8 = WeakRetained;
    [*(id *)(*(void *)(a1 + 32) + 16) removeObject:WeakRetained];
    id WeakRetained = v8;
    uint64_t v3 = *(void *)(a1 + 32);
    if (*(void *)(v3 + 32))
    {
      if (*(double *)(a1 + 48) >= *(double *)(v3 + 40)) {
        double v4 = *(double *)(a1 + 48);
      }
      else {
        double v4 = *(double *)(v3 + 40);
      }
      id v5 = [TUIVisibilityChangeRecord alloc];
      id v6 = [*(id *)(*(void *)(a1 + 32) + 32) newRemoved];
      id v7 = [(TUIVisibilityChangeRecord *)v5 initWithLastTimestamp:v6 timestamp:v4 rootNode:v4];

      [v8 visibleContentsChanged:v7];
      id WeakRetained = v8;
    }
  }
}

void sub_1AE60(uint64_t a1)
{
}

uint64_t sub_1B088(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 88) &= ~4u;
  *(unsigned char *)(*(void *)(result + 32) + 88) |= 8u;
  return result;
}

void sub_1B394(uint64_t a1)
{
}

void sub_1B484(uint64_t a1)
{
}

void sub_1BC70(uint64_t a1, void *a2, void *a3, CGFloat a4)
{
  id v16 = a2;
  id v7 = a3;
  [v16 frame];
  double width = v18.size.width;
  double height = v18.size.height;
  double v11 = *(double *)(a1 + 56) + v10;
  double v13 = v12 + *(double *)(a1 + 64);
  v18.origin.x = v11;
  v18.origin.y = v13;
  if (CGRectIntersectsRect(v18, *(CGRect *)(*(void *)(a1 + 32) + 56)))
  {
    double v14 = fmin(width, *(double *)(a1 + 72));
    double v15 = fmin(height, *(double *)(a1 + 80));
    v19.origin.x = v11;
    v19.origin.y = v13;
    v19.size.double width = width;
    v19.size.double height = height;
    CGRect v20 = CGRectIntersection(v19, *(CGRect *)(*(void *)(a1 + 32) + 56));
    if (v20.size.width * v20.size.height / (v14 * v15) >= a4)
    {
      [*(id *)(a1 + 40) addObject:v7];
      [*(id *)(a1 + 48) setObject:v16 forKeyedSubscript:v7];
    }
  }
}

void sub_1BF84(id a1)
{
  double v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_UTILITY, 0);

  dispatch_queue_t v2 = dispatch_queue_create("TUIVisibilityController.sharedQueue", attr);
  uint64_t v3 = (void *)qword_2DF1B0;
  qword_2DF1B0 = (uint64_t)v2;
}

id sub_1C1EC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
}

id sub_1C330(uint64_t a1)
{
  return [*(id *)(a1 + 32) q_processUpdates];
}

id sub_1C434(uint64_t a1)
{
  return [*(id *)(a1 + 32) q_processUpdates];
}

id sub_1C898(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
}

id sub_1CAE8(uint64_t a1)
{
  [*(id *)(a1 + 32) q_updateVisibleBounds:*(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72) *(double *)(a1 + 80)];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  uint64_t v3 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(a1 + 40);

  return [v2 q_setNeedsUpdateForCollector:v3];
}

id sub_1CCF0(uint64_t a1)
{
  [*(id *)(a1 + 32) q_updateVisibleBounds:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  [*(id *)(a1 + 32) q_updateVisible:*(unsigned __int8 *)(a1 + 80)];
  uint64_t v3 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(a1 + 40);

  return [v2 q_setNeedsUpdateForCollector:v3];
}

id sub_1D334(uint64_t a1)
{
  [*(id *)(a1 + 32) q_updateVisibleBounds:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72)];
  uint64_t v3 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(a1 + 40);

  return [v2 q_setNeedsUpdateForCollector:v3];
}

id sub_1D598(uint64_t a1)
{
  [*(id *)(a1 + 32) q_updateVisibleBounds:*(double *)(a1 + 48) *(double *)(a1 + 56) *(double *)(a1 + 64) *(double *)(a1 + 72)];
  [*(id *)(a1 + 32) q_updateVisible:*(unsigned __int8 *)(a1 + 80)];
  uint64_t v3 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(a1 + 40);

  return [v2 q_setNeedsUpdateForCollector:v3];
}

void sub_1E86C(id a1)
{
  double v1 = +[TUIAttributeSet supportedAttributesSizeAndIntrinsic];
  id v2 = [v1 mutableCopy];

  v6[0] = @"progress-id";
  v6[1] = @"mode";
  void v6[2] = @"progress";
  v6[3] = @"paused";
  v6[4] = @"color";
  v6[5] = @"kind";
  v6[6] = @"instance";
  void v6[7] = @"parameters";
  uint64_t v3 = +[NSArray arrayWithObjects:v6 count:8];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF1C8;
  qword_2DF1C8 = (uint64_t)v4;
}

void TUICastStatsDump()
{
  NSLog(@"Cast per file");
  sub_1EC1C(v0, (void *)qword_2DF1D8);
  NSLog(@"\nCast per callsite");
  sub_1EC1C(v1, (void *)qword_2DF1E8);
  NSLog(@"\nCast per type");
  sub_1EC1C(v2, (void *)qword_2DF1E0);
  NSLog(@"\nTotal casts: %lu", qword_2DF1F0);
}

void sub_1EC1C(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [v2 allKeys];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1ED38;
  v9[3] = &unk_251CF0;
  id v4 = v2;
  id v10 = v4;
  id v5 = [v3 sortedArrayUsingComparator:v9];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1EDC4;
  v7[3] = &unk_251D18;
  id v8 = v4;
  id v6 = v4;
  [v5 enumerateObjectsUsingBlock:v7];
}

uint64_t sub_1ED38(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  id v8 = [v7 unsignedIntegerValue];

  id v9 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];

  id v10 = [v9 unsignedIntegerValue];
  if (v8 < v10) {
    return -1;
  }
  else {
    return v8 > v10;
  }
}

void sub_1EDC4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 objectForKeyedSubscript:v3];
  NSLog(@"%8lu : %@", [v4 unsignedIntegerValue], v3);
}

void TUICastRecord(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_2DF200 != -1) {
    dispatch_once(&qword_2DF200, &stru_251D38);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1EF30;
  block[3] = &unk_251D58;
  block[4] = a1;
  void block[5] = a3;
  int v7 = a2;
  dispatch_sync((dispatch_queue_t)qword_2DF1F8, block);
}

void sub_1EEF0(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("TemplateUI.castStats", 0);
  id v2 = (void *)qword_2DF1F8;
  qword_2DF1F8 = (uint64_t)v1;
}

void sub_1EF30(uint64_t a1)
{
  ++qword_2DF1F0;
  if (!qword_2DF1D8)
  {
    uint64_t v2 = objc_opt_new();
    id v3 = (void *)qword_2DF1D8;
    qword_2DF1D8 = v2;
  }
  if (!qword_2DF1E0)
  {
    uint64_t v4 = objc_opt_new();
    id v5 = (void *)qword_2DF1E0;
    qword_2DF1E0 = v4;
  }
  if (!qword_2DF1E8)
  {
    uint64_t v6 = objc_opt_new();
    int v7 = (void *)qword_2DF1E8;
    qword_2DF1E8 = v6;
  }
  id v16 = +[NSString stringWithUTF8String:*(void *)(a1 + 32)];
  id v8 = +[NSString stringWithUTF8String:*(void *)(a1 + 40)];
  id v9 = +[NSString stringWithFormat:@"%s:%lu", *(void *)(a1 + 32), *(int *)(a1 + 48)];
  id v10 = [(id)qword_2DF1D8 objectForKeyedSubscript:v16];
  double v11 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v10 unsignedIntegerValue] + 1);
  [(id)qword_2DF1D8 setObject:v11 forKeyedSubscript:v16];

  double v12 = [(id)qword_2DF1E0 objectForKeyedSubscript:v8];
  double v13 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v12 unsignedIntegerValue] + 1);
  [(id)qword_2DF1E0 setObject:v13 forKeyedSubscript:v8];

  double v14 = [(id)qword_2DF1E8 objectForKeyedSubscript:v9];
  double v15 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v14 unsignedIntegerValue] + 1);
  [(id)qword_2DF1E8 setObject:v15 forKeyedSubscript:v9];
}

id TUIDynamicCast(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2 && (objc_opt_isKindOfClass() & 1) != 0) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

id TUIStaticCast(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2 && (objc_opt_isKindOfClass() & 1) != 0) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

id TUIProtocolCast(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v4 && [v4 conformsToProtocol:v3]) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }

  return v6;
}

id TUIStaticProtocolCast(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v4 && [v4 conformsToProtocol:v3]) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }

  return v6;
}

id TUIClassAndProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a1;
  if (v10 && (objc_opt_isKindOfClass() & 1) != 0)
  {
    double v14 = &a9;
    if (!a3)
    {
LABEL_6:
      id v12 = v10;
      goto LABEL_8;
    }
    while (1)
    {
      double v11 = v14++;
      if (([v10 conformsToProtocol:*v11] & 1) == 0) {
        break;
      }
      if (!--a3) {
        goto LABEL_6;
      }
    }
  }
  id v12 = 0;
LABEL_8:

  return v12;
}

id TUIStaticClassAndProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a1;
  if (v10 && (objc_opt_isKindOfClass() & 1) != 0)
  {
    double v15 = (id *)&a9;
    if (!a3)
    {
LABEL_6:
      id v13 = v10;
      goto LABEL_9;
    }
    while (1)
    {
      double v11 = v15++;
      id v12 = *v11;
      if (([v10 conformsToProtocol:v12] & 1) == 0) {
        break;
      }

      if (!--a3) {
        goto LABEL_6;
      }
    }
  }
  id v13 = 0;
LABEL_9:

  return v13;
}

CFTypeRef TUICFTypeCast(uint64_t a1, CFTypeRef cf)
{
  if (!cf) {
    return 0;
  }
  if (CFGetTypeID(cf) == a1) {
    return cf;
  }
  return 0;
}

void sub_1F9F4(id a1)
{
  dispatch_queue_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"accepts-drop";
  v6[1] = @"deceleration-rate";
  id v3 = +[NSArray arrayWithObjects:v6 count:2];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF208;
  qword_2DF208 = (uint64_t)v4;
}

void sub_20CE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_20D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  id v10 = v9;

  a9.super_class = (Class)TUIVStack;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_20E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_20F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_216D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_21AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21C3C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_3EA4();
  }
  return operator new(16 * a2);
}

void sub_224C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_224D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained q_updateSnapshot];
}

void sub_226E0(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id v6 = v5;
  if (*(unsigned char *)(a1 + 56))
  {
    id v7 = v5;
  }
  else
  {
    if (![v5 timingCountWithTime:*(double *)(a1 + 40) threshold:*(double *)(a1 + 48)])
    {
      id v8 = 0;
      goto LABEL_9;
    }
    id v7 = [v6 copy];
  }
  id v8 = v7;
  if (v7)
  {
    [v7 becameHiddenAtTime:*(double *)(a1 + 40) threshold:*(double *)(a1 + 48)];
    if ([v8 timingCount])
    {
      id v9 = *(void **)(a1 + 32);
      id v10 = [v8 identifier];
      [v9 setObject:v8 forKeyedSubscript:v10];
    }
  }
LABEL_9:
}

void sub_22868(void *a1, void *a2, double a3, double a4)
{
  id v7 = a1;
  id v8 = a2;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v9 = [v7 added];
  id v10 = [v9 countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v36;
    do
    {
      id v13 = 0;
      do
      {
        if (*(void *)v36 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v35 + 1) + 8 * (void)v13);
        double v15 = [v7 attributesMap];
        id v16 = [v15 objectForKeyedSubscript:v14];

        unint64_t v17 = [v16 data];
        [v16 size];
        CGRect v18 = [v8 impressionForData:v17 size:1 create:];

        [v18 becameVisibleAtTime:a3];
        id v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v35 objects:v40 count:16];
    }
    while (v11);
  }

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  CGRect v19 = [v7 removed];
  id v20 = [v19 countByEnumeratingWithState:&v31 objects:v39 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v32;
    do
    {
      char v23 = 0;
      do
      {
        if (*(void *)v32 != v22) {
          objc_enumerationMutation(v19);
        }
        uint64_t v24 = [v8 impressionForIdentifier:*(void *)(*((void *)&v31 + 1) + 8 * (void)v23)];
        [v24 becameHiddenAtTime:a3 threshold:a4];

        char v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      id v21 = [v19 countByEnumeratingWithState:&v31 objects:v39 count:16];
    }
    while (v21);
  }

  uint64_t v25 = [v7 identifierNodeMap];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_2332C;
  v27[3] = &unk_251E60;
  double v29 = a3;
  double v30 = a4;
  id v28 = v8;
  id v26 = v8;
  [v25 enumerateKeysAndObjectsUsingBlock:v27];
}

id sub_22BB0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) clearImpressions];
  sub_22C08(*(void **)(*(void *)(a1 + 32) + 48), *(void **)(*(void *)(a1 + 32) + 24), *(double *)(a1 + 40));
  id v2 = *(void **)(a1 + 32);
  double v3 = *(double *)(a1 + 40);

  return [v2 q_updateSnapshotIfNeededWithTime:v3];
}

void sub_22C08(void *a1, void *a2, double a3)
{
  id v5 = a1;
  id v6 = a2;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v7 = [v5 identifiers];
  id v8 = [v7 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v22 + 1) + 8 * (void)v11);
        id v13 = [v5 attributesMap];
        uint64_t v14 = [v13 objectForKeyedSubscript:v12];

        double v15 = [v14 data];
        [v14 size];
        id v16 = [v6 impressionForData:v15 size:1 create:];

        [v16 becameVisibleAtTime:a3];
        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v9);
  }

  unint64_t v17 = [v5 identifierNodeMap];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_2333C;
  v19[3] = &unk_251E88;
  double v21 = a3;
  id v20 = v6;
  id v18 = v6;
  [v17 enumerateKeysAndObjectsUsingBlock:v19];
}

void sub_22F28(uint64_t a1)
{
  id v5 = (id)objc_opt_new();
  [*(id *)(a1 + 32) q_collectImpressions:*(double *)(a1 + 48)];
  if (*(unsigned char *)(a1 + 56))
  {
    sub_22C08(*(void **)(*(void *)(a1 + 32) + 48), *(void **)(*(void *)(a1 + 32) + 24), *(double *)(a1 + 48));
    uint64_t v2 = *(void *)(a1 + 32);
    double v3 = *(void **)(v2 + 32);
    *(void *)(v2 + 32) = 0;
  }
  if (*(void *)(a1 + 40))
  {
    id v4 = [[TUIImpressionSnapshot alloc] initWithMap:v5];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_230A0(uint64_t a1)
{
  id v4 = objc_alloc_init(_TUIImpressionStats);
  sub_22C08(*(void **)(*(void *)(a1 + 32) + 48), v4, *(double *)(a1 + 48));
  uint64_t v2 = objc_opt_new();
  [*(id *)(a1 + 32) q_collectImpressions:v2 time:0 threshold:v4 flush:0.0 stats:];
  double v3 = [[TUIImpressionSnapshot alloc] initWithMap:v2];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_231AC(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_2DF220 = [v1 BOOLForKey:@"TUIOverlayImpressions"];
}

uint64_t sub_2332C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22868(a3, *(void *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48));
}

uint64_t sub_2333C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22C08(a3, *(void *)(a1 + 32), *(double *)(a1 + 40));
}

void sub_23FA0(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSizeAndIntrinsic];
  id v2 = [v1 mutableCopy];

  v6[0] = @"play-state";
  v6[1] = @"color";
  void v6[2] = @"parameters";
  double v3 = +[NSArray arrayWithObjects:v6 count:3];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF228;
  qword_2DF228 = (uint64_t)v4;
}

uint64_t TUI::Evaluation::Variables::Modern::Modern(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)a1 = off_251ED8;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = off_252008;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = a2;
  id v8 = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = a4;
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)(a1 + 72));
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
  *(_OWORD *)(a1 + 18sub_3BD4((uint64_t)this + 48) = 0u;
  *(_OWORD *)(a1 + 1864) = 0u;
  *(_OWORD *)(a1 + 1816) = 0u;
  *(_OWORD *)(a1 + 1832) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  *(_OWORD *)(a1 + 1800) = 0u;
  *(_OWORD *)(a1 + 176sub_3BD4((uint64_t)this + 8) = 0u;
  *(_DWORD *)(a1 + 1880) = 1065353216;

  return a1;
}

void sub_24224(_Unwind_Exception *a1)
{
  id v4 = v3;
  TUI::Evaluation::Variables::Scope::~Scope(v4);

  id v6 = *(void **)(v1 + 24);
  if (v6)
  {
    *(void *)(v1 + 32) = v6;
    operator delete(v6);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::~Modern(TUI::Evaluation::Variables::Modern *this)
{
  *(void *)this = off_251ED8;
  *((void *)this + 1) = off_252008;
  sub_28F7C((uint64_t)this + 1848);
  id v6 = (void **)((char *)this + 1824);
  sub_28EDC(&v6);
  id v2 = (std::__shared_weak_count *)*((void *)this + 227);
  if (v2) {
    sub_123E4(v2);
  }
  double v3 = (std::__shared_weak_count *)*((void *)this + 225);
  if (v3) {
    sub_123E4(v3);
  }
  id v4 = (void *)*((void *)this + 221);
  if (v4)
  {
    *((void *)this + 222) = v4;
    operator delete(v4);
  }
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Modern *)((char *)this + 72));

  id v5 = (void *)*((void *)this + 3);
  if (v5)
  {
    *((void *)this + 4) = v5;
    operator delete(v5);
  }
}

{
  uint64_t vars8;

  TUI::Evaluation::Variables::Modern::~Modern(this);

  operator delete();
}

void TUI::Evaluation::Variables::Modern::beginScope(TUI::Evaluation::Variables::Modern *this, char a2)
{
}

void TUI::Evaluation::Variables::Modern::endScope(TUI::Evaluation::Variables::Modern *this)
{
}

id TUI::Evaluation::Variables::Modern::setupGlobalBindings(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_243F0;
  v3[3] = &unk_252048;
  v3[4] = a1;
  return [a2 enumerateKeysAndObjectsUsingBlock:v3];
}

void sub_243F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(v7 + 64);
  id v9 = v5;
  sub_6ACC(__p, (char *)[v9 UTF8String]);
  unsigned int v10 = TUI::Symbol::Tab::lookupEntry(v8, (char *)__p);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (v10 <= 0xFFFEFFFF && (unsigned __int16)v10 != 0xFFFF)
  {
    Entry v12 = (Entry)-65536;
    Entry v13 = (Entry)v10;
    TUI::Evaluation::Enumerator::State::State((uint64_t)__p, v12, v13);
    objc_storeStrong(&v16, a3);
    TUI::Evaluation::Variables::Scope::define(v7 + 72, v10, (const TUI::Evaluation::Enumerator::State *)__p);
    TUI::Evaluation::Enumerator::State::~State(__p);
  }
}

void sub_244DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  TUI::Evaluation::Enumerator::State::~State(&__p);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::_popCapture(TUI::Evaluation::Variables::Modern *this)
{
  uint64_t v2 = *((void *)this + 222);
  uint64_t v4 = *(void *)(v2 - 16);
  double v3 = *(void **)(v2 - 8);
  *((void *)this + 222) = v2 - 16;
  double v5 = TUI::Evaluation::Variables::Scope::popClosure((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
  if (v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v4 + 32));

    if (WeakRetained) {
      TUI::Evaluation::Variables::Modern::popComponent(this, 0);
    }
  }
  if (v3)
  {
    *((void *)this + 2) = v3;
    [v3 model:v5];
    uint64_t v7 = (std::__shared_weak_count *)*((void *)this + 227);
    *((_OWORD *)this + 113) = v8;
    if (v7) {
      sub_123E4(v7);
    }
  }
}

void TUI::Evaluation::Variables::Modern::popComponent(TUI::Evaluation::Variables::Modern *this, int a2)
{
  uint64_t v4 = *((void *)this + 3);
  uint64_t v3 = *((void *)this + 4);
  *((void *)this + 4) = v3 - 120;
  if (v4 == v3 - 120) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(v3 - 240);
  }
  *((void *)this + 2) = v5;
  if (a2) {
    TUI::Evaluation::Variables::Modern::_popCapture(this);
  }

  TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
}

void TUI::Evaluation::Variables::Modern::_pushCapture(uint64_t a1, TUI::Evaluation::Variables::Capture **a2)
{
  if (*a2) {
    id WeakRetained = (TUIComponent *)objc_loadWeakRetained((id *)*a2 + 4);
  }
  else {
    id WeakRetained = 0;
  }
  uint64_t v4 = *a2;
  uint64_t v5 = *(TUI::Evaluation::Variables::Capture **)(a1 + 16);
  id v6 = *(TUI::Evaluation::Variables::Capture ***)(a1 + 1776);
  unint64_t v7 = *(void *)(a1 + 1784);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = *(void *)(a1 + 1768);
    uint64_t v10 = ((uint64_t)v6 - v9) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      sub_4484();
    }
    uint64_t v12 = v7 - v9;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13) {
      uint64_t v14 = (char *)sub_21C3C(a1 + 1784, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    char v15 = (TUI::Evaluation::Variables::Capture **)&v14[16 * v10];
    id v16 = &v14[16 * v13];
    *char v15 = v4;
    v15[1] = v5;
    long long v8 = v15 + 2;
    unint64_t v17 = *(char **)(a1 + 1776);
    id v18 = *(char **)(a1 + 1768);
    if (v17 != v18)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v17 - 1);
        v15 -= 2;
        v17 -= 16;
      }
      while (v17 != v18);
      unint64_t v17 = *(char **)(a1 + 1768);
    }
    *(void *)(a1 + 176sub_3BD4((uint64_t)this + 8) = v15;
    *(void *)(a1 + 1776) = v8;
    *(void *)(a1 + 1784) = v16;
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    *id v6 = v4;
    v6[1] = v5;
    long long v8 = v6 + 2;
  }
  *(void *)(a1 + 1776) = v8;
  CGRect v19 = *a2;
  if (*a2)
  {
    if (*((void *)v19 + 5)) {
      int v20 = TUI::Evaluation::Variables::Capture::_bitCheck(v19, 0);
    }
    else {
      int v20 = 1;
    }
    int v21 = v20 ^ 1;
  }
  else
  {
    int v21 = 1;
  }
  TUI::Evaluation::Variables::Scope::pushClosure((TUI::Evaluation::Variables::Scope *)(a1 + 920), v21);
  if (WeakRetained)
  {
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, WeakRetained, 1, 0);
  }
  else
  {
    long long v22 = *a2;
    if (*a2
      && (!*((void *)v22 + 5)
       || TUI::Evaluation::Variables::Capture::_bitCheck(v22, 0)
       && (!*((void *)*a2 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(*a2, 1uLL) & 1) == 0)))
    {
      *(void *)(a1 + 16) = 0;
      long long v23 = *(std::__shared_weak_count **)(a1 + 1816);
      *(_OWORD *)(a1 + 180sub_3BD4((uint64_t)this + 8) = 0u;
      if (v23) {
        sub_123E4(v23);
      }
    }
  }
}

void sub_24800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::pushComponent(TUI::Evaluation::Variables::Modern *this, TUIComponent *a2, int a3, char a4)
{
  unint64_t v7 = a2;
  long long v8 = v7;
  *((void *)this + 2) = v7;
  if (v7)
  {
    [(TUIComponent *)v7 model];
    long long v9 = v59;
  }
  else
  {
    long long v9 = 0uLL;
  }
  long long v59 = 0uLL;
  uint64_t v10 = (std::__shared_weak_count *)*((void *)this + 227);
  *((_OWORD *)this + 113) = v9;
  if (v10)
  {
    sub_123E4(v10);
    if (*((void *)&v59 + 1)) {
      sub_123E4(*((std::__shared_weak_count **)&v59 + 1));
    }
  }
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v59 = 0u;
  if (a3)
  {
    uint64_t v11 = *((void *)this + 4);
    while (v11 != *((void *)this + 3))
    {
      uint64_t v12 = *(TUIComponent **)(v11 - 120);
      v11 -= 120;
      if (v12 == v8)
      {
        int v13 = 0;
        long long v14 = *(_OWORD *)(v11 + 8);
        long long v15 = *(_OWORD *)(v11 + 40);
        long long v60 = *(_OWORD *)(v11 + 24);
        long long v61 = v15;
        long long v59 = v14;
        long long v16 = *(_OWORD *)(v11 + 56);
        long long v17 = *(_OWORD *)(v11 + 72);
        long long v18 = *(_OWORD *)(v11 + 104);
        long long v64 = *(_OWORD *)(v11 + 88);
        long long v65 = v18;
        long long v62 = v16;
        long long v63 = v17;
        goto LABEL_14;
      }
    }
    int v13 = 1;
  }
  else
  {
    int v13 = 0;
  }
LABEL_14:
  TUI::Evaluation::Variables::Scope::pushScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920), 63);
  TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(&v57);
  TUI::Evaluation::Variables::Modern::_pushCapture((uint64_t)this, &v57);
  if (v58) {
    sub_123E4(v58);
  }
  if (v13)
  {
    TUI::Evaluation::Variables::Scope::beginMark((TUI::Evaluation::Variables::Modern *)((char *)this + 920), (uint64_t)&v50);
    long long v63 = v54;
    long long v64 = v55;
    long long v65 = v56;
    long long v59 = v50;
    long long v60 = v51;
    long long v61 = v52;
    long long v62 = v53;
    if (a3)
    {
      id v19 = *(id *)(*((void *)this + 226) + 72);
      if ([v19 count])
      {
        uint64_t v20 = *((void *)this + 226);
        uint64_t v22 = *(void *)(v20 + 24);
        int v21 = *(std::__shared_weak_count **)(v20 + 32);
        if (v21)
        {
          atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
          sub_123E4(v21);
        }

        if (v22)
        {
          uint64_t v23 = *((void *)this + 226);
          uint64_t v24 = *(void *)(v23 + 24);
          long long v25 = *(std::__shared_weak_count **)(v23 + 32);
          if (v25) {
            atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          v49[0] = _NSConcreteStackBlock;
          v49[1] = 3221225472;
          v49[2] = sub_26D2C;
          v49[3] = &unk_252068;
          void v49[4] = this;
          TUI::Evaluation::Variables::Capture::enumerate(v24, v49);
          if (v25) {
            sub_123E4(v25);
          }
        }
      }
      else
      {
      }
      uint64_t v26 = *((void *)this + 6);
      char v27 = (std::__shared_weak_count *)*((void *)this + 227);
      uint64_t v47 = *((void *)this + 226);
      id v48 = v27;
      if (v27) {
        atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      TUI::Evaluation::Context::evaluateComponentLocals(v26, (uint64_t)&v47);
      if (v48) {
        sub_123E4(v48);
      }
    }
    TUI::Evaluation::Variables::Scope::endMark((void *)this + 115, &v59);
  }
  if ((a4 & 1) == 0) {
    TUI::Evaluation::Variables::Modern::_popCapture(this);
  }
  long long v55 = v64;
  long long v56 = v65;
  long long v50 = v59;
  long long v51 = v60;
  long long v53 = v62;
  long long v54 = v63;
  long long v52 = v61;
  unint64_t v28 = *((void *)this + 5);
  unint64_t v29 = *((void *)this + 4);
  if (v29 >= v28)
  {
    uint64_t v31 = *((void *)this + 3);
    unint64_t v32 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v29 - v31) >> 3);
    unint64_t v33 = v32 + 1;
    if (v32 + 1 > 0x222222222222222) {
      sub_4484();
    }
    unint64_t v34 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v28 - v31) >> 3);
    if (2 * v34 > v33) {
      unint64_t v33 = 2 * v34;
    }
    if (v34 >= 0x111111111111111) {
      unint64_t v35 = 0x222222222222222;
    }
    else {
      unint64_t v35 = v33;
    }
    if (v35) {
      long long v36 = (char *)sub_29A30((uint64_t)this + 40, v35);
    }
    else {
      long long v36 = 0;
    }
    long long v37 = &v36[120 * v32];
    long long v38 = &v36[120 * v35];
    *(void *)long long v37 = v8;
    *(_OWORD *)(v37 + sub_3BD4((uint64_t)this + 8) = v50;
    *(_OWORD *)(v37 + 24) = v51;
    *(_OWORD *)(v37 + 40) = v52;
    *(_OWORD *)(v37 + 104) = v56;
    *(_OWORD *)(v37 + 8sub_3BD4((uint64_t)this + 8) = v55;
    *(_OWORD *)(v37 + 72) = v54;
    *(_OWORD *)(v37 + 56) = v53;
    double v30 = v37 + 120;
    long long v40 = (char *)*((void *)this + 3);
    uint64_t v39 = (char *)*((void *)this + 4);
    if (v39 != v40)
    {
      do
      {
        long long v41 = *(_OWORD *)(v39 - 120);
        long long v42 = *(_OWORD *)(v39 - 104);
        long long v43 = *(_OWORD *)(v39 - 88);
        *(_OWORD *)(v37 - 72) = *(_OWORD *)(v39 - 72);
        *(_OWORD *)(v37 - 8sub_3BD4((uint64_t)this + 8) = v43;
        *(_OWORD *)(v37 - 104) = v42;
        *(_OWORD *)(v37 - 120) = v41;
        long long v44 = *(_OWORD *)(v39 - 56);
        long long v45 = *(_OWORD *)(v39 - 40);
        long long v46 = *(_OWORD *)(v39 - 24);
        *((void *)v37 - 1) = *((void *)v39 - 1);
        *(_OWORD *)(v37 - 24) = v46;
        *(_OWORD *)(v37 - 40) = v45;
        *(_OWORD *)(v37 - 56) = v44;
        v37 -= 120;
        v39 -= 120;
      }
      while (v39 != v40);
      uint64_t v39 = (char *)*((void *)this + 3);
    }
    *((void *)this + 3) = v37;
    *((void *)this + 4) = v30;
    *((void *)this + 5) = v38;
    if (v39) {
      operator delete(v39);
    }
  }
  else
  {
    *(void *)unint64_t v29 = v8;
    *(_OWORD *)(v29 + 56) = v53;
    *(_OWORD *)(v29 + 72) = v54;
    *(_OWORD *)(v29 + 8sub_3BD4((uint64_t)this + 8) = v55;
    *(_OWORD *)(v29 + 104) = v56;
    *(_OWORD *)(v29 + sub_3BD4((uint64_t)this + 8) = v50;
    *(_OWORD *)(v29 + 24) = v51;
    *(_OWORD *)(v29 + 40) = v52;
    double v30 = (char *)(v29 + 120);
  }
  *((void *)this + 4) = v30;
}

void sub_24C38(_Unwind_Exception *a1)
{
  if (v2) {
    sub_123E4(v2);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::newSnapshot(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = [*(id *)(a1 + 56) packageBuffer];
  if (TUIClosureNotNil(a2) && v4[47] > (unint64_t)a2)
  {
    if (v4[46] + 28 * a2) {
      TUI::Evaluation::Variables::Capture::create(*(void **)(a1 + 16), *(void **)(a1 + 56), &v5);
    }
  }
  TUI::Evaluation::Variables::Capture::create(*(TUI::Evaluation::Variables::Capture **)(a1 + 16), &v5);
  operator new();
}

void sub_24DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_123E4(a14);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Variables::Modern::evaluateWithSnapshot(uint64_t a1, uint64_t *a2, void *a3)
{
  char v27 = a3;
  uint64_t v5 = *(void *)(a1 + 1792);
  id v6 = *(std::__shared_weak_count **)(a1 + 1800);
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)v30);
  long long v28 = 0uLL;
  uint64_t v29 = 0;
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 1792) = v8;
  long long v9 = *(std::__shared_weak_count **)(a1 + 1800);
  *(void *)(a1 + 1800) = v7;
  if (v9) {
    sub_123E4(v9);
  }
  TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v30);
  long long v26 = *(_OWORD *)(a1 + 1768);
  *(_OWORD *)(a1 + 176sub_3BD4((uint64_t)this + 8) = 0u;
  uint64_t v10 = *(void *)(a1 + 1784);
  *(void *)(a1 + 1784) = 0;
  long long v11 = *(_OWORD *)(a1 + 1824);
  *(_OWORD *)(a1 + 1824) = v28;
  long long v28 = v11;
  uint64_t v12 = *(void *)(a1 + 1840);
  *(void *)(a1 + 1840) = v29;
  uint64_t v29 = v12;
  id v13 = *(id *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 1808);
  long long v15 = *(std::__shared_weak_count **)(a1 + 1816);
  if (v15) {
    atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id WeakRetained = (TUIComponent *)objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 1792) + 8) + 32));
  if (WeakRetained)
  {
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, WeakRetained, 1, 0);
  }
  else
  {
    *(void *)(a1 + 16) = 0;
    long long v17 = *(std::__shared_weak_count **)(a1 + 1816);
    *(_OWORD *)(a1 + 180sub_3BD4((uint64_t)this + 8) = 0u;
    if (v17) {
      sub_123E4(v17);
    }
  }
  v27[2]();
  if (WeakRetained)
  {
    uint64_t v19 = *(void *)(a1 + 24);
    uint64_t v18 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = v18 - 120;
    if (v19 == v18 - 120) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = *(void *)(v18 - 240);
    }
    *(void *)(a1 + 16) = v20;
    TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
  }
  *(void *)(a1 + 16) = v13;
  if (v15) {
    atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 180sub_3BD4((uint64_t)this + 8) = v14;
  int v21 = *(std::__shared_weak_count **)(a1 + 1816);
  *(void *)(a1 + 1816) = v15;
  if (v21) {
    sub_123E4(v21);
  }
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 1792) = v5;
  uint64_t v22 = *(std::__shared_weak_count **)(a1 + 1800);
  *(void *)(a1 + 1800) = v6;
  if (v22) {
    sub_123E4(v22);
  }
  TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v30);
  uint64_t v23 = *(void **)(a1 + 1768);
  *(_OWORD *)(a1 + 176sub_3BD4((uint64_t)this + 8) = v26;
  *(void *)(a1 + 1784) = v10;
  long long v24 = *(_OWORD *)(a1 + 1824);
  *(_OWORD *)(a1 + 1824) = v28;
  long long v28 = v24;
  uint64_t v25 = *(void *)(a1 + 1840);
  *(void *)(a1 + 1840) = v29;
  uint64_t v29 = v25;

  if (v15) {
    sub_123E4(v15);
  }

  uint64_t v31 = (void **)&v28;
  sub_28EDC(&v31);
  if (v23) {
    operator delete(v23);
  }
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)v30);
  if (v6) {
    sub_123E4(v6);
  }
}

void sub_25068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  *(void *)(v6 - 96) = va;
  sub_28EDC((void ***)(v6 - 96));
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)va1);
  if (v5) {
    sub_123E4(v5);
  }

  _Unwind_Resume(a1);
}

double TUI::Evaluation::Variables::Modern::closureCapture@<D0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_250F0(a1, a2, 1, a3);
}

double sub_250F0@<D0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = a2;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;
  uint64_t v5 = (_OWORD *)(a4 + 8);
  if (a3)
  {
    uint64_t v7 = [*(id *)(a1 + 56) packageBuffer];
    if (TUIClosureNotNil(a2) && v7[47] > (unint64_t)a2 && v7[46] + 28 * a2) {
      TUI::Evaluation::Variables::Capture::create(*(void **)(a1 + 16), *(void **)(a1 + 56), &v10);
    }
    if (TUIClosureIsNil(a2))
    {
      long long v9 = *(TUI::Evaluation::Variables::Capture **)(a1 + 16);
      if (v9) {
        TUI::Evaluation::Variables::Capture::create(v9, &v10);
      }
      else {
        TUI::Evaluation::Variables::Capture::emptyClosed(&v10);
      }
      double result = *(double *)&v10;
      _OWORD *v5 = v10;
    }
  }
  return result;
}

void TUI::Evaluation::Variables::Modern::pushClosure(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 80))(&v5, a2, a3);
  uint64_t v4 = v7;
  v8[0] = v6;
  v8[1] = (TUI::Evaluation::Variables::Capture *)v7;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v8);
  if (v4) {
    sub_123E4(v4);
  }
  if (v7) {
    sub_123E4(v7);
  }
}

{
  std::__shared_weak_count *v4;
  uint64_t v5;
  TUI::Evaluation::Variables::Capture *v6;
  std::__shared_weak_count *v7;
  TUI::Evaluation::Variables::Capture *v8[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 104))(&v5, a2, a3);
  uint64_t v4 = v7;
  v8[0] = v6;
  v8[1] = (TUI::Evaluation::Variables::Capture *)v7;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v8);
  if (v4) {
    sub_123E4(v4);
  }
  if (v7) {
    sub_123E4(v7);
  }
}

{
  std::__shared_weak_count *v4;
  uint64_t v5;
  TUI::Evaluation::Variables::Capture *v6;
  std::__shared_weak_count *v7;
  TUI::Evaluation::Variables::Capture *v8[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 112))(&v5, a2, a3);
  uint64_t v4 = v7;
  v8[0] = v6;
  v8[1] = (TUI::Evaluation::Variables::Capture *)v7;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v8);
  if (v4) {
    sub_123E4(v4);
  }
  if (v7) {
    sub_123E4(v7);
  }
}

{
  std::__shared_weak_count *v4;
  uint64_t v5;
  TUI::Evaluation::Variables::Capture *v6;
  std::__shared_weak_count *v7;
  TUI::Evaluation::Variables::Capture *v8[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 88))(&v5, a2, a3);
  uint64_t v4 = v7;
  v8[0] = v6;
  v8[1] = (TUI::Evaluation::Variables::Capture *)v7;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v8);
  if (v4) {
    sub_123E4(v4);
  }
  if (v7) {
    sub_123E4(v7);
  }
}

{
  std::__shared_weak_count *v4;
  uint64_t v5;
  TUI::Evaluation::Variables::Capture *v6;
  std::__shared_weak_count *v7;
  TUI::Evaluation::Variables::Capture *v8[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 96))(&v5, a2, a3);
  uint64_t v4 = v7;
  v8[0] = v6;
  v8[1] = (TUI::Evaluation::Variables::Capture *)v7;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v8);
  if (v4) {
    sub_123E4(v4);
  }
  if (v7) {
    sub_123E4(v7);
  }
}

void sub_25248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (v12) {
    sub_123E4(v12);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_252F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (v12) {
    sub_123E4(v12);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_253A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (v12) {
    sub_123E4(v12);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_2544C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (v12) {
    sub_123E4(v12);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_254F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (v12) {
    sub_123E4(v12);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Variables::Modern::pushClosure(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(atomic_ullong **)(a2 + 8);
  v3[0] = *(TUI::Evaluation::Variables::Capture **)a2;
  v3[1] = (TUI::Evaluation::Variables::Capture *)v2;
  if (v2) {
    atomic_fetch_add_explicit(v2 + 1, 1uLL, memory_order_relaxed);
  }
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v3);
  if (v2)
  {
    sub_123E4((std::__shared_weak_count *)v2);
  }
}

void sub_25588(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_123E4(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, const TUI::Evaluation::Enumerator::State *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3);
}

uint64_t non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, const TUI::Evaluation::Enumerator::State *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3);
}

uint64_t *TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, id *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3);
}

uint64_t *non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, id *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3);
}

void TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = a1 + 920;
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 112))(v6);
  TUI::Evaluation::Variables::Scope::define(v5, a2, a3, (uint64_t)v6);
  if (v7) {
    sub_123E4(v7);
  }
}

{
  uint64_t v5;
  void v6[2];
  std::__shared_weak_count *v7;

  uint64_t v5 = a1 + 920;
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 112))(v6);
  TUI::Evaluation::Variables::Scope::define(v5, a2, a3, (uint64_t)v6);
  if (v7) {
    sub_123E4(v7);
  }
}

{
  uint64_t v5;
  void v6[2];
  std::__shared_weak_count *v7;

  uint64_t v5 = a1 + 920;
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 112))(v6);
  TUI::Evaluation::Variables::Scope::define(v5, a2, a3, (uint64_t)v6);
  if (v7) {
    sub_123E4(v7);
  }
}

void sub_25658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3)
{
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3);
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3);
}

void TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v6 = a1 + 920;
  long long v9 = *(_OWORD *)a3;
  uint64_t v10 = *(void *)(a3 + 16);
  sub_250F0(a1, a4, a5, (uint64_t)v7);
  TUI::Evaluation::Variables::Scope::define(v6, a2, &v9, (uint64_t)v7);
  if (v8) {
    sub_123E4(v8);
  }
}

{
  uint64_t v7;
  unsigned char v8[16];
  std::__shared_weak_count *v9;

  uint64_t v7 = a1 + 920;
  sub_250F0(a1, a4, a5, (uint64_t)v8);
  TUI::Evaluation::Variables::Scope::define(v7, a2, a3, (uint64_t)v8);
  if (v9) {
    sub_123E4(v9);
  }
}

void sub_256EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4, a5);
}

void sub_25798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_25828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_258D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3, a4);
}

uint64_t *non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3, a4);
}

uint64_t TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = [*(id *)(a1 + 56) packageBuffer];
  unsigned int v11 = *(unsigned __int16 *)(a2 + 10);
  if (!*(_WORD *)(a2 + 10)) {
    return 0;
  }
  uint64_t v12 = v10;
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  do
  {
    unint64_t v15 = v14 + *(unsigned int *)(a2 + 4);
    if (v12[43] > v15)
    {
      long long v16 = (unsigned __int16 *)(v12[42] + 4 * v15);
      if (v16)
      {
        unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *v16 | ((unint64_t)v16[1] << 16);
        TUI::Evaluation::Variables::Modern::globalsWithName(&v19, a1, v5, a3, a4);
        if ((void)v19)
        {
          sub_25FE4((uint64_t *)(a1 + 1824), &v19);
          v13 |= *(void *)(v19 + 72) | *(void *)(v19 + 80);
        }
        else
        {
          unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v16 | ((unint64_t)v16[1] << 16);
          long long v17 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v4);
          TUI::Evaluation::Context::reportError(a4, 1012, v17);
        }
        if (*((void *)&v19 + 1)) {
          sub_123E4(*((std::__shared_weak_count **)&v19 + 1));
        }
        unsigned int v11 = *(unsigned __int16 *)(a2 + 10);
      }
    }
    ++v14;
  }
  while (v14 < v11);
  return v13;
}

void sub_25A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::globalsWithName(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  unsigned int v41 = a2;
  uint64_t v10 = sub_270E0(a3, (unsigned __int16 *)&v41);
  if (v10)
  {
    uint64_t v12 = v10[3];
    unsigned int v11 = v10[4];
    if (v11) {
      atomic_fetch_add_explicit(v11 + 1, 1uLL, memory_order_relaxed);
    }
    *a5 = v12;
    a5[1] = v11;
  }
  else
  {
    uint64_t v13 = (unsigned int *)TUI::Package::Buffer::globalsWithName((uint64_t)[*(id *)(a1 + 56) packageBuffer], a2);
    if (v13)
    {
      uint64_t v35 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = 0;
      TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)v40);
      TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v40);
      long long v36 = *(_OWORD *)(a1 + 1768);
      long long v34 = *(_OWORD *)(a1 + 1784);
      *(_OWORD *)(a1 + 176sub_3BD4((uint64_t)this + 8) = 0u;
      *(_OWORD *)(a1 + 1784) = 0u;
      uint64_t v37 = *(void *)(a1 + 1800);
      *(void *)(a1 + 1800) = 0;
      long long v14 = *(_OWORD *)(a1 + 1824);
      *(_OWORD *)(a1 + 1824) = 0uLL;
      long long v38 = v14;
      uint64_t v15 = *(void *)(a1 + 1840);
      *(void *)(a1 + 1840) = 0;
      uint64_t v39 = v15;
      TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies(a1, (uint64_t)v13, (uint64_t)a3, a4);
      uint64_t v16 = *(void *)(a4 + 768);
      if (v16)
      {
        unsigned int v17 = v41;
        *(_DWORD *)long long v46 = v41;
        uint64_t v18 = sub_270E0((void *)(v16 + 48), v46);
        if (!v18)
        {
          uint64_t v43 = 0;
          uint64_t v44 = 0;
          uint64_t v45 = 0;
          LODWORD(v42) = *(_DWORD *)v46;
          uint64_t v18 = sub_271AC(v16 + 48, (unsigned __int16 *)&v42, (uint64_t)&v42);
        }
        ++v18[3];
        *(_DWORD *)(v16 + 16 * *(void *)(v16 + 3224) + 320sub_3BD4((uint64_t)this + 8) = v17;
        uint64_t v19 = mach_absolute_time();
        uint64_t v20 = *(void *)(v16 + 3224);
        *(void *)(v16 + 16 * v20 + 3216) = v19;
        *(void *)(v16 + 3224) = v20 + 1;
        uint64_t v21 = *(void *)(a4 + 768);
        *(_DWORD *)long long v46 = v41;
        uint64_t v22 = v21 + 48;
        uint64_t v23 = sub_270E0((void *)(v21 + 48), v46);
        if (!v23)
        {
          uint64_t v43 = 0;
          uint64_t v44 = 0;
          uint64_t v45 = 0;
          LODWORD(v42) = *(_DWORD *)v46;
          uint64_t v23 = sub_271AC(v22, (unsigned __int16 *)&v42, (uint64_t)&v42);
        }
        ++v23[4];
      }
      TUI::Evaluation::Context::evaluateGlobals(a4, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 4) << 32));
      uint64_t v24 = *(void *)(a4 + 768);
      if (v24)
      {
        uint64_t v25 = *(void *)(v24 + 3224) - 1;
        *(void *)(v24 + 3224) = v25;
        uint64_t v26 = v24 + 16 * v25;
        int v27 = *(_DWORD *)(v26 + 3208);
        unint64_t v28 = *(void *)(v26 + 3216);
        uint64_t v29 = mach_absolute_time();
        *(_DWORD *)long long v46 = v27;
        double v30 = (void *)(v24 + 48);
        uint64_t v31 = sub_270E0(v30, v46);
        if (!v31)
        {
          uint64_t v43 = 0;
          uint64_t v44 = 0;
          uint64_t v45 = 0;
          LODWORD(v42) = *(_DWORD *)v46;
          uint64_t v31 = sub_271AC((uint64_t)v30, (unsigned __int16 *)&v42, (uint64_t)&v42);
        }
        uint64_t v32 = v29 - v28;
        if (v28 >= v29) {
          uint64_t v32 = v28 - v29;
        }
        v31[5] += v32;
      }
      TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v40);
      *(_OWORD *)(a1 + 176sub_3BD4((uint64_t)this + 8) = v36;
      *(_OWORD *)(a1 + 1784) = v34;
      *(void *)(a1 + 1800) = v37;
      *(_OWORD *)(a1 + 1824) = v38;
      *(void *)(a1 + 1840) = v39;
      *(void *)(a1 + 16) = v35;
      TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v41);
      objc_claimAutoreleasedReturnValue();
      operator new();
    }
    unint64_t v33 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v41);
    TUI::Evaluation::Context::reportError(a4, 1012, v33);
  }
}

void sub_25EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void **sub_25FE4(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  double result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      sub_4484();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    long long v14 = (char *)sub_21C3C((uint64_t)result, v13);
    uint64_t v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)uint64_t v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    v18[2] = v15 + 16;
    sub_29180(a1, v18);
    long long v9 = (void *)a1[1];
    double result = sub_29308(v18);
  }
  else
  {
    *uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    long long v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_260EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_29308((void **)va);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::globalsWithName(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
}

void TUI::Evaluation::Variables::Modern::useGlobalsWithName(uint64_t *a1)
{
  (*(void (**)(long long *__return_ptr))(*a1 + 192))(&v9);
  if ((void)v9)
  {
    uint64_t v2 = (long long *)a1[228];
    uint64_t v3 = (long long *)a1[229];
    if (v2 != v3)
    {
      uint64_t v4 = 0;
      while (*(void *)&v2[v4] != (void)v9)
      {
        if (&v2[++v4] == v3) {
          goto LABEL_13;
        }
      }
      sub_298B4((uint64_t)&v10, &v2[v4 + 1], v3, (uint64_t)&v2[v4]);
      uint64_t v6 = v5;
      for (uint64_t i = a1[229]; i != v6; i -= 16)
      {
        uint64_t v8 = *(std::__shared_weak_count **)(i - 8);
        if (v8) {
          sub_123E4(v8);
        }
      }
      a1[229] = v6;
    }
LABEL_13:
    sub_25FE4(a1 + 228, &v9);
  }
  if (*((void *)&v9 + 1)) {
    sub_123E4(*((std::__shared_weak_count **)&v9 + 1));
  }
}

void sub_261F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_123E4(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Evaluation::Variables::Modern::resetGlobals(TUI::Evaluation::Variables::Modern *this)
{
  return sub_26228((uint64_t)this + 1824, *((void *)this + 228), *((long long **)this + 229));
}

uint64_t sub_26228(uint64_t a1, uint64_t a2, long long *a3)
{
  if ((long long *)a2 != a3)
  {
    sub_298B4((uint64_t)&v10, a3, *(long long **)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        uint64_t v8 = *(std::__shared_weak_count **)(v7 - 8);
        if (v8) {
          sub_123E4(v8);
        }
        v7 -= 16;
      }
      while (v7 != v6);
    }
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = v6;
  }
  return a2;
}

uint64_t TUI::Evaluation::Variables::Modern::globalsEnvironmentUseMask(TUI::Evaluation::Variables::Modern *this)
{
  uint64_t v1 = (uint64_t *)*((void *)this + 228);
  uint64_t v2 = (uint64_t *)*((void *)this + 229);
  if (v1 == v2) {
    return 0;
  }
  uint64_t v3 = 0;
  do
  {
    uint64_t v5 = *v1;
    uint64_t v4 = (std::__shared_weak_count *)v1[1];
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v6 = *(void *)(v5 + 80) | *(void *)(v5 + 72);
      sub_123E4(v4);
    }
    else
    {
      uint64_t v6 = *(void *)(v5 + 80) | *(void *)(v5 + 72);
    }
    v3 |= v6;
    v1 += 2;
  }
  while (v1 != v2);
  return v3;
}

void TUI::Evaluation::Variables::Modern::updateGlobalsWithEnvironment(TUI::Evaluation::Variables::Modern *this, TUIEnvironment *a2, TUI::Evaluation::Context *a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = *((void *)a3 + 96);
  if (v4) {
    *(void *)(v4 + 27880) = mach_absolute_time();
  }
  uint64_t v5 = TUIInstantiationLog();
  os_signpost_id_t v6 = os_signpost_id_generate(v5);

  uint64_t v7 = TUIInstantiationLog();
  uint64_t v8 = v7;
  os_signpost_id_t spid = v6;
  unint64_t v75 = v6 - 1;
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v8, OS_SIGNPOST_INTERVAL_BEGIN, v6, "Variables::Modern::updateGlobalsWithEnvironment", (const char *)&unk_243F7A, buf, 2u);
  }

  memset(v85, 0, sizeof(v85));
  int v86 = 1065353216;
  long long v9 = [*((id *)this + 7) packageBuffer];
  char v10 = v9;
  uint64_t v11 = v9[51];
  if (v11)
  {
    unint64_t v12 = v9[50];
    uint64_t v76 = (long long *)((char *)this + 1768);
    uint64_t v77 = (TUI::Evaluation::Variables::Modern *)((char *)this + 920);
    uint64_t v13 = 4 * v12;
    uint64_t v78 = v9;
    while (1)
    {
      if (v10[43] <= v12 || (uint64_t v14 = v10[42], !(v13 + v14)))
      {
        uint64_t v29 = TUIInstantiationLog();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        {
          id v31 = TUI::Evaluation::Context::feedId(*((id **)this + 6));
          *(_DWORD *)buf = 134218240;
          *(void *)&buf[4] = v31;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v12;
          _os_log_error_impl(&def_141F14, v29, OS_LOG_TYPE_ERROR, "[fid:%lu] couldn't find component name with index: %lu", buf, 0x16u);
        }

        goto LABEL_24;
      }
      uint64_t v15 = (unsigned __int16 *)(v14 + v13);
      int v16 = *v15;
      int v17 = v15[1];
      *(_WORD *)buf = *v15;
      *(_WORD *)&buf[2] = v17;
      uint64_t v18 = sub_270E0((void *)this + 231, (unsigned __int16 *)buf);
      if (v18) {
        break;
      }
LABEL_24:
      ++v12;
      v13 += 4;
      if (!--v11) {
        goto LABEL_61;
      }
    }
    uint64_t v20 = (uint64_t)v18[3];
    uint64_t v19 = v18[4];
    if (v19) {
      atomic_fetch_add_explicit(v19 + 1, 1uLL, memory_order_relaxed);
    }
    uint64_t v81 = (std::__shared_weak_count *)v19;
    uint64_t v21 = *(void *)(v20 + 80) | *(void *)(v20 + 72);
    if (*(_OWORD *)(v20 + 72) != 0)
    {
      id v22 = *(id *)(v20 + 64);
      unint64_t v23 = [(TUIEnvironment *)v79 differenceMaskWithEnvironment:v22];

      if ((v23 & v21) != 0)
      {
        unint64_t v24 = *(void *)(v20 + 80) & v23;
        unint64_t v25 = *(void *)(v20 + 72) & v23;
        int v26 = v25 != 0;
        uint64_t v27 = *(void *)(v20 + 16);
        if (v24) {
          BOOL v28 = 1;
        }
        else {
          BOOL v28 = v25 == 0;
        }
        if (v28)
        {
          long long v34 = *(unsigned int **)(v20 + 16);
        }
        else
        {
          long long v32 = *((_OWORD *)this + 114);
          *((_OWORD *)this + 114) = 0u;
          *(_OWORD *)buf = v32;
          uint64_t v33 = *((void *)this + 230);
          *((void *)this + 230) = 0;
          *(void *)&buf[16] = v33;
          long long v34 = (unsigned int *)v27;
          TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies((uint64_t)this, v27, (uint64_t)v85, (uint64_t)v80);
          long long v35 = *((_OWORD *)this + 114);
          *((_OWORD *)this + 114) = *(_OWORD *)buf;
          *(_OWORD *)buf = v35;
          uint64_t v36 = *((void *)this + 230);
          *((void *)this + 230) = *(void *)&buf[16];
          *(void *)&buf[16] = v36;
          int v26 = (v25 != 0) & ~TUI::Evaluation::Variables::Globals::equivalentTo(v20, (uint64_t *)buf);
          uint64_t v87 = (void **)buf;
          sub_28EDC(&v87);
        }
        if (v24) {
          BOOL v37 = 0;
        }
        else {
          BOOL v37 = v26 == 0;
        }
        if (v37)
        {
          double v30 = v81;
          char v10 = v78;
          goto LABEL_44;
        }
        uint64_t v68 = *((void *)this + 2);
        *((void *)this + 2) = 0;
        TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)buf);
        long long v83 = 0uLL;
        uint64_t v84 = 0;
        TUI::Evaluation::Variables::Scope::swap(v77, (TUI::Evaluation::Variables::Scope *)buf);
        long long v38 = v34;
        long long v69 = *v76;
        long long v67 = *(_OWORD *)((char *)this + 1784);
        *uint64_t v76 = 0u;
        *(_OWORD *)((char *)this + 1784) = 0u;
        uint64_t v73 = *((void *)this + 225);
        *((void *)this + 225) = 0;
        long long v39 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = v83;
        long long v83 = v39;
        uint64_t v40 = *((void *)this + 230);
        *((void *)this + 230) = v84;
        uint64_t v84 = v40;
        uint64_t v41 = *((void *)v80 + 96);
        char v10 = v78;
        if (v41)
        {
          *(_DWORD *)uint64_t v91 = v16 | (v17 << 16);
          uint64_t v42 = sub_270E0((void *)(v41 + 48), v91);
          if (!v42)
          {
            uint64_t v88 = 0;
            uint64_t v89 = 0;
            uint64_t v90 = 0;
            LODWORD(v87) = *(_DWORD *)v91;
            uint64_t v42 = sub_271AC(v41 + 48, (unsigned __int16 *)&v87, (uint64_t)&v87);
          }
          ++v42[3];
          *(_DWORD *)(v41 + 16 * *(void *)(v41 + 3224) + 320sub_3BD4((uint64_t)this + 8) = v16 | (v17 << 16);
          uint64_t v43 = mach_absolute_time();
          uint64_t v44 = *(void *)(v41 + 3224);
          *(void *)(v41 + 16 * v44 + 3216) = v43;
          *(void *)(v41 + 3224) = v44 + 1;
        }
        TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies((uint64_t)this, (uint64_t)v38, (uint64_t)v85, (uint64_t)v80);
        TUI::Evaluation::Context::evaluateGlobals((uint64_t)v80, *v38 | ((unint64_t)*((unsigned __int16 *)v38 + 4) << 32));
        uint64_t v45 = *((void *)v80 + 96);
        if (v45)
        {
          uint64_t v46 = *(void *)(v45 + 3224) - 1;
          *(void *)(v45 + 3224) = v46;
          uint64_t v47 = v45 + 16 * v46;
          int v48 = *(_DWORD *)(v47 + 3208);
          __p = *(char **)(v47 + 3216);
          uint64_t v49 = mach_absolute_time();
          *(_DWORD *)uint64_t v91 = v48;
          long long v50 = (void *)(v45 + 48);
          long long v51 = sub_270E0(v50, v91);
          if (!v51)
          {
            uint64_t v88 = 0;
            uint64_t v89 = 0;
            uint64_t v90 = 0;
            LODWORD(v87) = *(_DWORD *)v91;
            long long v51 = sub_271AC((uint64_t)v50, (unsigned __int16 *)&v87, (uint64_t)&v87);
          }
          uint64_t v52 = v49 - (void)__p;
          if ((unint64_t)__p >= v49) {
            uint64_t v52 = (uint64_t)&__p[-v49];
          }
          v51[5] += v52;
        }
        TUI::Evaluation::Variables::Scope::swap(v77, (TUI::Evaluation::Variables::Scope *)buf);
        __pa = (void *)*((void *)this + 221);
        *uint64_t v76 = v69;
        *(_OWORD *)((char *)this + 1784) = v67;
        long long v70 = (std::__shared_weak_count *)*((void *)this + 225);
        *((void *)this + 225) = v73;
        long long v53 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = v83;
        long long v83 = v53;
        uint64_t v54 = *((void *)this + 230);
        *((void *)this + 230) = v84;
        uint64_t v84 = v54;
        *((void *)this + 2) = v68;
        unsigned int v74 = TUI::Evaluation::Variables::Globals::equivalentTo((TUI::Evaluation::Variables::Globals *)v20, (unsigned __int16 **)buf);
        if ((v74 & 1) == 0)
        {
          uint64_t v57 = *((void *)v80 + 96);
          if (v57)
          {
            *(_DWORD *)uint64_t v91 = v16 | (v17 << 16);
            uint64_t v58 = v57 + 48;
            long long v59 = sub_270E0((void *)(v57 + 48), v91);
            if (!v59)
            {
              uint64_t v88 = 0;
              uint64_t v89 = 0;
              uint64_t v90 = 0;
              LODWORD(v87) = *(_DWORD *)v91;
              long long v59 = sub_271AC(v58, (unsigned __int16 *)&v87, (uint64_t)&v87);
            }
            ++v59[4];
          }
          *(id *)(v20 + 8);
          operator new();
        }
        uint64_t v87 = (void **)&v83;
        sub_28EDC(&v87);
        if (v70) {
          sub_123E4(v70);
        }
        if (__pa) {
          operator delete(__pa);
        }
        TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)buf);
        if (!v74)
        {
          double v30 = v81;
LABEL_48:
          if (v30) {
            sub_123E4(v30);
          }
          goto LABEL_24;
        }
      }
    }
    double v30 = v81;
LABEL_44:
    LOWORD(v87) = v16;
    WORD1(v87) = v17;
    *(void *)buf = &v87;
    long long v55 = sub_295F0((uint64_t)v85, (unsigned __int16 *)&v87, (uint64_t)&std::piecewise_construct, (_DWORD **)buf);
    if (v30) {
      atomic_fetch_add_explicit(&v30->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    long long v56 = (std::__shared_weak_count *)v55[4];
    v55[3] = v20;
    void v55[4] = v30;
    if (v56) {
      sub_123E4(v56);
    }
    goto LABEL_48;
  }
LABEL_61:
  sub_29920((uint64_t)this + 1848, (uint64_t)v85);
  long long v60 = TUIInstantiationLog();
  long long v61 = v60;
  if (v75 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v60))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v61, OS_SIGNPOST_INTERVAL_END, spid, "Variables::Modern::updateGlobalsWithEnvironment", (const char *)&unk_243F7A, buf, 2u);
  }

  uint64_t v62 = *((void *)v80 + 96);
  if (v62)
  {
    uint64_t v63 = *(void *)(v62 + 27880);
    uint64_t v64 = mach_absolute_time();
    uint64_t v65 = -(uint64_t)v63;
    if (v63 >= v64) {
      uint64_t v65 = ~v63;
    }
    *(void *)(v62 + 27840) += v65 + v64;
  }
  sub_28F7C((uint64_t)v85);
}

void sub_26B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,std::__shared_weak_count *a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char *a53,char a54)
{
  a53 = &a38;
  sub_28EDC((void ***)&a53);
  if ((void)a23) {
    sub_123E4((std::__shared_weak_count *)a23);
  }
  if (__p) {
    operator delete(__p);
  }
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)&a54);
  if (a34) {
    sub_123E4(a34);
  }
  sub_28F7C((uint64_t)&a42);

  _Unwind_Resume(a1);
}

void sub_26D2C(uint64_t a1, unsigned int a2, id *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3[4];
  if (objc_opt_respondsToSelector())
  {
    id v7 = v6;
    uint64_t v11 = 0;
    uint64_t v8 = [v7 tui_unwrapDynamicWithError:&v11];
    if (v11) {
      TUI::Evaluation::Context::reportError(*(void *)(v5 + 48), v11, v7);
    }
    TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v9, (const TUI::Evaluation::Enumerator::State *)a3);
    objc_storeStrong(&v10, v8);
    TUI::Evaluation::Variables::Scope::define(v5 + 920, a2, (const TUI::Evaluation::Enumerator::State *)v9);
    TUI::Evaluation::Enumerator::State::~State(v9);
  }
}

void sub_26E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::evaluateWithComponent(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v13 = a2;
  uint64_t v8 = a5;
  if (v13 && v8)
  {
    id v9 = *(id *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 1808);
    uint64_t v11 = *(std::__shared_weak_count **)(a1 + 1816);
    if (v11) {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, v13, a4, 1);
    TUI::Evaluation::Variables::Scope::pushScope((TUI::Evaluation::Variables::Scope *)(a1 + 920), 63);
    v8[2](v8);
    TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
    TUI::Evaluation::Variables::Modern::popComponent((TUI::Evaluation::Variables::Modern *)a1, 1);
    if (v11) {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(void *)(a1 + 180sub_3BD4((uint64_t)this + 8) = v10;
    unint64_t v12 = *(std::__shared_weak_count **)(a1 + 1816);
    *(void *)(a1 + 1816) = v11;
    if (v12) {
      sub_123E4(v12);
    }
    *(void *)(a1 + 16) = v9;
    if (v11) {
      sub_123E4(v11);
    }
  }
}

void sub_26F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v12) {
    sub_123E4(v12);
  }

  _Unwind_Resume(a1);
}

void *TUI::Evaluation::Variables::Modern::Snapshot::Snapshot(void *a1, uint64_t *a2, void **a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  *a1 = off_252098;
  a1[1] = v5;
  a1[2] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  sub_28D04(a1 + 3, *a3, a3[1], ((char *)a3[1] - (char *)*a3) >> 4);
  return a1;
}

void sub_26FF0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    sub_123E4(v3);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Variables::Modern::Snapshot::~Snapshot(TUI::Evaluation::Variables::Modern::Snapshot *this)
{
  *(void *)this = off_252098;
  uint64_t v3 = (void **)((char *)this + 24);
  sub_28EDC(&v3);
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v2) {
    sub_123E4(v2);
  }
}

{
  uint64_t vars8;

  TUI::Evaluation::Variables::Modern::Snapshot::~Snapshot(this);

  operator delete();
}

uint64_t sub_270A8(uint64_t a1, unsigned int a2)
{
  return sub_279BC(a1, a2);
}

uint64_t sub_270B0(uint64_t a1, unsigned int a2)
{
  return sub_27CB8(a1, a2);
}

uint64_t sub_270B8(uint64_t a1, unsigned int a2)
{
  return sub_27FBC(a1, a2);
}

uint64_t sub_270C0(uint64_t a1, unsigned int a2)
{
  return sub_28228(a1, a2);
}

uint64_t sub_270C8(uint64_t a1, unsigned int a2)
{
  return sub_28528(a1, a2);
}

uint64_t sub_270D0(uint64_t a1, unsigned int a2)
{
  return sub_28794(a1, a2);
}

uint64_t sub_270D8(uint64_t a1, unsigned int a2)
{
  return sub_28A00(a1, a2);
}

uint64_t **sub_270E0(void *a1, unsigned __int16 *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  int v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = (v3 << 16) | v4;
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = (v3 << 16) | v4;
    if (*(void *)&v2 <= v5) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = (*(void *)&v2 - 1) & v5;
  }
  uint64_t v8 = *(uint64_t ****)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  for (double result = *v8; result; double result = (uint64_t **)*result)
  {
    unint64_t v10 = (unint64_t)result[1];
    if (v10 == v5)
    {
      if (*((unsigned __int16 *)result + 9) == v4 && *((unsigned __int16 *)result + 8) == v3) {
        return result;
      }
    }
    else
    {
      if (v6.u32[0] > 1uLL)
      {
        if (v10 >= *(void *)&v2) {
          v10 %= *(void *)&v2;
        }
      }
      else
      {
        v10 &= *(void *)&v2 - 1;
      }
      if (v10 != v7) {
        return 0;
      }
    }
  }
  return result;
}

unsigned __int16 *sub_271AC(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  int v6 = *a2;
  unint64_t v7 = a2[1];
  unint64_t v8 = (v6 << 16) | v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = (v6 << 16) | v7;
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      unint64_t v12 = (unsigned __int16 *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = *((void *)v12 + 1);
          if (v13 == v8)
          {
            if (v12[9] == v7 && v12[8] == v6) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          unint64_t v12 = *(unsigned __int16 **)v12;
        }
        while (v12);
      }
    }
  }
  unint64_t v12 = (unsigned __int16 *)operator new(0x30uLL);
  *(void *)unint64_t v12 = 0;
  *((void *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *(_DWORD *)a3;
  *(_OWORD *)(v12 + 12) = *(_OWORD *)(a3 + 8);
  *((void *)v12 + 5) = *(void *)(a3 + 24);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_3ED8(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  id v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)unint64_t v12 = *v22;
LABEL_42:
    *id v22 = v12;
    goto LABEL_43;
  }
  *(void *)unint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*(void *)v12)
  {
    unint64_t v23 = *(void *)(*(void *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    id v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_273DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_273F0(uint64_t a1, void *a2, uint64_t a3, void *a4, void **a5, void *a6, uint64_t a7, uint64_t a8, int a9)
{
  id v16 = a2;
  id v17 = a6;
  *(void *)a1 = off_252150;
  id v18 = v16;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = v18;
  *(void *)(a1 + 16) = a3;
  uint64_t v19 = a4[1];
  *(void *)(a1 + 24) = *a4;
  *(void *)(a1 + 32) = v19;
  if (v19) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_28D04((void *)(a1 + 40), *a5, a5[1], ((char *)a5[1] - (char *)*a5) >> 4);
  id v20 = v17;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = a8;
  *(void *)(a1 + 80) = a7;
  *(_DWORD *)(a1 + 8sub_3BD4((uint64_t)this + 8) = a9;
  TUI::Evaluation::Variables::Scope::symbolUsage(*(TUI::Evaluation::Variables::Scope **)(a1 + 24), a1 + 96);
  uint64_t v21 = *(uint64_t **)(a1 + 40);
  for (uint64_t i = *(uint64_t **)(a1 + 48); v21 != i; v21 += 2)
  {
    uint64_t v24 = *v21;
    unint64_t v23 = (std::__shared_weak_count *)v21[1];
    if (v23) {
      atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    for (uint64_t j = 0; j != 32; j += 8)
      *(void *)(a1 + 96 + j) |= *(void *)(v24 + 96 + j);
    uint64_t v26 = 0;
    uint64_t v27 = v24 + 128;
    do
    {
      *(void *)(a1 + 128 + v26) |= *(void *)(v27 + v26);
      v26 += 8;
    }
    while (v26 != 256);
    if (v23) {
      sub_123E4(v23);
    }
  }

  return a1;
}

void sub_27574(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  sub_28EDC((void ***)va);
  int v6 = *(std::__shared_weak_count **)(v2 + 32);
  if (v6) {
    sub_123E4(v6);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_275B8()
{
  return 0;
}

uint64_t sub_275C4(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 8))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_27650(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_276DC(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_27768(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_277F4(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_27880(uint64_t a1, unint64_t a2)
{
  if ((*(void *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(void *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 48))(*(void *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

void sub_27910(uint64_t a1)
{
  sub_27948(a1);

  operator delete();
}

uint64_t sub_27948(uint64_t a1)
{
  *(void *)a1 = off_252150;

  unint64_t v4 = (void **)(a1 + 40);
  sub_28EDC(&v4);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_123E4(v2);
  }

  return a1;
}

uint64_t sub_279BC(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t result = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return result;
  }
  uint64_t v7 = *(void *)(a1 + 1776);
  uint64_t v8 = *(void *)(a1 + 1768);
  while (v7 != v8)
  {
    uint8x8_t v10 = *(TUI::Evaluation::Variables::Capture **)(v7 - 16);
    v7 -= 16;
    unint64_t v9 = v10;
    if (v10)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t result = (**(uint64_t (***)(TUI::Evaluation::Variables::Capture *, unint64_t))v9)(v9, v2);
      if (v11 != -1) {
        return result;
      }
      if (!*((void *)v9 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v9, 0) & 1) != 0) {
        break;
      }
      uint64_t v8 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    uint64_t v15 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) != v15)
    {
      while (v15 != *(void *)(a1 + 1824))
      {
        id v16 = *(uint64_t (****)(void, uint64_t))(v15 - 16);
        v15 -= 16;
        uint64_t result = (**v16)(v16, v4);
        if (v17 != -1) {
          return result;
        }
      }
    }
LABEL_19:
    uint64_t v18 = *(void *)(a1 + 1792);
    if (!v18) {
      return TUI::Evaluation::Variables::Scope::lookup(a1 + 72, v4);
    }
    uint64_t result = sub_27B70(v18, v4);
    if (v19 == -1) {
      return TUI::Evaluation::Variables::Scope::lookup(a1 + 72, v4);
    }
    return result;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (*(void *)(a1 + 24) != v13 && *(void *)(v13 - 120) == v12)
  {
    sub_27C20((void *)(a1 + 936), v4, *(void *)(v13 - 112), *(void *)(v13 - 104));
    if (v20 != -1) {
      return a1 + 928;
    }
  }
  uint64_t result = (***(uint64_t (****)(void, uint64_t))(a1 + 1808))(*(void *)(a1 + 1808), v4);
  if (v14 == -1) {
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_27B70(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (***(uint64_t (****)(void, void))(a1 + 8))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(uint64_t (****)(void, uint64_t))(v6 - 16);
        v6 -= 16;
        uint64_t result = (**v7)(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

void *sub_27C20(void *a1, int a2, unint64_t a3, unint64_t a4)
{
  int v13 = a2;
  if (a3 >= a4) {
    return 0;
  }
  uint64_t v6 = a1;
  uint64_t v7 = sub_270E0(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; uint64_t i = *(uint64_t **)(*v6 + 72 * (void)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4) {
    return 0;
  }
  return v6;
}

uint64_t sub_27CB8(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 8))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_27F24((void *)(a1 + 1048), v4, *(void *)(v14 - 96), *(void *)(v14 - 88));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 8))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_27E74(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 8))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_27E74(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 8))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 8))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

void *sub_27F24(void *a1, int a2, unint64_t a3, unint64_t a4)
{
  int v13 = a2;
  if (a3 >= a4) {
    return 0;
  }
  uint64_t v6 = a1;
  uint64_t v7 = sub_270E0(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; uint64_t i = *(uint64_t **)(*v6 + 48 * (void)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4) {
    return 0;
  }
  return v6;
}

uint64_t sub_27FBC(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 16))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_27F24((void *)(a1 + 1160), v4, *(void *)(v14 - 80), *(void *)(v14 - 72));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 16))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_28178(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 16))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_28178(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 16))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_28228(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 24))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_28494((void *)(a1 + 1272), v4, *(void *)(v14 - 64), *(void *)(v14 - 56));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 24))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_283E4(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 24))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_283E4(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 24))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

void *sub_28494(void *a1, int a2, unint64_t a3, unint64_t a4)
{
  int v13 = a2;
  if (a3 >= a4) {
    return 0;
  }
  uint64_t v6 = a1;
  uint64_t v7 = sub_270E0(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; uint64_t i = *(uint64_t **)(*v6 + ((void)i << 6) + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4) {
    return 0;
  }
  return v6;
}

uint64_t sub_28528(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 32))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_27F24((void *)(a1 + 1384), v4, *(void *)(v14 - 48), *(void *)(v14 - 40));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 32))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_286E4(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 32))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_286E4(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 32))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_28794(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 40))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_27F24((void *)(a1 + 1496), v4, *(void *)(v14 - 32), *(void *)(v14 - 24));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 40))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_28950(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 40))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_28950(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 40))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_28A00(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1) {
    return v5;
  }
  uint64_t v8 = *(void *)(a1 + 1776);
  uint64_t v9 = *(void *)(a1 + 1768);
  while (v8 != v9)
  {
    uint64_t v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    uint8x8_t v10 = v11;
    if (v11)
    {
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v4;
      uint64_t v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(void *)v10 + 48))(v10, v2);
      if (v12 != -1) {
        return v5;
      }
      if (!*((void *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 1768);
    }
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v14 && *(void *)(v14 - 120) == v13)
    {
      sub_28C6C((void *)(a1 + 1608), v4, *(void *)(v14 - 16), *(void *)(v14 - 8));
      if (v20 != -1) {
        return a1 + 928;
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 1808) + 48))(*(void *)(a1 + 1808), v4);
    if (v15 == -1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 1832);
    if (*(void *)(a1 + 1824) == v16)
    {
LABEL_18:
      uint64_t v19 = *(void *)(a1 + 1792);
      if (v19) {
        return sub_28BBC(v19, v4);
      }
      return v5;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 48))(v17, v4);
      if (v18 != -1) {
        break;
      }
      if (v16 == *(void *)(a1 + 1824)) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

uint64_t sub_28BBC(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8), a2);
  if (v5 == -1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 24) != v6)
    {
      do
      {
        uint64_t v7 = *(void *)(v6 - 16);
        v6 -= 16;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 48))(v7, v3);
      }
      while (v8 == -1 && v6 != *(void *)(a1 + 24));
    }
  }
  return result;
}

void *sub_28C6C(void *a1, int a2, unint64_t a3, unint64_t a4)
{
  int v13 = a2;
  if (a3 >= a4) {
    return 0;
  }
  uint64_t v6 = a1;
  uint64_t v7 = sub_270E0(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; uint64_t i = *(uint64_t **)(*v6 + 56 * (void)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4) {
    return 0;
  }
  return v6;
}

void *sub_28D04(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_28D8C(result, a4);
    uint64_t result = sub_28DD0((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_28D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + sub_3BD4((uint64_t)this + 8) = v10;
  sub_28EDC(&a9);
  _Unwind_Resume(a1);
}

char *sub_28D8C(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_4484();
  }
  uint64_t result = (char *)sub_21C3C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *sub_28DD0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_28E60((uint64_t)v7);
  return v4;
}

uint64_t sub_28E60(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_28E98(a1);
  }
  return a1;
}

void sub_28E98(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 - 8);
    if (v3) {
      sub_123E4(v3);
    }
    v1 -= 16;
  }
}

void sub_28EDC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_28F30((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_28F30(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      sub_123E4(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_28F7C(uint64_t a1)
{
  sub_28FB8(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_28FB8(int a1, void *__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void *)*v2;
      uint64_t v4 = (std::__shared_weak_count *)v2[4];
      if (v4) {
        sub_123E4(v4);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_29000(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_29068(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_190E18(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_29084(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_290BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_290EC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL sub_29130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

uint64_t sub_29180(uint64_t *a1, void *a2)
{
  uint64_t result = sub_291F8((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_291F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_2928C((uint64_t)v12);
  return v10;
}

uint64_t sub_2928C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_292C4(a1);
  }
  return a1;
}

void sub_292C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3) {
      sub_123E4(v3);
    }
    v1 += 16;
  }
}

void **sub_29308(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_2933C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      sub_123E4(v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

void sub_29390(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_293F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_190E3C(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_29414(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_2944C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  return result;
}

uint64_t sub_2947C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void sub_294C0(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_29528(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_190E60(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_29544(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_2957C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  return result;
}

uint64_t sub_295AC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void *sub_295F0(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  int v7 = *a2;
  unint64_t v8 = a2[1];
  unint64_t v9 = (v7 << 16) | v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = (v7 << 16) | v8;
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
    uint64_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      char v13 = *v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (*((unsigned __int16 *)v13 + 9) == v8 && *((unsigned __int16 *)v13 + 8) == v7) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          char v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  uint64_t v16 = (void *)(a1 + 16);
  char v13 = operator new(0x28uLL);
  *char v13 = 0;
  v13[1] = v9;
  *((_DWORD *)v13 + 4) = **a4;
  v13[3] = 0;
  v13[4] = 0;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_3ED8(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *char v13 = *v24;
LABEL_42:
    void *v24 = v13;
    goto LABEL_43;
  }
  *char v13 = *v16;
  void *v16 = v13;
  *(void *)(v23 + 8 * v4) = v16;
  if (*v13)
  {
    unint64_t v25 = *(void *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v13;
}

void sub_2983C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_29858(v11, v10);
  _Unwind_Resume(a1);
}

void sub_29858(uint64_t a1, void *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = (std::__shared_weak_count *)__p[4];
    if (v3) {
      sub_123E4(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

long long *sub_298B4(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      long long v7 = *v5;
      *(void *)uint64_t v5 = 0;
      *((void *)v5 + 1) = 0;
      unint64_t v8 = *(std::__shared_weak_count **)(a4 + 8);
      *(_OWORD *)a4 = v7;
      if (v8) {
        sub_123E4(v8);
      }
      ++v5;
      a4 += 16;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void sub_29920(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  uint64_t v5 = *(void **)a2;
  *(void *)a2 = 0;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  long long v7 = *(void **)a2;
  *(void *)a2 = v4;
  if (v7) {
    operator delete(v7);
  }
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + sub_3BD4((uint64_t)this + 8) = v9;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v12;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v11;
  int v13 = *(_DWORD *)(a1 + 32);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = v13;
  if (*(void *)(a1 + 24))
  {
    unint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = *(void *)(*(void *)(a1 + 16) + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v15 >= v14) {
        v15 %= v14;
      }
    }
    else
    {
      v15 &= v14 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v15) = a1 + 16;
  }
  if (v11)
  {
    unint64_t v16 = *(void *)(a2 + 8);
    unint64_t v17 = *(void *)(*(void *)(a2 + 16) + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v17 >= v16) {
        v17 %= v16;
      }
    }
    else
    {
      v17 &= v16 - 1;
    }
    *(void *)(*(void *)a2 + 8 * v17) = a2 + 16;
  }
}

void *sub_29A30(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x222222222222223) {
    sub_3EA4();
  }
  return operator new(120 * a2);
}

void sub_29E34(id *a1)
{
  uint64_t v2 = objc_opt_new();
  [a1[4] computedNaturalSize];
  memset(&v10, 0, sizeof(v10));
  CGAffineTransformMakeTranslation(&v10, v3 * 0.5, v4 * 0.5);
  id v5 = a1[4];
  id v6 = a1[5];
  CGAffineTransform v9 = v10;
  [v5 appendChildRenderModelCompatibleWithKind:4 context:v6 transform:&v9 toModels:v2];
  long long v7 = [a1[5] renderModelConvertModels:v2 toKind:4];
  uint64_t v8 = [[TUIRenderModelSubviews alloc] initWithSubmodels:v7];
  [a1[6] setObject:v8 forKeyedSubscript:@"default"];
}

id sub_29F14(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateWithValueIfChanged:&off_266410];
}

uint64_t sub_2AD24(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_2AD38(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t sub_2AD58(uint64_t result, float a2)
{
  float *v3 = a2;
  void *v2 = result;
  return result;
}

void sub_2BF9C(id a1)
{
  CFStringRef v4 = @"param";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  double v3 = (void *)qword_2DF238;
  qword_2DF238 = v2;
}

int64_t sub_2CBD8(id a1, TUIRenderModelTransform *a2, TUIRenderModelTransform *a3)
{
  CFStringRef v4 = a3;
  int64_t v5 = [(TUIRenderModelTransform *)a2 zIndex];
  int64_t v6 = [(TUIRenderModelTransform *)v4 zIndex];

  if (v5 < v6) {
    return -1;
  }
  else {
    return v5 > v6;
  }
}

void sub_2CC30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 identifier];
  [v2 setObject:v3 forKeyedSubscript:v4];
}

void sub_2D968(uint64_t a1)
{
}

void sub_2D974(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) subviews];
  if ([v2 count])
  {
    id v3 = [v2 lastObject];
    id v4 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v3);

    if (v4
      && ([v4 layoutAttributes],
          int64_t v5 = objc_claimAutoreleasedReturnValue(),
          id v6 = [v5 zIndex],
          uint64_t v7 = *(void *)(a1 + 64),
          v5,
          (uint64_t)v6 <= v7))
    {
      [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      BOOL v19 = v2;
      id v8 = v2;
      id v9 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v21;
LABEL_6:
        uint64_t v12 = 0;
        while (1)
        {
          int v13 = v4;
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v8);
          }
          unint64_t v14 = *(void **)(*((void *)&v20 + 1) + 8 * v12);
          id v4 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v14);

          if (v4 && v4 != *(void **)(a1 + 40))
          {
            unint64_t v15 = [v4 layoutAttributes];
            id v16 = [v15 zIndex];

            id v17 = *(id *)(a1 + 64);
            if ((uint64_t)v17 < (uint64_t)v16)
            {
              [*(id *)(a1 + 32) insertSubview:*(void *)(a1 + 40) belowSubview:v14];
LABEL_20:

              goto LABEL_21;
            }
            if (v17 == v16)
            {
              [*(id *)(a1 + 32) insertSubview:*(void *)(a1 + 40) aboveSubview:v4];
              goto LABEL_20;
            }
          }
          if (v10 == (id)++v12)
          {
            id v10 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
            if (v10) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
LABEL_21:
      uint64_t v2 = v19;
    }
  }
  else
  {
    [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
  }
  float v18 = [*(id *)(a1 + 48) tui_hostingView];
  [v18 addSubview:*(void *)(a1 + 40)];

  [*(id *)(a1 + 40) viewWillDisplay];
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

int64_t sub_2DBC0(id a1, UIView *a2, UIView *a3)
{
  id v4 = a3;
  uint64_t v5 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, a2);
  uint64_t v6 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v4);

  if (v5 | v6)
  {
    if (v5) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = v6 == 0;
    }
    if (v7)
    {
      if (v5) {
        BOOL v8 = v6 == 0;
      }
      else {
        BOOL v8 = 0;
      }
      if (v8)
      {
        int64_t v14 = 1;
      }
      else
      {
        id v9 = [(id)v5 layoutAttributes];
        id v10 = [v9 zIndex];

        uint64_t v11 = [(id)v6 layoutAttributes];
        id v12 = [v11 zIndex];

        uint64_t v13 = -1;
        if ((uint64_t)v10 >= (uint64_t)v12) {
          uint64_t v13 = 1;
        }
        if (v10 == v12) {
          int64_t v14 = 0;
        }
        else {
          int64_t v14 = v13;
        }
      }
    }
    else
    {
      int64_t v14 = -1;
    }
  }
  else
  {
    int64_t v14 = 0;
  }

  return v14;
}

void sub_2DCB8(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = [*(id *)(a1 + 32) allValues];
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) viewDidEndDisplay];
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_2EDD4(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF248;
  qword_2DF248 = v2;
}

void sub_2F56C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_2F5B0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  long long v8 = (id *)(a1 + 80);
  id v57 = a5;
  id v55 = a4;
  id v54 = a3;
  id WeakRetained = objc_loadWeakRetained(v8);
  id v10 = [WeakRetained menuContainer];
  uint64_t v11 = [v10 menuModel];
  id v12 = objc_loadWeakRetained(v8);
  id v13 = [v12 menuIsPrimary];
  uint64_t v14 = *(void *)(a1 + 32);
  id v15 = objc_loadWeakRetained((id *)(a1 + 88));
  uint64_t v58 = [v11 menuWithIsPrimary:v13 actionObject:v14 actionDelegate:v15];

  id v56 = objc_loadWeakRetained(v8);
  long long v38 = [v56 stateButtonAttributesMap];
  uint64_t v48 = *(void *)(a1 + 48);
  uint64_t v49 = *(void *)(a1 + 40);
  id v53 = objc_loadWeakRetained(v8);
  uint64_t v46 = [v53 linkEntities];
  id v52 = objc_loadWeakRetained(v8);
  id v43 = [v52 buttonType];
  id v51 = objc_loadWeakRetained(v8);
  id v41 = [v51 buttonRole];
  id v50 = objc_loadWeakRetained(v8);
  id v40 = [v50 userInterfaceStyle];
  id v47 = objc_loadWeakRetained(v8);
  unsigned __int8 v39 = [v47 enabled];
  id v45 = objc_loadWeakRetained(v8);
  [v45 pressedScale];
  double v17 = v16;
  id v44 = objc_loadWeakRetained(v8);
  [v44 touchInsets];
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  id v42 = objc_loadWeakRetained(v8);
  uint64_t v26 = [v42 identifier];
  uint64_t v27 = *(void *)(a1 + 56);
  id v28 = objc_loadWeakRetained(v8);
  uint64_t v29 = [v28 pointer];
  id v30 = objc_loadWeakRetained(v8);
  id v31 = [v30 focusStyle];
  id v32 = objc_loadWeakRetained(v8);
  LOWORD(v37) = 0;
  LOBYTE(v36) = [v32 menuIsPrimary];
  LOBYTE(v35) = v39;
  +[TUIControlView renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:](TUIControlView, "renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:", v38, v54, v55, v49, v48, v46, v17, v19, v21, v23, v25, v43, v41, v40, v35,
    v26,
    v27,
    v29,
    v31,
    v58,
    v36,
    *(void *)(a1 + 64),
    *(void *)(a1 + 72),
  uint64_t v33 = v37);

  [v33 setAnimationGroups:v57];

  return v33;
}

id TUISignpostDefault()
{
  if (qword_2DF260 != -1) {
    dispatch_once(&qword_2DF260, &stru_2524A8);
  }
  uint64_t v0 = (void *)qword_2DF258;

  return v0;
}

void sub_2F94C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "TemplateUI");
  uint64_t v2 = (void *)qword_2DF258;
  qword_2DF258 = (uint64_t)v1;
}

id TUISignpostFeedViewController()
{
  if (qword_2DF270 != -1) {
    dispatch_once(&qword_2DF270, &stru_2524C8);
  }
  uint64_t v0 = (void *)qword_2DF268;

  return v0;
}

void sub_2F9E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "TemplateUI.FeedViewController");
  uint64_t v2 = (void *)qword_2DF268;
  qword_2DF268 = (uint64_t)v1;
}

void sub_2FAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2FCB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2FEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2FFF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_30100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_301D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_30354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_303E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_30440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_308B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_30AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_30CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_30ED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_31120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_31408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_314E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_31574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_31634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *TUI::Evaluation::Enumerator::Base::Base(void *this)
{
  *this = off_2524F8;
  return this;
}

void TUI::Evaluation::Enumerator::Each::~Each(TUI::Evaluation::Enumerator::Each *this)
{
}

uint64_t TUI::Evaluation::Enumerator::Each::Each(uint64_t result, int a2, int a3, int a4)
{
  *(void *)uint64_t result = off_252530;
  *(_DWORD *)(result + sub_3BD4((uint64_t)this + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  *(_DWORD *)(result + 16) = a4;
  return result;
}

{
  *(void *)uint64_t result = off_252530;
  *(_DWORD *)(result + sub_3BD4((uint64_t)this + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  *(_DWORD *)(result + 16) = a4;
  return result;
}

id TUI::Evaluation::Enumerator::Each::object(TUI::Evaluation::Enumerator::Each *this, TUI::Symbol::Tab **a2)
{
  TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*((unsigned int *)this + 4), v5);
  uint64_t v3 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v5, a2);

  return v3;
}

void sub_320F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Each::evaluate(Entry *a1, TUI::Evaluation::Context *a2, void *a3)
{
  uint64_t v5 = a3;
  if (v5)
  {
    TUI::Evaluation::Context::beginScope(a2);
    Entry v6 = a1[2];
    Entry v7 = a1[3];
    TUI::Evaluation::Enumerator::State::State((uint64_t)v9, v6, v7);
    v10[0] = TUI::Evaluation::Context::pushBinding((uint64_t)a2);
    v10[1] = v8;
    TUI::Evaluation::Enumerator::State::~State(v9);
    v5[2](v5, v10);
    TUI::Evaluation::Context::endScope(a2);
  }
}

void sub_32194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Each::enumerate(uint64_t a1, TUI::Evaluation::Context *a2, void *a3)
{
  uint64_t v5 = a3;
  if (v5 && TUIValueNotNil(*(_DWORD *)(a1 + 16)))
  {
    TUI::Evaluation::Context::beginScope(a2);
    Entry v6 = *(Entry *)(a1 + 8);
    Entry v7 = *(Entry *)(a1 + 12);
    TUI::Evaluation::Enumerator::State::State((uint64_t)v60, v6, v7);
    uint64_t v8 = TUI::Evaluation::Context::pushBinding((uint64_t)a2);
    uint64_t v46 = v9;
    uint64_t v10 = v8;
    TUI::Evaluation::Enumerator::State::~State(v60);
    TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 16), v59);
    id v45 = a2;
    TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v59, (TUI::Symbol::Tab **)a2);
    id v42 = (id)objc_claimAutoreleasedReturnValue();

    if (*(__int16 *)(a1 + 10) == -1
      || *(__int16 *)(a1 + 8) == -1
      || (objc_opt_respondsToSelector() & 1) == 0
      || (objc_opt_respondsToSelector() & 1) == 0)
    {
      if (*(__int16 *)(a1 + 14) == -1 || *(__int16 *)(a1 + 12) == -1) {
        goto LABEL_27;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v23 = v42;
        id v24 = [v23 count];
        long long v53 = 0u;
        long long v54 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        id v25 = v23;
        id obja = v25;
        id v26 = [v25 countByEnumeratingWithState:&v51 objects:v62 count:16];
        if (v26)
        {
          uint64_t v27 = 0;
          uint64_t v28 = *(void *)v52;
          do
          {
            for (uint64_t i = 0; i != v26; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v52 != v28) {
                objc_enumerationMutation(obja);
              }
              id v30 = *(void **)(*((void *)&v51 + 1) + 8 * i);
              uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, v46);
              *(void *)(v31 + 16) = (char *)i + v27;
              objc_storeStrong((id *)(v31 + 32), v30);
              *(unsigned char *)(v31 + sub_3BD4((uint64_t)this + 8) = ((char *)i + v27 == 0) | (2 * ((char *)i + 1 - (void)v24 + v27 == 0)) | *(unsigned char *)(v31 + 8) & 0xFC;
              TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v45, (uint64_t)i + v27, v5);
            }
            id v25 = obja;
            id v26 = [obja countByEnumeratingWithState:&v51 objects:v62 count:16];
            v27 += (uint64_t)i;
          }
          while (v26);
        }

        uint64_t v11 = obja;
      }
      else
      {
        if (*(__int16 *)(a1 + 14) == -1 || *(__int16 *)(a1 + 12) == -1) {
          goto LABEL_27;
        }
        if ((objc_opt_respondsToSelector() & 1) == 0)
        {
          if (*(__int16 *)(a1 + 14) != -1 && *(__int16 *)(a1 + 12) != -1)
          {
            if (v42)
            {
              long long v38 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicProviding, v42);
              BOOL v39 = v38 == 0;

              if (v39)
              {
                uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, v46);
                objc_storeStrong((id *)(v40 + 32), v42);
                v5[2](v5);
              }
            }
          }
          goto LABEL_27;
        }
        long long v49 = 0u;
        long long v50 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        uint64_t v11 = [v42 objectEnumerator];
        id v32 = [v11 countByEnumeratingWithState:&v47 objects:v61 count:16];
        if (v32)
        {
          uint64_t v33 = 0;
          uint64_t v34 = *(void *)v48;
          do
          {
            for (uint64_t j = 0; j != v32; uint64_t j = (char *)j + 1)
            {
              if (*(void *)v48 != v34) {
                objc_enumerationMutation(v11);
              }
              uint64_t v36 = *(void **)(*((void *)&v47 + 1) + 8 * (void)j);
              uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, v46);
              objc_storeStrong((id *)(v37 + 32), v36);
              TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v45, (uint64_t)j + v33, v5);
            }
            id v32 = [v11 countByEnumeratingWithState:&v47 objects:v61 count:16];
            v33 += (uint64_t)j;
          }
          while (v32);
        }
      }
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
      long long v55 = 0u;
      long long v56 = 0u;
      uint64_t v11 = [v42 keyEnumerator];
      obuint64_t j = v11;
      id v12 = [v11 countByEnumeratingWithState:&v55 objects:v63 count:16];
      if (v12)
      {
        uint64_t v41 = *(void *)v56;
        do
        {
          for (k = 0; k != v12; k = (char *)k + 1)
          {
            if (*(void *)v56 != v41) {
              objc_enumerationMutation(v11);
            }
            uint64_t v14 = *(void **)(*((void *)&v55 + 1) + 8 * (void)k);
            id v15 = [v42 objectForKey:v14];
            uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, v46);
            id v17 = v14;
            id v18 = v15;
            double v19 = v5;
            double v20 = *(void **)(v16 + 24);
            *(void *)(v16 + 24) = v17;
            id v21 = v17;

            uint64_t v5 = v19;
            double v22 = *(void **)(v16 + 32);
            *(void *)(v16 + 32) = v18;

            v19[2](v19);
            uint64_t v11 = obj;
          }
          id v12 = [obj countByEnumeratingWithState:&v55 objects:v63 count:16];
        }
        while (v12);
      }
    }

LABEL_27:
    TUI::Evaluation::Context::endScope(v45);
  }
}

void sub_32744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::~Assign(TUI::Evaluation::Enumerator::Assign *this)
{
}

uint64_t TUI::Evaluation::Enumerator::Assign::Assign(uint64_t result, int a2, int a3)
{
  *(void *)uint64_t result = off_252568;
  *(_DWORD *)(result + sub_3BD4((uint64_t)this + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  return result;
}

{
  *(void *)uint64_t result = off_252568;
  *(_DWORD *)(result + sub_3BD4((uint64_t)this + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  return result;
}

id TUI::Evaluation::Enumerator::Assign::object(TUI::Evaluation::Enumerator::Assign *this, TUI::Symbol::Tab **a2)
{
  TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*((unsigned int *)this + 3), v5);
  uint64_t v3 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v5, a2);

  return v3;
}

void sub_328DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::evaluate(Entry *a1, TUI::Evaluation::Context *a2, void *a3)
{
  uint64_t v5 = a3;
  if (v5)
  {
    TUI::Evaluation::Context::beginScope(a2);
    Entry v6 = a1[2];
    Entry v7 = (Entry)-65536;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v9, v7, v6);
    v10[0] = TUI::Evaluation::Context::pushBinding((uint64_t)a2);
    v10[1] = v8;
    TUI::Evaluation::Enumerator::State::~State(v9);
    v5[2](v5, v10);
    TUI::Evaluation::Context::endScope(a2);
  }
}

void sub_32984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::enumerate(uint64_t a1, TUI::Symbol::Tab **a2, void *a3)
{
  uint64_t v5 = a3;
  if (v5 && TUIValueNotNil(*(_DWORD *)(a1 + 12)))
  {
    TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 12), v14);
    Entry v6 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v14, a2);

    if (v6 && *(__int16 *)(a1 + 10) != -1 && *(__int16 *)(a1 + 8) != -1)
    {
      TUI::Evaluation::Context::beginScope((TUI::Evaluation::Context *)a2);
      Entry v7 = *(Entry *)(a1 + 8);
      Entry v8 = (Entry)-65536;
      TUI::Evaluation::Enumerator::State::State((uint64_t)v13, v8, v7);
      uint64_t v9 = TUI::Evaluation::Context::pushBinding((uint64_t)a2);
      uint64_t v11 = v10;
      TUI::Evaluation::Enumerator::State::~State(v13);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, v11);
      objc_storeStrong((id *)(v12 + 32), v6);
      v5[2](v5);
      TUI::Evaluation::Context::endScope((TUI::Evaluation::Context *)a2);
    }
  }
}

void sub_32AD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  TUI::Evaluation::Enumerator::State::~State((id *)va);

  _Unwind_Resume(a1);
}

void sub_32C5C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) queryGenerationToken];
  uint64_t v3 = *(void *)(a1 + 32);
  CFStringRef v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
}

uint64_t sub_32E88(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) setQueryGenerationFromToken:*(void *)(*(void *)(a1 + 32) + 16) error:0];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) executeFetchRequest:*(void *)(*(void *)(a1 + 32) + 48) error:0];
  uint64_t v3 = *(void *)(a1 + 32);
  CFStringRef v4 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = v2;

  uint64_t v5 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v5();
}

uint64_t sub_32F00(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(*(void *)(a1 + 32) + 56));
}

void sub_331E0(uint64_t a1, void *a2)
{
  id v10 = a2;
  if (!*(void *)(a1 + 32)
    || (unint64_t v3 = *(void *)(a1 + 48) + *(void *)(a1 + 40), v3 > (unint64_t)[v10 count]))
  {
    Entry v6 = NSStringFromRange(*(NSRange *)(a1 + 40));
    Entry v7 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v10 count]);
    Entry v8 = +[NSString stringWithFormat:@"%@ is out-of-range with %@ fetched objects", v6, v7];
    id v9 = +[NSException exceptionWithName:@"OutOfRange" reason:v8 userInfo:0];

    objc_exception_throw(v9);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = [v10 subarrayWithRange:*(void *)(a1 + 40), *(void *)(a1 + 48)];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
}

void sub_333D4(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 count];
  if (!*(void *)(a1 + 40) || [*(id *)(a1 + 32) lastIndex] >= v3)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    Entry v7 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v10 count]);
    Entry v8 = +[NSString stringWithFormat:@"%@ is out-of-range with %@ fetched objects", v6, v7];
    id v9 = +[NSException exceptionWithName:@"OutOfRange" reason:v8 userInfo:0];

    objc_exception_throw(v9);
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = [v10 objectsAtIndexes:*(void *)(a1 + 32)];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
}

void sub_33604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3361C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_3362C(uint64_t a1)
{
}

void sub_33634(void *a1)
{
  [*(id *)(a1[4] + 32) performFetch:0];
  uint64_t v2 = [_TUICoreDataGeneration alloc];
  uint64_t v3 = a1[5];
  uint64_t v4 = [*(id *)(a1[4] + 32) fetchRequest];
  id v13 = [(_TUICoreDataGeneration *)v2 initWithContext:v3 fetchRequest:v4];

  uint64_t v5 = [*(id *)(a1[4] + 32) fetchedObjects];
  -[_TUICoreDataGeneration updateCount:](v13, "updateCount:", [v5 count]);

  uint64_t v6 = [(TUIDynamicArray *)[TUIMutableDynamicArray alloc] initWithDataProvider:a1[4] generation:v13 count:0];
  uint64_t v7 = *(void *)(a1[6] + 8);
  Entry v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  [(_TUICoreDataGeneration *)v13 captureTokenFromContext:a1[5]];
  objc_storeWeak((id *)(a1[4] + 8), *(id *)(*(void *)(a1[6] + 8) + 40));
  [*(id *)(*(void *)(a1[6] + 8) + 40) _updateProvider:a1[4] count:-[_TUICoreDataGeneration count](v13, "count") generation:v13];
  uint64_t v9 = *(void *)(a1[4] + 24);
  if (v9)
  {
    uint64_t v10 = [*(id *)(*(void *)(a1[6] + 8) + 40) tui_subarrayWithStart:0 end:v9 - 1];
    uint64_t v11 = *(void *)(a1[6] + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    objc_storeWeak((id *)(a1[4] + 16), *(id *)(*(void *)(a1[6] + 8) + 40));
  }
}

void sub_338FC(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 32) managedObjectContext];
  uint64_t v3 = [v2 executeFetchRequest:a1[5] error:0];

  uint64_t v4 = [*(id *)(a1[4] + 32) managedObjectContext];
  uint64_t v5 = [v4 executeFetchRequest:a1[6] error:0];

  uint64_t v6 = a1[7];
  uint64_t v7 = [*(id *)(a1[4] + 32) fetchRequest];
  [v7 setPredicate:v6];

  [*(id *)(a1[4] + 32) performFetch:0];
  Entry v8 = [v5 differenceFromArray:v3 withOptions:7];
  uint64_t v9 = [_TUICoreDataGeneration alloc];
  uint64_t v10 = [*(id *)(a1[4] + 32) managedObjectContext];
  uint64_t v11 = [*(id *)(a1[4] + 32) fetchRequest];
  uint64_t v12 = [(_TUICoreDataGeneration *)v9 initWithContext:v10 fetchRequest:v11];

  id v13 = [*(id *)(a1[4] + 32) managedObjectContext];
  [(_TUICoreDataGeneration *)v12 captureTokenFromContext:v13];

  uint64_t v29 = v5;
  -[_TUICoreDataGeneration updateCount:](v12, "updateCount:", [v5 count]);
  uint64_t v28 = +[TUITransaction currentOrImplicitTransaction];
  [v28 tx];
  uint64_t v27 = v30 = v3;
  uint64_t v14 = -[_TUIDynamicArrayUpdateGroup initWithGeneration:count:transaction:]([_TUIDynamicArrayUpdateGroup alloc], "initWithGeneration:count:transaction:", v12, [v3 count], v27);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v15 = v8;
  id v16 = [v15 countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v17; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v18) {
          objc_enumerationMutation(v15);
        }
        double v20 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v21 = (char *)[v20 changeType];
        if (v21 == (unsigned char *)&def_141F14 + 1)
        {
          if ([v20 associatedIndex] == (id)0x7FFFFFFFFFFFFFFFLL) {
            -[_TUIDynamicArrayUpdateGroup deleteItemAtIndex:](v14, "deleteItemAtIndex:", [v20 index]);
          }
        }
        else if (!v21)
        {
          if ([v20 associatedIndex] == (id)0x7FFFFFFFFFFFFFFFLL) {
            -[_TUIDynamicArrayUpdateGroup insertItemAtIndex:](v14, "insertItemAtIndex:", [v20 index]);
          }
          else {
            -[v14 moveItemFromIndex:[v20 associatedIndex] toIndex:[v20 index]];
          }
        }
      }
      id v17 = [v15 countByEnumeratingWithState:&v31 objects:v35 count:16];
    }
    while (v17);
  }

  [(_TUIDynamicArrayUpdateGroup *)v14 finalizeUpdates];
  uint64_t v22 = a1[4];
  if (*(void *)(v22 + 24))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v22 + 16));
    [WeakRetained _enqueueUpdate:v14];

    id v24 = [*(id *)(a1[4] + 32) managedObjectContext];
    id v25 = [v24 countForFetchRequest:a1[6] error:0];

    id v26 = objc_loadWeakRetained((id *)(a1[4] + 8));
    [v26 _updateCount:v25 generation:v12];
  }
  else
  {
    id v26 = objc_loadWeakRetained((id *)(v22 + 8));
    [v26 _enqueueUpdate:v14];
  }
}

void sub_3437C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_34488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_34608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_34794(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  Entry v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = *((unsigned __int16 *)a2 + 8);
      *((_WORD *)v8 + sub_3BD4((uint64_t)this + 8) = v9;
      *((_DWORD *)v8 + 5) = *((_DWORD *)a2 + 5);
      uint64_t v10 = (uint64_t *)*v8;
      v8[1] = v9;
      uint64_t v11 = (void *)sub_348A8((uint64_t)a1, v9, (unsigned __int16 *)v8 + 8);
      sub_34A00(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      Entry v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      uint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      Entry v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_34D4C(a1, a2 + 2);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_34874(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    os_log_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_34894(_Unwind_Exception *a1)
{
}

uint64_t sub_348A8(uint64_t a1, unint64_t a2, unsigned __int16 *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    sub_34AE8(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  uint64_t v16 = *(void *)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    uint64_t v16 = *(void *)v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = *(void *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = *(void *)(v16 + 8);
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2 && *(unsigned __int16 *)(v16 + 16) == *a3;
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void *sub_34A00(void *result, void *a2, void *a3)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(void *)(*result + 8 * v4) = result + 2;
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
LABEL_18:
    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
    if (v6 != v4) {
      goto LABEL_18;
    }
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_34AE8(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_34BD8(a1, prime);
    }
  }
}

void sub_34BD8(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_3EA4();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = (unint64_t)v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * vsub_3BD4((uint64_t)this + 8) = a1 + 16;
      for (uint64_t i = *v7; *v7; uint64_t i = *v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = (uint64_t **)i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (uint64_t *)*v13;
            }
            while (v13 && *((unsigned __int16 *)i + 8) == *((unsigned __int16 *)v13 + 8));
            *uint64_t v7 = v13;
            *uint8x8_t v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = (uint64_t **)i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = 0;
  }
}

unsigned __int16 *sub_34D4C(void *a1, uint64_t *a2)
{
  int8x8_t v4 = (unsigned __int16 *)operator new(0x18uLL);
  uint64_t v5 = *a2;
  *((void *)v4 + 2) = *a2;
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = (unsigned __int16)v5;
  uint64_t v6 = (void *)sub_348A8((uint64_t)a1, (unsigned __int16)v5, v4 + 8);
  sub_34A00(a1, v4, v6);
  return v4;
}

void sub_34DB4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_34DC8(void *a1, unsigned __int16 *a2)
{
  uint64_t result = (uint64_t *)sub_12E50(a1, a2);
  if (result)
  {
    sub_34E00(a1, result);
    return (void *)(&def_141F14 + 1);
  }
  return result;
}

uint64_t sub_34E00(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_34E44(a1, a2, (uint64_t)&__p);
  int8x8_t v3 = __p;
  __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *sub_34E44@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    uint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *uint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + sub_3BD4((uint64_t)this + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void *sub_34F78(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  unint64_t v11 = operator new(0x18uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + sub_3BD4((uint64_t)this + 8) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_3ED8(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  unint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *unint64_t v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *unint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    unint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_3518C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_351A0(void *a1, void *a2, void *a3)
{
  unint64_t v4 = a2;
  uint64_t v6 = a1[1];
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
      *(void *)(*a1 + 8 * i) = 0;
    unint64_t v8 = (id *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8) {
      BOOL v9 = a2 == a3;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9)
    {
      uint64_t v10 = v8;
    }
    else
    {
      do
      {
        v14[0] = v8 + 2;
        v14[1] = v8 + 3;
        sub_35308((uint64_t)v14, (uint64_t)(v4 + 2));
        uint64_t v10 = (id *)*v8;
        unint64_t v11 = *((unsigned __int16 *)v8 + 8);
        v8[1] = (id)v11;
        unint64_t v12 = (void *)sub_348A8((uint64_t)a1, v11, (unsigned __int16 *)v8 + 8);
        sub_34A00(a1, v8, v12);
        unint64_t v4 = (void *)*v4;
        if (v10) {
          BOOL v13 = v4 == a3;
        }
        else {
          BOOL v13 = 1;
        }
        unint64_t v8 = v10;
      }
      while (!v13);
    }
    sub_352C4((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_35360(a1, (uint64_t)(v4 + 2));
    unint64_t v4 = (void *)*v4;
  }
}

void sub_35298(void *a1)
{
  __cxa_begin_catch(a1);
  sub_352C4(v1, v2);
  __cxa_rethrow();
}

void sub_352B0(_Unwind_Exception *a1)
{
}

void sub_352C4(uint64_t a1, id *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      int8x8_t v3 = (id *)*v2;

      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_35308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  **(_WORD **)a1 = *(_WORD *)a2;
  *(_DWORD *)uint64_t v4 = *(_DWORD *)(a2 + 8);
  objc_storeStrong((id *)(v4 + 8), *(id *)(a2 + 16));
  *(void *)(v4 + 16) = *(void *)(a2 + 24);
  return a1;
}

void *sub_35360(void *a1, uint64_t a2)
{
  sub_353E0((uint64_t)a1, a2, (uint64_t)v8);
  int8x8_t v3 = (void *)v8[0];
  uint8x8_t v5 = (unsigned __int16 *)(v8[0] + 16);
  unint64_t v4 = *(unsigned __int16 *)(v8[0] + 16);
  *(void *)(v8[0] + sub_3BD4((uint64_t)this + 8) = v4;
  uint64_t v6 = (void *)sub_348A8((uint64_t)a1, v4, v5);
  sub_34A00(a1, v3, v6);
  return v3;
}

void sub_353BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, uint64_t a11)
{
  if (a10) {
    sub_35454((uint64_t)&a11, a10);
  }
  _Unwind_Resume(exception_object);
}

id sub_353E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = operator new(0x30uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + sub_3BD4((uint64_t)this + 8) = v5;
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((_WORD *)v6 + sub_3BD4((uint64_t)this + 8) = *(_WORD *)a2;
  *((_DWORD *)v6 + 6) = *(_DWORD *)(a2 + 8);
  id result = *(id *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  v6[4] = result;
  v6[5] = v8;
  *(unsigned char *)(a3 + 16) = 1;
  v6[1] = *((unsigned __int16 *)v6 + 8);
  return result;
}

void sub_35454(uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t sub_354AC(uint64_t a1)
{
  sub_352C4(a1, *(id **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void *sub_354E8(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  BOOL v13 = (void *)(a1 + 16);
  unint64_t v11 = operator new(0x30uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + sub_3BD4((uint64_t)this + 8) = **a4;
  *((_DWORD *)v11 + 6) = 0;
  v11[4] = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_3ED8(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  unint64_t v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *unint64_t v11 = *v21;
LABEL_38:
    void *v21 = v11;
    goto LABEL_39;
  }
  *unint64_t v11 = *v13;
  *BOOL v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    unint64_t v22 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    unint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_35724(_Unwind_Exception *a1)
{
  sub_35454(v2, v1);
  _Unwind_Resume(a1);
}

uint64_t _TUIDeviceHasInternalInstall()
{
  if (qword_2DF280 != -1) {
    dispatch_once(&qword_2DF280, &stru_252698);
  }
  return byte_2DF278;
}

void sub_35784(id a1)
{
  byte_2DF278 = MGGetBoolAnswer();
}

uint64_t _TUIDeviceHasOLEDDisplay()
{
  return MGGetBoolAnswer();
}

void sub_36084(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_36090(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

id sub_36144(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

id sub_361E8(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_362B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 appendObjectsWithProtocol:*(void *)(a1 + 32) toArray:*(void *)(a1 + 40)];
  }
}

id sub_36400(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  id v3 = [WeakRetained invalidateInstantiation:*(void *)(a1 + 32)];

  return v3;
}

void sub_364DC(uint64_t a1, void *a2)
{
  id v6 = a2;
  BOOL v3 = TUIEnumeratorNotNil(*(_DWORD *)(*(void *)(a1 + 32) + 8));
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = objc_alloc_init(*(Class *)(v4 + 72));
    [*(id *)(a1 + 40) evaluateEnumerator:*(unsigned int *)(*(void *)(a1 + 32) + 8) withObject:v6 nodes:*(void *)(*(void *)(a1 + 32) + 12) containingObject:*(void *)(a1 + 32) builder:v5];
  }
  else
  {
    if (!TUINameIsValid(*(_DWORD *)(v4 + 20))) {
      goto LABEL_6;
    }
    id v5 = objc_alloc_init(*(Class *)(*(void *)(a1 + 32) + 72));
    [*(id *)(a1 + 40) evaluateBinding:*(unsigned int *)(*(void *)(a1 + 32) + 20) withObject:v6 nodes:*(void *)(*(void *)(a1 + 32) + 12) containingObject:*(void *)(a1 + 32) builder:v5];
  }
  [v5 finalizeModelsWithParent:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];

LABEL_6:
}

void sub_36680(uint64_t a1)
{
  char v2 = 0;
  do
  {
    char v3 = v2;
    unsigned __int8 v4 = [*(id *)(*(void *)(a1 + 32) + 32) applyUpdatesForTransactionGroup:*(void *)(a1 + 40)];
    char v2 = 1;
  }
  while ((v4 & 1) != 0);
  if (v3)
  {
    id v5 = [*(id *)(a1 + 48) statsCollector];
    [v5 recordEvent:19];

    uint64_t v6 = *(void *)(a1 + 32);
    unint64_t v7 = *(void **)(v6 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_36754;
    void v8[3] = &unk_252708;
    v8[4] = v6;
    id v9 = *(id *)(a1 + 48);
    [v7 valueWithBlock:v8];
  }
}

void sub_36754(uint64_t a1, void *a2)
{
  id v6 = a2;
  BOOL v3 = TUIEnumeratorNotNil(*(_DWORD *)(*(void *)(a1 + 32) + 8));
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = objc_alloc_init(*(Class *)(v4 + 72));
    [*(id *)(a1 + 40) evaluateEnumerator:*(unsigned int *)(*(void *)(a1 + 32) + 8) withObject:v6 nodes:*(void *)(*(void *)(a1 + 32) + 12) containingObject:*(void *)(a1 + 32) builder:v5];
  }
  else
  {
    if (!TUINameIsValid(*(_DWORD *)(v4 + 20))) {
      goto LABEL_6;
    }
    id v5 = objc_alloc_init(*(Class *)(*(void *)(a1 + 32) + 72));
    [*(id *)(a1 + 40) evaluateBinding:*(unsigned int *)(*(void *)(a1 + 32) + 20) withObject:v6 nodes:*(void *)(*(void *)(a1 + 32) + 12) containingObject:*(void *)(a1 + 32) builder:v5];
  }
  [v5 finalizeModelsWithParent:*(void *)(a1 + 32) context:*(void *)(a1 + 40)];

LABEL_6:
}

void sub_369A8(id a1)
{
  v4[0] = @"kind";
  v4[1] = @"instance";
  v4[2] = @"parameters";
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:3];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  BOOL v3 = (void *)qword_2DF288;
  qword_2DF288 = v2;
}

void sub_36B5C(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  BOOL v3 = (void *)qword_2DF298;
  qword_2DF298 = v2;
}

uint64_t TUIShouldStopInDebugger()
{
  if (!TUIGrantDebuggerPermissionToStopExecution) {
    return 0;
  }
  if (qword_2DF2B0 != -1) {
    dispatch_once(&qword_2DF2B0, &stru_252768);
  }
  if (byte_2DF2A8 && TUIForceUnitTestsToHaltDebugger == 0) {
    return 0;
  }
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v7 = 0u;
  memset(v6, 0, sizeof(v6));
  *(void *)BOOL v3 = 0xE00000001;
  int v4 = 1;
  pid_t v5 = getpid();
  size_t v2 = 648;
  sysctl(v3, 4u, v6, &v2, 0, 0);
  return (v7 >> 11) & 1;
}

uint64_t TUIIsRunningTests()
{
  if (qword_2DF2B0 != -1) {
    dispatch_once(&qword_2DF2B0, &stru_252768);
  }
  return byte_2DF2A8;
}

uint64_t TUIHaltDebugger()
{
  uint64_t result = TUIShouldStopInDebugger();
  if (result) {
    __break(0);
  }
  return result;
}

void sub_36FA4(id a1)
{
  uint64_t v1 = +[NSProcessInfo processInfo];
  id v3 = [v1 environment];

  size_t v2 = [v3 objectForKeyedSubscript:@"XCTestConfigurationFilePath"];
  byte_2DF2A8 = v2 != 0;
}

void TUIReportAssertionFailureWithMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v13 = a5;
  if ([v13 length])
  {
    long long v14 = (__CFString *)[objc_alloc((Class)NSString) initWithFormat:v13 arguments:&a9];
    if (!a1) {
      goto LABEL_6;
    }
LABEL_5:
    long long v15 = +[NSString stringWithCString:a1 encoding:1];
    long long v16 = [v15 lastPathComponent];

    if (v16) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  long long v14 = &stru_257BF0;
  if (a1) {
    goto LABEL_5;
  }
LABEL_6:
  long long v16 = &stru_257BF0;
LABEL_7:
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    long long v17 = +[NSNumber numberWithInt:a2];
    *(_DWORD *)buf = 136316162;
    uint64_t v19 = a4;
    __int16 v20 = 2080;
    uint64_t v21 = a3;
    __int16 v22 = 2112;
    long long v23 = v16;
    __int16 v24 = 2112;
    long long v25 = v17;
    __int16 v26 = 2112;
    long long v27 = v14;
    _os_log_error_impl(&def_141F14, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "*** Assertion failure: %s in %s - %@:%@ %@", buf, 0x34u);
  }
}

void TUICrashFinalThrow(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9 = a1;
  if ([v9 length]) {
    CFStringRef v10 = (const __CFString *)[objc_alloc((Class)NSString) initWithFormat:v9 arguments:&a9];
  }
  else {
    CFStringRef v10 = &stru_257BF0;
  }
  id v11 = +[NSException exceptionWithName:@"TUICrash" reason:v10 userInfo:0];
  objc_exception_throw(v11);
}

uint64_t sub_37718(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 24) optimizeUpdatesForTransactionGroup:v3]
    && [*(id *)(*(void *)(a1 + 32) + 24) applyUpdatesForTransactionGroup:v3])
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    _OWORD v6[2] = sub_377DC;
    void v6[3] = &unk_252790;
    v6[4] = *(void *)(a1 + 32);
    [v3 appendUpdateBlock:v6];
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_377DC(uint64_t a1)
{
  size_t v2 = [*(id *)(*(void *)(a1 + 32) + 16) value];
  if ([v2 isObject])
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v3 = +[NSArray arrayWithObjects:&v5 count:1];
    id v4 = [v2 callWithArguments:v3];
  }
}

void sub_379C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_379DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_379EC(uint64_t a1)
{
}

void sub_379F4(uint64_t a1, void *a2)
{
}

void sub_37B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_37B68(uint64_t a1, void *a2)
{
}

void sub_37E30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(*(void *)(a1 + 32) + 40) hoverRegions];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_37F00;
  void v6[3] = &unk_2527E0;
  long long v8 = *(_OWORD *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 56);
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_37F00(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  [a3 bounds];
  double v9 = v6;
  double v10 = v7;
  double v11 = v8;
  if (*(unsigned char *)(a1 + 40)) {
    double v5 = *(double *)(a1 + 48) - CGRectGetMidX(*(CGRect *)&v5) + v7 * -0.5;
  }
  [*(id *)(a1 + 32) addRegionWithKey:v12 rect:v5, v9, v10, v11];
}

void sub_381CC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_381E4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  [*(id *)(a1 + 32) convertPoint:v11 toView:*(double *)(a1 + 56), *(double *)(a1 + 64)];
  double v7 = v6;
  double v9 = v8;
  if (([v11 isHidden] & 1) == 0)
  {
    [v11 alpha];
    if (v10 > 0.0
      && [v11 isUserInteractionEnabled]
      && objc_msgSend(v11, "pointInside:withEvent:", *(void *)(a1 + 40), v7, v9))
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      *a4 = 1;
    }
  }
}

id sub_38FC4(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_39670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_39680(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v4 = [v7 box];
  double v5 = (char *)[v4 role];

  if (v5 == (unsigned char *)&def_141F14 + 3)
  {
    [v7 setHidden:0];
    double v6 = &OBJC_IVAR___TUIHFadeLayout__decorator;
    goto LABEL_5;
  }
  if (!v5)
  {
    [v7 setHidden:0];
    double v6 = &OBJC_IVAR___TUIHFadeLayout__content;
LABEL_5:
    objc_storeStrong((id *)(*(void *)(a1 + 32) + *v6), a2);
    goto LABEL_7;
  }
  [v7 setHidden:1];
LABEL_7:
}

void sub_39744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_39898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_39AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_39B10(uint64_t a1)
{
  size_t v2 = *(id **)a1;
  if (*(void *)(a1 + 8) == *(void *)a1)
  {
    char v3 = 0;
    double v6 = 0.0;
    id v7 = *(id **)a1;
    double v5 = 0.0;
    double v4 = 0.0;
  }
  else
  {
    char v3 = 0;
    double v4 = 0.0;
    double v5 = 0.0;
    double v6 = 0.0;
    id v7 = *(id **)a1;
    do
    {
      double v8 = [*v7 box];
      id v9 = [v8 valign];

      id v10 = *v7;
      if ((unint64_t)v9 > 1)
      {
        [v10 computedNaturalSize];
        if (v6 < v16) {
          double v6 = v16;
        }
      }
      else
      {
        [v10 computedHeightAbovePivot];
        if (v4 < v11) {
          double v4 = v11;
        }
        [*v7 computedNaturalSize];
        double v13 = v12;
        [*v7 computedHeightAbovePivot];
        double v15 = v13 - v14;
        if (v5 < v15) {
          double v5 = v15;
        }
        char v3 = 1;
      }
      ++v7;
    }
    while (v7 != *(id **)(a1 + 8));
    size_t v2 = *(id **)a1;
  }
  if (v6 >= v5 + v4) {
    double v17 = v6;
  }
  else {
    double v17 = v5 + v4;
  }
  if (v7 != v2)
  {
    do
    {
      long long v18 = [*v2 box];
      id v19 = [v18 valign];

      if ((unint64_t)v19 <= 1) {
        uint64_t v20 = 1;
      }
      else {
        uint64_t v20 = (uint64_t)v19;
      }
      if (v20 == 3) {
        goto LABEL_27;
      }
      if (v20 == 2) {
        goto LABEL_28;
      }
      if (v20 != 1) {
LABEL_27:
      }
        [*v2 computedNaturalSize];
      else {
        [*v2 computedHeightAbovePivot];
      }
LABEL_28:
      [*v2 computedOrigin];
      id v21 = *v2++;
      [v21 setComputedOrigin];
    }
    while (v2 != *(id **)(a1 + 8));
  }
  if (v3) {
    double v22 = v4 + (v17 - (v5 + v4)) * 0.5;
  }
  else {
    double v22 = v17;
  }
  *(double *)(a1 + 16) = v22;
  return v17;
}

void sub_39CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_39EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_39FA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_3EA4();
  }
  return operator new(8 * a2);
}

void sub_3A3FC(id a1)
{
  uint64_t v1 = objc_alloc_init(TUIImagePrefetchControllerManager);
  size_t v2 = (void *)qword_2DF2B8;
  qword_2DF2B8 = (uint64_t)v1;
}

id sub_3A5A0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) addObject:*(void *)(a1 + 40)];
}

id sub_3A6D4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
}

void sub_3A6E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  size_t v2 = *(NSObject **)(v1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_3A774;
  v3[3] = &unk_251828;
  v3[4] = v1;
  id v4 = *(id *)(a1 + 40);
  dispatch_sync(v2, v3);
}

void sub_3A774(uint64_t a1)
{
  size_t v2 = [*(id *)(*(void *)(a1 + 32) + 16) allKeys];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8 * i);
        double v8 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKeyedSubscript:v7];
        if ([v8 stopTrackingController:*(void *)(a1 + 40)]) {
          [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:v7];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

uint64_t sub_3A9B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_3A9C8(uint64_t a1)
{
}

void sub_3A9D0(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 24);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        double v8 = (void *)a1[5];
        long long v9 = [v7 controllerID];
        LODWORD(vsub_3BD4((uint64_t)this + 8) = [v8 isEqual:v9];

        if (v8)
        {
          objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), v7);
          goto LABEL_11;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_11:
}

void sub_3ABF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _controllerWithID:*(void *)(a1 + 40)];
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  obuint64_t j = *(id *)(a1 + 48);
  id v3 = [obj countByEnumeratingWithState:&v44 objects:v48 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v45;
    long long v25 = &v42;
    __int16 v26 = &v41;
    long long v23 = v33;
    __int16 v24 = v35;
    double v22 = v29;
    id v21 = v2;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v45 != v4) {
          objc_enumerationMutation(obj);
        }
        double v6 = *(void **)(*((void *)&v44 + 1) + 8 * i);
        uint64_t v7 = [v6 resource:v21, v22, v23, v24, v25, v26];
        if ([v7 isFileURL])
        {
          [v2 urlLoaded:v7];
        }
        else
        {
          uint64_t v38 = 0;
          BOOL v39 = &v38;
          uint64_t v40 = 0x3032000000;
          uint64_t v41 = sub_3A9B8;
          id v42 = sub_3A9C8;
          id v43 = 0;
          uint64_t v8 = *(void *)(a1 + 32);
          long long v9 = *(NSObject **)(v8 + 32);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          v35[0] = sub_3AFE0;
          v35[1] = &unk_2528A0;
          uint64_t v37 = &v38;
          v35[2] = v8;
          id v10 = v7;
          id v36 = v10;
          dispatch_sync(v9, block);
          long long v11 = (void *)v39[5];
          if (v11)
          {
            [v6 priority];
            [v11 updatePriorty:*(void *)(a1 + 40)];
          }
          else
          {
            long long v12 = *(void **)(a1 + 56);
            [v6 priority];
            v32[0] = _NSConcreteStackBlock;
            v32[1] = 3221225472;
            v33[0] = sub_3B030;
            v33[1] = &unk_2528C8;
            v33[2] = *(void *)(a1 + 32);
            double v14 = [v12 resourceLoaderTaskWithURL:v10 priority:v32 completion:v13];
            double v15 = v14;
            if (v14 && ([v14 isLoaded] & 1) == 0)
            {
              double v16 = objc_opt_new();
              uint64_t v17 = *(void *)(a1 + 32);
              long long v18 = *(NSObject **)(v17 + 32);
              v28[0] = _NSConcreteStackBlock;
              v28[1] = 3221225472;
              v29[0] = sub_3B3A8;
              v29[1] = &unk_252320;
              v29[2] = v17;
              id v19 = v16;
              id v30 = v19;
              id v31 = v10;
              dispatch_sync(v18, v28);
              [v19 setResourceLoaderTask:v15];
              [v6 priority];
              [v19 updatePriorty:*(void *)(a1 + 40)];
              uint64_t v20 = [v19 resourceLoaderTask];
              [v20 resume];

              id v2 = v21;
            }
            else
            {
              [v2 urlLoaded:v10];
            }
          }
          _Block_object_dispose(&v38, 8);
        }
      }
      id v3 = [obj countByEnumeratingWithState:&v44 objects:v48 count:16];
    }
    while (v3);
  }
}

void sub_3AFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_3AFE0(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 16) objectForKeyedSubscript:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_3B030(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_3B0CC;
  void v7[3] = &unk_251828;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_3B0CC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v18 = 0;
    id v19 = &v18;
    uint64_t v20 = 0x3032000000;
    id v21 = sub_3A9B8;
    double v22 = sub_3A9C8;
    id v23 = 0;
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(NSObject **)(v3 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    void block[2] = sub_3B2E8;
    block[3] = &unk_251800;
    block[4] = v3;
    id v16 = v1;
    uint64_t v17 = &v18;
    dispatch_sync(v4, block);
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v5 = (id)v19[5];
    id v6 = [v5 countByEnumeratingWithState:&v11 objects:v24 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v12;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v5);
          }
          uint64_t v9 = [*(id *)(a1 + 40) _controllerWithID:*(void *)(*((void *)&v11 + 1) + 8 * (void)v8) v11];
          id v10 = [*(id *)(a1 + 32) URL];
          [v9 urlLoaded:v10];

          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v5 countByEnumeratingWithState:&v11 objects:v24 count:16];
      }
      while (v6);
    }

    _Block_object_dispose(&v18, 8);
  }
}

void sub_3B2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3B2E8(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  uint64_t v3 = [*(id *)(a1 + 40) URL];
  id v11 = [v2 objectForKey:v3];

  uint64_t v4 = [v11 controllers];
  id v5 = [v4 copy];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = *(void **)(a1 + 40);
  uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 16);
  id v10 = [v8 URL];
  [v9 removeObjectForKey:v10];
}

id sub_3B3A8(void *a1)
{
  return [*(id *)(a1[4] + 16) setObject:a1[5] forKey:a1[6]];
}

void sub_3B750(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 actionHandlerDelegate];
  [v8 performDropWithSession:*(void *)(a1 + 40) actionObject:v6 behavior:v7];
}

void sub_3B8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3B8D4(void *a1, void *a2, void *a3)
{
  id v5 = (void *)a1[4];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 actionHandlerDelegate];
  LOBYTE(v5) = [v8 canHandleDropSession:a1[5] actionObject:v6 behavior:v7];

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = (_BYTE)v5;
}

void sub_3C0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_3C794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3C89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3C924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3C9E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3CBDC(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_3CD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  _Unwind_Resume(a1);
}

void sub_3D124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_3D268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_3D6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D77C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_3DA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3DB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_3E330(_Unwind_Exception *a1)
{
  uint64_t v9 = v3;

  _Unwind_Resume(a1);
}

void sub_3E534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E6BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E81C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E8F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3E9F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3EAA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3EB70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::isConvertibleToKind(void **this, int a2, TUI::Evaluation::Context *a3)
{
  int v3 = *(_DWORD *)this;
  if (*(_DWORD *)this == a2) {
    return 1;
  }
  BOOL v4 = 0;
  switch(a2)
  {
    case 1:
      if (v3 == 2) {
        return 1;
      }
      goto LABEL_13;
    case 2:
    case 5:
      if ((v3 - 1) < 2) {
        return 1;
      }
LABEL_13:
      if (v3 != 16) {
        return 0;
      }
      return _NSIsNSNumber();
    case 6:
      if (v3 == 7) {
        return 1;
      }
      goto LABEL_21;
    case 9:
      if ((v3 - 6) < 2) {
        return 1;
      }
      if (v3 != 16) {
        return 0;
      }
LABEL_21:
      id v10 = TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a3);
      BOOL v4 = v10 != 0;

      return v4;
    case 11:
      if (v3 == 6)
      {
        TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a3 + 70), *((unsigned __int16 *)this + 8));
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (v8)
        {
          id v11 = [*((id *)a3 + 19) colorRegistry];
          long long v12 = [v11 colorWithName:v8];
          BOOL v4 = v12 != 0;
        }
        else
        {
LABEL_28:
          BOOL v4 = 0;
        }
      }
      else
      {
        if (v3 == 9)
        {
          TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a3);
          id v8 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v9 = +[UIColor tui_colorWithHexString:v8];
        }
        else
        {
          if (v3 != 16) {
            return 0;
          }
          if (sub_40430((uint64_t)a3 + 64, this[1])) {
            return 1;
          }
          TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a3);
          id v8 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v9 = +[UIColor tui_colorWithHexString:v8];
        }
        BOOL v4 = v9 != 0;
      }
LABEL_31:

      break;
    case 12:
      if (v3 != 16) {
        return 0;
      }
      id v8 = this[1];
      if (!v8) {
        goto LABEL_28;
      }
      BOOL v4 = *((void *)a3 + 8) == objc_opt_class();
      goto LABEL_31;
    default:
      return v4;
  }
  return v4;
}

void sub_403D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_40430(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    unint64_t v11 = objc_opt_class();
    BOOL v4 = (void *)(a1 + 48);
    id v5 = sub_417C(v4, &v11);
    if (v5)
    {
      BOOL v6 = *((unsigned char *)v5 + 24) != 0;
    }
    else
    {
      uint64_t v7 = objc_opt_class();
      id v8 = TUIDynamicCast(v7, v3);

      long long v12 = (uint64_t *)&v11;
      uint64_t v9 = sub_42B9C((uint64_t)v4, &v11, (uint64_t)&std::piecewise_construct, &v12);
      BOOL v6 = v8 != 0;
      *((unsigned char *)v9 + 24) = v6;
    }
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_404FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::_stringValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  id v2 = 0;
  switch(*(_DWORD *)this)
  {
    case 1:
      BOOL v4 = +[NSNumber numberWithDouble:*((double *)this + 2)];
      uint64_t v5 = [v4 stringValue];
      goto LABEL_5;
    case 2:
      BOOL v4 = +[NSNumber numberWithInteger:*((void *)this + 2)];
      uint64_t v5 = [v4 stringValue];
      goto LABEL_5;
    case 6:
      BOOL v6 = (TUI::Symbol::Tab *)*((void *)a2 + 70);
      unsigned int v7 = *((unsigned __int16 *)this + 8);
      goto LABEL_15;
    case 7:
      BOOL v6 = (TUI::Symbol::Tab *)*((void *)a2 + 70);
      unint64_t v8 = *((void *)this + 2);
      uint64_t v9 = *((void *)v6 + 5);
      if (v8 >= (*((void *)v6 + 6) - v9) >> 1) {
        unsigned int v7 = 0xFFFF;
      }
      else {
        unsigned int v7 = *(unsigned __int16 *)(v9 + 2 * v8);
      }
LABEL_15:
      TUI::Symbol::Tab::string(v6, v7);
      id v10 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_16;
    case 9:
      id v10 = *((id *)this + 1);
      goto LABEL_16;
    case 0xC:
      BOOL v4 = +[NSNumber numberWithBool:*((unsigned __int8 *)this + 16)];
      uint64_t v5 = [v4 stringValue];
LABEL_5:
      id v2 = (id)v5;

      goto LABEL_17;
    case 0x10:
      if (_NSIsNSString())
      {
        id v2 = *((id *)this + 1);
        if (v2) {
          goto LABEL_17;
        }
      }
      if (objc_opt_respondsToSelector())
      {
        id v10 = [*((id *)this + 1) stringValue];
LABEL_16:
        id v2 = v10;
      }
      else
      {
        id v2 = 0;
      }
LABEL_17:
      return v2;
    default:
      goto LABEL_17;
  }
}

void sub_4067C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::integerValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 2) {
    return *((void *)this + 2);
  }
  else {
    return (uint64_t)TUI::Evaluation::ResolvedValue::floatValue(this, a2);
  }
}

double TUI::Evaluation::ResolvedValue::floatValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  int v4 = *(_DWORD *)this;
  if (*(_DWORD *)this != 16)
  {
    if (v4 == 2) {
      return (double)*((uint64_t *)this + 2);
    }
    if (v4 == 1) {
      return *((double *)this + 2);
    }
    goto LABEL_10;
  }
  if (!_NSIsNSNumber())
  {
LABEL_10:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return 0.0;
  }
  BOOL v6 = (void *)*((void *)this + 1);

  [v6 doubleValue];
  return result;
}

double TUI::Evaluation::ResolvedValue::floatOrDefaultValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  switch(*(_DWORD *)this)
  {
    case 1:
      return *((double *)this + 2);
    case 2:
      return (double)*((uint64_t *)this + 2);
    case 3:
    case 4:
    case 5:
      goto LABEL_12;
    case 6:
      uint64_t v6 = *(void *)(*((void *)a2 + 70) + 40);
      if ((unint64_t)(*(void *)(*((void *)a2 + 70) + 48) - v6) < 0x9F) {
        int v7 = 0xFFFF;
      }
      else {
        int v7 = *(unsigned __int16 *)(v6 + 158);
      }
      if (*((unsigned __int16 *)this + 8) == v7) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 7:
      if (*((void *)this + 2) != 79) {
        goto LABEL_12;
      }
LABEL_15:
      double result = NAN;
      break;
    default:
      if (*(_DWORD *)this == 16 && _NSIsNSNumber())
      {
        uint64_t v5 = (void *)*((void *)this + 1);
        [v5 doubleValue];
      }
      else
      {
LABEL_12:
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
        double result = 0.0;
      }
      break;
  }
  return result;
}

uint64_t TUI::Evaluation::ResolvedValue::symbolValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  int v2 = *(_DWORD *)this;
  if (*(int *)this <= 8)
  {
    if (v2 == 6) {
      return *((unsigned __int16 *)this + 8);
    }
    if (v2 == 7)
    {
      unint64_t v3 = *((void *)this + 2);
      uint64_t v4 = *(void *)(*((void *)a2 + 70) + 40);
      if (v3 < (*(void *)(*((void *)a2 + 70) + 48) - v4) >> 1) {
        return *(unsigned __int16 *)(v4 + 2 * v3);
      }
      return 0xFFFFLL;
    }
LABEL_15:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return 0xFFFFLL;
  }
  if (v2 != 9 && v2 != 16) {
    goto LABEL_15;
  }
  uint64_t v7 = *((void *)a2 + 70);
  TUI::Evaluation::ResolvedValue::_stringValue(this, a2);
  id v8 = objc_claimAutoreleasedReturnValue();
  sub_6ACC(__p, (char *)[v8 UTF8String]);
  uint64_t v5 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v5;
}

void sub_40980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::nameValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 8) {
    return *((unsigned int *)this + 4);
  }
  uint64_t v2 = TUI::Symbol::Entry::invalid;
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return v2;
}

double TUI::Evaluation::ResolvedValue::transformValue@<D0>(TUI::Evaluation::ResolvedValue *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  *a3 = *(_OWORD *)&CGAffineTransformIdentity.a;
  a3[1] = v4;
  a3[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  if (*(_DWORD *)this == 13)
  {
    uint64_t v5 = (void *)*((void *)this + 1);
    if (v5)
    {
      [v5 CGAffineTransformValue];
    }
    else
    {
      long long v8 = 0u;
      long long v9 = 0u;
      long long v7 = 0u;
    }
    *a3 = v7;
    a3[1] = v8;
    double result = *(double *)&v9;
    a3[2] = v9;
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  }
  return result;
}

id TUI::Evaluation::ResolvedValue::colorValue(id *this, const TUI::Evaluation::Context *a2)
{
  int v4 = *(_DWORD *)this;
  uint64_t v5 = 1000;
  if (*(int *)this <= 10)
  {
    if (v4 == 6)
    {
      uint64_t v6 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), *((unsigned __int16 *)this + 8));
      if (!v6)
      {
        id v7 = 0;
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v4 == 9)
    {
      uint64_t v6 = TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a2);
      id v7 = +[UIColor tui_colorWithHexString:v6];
      if (v7 || !v6) {
        goto LABEL_19;
      }
LABEL_13:
      long long v8 = [*((id *)a2 + 19) colorRegistry];
      id v7 = [v8 colorWithName:v6];

      goto LABEL_19;
    }
LABEL_17:
    TUI::Evaluation::Context::reportError((uint64_t)a2, v5, 0);
    id v7 = 0;
    goto LABEL_20;
  }
  if (v4 == 11)
  {
    id v9 = this[1];
    id v7 = v9;
    if (this[1] && !v9)
    {
      uint64_t v5 = 1005;
      goto LABEL_17;
    }
  }
  else
  {
    if (v4 != 16) {
      goto LABEL_17;
    }
    if (!sub_40430((uint64_t)a2 + 64, this[1]) || (id v7 = this[1]) == 0)
    {
      uint64_t v6 = TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a2);
      id v7 = +[UIColor tui_colorWithHexString:v6];
LABEL_19:
    }
  }
LABEL_20:

  return v7;
}

void sub_40C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::guideValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 10)
  {
    id v2 = this[1];
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    id v2 = 0;
  }

  return v2;
}

double TUI::Evaluation::ResolvedValue::sizeValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 3)
  {
    [this[1] CGSizeValue];
    return v2;
  }
  else
  {
    double width = CGSizeZero.width;
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  }
  return width;
}

double TUI::Evaluation::ResolvedValue::insetsValue(id *this, const TUI::Evaluation::Context *a2)
{
  long long v4 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  long long v7 = *(_OWORD *)&UIEdgeInsetsZero.top;
  long long v8 = v4;
  int v5 = *(_DWORD *)this;
  if ((*(_DWORD *)this - 1) < 2) {
    goto LABEL_6;
  }
  if (v5 != 16)
  {
    if (v5 == 4)
    {
      [this[1] getBytes:&v7 length:32];
      return *(double *)&v7;
    }
    goto LABEL_7;
  }
  if (_NSIsNSNumber())
  {
LABEL_6:
    double result = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)this, a2);
    *((double *)&v7 + 1) = result;
    *(double *)&long long v8 = result;
    *((double *)&v8 + 1) = result;
    return result;
  }
LABEL_7:
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return *(double *)&v7;
}

uint64_t TUI::Evaluation::ResolvedValue::lengthValue(id *this, const TUI::Evaluation::Context *a2)
{
  long long v10 = TUILengthNull;
  int v4 = *(_DWORD *)this;
  if ((*(_DWORD *)this - 1) < 2) {
    goto LABEL_6;
  }
  if (v4 == 16)
  {
    if (!_NSIsNSNumber()) {
      goto LABEL_9;
    }
LABEL_6:
    double v5 = TUI::Evaluation::ResolvedValue::floatValue((TUI::Evaluation::ResolvedValue *)this, a2);
    if (v5 <= -3.40282347e38)
    {
      uint64_t v8 = 4286578687;
    }
    else
    {
      if (v5 < 3.40282347e38)
      {
        *(float *)&unsigned int v6 = v5;
        uint64_t v7 = v6 | 0x7FC0000000000000;
LABEL_13:
        *(void *)&long long v10 = v7;
        *((void *)&v10 + 1) = 0x1700007FC00000;
        return v10;
      }
      uint64_t v8 = 2139095039;
    }
    uint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0x7FC0000000000000;
    goto LABEL_13;
  }
  if (v4 != 5)
  {
LABEL_9:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return v10;
  }
  [this[1] getBytes:&v10 length:16];
  return v10;
}

id TUI::Evaluation::ResolvedValue::objectValue(TUI::Evaluation::ResolvedValue *this, TUI::Symbol::Tab **a2)
{
  switch(*(_DWORD *)this)
  {
    case 1:
      id v4 = +[NSNumber numberWithDouble:*((double *)this + 2)];
      break;
    case 2:
      id v4 = +[NSNumber numberWithInteger:*((void *)this + 2)];
      break;
    case 3:
    case 9:
    case 0xB:
    case 0x10:
      id v4 = *((id *)this + 1);
      break;
    case 4:
      [*((id *)this + 1) getBytes:v6 length:32];
      +[NSValue valueWithUIEdgeInsets:](NSValue, "valueWithUIEdgeInsets:", v6[0], v6[1], v6[2], v6[3]);
      id v4 = (id)objc_claimAutoreleasedReturnValue();
      break;
    case 0xC:
      id v4 = +[NSNumber numberWithBool:*((unsigned __int8 *)this + 16)];
      break;
    default:
      if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)this, 9, (TUI::Evaluation::Context *)a2))
      {
        TUI::Evaluation::ResolvedValue::stringValue(this, a2);
        id v4 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
        id v4 = 0;
      }
      break;
  }

  return v4;
}

id TUI::Evaluation::ResolvedValue::stringValue(TUI::Evaluation::ResolvedValue *this, TUI::Symbol::Tab **a2)
{
  int v3 = *(_DWORD *)this;
  if (*(_DWORD *)this > 0x10u) {
    goto LABEL_10;
  }
  if (((1 << v3) & 0x11206) != 0)
  {
    double v5 = TUI::Evaluation::ResolvedValue::_stringValue(this, (const TUI::Evaluation::Context *)a2);
    if (v5) {
      goto LABEL_15;
    }
    if (!*((void *)this + 1)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v3 != 6)
  {
    if (v3 == 7)
    {
      unsigned int v6 = a2[70];
      unint64_t v7 = *((void *)this + 2);
      uint64_t v8 = *((void *)v6 + 5);
      if (v7 >= (*((void *)v6 + 6) - v8) >> 1) {
        unsigned int v9 = 0xFFFF;
      }
      else {
        unsigned int v9 = *(unsigned __int16 *)(v8 + 2 * v7);
      }
      goto LABEL_14;
    }
LABEL_10:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
LABEL_11:
    double v5 = 0;
    goto LABEL_15;
  }
  unsigned int v6 = a2[70];
  unsigned int v9 = *((unsigned __int16 *)this + 8);
LABEL_14:
  double v5 = TUI::Symbol::Tab::string(v6, v9);
LABEL_15:

  return v5;
}

id TUI::Evaluation::ResolvedValue::_objectValue(TUI::Evaluation::ResolvedValue *this)
{
  int v1 = *(_DWORD *)this;
  if (*(_DWORD *)this == 1)
  {
    id v3 = +[NSNumber numberWithDouble:*((double *)this + 2)];
  }
  else if (v1 == 16 || v1 == 9)
  {
    id v3 = *((id *)this + 1);
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id TUI::Evaluation::ResolvedValue::arrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 16 && _NSIsNSArray())
  {
    id v4 = this[1];
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    id v4 = 0;
  }

  return v4;
}

id TUI::Evaluation::ResolvedValue::colorArrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  id v3 = TUI::Evaluation::ResolvedValue::arrayValue(this, a2);
  if (v3)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v4 = v3;
    id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v5)
    {
      uint64_t v6 = *(void *)v10;
      while (2)
      {
        for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v4);
          }
          if (!sub_40430((uint64_t)a2 + 64, *(void **)(*((void *)&v9 + 1) + 8 * i)))
          {

            TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
            goto LABEL_12;
          }
        }
        id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }
  }
  else
  {
LABEL_12:
    id v4 = 0;
  }

  return v4;
}

void sub_41370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::stringArrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  id v3 = TUI::Evaluation::ResolvedValue::arrayValue(this, a2);
  if (v3)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v4 = v3;
    id v5 = (char *)[v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v5)
    {
      uint64_t v6 = *(void *)v10;
      while (2)
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v4);
          }
          if ((_NSIsNSString() & 1) == 0)
          {

            TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
            goto LABEL_12;
          }
        }
        id v5 = (char *)[v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }
  }
  else
  {
LABEL_12:
    id v4 = 0;
  }

  return v4;
}

void sub_414C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::ResolvedValue::springTimingParameters(id *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = TUISpringTimingParametersZero;
  *(_OWORD *)(a3 + 16) = unk_243500;
  *(void *)(a3 + 32) = 0;
  if (*(_DWORD *)this == 14) {
    [this[1] getBytes:a3 length:40];
  }
  else {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  }
}

id TUI::Evaluation::ResolvedValue::BOOLValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this != 16)
  {
    if (*(_DWORD *)this == 12) {
      return (id)(*((unsigned char *)this + 16) != 0);
    }
LABEL_9:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return 0;
  }
  int v5 = _NSIsNSNumber();
  id result = (id)*((void *)this + 1);
  if (!v5)
  {
    if (!result) {
      return result;
    }
    goto LABEL_9;
  }

  return [result BOOLValue];
}

id TUI::Evaluation::ResolvedValue::elementValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 15)
  {
    id v2 = this[1];
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    id v2 = 0;
  }

  return v2;
}

id TUI::Evaluation::ResolvedValue::fontSpecValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this != 16)
  {
    if (*(_DWORD *)this == 17)
    {
      id v2 = this[1];
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (this[1]) {
LABEL_5:
  }
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  id v2 = 0;
LABEL_7:

  return v2;
}

id TUI::Evaluation::ResolvedValue::structValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 18)
  {
    id v2 = this[1];
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    id v2 = 0;
  }

  return v2;
}

void TUI::Evaluation::ResolvedValue::resolveProperty(id *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  id v81 = 0;
  *(_DWORD *)a4 = 0;
  *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;
  uint64_t v8 = (id *)(a4 + 8);
  uint64_t v9 = *((void *)a2 + 70);
  int v10 = *(_DWORD *)this;
  if (*(int *)this <= 13)
  {
    if (v10 != 3)
    {
      if (v10 == 4)
      {
        [this[1] getBytes:&v85 length:32];
        long long v11 = *(unsigned __int16 **)(v9 + 40);
        unint64_t v12 = *(void *)(v9 + 48) - (void)v11;
        if (v12 < 5) {
          int v13 = 0xFFFF;
        }
        else {
          int v13 = v11[2];
        }
        if (v13 != a3)
        {
          if (v12 < 7) {
            int v28 = 0xFFFF;
          }
          else {
            int v28 = v11[3];
          }
          if (v28 != a3)
          {
            if (v12 < 9) {
              int v40 = 0xFFFF;
            }
            else {
              int v40 = v11[4];
            }
            if (v40 != a3)
            {
              if (v12 < 0xB) {
                int v50 = 0xFFFF;
              }
              else {
                int v50 = v11[5];
              }
              if (v50 == a3)
              {
                LODWORD(v82) = 1;
                id v83 = 0;
                uint64_t v84 = v88;
                sub_4209C(a4, (uint64_t)&v82);

                return;
              }
              goto LABEL_80;
            }
LABEL_69:
            id v29 = v87;
            goto LABEL_70;
          }
LABEL_48:
          id v29 = v86;
          goto LABEL_70;
        }
        goto LABEL_27;
      }
      goto LABEL_33;
    }
    [this[1] CGSizeValue];
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    double v22 = *(unsigned __int16 **)(v9 + 40);
    unint64_t v23 = *(void *)(v9 + 48) - (void)v22;
    if (v23)
    {
      if (*v22 != a3)
      {
        if (v23 < 3) {
          int v24 = 0xFFFF;
        }
        else {
          int v24 = v22[1];
        }
        goto LABEL_57;
      }
    }
    else
    {
      int v24 = 0xFFFF;
      if (a3 != 0xFFFF)
      {
LABEL_57:
        if (v24 == a3)
        {
          *(_DWORD *)a4 = 1;
          long long v47 = *(void **)(a4 + 8);
          *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;

          *(void *)(a4 + 16) = v21;
          return;
        }
        TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
        id v81 = (id)objc_claimAutoreleasedReturnValue();
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v81);
        goto LABEL_92;
      }
    }
    *(_DWORD *)a4 = 1;
    id v31 = *(void **)(a4 + 8);
    *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;

    *(void *)(a4 + 16) = v19;
    return;
  }
  if (v10 == 14)
  {
    [this[1] getBytes:&v85 length:40];
    long long v25 = *(unsigned __int16 **)(v9 + 40);
    unint64_t v26 = *(void *)(v9 + 48) - (void)v25;
    if (v26 < 0x91) {
      int v27 = 0xFFFF;
    }
    else {
      int v27 = v25[72];
    }
    if (v27 != a3)
    {
      if (v26 < 0x93) {
        int v30 = 0xFFFF;
      }
      else {
        int v30 = v25[73];
      }
      if (v30 != a3)
      {
        if (v26 < 0x95) {
          int v41 = 0xFFFF;
        }
        else {
          int v41 = v25[74];
        }
        if (v41 != a3)
        {
LABEL_80:
          long long v55 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
          TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v55);

          return;
        }
        goto LABEL_69;
      }
      goto LABEL_48;
    }
LABEL_27:
    id v29 = v85;
LABEL_70:
    *(_DWORD *)a4 = 1;
    long long v51 = *(void **)(a4 + 8);
    *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;

    *(void *)(a4 + 16) = v29;
    return;
  }
  if (v10 != 16) {
    goto LABEL_33;
  }
  if (sub_420DC((uint64_t)a2 + 64, this[1]))
  {
    id v14 = this[1];
    uint64_t v80 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
    unsigned int v15 = [v14 tui_hasProperty:v80];
    id v16 = (void *)v80;
    if (v15)
    {
      uint64_t v17 = [this[1] tui_valueForProperty:v80];
      *(_DWORD *)a4 = 16;
      objc_storeStrong(v8, v17);

      goto LABEL_62;
    }
  }
  else
  {
    id v16 = 0;
  }
  int v10 = *(_DWORD *)this;
  if (*(_DWORD *)this != 16)
  {
    id v81 = v16;
LABEL_33:
    if (v10 == 18)
    {
      id v35 = this[1];
      if (v35)
      {
        id v36 = v35;
        while (1)
        {
          uint64_t v37 = sub_421D8([v36 value], a3);
          uint64_t v38 = v37;
          if (v37) {
            break;
          }
          uint64_t v39 = [v36 basedOn];

          id v36 = (void *)v39;
          if (!v39) {
            goto LABEL_41;
          }
        }
        *(_DWORD *)a4 = *(_DWORD *)v37;
        objc_storeStrong(v8, *(id *)(v37 + 8));
        *(void *)(a4 + 16) = *(void *)(v38 + 16);
      }
      else
      {
LABEL_41:
        id v36 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v36);
      }
      goto LABEL_90;
    }
    if (v10 == 17)
    {
      long long v32 = *(unsigned __int16 **)(v9 + 40);
      unint64_t v33 = *(void *)(v9 + 48) - (void)v32;
      if (v33 < 0x7D) {
        int v34 = 0xFFFF;
      }
      else {
        int v34 = v32[62];
      }
      if (v34 == a3)
      {
        id v42 = this[1];
        id v43 = *((id *)a2 + 73);
        long long v44 = [v42 mappedSpecIfNeededWithEnvironment:v43];

        [v44 scale];
LABEL_84:
        uint64_t v58 = v45;
        *(_DWORD *)a4 = 1;
        long long v59 = *(void **)(a4 + 8);
        *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;

        *(void *)(a4 + 16) = v58;
LABEL_92:
        long long v49 = v81;
        goto LABEL_93;
      }
      if (v33 < 0x81) {
        int v46 = 0xFFFF;
      }
      else {
        int v46 = v32[64];
      }
      if (v46 == a3)
      {
        id v52 = this[1];
        id v53 = *((id *)a2 + 73);
        long long v44 = [v52 mappedSpecIfNeededWithEnvironment:v53];

        [v44 leading];
        goto LABEL_84;
      }
      if (v33 < 0xD1) {
        int v54 = 0xFFFF;
      }
      else {
        int v54 = v32[104];
      }
      if (v54 == a3)
      {
        id v56 = this[1];
        id v57 = *((id *)a2 + 73);
        long long v44 = [v56 mappedSpecIfNeededWithEnvironment:v57];

        [v44 pointSize];
        goto LABEL_84;
      }
    }
LABEL_85:
    if (TUI::Evaluation::ResolvedValue::isConvertibleToKind(this, 11, a2))
    {
      long long v60 = TUI::Evaluation::ResolvedValue::colorValue(this, a2);
      long long v61 = v60;
      uint64_t v62 = *(unsigned __int16 **)(v9 + 40);
      unint64_t v63 = *(void *)(v9 + 48) - (void)v62;
      if (v63 < 0x4D) {
        int v64 = 0xFFFF;
      }
      else {
        int v64 = v62[38];
      }
      if (v64 == a3)
      {
        uint64_t v82 = 0;
        [v60 getRed:&v82 green:0 blue:0 alpha:0];
      }
      else
      {
        if (v63 < 0x4F) {
          int v69 = 0xFFFF;
        }
        else {
          int v69 = v62[39];
        }
        if (v69 == a3)
        {
          uint64_t v82 = 0;
          [v60 getRed:0 green:&v82 blue:0 alpha:0];
        }
        else
        {
          if (v63 < 0x51) {
            int v70 = 0xFFFF;
          }
          else {
            int v70 = v62[40];
          }
          if (v70 == a3)
          {
            uint64_t v82 = 0;
            [v60 getRed:0 green:0 blue:&v82 alpha:0];
          }
          else
          {
            if (v63 < 0x53) {
              int v71 = 0xFFFF;
            }
            else {
              int v71 = v62[41];
            }
            if (v71 == a3)
            {
              uint64_t v82 = 0x3FF0000000000000;
              [v60 getRed:0 green:0 blue:0 alpha:&v82];
            }
            else
            {
              if (v63 < 0x79) {
                int v72 = 0xFFFF;
              }
              else {
                int v72 = v62[60];
              }
              if (v72 != a3)
              {
                if (v63 < 0xD3) {
                  int v73 = 0xFFFF;
                }
                else {
                  int v73 = v62[105];
                }
                if (v73 == a3)
                {
                  id v74 = *((id *)a2 + 73);
                  unint64_t v75 = [v74 traitCollection];
                  uint64_t v76 = sub_4225C(v61, v75, 1);
                }
                else
                {
                  if (v63 < 0xD5) {
                    int v77 = 0xFFFF;
                  }
                  else {
                    int v77 = v62[106];
                  }
                  if (v77 != a3)
                  {
                    uint64_t v79 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
                    TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v79);

                    goto LABEL_120;
                  }
                  id v74 = *((id *)a2 + 73);
                  unint64_t v75 = [v74 traitCollection];
                  uint64_t v76 = sub_4225C(v61, v75, 2);
                }
                LODWORD(v85) = 11;
                id v86 = v76;
                id v78 = v76;
                sub_4209C(a4, (uint64_t)&v85);

LABEL_120:
                return;
              }
              uint64_t v82 = 0;
              [v60 getHue:0 saturation:0 brightness:&v82 alpha:0];
            }
          }
        }
      }
      LODWORD(v85) = 1;
      id v86 = 0;
      uint64_t v87 = (void *)v82;
      sub_4209C(a4, (uint64_t)&v85);

      goto LABEL_120;
    }
    if (*(_DWORD *)this != 16)
    {
      uint64_t v68 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v68);

      goto LABEL_92;
    }
    uint64_t v65 = (objc_class *)objc_opt_class();
    id v36 = NSStringFromClass(v65);
    unsigned int v66 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
    long long v67 = +[NSString stringWithFormat:@"%@.%@", v36, v66];
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1024, v67);

LABEL_90:
    goto LABEL_92;
  }
  if (this[1])
  {
    id v81 = v16;
    goto LABEL_85;
  }
  *(_DWORD *)a4 = 16;
  long long v48 = *(void **)(a4 + 8);
  *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;
  uint64_t v80 = (uint64_t)v16;

LABEL_62:
  long long v49 = (void *)v80;
LABEL_93:
}

void sub_41F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_4209C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  objc_storeStrong((id *)(a1 + 8), *(id *)(a2 + 8));
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

BOOL sub_420DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (_NSIsNSDictionary() & 1) != 0 || (_NSIsNSArray())
  {
    BOOL v4 = 1;
  }
  else if (v3)
  {
    unint64_t v10 = objc_opt_class();
    uint64_t v6 = (void *)(a1 + 8);
    unint64_t v7 = sub_417C(v6, &v10);
    if (v7)
    {
      BOOL v4 = *((unsigned char *)v7 + 24) != 0;
    }
    else
    {
      uint64_t v8 = TUIProtocolCast(&OBJC_PROTOCOL___TUIPropertyAccessing, v3);

      long long v11 = (uint64_t *)&v10;
      uint64_t v9 = sub_42B9C((uint64_t)v6, &v10, (uint64_t)&std::piecewise_construct, &v11);
      BOOL v4 = v8 != 0;
      *((unsigned char *)v9 + 24) = v4;
    }
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_421C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_421D8(void *a1, unsigned int a2)
{
  uint64_t v2 = (*(uint64_t (**)(void, unint64_t))(*(void *)*a1 + 8))(*a1, (unint64_t)a2 << 16);
  if (v3 == -1) {
    return 0;
  }
  BOOL v4 = *(uint64_t (**)(void))(*(void *)v2 + 32);

  return v4();
}

id sub_4225C(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v15 = 0;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = sub_42DC0;
  uint64_t v19 = sub_42DD0;
  id v7 = v5;
  id v20 = v7;
  if (v6)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_42DD8;
    double v14[3] = &unk_252950;
    v14[4] = a3;
    uint64_t v8 = [v6 traitCollectionByModifyingTraits:v14];
    if (v8)
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_42DE4;
      v11[3] = &unk_252978;
      int v13 = &v15;
      id v12 = v7;
      [v8 performAsCurrentTraitCollection:v11];
    }
  }
  id v9 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  return v9;
}

void sub_423F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::ResolvedValue::testProperty(TUI::Evaluation::ResolvedValue *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  id v38 = 0;
  uint64_t v8 = *((void *)a2 + 70);
  int v9 = *(_DWORD *)this;
  if (*(int *)this <= 13)
  {
    if (v9 == 3)
    {
      long long v25 = *(unsigned __int16 **)(v8 + 40);
      unint64_t v26 = *(void *)(v8 + 48) - (void)v25;
      if (v26)
      {
        if (*v25 == a3) {
          goto LABEL_59;
        }
        if (v26 < 3) {
          goto LABEL_62;
        }
        int v27 = v25[1];
      }
      else
      {
        int v27 = 0xFFFF;
        if (a3 == 0xFFFF) {
          goto LABEL_59;
        }
      }
LABEL_63:
      id v10 = 0;
      BOOL v14 = v27 == a3;
      goto LABEL_77;
    }
    if (v9 != 4) {
      goto LABEL_46;
    }
    id v16 = *(unsigned __int16 **)(v8 + 40);
    unint64_t v17 = *(void *)(v8 + 48) - (void)v16;
    if (v17 < 5) {
      int v18 = 0xFFFF;
    }
    else {
      int v18 = v16[2];
    }
    if (v18 != a3)
    {
      int v28 = v17 < 7 ? 0xFFFF : v16[3];
      if (v28 != a3)
      {
        int v30 = v17 < 9 ? 0xFFFF : v16[4];
        if (v30 != a3)
        {
          if (v17 >= 0xB)
          {
            int v27 = v16[5];
            goto LABEL_63;
          }
          goto LABEL_62;
        }
      }
    }
LABEL_59:
    id v10 = 0;
    BOOL v14 = 1;
    goto LABEL_77;
  }
  if (v9 == 14)
  {
    uint64_t v19 = *(unsigned __int16 **)(v8 + 40);
    unint64_t v20 = *(void *)(v8 + 48) - (void)v19;
    if (v20 < 0x91) {
      int v21 = 0xFFFF;
    }
    else {
      int v21 = v19[72];
    }
    if (v21 != a3)
    {
      int v29 = v20 < 0x93 ? 0xFFFF : v19[73];
      if (v29 != a3)
      {
        if (v20 >= 0x95)
        {
          int v27 = v19[74];
          goto LABEL_63;
        }
LABEL_62:
        int v27 = 0xFFFF;
        goto LABEL_63;
      }
    }
    goto LABEL_59;
  }
  if (v9 == 16)
  {
    if (sub_420DC((uint64_t)a2 + 64, *((void **)this + 1)))
    {
      double v22 = (void *)*((void *)this + 1);
      uint64_t v23 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      if (objc_msgSend(v22, "tui_hasProperty:", v23))
      {
        int v24 = [*((id *)this + 1) tui_valueForProperty:v23];
        BOOL v14 = v24 != 0;

        id v10 = (id)v23;
        goto LABEL_77;
      }
      id v38 = (id)v23;
    }
    else
    {
      id v38 = 0;
    }
    goto LABEL_46;
  }
  if (v9 != 18)
  {
LABEL_46:
    BOOL v14 = 0;
    if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((void **)this, 11, a2))
    {
      id v31 = *(unsigned __int16 **)(v8 + 40);
      unint64_t v32 = *(void *)(v8 + 48) - (void)v31;
      int v33 = v32 < 0x4D ? 0xFFFF : v31[38];
      if (v33 == a3
        || (v32 < 0x4F ? (int v34 = 0xFFFF) : (int v34 = v31[39]),
            v34 == a3
         || (v32 < 0x51 ? (int v35 = 0xFFFF) : (int v35 = v31[40]),
             v35 == a3
          || (v32 < 0x53 ? (int v36 = 0xFFFF) : (int v36 = v31[41]),
              v36 == a3 || (v32 < 0x79 ? (int v37 = 0xFFFF) : (int v37 = v31[60]), v37 == a3)))))
      {
        BOOL v14 = 1;
      }
    }
    id v10 = v38;
    goto LABEL_77;
  }
  id v10 = *((id *)this + 1);
  if (v10)
  {
    unint64_t v11 = (unint64_t)a3 << 16;
    while (1)
    {
      id v39 = v10;
      id v12 = [v10 value];
      (*(void (**)(void, unint64_t))(*(void *)*v12 + 8))(*v12, v11);
      BOOL v14 = v13 != -1;
      if (v13 != -1) {
        break;
      }
      uint64_t v15 = [v39 basedOn];

      id v10 = (id)v15;
      if (!v15) {
        goto LABEL_36;
      }
    }
    id v10 = v39;
LABEL_36:

    id v10 = 0;
  }
  else
  {
    BOOL v14 = 0;
  }
LABEL_77:
  *(_DWORD *)a4 = 12;
  *(void *)(a4 + sub_3BD4((uint64_t)this + 8) = 0;
  *(unsigned char *)(a4 + 16) = v14;
}

void sub_427B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::operator==(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  switch(*(_DWORD *)a1)
  {
    case 1:
      BOOL v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16);
      goto LABEL_13;
    case 2:
    case 7:
      BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16);
      goto LABEL_13;
    case 3:
    case 4:
    case 5:
    case 9:
    case 0xA:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      uint64_t v2 = *(void **)(a1 + 8);
      if (v2 == *(void **)(a2 + 8)) {
        goto LABEL_5;
      }
      uint64_t result = [v2 isEqual:];
      break;
    case 6:
      int v5 = *(unsigned __int16 *)(a1 + 16);
      int v6 = *(unsigned __int16 *)(a2 + 16);
      goto LABEL_12;
    case 8:
      if (*(unsigned __int16 *)(a1 + 16) != *(unsigned __int16 *)(a2 + 16)) {
        return 0;
      }
      int v5 = *(unsigned __int16 *)(a1 + 18);
      int v6 = *(unsigned __int16 *)(a2 + 18);
      goto LABEL_12;
    case 0xC:
      int v5 = *(unsigned __int8 *)(a1 + 16);
      int v6 = *(unsigned __int8 *)(a2 + 16);
LABEL_12:
      BOOL v4 = v5 == v6;
LABEL_13:
      uint64_t result = v4;
      break;
    default:
LABEL_5:
      uint64_t result = 1;
      break;
  }
  return result;
}

void sub_429DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_42A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_42AA4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + sub_3BD4((uint64_t)this + 8) = v4;
  *(void *)(a1 + 16) = v3;
  if (v5) {
    sub_123E4(v5);
  }
  return a1;
}

void *sub_42B9C(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    id v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  unint64_t v11 = operator new(0x20uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  v11[2] = **a4;
  *((unsigned char *)v11 + 24) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_3ED8(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  unint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *unint64_t v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *unint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    unint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_42DAC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_42DC0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_42DD0(uint64_t a1)
{
}

id sub_42DD8(uint64_t a1, void *a2)
{
  return [a2 setUserInterfaceStyle:*(void *)(a1 + 32)];
}

void sub_42DE4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)UIColor) initWithCGColor:[*(id *)(a1 + 32) CGColor]];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  unint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

BOOL TUICGFloatIsEqualFloatOrBothNaN(double a1, double a2)
{
  return a1 == a2;
}

BOOL TUICGFloatIsEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3;
}

BOOL TUICGFloatIsLessThanOrEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3 || a1 < a2;
}

BOOL TUICGFloatIsGreaterThanOrEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3 || a1 > a2;
}

BOOL TUICGFloatIsAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001;
}

BOOL TUICGFloatIsLessThanOrAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001 || a1 < a2;
}

BOOL TUICGFloatIsGreaterThanOrAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001 || a1 > a2;
}

void sub_4344C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_43470(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addTransactionAndProcess:*(void *)(a1 + 32)];
}

id sub_434C0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isCommitted];
  if ((result & 1) == 0)
  {
    id v3 = objc_alloc((Class)NSException);
    uint64_t v4 = *(void *)(a1 + 40);
    CFStringRef v7 = @"callstack";
    uint64_t v8 = v4;
    int v5 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
    id v6 = [v3 initWithName:@"UncommittedTransaction" reason:@"Transaction was scheduled but not committed in timely fashion (after 0.2s)" userInfo:v5];

    objc_exception_throw(v6);
  }
  return result;
}

void sub_436CC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_436E4(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(void *)(v2 + 56)) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = [*(id *)(v2 + 24) count] == 0;
  }
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v3;
  uint64_t v4 = a1[5];
  int v5 = *(void **)(a1[4] + 24);

  return [v5 addObject:v4];
}

id sub_4374C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _lq_processPendingTransactions];
}

uint64_t sub_43864(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_43874(uint64_t a1)
{
}

void sub_4387C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _aq_instanceForTransaction:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_43964(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:*(void *)(a1 + 40)];
}

id sub_43B80(id *a1)
{
  id v2 = [a1[4] _aq_instanceForTransaction:a1[5]];
  id v3 = a1[5];
  uint64_t v4 = [*((id *)a1[4] + 5) dependencyToken];
  [v3 dependentOn:v4];

  objc_storeStrong((id *)a1[4] + 5, a1[5]);
  ++*((void *)a1[4] + 7);
  int v5 = TUITransactionLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v6 = a1[4];
    uint64_t v7 = v6[12];
    uint64_t v8 = v6[5];
    *(_DWORD *)buf = 134218242;
    uint64_t v26 = v7;
    __int16 v27 = 2114;
    uint64_t v28 = v8;
    _os_log_impl(&def_141F14, v5, OS_LOG_TYPE_INFO, "[fid:%lu] scheduling sync transaction: %{public}@", buf, 0x16u);
  }

  uint8x8_t v9 = [a1[6] options];
  unsigned __int8 v10 = [v9 flags];

  if ((v10 & 8) != 0)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v11 = *((id *)a1[4] + 3);
    id v12 = [v11 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v21;
      do
      {
        BOOL v15 = 0;
        do
        {
          if (*(void *)v21 != v14) {
            objc_enumerationMutation(v11);
          }
          id v16 = *(id *)(*((void *)&v20 + 1) + 8 * (void)v15);
          if (a1[6] != v16)
          {
            id v17 = a1[5];
            size_t v18 = [v16 dependencyToken:v20];
            [v17 dependentOn:v18];
          }
          BOOL v15 = (char *)v15 + 1;
        }
        while (v13 != v15);
        id v13 = [v11 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }
      while (v13);
    }
  }
  return [*((id *)a1[4] + 3) addObject:a1[5]];
}

id sub_43D90(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_lq_processPendingTransactions");
}

uint64_t sub_43EB8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_443AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_443E8(void *a1)
{
  if ([*(id *)(a1[4] + 48) containsTransaction:a1[5]])
  {
    objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), *(id *)(a1[4] + 48));
    if (a1[5] == *(void *)(a1[4] + 40))
    {
      id v2 = TUITransactionLog();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        uint64_t v3 = a1[4];
        uint64_t v4 = *(void *)(v3 + 96);
        uint64_t v5 = *(void *)(v3 + 40);
        int v8 = 134218242;
        uint64_t v9 = v4;
        __int16 v10 = 2114;
        uint64_t v11 = v5;
        _os_log_impl(&def_141F14, v2, OS_LOG_TYPE_INFO, "[fid:%lu] clearing sync transaction: %{public}@", (uint8_t *)&v8, 0x16u);
      }

      uint64_t v6 = a1[4];
      uint64_t v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = 0;
    }
  }
}

id sub_444EC(void *a1)
{
  id v2 = [*(id *)(a1[4] + 32) indexOfObjectIdenticalTo:*(void *)(*(void *)(a1[6] + 8) + 40)];
  uint64_t v3 = a1[5];
  uint64_t v4 = *(void **)(a1[4] + 32);
  if (v2 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    return [v4 addObject:v3];
  }
  else
  {
    return [v4 insertObject:v3 atIndex:];
  }
}

void *sub_44568(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 56);
  if (v2)
  {
    *(void *)(v1 + 56) = v2 - 1;
    uint64_t v3 = result[4];
    if (!*(void *)(v3 + 56)) {
      return [*(id *)(v3 + 8) setSynchronousTransactionInProgress:0];
    }
  }
  return result;
}

id sub_44598(uint64_t a1)
{
  return [*(id *)(a1 + 32) _lq_processPendingTransactions];
}

void sub_447C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_447E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _aq_instanceForTransaction:*(void *)(a1 + 40)];
  [v2 _aq_appendLayoutBlock:*(void *)(a1 + 56)];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = *(void *)(*(void *)(a1 + 32) + 56) != 0;
  uint64_t v3 = [*(id *)(a1 + 48) options];
  unsigned __int8 v4 = [v3 flags];

  if ((v4 & 8) != 0)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = *(id *)(*(void *)(a1 + 32) + 24);
    id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v14;
      do
      {
        uint64_t v9 = 0;
        do
        {
          if (*(void *)v14 != v8) {
            objc_enumerationMutation(v5);
          }
          __int16 v10 = *(void **)(*((void *)&v13 + 1) + 8 * (void)v9);
          uint64_t v11 = *(void **)(a1 + 40);
          if (v11 != v10)
          {
            id v12 = [v10 dependencyToken:v13];
            [v11 dependentOn:v12];
          }
          uint64_t v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v7);
    }
  }
}

id sub_44964(uint64_t a1)
{
  return [*(id *)(a1 + 32) _lq_processPendingTransactions];
}

void sub_455F8(_Unwind_Exception *a1)
{
}

void sub_456D8(void *a1)
{
  id v2 = [*(id *)(a1[4] + 24) copy];
  uint64_t v3 = *(void *)(a1[5] + 8);
  unsigned __int8 v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), *(id *)(a1[4] + 40));
  uint64_t v5 = a1[4];
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = 0;

  *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = *(void *)(a1[4] + 56) != 0;
  if (*(void *)(*(void *)(a1[6] + 8) + 40))
  {
    id v7 = TUITransactionLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1[4] + 96);
      uint64_t v9 = *(void *)(*(void *)(a1[6] + 8) + 40);
      int v10 = 134218242;
      uint64_t v11 = v8;
      __int16 v12 = 2114;
      uint64_t v13 = v9;
      _os_log_impl(&def_141F14, v7, OS_LOG_TYPE_INFO, "[fid:%lu] picked up sync transaction for processing: %{public}@", (uint8_t *)&v10, 0x16u);
    }
  }
}

intptr_t sub_45810(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_45818(id a1, _TUITransaction *a2, unint64_t a3, BOOL *a4)
{
  return (~[(_TUITransaction *)a2 flags] & 3) == 0;
}

void sub_45840(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*(void *)(a1 + 40) + 24) removeObject:*(void *)(*((void *)&v12 + 1) + 8 * (void)v6) v12];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v4);
  }

  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v10 = a1 + 40;
    uint64_t v9 = *(void *)(a1 + 40);
    id v11 = *(id *)(v10 + 8);
    uint64_t v8 = *(void **)(v9 + 48);
    *(void *)(v9 + sub_3BD4((uint64_t)this + 48) = v11;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void **)(v7 + 48);
    *(void *)(v7 + sub_3BD4((uint64_t)this + 48) = 0;
  }
}

void sub_45FC0(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) removeCompletionDeferral:(void)v6];
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_460AC(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  if (v1 == *(void **)(v2 + 48))
  {
    *(void *)(v2 + sub_3BD4((uint64_t)this + 48) = 0;
  }
}

id sub_460CC(uint64_t a1)
{
  [*(id *)(a1 + 32) _invokeHandlersForUpdatesApplied];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _invokeCompletions];
}

void sub_46340(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_46364(void *a1)
{
  if (![*(id *)(a1[4] + 32) count]) {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
  }
  uint64_t v2 = a1[4];
  id v3 = (void *)a1[5];
  if (v3 == *(void **)(v2 + 48))
  {
    *(void *)(v2 + sub_3BD4((uint64_t)this + 48) = 0;

    uint64_t v2 = a1[4];
  }
  if (*(unsigned char *)(v2 + 81))
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 0;
    uint64_t v2 = a1[4];
  }
  uint64_t v4 = *(void **)(v2 + 32);
  uint64_t v5 = a1[5];

  return [v4 addObject:v5];
}

id sub_463F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyQueuedTransactionGroupsCheckForSync:*(unsigned __int8 *)(a1 + 40)];
}

void sub_466FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_46730(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
  if (result)
  {
    *(void *)&long long v3 = 134218242;
    long long v9 = v3;
    do
    {
      uint64_t v4 = *(void *)(a1 + 32);
      if (*(void *)(v4 + 64))
      {
        if (!*(unsigned char *)(a1 + 48)) {
          return result;
        }
        id result = [*(id *)(v4 + 32) indexOfObjectPassingTest:&stru_252B00];
        if (result == (id)0x7FFFFFFFFFFFFFFFLL) {
          return result;
        }
        uint64_t v4 = *(void *)(a1 + 32);
      }
      uint64_t v5 = [*(id *)(v4 + 32) firstObject];
      [*(id *)(*(void *)(a1 + 32) + 32) removeObjectAtIndex:0];
      long long v6 = TUITransactionLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 96);
        *(_DWORD *)buf = v9;
        uint64_t v12 = v7;
        __int16 v13 = 2114;
        long long v14 = v5;
        _os_log_impl(&def_141F14, v6, OS_LOG_TYPE_INFO, "[fid:%lu] dequeue group %{public}@", buf, 0x16u);
      }

      [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v5];
      long long v8 = [v5 options];
      if (([v8 flags] & 4) != 0)
      {
        if ([v8 animate])
        {
          ++*(void *)(*(void *)(a1 + 32) + 64);
          v10[0] = _NSConcreteStackBlock;
          v10[1] = 3221225472;
          void v10[2] = sub_46970;
          void v10[3] = &unk_251990;
          v10[4] = *(void *)(a1 + 32);
          [v5 addCompletion:v10];
        }
      }

      id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
    }
    while (result);
  }
  return result;
}

BOOL sub_46940(id a1, TUITransactionGroup *a2, unint64_t a3, BOOL *a4)
{
  BOOL result = [(TUITransactionGroup *)a2 flags] & 1;
  *a4 = result;
  return result;
}

id sub_46970(uint64_t a1)
{
  return [*(id *)(a1 + 32) resumeUpdates];
}

void sub_46BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_46C20(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _aq_layoutBlocksToApply];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_46DB8(uint64_t a1)
{
}

void sub_46EA4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_470A8(_Unwind_Exception *a1)
{
  long long v6 = v5;

  _Unwind_Resume(a1);
}

void sub_4715C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_471E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_47294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4733C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_477D4(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_478AC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3) {
    *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = *(double *)(a1 + 40)
  }
                                                                + *(double *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                            + 24);
  double v6 = *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  double v7 = *(double *)(a1 + 48);
  id v9 = v5;
  [v5 setComputedWidth:*(double *)(a1 + 56)];
  [v9 computeLayoutWithOrigin:v7, v6];
  [v9 layoutSize];
  *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v8
                                                              + *(double *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                          + 24);
}

void sub_47958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_479D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_47AF0(id a1)
{
  v4[0] = @"n";
  v4[1] = @"inherit-from";
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:2];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF2C8;
  qword_2DF2C8 = v2;
}

id sub_48EB0(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 appendRenderOverrideObservers:*(void *)(a1 + 32)];
}

void sub_49C38(id a1)
{
  v4[0] = @"halign";
  v4[1] = @"vpivot";
  void v4[2] = @"halign";
  void v4[3] = @"vcompressed";
  v4[4] = @"estimated-width";
  v4[5] = @"estimated-height";
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:6];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF2D8;
  qword_2DF2D8 = v2;
}

void sub_49FC4(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"halign";
  v6[1] = @"layout-mode";
  uint64_t v3 = +[NSArray arrayWithObjects:v6 count:2];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF2E8;
  qword_2DF2E8 = (uint64_t)v4;
}

void sub_4A0EC(id a1)
{
  v4[0] = @"valign";
  v4[1] = @"hcompressed";
  void v4[2] = @"estimated-width";
  void v4[3] = @"estimated-height";
  v4[4] = @"estimated-height-above-pivot";
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:5];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF2F8;
  qword_2DF2F8 = v2;
}

void sub_4A648(uint64_t a1)
{
  uint64_t v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "superclass"), "supportedAttributes");
  id v2 = [v1 mutableCopy];

  uint64_t v3 = +[TUIAttributeSet supportedAttributesTextStyling];
  [v2 unionSet:v3];

  v6[0] = @"insets";
  v6[1] = @"text";
  void v6[2] = @"return-key-type";
  void v6[3] = @"cancel-text";
  double v6[4] = @"tint";
  void v6[5] = @"show-cancel-button";
  id v4 = +[NSArray arrayWithObjects:v6 count:6];
  [v2 addAttributesFromArray:v4];

  id v5 = (void *)qword_2DF308;
  qword_2DF308 = (uint64_t)v2;
}

void sub_4A7D8(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF318;
  qword_2DF318 = v2;
}

void sub_4AF4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_4AF70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  double v6 = (id *)(a1 + 96);
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v9 = [WeakRetained enabled];
  uint64_t v10 = *(void *)(a1 + 48);
  id v11 = objc_loadWeakRetained(v6);
  uint64_t v12 = [v11 identifier];
  LOBYTE(v15) = *(unsigned char *)(a1 + 144);
  +[TUISearchBarView renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:placeholderText:style:text:returnKeyType:keyboardAppearance:cancelText:showCancel:](TUISearchBarView, "renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:placeholderText:style:text:returnKeyType:keyboardAppearance:cancelText:showCancel:", v7, v4, v5, v9, v10, v12, *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 136), *(void *)(a1 + 88),
  __int16 v13 = v15);

  return v13;
}

void sub_4C26C(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v4 = [v1 mutableCopy];

  [v4 addAttributesFromArray:&__NSArray0__struct];
  id v2 = [v4 copy];
  uint64_t v3 = (void *)qword_2DF328;
  qword_2DF328 = (uint64_t)v2;
}

void sub_4C360(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF338;
  qword_2DF338 = v2;
}

void sub_4EA14(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSizeAndIntrinsic];
  id v2 = [v1 mutableCopy];

  v6[0] = @"background-color";
  v6[1] = @"chart-type";
  void v6[2] = @"color";
  void v6[3] = @"columns";
  double v6[4] = @"corner-radius";
  void v6[5] = @"font";
  void v6[6] = @"progress";
  void v6[7] = @"shadow-color";
  void v6[8] = @"spacing";
  void v6[9] = @"text";
  v6[10] = @"title";
  uint64_t v3 = +[NSArray arrayWithObjects:v6 count:11];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  uint64_t v5 = (void *)qword_2DF348;
  qword_2DF348 = (uint64_t)v4;
}

void sub_4EE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4EEAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4F540(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (([a3 hostedViewFlags] & 4) != 0) {
    [*(id *)(a1 + 32) addObject:v5];
  }
}

void sub_4F79C(id a1)
{
  id v3 = [objc_alloc((Class)UISwitch) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [v3 bounds];
  qword_2DF358 = v1;
  qword_2DF360 = v2;
}

void sub_50450(id a1, _TUIGuideInstance *a2, double a3)
{
}

id sub_516E4(uint64_t a1)
{
  [*(id *)(a1 + 32) _computeCurrentValue:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48);

  return [v2 setValue:];
}

id sub_5351C(void *a1, void *a2, int a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  id v10 = 0;
  if (v7 && v8 != v7)
  {
    id v11 = [v7 box];
    uint64_t v12 = [v11 refId];
    unsigned int v13 = [v12 isEqualToString:v9];

    if (v13)
    {
      id v10 = v7;
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v14 = [v7 children];
      id v15 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = *(void *)v24;
        while (2)
        {
          for (uint64_t i = 0; i != v16; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v24 != v17) {
              objc_enumerationMutation(v14);
            }
            uint64_t v19 = *(void **)(*((void *)&v23 + 1) + 8 * i);
            if (([v19 hidden] & 1) == 0)
            {
              uint64_t v20 = sub_5351C(v19, v8, 0, v9);
              if (v20)
              {
                id v10 = (id)v20;

                goto LABEL_18;
              }
            }
          }
          id v16 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
          if (v16) {
            continue;
          }
          break;
        }
      }

      if (a3)
      {
        long long v21 = [v7 layoutAncestor];
        sub_5351C(v21, v7, 1, v9);
        id v10 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v10 = 0;
      }
    }
  }
LABEL_18:

  return v10;
}

void sub_5384C(id a1)
{
  uint64_t v1 = (void *)qword_2DF370;
  qword_2DF370 = (uint64_t)&off_2685A0;
}

void sub_538F0(id a1)
{
  uint64_t v1 = (void *)qword_2DF380;
  qword_2DF380 = (uint64_t)&off_2685C8;
}

uint64_t TUI::Evaluation::Variables::Capture::_bitCheck(TUI::Evaluation::Variables::Capture *this, unint64_t a2)
{
  return (*(void *)(*((void *)this + 5) + ((a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1;
}

void TUI::Evaluation::Variables::Capture::create(void *a1@<X1>, void *a2@<X5>, void *a3@<X8>)
{
  id v5 = a1;
  id v6 = a2;
  *a3 = 0;
  a3[1] = 0;
  operator new();
}

void sub_53CC0()
{
}

void TUI::Evaluation::Variables::Capture::create(TUI::Evaluation::Variables::Capture *this@<X0>, void *a2@<X8>)
{
  if (this) {
    operator new();
  }
  TUI::Evaluation::Variables::Capture::emptyClosed(a2);
}

void sub_53D88(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void TUI::Evaluation::Variables::Capture::emptyClosed(void *a1@<X8>)
{
  if (qword_2DF3A0 != -1) {
    dispatch_once(&qword_2DF3A0, &stru_252DE8);
  }
  uint64_t v3 = qword_2DF398;
  *a1 = qword_2DF390;
  a1[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_53E2C(id a1)
{
}

void TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(void *a1@<X8>)
{
  if (qword_2DF3B8 != -1) {
    dispatch_once(&qword_2DF3B8, &stru_252E08);
  }
  uint64_t v3 = qword_2DF3B0;
  *a1 = qword_2DF3A8;
  a1[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_53F20(id a1)
{
}

void sub_53FB0()
{
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)a1 = off_252E38;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = off_252EF8;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  objc_storeWeak((id *)(a1 + 32), 0);
  return a1;
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, void *a2, void *a3, int a4, int a5)
{
  id v9 = a2;
  id v10 = a3;
  *(void *)a1 = off_252E38;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = off_252EF8;
  id v11 = v9;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = malloc_type_malloc(8uLL, 0x100004000313F17uLL);
  objc_storeWeak((id *)(a1 + 32), v10);
  uint64_t v12 = *(void **)(a1 + 40);
  bzero(v12, 8uLL);
  if (a4) {
    *v12 |= 1uLL;
  }
  if (a5) {
    *v12 |= 2uLL;
  }

  return a1;
}

void sub_54150(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, unsigned int *a2, void *a3, int a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  id v13 = a3;
  id v14 = a7;
  *(void *)a1 = off_252E38;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = off_252EF8;
  id v15 = v14;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = v15;
  int v16 = (a2[1] & 0xFFF) + (a2[3] & 0xFFF);
  int v17 = (a2[4] & 0xFFF) + (a2[5] & 0xFFF) + (a2[2] & 0xFFF);
  size_t v18 = 40 * (a2[6] & 0xFFF)
      + 48 * v16
      + 32 * v17
      + ((24 * (*a2 & 0xFFF) + (((a2[6] & 0xFFF) + v16 + v17 + (*a2 & 0xFFF) + 65) >> 3)) & 0x3FFFFFF8);
  *(void *)(a1 + 24) = a2;
  objc_storeWeak((id *)(a1 + 32), v13);
  uint64_t v19 = malloc_type_malloc(v18, 0xA9E8B90CuLL);
  uint64_t v173 = a1 + 32;
  uint64_t v190 = v13;
  *(void *)(a1 + 40) = v19;
  bzero(v19, (((a2[6] & 0xFFF)+ (unint64_t)((*a2 & 0xFFF)+ (a2[1] & 0xFFF)+ (a2[2] & 0xFFF)+ (a2[3] & 0xFFF)+ (a2[4] & 0xFFF)+ (a2[5] & 0xFFF)+ 2)+ 63) >> 3) & 0x3FFFFFF8);
  if (a4) {
    *v19 |= 1uLL;
  }
  uint64_t v212 = v19;
  uint64_t v191 = a2;
  uint64_t v192 = a1;
  uint64_t v20 = *(unsigned int **)(a1 + 24);
  unint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  unsigned int v23 = v20[2];
  unsigned int v24 = v20[3];
  unsigned int v25 = v20[5];
  unsigned int v193 = v20[4];
  unsigned int v197 = v20[6];
  unint64_t v26 = *a2;
  id v204 = v15;
  __int16 v27 = [v204 packageBuffer:v173 count:v15];
  uint64_t v28 = v26 & 0xFFF;
  if ((v26 & 0xFFF) != 0)
  {
    int v29 = v27;
    uint64_t v30 = 0;
    unint64_t v31 = (((v197 & 0xFFF)
          + (v21 & 0xFFF)
          + (v22 & 0xFFF)
          + (v23 & 0xFFF)
          + (v24 & 0xFFF)
          + (v193 & 0xFFF)
          + (v25 & 0xFFF)
          + 2
          + 63) >> 3) & 0x3FFFFFF8;
    unint64_t v32 = v26 >> 12;
    int v33 = (void *)((char *)v212 + v31 + 16);
    uint64_t v34 = 4 * (v26 >> 12);
    do
    {
      if (v29[43] <= v32 + v30) {
        int v35 = 0;
      }
      else {
        int v35 = (unsigned int *)(v34 + v29[42]);
      }
      uint64_t v36 = *v35;
      unint64_t v21 = v36 | v21 & 0xFFFFFFFF00000000;
      uint64_t v37 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 8))(a6, v21);
      if (a5)
      {
        if (v38 != -1) {
          goto LABEL_12;
        }
        unint64_t v22 = v36 | v22 & 0xFFFFFFFF00000000;
        uint64_t v37 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a5 + 8))(a5, v22);
      }
      if (v38 != -1)
      {
LABEL_12:
        *(void *)((char *)v212 + (((unint64_t)(v30 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v30 + 2);
        uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 32))(v37);
        *((_DWORD *)v33 - 4) = *(_DWORD *)v39;
        *(v33 - 1) = *(id *)(v39 + 8);
        *int v33 = *(void *)(v39 + 16);
      }
      ++v30;
      v33 += 3;
      v34 += 4;
    }
    while (v28 != v30);
  }

  int v40 = *(int **)(v192 + 24);
  int v41 = *v40;
  unint64_t v42 = v40[1];
  int v43 = v40[2];
  int v44 = v40[3];
  int v45 = v40[5];
  int v194 = v40[4];
  int v198 = v40[6];
  int v47 = *v191;
  unint64_t v46 = v191[1];
  id v205 = v204;
  long long v48 = [v205 packageBuffer];
  unint64_t v49 = v46 & 0xFFF;
  if ((v46 & 0xFFF) != 0)
  {
    int v50 = v48;
    unint64_t v51 = (v47 & 0xFFF) + 2;
    uint64_t v52 = ((((v198 & 0xFFF)
                         + (v41 & 0xFFF)
                         + (v42 & 0xFFF)
                         + (v43 & 0xFFF)
                         + (v44 & 0xFFFu)
                         + (v194 & 0xFFF)
                         + (v45 & 0xFFFu)
                         + 2
                         + 63) >> 3)
         + 24 * (v41 & 0xFFF)) & 0x7FFFFFF8;
    unint64_t v53 = v46 >> 12;
    int v54 = (TUI::Evaluation::Enumerator::State *)((char *)v212 + v52);
    uint64_t v55 = 4 * (v46 >> 12);
    do
    {
      if (v50[43] <= v53) {
        id v56 = 0;
      }
      else {
        id v56 = (unsigned int *)(v55 + v50[42]);
      }
      uint64_t v57 = *v56;
      unint64_t v46 = v57 | v46 & 0xFFFFFFFF00000000;
      uint64_t v58 = (**(uint64_t (***)(uint64_t, unint64_t))a6)(a6, v46);
      if (a5)
      {
        if (v59 != -1) {
          goto LABEL_23;
        }
        unint64_t v42 = v57 | v42 & 0xFFFFFFFF00000000;
        uint64_t v58 = (**(uint64_t (***)(uint64_t, unint64_t))a5)(a5, v42);
      }
      if (v59 != -1)
      {
LABEL_23:
        *(void *)((char *)v212 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
        long long v60 = (const TUI::Evaluation::Enumerator::State *)(*(uint64_t (**)(uint64_t))(*(void *)v58 + 16))(v58);
        TUI::Evaluation::Enumerator::State::State(v54, v60);
      }
      int v54 = (TUI::Evaluation::Enumerator::State *)((char *)v54 + 48);
      ++v51;
      v55 += 4;
      ++v53;
      --v49;
    }
    while (v49);
  }

  int v62 = *v191;
  unsigned int v61 = v191[1];
  unint64_t v63 = *(int **)(v192 + 24);
  int v64 = v63[1];
  int v185 = *v63;
  unint64_t v65 = v63[2];
  int v66 = v63[3];
  int v67 = v63[4];
  int v68 = v63[5];
  unint64_t v199 = v63[6];
  unint64_t v69 = v191[2];
  unint64_t v195 = (unint64_t)v205;
  uint64_t v206 = [(id)v195 packageBuffer];
  uint64_t v70 = v69 & 0xFFF;
  if ((v69 & 0xFFF) != 0)
  {
    unint64_t v71 = (v62 & 0xFFF) + (v61 & 0xFFF) + 2;
    uint64_t v72 = ((((v199 & 0xFFF)
                         + (v64 & 0xFFF)
                         + (v185 & 0xFFF)
                         + (v65 & 0xFFF)
                         + (v66 & 0xFFF)
                         + (v67 & 0xFFF)
                         + (v68 & 0xFFFu)
                         + 2
                         + 63) >> 3)
         + 24 * (v185 & 0xFFF)) & 0x7FFFFFF8;
    unint64_t v73 = v69 >> 12;
    id v74 = (_OWORD *)((char *)&v212[6 * (v64 & 0xFFF) + 2] + v72);
    uint64_t v75 = 4 * (v69 >> 12);
    do
    {
      if (v206[43] <= v73) {
        uint64_t v76 = 0;
      }
      else {
        uint64_t v76 = (unsigned int *)(v75 + v206[42]);
      }
      uint64_t v77 = *v76;
      unint64_t v65 = v77 | v65 & 0xFFFFFFFF00000000;
      uint64_t v79 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 16))(a6, v65);
      uint64_t v80 = v78;
      if (a5)
      {
        if (v78 != -1) {
          goto LABEL_34;
        }
        unint64_t v199 = v77 | v199 & 0xFFFFFFFF00000000;
        uint64_t v79 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 16))(a5);
        uint64_t v80 = v81;
      }
      if (v80 != -1)
      {
LABEL_34:
        *(void *)((char *)v212 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
        uint64_t v82 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v79 + 40))(v79, v80);
        (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(*(void *)v79 + 80))(v218, v79, v80);
        *((void *)v74 - 2) = v82;
        *((_DWORD *)v74 - 2) = *(_DWORD *)v218;
        *id v74 = *(_OWORD *)&v218[8];
      }
      v74 += 2;
      ++v71;
      v75 += 4;
      ++v73;
      --v70;
    }
    while (v70);
  }

  int v84 = *v191;
  unsigned int v83 = v191[1];
  uint64_t v85 = *(int **)(v192 + 24);
  int v86 = v85[2];
  int v177 = *v85;
  int v181 = v85[1];
  int v87 = v85[3];
  int v88 = v85[4];
  int v89 = v85[5];
  int v186 = v85[6];
  unint64_t v91 = v191[2];
  unint64_t v90 = v191[3];
  id v200 = (id)v195;
  uint64_t v207 = [v200 packageBuffer];
  uint64_t v92 = v90 & 0xFFF;
  if ((v90 & 0xFFF) != 0)
  {
    unint64_t v93 = (v84 & 0xFFF) + (v83 & 0xFFF) + (v91 & 0xFFF) + 2;
    int v94 = v181 & 0xFFF;
    uint64_t v95 = ((((v186 & 0xFFF)
                         + (unint64_t)((v86 & 0xFFF)
                                            + v94
                                            + (v177 & 0xFFF)
                                            + (v87 & 0xFFF)
                                            + (v88 & 0xFFF)
                                            + (v89 & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (v177 & 0xFFF)) & 0x7FFFFFF8;
    unint64_t v96 = v90 >> 12;
    uint64_t v97 = 4 * (v90 >> 12);
    uint64_t v98 = (_OWORD *)((char *)&v212[6 * v94 + 4 + 4 * (v86 & 0xFFFu)] + v95);
    do
    {
      uint64_t v99 = *(unsigned int *)(v97 + v207[42]);
      unint64_t v91 = v99 | v91 & 0xFFFFFFFF00000000;
      uint64_t v101 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 24))(a6, v91);
      uint64_t v102 = v100;
      if (a5)
      {
        if (v100 != -1) {
          goto LABEL_42;
        }
        unint64_t v195 = v99 | v195 & 0xFFFFFFFF00000000;
        uint64_t v101 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 24))(a5);
        uint64_t v102 = v103;
      }
      if (v102 != -1)
      {
LABEL_42:
        *(void *)((char *)v212 + ((v93 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v93;
        (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(*(void *)v101 + 48))(v218, v101, v102);
        (*(void (**)(unsigned int *__return_ptr, uint64_t, uint64_t))(*(void *)v101 + 88))(v214, v101, v102);
        sub_574C0(v214, a6, v200, a8, (uint64_t)&v216);
        uint64_t v104 = v98 - 2;
        long long v105 = *(_OWORD *)v218;
        *((void *)v104 + 2) = *(void *)&v218[16];
        *uint64_t v104 = v105;
        *((_DWORD *)v98 - 2) = v216;
        *uint64_t v98 = v217;
        if (v215) {
          sub_123E4(v215);
        }
      }
      v97 += 4;
      ++v96;
      ++v93;
      v98 += 3;
      --v92;
    }
    while (v92);
  }

  unint64_t v106 = *v191;
  unsigned int v107 = v191[1];
  unsigned int v108 = v191[2];
  unsigned int v109 = v191[3];
  int v110 = *(int **)(v192 + 24);
  int v111 = v110[4];
  int v112 = v110[1];
  int v182 = v110[2];
  int v187 = v110[3];
  int v113 = *v110;
  int v178 = v110[5];
  unint64_t v196 = v110[6];
  unint64_t v114 = v191[4];
  id v201 = v200;
  uint64_t v208 = [v201 packageBuffer];
  uint64_t v115 = v114 & 0xFFF;
  if ((v114 & 0xFFF) != 0)
  {
    unint64_t v116 = (v106 & 0xFFF) + (v107 & 0xFFF) + (v108 & 0xFFF) + (v109 & 0xFFF) + 2;
    int v117 = v182 & 0xFFF;
    int v118 = (v112 & 0xFFF) + (v187 & 0xFFF);
    uint64_t v119 = ((((v196 & 0xFFF) + v118 + v117 + (v113 & 0xFFF) + (v111 & 0xFFF) + (v178 & 0xFFFu) + 2 + 63) >> 3)
          + 24 * (v113 & 0xFFF)) & 0x7FFFFFF8;
    unint64_t v120 = v114 >> 12;
    uint64_t v121 = 4 * (v114 >> 12);
    uint64_t v122 = (_OWORD *)((char *)v212 + (48 * v118 + 32 * v117) + v119 + 16);
    do
    {
      uint64_t v123 = *(unsigned int *)(v121 + v208[42]);
      unint64_t v106 = v123 | v106 & 0xFFFFFFFF00000000;
      uint64_t v125 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 32))(a6, v106);
      uint64_t v126 = v124;
      if (a5)
      {
        if (v124 != -1) {
          goto LABEL_51;
        }
        unint64_t v196 = v123 | v196 & 0xFFFFFFFF00000000;
        uint64_t v125 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 32))(a5);
        uint64_t v126 = v127;
      }
      if (v126 != -1)
      {
LABEL_51:
        *(void *)((char *)v212 + ((v116 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v116;
        uint64_t v128 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v125 + 56))(v125, v126);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v125 + 96))(&v216, v125, v126);
        sub_574C0((unsigned int *)&v216, a6, v201, a8, (uint64_t)v218);
        *((void *)v122 - 2) = v128;
        *((_DWORD *)v122 - 2) = *(_DWORD *)v218;
        *uint64_t v122 = *(_OWORD *)&v218[8];
        if (*((void *)&v217 + 1)) {
          sub_123E4(*((std::__shared_weak_count **)&v217 + 1));
        }
      }
      v121 += 4;
      ++v120;
      ++v116;
      v122 += 2;
      --v115;
    }
    while (v115);
  }

  int v129 = *v191;
  unsigned int v130 = v191[1];
  unsigned int v131 = v191[2];
  unsigned int v132 = v191[3];
  unsigned __int16 v133 = *(int **)(v192 + 24);
  unint64_t v134 = v133[4];
  int v183 = v133[2];
  int v188 = v133[3];
  int v175 = *v133;
  int v179 = v133[1];
  int v135 = v133[5];
  LODWORD(v196) = v133[6];
  unsigned int v137 = v191[4];
  unint64_t v136 = v191[5];
  id v202 = v201;
  uint64_t v209 = [v202 packageBuffer];
  uint64_t v138 = v136 & 0xFFF;
  if ((v136 & 0xFFF) != 0)
  {
    unint64_t v139 = (v129 & 0xFFF) + (v130 & 0xFFF) + (v131 & 0xFFF) + (v132 & 0xFFF) + (v137 & 0xFFF) + 2;
    int v140 = (v179 & 0xFFF) + (v188 & 0xFFF);
    unint64_t v141 = v136 >> 12;
    uint64_t v142 = 4 * (v136 >> 12);
    uint64_t v143 = (_OWORD *)((char *)&v212[6 * v140 + 2 + 4 * (v183 & 0xFFF) + 4 * (v134 & 0xFFF)]
                    + ((24 * (v175 & 0xFFF)
                      + (((v183 & 0xFFF)
                        + (v134 & 0xFFF)
                        + v140
                        + (v175 & 0xFFF)
                        + (v135 & 0xFFF)
                        + (v196 & 0xFFF)
                        + 65) >> 3)) & 0x3FFFFFF8));
    do
    {
      uint64_t v144 = *(unsigned int *)(v142 + v209[42]);
      unint64_t v134 = v144 | v134 & 0xFFFFFFFF00000000;
      uint64_t v146 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 40))(a6, v134);
      uint64_t v147 = v145;
      if (a5)
      {
        if (v145 != -1) {
          goto LABEL_60;
        }
        unint64_t v196 = v144 | v196 & 0xFFFFFFFF00000000;
        uint64_t v146 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 40))(a5);
        uint64_t v147 = v148;
      }
      if (v147 != -1)
      {
LABEL_60:
        *(void *)((char *)v212 + ((v139 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v139;
        uint64_t v149 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v146 + 64))(v146, v147);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v146 + 104))(&v216, v146, v147);
        sub_574C0((unsigned int *)&v216, a6, v202, a8, (uint64_t)v218);
        *((void *)v143 - 2) = v149;
        *((_DWORD *)v143 - 2) = *(_DWORD *)v218;
        *uint64_t v143 = *(_OWORD *)&v218[8];
        if (*((void *)&v217 + 1)) {
          sub_123E4(*((std::__shared_weak_count **)&v217 + 1));
        }
      }
      v142 += 4;
      ++v141;
      ++v139;
      v143 += 2;
      --v138;
    }
    while (v138);
  }

  int v150 = *v191;
  unsigned int v151 = v191[1];
  unint64_t v152 = v191[2];
  unsigned int v153 = v191[3];
  unsigned int v155 = v191[4];
  unsigned int v154 = v191[5];
  uint64_t v156 = *(int **)(v192 + 24);
  int v184 = v156[4];
  int v189 = v156[5];
  int v157 = v156[1];
  int v176 = v156[2];
  int v180 = v156[3];
  int v174 = *v156;
  LODWORD(v196) = v156[6];
  unint64_t v158 = v191[6];
  id v203 = v202;
  uint64_t v210 = [v203 packageBuffer];
  uint64_t v159 = v158 & 0xFFF;
  if ((v158 & 0xFFF) != 0)
  {
    unint64_t v160 = (v150 & 0xFFF) + (v151 & 0xFFF) + (v152 & 0xFFF) + (v153 & 0xFFF) + (v155 & 0xFFF) + (v154 & 0xFFF) + 2;
    int v161 = (v176 & 0xFFF) + (v184 & 0xFFF) + (v189 & 0xFFF);
    unint64_t v162 = 48 * ((v157 & 0xFFF) + (v180 & 0xFFF))
         + 32 * v161
         + ((24 * (v174 & 0xFFF) + ((v161 + (v157 & 0xFFF) + (v180 & 0xFFF) + (v174 & 0xFFF) + (v196 & 0xFFF) + 65) >> 3)) & 0x3FFFFFF8);
    unint64_t v163 = v158 >> 12;
    uint64_t v164 = 4 * (v158 >> 12);
    uint64_t v165 = (uint64_t)v212 + v162 + 16;
    do
    {
      uint64_t v166 = *(unsigned int *)(v164 + v210[42]);
      unint64_t v152 = v166 | v152 & 0xFFFFFFFF00000000;
      uint64_t v168 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)a6 + 48))(a6, v152);
      uint64_t v169 = v167;
      if (a5)
      {
        if (v167 != -1) {
          goto LABEL_69;
        }
        unint64_t v196 = v166 | v196 & 0xFFFFFFFF00000000;
        uint64_t v168 = (*(uint64_t (**)(uint64_t))(*(void *)a5 + 48))(a5);
        uint64_t v169 = v170;
      }
      if (v169 != -1)
      {
LABEL_69:
        *(void *)((char *)v212 + ((v160 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v160;
        uint64_t v171 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v168 + 72))(v168, v169);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v168 + 112))(&v216, v168, v169);
        sub_574C0((unsigned int *)&v216, a6, v203, a8, (uint64_t)v218);
        *(void *)(v165 - 16) = *(id *)v171;
        *(_DWORD *)(v165 - _Block_object_dispose(&STACK[0x2D0], 8) = *(_DWORD *)(v171 + 8);
        *(_DWORD *)uint64_t v165 = *(_DWORD *)v218;
        *(_OWORD *)(v165 + _Block_object_dispose(&STACK[0x2D0], 8) = *(_OWORD *)&v218[8];
        if (*((void *)&v217 + 1)) {
          sub_123E4(*((std::__shared_weak_count **)&v217 + 1));
        }
      }
      v164 += 4;
      ++v163;
      ++v160;
      v165 += 40;
      --v159;
    }
    while (v159);
  }

  return v192;
}

void sub_55280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  objc_destroyWeak(a9);
  _Unwind_Resume(a1);
}

uint64_t sub_5537C(_DWORD *a1, uint64_t a2)
{
  return 48 * ((a1[1] & 0xFFF) + (a1[3] & 0xFFF))
       + 32 * (a1[2] & 0xFFFu)
       + 32 * a2
       + (((((a1[6] & 0xFFF)
                         + (unint64_t)((a1[3] & 0xFFF)
                                            + (a1[2] & 0xFFF)
                                            + (a1[1] & 0xFFF)
                                            + (*a1 & 0xFFF)
                                            + (a1[4] & 0xFFF)
                                            + (a1[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*a1 & 0xFFF)) & 0x7FFFFFF8);
}

uint64_t sub_553F4(_DWORD *a1)
{
  return (*a1 & 0xFFF) + (a1[1] & 0xFFF) + (a1[2] & 0xFFF) + (a1[3] & 0xFFF) + (a1[4] & 0xFFFu) + 2;
}

uint64_t sub_5542C(_DWORD *a1, uint64_t a2)
{
  int v2 = (a1[1] & 0xFFF) + (a1[3] & 0xFFF);
  return 48 * v2
       + 32 * ((a1[2] & 0xFFF) + (a1[4] & 0xFFFu))
       + 32 * a2
       + (((((a1[6] & 0xFFF)
                         + (unint64_t)(v2
                                            + (a1[4] & 0xFFF)
                                            + (a1[2] & 0xFFF)
                                            + (*a1 & 0xFFF)
                                            + (a1[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*a1 & 0xFFF)) & 0x7FFFFFF8);
}

uint64_t sub_554A4(_DWORD *a1)
{
  return (*a1 & 0xFFF) + (a1[1] & 0xFFF) + (a1[2] & 0xFFF) + (a1[3] & 0xFFF) + (a1[4] & 0xFFF) + (a1[5] & 0xFFFu) + 2;
}

uint64_t sub_554E4(_DWORD *a1, uint64_t a2)
{
  int v2 = (a1[1] & 0xFFF) + (a1[3] & 0xFFF);
  int v3 = (a1[2] & 0xFFF) + (a1[4] & 0xFFF);
  return 48 * v2
       + 32 * (v3 + (a1[5] & 0xFFFu))
       + 40 * a2
       + ((24 * (*a1 & 0xFFF) + (((a1[6] & 0xFFF) + (a1[5] & 0xFFF) + (*a1 & 0xFFFu) + v3 + v2 + 65) >> 3)) & 0x3FFF8);
}

void TUI::Evaluation::Variables::Capture::~Capture(TUI::Evaluation::Variables::Capture *this)
{
  *(void *)this = off_252E38;
  *((void *)this + 1) = off_252EF8;
  uint64_t v2 = *((void *)this + 5);
  if (v2)
  {
    int v3 = (int *)*((void *)this + 3);
    if (v3)
    {
      int v4 = *v3;
      id v5 = v3 + 1;
      int v6 = v3[1];
      id v7 = v3 + 2;
      int v8 = v3[2];
      id v10 = v3 + 3;
      int v9 = v3[3];
      id v11 = v3 + 4;
      int v12 = v3[4];
      id v14 = v3 + 5;
      int v13 = v3[5];
      int v17 = v3[6];
      id v15 = v3 + 6;
      __int16 v16 = v17;
      uint64_t v18 = v4 & 0xFFF;
      if ((v4 & 0xFFF) != 0)
      {
        uint64_t v19 = 0;
        uint64_t v20 = (id *)(((((v16 & 0xFFF)
                      + (unint64_t)(v18
                                         + (v6 & 0xFFF)
                                         + (v8 & 0xFFF)
                                         + (v9 & 0xFFF)
                                         + (v12 & 0xFFF)
                                         + (v13 & 0xFFFu)
                                         + 2)
                      + 63) >> 3) & 0x3FFFFFF8)
                   + v2
                   + 8);
        do
        {
          if (((*(void *)(v2 + (((unint64_t)(v19 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v19
                                                                                                 + 2)) & 1) != 0)

          ++v19;
          v20 += 3;
        }
        while (v18 != v19);
        unint64_t v21 = (int *)*((void *)this + 3);
        id v5 = v21 + 1;
        id v7 = v21 + 2;
        id v10 = v21 + 3;
        id v11 = v21 + 4;
        id v14 = v21 + 5;
        int v22 = *v21;
        id v15 = v21 + 6;
        int v23 = v22 & 0xFFF;
        unsigned int v24 = v23 + 2;
      }
      else
      {
        int v23 = 0;
        unsigned int v24 = 2;
      }
      uint64_t v25 = *v5 & 0xFFFLL;
      if ((*v5 & 0xFFF) != 0)
      {
        unint64_t v26 = v24;
        __int16 v27 = (id *)((((((*v15 & 0xFFF)
                                     + (unint64_t)(v24
                                                        + v25
                                                        + (*v7 & 0xFFF)
                                                        + (*v10 & 0xFFF)
                                                        + (*v11 & 0xFFF)
                                                        + (*v14 & 0xFFF))
                                     + 63) >> 3)
                     + 24 * v23) & 0x7FFFFFF8)
                   + v2);
        do
        {
          if ((*(void *)(v2 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v26)) {
            TUI::Evaluation::Enumerator::State::~State(v27);
          }
          v27 += 6;
          ++v26;
          --v25;
        }
        while (v25);
        uint64_t v28 = (int *)*((void *)this + 3);
        id v5 = v28 + 1;
        id v7 = v28 + 2;
        id v10 = v28 + 3;
        id v11 = v28 + 4;
        id v14 = v28 + 5;
        int v29 = *v28;
        id v15 = v28 + 6;
        int v23 = v29 & 0xFFF;
        unsigned int v24 = v23 + 2;
        int v30 = 24 * v23;
      }
      else
      {
        int v30 = 24 * v23;
      }
      uint64_t v31 = *v7 & 0xFFFLL;
      if ((*v7 & 0xFFF) != 0)
      {
        unsigned int v32 = *v5 & 0xFFF;
        unint64_t v33 = v24 + v32;
        uint64_t v34 = (std::__shared_weak_count **)(v2
                                          + 48 * v32
                                          + (((((*v15 & 0xFFF)
                                                            + (unint64_t)(v33
                                                                               + v31
                                                                               + (*v10 & 0xFFF)
                                                                               + (*v11 & 0xFFF)
                                                                               + (*v14 & 0xFFFu))
                                                            + 63) >> 3)
                                            + v30) & 0x7FFFFFF8)
                                          + 24);
        do
        {
          if (((*(void *)(v2 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v33) & 1) != 0 && *v34) {
            sub_123E4(*v34);
          }
          v34 += 4;
          ++v33;
          --v31;
        }
        while (v31);
        int v35 = (int *)*((void *)this + 3);
        id v5 = v35 + 1;
        id v7 = v35 + 2;
        id v10 = v35 + 3;
        id v11 = v35 + 4;
        int v36 = *v35;
        id v15 = v35 + 6;
        id v14 = v35 + 5;
        int v23 = v36 & 0xFFF;
        unsigned int v24 = v23 + 2;
        int v30 = 24 * v23;
      }
      uint64_t v37 = *v10 & 0xFFFLL;
      if ((*v10 & 0xFFF) != 0)
      {
        int v38 = *v5 & 0xFFF;
        int v39 = *v7 & 0xFFF;
        unint64_t v40 = v24 + v38 + v39;
        int v41 = (std::__shared_weak_count **)((48 * v38 + 32 * v39)
                                          + v2
                                          + (((((*v15 & 0xFFF)
                                                            + (unint64_t)(v40
                                                                               + v37
                                                                               + (*v11 & 0xFFF)
                                                                               + (*v14 & 0xFFF))
                                                            + 63) >> 3)
                                            + v30) & 0x7FFFFFF8)
                                          + 40);
        do
        {
          if (((*(void *)(v2 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v40) & 1) != 0 && *v41) {
            sub_123E4(*v41);
          }
          v41 += 6;
          ++v40;
          --v37;
        }
        while (v37);
        unint64_t v42 = (int *)*((void *)this + 3);
        id v5 = v42 + 1;
        id v7 = v42 + 2;
        id v10 = v42 + 3;
        id v11 = v42 + 4;
        id v14 = v42 + 5;
        int v43 = *v42;
        id v15 = v42 + 6;
        int v23 = v43 & 0xFFF;
        int v30 = 24 * v23;
      }
      uint64_t v44 = *v11 & 0xFFFLL;
      if ((*v11 & 0xFFF) != 0)
      {
        int v45 = *v7 & 0xFFF;
        int v46 = (*v10 & 0xFFF) + (*v5 & 0xFFF);
        unint64_t v47 = (v46 + v23 + v45 + 2);
        long long v48 = (std::__shared_weak_count **)((48 * v46 + 32 * v45)
                                          + v2
                                          + (((((*v15 & 0xFFF)
                                                            + (unint64_t)(v47
                                                                               + v44
                                                                               + (*v14 & 0xFFF))
                                                            + 63) >> 3)
                                            + v30) & 0x7FFFFFF8)
                                          + 24);
        do
        {
          if (((*(void *)(v2 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v47) & 1) != 0 && *v48) {
            sub_123E4(*v48);
          }
          v48 += 4;
          ++v47;
          --v44;
        }
        while (v44);
        unint64_t v49 = (int *)*((void *)this + 3);
        id v5 = v49 + 1;
        id v7 = v49 + 2;
        id v10 = v49 + 3;
        id v11 = v49 + 4;
        id v14 = v49 + 5;
        int v50 = *v49;
        id v15 = v49 + 6;
        int v23 = v50 & 0xFFF;
        int v30 = 24 * v23;
      }
      uint64_t v51 = *v14 & 0xFFFLL;
      if ((*v14 & 0xFFF) != 0)
      {
        int v52 = *v5 & 0xFFF;
        int v53 = *v10 & 0xFFF;
        int v54 = (*v11 & 0xFFF) + (*v7 & 0xFFF);
        int v55 = v54 + v23 + 2;
        unint64_t v56 = (v55 + v52 + v53);
        uint64_t v57 = (std::__shared_weak_count **)((48 * (v53 + v52) + 32 * v54)
                                          + v2
                                          + ((v30 + (((*v15 & 0xFFFu) + v53 + v52 + v51 + v55 + 63) >> 3)) & 0x3FFFFFF8)
                                          + 24);
        do
        {
          if (((*(void *)(v2 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v56) & 1) != 0 && *v57) {
            sub_123E4(*v57);
          }
          v57 += 4;
          ++v56;
          --v51;
        }
        while (v51);
        uint64_t v58 = (int *)*((void *)this + 3);
        id v5 = v58 + 1;
        id v7 = v58 + 2;
        id v10 = v58 + 3;
        id v11 = v58 + 4;
        id v14 = v58 + 5;
        int v59 = *v58;
        id v15 = v58 + 6;
        int v23 = v59 & 0xFFF;
        int v30 = 24 * v23;
      }
      int v60 = *v15;
      uint64_t v61 = v60 & 0xFFF;
      if ((v60 & 0xFFF) != 0)
      {
        int v62 = *v5 & 0xFFF;
        int v63 = *v7 & 0xFFF;
        int v64 = *v10 & 0xFFF;
        int v65 = *v11 & 0xFFF;
        int v66 = *v14 & 0xFFF;
        unint64_t v67 = (v23 + v62 + v63 + v64 + v65 + v66 + 2);
        int v68 = (std::__shared_weak_count **)(48 * (v64 + v62)
                                          + 32 * (v65 + v63 + v66)
                                          + ((v30 + ((v66 + v23 + v64 + v62 + v65 + v63 + v61 + 65) >> 3)) & 0x3FFFFFF8)
                                          + v2
                                          + 32);
        do
        {
          if ((*(void *)(v2 + ((v67 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v67))
          {
            if (*v68) {
              sub_123E4(*v68);
            }
          }
          v68 += 5;
          ++v67;
          --v61;
        }
        while (v61);
      }
    }
    free(*((void **)this + 5));
  }
  objc_destroyWeak((id *)this + 4);
}

{
  uint64_t vars8;

  TUI::Evaluation::Variables::Capture::~Capture(this);

  operator delete();
}

void non-virtual thunk to'TUI::Evaluation::Variables::Capture::~Capture(TUI::Evaluation::Variables::Capture *this)
{
}

{
  uint64_t vars8;

  TUI::Evaluation::Variables::Capture::~Capture((TUI::Evaluation::Variables::Capture *)((char *)this - 8));

  operator delete();
}

uint64_t TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a1 + 24);
  return *(void *)(a1 + 40)
       + 48 * a2
       + (((((v2[6] & 0xFFF)
                         + (unint64_t)((*v2 & 0xFFF)
                                            + (v2[1] & 0xFFF)
                                            + (v2[2] & 0xFFF)
                                            + (v2[3] & 0xFFF)
                                            + (v2[4] & 0xFFF)
                                            + (v2[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8);
}

{
  _DWORD *v2;
  int v3;
  int v4;

  uint64_t v2 = *(_DWORD **)(a1 + 24);
  int v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  int v4 = (v2[2] & 0xFFF) + (v2[4] & 0xFFF) + (v2[5] & 0xFFF);
  return *(void *)(a1 + 40)
       + 40 * a2
       + (48 * v3 + 32 * v4)
       + ((24 * (*v2 & 0xFFF) + ((v4 + v3 + (*v2 & 0xFFF) + (v2[6] & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8);
}

uint64_t non-virtual thunk to'TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

void *TUI::Evaluation::Variables::Capture::mutate()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2DF3F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2DF3F0))
  {
    TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)&unk_2DF3C0);
    __cxa_guard_release(&qword_2DF3F0);
  }
  return &unk_2DF3C0;
}

void sub_55CF0(_Unwind_Exception *a1)
{
}

void *non-virtual thunk to'TUI::Evaluation::Variables::Capture::mutate()
{
  return &unk_2DF3C0;
}

unint64_t TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a1 + 24);
  return *(void *)(a1 + 40)
       + 24 * a2
       + ((((v2[6] & 0xFFF)
          + (unint64_t)((*v2 & 0xFFF)
                             + (v2[1] & 0xFFF)
                             + (v2[2] & 0xFFF)
                             + (v2[3] & 0xFFF)
                             + (v2[4] & 0xFFF)
                             + (v2[5] & 0xFFFu)
                             + 2)
          + 63) >> 3) & 0x3FFFFFF8);
}

unint64_t non-virtual thunk to'TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

uint64_t TUI::Evaluation::Variables::Capture::copy(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a1 + 24);
  return *(void *)(*(void *)(a1 + 40)
                   + 32 * a2
                   + 48 * (v2[1] & 0xFFF)
                   + (((((v2[6] & 0xFFF)
                                     + (unint64_t)((v2[1] & 0xFFF)
                                                        + (*v2 & 0xFFF)
                                                        + (v2[2] & 0xFFF)
                                                        + (v2[3] & 0xFFF)
                                                        + (v2[4] & 0xFFF)
                                                        + (v2[5] & 0xFFFu)
                                                        + 2)
                                     + 63) >> 3)
                     + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8));
}

{
  _DWORD *v2;
  int v3;

  uint64_t v2 = *(_DWORD **)(a1 + 24);
  int v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  return *(void *)(*(void *)(a1 + 40)
                   + 32 * a2
                   + 48 * v3
                   + 32 * (v2[2] & 0xFFFu)
                   + (((((v2[6] & 0xFFF)
                                     + (unint64_t)(v3
                                                        + (v2[2] & 0xFFF)
                                                        + (*v2 & 0xFFF)
                                                        + (v2[4] & 0xFFF)
                                                        + (v2[5] & 0xFFFu)
                                                        + 2)
                                     + 63) >> 3)
                     + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8));
}

{
  _DWORD *v2;
  int v3;
  int v4;

  uint64_t v2 = *(_DWORD **)(a1 + 24);
  int v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  int v4 = (v2[2] & 0xFFF) + (v2[4] & 0xFFF);
  return *(void *)(*(void *)(a1 + 40)
                   + 32 * a2
                   + (48 * v3 + 32 * v4)
                   + ((24 * (*v2 & 0xFFF) + (((v2[6] & 0xFFF) + (*v2 & 0xFFF) + (v2[5] & 0xFFFu) + v4 + v3 + 65) >> 3)) & 0x3FFFFFF8));
}

uint64_t non-virtual thunk to'TUI::Evaluation::Variables::Capture::copy(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

__n128 TUI::Evaluation::Variables::Capture::copy@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  int v3 = *(_DWORD **)(a1 + 24);
  int v4 = (__n128 *)(*(void *)(a1 + 40)
                + 48 * a2
                + 48 * (v3[1] & 0xFFF)
                + 32 * (v3[2] & 0xFFFu)
                + (((((v3[6] & 0xFFF)
                                  + (unint64_t)((v3[2] & 0xFFF)
                                                     + (v3[1] & 0xFFF)
                                                     + (*v3 & 0xFFF)
                                                     + (v3[3] & 0xFFF)
                                                     + (v3[4] & 0xFFF)
                                                     + (v3[5] & 0xFFFu)
                                                     + 2)
                                  + 63) >> 3)
                  + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8));
  __n128 result = *v4;
  *a3 = *v4;
  a3[1].n128_u64[0] = v4[1].n128_u64[0];
  return result;
}

double non-virtual thunk to'TUI::Evaluation::Variables::Capture::copy@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2, a3).n128_u64[0];
  return result;
}

uint64_t TUI::Evaluation::Variables::Capture::closureAndCapture@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3 = *(_DWORD **)(result + 24);
  uint64_t v4 = *(void *)(result + 40)
     + 32 * a2
     + 48 * (v3[1] & 0xFFF)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)((v3[1] & 0xFFF)
                                          + (*v3 & 0xFFF)
                                          + (v3[2] & 0xFFF)
                                          + (v3[3] & 0xFFF)
                                          + (v3[4] & 0xFFF)
                                          + (v3[5] & 0xFFFu)
                                          + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v4 + 8);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v6;
  *(void *)(a3 + 16) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

{
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  int v3 = *(_DWORD **)(result + 24);
  uint64_t v4 = *(void *)(result + 40)
     + 48 * a2
     + 48 * (v3[1] & 0xFFF)
     + 32 * (v3[2] & 0xFFFu)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)((v3[2] & 0xFFF)
                                          + (v3[1] & 0xFFF)
                                          + (*v3 & 0xFFF)
                                          + (v3[3] & 0xFFF)
                                          + (v3[4] & 0xFFF)
                                          + (v3[5] & 0xFFFu)
                                          + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v6;
  *(void *)(a3 + 16) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  int v3 = *(_DWORD **)(result + 24);
  uint64_t v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  uint64_t v5 = *(void *)(result + 40)
     + 32 * a2
     + 48 * v4
     + 32 * (v3[2] & 0xFFFu)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)(v4 + (v3[2] & 0xFFF) + (*v3 & 0xFFF) + (v3[4] & 0xFFF) + (v3[5] & 0xFFFu) + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v5 + 8);
  id v7 = *(void *)(v5 + 16);
  uint64_t v6 = *(void *)(v5 + 24);
  *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v7;
  *(void *)(a3 + 16) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  int v3 = *(_DWORD **)(result + 24);
  uint64_t v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  uint64_t v5 = (v3[2] & 0xFFF) + (v3[4] & 0xFFF);
  uint64_t v6 = *(void *)(result + 40)
     + 32 * a2
     + (48 * v4 + 32 * v5)
     + ((24 * (*v3 & 0xFFF) + (((v3[6] & 0xFFF) + (*v3 & 0xFFF) + (v3[5] & 0xFFFu) + v5 + v4 + 65) >> 3)) & 0x3FFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v6 + 8);
  int v8 = *(void *)(v6 + 16);
  id v7 = *(void *)(v6 + 24);
  *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v8;
  *(void *)(a3 + 16) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  int v3 = *(_DWORD **)(result + 24);
  uint64_t v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  uint64_t v5 = (v3[2] & 0xFFF) + (v3[4] & 0xFFF) + (v3[5] & 0xFFF);
  uint64_t v6 = *(void *)(result + 40)
     + 40 * a2
     + (48 * v4 + 32 * v5)
     + ((24 * (*v3 & 0xFFF) + ((v5 + v4 + (*v3 & 0xFFF) + (v3[6] & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v6 + 16);
  int v8 = *(void *)(v6 + 24);
  id v7 = *(void *)(v6 + 32);
  *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v8;
  *(void *)(a3 + 16) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t non-virtual thunk to'TUI::Evaluation::Variables::Capture::closureAndCapture@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

uint64_t TUI::Evaluation::Variables::Capture::lookup(uint64_t a1, int a2)
{
  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 4);
  v10[0] = v6 >> 12;
  v10[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v10);
  if (Name == -1) {
    return 0;
  }
  unint64_t v8 = (**(_DWORD **)(a1 + 24) & 0xFFF) + Name + 2;
  if (((1 << v8) & *(void *)(*(void *)(a1 + 40) + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = **(unsigned int **)(a1 + 24);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1) {
    return 0;
  }
  if ((*(void *)(*(void *)(a1 + 40) + (((unint64_t)(Name + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) & (1 << (Name + 2))) != 0) {
    return a1 + 8;
  }
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 8);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1) {
    return 0;
  }
  if (((1 << (Name + **(unsigned char **)(a1 + 24) + *(unsigned char *)(*(void *)(a1 + 24) + 4) + 2)) & *(void *)(*(void *)(a1 + 40) + (((Name + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF) + (*(_DWORD *)(*(void *)(a1 + 24) + 4) & 0xFFFu) + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0) {
    return a1 + 8;
  }
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 12);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1) {
    return 0;
  }
  if (((1 << (Name
               + **(unsigned char **)(a1 + 24)
               + *(unsigned char *)(*(void *)(a1 + 24) + 4)
               + *(unsigned char *)(*(void *)(a1 + 24) + 8)
               + 2)) & *(void *)(*(void *)(a1 + 40)
                                 + (((Name
                                    + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF)
                                                       + (*(_DWORD *)(*(void *)(a1 + 24) + 4) & 0xFFF)
                                                       + (*(_DWORD *)(*(void *)(a1 + 24) + 8) & 0xFFFu)
                                                       + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 16);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1) {
    return 0;
  }
  if (((1 << (Name
               + **(unsigned char **)(a1 + 24)
               + *(unsigned char *)(*(void *)(a1 + 24) + 4)
               + *(unsigned char *)(*(void *)(a1 + 24) + 8)
               + *(unsigned char *)(*(void *)(a1 + 24) + 12)
               + 2)) & *(void *)(*(void *)(a1 + 40)
                                 + (((Name
                                    + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF)
                                                       + (*(_DWORD *)(*(void *)(a1 + 24) + 4) & 0xFFF)
                                                       + (*(_DWORD *)(*(void *)(a1 + 24) + 8) & 0xFFF)
                                                       + (*(_DWORD *)(*(void *)(a1 + 24) + 12) & 0xFFFu)
                                                       + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v11[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 20);
  v11[0] = v6 >> 12;
  v11[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v11);
  if (Name == -1) {
    return 0;
  }
  unint64_t v8 = *(_DWORD **)(a1 + 24);
  int v9 = Name + (*v8 & 0xFFF) + (v8[1] & 0xFFF) + (v8[2] & 0xFFF) + (v8[3] & 0xFFF) + (v8[4] & 0xFFFu) + 2;
  if (((1 << v9) & *(void *)(*(void *)(a1 + 40) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v11[2];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 24)) {
    return 0;
  }
  id v4 = [*(id *)(a1 + 16) packageBuffer];
  if ((~a2 & 0xFFFF0000) != 0) {
    int v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  }
  else {
    int v5 = TUINameNil;
  }
  unint64_t v6 = *(unsigned int *)(*(void *)(a1 + 24) + 24);
  v11[0] = v6 >> 12;
  v11[1] = v6 & 0xFFF;
  uint64_t Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v11);
  if (Name == -1) {
    return 0;
  }
  unint64_t v8 = *(_DWORD **)(a1 + 24);
  int v9 = Name
     + (*v8 & 0xFFF)
     + (v8[1] & 0xFFF)
     + (v8[2] & 0xFFF)
     + (v8[3] & 0xFFF)
     + (v8[4] & 0xFFF)
     + (v8[5] & 0xFFFu)
     + 2;
  if (((1 << v9) & *(void *)(*(void *)(a1 + 40) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

BOOL TUI::Evaluation::Variables::Capture::operator==(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24)) {
    return 0;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = objc_loadWeakRetained((id *)(a2 + 32));
  BOOL v2 = WeakRetained == v7;

  unint64_t v8 = *(_DWORD **)(a1 + 24);
  if (!v8 || !*(void *)(a2 + 24)) {
    return v2;
  }
  if (WeakRetained != v7) {
    return 0;
  }
  int v9 = *(const void **)(a2 + 40);
  unint64_t v10 = *v8 & 0xFFF;
  id v11 = v8 + 1;
  int v12 = v8 + 2;
  int v13 = v8 + 3;
  id v14 = v8 + 4;
  id v15 = v8 + 5;
  __int16 v16 = v8 + 6;
  size_t v17 = (((v8[6] & 0xFFF)
        + (unint64_t)((*v8 & 0xFFF)
                           + (v8[1] & 0xFFF)
                           + (v8[2] & 0xFFF)
                           + (v8[3] & 0xFFF)
                           + (v8[4] & 0xFFF)
                           + (v8[5] & 0xFFFu)
                           + 2)
        + 63) >> 3) & 0x3FFFFFF8;
  uint64_t v77 = (uint64_t)v9;
  uint64_t v78 = *(char **)(a1 + 40);
  uint64_t v18 = *(_DWORD **)(a1 + 24);
  if (memcmp(v78, v9, v17)) {
    return 0;
  }
  if (v10)
  {
    BOOL v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = (uint64_t)&v78[v17];
    uint64_t v22 = v17 + v77;
    do
    {
      if (((*(void *)&v78[((unint64_t)(v20 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v20 + 2)) & 1) != 0
        && !TUI::Evaluation::ResolvedValue::operator==(v21, v22))
      {
        break;
      }
      BOOL v19 = ++v20 >= v10;
      v22 += 24;
      v21 += 24;
    }
    while (v10 != v20);
    if (!v19) {
      return 0;
    }
    int v23 = *(_DWORD **)(a1 + 24);
    __int16 v16 = v23 + 6;
    int v24 = *v23 & 0xFFF;
    unsigned int v25 = v24 + 2;
    id v11 = v23 + 1;
    int v12 = v23 + 2;
    int v13 = v23 + 3;
    id v14 = v23 + 4;
    id v15 = v23 + 5;
    int v26 = 24 * v24;
  }
  else
  {
    int v26 = 0;
    unsigned int v25 = 2;
    int v23 = v18;
  }
  int v27 = v23[1];
  unint64_t v28 = v27 & 0xFFF;
  if ((v27 & 0xFFF) == 0) {
    goto LABEL_32;
  }
  uint64_t v29 = 0;
  BOOL v30 = 0;
  uint64_t v31 = v25;
  uint64_t v32 = ((((v23[6] & 0xFFF)
                       + (unint64_t)(v25
                                          + (v23[3] & 0xFFF)
                                          + v28
                                          + (v23[2] & 0xFFF)
                                          + (v23[4] & 0xFFF)
                                          + (v23[5] & 0xFFF))
                       + 63) >> 3)
       + v26) & 0x7FFFFFF8;
  unint64_t v33 = v78;
  uint64_t v34 = &v78[v32];
  uint64_t v35 = v32 + v77;
  uint64_t v36 = 48 * v28;
  unint64_t v37 = 1;
  unint64_t v76 = v27 & 0xFFF;
  do
  {
    if (((*(void *)&v33[((v31 + v37 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v31
                                                                            + v37
                                                                            - 1)) & 1) != 0)
    {
      if (*(unsigned __int16 *)&v34[v29 + 2] != *(unsigned __int16 *)(v35 + v29 + 2)) {
        break;
      }
      if (*(unsigned __int16 *)&v34[v29] != *(unsigned __int16 *)(v35 + v29)) {
        break;
      }
      if (*(unsigned __int16 *)&v34[v29 + 6] != *(unsigned __int16 *)(v35 + v29 + 6)) {
        break;
      }
      if (*(unsigned __int16 *)&v34[v29 + 4] != *(unsigned __int16 *)(v35 + v29 + 4)) {
        break;
      }
      if (((*(unsigned char *)(v35 + v29 + 8) ^ v34[v29 + 8]) & 3) != 0) {
        break;
      }
      if (*(void *)&v34[v29 + 16] != *(void *)(v35 + v29 + 16)) {
        break;
      }
      int v38 = *(void **)&v34[v29 + 24];
      if (v38 != *(void **)(v35 + v29 + 24))
      {
        unsigned int v39 = [v38 isEqual:];
        unint64_t v28 = v76;
        if (!v39) {
          break;
        }
      }
      unint64_t v40 = *(void **)&v34[v29 + 32];
      unint64_t v33 = v78;
      if (v40 != *(void **)(v35 + v29 + 32))
      {
        unsigned int v41 = [v40 isEqual:];
        unint64_t v28 = v76;
        if (!v41) {
          break;
        }
      }
    }
    BOOL v30 = v37 >= v28;
    v29 += 48;
    ++v37;
  }
  while (v36 != v29);
  if (!v30) {
    return 0;
  }
  int v23 = *(_DWORD **)(a1 + 24);
  __int16 v16 = v23 + 6;
  int v42 = *v23 & 0xFFF;
  unsigned int v25 = v42 + 2;
  id v11 = v23 + 1;
  int v12 = v23 + 2;
  int v13 = v23 + 3;
  id v14 = v23 + 4;
  id v15 = v23 + 5;
  int v26 = 24 * v42;
LABEL_32:
  uint64_t v43 = v25 + (*v11 & 0xFFF);
  unint64_t v44 = *v13 & 0xFFF;
  unint64_t v45 = *v12 & 0xFFF;
  uint64_t v46 = v43 + (*v12 & 0xFFF);
  uint64_t v47 = v46 + (*v13 & 0xFFF);
  uint64_t v48 = ((((*v16 & 0xFFF) + (unint64_t)(v47 + (*v14 & 0xFFF) + (*v15 & 0xFFF)) + 63) >> 3)
       + v26) & 0x7FFFFFF8;
  if ((*v12 & 0xFFF) != 0)
  {
    BOOL v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = v48 + 48 * (*v11 & 0xFFF);
    int v52 = &v78[v51];
    uint64_t v53 = v51 + v77 + 8;
    int v54 = v52 + 8;
    do
    {
      if (((*(void *)&v78[((unint64_t)(v43 + v50) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v43
                                                                                            + v50)) & 1) != 0)
      {
        if (*((_DWORD *)v54 - 2) != *(_DWORD *)(v53 - 8) || *((_DWORD *)v54 - 1) != *(_DWORD *)(v53 - 4)) {
          break;
        }
        if (*(_DWORD *)v54 != *(_DWORD *)v53 || *((void *)v54 + 1) != *(void *)(v53 + 8)) {
          break;
        }
      }
      BOOL v49 = ++v50 >= v45;
      v53 += 32;
      v54 += 32;
    }
    while (v45 != v50);
    if (!v49) {
      return 0;
    }
  }
  if ((*v13 & 0xFFF) != 0)
  {
    uint64_t v57 = 0;
    BOOL v58 = 0;
    uint64_t v59 = v48 + 48 * (*v11 & 0xFFF) + 32 * (*v12 & 0xFFFu);
    int v60 = &v78[v59];
    uint64_t v61 = v59 + v77;
    unint64_t v62 = 1;
    do
    {
      if (((*(void *)&v78[((v46 + v62 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v46
                                                                              + v62
                                                                              - 1)) & 1) != 0)
      {
        if (*(_DWORD *)&v60[v57] != *(_DWORD *)(v61 + v57)) {
          break;
        }
        int v63 = &v60[v57];
        uint64_t v64 = v61 + v57;
        if (*(_DWORD *)&v60[v57 + 4] != *(_DWORD *)(v61 + v57 + 4)
          || *(unsigned __int16 *)&v60[v57 + 8] != *(unsigned __int16 *)(v61 + v57 + 8))
        {
          break;
        }
        if (*((_DWORD *)v63 + 3) != *(_DWORD *)(v64 + 12)) {
          break;
        }
        if (*((_DWORD *)v63 + 4) != *(_DWORD *)(v64 + 16)) {
          break;
        }
        int v66 = &v60[v57];
        uint64_t v67 = v61 + v57;
        if (*(_DWORD *)&v60[v57 + 20] != *(_DWORD *)(v61 + v57 + 20)
          || *((_DWORD *)v66 + 6) != *(_DWORD *)(v67 + 24)
          || *((void *)v66 + 4) != *(void *)(v67 + 32))
        {
          break;
        }
      }
      BOOL v58 = v62 >= v44;
      v57 += 48;
      ++v62;
    }
    while (48 * v44 != v57);
    if (!v58) {
      return 0;
    }
  }
  uint64_t v68 = sub_5537C(v23, 0);
  unint64_t v69 = *(_DWORD **)(a1 + 24);
  if (!sub_57094((uint64_t)v78, v47, (uint64_t)v78, v77, v68, (unint64_t)v69[4] >> 12, v69[4] & 0xFFFLL))return 0; {
  uint64_t v70 = sub_553F4(v69);
  }
  uint64_t v71 = sub_5542C(*(_DWORD **)(a1 + 24), 0);
  uint64_t v72 = *(_DWORD **)(a1 + 24);
  if (!sub_57094((uint64_t)v78, v70, (uint64_t)v78, v77, v71, (unint64_t)v72[5] >> 12, v72[5] & 0xFFFLL))return 0; {
  uint64_t v73 = sub_554A4(v72);
  }
  uint64_t v74 = sub_554E4(*(_DWORD **)(a1 + 24), 0);
  unint64_t v75 = *(unsigned int *)(*(void *)(a1 + 24) + 24);

  return sub_57124((uint64_t)v78, v73, (uint64_t)v78, v77, v74, v75 >> 12, v75 & 0xFFF);
}

BOOL sub_57094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a7)
  {
    BOOL v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a5 + a4 + 8;
    uint64_t v10 = a5 + a3 + 8;
    do
    {
      if (((*(void *)(a1 + (((unint64_t)(a2 + v8) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (a2
                                                                                             + v8)) & 1) != 0)
      {
        if (*(_DWORD *)(v10 - 8) != *(_DWORD *)(v9 - 8) || *(_DWORD *)(v10 - 4) != *(_DWORD *)(v9 - 4)) {
          break;
        }
        if (*(_DWORD *)v10 != *(_DWORD *)v9 || *(void *)(v10 + 8) != *(void *)(v9 + 8)) {
          break;
        }
      }
      BOOL v7 = ++v8 >= a7;
      v9 += 32;
      v10 += 32;
    }
    while (a7 != v8);
  }
  else
  {
    return 1;
  }
  return v7;
}

BOOL sub_57124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a7)
  {
    BOOL v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = a5 + a4 + 16;
    uint64_t v13 = a5 + a3 + 16;
    do
    {
      if (((*(void *)(a1 + (((unint64_t)(a2 + v11) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (a2
                                                                                              + v11)) & 1) != 0)
      {
        if (*(_DWORD *)(v13 - 8) != *(_DWORD *)(v12 - 8)) {
          break;
        }
        id v14 = *(void **)(v13 - 16);
        if (v14 != *(void **)(v12 - 16) && !objc_msgSend(v14, "isEqual:")) {
          break;
        }
        if (*(_DWORD *)v13 != *(_DWORD *)v12 || *(void *)(v13 + 8) != *(void *)(v12 + 8)) {
          break;
        }
      }
      BOOL v10 = ++v11 >= a7;
      v12 += 40;
      v13 += 40;
    }
    while (a7 != v11);
  }
  else
  {
    return 1;
  }
  return v10;
}

void TUI::Evaluation::Variables::Capture::enumerate(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = [*(id *)(a1 + 16) packageBuffer];
  unint64_t v6 = *(int **)(a1 + 24);
  int v8 = *v6;
  unint64_t v7 = v6[1];
  uint64_t v9 = v7 & 0xFFF;
  int v10 = v6[2];
  int v11 = v6[3];
  int v13 = v6[4];
  int v12 = v6[5];
  int v21 = v6[6];
  uint64_t v22 = (void (**)(id, unint64_t, void))(id)v3;
  if ((v7 & 0xFFF) != 0)
  {
    int v14 = v8 & 0xFFF;
    unint64_t v15 = (v8 & 0xFFF) + 2;
    uint64_t v16 = ((((v21 & 0xFFF)
                         + (unint64_t)(v15
                                            + v9
                                            + (v10 & 0xFFF)
                                            + (v11 & 0xFFF)
                                            + (v13 & 0xFFF)
                                            + (v12 & 0xFFFu))
                         + 63) >> 3)
         + 24 * v14) & 0x7FFFFFF8;
    unint64_t v17 = v7 >> 12;
    uint64_t v18 = v16 + v4;
    uint64_t v19 = 4 * v17;
    do
    {
      if ((*(void *)(v4 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15))
      {
        if (v5[43] <= v17) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = (unsigned __int16 *)(v19 + v5[42]);
        }
        unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *v20 | ((unint64_t)v20[1] << 16);
        v22[2](v22, v3, v18);
      }
      v18 += 48;
      v19 += 4;
      ++v17;
      ++v15;
      --v9;
    }
    while (v9);
  }
}

void sub_5736C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_57390(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_573F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1910DC(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_57414(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_5744C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  return result;
}

uint64_t sub_5747C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_574C0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v9 = a3;
  unint64_t v10 = *a1;
  *(_DWORD *)a5 = v10;
  uint64_t v12 = *((void *)a1 + 1);
  int v11 = (std::__shared_weak_count *)*((void *)a1 + 2);
  *(void *)(a5 + _Block_object_dispose(&STACK[0x2D0], 8) = v12;
  *(void *)(a5 + 16) = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v12 || (int v13 = *(unsigned char **)(v12 + 40)) != 0 && (*v13 & 1) == 0)
  {
    id v19 = v9;
    int v14 = [v9 packageBuffer];
    BOOL v15 = TUIClosureNotNil(v10);
    if (v14[47] > v10 && v15)
    {
      uint64_t v17 = v14[46] + 28 * v10;
      if (v17)
      {
        TUI::Evaluation::Variables::Capture::create(&v20, v17, 0, 0, v12, a2, v19, a4);
        *(_OWORD *)(a5 + _Block_object_dispose(&STACK[0x2D0], 8) = v20;
        if (v11) {
          sub_123E4(v11);
        }
      }
    }
  }

  return _objc_release_x5();
}

void sub_575CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    sub_123E4(v10);
  }

  _Unwind_Resume(a1);
}

void sub_57680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_5798C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_579B8(uint64_t a1, char *__src, char *a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = __src;
  unint64_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    int v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 4) + 1;
    if (v14 >> 60) {
      sub_4484();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 4;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 3 > v14) {
      unint64_t v14 = v17 >> 3;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      id v19 = (char *)sub_21C3C(a1 + 16, v18);
    }
    else {
      id v19 = 0;
    }
    long long v20 = &v19[16 * v16];
    __p = v19;
    int v27 = v20;
    unint64_t v28 = v20;
    uint64_t v29 = &v19[16 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 3;
        }
        int v23 = (char *)sub_21C3C(v8, v22);
        long long v20 = &v23[16 * (v22 >> 2)];
        __p = v23;
        int v27 = v20;
        uint64_t v29 = &v23[16 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 16 * (v21 >> 1);
        int v27 = v20;
      }
    }
    *(_OWORD *)long long v20 = *(_OWORD *)v3;
    unint64_t v28 = v20 + 16;
    uint64_t v4 = (char *)sub_59E4C((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(_OWORD *)__src = *(_OWORD *)a3;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = __src + 16;
  }
  else
  {
    id v9 = __src + 16;
    unint64_t v10 = v6 - 16;
    int v11 = *(_OWORD **)(a1 + 8);
    while (v10 < v6)
    {
      long long v12 = *(_OWORD *)v10;
      v10 += 16;
      *v11++ = v12;
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-16 * ((v6 - v9) >> 4)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 16 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v3;
  }
  return v4;
}

void sub_57BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_57C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_57E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5807C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_580BC(uint64_t a1, void *a2)
{
  id v5 = a2;
  [v5 computedTransformedSize];
  *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = fmax(*(double *)(*(void *)(*(void *)(a1 + 32) + 8)+ 24), v3);
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v4
                                                              + *(double *)(*(void *)(*(void *)(a1 + 40) + 8)
                                                                          + 24);
}

void sub_5812C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_582EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_58594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_587E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_58A38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_58EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_5908C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_59428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_595B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_596D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5977C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_5995C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_59BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_59C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_59CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_59E4C(void **a1, uint64_t a2, char *__src)
{
  id v5 = *(void **)(a2 + 8);
  unint64_t v6 = (char *)*a1;
  unint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    uint64_t v9 = *(void *)(a2 + 8);
    do
    {
      unint64_t v7 = (void *)(v9 - 16);
      *(_OWORD *)(v9 - 16) = *((_OWORD *)v8 - 1);
      v8 -= 16;
      v9 -= 16;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + _Block_object_dispose(&STACK[0x2D0], 8) = v7;
  unint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    unint64_t v7 = *(void **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  int v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x2D0], 8) = v13;
  unint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  uint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void sub_5A714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_5A738(uint64_t a1, uint64_t a2, void *a3)
{
  id v11 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v6 = WeakRetained;
  if (WeakRetained)
  {
    if (v11 && a2)
    {
      [WeakRetained setDictionary:];
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = [v6 data];
      (*(void (**)(uint64_t, uint64_t, void *))(v7 + 16))(v7, 1, v8);
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 32);
      unint64_t v10 = [WeakRetained data];
      (*(void (**)(uint64_t, uint64_t, void *))(v9 + 16))(v9, a2, v10);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

id TUIStatsPhaseToString(uint64_t a1)
{
  if (qword_2DF400 != -1) {
    dispatch_once(&qword_2DF400, &stru_253080);
  }
  BOOL v2 = (void *)qword_2DF3F8;

  return [v2 objectAtIndexedSubscript:a1];
}

void sub_5B018(id a1)
{
  uint64_t v1 = (void *)qword_2DF3F8;
  qword_2DF3F8 = (uint64_t)&off_2662C0;
}

id TUIStatsEventToString(uint64_t a1)
{
  if (qword_2DF410 != -1) {
    dispatch_once(&qword_2DF410, &stru_2530A0);
  }
  BOOL v2 = (void *)qword_2DF408;

  return [v2 objectAtIndexedSubscript:a1];
}

void sub_5B094(id a1)
{
  uint64_t v1 = (void *)qword_2DF408;
  qword_2DF408 = (uint64_t)&off_2662D8;
}

__CFString *TUIStatsReasonToString(char a1)
{
  BOOL v2 = objc_opt_new();
  double v3 = v2;
  if ((a1 & 8) != 0)
  {
    [v2 addObject:@"load-entry"];
    if ((a1 & 4) == 0)
    {
LABEL_3:
      if ((a1 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"update-entry"];
  if ((a1 & 2) == 0)
  {
LABEL_4:
    if ((a1 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  [v3 addObject:@"environment"];
  if (a1) {
LABEL_5:
  }
    [v3 addObject:@"dynamic"];
LABEL_6:
  if ([v3 count])
  {
    double v4 = [v3 componentsJoinedByString:@","];
  }
  else
  {
    double v4 = @"none";
  }

  return v4;
}

void sub_5B188(void *a1, void *a2, __CFString *a3)
{
  id v16 = a1;
  id v5 = a2;
  unint64_t v6 = @"\n";
  if (a3) {
    unint64_t v6 = a3;
  }
  uint64_t v7 = v6;
  for (uint64_t i = 0; i != 5; ++i)
  {
    [v5 elapsedTimeForPhase:i];
    if (v9 > 0.0)
    {
      id v10 = v16;
      id v11 = v5;
      int64_t v12 = v7;
      int v13 = TUIStatsPhaseToString(i);
      [v11 elapsedTimeForPhase:i];
      double v15 = v14;

      [v10 appendFormat:@"%@: %fms%@", v13, v15 * 1000.0, v12];
    }
  }
}

void sub_5B2B8(void *a1, void *a2, __CFString *a3)
{
  id v10 = a1;
  id v5 = a2;
  unint64_t v6 = @"\n";
  if (a3) {
    unint64_t v6 = a3;
  }
  uint64_t v7 = v6;
  for (uint64_t i = 0; i != 29; ++i)
  {
    if ([v5 countForEvent:i])
    {
      double v9 = TUIStatsEventToString(i);
      [v10 appendFormat:@"%@: %lu %@", v9, [v5 countForEvent:i], v7];
    }
  }
}

void sub_5BC54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = [[TUIStatsFeedEntry alloc] initWithCollector:v5];

  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v6];
}

id sub_5BFC4(uint64_t a1, void *a2)
{
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(a1 + 32) + 48;
  do
  {
    id result = [a2 countForEvent:v3];
    *(void *)(v4 + 8 * v3++) += result;
  }
  while (v3 != 29);
  return result;
}

unint64_t sub_5C01C(uint64_t a1, void *a2)
{
  unint64_t result = (unint64_t)[a2 reason];
  *(void *)(*(void *)(a1 + 32) + 280) |= result;
  return result;
}

void sub_5CDC0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 80);
  if (v7)
  {
    id v8 = v7;
  }
  else
  {
    id v8 = [v5 UUID];
  }
  double v9 = v8;
  id v10 = *(void **)(*(void *)(a1 + 32) + 88);
  if (v10)
  {
    id v11 = v10;
  }
  else
  {
    id v11 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a3];
  }
  int64_t v12 = v11;
  int v13 = *(void **)(a1 + 48);
  if (!v13 || [v13 matchesUUID:v9 uid:v12])
  {
    [v6 offset];
    memset(&v22, 0, sizeof(v22));
    CGAffineTransformMakeTranslation(&t2, v14, v15);
    long long v16 = *(_OWORD *)(a1 + 88);
    *(_OWORD *)&v20.a = *(_OWORD *)(a1 + 72);
    *(_OWORD *)&v20.c = v16;
    *(_OWORD *)&v20.tx = *(_OWORD *)(a1 + 104);
    CGAffineTransformConcat(&v22, &v20, &t2);
    uint64_t v17 = [*(id *)(a1 + 48) queryMatchedWithUUID:v9 uid:v12];
    [*(id *)(a1 + 56) setSectionUUID:v9];
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 64);
    CGAffineTransform v20 = v22;
    [v6 appendReferencesToCollector:v18 transform:&v20 query:v17 liveTransformResolver:v19];
  }
}

void sub_5DF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_5DF68(uint64_t a1, uint64_t a2, void *a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_5DFE0;
  void v4[3] = &unk_253148;
  v4[4] = *(void *)(a1 + 32);
  return [a3 enumerateObjectsUsingBlock:v4];
}

void sub_5DFE0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(CGRect **)(*(void *)(a1 + 32) + 8);
  [a2 frame];
  v8.origin.x = v4;
  v8.origin.y = v5;
  v8.size.double width = v6;
  v8.size.double height = v7;
  *(CGRect *)(*(void *)(*(void *)(a1 + 32) + 8) + 32) = CGRectUnion(v3[1], v8);
}

void sub_5E498(void *a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1[4] + 24);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      CGFloat v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) appendToBuilder:a1[5] context:a1[6]];
        CGFloat v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_5E724(void *a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1[4] + 16);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      CGFloat v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) appendToBuilder:a1[5] context:a1[6] v7];
        CGFloat v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_5E8C4(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"color";
  v6[1] = @"text-alignment";
  void v6[2] = @"max-lines";
  void v6[3] = @"min-lines";
  double v6[4] = @"hide-ellipses";
  void v6[5] = @"font";
  void v6[6] = @"html-tags";
  void v6[7] = @"role";
  void v6[8] = @"line-balancing";
  void v6[9] = @"should-hyphenate";
  v6[10] = @"allow-hanging-punctuation";
  void v6[11] = @"allow-shrink-to-fit";
  v6[12] = @"blend-mode";
  id v3 = +[NSArray arrayWithObjects:v6 count:13];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  uint64_t v5 = (void *)qword_2DF418;
  qword_2DF418 = (uint64_t)v4;
}

unint64_t sub_5ED20(void *a1, unint64_t a2)
{
  id v3 = a1;
  if ([v3 length])
  {
    id v4 = [v3 componentsSeparatedByString:@","];
    unint64_t v5 = a2 & 0xFFFFFFFFFFFFFFFCLL | [v4 containsObject:@"parse"];
    if ([v4 containsObject:@"interpret"]) {
      a2 |= 3uLL;
    }
    else {
      a2 = v5;
    }
  }
  return a2;
}

uint64_t sub_5FD40(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

id sub_6001C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v6.receiver = *(id *)(a1 + 64);
  v6.super_class = (Class)&OBJC_METACLASS___TUIElementTextAInstantiator;
  return [super instantiateChildrenOfNode:*(unsigned int *)(a1 + 72) object:v2 containingBuilder:v3 context:v4 block:v1];
}

id sub_60528(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v6.receiver = *(id *)(a1 + 64);
  v6.super_class = (Class)&OBJC_METACLASS___TUIElementTextDropCapInstantiator;
  return [super instantiateChildrenOfNode:*(unsigned int *)(a1 + 72) object:v2 containingBuilder:v3 context:v4 block:v1];
}

id sub_60AA8(const xmlNode *a1, unint64_t a2, uint64_t a3)
{
  if (xmlNodeIsText(a1))
  {
    objc_super v6 = [TUIStringTextFragment alloc];
    id v7 = [objc_alloc((Class)NSString) initWithBytes:a1->content length:xmlStrlen(a1->content) encoding:4];
    long long v8 = [(TUIStringTextFragment *)v6 initWithString:v7];

    unint64_t v33 = v8;
    long long v9 = &v33;
LABEL_3:
    id v10 = +[NSArray arrayWithObjects:v9 count:1];
LABEL_4:
    id v11 = v10;
LABEL_5:

    goto LABEL_25;
  }
  if (!xmlStrcasecmp(a1->name, (const xmlChar *)"br"))
  {
    if (a3)
    {
      long long v8 = [[TUIStringTextFragment alloc] initWithString:@"\n"];
      uint64_t v32 = v8;
      long long v9 = &v32;
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  if (!xmlStrcasecmp(a1->name, (const xmlChar *)"str") || !xmlStrcasecmp(a1->name, (const xmlChar *)"attr"))
  {
LABEL_24:
    id v11 = 0;
    goto LABEL_25;
  }
  if (a2 <= 0x32)
  {
    long long v8 = (TUIStringTextFragment *)objc_opt_new();
    children = a1->children;
    if (children)
    {
      unint64_t v13 = a2 + 1;
      do
      {
        CGFloat v14 = sub_60AA8(children, v13, a3);
        [(TUIStringTextFragment *)v8 addObjectsFromArray:v14];

        children = children->next;
      }
      while (children);
    }
    if ((a3 & 1) == 0) {
      goto LABEL_21;
    }
    if (xmlStrcasecmp(a1->name, (const xmlChar *)"span"))
    {
      if (xmlStrcasecmp(a1->name, (const xmlChar *)"em") && xmlStrcasecmp(a1->name, (const xmlChar *)"i"))
      {
        if (xmlStrcasecmp(a1->name, (const xmlChar *)"b") && xmlStrcasecmp(a1->name, (const xmlChar *)"strong"))
        {
          if (xmlStrcasecmp(a1->name, (const xmlChar *)"s"))
          {
            if (xmlStrcasecmp(a1->name, (const xmlChar *)"a"))
            {
LABEL_21:
              id v10 = [(TUIStringTextFragment *)v8 copy];
              goto LABEL_4;
            }
            Prop = xmlGetProp(a1, (const xmlChar *)"href");
            if (Prop
              && (uint64_t v24 = (TUIStyledTextFragment *)[objc_alloc((Class)NSString) initWithBytes:Prop length:xmlStrlen(Prop) encoding:4]) != 0)
            {
              uint64_t v17 = v24;
              unsigned int v25 = +[NSURL URLWithString:v24];
              xmlFree(Prop);
              if (v25)
              {
                int v26 = [[TUIHyperlinkTextFragment alloc] initWithURL:v25 fragments:v8];
                int v27 = v26;
                id v11 = +[NSArray arrayWithObjects:&v27 count:1];

                goto LABEL_34;
              }
            }
            else
            {
              xmlFree(Prop);
              uint64_t v17 = 0;
            }
            id v21 = [(TUIStringTextFragment *)v8 copy];
LABEL_33:
            id v11 = v21;
LABEL_34:

            goto LABEL_5;
          }
          CGAffineTransform v22 = [TUIStyledTextFragment alloc];
          uint64_t v17 = [(TUIStyledTextFragment *)v22 initWithStyle:8 attributes:TUIAttributesNil fragments:v8];
          unint64_t v28 = v17;
          uint64_t v18 = &v28;
        }
        else
        {
          CGAffineTransform v20 = [TUIStyledTextFragment alloc];
          uint64_t v17 = [(TUIStyledTextFragment *)v20 initWithStyle:1 attributes:TUIAttributesNil fragments:v8];
          uint64_t v29 = v17;
          uint64_t v18 = &v29;
        }
      }
      else
      {
        long long v16 = [TUIStyledTextFragment alloc];
        uint64_t v17 = [(TUIStyledTextFragment *)v16 initWithStyle:2 attributes:TUIAttributesNil fragments:v8];
        uint64_t v30 = v17;
        uint64_t v18 = &v30;
      }
    }
    else
    {
      uint64_t v19 = [TUIStyledTextFragment alloc];
      uint64_t v17 = [(TUIStyledTextFragment *)v19 initWithStyle:0 attributes:TUIAttributesNil fragments:v8];
      uint64_t v31 = v17;
      uint64_t v18 = &v31;
    }
    id v21 = +[NSArray arrayWithObjects:v18 count:1];
    goto LABEL_33;
  }
  id v11 = &__NSArray0__struct;
LABEL_25:

  return v11;
}

void sub_60F0C(id a1)
{
  uint64_t v1 = +[NSCharacterSet characterSetWithCharactersInString:@"<>&"];
  uint64_t v2 = (void *)qword_2DF428;
  qword_2DF428 = v1;
}

void sub_61474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_614F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_61564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_61F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  sub_63800((uint64_t)&a52);
  _Unwind_Resume(a1);
}

uint64_t sub_62030(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if ((uint64_t *)a2 != a3)
  {
    sub_683BC(a3, *(uint64_t **)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        long long v8 = *(void **)(v7 - 40);
        v7 -= 40;
      }
      while (v7 != v6);
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v6;
  }
  return a2;
}

uint64_t sub_620A0(uint64_t a1, id a2)
{
  for (uint64_t i = *(void *)(a1 + 24); i != *(void *)(a1 + 32); i += 96)
  {
    id v5 = *(id *)(i + 32);
    id v6 = [v5 role];

    if (v6 == a2) {
      break;
    }
  }
  return i;
}

void sub_62114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_62124(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 <= 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = a3;
  }
  unint64_t v4 = a2 + v3 - 1;
  unint64_t v5 = *(void *)(a1 + 112);
  if (v5)
  {
    unint64_t v6 = v4 / v5 * v5;
    v4 %= v5;
    double v7 = *(double *)(a1 + 72);
    double v8 = *(double *)(a1 + 80);
    double v9 = v8 + v7;
    if (v8 == 0.0)
    {
      double v12 = v9 * (double)v6;
      double v11 = *(double *)(a1 + 104);
      if (v11 > 0.0) {
        double v12 = floor(v12 * v11) / v11;
      }
    }
    else
    {
      double v10 = -(v8 - v9 * (double)(v6 + 1));
      double v11 = *(double *)(a1 + 104);
      if (v11 > 0.0) {
        double v10 = floor(v10 * v11) / v11;
      }
      double v12 = v10 - v7;
    }
  }
  else
  {
    double v7 = *(double *)(a1 + 72);
    double v8 = *(double *)(a1 + 80);
    double v11 = *(double *)(a1 + 104);
    double v9 = v8 + v7;
    double v12 = 0.0;
  }
  if (v8 == 0.0)
  {
    double v17 = -(v8 - v9 * (double)(v4 + 1));
    if (v11 > 0.0) {
      double v17 = floor(v11 * v17) / v11;
    }
    if (v5)
    {
      unint64_t v18 = a2 / v5 * v5;
      unint64_t v19 = a2 % v5;
      double v20 = v9 * (double)v18;
      if (v11 <= 0.0)
      {
        double v21 = v9 * (double)v19;
        goto LABEL_31;
      }
      double v20 = floor(v11 * v20) / v11;
      double v21 = v9 * (double)v19;
    }
    else
    {
      double v21 = v9 * (double)a2;
      double v20 = 0.0;
      if (v11 <= 0.0)
      {
LABEL_31:
        double v24 = v12 + v17;
        double v25 = v20 + v21;
        return v24 - v25;
      }
    }
    double v21 = floor(v11 * v21) / v11;
    goto LABEL_31;
  }
  double v13 = v8 * -2.0 + v9 * (double)(v4 + 2);
  if (v11 > 0.0) {
    double v13 = floor(v11 * v13) / v11;
  }
  if (v5)
  {
    unint64_t v14 = a2 / v5 * v5;
    a2 -= v14;
    double v15 = -(v8 - v9 * (double)(v14 + 1));
    if (v11 > 0.0) {
      double v15 = floor(v11 * v15) / v11;
    }
    double v16 = v15 - v7;
  }
  else
  {
    double v16 = 0.0;
  }
  double v22 = v12 + v13;
  double v23 = -(v8 - v9 * (double)(a2 + 1));
  if (v11 > 0.0) {
    double v23 = floor(v11 * v23) / v11;
  }
  double v24 = v22 - v7;
  double v25 = v16 + v23 - v7;
  return v24 - v25;
}

void sub_622EC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 64) = a2;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = *(id *)(a1 + 88);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v9;
    do
    {
      unint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = *(id *)(*((void *)&v8 + 1) + 8 * (void)v6);
        [v7 setHidden:a2, (void)v8];

        unint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_623F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_62424(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v16 = 0;
  id v17 = 0;
  sub_686DC(a2, a1, (uint64_t *)&v16);
  id v6 = v17;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_6874C;
  v13[3] = &unk_253200;
  double v15 = a1;
  id v7 = v5;
  id v14 = v7;
  [v6 enumerateIndexesUsingBlock:v13];

  id v8 = v16;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unint64_t v10[2] = sub_68764;
  void v10[3] = &unk_253200;
  double v12 = a1;
  id v9 = v7;
  id v11 = v9;
  [v8 enumerateIndexesUsingBlock:v10];
}

void sub_62578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

uint64_t sub_625C8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  objc_storeStrong((id *)(a1 + 16), *(id *)(a2 + 16));
  sub_64198((void **)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  return a1;
}

double sub_62620(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 112);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 8) - 1;
    unint64_t v3 = v2 / v1 * v1;
    unint64_t v4 = v2 % v1;
    double v6 = *(double *)(a1 + 72);
    double v5 = *(double *)(a1 + 80);
    double v7 = v5 + v6;
    if (v5 == 0.0)
    {
      double v20 = v7 * (double)v3;
      double v21 = *(double *)(a1 + 104);
      if (v21 > 0.0) {
        double v20 = floor(v20 * v21) / v21;
      }
      double v22 = -(v5 - v7 * (double)(v4 + 1));
      if (v21 > 0.0) {
        double v22 = floor(v21 * v22) / v21;
      }
      return v20 + v22;
    }
    else
    {
      double v8 = -(v5 - v7 * (double)(v3 + 1));
      double v9 = *(double *)(a1 + 104);
      if (v9 > 0.0) {
        double v8 = floor(v8 * v9) / v9;
      }
      double v10 = v8 - v6;
      double v11 = v5 * -2.0 + v7 * (double)(v4 + 2);
      if (v9 > 0.0) {
        double v11 = floor(v9 * v11) / v9;
      }
      return v10 + v11 - v6;
    }
  }
  else
  {
    unint64_t v13 = *(void *)(a1 + 8);
    double v14 = *(double *)(a1 + 72);
    double v15 = *(double *)(a1 + 80);
    double v16 = v15 + v14;
    double v17 = *(double *)(a1 + 104);
    if (v15 == 0.0)
    {
      double v23 = -(v15 - v16 * (double)v13);
      if (v17 > 0.0) {
        double v23 = floor(v17 * v23) / v17;
      }
      double v19 = v23 + 0.0;
    }
    else
    {
      double v18 = v15 * -2.0 + v16 * (double)(v13 + 1);
      if (v17 > 0.0) {
        double v18 = floor(v17 * v18) / v17;
      }
      double v19 = v18 + 0.0 - v14;
    }
    return *(double *)(a1 + 32) + v19 + *(double *)(a1 + 48);
  }
}

double sub_62778(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v75 = 0;
  unint64_t v76 = 0;
  uint64_t v77 = 0;
  if (!a4)
  {
    long long v8 = *(_OWORD *)(a1 + 16);
    long long v73 = *(_OWORD *)a1;
    long long v74 = v8;
    unint64_t v4 = 1;
    while (*((void *)&v73 + 1) != *(void *)(a1 + 40) || *((void *)&v74 + 1) != *(void *)(a1 + 56))
    {
      if (v4 <= (uint64_t)(*(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                     + 96 * *((void *)&v74 + 1)
                                     + 48)
                         - *(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                     + 96 * *((void *)&v74 + 1)
                                     + 40)) >> 6)
        unint64_t v4 = (uint64_t)(*(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                 + 96 * *((void *)&v74 + 1)
                                 + 48)
                     - *(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                 + 96 * *((void *)&v74 + 1)
                                 + 40)) >> 6;
      ++*((void *)&v74 + 1);
      sub_68774((uint64_t)&v73);
    }
    uint64_t v6 = a2;
  }
  *(void *)&long long v73 = 0;
  sub_68854((uint64_t)&v75, v4, &v73);
  long long v9 = *(_OWORD *)(a1 + 16);
  long long v73 = *(_OWORD *)a1;
  long long v74 = v9;
  while (1)
  {
    uint64_t v10 = *((void *)&v74 + 1);
    if (*((void *)&v73 + 1) == *(void *)(a1 + 40) && *((void *)&v74 + 1) == *(void *)(a1 + 56)) {
      break;
    }
    uint64_t v11 = *(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24);
    double v12 = (unint64_t *)(v11 + 96 * *((void *)&v74 + 1));
    uint64_t v13 = v12[5];
    unint64_t v14 = v12[6];
    if (v13 != v14)
    {
      unint64_t v15 = 0;
      double v16 = (unint64_t *)(v11 + 96 * *((void *)&v74 + 1) + 16);
      do
      {
        double v17 = sub_62124(v6, *v12, *v16);
        sub_684E0(v13, 0, (uint64_t)&v72, v17);
        if (v15 < v4) {
          *((double *)v75 + v15) = fmax(*((double *)v75 + v15), v18);
        }
        ++v15;
        v13 += 64;
      }
      while (v13 != v14);
      uint64_t v10 = *((void *)&v74 + 1);
    }
    *((void *)&v74 + 1) = v10 + 1;
    sub_68774((uint64_t)&v73);
  }
  memset(__p, 0, sizeof(__p));
  *(void *)&long long v73 = 0;
  sub_68854((uint64_t)__p, v4 + 1, &v73);
  double v19 = (double *)v75;
  double v20 = v76;
  double v21 = (double *)__p[0];
  if (v75 == v76)
  {
    uint64_t v26 = 0;
    double v23 = 0.0;
  }
  else
  {
    uint64_t v22 = 0;
    double v23 = 0.0;
    double v24 = (double *)__p[0];
    do
    {
      double v25 = *v19++;
      *v24++ = v23;
      double v23 = v23 + v25;
      --v22;
    }
    while (v19 != v20);
    uint64_t v26 = -v22;
  }
  v21[v26] = v23;
  long long v27 = *(_OWORD *)(a1 + 16);
  v70[0] = *(_OWORD *)a1;
  v70[1] = v27;
  long long v28 = *(_OWORD *)(a1 + 48);
  v69[0] = *(_OWORD *)(a1 + 32);
  v69[1] = v28;
  *(void *)&long long v67 = v6;
  *((void *)&v67 + 1) = __p;
  uint64_t v68 = a1;
  sub_68884(a3, v70, (uint64_t)v69, &v67);
  uint64_t v29 = *(void **)(a1 + 120);
  long long v30 = *(_OWORD *)&__p[1];
  double v31 = *((double *)__p[1] - 1);
  long long v32 = *(_OWORD *)(a1 + 104);
  *(void **)(a1 + 104) = __p[0];
  *(_OWORD *)__p = v32;
  *(_OWORD *)(a1 + 112) = v30;
  __p[2] = v29;
  double v65 = sub_62620(v6);
  long long v33 = *(_OWORD *)(a1 + 16);
  long long v73 = *(_OWORD *)a1;
  long long v74 = v33;
  while (1)
  {
    uint64_t v34 = *((void *)&v74 + 1);
    if (*((void *)&v73 + 1) == *(void *)(a1 + 40) && *((void *)&v74 + 1) == *(void *)(a1 + 56)) {
      break;
    }
    uint64_t v35 = *(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24);
    int v36 = *(_DWORD *)(a1 + 80);
    if (v36)
    {
      uint64_t v37 = v35 + 96 * *((void *)&v74 + 1);
      uint64_t v38 = *(void *)(v37 + 40);
      uint64_t v39 = *(void *)(v37 + 48);
      double v40 = 0.0;
      while (v38 != v39)
      {
        double v40 = v40 + *(double *)(v38 + 56);
        v38 += 64;
      }
      double v41 = 0.0;
      if (v36 == 5) {
        double v41 = 1.0;
      }
      if (v36 == 3) {
        double v41 = 1.0;
      }
      if (v36 == 2) {
        double v42 = 0.5;
      }
      else {
        double v42 = v41;
      }
    }
    else
    {
      double v42 = 0.0;
      double v40 = 0.0;
    }
    sub_68CD0(v6, *(void *)(v35 + 96 * *((void *)&v74 + 1)), *(void *)(v35 + 96 * *((void *)&v74 + 1) + 16), 1);
    uint64_t v44 = v35 + 96 * v34;
    uint64_t v46 = *(void *)(v44 + 40);
    uint64_t v45 = *(void *)(v44 + 48);
    if (v46 != v45)
    {
      double v47 = v43;
      unint64_t v48 = 0;
      double v49 = v42 * (v31 - v40);
      do
      {
        double v50 = 0.0;
        double v51 = 0.0;
        if (v48 < v4) {
          double v51 = *((double *)v75 + v48);
        }
        if (*(_DWORD *)(a1 + 80))
        {
          double v51 = *(double *)(v46 + 56);
        }
        else
        {
          int v52 = [(char *)[*(id *)v46 valign:0.0]];
          double v53 = 0.0;
          if ((unint64_t)(v52 - 1) <= 3) {
            double v53 = dbl_243360[(void)(v52 - 1)];
          }
          double v50 = v53 * (v51 - *(double *)(v46 + 56));
        }
        double v54 = v47 + *(double *)(a1 + 64);
        double v55 = v50 + v49 + *(double *)(a1 + 72);
        *(double *)(v46 + 32) = v54;
        *(double *)(v46 + 40) = v55;
        uint64_t v57 = *(void *)(v46 + 8);
        uint64_t v56 = *(void *)(v46 + 16);
        while (v57 != v56)
        {
          uint64_t v58 = *(void *)(v57 + 56);
          uint64_t v59 = a3[14] + 152 * v58;
          int v60 = (const CGPoint *)(v59 + 136);
          p_y = (CGFloat *)(v59 + 144);
          BOOL v62 = v58 == -1;
          if (v58 == -1) {
            int v63 = &CGPointZero;
          }
          else {
            int v63 = v60;
          }
          if (v62) {
            p_y = &CGPointZero.y;
          }
          sub_69564((double *)(v57 + 8), v54 - v63->x + *(double *)(v57 + 72), v55 - *p_y + *(double *)(v57 + 64));
          v57 += 96;
        }
        double v49 = v49 + v51;
        ++v48;
        v46 += 64;
        uint64_t v6 = a2;
      }
      while (v46 != v45);
    }
    ++*((void *)&v74 + 1);
    sub_68774((uint64_t)&v73);
  }
  *(double *)(a1 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v65;
  *(double *)(a1 + 96) = v31;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v75)
  {
    unint64_t v76 = (double *)v75;
    operator delete(v75);
  }
  return v65;
}

void sub_62C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p) {
    operator delete(__p);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

void sub_62C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (*(void *)(a1 + 16)) {
    BOOL v6 = a3 == a4;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    uint64_t v10 = a3;
    do
    {
      if (*(void *)(v10 + 16) == 1)
      {
        sub_68CD0(a2, *(void *)v10, 1uLL, 1);
        double v14 = v13;
        double v15 = *(double *)(a2 + 88);
        double v16 = *(double *)(a1 + 8);
        id v17 = *(id *)(v10 + 32);
        double v18 = [v17 identifier];
        sub_695E4((void *)a1, v18, a5 + v14, a6 - (v16 * -0.5 + v15 * 0.5));
      }
      v10 += 96;
    }
    while (v10 != a4);
  }
}

void sub_62D88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_62DA4(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v4 = a4;
  int v66 = 0;
  long long v67 = 0;
  uint64_t v68 = 0;
  if (!a4)
  {
    long long v8 = *(unint64_t **)a1;
    long long v9 = *(unint64_t **)(a1 + 8);
    unint64_t v4 = 1;
    if (v9 != *(unint64_t **)a1)
    {
      do
      {
        if (v4 <= (uint64_t)(v8[7] - v8[6]) >> 6) {
          unint64_t v4 = (uint64_t)(v8[7] - v8[6]) >> 6;
        }
        v8 += 12;
      }
      while (v8 != v9);
    }
  }
  __p[0] = 0;
  sub_68854((uint64_t)&v66, v4, __p);
  uint64_t v11 = *(unint64_t **)a1;
  uint64_t v10 = *(unint64_t **)(a1 + 8);
  if (v10 != *(unint64_t **)a1)
  {
    do
    {
      uint64_t v12 = v11[6];
      unint64_t v13 = v11[7];
      if (v12 != v13)
      {
        unint64_t v14 = 0;
        do
        {
          double v15 = sub_62124(a2, *v11, v11[2]);
          sub_684E0(v12, 0, (uint64_t)&v65, v15);
          if (v14 < v4) {
            *((double *)v66 + v14) = fmax(*((double *)v66 + v14), v16);
          }
          ++v14;
          v12 += 64;
        }
        while (v12 != v13);
        uint64_t v10 = *(unint64_t **)(a1 + 8);
      }
      v11 += 12;
    }
    while (v11 != v10);
  }
  memset(__p, 0, sizeof(__p));
  uint64_t v63 = 0;
  sub_68854((uint64_t)__p, v4 + 1, &v63);
  id v17 = (double *)v66;
  double v18 = v67;
  double v19 = (double *)__p[0];
  if (v66 == v67)
  {
    uint64_t v24 = 0;
    double v21 = 0.0;
  }
  else
  {
    uint64_t v20 = 0;
    double v21 = 0.0;
    uint64_t v22 = (double *)__p[0];
    do
    {
      double v23 = *v17++;
      *v22++ = v21;
      double v21 = v21 + v23;
      --v20;
    }
    while (v17 != v18);
    uint64_t v24 = -v20;
  }
  v19[v24] = v21;
  double v25 = *(uint64_t **)a1;
  uint64_t v26 = *(uint64_t **)(a1 + 8);
  *(void *)&long long v61 = a2;
  *((void *)&v61 + 1) = __p;
  uint64_t v62 = a1;
  sub_697B4(a3, v25, v26, &v61);
  long long v27 = *(void **)(a1 + 72);
  long long v28 = *(_OWORD *)&__p[1];
  double v29 = *((double *)__p[1] - 1);
  long long v30 = *(_OWORD *)(a1 + 56);
  *(void **)(a1 + 56) = __p[0];
  *(_OWORD *)__p = v30;
  *(_OWORD *)(a1 + 64) = v28;
  __p[2] = v27;
  double v58 = sub_62620(a2);
  double v31 = *(unint64_t **)a1;
  if (*(void *)(a1 + 8) != *(void *)a1)
  {
    uint64_t v59 = a2;
    do
    {
      int v32 = *(_DWORD *)(a1 + 32);
      double v33 = 0.0;
      double v34 = 0.0;
      if (v32)
      {
        for (unint64_t i = v31[6]; i != v31[7]; i += 64)
          double v34 = v34 + *(double *)(i + 56);
        double v36 = 0.0;
        if (v32 == 5) {
          double v36 = 1.0;
        }
        if (v32 == 3) {
          double v36 = 1.0;
        }
        if (v32 == 2) {
          double v33 = 0.5;
        }
        else {
          double v33 = v36;
        }
      }
      sub_68CD0(a2, *v31, v31[2], 1);
      unint64_t v38 = v31[6];
      unint64_t v39 = v31[7];
      int v60 = v31;
      if (v38 != v39)
      {
        double v40 = v37;
        unint64_t v41 = 0;
        double v42 = v33 * (v29 - v34);
        do
        {
          double v43 = 0.0;
          double v44 = 0.0;
          if (v41 < v4) {
            double v44 = *((double *)v66 + v41);
          }
          if (*(_DWORD *)(a1 + 32))
          {
            double v44 = *(double *)(v38 + 56);
          }
          else
          {
            uint64_t v45 = [(char *)[*(id *)v38 valign:0.0]];
            double v46 = 0.0;
            if ((unint64_t)(v45 - 1) <= 3) {
              double v46 = dbl_243360[(void)(v45 - 1)];
            }
            double v43 = v46 * (v44 - *(double *)(v38 + 56));
          }
          double v47 = v40 + *(double *)(a1 + 16);
          double v48 = v43 + v42 + *(double *)(a1 + 24);
          *(double *)(v38 + 32) = v47;
          *(double *)(v38 + 40) = v48;
          uint64_t v49 = *(void *)(v38 + 8);
          uint64_t v50 = *(void *)(v38 + 16);
          while (v49 != v50)
          {
            uint64_t v51 = *(void *)(v49 + 56);
            uint64_t v52 = a3[14] + 152 * v51;
            double v53 = (const CGPoint *)(v52 + 136);
            p_y = (CGFloat *)(v52 + 144);
            BOOL v55 = v51 == -1;
            if (v51 == -1) {
              uint64_t v56 = &CGPointZero;
            }
            else {
              uint64_t v56 = v53;
            }
            if (v55) {
              p_y = &CGPointZero.y;
            }
            sub_69564((double *)(v49 + 8), v47 - v56->x + *(double *)(v49 + 72), v48 - *p_y + *(double *)(v49 + 64));
            v49 += 96;
          }
          double v42 = v42 + v44;
          ++v41;
          v38 += 64;
        }
        while (v38 != v39);
      }
      a2 = v59;
      double v31 = v60 + 12;
    }
    while (v60 + 12 != *(unint64_t **)(a1 + 8));
  }
  *(double *)(a1 + 40) = v58;
  *(double *)(a1 + sub_3BD4((uint64_t)this + 48) = v29;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v66)
  {
    long long v67 = (double *)v66;
    operator delete(v66);
  }
  return v58;
}

void sub_63158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  if (a21) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

double sub_631A8(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v75 = 0;
  unint64_t v76 = 0;
  uint64_t v77 = 0;
  if (!a4)
  {
    long long v8 = *(_OWORD *)(a1 + 16);
    long long v73 = *(_OWORD *)a1;
    long long v74 = v8;
    unint64_t v4 = 1;
    while (*((void *)&v73 + 1) != *(void *)(a1 + 40) || *((void *)&v74 + 1) != *(void *)(a1 + 56))
    {
      if (v4 <= (uint64_t)(*(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                     + 96 * *((void *)&v74 + 1)
                                     + 48)
                         - *(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                     + 96 * *((void *)&v74 + 1)
                                     + 40)) >> 6)
        unint64_t v4 = (uint64_t)(*(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                 + 96 * *((void *)&v74 + 1)
                                 + 48)
                     - *(void *)(*(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24)
                                 + 96 * *((void *)&v74 + 1)
                                 + 40)) >> 6;
      ++*((void *)&v74 + 1);
      sub_69F6C((uint64_t)&v73);
    }
    uint64_t v6 = a2;
  }
  *(void *)&long long v73 = 0;
  sub_68854((uint64_t)&v75, v4, &v73);
  long long v9 = *(_OWORD *)(a1 + 16);
  long long v73 = *(_OWORD *)a1;
  long long v74 = v9;
  while (1)
  {
    uint64_t v10 = *((void *)&v74 + 1);
    if (*((void *)&v73 + 1) == *(void *)(a1 + 40) && *((void *)&v74 + 1) == *(void *)(a1 + 56)) {
      break;
    }
    uint64_t v11 = *(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24);
    uint64_t v12 = (unint64_t *)(v11 + 96 * *((void *)&v74 + 1));
    uint64_t v13 = v12[5];
    unint64_t v14 = v12[6];
    if (v13 != v14)
    {
      unint64_t v15 = 0;
      double v16 = (unint64_t *)(v11 + 96 * *((void *)&v74 + 1) + 16);
      do
      {
        double v17 = sub_62124(v6, *v12, *v16);
        sub_684E0(v13, 0, (uint64_t)&v72, v17);
        if (v15 < v4) {
          *((double *)v75 + v15) = fmax(*((double *)v75 + v15), v18);
        }
        ++v15;
        v13 += 64;
      }
      while (v13 != v14);
      uint64_t v10 = *((void *)&v74 + 1);
    }
    *((void *)&v74 + 1) = v10 + 1;
    sub_69F6C((uint64_t)&v73);
  }
  memset(__p, 0, sizeof(__p));
  *(void *)&long long v73 = 0;
  sub_68854((uint64_t)__p, v4 + 1, &v73);
  double v19 = (double *)v75;
  uint64_t v20 = v76;
  double v21 = (double *)__p[0];
  if (v75 == v76)
  {
    uint64_t v26 = 0;
    double v23 = 0.0;
  }
  else
  {
    uint64_t v22 = 0;
    double v23 = 0.0;
    uint64_t v24 = (double *)__p[0];
    do
    {
      double v25 = *v19++;
      *v24++ = v23;
      double v23 = v23 + v25;
      --v22;
    }
    while (v19 != v20);
    uint64_t v26 = -v22;
  }
  v21[v26] = v23;
  long long v27 = *(_OWORD *)(a1 + 16);
  v70[0] = *(_OWORD *)a1;
  v70[1] = v27;
  long long v28 = *(_OWORD *)(a1 + 48);
  v69[0] = *(_OWORD *)(a1 + 32);
  v69[1] = v28;
  *(void *)&long long v67 = v6;
  *((void *)&v67 + 1) = __p;
  uint64_t v68 = a1;
  sub_6A04C(a3, v70, (uint64_t)v69, &v67);
  double v29 = *(void **)(a1 + 120);
  long long v30 = *(_OWORD *)&__p[1];
  double v31 = *((double *)__p[1] - 1);
  long long v32 = *(_OWORD *)(a1 + 104);
  *(void **)(a1 + 104) = __p[0];
  *(_OWORD *)__p = v32;
  *(_OWORD *)(a1 + 112) = v30;
  __p[2] = v29;
  double v65 = sub_62620(v6);
  long long v33 = *(_OWORD *)(a1 + 16);
  long long v73 = *(_OWORD *)a1;
  long long v74 = v33;
  while (1)
  {
    uint64_t v34 = *((void *)&v74 + 1);
    if (*((void *)&v73 + 1) == *(void *)(a1 + 40) && *((void *)&v74 + 1) == *(void *)(a1 + 56)) {
      break;
    }
    uint64_t v35 = *(void *)(*(void *)v73 + 88 * *((void *)&v73 + 1) + 24);
    int v36 = *(_DWORD *)(a1 + 80);
    if (v36)
    {
      uint64_t v37 = v35 + 96 * *((void *)&v74 + 1);
      uint64_t v38 = *(void *)(v37 + 40);
      uint64_t v39 = *(void *)(v37 + 48);
      double v40 = 0.0;
      while (v38 != v39)
      {
        double v40 = v40 + *(double *)(v38 + 56);
        v38 += 64;
      }
      double v41 = 0.0;
      if (v36 == 5) {
        double v41 = 1.0;
      }
      if (v36 == 3) {
        double v41 = 1.0;
      }
      if (v36 == 2) {
        double v42 = 0.5;
      }
      else {
        double v42 = v41;
      }
    }
    else
    {
      double v42 = 0.0;
      double v40 = 0.0;
    }
    sub_68CD0(v6, *(void *)(v35 + 96 * *((void *)&v74 + 1)), *(void *)(v35 + 96 * *((void *)&v74 + 1) + 16), 1);
    uint64_t v44 = v35 + 96 * v34;
    uint64_t v46 = *(void *)(v44 + 40);
    uint64_t v45 = *(void *)(v44 + 48);
    if (v46 != v45)
    {
      double v47 = v43;
      unint64_t v48 = 0;
      double v49 = v42 * (v31 - v40);
      do
      {
        double v50 = 0.0;
        double v51 = 0.0;
        if (v48 < v4) {
          double v51 = *((double *)v75 + v48);
        }
        if (*(_DWORD *)(a1 + 80))
        {
          double v51 = *(double *)(v46 + 56);
        }
        else
        {
          uint64_t v52 = [*(id *)v46 valign:0.0];
          double v53 = 0.0;
          if ((unint64_t)(v52 - 1) <= 3) {
            double v53 = dbl_243360[(void)(v52 - 1)];
          }
          double v50 = v53 * (v51 - *(double *)(v46 + 56));
        }
        double v54 = v47 + *(double *)(a1 + 64);
        double v55 = v50 + v49 + *(double *)(a1 + 72);
        *(double *)(v46 + 32) = v54;
        *(double *)(v46 + 40) = v55;
        uint64_t v57 = *(void *)(v46 + 8);
        uint64_t v56 = *(void *)(v46 + 16);
        while (v57 != v56)
        {
          uint64_t v58 = *(void *)(v57 + 56);
          uint64_t v59 = a3[14] + 152 * v58;
          int v60 = (const CGPoint *)(v59 + 136);
          p_y = (CGFloat *)(v59 + 144);
          BOOL v62 = v58 == -1;
          if (v58 == -1) {
            uint64_t v63 = &CGPointZero;
          }
          else {
            uint64_t v63 = v60;
          }
          if (v62) {
            p_y = &CGPointZero.y;
          }
          sub_69564((double *)(v57 + 8), v54 - v63->x + *(double *)(v57 + 72), v55 - *p_y + *(double *)(v57 + 64));
          v57 += 96;
        }
        double v49 = v49 + v51;
        ++v48;
        v46 += 64;
        uint64_t v6 = a2;
      }
      while (v46 != v45);
    }
    ++*((void *)&v74 + 1);
    sub_69F6C((uint64_t)&v73);
  }
  *(double *)(a1 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v65;
  *(double *)(a1 + 96) = v31;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v75)
  {
    unint64_t v76 = (double *)v75;
    operator delete(v75);
  }
  return v65;
}

void sub_6366C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p) {
    operator delete(__p);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

void sub_636C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = a2;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = *(id *)(a1 + 88);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = *(id *)(*((void *)&v8 + 1) + 8 * (void)v6);
        [v7 setHidden:a2, (void)v8];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_637D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_63800(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 112);
  if (v2)
  {
    *(void *)(a1 + 120) = v2;
    operator delete(v2);
  }
  id v3 = *(void **)(a1 + 88);
  if (v3)
  {
    *(void *)(a1 + 96) = v3;
    operator delete(v3);
  }
  id v4 = *(void **)(a1 + 64);
  if (v4)
  {
    *(void *)(a1 + 72) = v4;
    operator delete(v4);
  }
  uint64_t v6 = (void **)(a1 + 24);
  sub_6427C(&v6);
  uint64_t v6 = (void **)a1;
  sub_644C0(&v6);
  return a1;
}

void sub_6396C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_63AA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_63ADC(uint64_t a1, unint64_t a2, double *a3, void *a4, void *a5)
{
  id v9 = a4;
  id v42 = a5;
  if ([*(id *)(a1 + 16) count])
  {
    long long v10 = objc_opt_new();
    memset(&v51, 0, sizeof(v51));
    CGAffineTransformMakeTranslation(&v51, *(double *)a1 * 0.5, *(double *)(a1 + 8) * 0.5);
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    double v40 = (double *)a1;
    id v11 = *(id *)(a1 + 16);
    id v12 = [v11 countByEnumeratingWithState:&v47 objects:v52 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v48;
      do
      {
        for (unint64_t i = 0; i != v12; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v48 != v13) {
            objc_enumerationMutation(v11);
          }
          unint64_t v15 = *(void **)(*((void *)&v47 + 1) + 8 * i);
          CGAffineTransform v46 = v51;
          [v15 appendRenderModelIgnoreHiddenCompatibleWithKind:a2 context:v9 transform:&v46 toModels:v10];
        }
        id v12 = [v11 countByEnumeratingWithState:&v47 objects:v52 count:16];
      }
      while (v12);
    }

    double v16 = v40;
    if (a2 < 4)
    {
      double v17 = 0;
      if (a2 != 3)
      {
LABEL_18:

        goto LABEL_19;
      }
    }
    else
    {
      double v17 = [[TUIRenderModelSubviews alloc] initWithSubmodels:v10];
      -[TUIRenderModelSubviews setSize:](v17, "setSize:", *v40, v40[1]);
    }
    uint64_t v19 = *((void *)v40 + 3);
    uint64_t v18 = *((void *)v40 + 4);
    uint64_t v41 = v18;
    while (v19 != v18)
    {
      id v20 = *(id *)v19;
      double v43 = *(double *)(v19 + 16);
      double v44 = *(double *)(v19 + 8);
      id v21 = v20;
      if (a2 < 4)
      {
        double v23 = -[TUIContainerLayerConfig initWithSize:]([TUIContainerLayerConfig alloc], "initWithSize:", *v16, v16[1]);
        uint64_t v22 = -[TUIRenderModelLayer initWithSubmodels:config:erasableInsets:]([TUIRenderModelLayer alloc], "initWithSubmodels:config:erasableInsets:", v10, v23, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
        [(TUIRenderModelLayer *)v22 setIdentifier:v21];

        double v16 = v40;
      }
      else
      {
        +[TUIContainerView renderModelWithSubviewsModel:style:identifier:](TUIContainerView, "renderModelWithSubviewsModel:style:identifier:", v17, 0);
        uint64_t v22 = (TUIRenderModelLayer *)objc_claimAutoreleasedReturnValue();
      }
      double v25 = *v16;
      double v24 = v16[1];
      double v26 = *a3;
      double v27 = a3[1];
      double v29 = a3[2];
      double v28 = a3[3];
      double v31 = a3[4];
      double v30 = a3[5];
      [v9 contentsScale];
      double v32 = v31 + v43 * v29 + v26 * v44;
      double v33 = v30 + v43 * v28 + v27 * v44;
      double v35 = TUIPointRoundedForScale(v32, v33, v34);
      double v37 = v36;
      uint64_t v38 = [[TUIRenderModelTransform alloc] initWithSubmodel:v22];
      -[TUIRenderModelTransform setSize:](v38, "setSize:", *v16, v16[1]);
      -[TUIRenderModelTransform setCenter:](v38, "setCenter:", v44 + v25 * 0.5 + v35 - v32, v43 + v24 * 0.5 + v37 - v33);
      long long v39 = *((_OWORD *)a3 + 1);
      v45[0] = *(_OWORD *)a3;
      v45[1] = v39;
      v45[2] = *((_OWORD *)a3 + 2);
      [(TUIRenderModelTransform *)v38 setTransform:v45];
      [v42 addObject:v38];

      v19 += 24;
      uint64_t v18 = v41;
    }
    goto LABEL_18;
  }
LABEL_19:
}

void sub_63E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_64040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_64198(void **a1)
{
  unint64_t v1 = (char *)*a1;
  if (*a1)
  {
    id v3 = (char *)a1[1];
    id v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        uint64_t v5 = (void *)*((void *)v3 - 3);
        v3 -= 24;
      }
      while (v3 != v1);
      id v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_641FC(void ***a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = (char *)**a1;
  if (v2)
  {
    id v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (void *)*((void *)v4 - 3);
        v4 -= 24;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_6427C(void ***a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = (id *)**a1;
  if (v2)
  {
    id v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        sub_64314((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_64314(uint64_t a1, id *a2)
{
  id v3 = a2 + 5;
  sub_643A8(&v3);
}

id *sub_6435C(id *a1)
{
  id v3 = a1 + 5;
  sub_643A8(&v3);

  return a1;
}

void sub_643A8(void ***a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        sub_64440((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_64440(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a2 + 8);
  if (v3)
  {
    *(void *)(a2 + 16) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)a2;
}

uint64_t sub_64484(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_644C0(void ***a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 11;
        sub_64558((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_64558(uint64_t a1, void **a2)
{
  id v3 = a2 + 3;
  sub_6427C(&v3);
  id v3 = a2;
  sub_645F4(&v3);
}

void **sub_645A4(void **a1)
{
  id v3 = a1 + 3;
  sub_6427C(&v3);
  id v3 = a1;
  sub_645F4(&v3);
  return a1;
}

void sub_645F4(void ***a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = (id *)**a1;
  if (v2)
  {
    uint64_t v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        sub_6468C((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_6468C(uint64_t a1, id *a2)
{
  id v3 = a2 + 6;
  sub_643A8(&v3);
}

id *sub_646D4(id *a1)
{
  id v3 = a1 + 6;
  sub_643A8(&v3);

  return a1;
}

uint64_t sub_64720(uint64_t a1, void *a2, void *a3, int a4)
{
  id v7 = a2;
  id v8 = a3;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 12_Block_object_dispose(&STACK[0x2D0], 8) = 0;
  sub_64824((void *)a1, v7, -1, a4, v8);
  sub_64D14(a1);
  sub_64E4C(a1, v8);
  sub_65B8C((uint64_t *)a1);

  return a1;
}

void sub_647D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  double v16 = *(void **)(v11 + 112);
  if (v16)
  {
    *(void *)(v11 + 120) = v16;
    operator delete(v16);
  }
  sub_191178(v14, v13, v11);
  a10 = (void **)(v11 + 24);
  sub_6427C(&a10);
  a10 = (void **)v11;
  sub_644C0(&a10);

  _Unwind_Resume(a1);
}

void sub_64824(void *a1, void *a2, uint64_t a3, int a4, void *a5)
{
  id v52 = a2;
  id v7 = a5;
  uint64_t v60 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  obuint64_t j = v52;
  id v9 = [obj countByEnumeratingWithState:&v61 objects:v65 count:16];
  if (v9)
  {
    double v55 = (char **)(a1 + 8);
    double v53 = (void **)(a1 + 11);
    uint64_t v56 = *(void *)v62;
    do
    {
      long long v10 = 0;
      id v59 = v9;
      do
      {
        if (*(void *)v62 != v56) {
          objc_enumerationMutation(obj);
        }
        id v11 = *(id *)(*((void *)&v61 + 1) + 8 * (void)v10);
        if (objc_opt_respondsToSelector()) {
          id v12 = v11;
        }
        else {
          id v12 = 0;
        }
        id v13 = v12;
        unint64_t v14 = v13;
        if (v13) {
          int v15 = a4 ^ 1;
        }
        else {
          int v15 = 0;
        }
        if (v15 == 1 && [v13 groupedContainingIsGrouped])
        {
          uint64_t v16 = [v11 model];
          double v17 = (void *)v16;
          if (v16) {
            BOOL v18 = v16 == (void)v7;
          }
          else {
            BOOL v18 = 1;
          }
          if (!v18)
          {
            while (objc_opt_class() != v60 && objc_opt_class() != v8)
            {
              id v19 = [v17 parentModel];

              if (v19)
              {
                double v17 = v19;
                if (v19 != v7) {
                  continue;
                }
              }
              goto LABEL_20;
            }
          }
          id v19 = v17;
LABEL_20:
          BOOL v21 = objc_opt_class() == v8 && v19 != 0;
        }
        else
        {
          BOOL v21 = 0;
        }
        if (a4)
        {
          if (!v14) {
            goto LABEL_42;
          }
        }
        else
        {
          if (v14) {
            BOOL v22 = v21;
          }
          else {
            BOOL v22 = 0;
          }
          if (!v22) {
            goto LABEL_42;
          }
        }
        if ([v14 groupedContainingIsGrouped])
        {
          uint64_t v23 = sub_65D04(a1, v14, a3);
          uint64_t v25 = a1[8];
          uint64_t v24 = a1[9];
          double v26 = [v14 groupedContainingLayouts];
          sub_64824(a1, v26, v23, 1, v7);

          uint64_t v27 = (uint64_t)(a1[9] - a1[8]) >> 3;
          uint64_t v28 = a1[14] + 152 * v23;
          *(void *)(v28 + 56) = (v24 - v25) >> 3;
          *(void *)(v28 + 64) = v27;
          goto LABEL_75;
        }
LABEL_42:
        double v30 = (void *)a1[9];
        unint64_t v29 = a1[10];
        if ((unint64_t)v30 >= v29)
        {
          uint64_t v32 = ((char *)v30 - *v55) >> 3;
          if ((unint64_t)(v32 + 1) >> 61) {
            sub_4484();
          }
          uint64_t v33 = v29 - (void)*v55;
          uint64_t v34 = v33 >> 2;
          if (v33 >> 2 <= (unint64_t)(v32 + 1)) {
            uint64_t v34 = v32 + 1;
          }
          if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v35 = v34;
          }
          if (v35) {
            double v36 = (char *)sub_39FA0((uint64_t)(a1 + 10), v35);
          }
          else {
            double v36 = 0;
          }
          double v37 = &v36[8 * v32];
          *(void *)double v37 = v11;
          double v31 = v37 + 8;
          long long v39 = (char *)a1[8];
          uint64_t v38 = (char *)a1[9];
          if (v38 != v39)
          {
            do
            {
              uint64_t v40 = *((void *)v38 - 1);
              v38 -= 8;
              *((void *)v37 - 1) = v40;
              v37 -= 8;
            }
            while (v38 != v39);
            uint64_t v38 = *v55;
          }
          a1[8] = v37;
          a1[9] = v31;
          a1[10] = &v36[8 * v35];
          if (v38) {
            operator delete(v38);
          }
        }
        else
        {
          *double v30 = v11;
          double v31 = v30 + 1;
        }
        a1[9] = v31;
        id v42 = (uint64_t *)a1[12];
        unint64_t v41 = a1[13];
        if ((unint64_t)v42 >= v41)
        {
          double v44 = (uint64_t *)*v53;
          uint64_t v45 = ((char *)v42 - (unsigned char *)*v53) >> 3;
          unint64_t v46 = v45 + 1;
          if ((unint64_t)(v45 + 1) >> 61) {
            sub_4484();
          }
          uint64_t v47 = v41 - (void)v44;
          if (v47 >> 2 > v46) {
            unint64_t v46 = v47 >> 2;
          }
          if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v48 = v46;
          }
          if (v48)
          {
            long long v49 = (char *)sub_39FA0((uint64_t)(a1 + 13), v48);
            double v44 = (uint64_t *)a1[11];
            id v42 = (uint64_t *)a1[12];
          }
          else
          {
            long long v49 = 0;
          }
          long long v50 = (uint64_t *)&v49[8 * v45];
          *long long v50 = a3;
          double v43 = v50 + 1;
          while (v42 != v44)
          {
            uint64_t v51 = *--v42;
            *--long long v50 = v51;
          }
          a1[11] = v50;
          a1[12] = v43;
          a1[13] = &v49[8 * v48];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *id v42 = a3;
          double v43 = v42 + 1;
        }
        a1[12] = v43;
LABEL_75:

        long long v10 = (char *)v10 + 1;
      }
      while (v10 != v59);
      id v9 = [obj countByEnumeratingWithState:&v61 objects:v65 count:16];
    }
    while (v9);
  }
}

void sub_64C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_64D14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 112);
  uint64_t v2 = *(void *)(a1 + 120);
  if (v1 != v2)
  {
    uint64_t v4 = v1 + 64;
    do
    {
      [*(id *)(v4 + 56) groupedContainingInsets];
      *(void *)(v4 + _Block_object_dispose(&STACK[0x2D0], 8) = v5;
      *(void *)(v4 + 16) = v6;
      *(void *)(v4 + 24) = v7;
      *(void *)(v4 + 32) = v8;
      *(void *)(v4 + 40) = [*(id *)(v4 + 56) groupedContainingInsetsMode];
      unint64_t v9 = (unint64_t)[*(id *)(v4 + 56) groupedContainingContentMode];
      unint64_t v10 = v9;
      uint64_t v11 = *(void *)(v4 + 64);
      if (v11 == -1)
      {
        if ((v9 & 0xFFFFFFFFFFFFFFFDLL) != 0) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = 3;
        }
      }
      else
      {
        double v12 = sub_65F88(*(void *)(a1 + 112) + 152 * v11, *(void *)(v4 - 8), *(void *)v4);
        double v13 = *(double *)(v4 + 16);
        *(double *)(v4 + _Block_object_dispose(&STACK[0x2D0], 8) = *(double *)(v4 + 8) + v12;
        *(double *)(v4 + 16) = v14 + v13;
        double v17 = v16 + *(double *)(v4 + 32);
        *(double *)(v4 + 24) = v15 + *(double *)(v4 + 24);
        *(double *)(v4 + 32) = v17;
        if (v10 == 2)
        {
          uint64_t v21 = 3;
        }
        else if (v10)
        {
          uint64_t v21 = 0;
        }
        else
        {
          uint64_t v18 = *(void *)(v4 + 64);
          uint64_t v19 = *(void *)(a1 + 112);
          uint64_t v20 = v19 + 152 * v18;
          if (*(void *)(v20 + 56) == *(void *)(v4 - 8)) {
            uint64_t v21 = *(void *)(v19 + 152 * v18 + 112) & 1;
          }
          else {
            uint64_t v21 = 0;
          }
          if (*(void *)(v20 + 64) == *(void *)v4) {
            v21 |= *(void *)(v19 + 152 * v18 + 112) & 2;
          }
        }
      }
      *(void *)(v4 + sub_3BD4((uint64_t)this + 48) = v21;
      uint64_t v22 = v4 + 88;
      v4 += 152;
    }
    while (v22 != v2);
  }
}

void sub_64E4C(uint64_t a1, void *a2)
{
  id v140 = a2;
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v139 = objc_opt_class();
  uint64_t v7 = *(id **)(a1 + 64);
  if (v7 == *(id **)(a1 + 72))
  {
    uint64_t v95 = 0;
    unint64_t v96 = 0;
    uint64_t v8 = 0;
    goto LABEL_179;
  }
  id v133 = 0;
  id v134 = 0;
  long long v135 = 0uLL;
  uint64_t v8 = 0;
  uint64_t v128 = (CGSize *)&v145;
  uint64_t v129 = v5;
  uint64_t v131 = *(void *)(a1 + 64);
  unsigned int v132 = (uint64_t *)a1;
  uint64_t v130 = v4;
  do
  {
    [*v7 model:v128];
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    if (v9) {
      BOOL v10 = v9 == v140;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10)
    {
      while (objc_opt_class() != v4 && objc_opt_class() != v3 && objc_opt_class() != v6)
      {
        id v11 = [v9 parentModel];

        if (v11)
        {
          id v9 = v11;
          if (v11 != v140) {
            continue;
          }
        }
        goto LABEL_9;
      }
    }
    id v11 = v9;
LABEL_9:
    if (objc_opt_class() == v4) {
      double v12 = v11;
    }
    else {
      double v12 = 0;
    }
    id v13 = v12;
    if (v11 && v11 != v140)
    {
      while (objc_opt_class() != v3 && objc_opt_class() != v6 && objc_opt_class() != v139)
      {
        id v14 = [v11 parentModel];

        if (v14)
        {
          id v11 = v14;
          if (v14 != v140) {
            continue;
          }
        }
        goto LABEL_27;
      }
    }
    id v14 = v11;
LABEL_27:
    if (objc_opt_class() == v139) {
      double v15 = v14;
    }
    else {
      double v15 = 0;
    }
    id v136 = v15;
    if (v14 && v14 != v140)
    {
      while (objc_opt_class() != v3 && objc_opt_class() != v6)
      {
        id v16 = [v14 parentModel];

        if (v16)
        {
          id v14 = v16;
          if (v16 != v140) {
            continue;
          }
        }
        goto LABEL_38;
      }
    }
    id v16 = v14;
LABEL_38:
    if (objc_opt_class() == v3) {
      double v17 = v16;
    }
    else {
      double v17 = 0;
    }
    id v18 = v17;
    id v137 = v13;
    id v138 = v8;
    if (objc_opt_class() == v6) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 0;
    }
    id v20 = v19;
    if (!v16 || v16 == v140)
    {
      id v22 = v16;
      id v21 = v20;
    }
    else
    {
      id v21 = v20;
      while (objc_opt_class() != v5)
      {
        id v22 = [v16 parentModel];

        if (v22)
        {
          id v16 = v22;
          if (v22 != v140) {
            continue;
          }
        }
        goto LABEL_53;
      }
      id v22 = v16;
    }
LABEL_53:
    if (objc_opt_class() == v5) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    id v24 = v23;
    BOOL v26 = *((id *)&v135 + 1) == v18 && (void)v135 == (void)v21 && v133 == v136;
    char v27 = v26;
    if (v26 && v134 == v137 && v138 == v24)
    {
      id v20 = v21;
      unint64_t v29 = v136;
      uint64_t v28 = v137;
      goto LABEL_126;
    }
    if ((id *)v131 == v7)
    {
      double v31 = v7;
      double v30 = v24;
      goto LABEL_125;
    }
    double v30 = v24;
    if (v134) {
      char v27 = 1;
    }
    if (v134 != v137 || (v27 & 1) == 0)
    {
      CGPoint v144 = CGPointZero;
      *uint64_t v128 = CGSizeZero;
      uint64_t v32 = sub_6600C(v132, v131, (uint64_t)v7);
      long long v143 = v145;
      double v33 = sub_665B0((uint64_t)v132, v32, v131, (uint64_t)v7);
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      if (*((void *)&v135 + 1))
      {
        uint64_t v40 = sub_66060(v132, v138, *((void **)&v135 + 1), v134);
        unint64_t v41 = (char *)v40[2];
        id v42 = (char *)v40[1];
        if (v42 >= v41)
        {
          unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((v42 - (unsigned char *)*v40) >> 5);
          unint64_t v44 = v43 + 1;
          if (v43 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_4484();
          }
          unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((v41 - (unsigned char *)*v40) >> 5);
          if (2 * v45 > v44) {
            unint64_t v44 = 2 * v45;
          }
          if (v45 >= 0x155555555555555) {
            unint64_t v46 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v46 = v44;
          }
          if (v46) {
            uint64_t v47 = (char *)sub_66CC8((uint64_t)(v40 + 2), v46);
          }
          else {
            uint64_t v47 = 0;
          }
          double v54 = &v47[96 * v43];
          *(_OWORD *)(v54 + 40) = v143;
          *(void *)double v54 = v133;
          *((void *)v54 + 1) = v131;
          *((void *)v54 + 2) = v7;
          *(CGPoint *)(v54 + 24) = v144;
          *((void *)v54 + 7) = v32;
          *((double *)v54 + _Block_object_dispose(&STACK[0x2D0], 8) = v33;
          *((void *)v54 + 9) = v35;
          *((void *)v54 + 10) = v37;
          *((void *)v54 + 11) = v39;
          uint64_t v56 = (char *)*v40;
          double v55 = (char *)v40[1];
          uint64_t v57 = v54;
          if (v55 == *v40) {
            goto LABEL_121;
          }
          do
          {
            long long v58 = *((_OWORD *)v55 - 5);
            *((_OWORD *)v57 - 6) = *((_OWORD *)v55 - 6);
            *((_OWORD *)v57 - 5) = v58;
            long long v59 = *((_OWORD *)v55 - 4);
            long long v60 = *((_OWORD *)v55 - 3);
            long long v61 = *((_OWORD *)v55 - 1);
            *((_OWORD *)v57 - 2) = *((_OWORD *)v55 - 2);
            *((_OWORD *)v57 - 1) = v61;
            *((_OWORD *)v57 - 4) = v59;
            *((_OWORD *)v57 - 3) = v60;
            v57 -= 96;
            v55 -= 96;
          }
          while (v55 != v56);
LABEL_120:
          double v55 = (char *)*v40;
LABEL_121:
          double v53 = v54 + 96;
          *uint64_t v40 = v57;
          v40[1] = v54 + 96;
          v40[2] = &v47[96 * v46];
          if (v55) {
            operator delete(v55);
          }
          goto LABEL_123;
        }
      }
      else if (v138 && (void)v135)
      {
        uint64_t v40 = sub_66250(v132, v138, (void *)v135, v134);
        unint64_t v48 = (char *)v40[2];
        id v42 = (char *)v40[1];
        if (v42 >= v48)
        {
          unint64_t v49 = 0xAAAAAAAAAAAAAAABLL * ((v42 - (unsigned char *)*v40) >> 5);
          unint64_t v50 = v49 + 1;
          if (v49 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_4484();
          }
          unint64_t v51 = 0xAAAAAAAAAAAAAAABLL * ((v48 - (unsigned char *)*v40) >> 5);
          if (2 * v51 > v50) {
            unint64_t v50 = 2 * v51;
          }
          if (v51 >= 0x155555555555555) {
            unint64_t v46 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v46 = v50;
          }
          if (v46) {
            uint64_t v47 = (char *)sub_66CC8((uint64_t)(v40 + 2), v46);
          }
          else {
            uint64_t v47 = 0;
          }
          double v54 = &v47[96 * v49];
          *(_OWORD *)(v54 + 40) = v143;
          *(void *)double v54 = v133;
          *((void *)v54 + 1) = v131;
          *((void *)v54 + 2) = v7;
          *(CGPoint *)(v54 + 24) = v144;
          *((void *)v54 + 7) = v32;
          *((double *)v54 + _Block_object_dispose(&STACK[0x2D0], 8) = v33;
          *((void *)v54 + 9) = v35;
          *((void *)v54 + 10) = v37;
          *((void *)v54 + 11) = v39;
          double v65 = (char *)*v40;
          double v55 = (char *)v40[1];
          uint64_t v57 = v54;
          if (v55 == *v40) {
            goto LABEL_121;
          }
          do
          {
            long long v66 = *((_OWORD *)v55 - 5);
            *((_OWORD *)v57 - 6) = *((_OWORD *)v55 - 6);
            *((_OWORD *)v57 - 5) = v66;
            long long v67 = *((_OWORD *)v55 - 4);
            long long v68 = *((_OWORD *)v55 - 3);
            long long v69 = *((_OWORD *)v55 - 1);
            *((_OWORD *)v57 - 2) = *((_OWORD *)v55 - 2);
            *((_OWORD *)v57 - 1) = v69;
            *((_OWORD *)v57 - 4) = v67;
            *((_OWORD *)v57 - 3) = v68;
            v57 -= 96;
            v55 -= 96;
          }
          while (v55 != v65);
          goto LABEL_120;
        }
      }
      else
      {
        if (!(void)v135)
        {
LABEL_124:
          double v31 = v7;
          uint64_t v131 = (uint64_t)v7;
          goto LABEL_125;
        }
        uint64_t v40 = sub_6644C(v132, (void *)v135, v134);
        id v52 = (char *)v40[2];
        id v42 = (char *)v40[1];
        if (v42 >= v52)
        {
          unint64_t v62 = 0xAAAAAAAAAAAAAAABLL * ((v42 - (unsigned char *)*v40) >> 5);
          unint64_t v63 = v62 + 1;
          if (v62 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_4484();
          }
          unint64_t v64 = 0xAAAAAAAAAAAAAAABLL * ((v52 - (unsigned char *)*v40) >> 5);
          if (2 * v64 > v63) {
            unint64_t v63 = 2 * v64;
          }
          if (v64 >= 0x155555555555555) {
            unint64_t v46 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v46 = v63;
          }
          if (v46) {
            uint64_t v47 = (char *)sub_66CC8((uint64_t)(v40 + 2), v46);
          }
          else {
            uint64_t v47 = 0;
          }
          double v54 = &v47[96 * v62];
          *(_OWORD *)(v54 + 40) = v143;
          *(void *)double v54 = v133;
          *((void *)v54 + 1) = v131;
          *((void *)v54 + 2) = v7;
          *(CGPoint *)(v54 + 24) = v144;
          *((void *)v54 + 7) = v32;
          *((double *)v54 + _Block_object_dispose(&STACK[0x2D0], 8) = v33;
          *((void *)v54 + 9) = v35;
          *((void *)v54 + 10) = v37;
          *((void *)v54 + 11) = v39;
          uint64_t v70 = (char *)*v40;
          double v55 = (char *)v40[1];
          uint64_t v57 = v54;
          if (v55 == *v40) {
            goto LABEL_121;
          }
          do
          {
            long long v71 = *((_OWORD *)v55 - 5);
            *((_OWORD *)v57 - 6) = *((_OWORD *)v55 - 6);
            *((_OWORD *)v57 - 5) = v71;
            long long v72 = *((_OWORD *)v55 - 4);
            long long v73 = *((_OWORD *)v55 - 3);
            long long v74 = *((_OWORD *)v55 - 1);
            *((_OWORD *)v57 - 2) = *((_OWORD *)v55 - 2);
            *((_OWORD *)v57 - 1) = v74;
            *((_OWORD *)v57 - 4) = v72;
            *((_OWORD *)v57 - 3) = v73;
            v57 -= 96;
            v55 -= 96;
          }
          while (v55 != v70);
          goto LABEL_120;
        }
      }
      *(void *)id v42 = v133;
      *((void *)v42 + 1) = v131;
      *((void *)v42 + 2) = v7;
      *(CGPoint *)(v42 + 24) = v144;
      *(_OWORD *)(v42 + 40) = v143;
      *((void *)v42 + 7) = v32;
      *((double *)v42 + _Block_object_dispose(&STACK[0x2D0], 8) = v33;
      *((void *)v42 + 9) = v35;
      double v53 = v42 + 96;
      *((void *)v42 + 10) = v37;
      *((void *)v42 + 11) = v39;
LABEL_123:
      v40[1] = v53;
      goto LABEL_124;
    }
    double v31 = v7;
LABEL_125:
    id v75 = v18;

    id v76 = v20;
    id v77 = v18;
    id v78 = v30;

    id v24 = v30;
    id v138 = v78;
    id v18 = v77;
    *(void *)&long long v135 = v76;
    *((void *)&v135 + 1) = v75;
    unint64_t v29 = v136;
    uint64_t v28 = v137;
    id v133 = v136;
    id v134 = v137;
    uint64_t v7 = v31;
    uint64_t v5 = v129;
    uint64_t v4 = v130;
LABEL_126:

    ++v7;
    uint64_t v8 = v138;
  }
  while (v7 != (id *)v132[9]);
  if ((id *)v131 == v7) {
    goto LABEL_178;
  }
  if (v135 == 0)
  {
    uint64_t v95 = 0;
    unint64_t v96 = 0;
    goto LABEL_179;
  }
  CGPoint v142 = CGPointZero;
  CGSize v141 = CGSizeZero;
  uint64_t v79 = sub_6600C(v132, v131, (uint64_t)v7);
  double v80 = sub_665B0((uint64_t)v132, v79, v131, (uint64_t)v7);
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  if (!*((void *)&v135 + 1))
  {
    if (v138 && (void)v135)
    {
      int v87 = sub_66250(v132, v138, (void *)v135, v134);
      uint64_t v97 = (char *)v87[2];
      int v89 = (char *)v87[1];
      if (v89 < v97) {
        goto LABEL_154;
      }
      unint64_t v98 = 0xAAAAAAAAAAAAAAABLL * ((v89 - (unsigned char *)*v87) >> 5);
      unint64_t v99 = v98 + 1;
      if (v98 + 1 > 0x2AAAAAAAAAAAAAALL) {
        sub_4484();
      }
      unint64_t v100 = 0xAAAAAAAAAAAAAAABLL * ((v97 - (unsigned char *)*v87) >> 5);
      if (2 * v100 > v99) {
        unint64_t v99 = 2 * v100;
      }
      if (v100 >= 0x155555555555555) {
        unint64_t v101 = 0x2AAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v101 = v99;
      }
      if (v101) {
        uint64_t v102 = (char *)sub_66CC8((uint64_t)(v87 + 2), v101);
      }
      else {
        uint64_t v102 = 0;
      }
      long long v105 = &v102[96 * v98];
      unint64_t v106 = &v102[96 * v101];
      *(void *)long long v105 = v133;
      *((void *)v105 + 1) = v131;
      *((void *)v105 + 2) = v7;
      *(CGPoint *)(v105 + 24) = v142;
      *(CGSize *)(v105 + 40) = v141;
      *((void *)v105 + 7) = v79;
      *((double *)v105 + _Block_object_dispose(&STACK[0x2D0], 8) = v80;
      *((void *)v105 + 9) = v82;
      *((void *)v105 + 10) = v84;
      *((void *)v105 + 11) = v86;
      uint64_t v104 = v105 + 96;
      int v118 = (char *)*v87;
      unsigned int v107 = (char *)v87[1];
      if (v107 == *v87) {
        goto LABEL_175;
      }
      do
      {
        long long v119 = *((_OWORD *)v107 - 5);
        *((_OWORD *)v105 - 6) = *((_OWORD *)v107 - 6);
        *((_OWORD *)v105 - 5) = v119;
        long long v120 = *((_OWORD *)v107 - 4);
        long long v121 = *((_OWORD *)v107 - 3);
        long long v122 = *((_OWORD *)v107 - 1);
        *((_OWORD *)v105 - 2) = *((_OWORD *)v107 - 2);
        *((_OWORD *)v105 - 1) = v122;
        *((_OWORD *)v105 - 4) = v120;
        *((_OWORD *)v105 - 3) = v121;
        v105 -= 96;
        v107 -= 96;
      }
      while (v107 != v118);
    }
    else
    {
      if (!(void)v135) {
        goto LABEL_178;
      }
      int v87 = sub_6644C(v132, (void *)v135, v134);
      uint64_t v103 = (char *)v87[2];
      int v89 = (char *)v87[1];
      if (v89 < v103)
      {
LABEL_154:
        *(void *)int v89 = v133;
        *((void *)v89 + 1) = v131;
        *((void *)v89 + 2) = v7;
        *(CGPoint *)(v89 + 24) = v142;
        *(CGSize *)(v89 + 40) = v141;
        *((void *)v89 + 7) = v79;
        *((double *)v89 + _Block_object_dispose(&STACK[0x2D0], 8) = v80;
        *((void *)v89 + 9) = v82;
        uint64_t v104 = v89 + 96;
        *((void *)v89 + 10) = v84;
        *((void *)v89 + 11) = v86;
        goto LABEL_177;
      }
      unint64_t v113 = 0xAAAAAAAAAAAAAAABLL * ((v89 - (unsigned char *)*v87) >> 5);
      unint64_t v114 = v113 + 1;
      if (v113 + 1 > 0x2AAAAAAAAAAAAAALL) {
        sub_4484();
      }
      unint64_t v115 = 0xAAAAAAAAAAAAAAABLL * ((v103 - (unsigned char *)*v87) >> 5);
      if (2 * v115 > v114) {
        unint64_t v114 = 2 * v115;
      }
      if (v115 >= 0x155555555555555) {
        unint64_t v116 = 0x2AAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v116 = v114;
      }
      if (v116) {
        int v117 = (char *)sub_66CC8((uint64_t)(v87 + 2), v116);
      }
      else {
        int v117 = 0;
      }
      long long v105 = &v117[96 * v113];
      unint64_t v106 = &v117[96 * v116];
      *(void *)long long v105 = v133;
      *((void *)v105 + 1) = v131;
      *((void *)v105 + 2) = v7;
      *(CGPoint *)(v105 + 24) = v142;
      *(CGSize *)(v105 + 40) = v141;
      *((void *)v105 + 7) = v79;
      *((double *)v105 + _Block_object_dispose(&STACK[0x2D0], 8) = v80;
      *((void *)v105 + 9) = v82;
      *((void *)v105 + 10) = v84;
      *((void *)v105 + 11) = v86;
      uint64_t v104 = v105 + 96;
      uint64_t v123 = (char *)*v87;
      unsigned int v107 = (char *)v87[1];
      if (v107 == *v87) {
        goto LABEL_175;
      }
      do
      {
        long long v124 = *((_OWORD *)v107 - 5);
        *((_OWORD *)v105 - 6) = *((_OWORD *)v107 - 6);
        *((_OWORD *)v105 - 5) = v124;
        long long v125 = *((_OWORD *)v107 - 4);
        long long v126 = *((_OWORD *)v107 - 3);
        long long v127 = *((_OWORD *)v107 - 1);
        *((_OWORD *)v105 - 2) = *((_OWORD *)v107 - 2);
        *((_OWORD *)v105 - 1) = v127;
        *((_OWORD *)v105 - 4) = v125;
        *((_OWORD *)v105 - 3) = v126;
        v105 -= 96;
        v107 -= 96;
      }
      while (v107 != v123);
    }
LABEL_174:
    unsigned int v107 = (char *)*v87;
    goto LABEL_175;
  }
  int v87 = sub_66060(v132, v138, *((void **)&v135 + 1), v134);
  int v88 = (char *)v87[2];
  int v89 = (char *)v87[1];
  if (v89 < v88) {
    goto LABEL_154;
  }
  unint64_t v90 = 0xAAAAAAAAAAAAAAABLL * ((v89 - (unsigned char *)*v87) >> 5);
  unint64_t v91 = v90 + 1;
  if (v90 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_4484();
  }
  unint64_t v92 = 0xAAAAAAAAAAAAAAABLL * ((v88 - (unsigned char *)*v87) >> 5);
  if (2 * v92 > v91) {
    unint64_t v91 = 2 * v92;
  }
  if (v92 >= 0x155555555555555) {
    unint64_t v93 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v93 = v91;
  }
  if (v93) {
    int v94 = (char *)sub_66CC8((uint64_t)(v87 + 2), v93);
  }
  else {
    int v94 = 0;
  }
  long long v105 = &v94[96 * v90];
  unint64_t v106 = &v94[96 * v93];
  *(void *)long long v105 = v133;
  *((void *)v105 + 1) = v131;
  *((void *)v105 + 2) = v7;
  *(CGPoint *)(v105 + 24) = v142;
  *(CGSize *)(v105 + 40) = v141;
  *((void *)v105 + 7) = v79;
  *((double *)v105 + _Block_object_dispose(&STACK[0x2D0], 8) = v80;
  *((void *)v105 + 9) = v82;
  *((void *)v105 + 10) = v84;
  *((void *)v105 + 11) = v86;
  uint64_t v104 = v105 + 96;
  unsigned int v108 = (char *)*v87;
  unsigned int v107 = (char *)v87[1];
  if (v107 != *v87)
  {
    do
    {
      long long v109 = *((_OWORD *)v107 - 5);
      *((_OWORD *)v105 - 6) = *((_OWORD *)v107 - 6);
      *((_OWORD *)v105 - 5) = v109;
      long long v110 = *((_OWORD *)v107 - 4);
      long long v111 = *((_OWORD *)v107 - 3);
      long long v112 = *((_OWORD *)v107 - 1);
      *((_OWORD *)v105 - 2) = *((_OWORD *)v107 - 2);
      *((_OWORD *)v105 - 1) = v112;
      *((_OWORD *)v105 - 4) = v110;
      *((_OWORD *)v105 - 3) = v111;
      v105 -= 96;
      v107 -= 96;
    }
    while (v107 != v108);
    goto LABEL_174;
  }
LABEL_175:
  *int v87 = v105;
  v87[1] = v104;
  v87[2] = v106;
  if (v107) {
    operator delete(v107);
  }
LABEL_177:
  v87[1] = v104;
LABEL_178:
  uint64_t v95 = (void *)*((void *)&v135 + 1);
  unint64_t v96 = (void *)v135;
LABEL_179:
}

void sub_65A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Unwind_Resume(a1);
}

void sub_65B8C(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[3];
  for (unint64_t i = (void *)a1[4]; v2 != i; v2 += 12)
  {
    uint64_t v4 = objc_opt_new();
    sub_62424(a1, v2, v4);
    id v5 = v4;
    id v6 = [v5 copy];
    uint64_t v7 = (void *)v2[11];
    v2[11] = v6;
  }
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  if (*a1 != v9)
  {
    do
    {
      BOOL v10 = *(void **)v8;
      id v11 = *(void **)(v8 + 8);
      while (v10 != v11)
      {
        double v12 = objc_opt_new();
        sub_68024(a1, v10, v12);
        id v13 = v12;
        id v14 = [v13 copy];
        double v15 = (void *)v10[11];
        v10[11] = v14;

        v10 += 12;
      }
      id v16 = *(void **)(v8 + 24);
      double v17 = *(void **)(v8 + 32);
      while (v16 != v17)
      {
        id v18 = objc_opt_new();
        sub_62424(a1, v16, v18);
        id v19 = v18;
        id v20 = [v19 copy];
        id v21 = (void *)v16[11];
        v16[11] = v20;

        v16 += 12;
      }
      v8 += 88;
    }
    while (v8 != v9);
  }
}

void sub_65CD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_65D04(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = a1[14];
  unint64_t v7 = a1[15];
  uint64_t v8 = (uint64_t)(v7 - v6) / 152;
  long long v28 = *(_OWORD *)&UIEdgeInsetsZero.top;
  long long v29 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  CGPoint v27 = CGPointZero;
  unint64_t v9 = a1[16];
  if (v7 >= v9)
  {
    if ((unint64_t)(v8 + 1) > 0x1AF286BCA1AF286) {
      sub_4484();
    }
    unint64_t v11 = 0x86BCA1AF286BCA1BLL * ((uint64_t)(v9 - v6) >> 3);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v8 + 1) {
      uint64_t v12 = v8 + 1;
    }
    if (v11 >= 0xD79435E50D7943) {
      unint64_t v13 = 0x1AF286BCA1AF286;
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13) {
      id v14 = (char *)sub_65F3C((uint64_t)(a1 + 16), v13);
    }
    else {
      id v14 = 0;
    }
    double v15 = &v14[152 * v8];
    *(_OWORD *)(v15 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 72) = v28;
    id v16 = &v14[152 * v13];
    *(void *)double v15 = -1;
    *((void *)v15 + 7) = -1;
    *((void *)v15 + _Block_object_dispose(&STACK[0x2D0], 8) = -1;
    *(_OWORD *)(v15 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v29;
    *((void *)v15 + 15) = v5;
    *((void *)v15 + 16) = a3;
    *(CGPoint *)(v15 + 136) = v27;
    BOOL v10 = v15 + 152;
    id v18 = (char *)a1[14];
    double v17 = (char *)a1[15];
    if (v17 != v18)
    {
      do
      {
        long long v19 = *(_OWORD *)(v17 - 152);
        *(_OWORD *)(v15 - 136) = *(_OWORD *)(v17 - 136);
        *(_OWORD *)(v15 - 152) = v19;
        long long v20 = *(_OWORD *)(v17 - 120);
        long long v21 = *(_OWORD *)(v17 - 104);
        long long v22 = *(_OWORD *)(v17 - 88);
        *(_OWORD *)(v15 - 72) = *(_OWORD *)(v17 - 72);
        *(_OWORD *)(v15 - 8_Block_object_dispose(&STACK[0x2D0], 8) = v22;
        *(_OWORD *)(v15 - 104) = v21;
        *(_OWORD *)(v15 - 120) = v20;
        long long v23 = *(_OWORD *)(v17 - 56);
        long long v24 = *(_OWORD *)(v17 - 40);
        long long v25 = *(_OWORD *)(v17 - 24);
        *((void *)v15 - 1) = *((void *)v17 - 1);
        *(_OWORD *)(v15 - 24) = v25;
        *(_OWORD *)(v15 - 40) = v24;
        *(_OWORD *)(v15 - 56) = v23;
        v15 -= 152;
        v17 -= 152;
      }
      while (v17 != v18);
      double v17 = (char *)a1[14];
    }
    a1[14] = v15;
    a1[15] = v10;
    a1[16] = v16;
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    *(_OWORD *)(v7 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_OWORD *)(v7 + 40) = 0u;
    *(_OWORD *)(v7 + 72) = v28;
    *(void *)unint64_t v7 = -1;
    *(void *)(v7 + 56) = -1;
    *(void *)(v7 + 64) = -1;
    *(_OWORD *)(v7 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v29;
    *(void *)(v7 + 120) = v5;
    *(void *)(v7 + 12_Block_object_dispose(&STACK[0x2D0], 8) = a3;
    BOOL v10 = (char *)(v7 + 152);
    *(CGPoint *)(v7 + 136) = v27;
  }
  a1[15] = v10;

  return v8;
}

void sub_65F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_65F3C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287) {
    sub_3EA4();
  }
  return operator new(152 * a2);
}

double sub_65F88(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3 != 1)
  {
    if (!v3)
    {
      if (*(void *)(a1 + 56) == a2) {
        return *(double *)(a1 + 72);
      }
      else {
        return 0.0;
      }
    }
    return 0.0;
  }
  if (*(void *)(a1 + 56) > a2) {
    return 0.0;
  }
  double result = 0.0;
  if (a3 <= *(void *)(a1 + 64)) {
    return *(double *)(a1 + 72);
  }
  return result;
}

uint64_t sub_6600C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1[8];
  uint64_t v4 = (a2 - v3) >> 3;
  uint64_t v5 = a3 - v3;
  if (v4 >= (a3 - v3) >> 3) {
    return -1;
  }
  uint64_t v6 = *(void *)(a1[11] + 8 * v4);
  if (v6 == -1) {
    return -1;
  }
  uint64_t v7 = a1[14] + 152 * v6;
  unint64_t v8 = *(void *)(v7 + 56);
  if ((unint64_t)(v5 >> 3) <= *(void *)(v7 + 64))
  {
    BOOL v9 = v8 >= v4;
    BOOL v10 = v8 == v4;
  }
  else
  {
    BOOL v9 = 1;
    BOOL v10 = 0;
  }
  if (!v10 && v9) {
    return -1;
  }
  else {
    return *(void *)(a1[11] + 8 * v4);
  }
}

id *sub_66060(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = a1[1];
  if (*a1 == v10 || *(id *)(v10 - 40) != v7)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v24 = 0;
    long long v23 = (unint64_t)v7;
    int64x2_t v25 = vdupq_n_s64(1uLL);
    sub_66608(a1, (uint64_t)&v20);

    CGPoint v27 = (void **)&v21 + 1;
    sub_6427C(&v27);
    CGPoint v27 = (void **)&v20;
    sub_645F4(&v27);
  }
  uint64_t v11 = a1[1];
  uint64_t v12 = *(void *)(v11 - 80);
  if (*(void *)(v11 - 88) == v12 || *(id *)(v12 - 64) != v8)
  {
    sub_678E4((uint64_t)&v20, v8);
    unint64_t v13 = *(void *)(v11 - 80);
    if (v13 >= *(void *)(v11 - 72))
    {
      uint64_t v17 = sub_6754C((uint64_t *)(v11 - 88), (uint64_t)&v20);
    }
    else
    {
      long long v14 = v21;
      *(_OWORD *)unint64_t v13 = v20;
      *(_OWORD *)(v13 + 16) = v14;
      uint64_t v15 = v22;
      *(void *)&long long v22 = 0;
      *(void *)(v13 + 32) = v15;
      *(unsigned char *)(v13 + 40) = BYTE8(v22);
      *(void *)(v13 + 56) = 0;
      *(void *)(v13 + 64) = 0;
      *(void *)(v13 + sub_3BD4((uint64_t)this + 48) = 0;
      *(_OWORD *)(v13 + sub_3BD4((uint64_t)this + 48) = v23;
      *(void *)(v13 + 64) = v24;
      long long v23 = 0uLL;
      *(int64x2_t *)(v13 + 72) = v25;
      id v16 = v26;
      uint64_t v24 = 0;
      id v26 = 0;
      *(void *)(v13 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v16;
      uint64_t v17 = v13 + 96;
    }
    *(void *)(v11 - 80) = v17;

    CGPoint v27 = (void **)&v23;
    sub_643A8(&v27);
  }
  id v18 = sub_66744((uint64_t *)(*(void *)(v11 - 80) - 48), v9) + 1;

  return v18;
}

void sub_66214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  sub_646D4(&a9);

  _Unwind_Resume(a1);
}

id *sub_66250(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = a1[1];
  if (*a1 == v10 || *(id *)(v10 - 40) != v7)
  {
    long long v21 = 0u;
    int64x2_t v22 = 0u;
    long long v23 = 0u;
    uint64_t v25 = 0;
    *(void *)id v26 = 0;
    id v24 = v7;
    *(int64x2_t *)&v26[8] = vdupq_n_s64(1uLL);
    sub_66608(a1, (uint64_t)&v21);

    long long v28 = (void **)&v22.i64[1];
    sub_6427C(&v28);
    long long v28 = (void **)&v21;
    sub_645F4(&v28);
  }
  uint64_t v11 = a1[1];
  uint64_t v12 = *(void *)(v11 - 56);
  if (*(void *)(v11 - 64) == v12 || *(id *)(v12 - 64) != v8)
  {
    id v13 = v8;
    long long v21 = 0uLL;
    int64x2_t v22 = vdupq_n_s64(1uLL);
    v26[0] = 0;
    id v24 = 0;
    uint64_t v25 = 0;
    long long v23 = (unint64_t)v13;
    *(CGSize *)&v26[8] = CGSizeZero;
    CGPoint v27 = 0;
    unint64_t v14 = *(void *)(v11 - 56);
    if (v14 >= *(void *)(v11 - 48))
    {
      uint64_t v18 = sub_67C94((uint64_t *)(v11 - 64), (uint64_t)&v21);
      uint64_t v15 = v27;
    }
    else
    {
      uint64_t v15 = 0;
      int64x2_t v16 = v22;
      *(_OWORD *)unint64_t v14 = v21;
      *(int64x2_t *)(v14 + 16) = v16;
      *(void *)&long long v23 = 0;
      *(void *)(v14 + 32) = v13;
      *(void *)(v14 + 40) = 0;
      *(void *)(v14 + sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(v14 + 56) = 0;
      long long v17 = *(_OWORD *)v26;
      *(void *)(v14 + 80) = *(void *)&v26[16];
      *((void *)&v23 + 1) = 0;
      id v24 = 0;
      uint64_t v25 = 0;
      *(_OWORD *)(v14 + 64) = v17;
      CGPoint v27 = 0;
      *(void *)(v14 + 8_Block_object_dispose(&STACK[0x2D0], 8) = 0;
      uint64_t v18 = v14 + 96;
    }
    *(void *)(v11 - 56) = v18;

    long long v28 = (void **)&v23 + 1;
    sub_643A8(&v28);
  }
  long long v19 = sub_66744((uint64_t *)(*(void *)(v11 - 56) - 56), v9) + 1;

  return v19;
}

void sub_66414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  sub_6435C(&a9);

  _Unwind_Resume(a1);
}

id *sub_6644C(uint64_t *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = a1[4];
  if (a1[3] == v7 || *(id *)(v7 - 64) != v5)
  {
    id v8 = v5;
    long long v16 = 0uLL;
    int64x2_t v17 = vdupq_n_s64(1uLL);
    id v18 = v8;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    v22[0] = 0;
    *(CGSize *)&v22[8] = CGSizeZero;
    long long v23 = 0;
    unint64_t v9 = a1[4];
    if (v9 >= a1[5])
    {
      uint64_t v13 = sub_67C94(a1 + 3, (uint64_t)&v16);
      uint64_t v10 = v23;
    }
    else
    {
      uint64_t v10 = 0;
      int64x2_t v11 = v17;
      *(_OWORD *)unint64_t v9 = v16;
      *(int64x2_t *)(v9 + 16) = v11;
      id v18 = 0;
      *(void *)(v9 + 32) = v8;
      *(void *)(v9 + 40) = 0;
      *(void *)(v9 + sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(v9 + 56) = 0;
      long long v12 = *(_OWORD *)v22;
      *(void *)(v9 + 80) = *(void *)&v22[16];
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      *(_OWORD *)(v9 + 64) = v12;
      long long v23 = 0;
      *(void *)(v9 + 8_Block_object_dispose(&STACK[0x2D0], 8) = 0;
      uint64_t v13 = v9 + 96;
    }
    a1[4] = v13;

    id v24 = (void **)&v19;
    sub_643A8(&v24);
  }
  unint64_t v14 = sub_66744((uint64_t *)(a1[4] - 56), v6) + 1;

  return v14;
}

void sub_6658C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_6435C((id *)va);

  _Unwind_Resume(a1);
}

double sub_665B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == -1) {
    return UIEdgeInsetsZero.top;
  }
  else {
    return sub_65F88(*(void *)(a1 + 112) + 152 * a2, (a3 - *(void *)(a1 + 64)) >> 3, (a4 - *(void *)(a1 + 64)) >> 3);
  }
}

uint64_t sub_66608(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v7 - *a1) >> 3);
    if ((unint64_t)(v10 + 1) > 0x2E8BA2E8BA2E8BALL) {
      sub_4484();
    }
    unint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v5 - *a1) >> 3);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x1745D1745D1745DLL) {
      unint64_t v13 = 0x2E8BA2E8BA2E8BALL;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      unint64_t v14 = (char *)sub_66A30(v4, v13);
    }
    else {
      unint64_t v14 = 0;
    }
    uint64_t v15 = v14;
    long long v16 = &v14[88 * v10];
    id v18 = &v14[88 * v13];
    sub_66938((uint64_t)v16, a2);
    int64x2_t v17 = v16 + 88;
    sub_669B8(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = (uint64_t)sub_674D0(&v15);
  }
  else
  {
    uint64_t result = sub_66938(*(void *)(v4 - 8), a2);
    uint64_t v9 = v7 + 88;
    a1[1] = v7 + 88;
  }
  a1[1] = v9;
  return result;
}

void sub_66730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_674D0((void **)va);
  _Unwind_Resume(a1);
}

id *sub_66744(uint64_t *a1, void *a2)
{
  id v3 = a2;
  for (unint64_t i = (id *)*a1; i != (id *)a1[1]; i += 8)
  {
    id v5 = *i;
    if (v5 == v3)
    {
      unint64_t v6 = v3;
LABEL_14:

      goto LABEL_15;
    }
    unint64_t v6 = v5;
    unint64_t v7 = [v5 identifier];
    id v8 = [v3 identifier];
    if (v7 == v8)
    {

      goto LABEL_14;
    }
    uint64_t v9 = [v6 identifier];
    uint64_t v10 = [v3 identifier];
    unsigned int v11 = [v9 isEqual:v10];

    if (v11) {
      goto LABEL_14;
    }
  }
  id v12 = v3;
  id v19 = v12;
  __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  CGSize v13 = CGSizeZero;
  CGPoint v23 = CGPointZero;
  CGSize v24 = v13;
  unint64_t v14 = a1[1];
  if (v14 >= a1[2])
  {
    uint64_t v16 = sub_67958(a1, (uint64_t *)&v19);
    int64x2_t v17 = __p;
    a1[1] = v16;
    if (v17)
    {
      uint64_t v21 = v17;
      operator delete(v17);
    }
  }
  else
  {
    id v19 = 0;
    *(void *)unint64_t v14 = v12;
    *(void *)(v14 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    __p = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    CGSize v15 = v24;
    *(CGPoint *)(v14 + 32) = v23;
    *(CGSize *)(v14 + sub_3BD4((uint64_t)this + 48) = v15;
    a1[1] = v14 + 64;
  }

  unint64_t i = (id *)(a1[1] - 64);
LABEL_15:

  return i;
}

void sub_668E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_64484((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t sub_66938(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_669B8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_66A7C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_66A30(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
    sub_3EA4();
  }
  return operator new(88 * a2);
}

uint64_t sub_66A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 88;
      sub_66B38(v7 - 88, v9);
      uint64_t v7 = *((void *)&v15 + 1) - 88;
      *((void *)&v15 + 1) -= 88;
    }
    while (v9 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_67444((uint64_t)v12);
  return v10;
}

void sub_66B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_66B38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_66BEC((void *)a1, *(void *)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  sub_671FC((void *)(a1 + 24), *(void *)(a2 + 24), *(void *)(a2 + 32), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 32) - *(void *)(a2 + 24)) >> 5));
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = *(id *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

void sub_66BD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_645F4((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_66BEC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_66C74(result, a4);
    uint64_t result = (void *)sub_66D10((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_66C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(&STACK[0x2D0], 8) = v10;
  sub_645F4(&a9);
  _Unwind_Resume(a1);
}

char *sub_66C74(void *a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    sub_4484();
  }
  uint64_t result = (char *)sub_66CC8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[96 * v4];
  return result;
}

void *sub_66CC8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    sub_3EA4();
  }
  return operator new(96 * a2);
}

uint64_t sub_66D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_66DBC(a1, v4, v6);
      v6 += 96;
      uint64_t v4 = v12 + 96;
      v12 += 96;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_67170((uint64_t)v9);
  return v4;
}

void sub_66DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id sub_66DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v5;
  id v6 = *(id *)(a3 + 32);
  char v7 = *(unsigned char *)(a3 + 40);
  *(void *)(a2 + sub_3BD4((uint64_t)this + 48) = 0;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  sub_66E44((void *)(a2 + 48), *(void *)(a3 + 48), *(void *)(a3 + 56), (uint64_t)(*(void *)(a3 + 56) - *(void *)(a3 + 48)) >> 6);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a3 + 72);
  id result = *(id *)(a3 + 88);
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x2D0], 8) = result;
  return result;
}

void sub_66E30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_66E44(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    id v6 = result;
    sub_66ECC(result, a4);
    id result = (void *)sub_66F48((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_66EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(&STACK[0x2D0], 8) = v10;
  sub_643A8(&a9);
  _Unwind_Resume(a1);
}

char *sub_66ECC(void *a1, unint64_t a2)
{
  if (a2 >> 58) {
    sub_4484();
  }
  id result = (char *)sub_66F10((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[64 * v4];
  return result;
}

void *sub_66F10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58) {
    sub_3EA4();
  }
  return operator new(a2 << 6);
}

uint64_t sub_66F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_66FF4(a1, v4, v6);
      v6 += 64;
      uint64_t v4 = v12 + 64;
      v12 += 64;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_670E4((uint64_t)v9);
  return v4;
}

void sub_66FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 sub_66FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = *(id *)a3;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  sub_67068((void *)(a2 + 8), *(const void **)(a3 + 8), *(void *)(a3 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 5));
  __n128 result = *(__n128 *)(a3 + 32);
  long long v6 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + sub_3BD4((uint64_t)this + 48) = v6;
  return result;
}

void sub_67054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_67068(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    __n128 result = sub_66C74(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_670C8(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(&STACK[0x2D0], 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_670E4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_6711C((uint64_t *)a1);
  }
  return a1;
}

void sub_6711C(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 64;
      sub_64440(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_67170(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_671A8((uint64_t *)a1);
  }
  return a1;
}

void sub_671A8(uint64_t *a1)
{
  uint64_t v2 = (id **)a1[1];
  uint64_t v1 = (id **)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 12;
      sub_6468C(v5, v3);
    }
    while (v3 != v4);
  }
}

void *sub_671FC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_66C74(result, a4);
    __n128 result = (void *)sub_67284((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_67264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(&STACK[0x2D0], 8) = v10;
  sub_6427C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_67284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_67330(a1, v4, v6);
      v6 += 96;
      uint64_t v4 = v12 + 96;
      v12 += 96;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_673B8((uint64_t)v9);
  return v4;
}

void sub_6731C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id sub_67330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v5;
  id v6 = *(id *)(a3 + 32);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + sub_3BD4((uint64_t)this + 48) = 0;
  *(void *)(a2 + 56) = 0;
  sub_66E44((void *)(a2 + 40), *(void *)(a3 + 40), *(void *)(a3 + 48), (uint64_t)(*(void *)(a3 + 48) - *(void *)(a3 + 40)) >> 6);
  long long v7 = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(_OWORD *)(a2 + 64) = v7;
  id result = *(id *)(a3 + 88);
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x2D0], 8) = result;
  return result;
}

void sub_673A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_673B8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_673F0((uint64_t *)a1);
  }
  return a1;
}

void sub_673F0(uint64_t *a1)
{
  uint64_t v2 = (id **)a1[1];
  uint64_t v1 = (id **)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 12;
      sub_64314(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_67444(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_6747C((uint64_t *)a1);
  }
  return a1;
}

void sub_6747C(uint64_t *a1)
{
  uint64_t v1 = *(void ***)(a1[2] + 8);
  uint64_t v2 = *(void ***)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_64558(v3, v1);
      v1 += 11;
    }
    while (v1 != v2);
  }
}

void **sub_674D0(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_67504(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 88;
    sub_64558(v4, (void **)(i - 88));
  }
}

uint64_t sub_6754C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v18[4] = a1 + 2;
  char v10 = (char *)sub_66CC8(v7, v9);
  uint64_t v11 = &v10[96 * v4];
  v18[0] = v10;
  v18[1] = v11;
  v18[3] = &v10[96 * v12];
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v13;
  uint64_t v14 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *((void *)v11 + 4) = v14;
  v11[40] = *(unsigned char *)(a2 + 40);
  *((void *)v11 + 7) = 0;
  *((void *)v11 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *((void *)v11 + 6) = 0;
  *((_OWORD *)v11 + 3) = *(_OWORD *)(a2 + 48);
  *((void *)v11 + _Block_object_dispose(&STACK[0x2D0], 8) = *(void *)(a2 + 64);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + sub_3BD4((uint64_t)this + 48) = 0;
  *(_OWORD *)(v11 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 88);
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *((void *)v11 + 11) = v15;
  v18[2] = v11 + 96;
  sub_67688(a1, v18);
  uint64_t v16 = a1[1];
  sub_67868(v18);
  return v16;
}

void sub_67674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_67868((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_67688(uint64_t *a1, void *a2)
{
  uint64_t result = sub_67700((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_67700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 80);
      *(_OWORD *)(v7 - 96) = *(_OWORD *)(a3 - 96);
      *(_OWORD *)(v7 - 80) = v8;
      uint64_t v9 = *(void *)(a3 - 64);
      *(void *)(a3 - 64) = 0;
      *(void *)(v7 - 64) = v9;
      *(unsigned char *)(v7 - 56) = *(unsigned char *)(a3 - 56);
      *(void *)(v7 - 40) = 0;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - sub_3BD4((uint64_t)this + 48) = 0;
      *(_OWORD *)(v7 - sub_3BD4((uint64_t)this + 48) = *(_OWORD *)(a3 - 48);
      *(void *)(v7 - 32) = *(void *)(a3 - 32);
      *(void *)(a3 - sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(a3 - 40) = 0;
      *(void *)(a3 - 32) = 0;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      uint64_t v10 = *(void *)(a3 - 8);
      *(void *)(a3 - _Block_object_dispose(&STACK[0x2D0], 8) = 0;
      *(void *)(v7 - _Block_object_dispose(&STACK[0x2D0], 8) = v10;
      uint64_t v7 = *((void *)&v16 + 1) - 96;
      *((void *)&v16 + 1) -= 96;
      a3 -= 96;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_677DC((uint64_t)v13);
  return v11;
}

uint64_t sub_677DC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_67814((uint64_t *)a1);
  }
  return a1;
}

void sub_67814(uint64_t *a1)
{
  uint64_t v1 = *(id **)(a1[2] + 8);
  uint64_t v2 = *(id **)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_6468C(v3, v1);
      v1 += 12;
    }
    while (v1 != v2);
  }
}

void **sub_67868(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_6789C(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 96;
    sub_6468C(v4, (id *)(i - 96));
  }
}

uint64_t sub_678E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *(void *)(a1 + 16) = [v3 columnSpan];
  *(void *)(a1 + 24) = [v3 rowSpan];
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = 0;
  *(CGSize *)(a1 + 72) = CGSizeZero;
  *(void *)(a1 + 8_Block_object_dispose(&STACK[0x2D0], 8) = 0;
  return a1;
}

void sub_67948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_67958(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 6;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 58) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 5 > v5) {
    unint64_t v5 = v8 >> 5;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v9 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_66F10(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[64 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[64 * v9];
  uint64_t v12 = *a2;
  *a2 = 0;
  *(void *)uint64_t v11 = v12;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *(_OWORD *)(v11 + _Block_object_dispose(&STACK[0x2D0], 8) = *(_OWORD *)(a2 + 1);
  *((void *)v11 + 3) = a2[3];
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0;
  long long v13 = *((_OWORD *)a2 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)v11 + 3) = v13;
  v16[2] = v11 + 64;
  sub_67A60(a1, v16);
  uint64_t v14 = a1[1];
  sub_67C18(v16);
  return v14;
}

void sub_67A4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_67C18((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_67A60(uint64_t *a1, void *a2)
{
  uint64_t result = sub_67AD8((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_67AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      uint64_t v8 = *(void *)(a3 - 64);
      a3 -= 64;
      *(void *)a3 = 0;
      *(void *)(v7 - 64) = v8;
      *(void *)(v7 - 56) = 0;
      *(void *)(v7 - sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(v7 - 40) = 0;
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(a3 + 8);
      *(void *)(v7 - 40) = *(void *)(a3 + 24);
      *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      long long v9 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v7 - 16) = v9;
      uint64_t v7 = *((void *)&v15 + 1) - 64;
      *((void *)&v15 + 1) -= 64;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_67B8C((uint64_t)v12);
  return v10;
}

uint64_t sub_67B8C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_67BC4((uint64_t *)a1);
  }
  return a1;
}

void sub_67BC4(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_64440(v3, v1);
      v1 += 64;
    }
    while (v1 != v2);
  }
}

void **sub_67C18(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_67C4C(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 64;
    sub_64440(v4, i - 64);
  }
}

uint64_t sub_67C94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  void v19[4] = a1 + 2;
  uint64_t v10 = (char *)sub_66CC8(v7, v9);
  uint64_t v11 = &v10[96 * v4];
  v19[0] = v10;
  v19[1] = v11;
  v19[3] = &v10[96 * v12];
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v13;
  uint64_t v14 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *((void *)v11 + 6) = 0;
  *((void *)v11 + 7) = 0;
  *((void *)v11 + 4) = v14;
  *((void *)v11 + 5) = 0;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a2 + 40);
  *((void *)v11 + 7) = *(void *)(a2 + 56);
  *(void *)(a2 + sub_3BD4((uint64_t)this + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t v15 = *(void *)(a2 + 80);
  *((_OWORD *)v11 + 4) = *(_OWORD *)(a2 + 64);
  *((void *)v11 + 10) = v15;
  uint64_t v16 = *(void *)(a2 + 88);
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x2D0], 8) = 0;
  *((void *)v11 + 11) = v16;
  v19[2] = v11 + 96;
  sub_67DCC(a1, v19);
  uint64_t v17 = a1[1];
  sub_67FA8(v19);
  return v17;
}

void sub_67DB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_67FA8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_67DCC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_67E44((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_67E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  void v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 80);
      *(_OWORD *)(v7 - 96) = *(_OWORD *)(a3 - 96);
      *(_OWORD *)(v7 - 80) = v8;
      uint64_t v9 = *(void *)(a3 - 64);
      *(void *)(a3 - 64) = 0;
      *(void *)(v7 - 64) = v9;
      *(void *)(v7 - 56) = 0;
      *(void *)(v7 - sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(v7 - 40) = 0;
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(a3 - 56);
      *(void *)(v7 - 40) = *(void *)(a3 - 40);
      *(void *)(a3 - 56) = 0;
      *(void *)(a3 - sub_3BD4((uint64_t)this + 48) = 0;
      *(void *)(a3 - 40) = 0;
      long long v10 = *(_OWORD *)(a3 - 32);
      *(void *)(v7 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v7 - 32) = v10;
      uint64_t v11 = *(void *)(a3 - 8);
      *(void *)(a3 - _Block_object_dispose(&STACK[0x2D0], 8) = 0;
      *(void *)(v7 - _Block_object_dispose(&STACK[0x2D0], 8) = v11;
      uint64_t v7 = *((void *)&v17 + 1) - 96;
      *((void *)&v17 + 1) -= 96;
      a3 -= 96;
    }
    while (a3 != a5);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  sub_67F1C((uint64_t)v14);
  return v12;
}

uint64_t sub_67F1C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_67F54((uint64_t *)a1);
  }
  return a1;
}

void sub_67F54(uint64_t *a1)
{
  uint64_t v1 = *(id **)(a1[2] + 8);
  uint64_t v2 = *(id **)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_64314(v3, v1);
      v1 += 12;
    }
    while (v1 != v2);
  }
}

void **sub_67FA8(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_67FDC(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 96;
    sub_64314(v4, (id *)(i - 96));
  }
}

void sub_68024(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v16 = 0;
  id v17 = 0;
  sub_681C8(a2, a1, (uint64_t *)&v16);
  id v6 = v17;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_68238;
  void v13[3] = &unk_253200;
  char v15 = a1;
  id v7 = v5;
  id v14 = v7;
  [v6 enumerateIndexesUsingBlock:v13];

  id v8 = v16;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unint64_t v10[2] = sub_68250;
  void v10[3] = &unk_253200;
  uint64_t v12 = a1;
  id v9 = v7;
  id v11 = v9;
  [v8 enumerateIndexesUsingBlock:v10];
}

void sub_68178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void *sub_681C8(void *result, void *a2, uint64_t *a3)
{
  uint64_t v3 = result[6];
  for (uint64_t i = result[7]; v3 != i; v3 += 64)
  {
    uint64_t v7 = *(void *)(v3 + 8);
    uint64_t v8 = *(void *)(v3 + 16);
    while (v7 != v8)
    {
      uint64_t result = sub_68260(a3, *(void *)(v7 + 8), *(void *)(v7 + 16), a2);
      v7 += 96;
    }
  }
  return result;
}

id sub_68238(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 112) + 152 * a2 + 120)];
}

id sub_68250(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 64) + 8 * a2)];
}

id sub_68260(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result = (id)sub_6600C(a4, a2, a3);
  if (result == (id)-1)
  {
    uint64_t v9 = a4[8];
    unint64_t v10 = (a3 - v9) >> 3;
    if (v10 > (a2 - v9) >> 3)
    {
      uint64_t v11 = (a2 - v9) >> 3;
      uint64_t v12 = (void *)*a1;
      if (!*a1)
      {
        uint64_t v13 = objc_opt_new();
        id v14 = (void *)*a1;
        *a1 = v13;

        uint64_t v12 = (void *)*a1;
      }
      return [v12 addIndexesInRange:v11, v10 - v11];
    }
  }
  else
  {
    return sub_68338((uint64_t)a1, (uint64_t)result, (uint64_t)a4);
  }
  return result;
}

id sub_68338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == -1)
  {
    uint64_t v4 = -1;
  }
  else
  {
    do
    {
      uint64_t v4 = a2;
      a2 = *(void *)(*(void *)(a3 + 112) + 152 * a2 + 128);
    }
    while (a2 != -1);
  }
  id v5 = *(void **)(a1 + 8);
  if (!v5)
  {
    uint64_t v6 = objc_opt_new();
    uint64_t v7 = *(void **)(a1 + 8);
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v6;

    id v5 = *(void **)(a1 + 8);
  }

  return [v5 addIndex:v4];
}

uint64_t *sub_683BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  id v5 = a2;
  do
  {
    uint64_t v6 = *v4;
    *uint64_t v4 = 0;
    uint64_t v7 = *(void **)a3;
    *(void *)a3 = v6;

    long long v8 = *(_OWORD *)(v4 + 1);
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v4 + 3);
    *(_OWORD *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = v8;
    a3 += 40;
    v4 += 5;
  }
  while (v4 != v5);
  return v5;
}

void sub_68438(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5)
{
  if (a3 != a4)
  {
    uint64_t v7 = a3;
    double v10 = 0.0;
    double v11 = 0.0;
    do
    {
      double v12 = sub_684E0(v7, a2, a1, a5);
      if (v11 < v12) {
        double v11 = v12;
      }
      double v10 = v10 + v13;
      v7 += 64;
    }
    while (v7 != a4);
  }
}

double sub_684E0(uint64_t a1, int a2, uint64_t a3, double a4)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  double width = CGSizeZero.width;
  for (double i = CGSizeZero.height; v5 != v6; v5 += 96)
  {
    double v12 = sub_68588(v5, a2, a3, a4);
    if (width < v12) {
      double width = v12;
    }
    if (i < v13) {
      double i = v13;
    }
  }
  *(double *)(a1 + sub_3BD4((uint64_t)this + 48) = width;
  *(double *)(a1 + 56) = i;
  return width;
}

double sub_68588(uint64_t a1, int a2, uint64_t a3, double a4)
{
  sub_68604(a4 - (*(double *)(a1 + 72) + *(double *)(a1 + 88)), a3, a2, *(id **)(a1 + 8), *(id **)(a1 + 16));
  *(double *)(a1 + 40) = v5;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = v6;
  return v5 + *(double *)(a1 + 72) + *(double *)(a1 + 88);
}

id sub_68604(double a1, uint64_t a2, int a3, id *a4, id *a5)
{
  if (a4 != a5)
  {
    uint64_t v7 = a4;
    if (a3) {
      double v8 = a1;
    }
    else {
      double v8 = NAN;
    }
    double v9 = 0.0;
    double v10 = 0.0;
    do
    {
      [*v7 setContainingWidth:a1];
      [*v7 setContainingHeight:NAN];
      [*v7 setFlexedWidth:v8];
      [*v7 setFlexedHeight:NAN];
      [*v7 validateLayout];
      id v11 = *v7++;
      id result = [v11 computedNaturalSize];
      if (v10 < v13) {
        double v10 = v13;
      }
      double v9 = v9 + v14;
    }
    while (v7 != a5);
  }
  return result;
}

void *sub_686DC(void *result, void *a2, uint64_t *a3)
{
  uint64_t v3 = result[5];
  for (uint64_t i = result[6]; v3 != i; v3 += 64)
  {
    uint64_t v7 = *(void *)(v3 + 8);
    uint64_t v8 = *(void *)(v3 + 16);
    while (v7 != v8)
    {
      id result = sub_68260(a3, *(void *)(v7 + 8), *(void *)(v7 + 16), a2);
      v7 += 96;
    }
  }
  return result;
}

id sub_6874C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 112) + 152 * a2 + 120)];
}

id sub_68764(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 64) + 8 * a2)];
}

void sub_68774(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  if (v3 < v2)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    do
    {
      uint64_t v5 = *(void *)(**(void **)a1 + 88 * v3 + 24);
      if (v4 >= 0xAAAAAAAAAAAAAAABLL * ((*(void *)(**(void **)a1 + 88 * v3 + 32) - v5) >> 5))
      {
        unint64_t v4 = 0;
        *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = ++v3;
      }
      else
      {
        id v6 = *(id *)(v5 + 96 * v4 + 32);
        uint64_t v7 = (char *)[v6 role];

        unint64_t v3 = *(void *)(a1 + 8);
        unint64_t v2 = *(void *)(a1 + 16);
        if (v7 == (unsigned char *)&def_141F14 + 3) {
          break;
        }
        unint64_t v4 = *(void *)(a1 + 24) + 1;
      }
      *(void *)(a1 + 24) = v4;
    }
    while (v3 < v2);
  }
  if (v3 >= v2)
  {
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v2;
    *(void *)(a1 + 24) = 0;
  }
}

void sub_68844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_68854(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_6904C((void **)a1, a2 - v3, a3);
  }
}

void sub_68884(void *a1, long long *size, uint64_t a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    unint64_t v36 = 0;
    id v26 = a4;
    unint64_t v4 = 0;
    memset(ptr, 0, sizeof(ptr));
    unint64_t v5 = 64;
    long long v6 = size[1];
    uint64_t v7 = ptr;
    long long v46 = *size;
    long long v47 = v6;
    uint64_t v27 = a3;
    while (1)
    {
      uint64_t v8 = *((void *)&v47 + 1);
      if (*((void *)&v46 + 1) == *(void *)(a3 + 8) && *((void *)&v47 + 1) == *(void *)(a3 + 24)) {
        break;
      }
      uint64_t v9 = *(void *)(*(void *)v46 + 88 * *((void *)&v46 + 1) + 24);
      if (v36 >= v5)
      {
        unint64_t v10 = v5 + 64;
        unint64_t v29 = v10;
        if (v7 == ptr)
        {
          uint64_t v7 = malloc_type_malloc(8 * v10, 0x2004093837F09uLL);
          memcpy(v7, ptr, 8 * v36);
        }
        else
        {
          uint64_t v7 = malloc_type_realloc(v7, 8 * v10, 0x2004093837F09uLL);
        }
      }
      else
      {
        unint64_t v29 = v5;
      }
      long long v28 = v7;
      uint64_t v35 = (uint64_t *)(v9 + 96 * v8);
      *((void *)v7 + v36) = v35;
      uint64_t v30 = v35[6];
      if (v35[5] != v30)
      {
        unint64_t v11 = 0;
        double v12 = (uint64_t *)(v9 + 96 * v8);
        double v13 = v12 + 1;
        double v14 = v12 + 2;
        char v15 = v12 + 3;
        uint64_t v16 = v35[5];
        do
        {
          uint64_t v31 = v16;
          uint64_t v32 = *(void *)(v16 + 16);
          uint64_t v17 = *(void *)(v16 + 8);
          if (v17 != v32)
          {
            do
            {
              uint64_t v18 = v17;
              uint64_t v19 = a1[8];
              uint64_t v33 = v18;
              unint64_t v20 = (*(void *)(v18 + 8) - v19) >> 3;
              uint64_t v21 = *(void *)(v18 + 16) - v19;
              if (v20 < v21 >> 3)
              {
                uint64_t v34 = v21 >> 3;
                do
                {
                  uint64_t v22 = *(void *)(a1[11] + 8 * v20);
                  if (v22 != -1)
                  {
                    if (!v4) {
                      unint64_t v4 = objc_opt_new();
                    }
                    do
                    {
                      if ((objc_msgSend(v4, "containsIndex:", v22, v26) & 1) == 0)
                      {
                        uint64_t v23 = a1[14] + 152 * v22;
                        *(void *)uint64_t v23 = -1;
                        *(_OWORD *)(v23 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v23 + 24) = 0u;
                        *(_OWORD *)(v23 + 40) = 0u;
                        [v4 addIndex:v22];
                      }
                      unint64_t v24 = v20;
                      uint64_t v25 = a1[14];
                      sub_69170((void *)(v25 + 152 * v22), v36, *v35, *v13, v11, *v14, *v15, 1uLL);
                      uint64_t v22 = *(void *)(v25 + 152 * v22 + 128);
                      unint64_t v20 = v24;
                    }
                    while (v22 != -1);
                  }
                  ++v20;
                }
                while (v20 != v34);
              }
              uint64_t v17 = v33 + 96;
            }
            while (v33 + 96 != v32);
          }
          ++v11;
          uint64_t v16 = v31 + 64;
        }
        while (v31 + 64 != v30);
      }
      ++v36;
      ++*((void *)&v47 + 1);
      sub_68774((uint64_t)&v46);
      a3 = v27;
      uint64_t v7 = v28;
      unint64_t v5 = v29;
    }
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v42[2] = sub_691DC;
    v42[3] = &unk_253220;
    void v42[4] = a1;
    long long v43 = *v26;
    uint64_t v44 = *((void *)v26 + 2);
    unint64_t v45 = v7;
    [v4 enumerateRangesUsingBlock:v42];
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_69474;
    v38[3] = &unk_253220;
    void v38[4] = a1;
    long long v39 = *v26;
    uint64_t v40 = *((void *)v26 + 2);
    unint64_t v41 = v7;
    [v4 enumerateRangesWithOptions:2 usingBlock:v38];
    if (v7 != ptr) {
      free(v7);
    }
  }
}

void sub_68C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_68CD0(uint64_t a1, unint64_t a2, unint64_t a3, int a4)
{
  uint64_t v8 = *(void *)(a1 + 96);
  if (*(void *)(a1 + 112))
  {
    if (v8 != 2) {
      return;
    }
  }
  else if (v8 != 2)
  {
    return;
  }
  sub_62620(a1);
  if (a4) {
    sub_62124(a1, a2, a3);
  }
}

void sub_6904C(void **a1, unint64_t a2, void *a3)
{
  uint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  uint64_t v7 = v8;
  uint64_t v9 = *(void **)(v6 - 8);
  if (a2 <= (v8 - (unsigned char *)v9) >> 3)
  {
    if (a2)
    {
      uint64_t v16 = 8 * a2;
      uint64_t v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      uint64_t v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    uint64_t v10 = (char *)v9 - (unsigned char *)*a1;
    unint64_t v11 = a2 + (v10 >> 3);
    if (v11 >> 61) {
      sub_4484();
    }
    uint64_t v12 = v10 >> 3;
    uint64_t v13 = v7 - (unsigned char *)*a1;
    if (v13 >> 2 > v11) {
      unint64_t v11 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v11;
    }
    if (v14) {
      char v15 = (char *)sub_39FA0(v6, v14);
    }
    else {
      char v15 = 0;
    }
    uint64_t v18 = &v15[8 * v12];
    uint64_t v19 = &v18[8 * a2];
    uint64_t v20 = 8 * a2;
    uint64_t v21 = v18;
    do
    {
      *(void *)uint64_t v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    uint64_t v22 = &v15[8 * v14];
    uint64_t v23 = (char *)*a1;
    for (uint64_t i = (char *)a1[1]; i != v23; i -= 8)
    {
      uint64_t v25 = *((void *)i - 1);
      *((void *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
    {
      operator delete(v23);
    }
  }
}

void *sub_69170(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (*result == -1) {
    char *result = a2;
  }
  if (!result[4])
  {
    result[1] = a3;
    result[4] = a6;
  }
  if (!result[5])
  {
    result[2] = a4;
    result[5] = a7;
  }
  uint64_t v8 = result[6];
  if (v8)
  {
    unint64_t v9 = result[3];
    if (v9 >= a5) {
      unint64_t v10 = a5;
    }
    else {
      unint64_t v10 = result[3];
    }
    unint64_t v11 = v9 + v8;
    if (v11 <= a8 + a5) {
      unint64_t v11 = a8 + a5;
    }
    result[3] = v10;
    a8 = v11 - v10;
  }
  else
  {
    result[3] = a5;
  }
  result[6] = a8;
  return result;
}

void *sub_691DC(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    unint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = result + 5;
    uint64_t v7 = 152 * a2;
    do
    {
      uint64_t v8 = *(void *)(v5 + 112) + v7;
      uint64_t v9 = *(void *)(v4[8] + 8 * *(void *)v8);
      uint64_t v10 = *(void *)(v8 + 112);
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v11 = *(_OWORD *)(v8 + 32);
      long long v13 = *(_OWORD *)v8;
      uint64_t v23 = *(void *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      double v14 = sub_692CC(v6, v9, v10, (unint64_t *)v22);
      uint64_t v16 = *(void *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        uint64_t v18 = &CGPointZero;
      }
      else
      {
        uint64_t v17 = *(void *)(v5 + 112) + 152 * v16;
        uint64_t v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      double v20 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      id result = [*(id *)(v8 + 120) setComputedOrigin:v14 - x, v15 - v20];
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_692CC(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8 = a1[2];
  sub_68CD0(*a1, a4[1], a4[4], 1);
  double v10 = v9;
  sub_62124(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 80))
  {
    [*(id *)(*(void *)(a2 + 40) + (a4[3] << 6)) valign];
    [*(id *)(*(void *)(a2 + 40) + ((a4[6] + a4[3] - 1) << 6)) valign];
  }
  return v10 + *(double *)(v8 + 64);
}

void sub_69474(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = a1[4];
    uint64_t v6 = a1 + 5;
    uint64_t v7 = 152 * a3;
    uint64_t v8 = 152 * a2;
    do
    {
      uint64_t v9 = *(void *)(v5 + 112) + v7 + v8;
      uint64_t v10 = *(void *)(a1[8] + 8 * *(void *)(v9 - 152));
      uint64_t v11 = *(void *)(v9 - 40);
      long long v12 = *(_OWORD *)(v9 - 136);
      long long v13 = *(_OWORD *)(v9 - 120);
      long long v14 = *(_OWORD *)(v9 - 152);
      uint64_t v22 = *(void *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      double v15 = sub_692CC(v6, v10, v11, (unint64_t *)v21);
      double v17 = v16;
      double v19 = v18;
      double v20 = [*(id *)(v9 - 32) controller];
      [v20 validateGroupedContainingLayout:v17 withSize:v19];

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_69554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double *sub_69564(double *result, double a2, double a3)
{
  result[2] = a2;
  result[3] = a3;
  uint64_t v3 = *(id **)result;
  if (*((void *)result + 1) != *(void *)result)
  {
    double v4 = a3;
    uint64_t v6 = result;
    do
    {
      [*v3 computedNaturalSize];
      double v8 = v7;
      id v10 = *v3++;
      id result = [v10 setComputedOrigin:a2 + (v6[4] - v9) * 0.5, v4];
      double v4 = v4 + v8;
    }
    while (v3 != *((id **)v6 + 1));
  }
  return result;
}

void sub_695E4(void *a1, void *a2, double a3, double a4)
{
  id v7 = a2;
  unint64_t v8 = a1[5];
  unint64_t v9 = a1[4];
  if (v9 >= v8)
  {
    unint64_t v11 = a1[3];
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - v11) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_4484();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - v11) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v25 = a1 + 5;
    if (v15)
    {
      double v16 = (char *)sub_12768((uint64_t)(a1 + 5), v15);
      unint64_t v11 = a1[3];
      unint64_t v9 = a1[4];
    }
    else
    {
      double v16 = 0;
    }
    double v17 = (double *)&v16[24 * v12];
    *(void *)double v17 = v7;
    v17[1] = a3;
    v17[2] = a4;
    if (v9 == v11)
    {
      int64x2_t v20 = vdupq_n_s64(v11);
      double v18 = &v16[24 * v12];
    }
    else
    {
      double v18 = &v16[24 * v12];
      do
      {
        uint64_t v19 = *(void *)(v9 - 24);
        v9 -= 24;
        *(void *)unint64_t v9 = 0;
        *((void *)v18 - 3) = v19;
        v18 -= 24;
        *(_OWORD *)(v18 + _Block_object_dispose(&STACK[0x2D0], 8) = *(_OWORD *)(v9 + 8);
      }
      while (v9 != v11);
      int64x2_t v20 = *(int64x2_t *)(a1 + 3);
    }
    id v10 = (char *)(v17 + 3);
    a1[3] = v18;
    a1[4] = v17 + 3;
    int64x2_t v23 = v20;
    uint64_t v21 = a1[5];
    a1[5] = &v16[24 * v15];
    uint64_t v24 = v21;
    uint64_t v22 = v20.i64[0];
    sub_69760((uint64_t)&v22);
  }
  else
  {
    *(void *)unint64_t v9 = v7;
    id v10 = (char *)(v9 + 24);
    *(double *)(v9 + _Block_object_dispose(&STACK[0x2D0], 8) = a3;
    *(double *)(v9 + 16) = a4;
  }
  a1[4] = v10;
}

void sub_6974C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_69760(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_697B4(void *a1, uint64_t *size, uint64_t *a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    double v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      uint64_t v6 = 0;
      unint64_t v9 = ptr;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      unint64_t v8 = 64;
      unint64_t v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            unint64_t v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            unint64_t v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        unint64_t v22 = v8;
        int64x2_t v23 = v9;
        *((void *)v9 + v7) = v4;
        uint64_t v10 = v4[6];
        uint64_t v24 = v4[7];
        if (v10 != v24)
        {
          unint64_t v11 = 0;
          do
          {
            uint64_t v25 = v10;
            uint64_t v13 = *(void *)(v10 + 8);
            uint64_t v12 = *(void *)(v10 + 16);
            uint64_t v26 = v12;
            while (v13 != v12)
            {
              uint64_t v14 = a1[8];
              uint64_t v27 = v13;
              unint64_t v15 = (*(void *)(v13 + 8) - v14) >> 3;
              uint64_t v16 = *(void *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                uint64_t v28 = v16 >> 3;
                do
                {
                  uint64_t v17 = *(void *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6) {
                      uint64_t v6 = objc_opt_new();
                    }
                    do
                    {
                      if (([v6 containsIndex:v17] & 1) == 0)
                      {
                        uint64_t v18 = a1[14] + 152 * v17;
                        *(void *)uint64_t v18 = -1;
                        *(_OWORD *)(v18 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        [v6 addIndex:v17];
                      }
                      uint64_t v19 = a1[14];
                      sub_69170((void *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      uint64_t v17 = *(void *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              uint64_t v12 = v26;
              uint64_t v13 = v27 + 96;
            }
            ++v11;
            uint64_t v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        unint64_t v8 = v22;
        unint64_t v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_69B48;
    void v33[3] = &unk_253220;
    void v33[4] = a1;
    long long v34 = *a4;
    uint64_t v35 = *((void *)a4 + 2);
    unint64_t v36 = v9;
    [v6 enumerateRangesUsingBlock:v33];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_69DE0;
    void v29[3] = &unk_253220;
    void v29[4] = a1;
    long long v30 = *a4;
    uint64_t v31 = *((void *)a4 + 2);
    uint64_t v32 = v9;
    [v6 enumerateRangesWithOptions:2 usingBlock:v29];
    if (v9 != ptr) {
      free(v9);
    }
  }
}

void sub_69B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_69B48(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    double v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = result + 5;
    uint64_t v7 = 152 * a2;
    do
    {
      uint64_t v8 = *(void *)(v5 + 112) + v7;
      uint64_t v9 = *(void *)(v4[8] + 8 * *(void *)v8);
      uint64_t v10 = *(void *)(v8 + 112);
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v11 = *(_OWORD *)(v8 + 32);
      long long v13 = *(_OWORD *)v8;
      uint64_t v23 = *(void *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      double v14 = sub_69C38(v6, v9, v10, (unint64_t *)v22);
      uint64_t v16 = *(void *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        uint64_t v18 = &CGPointZero;
      }
      else
      {
        uint64_t v17 = *(void *)(v5 + 112) + 152 * v16;
        uint64_t v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      double v20 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      id result = [*(id *)(v8 + 120) setComputedOrigin:v14 - x, v15 - v20];
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_69C38(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8 = a1[2];
  sub_68CD0(*a1, a4[1], a4[4], 1);
  double v10 = v9;
  sub_62124(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 32))
  {
    [*(id *)(*(void *)(a2 + 48) + (a4[3] << 6)) valign];
    [*(id *)(*(void *)(a2 + 48) + ((a4[6] + a4[3] - 1) << 6)) valign];
  }
  return v10 + *(double *)(v8 + 16);
}

void sub_69DE0(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = a1[4];
    uint64_t v6 = a1 + 5;
    uint64_t v7 = 152 * a3;
    uint64_t v8 = 152 * a2;
    do
    {
      uint64_t v9 = *(void *)(v5 + 112) + v7 + v8;
      uint64_t v10 = *(void *)(a1[8] + 8 * *(void *)(v9 - 152));
      uint64_t v11 = *(void *)(v9 - 40);
      long long v12 = *(_OWORD *)(v9 - 136);
      long long v13 = *(_OWORD *)(v9 - 120);
      long long v14 = *(_OWORD *)(v9 - 152);
      uint64_t v22 = *(void *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      double v15 = sub_69C38(v6, v10, v11, (unint64_t *)v21);
      double v17 = v16;
      double v19 = v18;
      double v20 = [*(id *)(v9 - 32) controller];
      [v20 validateGroupedContainingLayout:v17 withSize:v19];

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_69EC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_69ED0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_3EA4();
  }
  return operator new(40 * a2);
}

uint64_t sub_69F18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_69F6C(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  if (v3 < v2)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    do
    {
      uint64_t v5 = *(void *)(**(void **)a1 + 88 * v3 + 24);
      if (v4 >= 0xAAAAAAAAAAAAAAABLL * ((*(void *)(**(void **)a1 + 88 * v3 + 32) - v5) >> 5))
      {
        unint64_t v4 = 0;
        *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = ++v3;
      }
      else
      {
        id v6 = *(id *)(v5 + 96 * v4 + 32);
        uint64_t v7 = (int *)[v6 role];

        unint64_t v3 = *(void *)(a1 + 8);
        unint64_t v2 = *(void *)(a1 + 16);
        if (v7 == &dword_4) {
          break;
        }
        unint64_t v4 = *(void *)(a1 + 24) + 1;
      }
      *(void *)(a1 + 24) = v4;
    }
    while (v3 < v2);
  }
  if (v3 >= v2)
  {
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v2;
    *(void *)(a1 + 24) = 0;
  }
}

void sub_6A03C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6A04C(void *a1, long long *size, uint64_t a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    unint64_t v36 = 0;
    uint64_t v26 = a4;
    unint64_t v4 = 0;
    memset(ptr, 0, sizeof(ptr));
    unint64_t v5 = 64;
    long long v6 = size[1];
    uint64_t v7 = ptr;
    long long v46 = *size;
    long long v47 = v6;
    uint64_t v27 = a3;
    while (1)
    {
      uint64_t v8 = *((void *)&v47 + 1);
      if (*((void *)&v46 + 1) == *(void *)(a3 + 8) && *((void *)&v47 + 1) == *(void *)(a3 + 24)) {
        break;
      }
      uint64_t v9 = *(void *)(*(void *)v46 + 88 * *((void *)&v46 + 1) + 24);
      if (v36 >= v5)
      {
        unint64_t v10 = v5 + 64;
        unint64_t v29 = v10;
        if (v7 == ptr)
        {
          uint64_t v7 = malloc_type_malloc(8 * v10, 0x2004093837F09uLL);
          memcpy(v7, ptr, 8 * v36);
        }
        else
        {
          uint64_t v7 = malloc_type_realloc(v7, 8 * v10, 0x2004093837F09uLL);
        }
      }
      else
      {
        unint64_t v29 = v5;
      }
      uint64_t v28 = v7;
      uint64_t v35 = (uint64_t *)(v9 + 96 * v8);
      *((void *)v7 + v36) = v35;
      uint64_t v30 = v35[6];
      if (v35[5] != v30)
      {
        unint64_t v11 = 0;
        long long v12 = (uint64_t *)(v9 + 96 * v8);
        long long v13 = v12 + 1;
        long long v14 = v12 + 2;
        double v15 = v12 + 3;
        uint64_t v16 = v35[5];
        do
        {
          uint64_t v31 = v16;
          uint64_t v32 = *(void *)(v16 + 16);
          uint64_t v17 = *(void *)(v16 + 8);
          if (v17 != v32)
          {
            do
            {
              uint64_t v18 = v17;
              uint64_t v19 = a1[8];
              uint64_t v33 = v18;
              unint64_t v20 = (*(void *)(v18 + 8) - v19) >> 3;
              uint64_t v21 = *(void *)(v18 + 16) - v19;
              if (v20 < v21 >> 3)
              {
                uint64_t v34 = v21 >> 3;
                do
                {
                  uint64_t v22 = *(void *)(a1[11] + 8 * v20);
                  if (v22 != -1)
                  {
                    if (!v4) {
                      unint64_t v4 = objc_opt_new();
                    }
                    do
                    {
                      if ((objc_msgSend(v4, "containsIndex:", v22, v26) & 1) == 0)
                      {
                        uint64_t v23 = a1[14] + 152 * v22;
                        *(void *)uint64_t v23 = -1;
                        *(_OWORD *)(v23 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v23 + 24) = 0u;
                        *(_OWORD *)(v23 + 40) = 0u;
                        [v4 addIndex:v22];
                      }
                      unint64_t v24 = v20;
                      uint64_t v25 = a1[14];
                      sub_69170((void *)(v25 + 152 * v22), v36, *v35, *v13, v11, *v14, *v15, 1uLL);
                      uint64_t v22 = *(void *)(v25 + 152 * v22 + 128);
                      unint64_t v20 = v24;
                    }
                    while (v22 != -1);
                  }
                  ++v20;
                }
                while (v20 != v34);
              }
              uint64_t v17 = v33 + 96;
            }
            while (v33 + 96 != v32);
          }
          ++v11;
          uint64_t v16 = v31 + 64;
        }
        while (v31 + 64 != v30);
      }
      ++v36;
      ++*((void *)&v47 + 1);
      sub_69F6C((uint64_t)&v46);
      a3 = v27;
      uint64_t v7 = v28;
      unint64_t v5 = v29;
    }
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v42[2] = sub_6A498;
    v42[3] = &unk_253220;
    void v42[4] = a1;
    long long v43 = *v26;
    uint64_t v44 = *((void *)v26 + 2);
    unint64_t v45 = v7;
    [v4 enumerateRangesUsingBlock:v42];
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_6A588;
    v38[3] = &unk_253220;
    void v38[4] = a1;
    long long v39 = *v26;
    uint64_t v40 = *((void *)v26 + 2);
    unint64_t v41 = v7;
    [v4 enumerateRangesWithOptions:2 usingBlock:v38];
    if (v7 != ptr) {
      free(v7);
    }
  }
}

void sub_6A464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_6A498(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    unint64_t v4 = result;
    uint64_t v5 = result[4];
    long long v6 = result + 5;
    uint64_t v7 = 152 * a2;
    do
    {
      uint64_t v8 = *(void *)(v5 + 112) + v7;
      uint64_t v9 = *(void *)(v4[8] + 8 * *(void *)v8);
      uint64_t v10 = *(void *)(v8 + 112);
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v11 = *(_OWORD *)(v8 + 32);
      long long v13 = *(_OWORD *)v8;
      uint64_t v23 = *(void *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      double v14 = sub_692CC(v6, v9, v10, (unint64_t *)v22);
      uint64_t v16 = *(void *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        uint64_t v18 = &CGPointZero;
      }
      else
      {
        uint64_t v17 = *(void *)(v5 + 112) + 152 * v16;
        uint64_t v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      double v20 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      id result = [*(id *)(v8 + 120) setComputedOrigin:v14 - x, v15 - v20];
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_6A588(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = a1[4];
    long long v6 = a1 + 5;
    uint64_t v7 = 152 * a3;
    uint64_t v8 = 152 * a2;
    do
    {
      uint64_t v9 = *(void *)(v5 + 112) + v7 + v8;
      uint64_t v10 = *(void *)(a1[8] + 8 * *(void *)(v9 - 152));
      uint64_t v11 = *(void *)(v9 - 40);
      long long v12 = *(_OWORD *)(v9 - 136);
      long long v13 = *(_OWORD *)(v9 - 120);
      long long v14 = *(_OWORD *)(v9 - 152);
      uint64_t v22 = *(void *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      double v15 = sub_692CC(v6, v10, v11, (unint64_t *)v21);
      double v17 = v16;
      double v19 = v18;
      double v20 = [*(id *)(v9 - 32) controller];
      [v20 validateGroupedContainingLayout:v17 withSize:v19];

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_6A668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6A678(void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (char *)**a1;
  if (v2)
  {
    unint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = (void *)*((void *)v4 - 5);
        v4 -= 40;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

id sub_6AE2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [v3 lastObject];
  uint64_t v5 = [v4 value];
  LOBYTE(a1) = [v5 isEqual:*(void *)(*(void *)(a1 + 32) + 24)];

  if (a1) {
    id v6 = &__NSArray0__struct;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

void sub_6B098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_6B0B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_6B0C0(uint64_t a1)
{
}

void sub_6B0C8(uint64_t a1, void *a2)
{
}

void sub_6D9E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(unsigned char *)(*(void *)(a1 + 32) + sub_3BD4((uint64_t)this + 48) = 0;
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = v3[5];
  if (v2 == v4)
  {
    void v3[5] = 0;
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
    [WeakRetained hoverInteractionDidSettle:*(void *)(a1 + 32)];
  }
  else if (v4)
  {
    [v3 _checkIfSettledWithTime:];
  }
}

void sub_6DBF8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_6DCB4;
  void v7[3] = &unk_253298;
  long long v10 = *(_OWORD *)(a1 + 40);
  id v8 = *(id *)(a1 + 32);
  id v9 = v5;
  id v6 = v5;
  [a3 enumerateObjectsUsingBlock:v7];
}

id sub_6DCB4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  [a2 CGRectValue];
  id result = (id)CGRectContainsPoint(v7, *(CGPoint *)(a1 + 48));
  if (result)
  {
    id result = [*(id *)(a1 + 32) addObject:*(void *)(a1 + 40)];
    *a4 = 1;
  }
  return result;
}

void sub_6E8CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6E9E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6EADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_6EC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_6EEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_6EFB8(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_6F4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_6FEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_70234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_7031C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_70340(uint64_t a1)
{
  [*(id *)(a1 + 32) setApplyPhase:1];
  if ([*(id *)(*(void *)(a1 + 40) + 96) layoutDirection] == (char *)&def_141F14 + 2
    && [*(id *)(a1 + 32) effectiveUserInterfaceLayoutDirection] != (char *)&def_141F14 + 1)
  {
    uint64_t v2 = 4;
    goto LABEL_7;
  }
  if ([*(id *)(*(void *)(a1 + 40) + 96) layoutDirection] == (char *)&def_141F14 + 1
    && [*(id *)(a1 + 32) effectiveUserInterfaceLayoutDirection])
  {
    uint64_t v2 = 3;
LABEL_7:
    [*(id *)(a1 + 32) setSemanticContentAttribute:v2];
  }
  [*(id *)(a1 + 32) contentOffset];
  double v4 = v3;
  double v6 = v5;
  [*(id *)(a1 + 32) bounds];
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(v15 + 128);
  if (v16)
  {
    if ((v16 & 2) != 0)
    {
      double v18 = [*(id *)(a1 + 32) renderModel];
      double v19 = [v18 anchorSet];
      double v17 = [v19 scrollAnchorWithScrollView:*(void *)(a1 + 32) offset:v4 v6];
    }
    else
    {
      double v17 = [*(id *)(v15 + 104) feedScrollAnchor];
    }
    double y = CGPointZero.y;
    if (v17)
    {
      uint64_t v21 = [v17 anchor];
      uint64_t v22 = [v21 identifier];

      uint64_t v23 = [*(id *)(*(void *)(a1 + 40) + 96) sections];
      v64[0] = _NSConcreteStackBlock;
      v64[1] = 3221225472;
      v64[2] = sub_70A18;
      v64[3] = &unk_2532E8;
      id v24 = v22;
      id v65 = v24;
      uint64_t v25 = (uint64_t)[v23 indexOfObjectPassingTest:v64];

      if (v25 != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v26 = [*(id *)(*(void *)(a1 + 40) + 96) sections];
        uint64_t v27 = [v26 objectAtIndexedSubscript:v25];

        uint64_t v28 = objc_opt_class();
        unint64_t v29 = [*(id *)(*(void *)(a1 + 40) + 96) content];
        uint64_t v30 = [v29 currentStackName];
        uint64_t v31 = [v30 value];
        uint64_t v32 = TUIDynamicCast(v28, v31);

        uint64_t v33 = [v27 entry];
        uint64_t v34 = [v33 stackNames];

        if ([v34 count] && v32 && !objc_msgSend(v34, "containsObject:", v32)) {
          uint64_t v25 = 0x7FFFFFFFFFFFFFFFLL;
        }

        if (v25 != 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v35 = [*(id *)(*(void *)(a1 + 40) + 96) sections];
          unint64_t v36 = [v35 objectAtIndexedSubscript:v25];

          [v36 size];
          double v38 = v37;
          [*(id *)(a1 + 32) bounds];
          double v55 = v39;
          uint64_t v40 = [v17 anchor];
          unint64_t v41 = (char *)[v40 position];

          if (v41)
          {
            if (v41 == (unsigned char *)&def_141F14 + 1)
            {
              [*(id *)(a1 + 32) adjustedContentInset];
              double v42 = v55 - v38 - v43;
            }
            else
            {
              double v42 = 0.0;
              if (v41 == (unsigned char *)&def_141F14 + 2) {
                double v42 = (v55 - v38) * 0.5;
              }
            }
          }
          else
          {
            [*(id *)(a1 + 32) adjustedContentInset];
            double v42 = v44;
          }
          [v17 relativeDistance];
          double v46 = v45;
          [v36 offset];
          double y = v47 - (v42 + v55 * 0.5 * v46) - v6;
        }
      }
    }
    double v4 = v4 + CGPointZero.x;
    double v6 = v6 + y;
  }
  if (+[TUIFeedView areFeedUpdatesAnimated])
  {
    v61[0] = _NSConcreteStackBlock;
    v61[1] = 3221225472;
    v61[2] = sub_70A6C;
    v61[3] = &unk_253388;
    int8x16_t v56 = *(int8x16_t *)(a1 + 32);
    id v48 = (id)v56.i64[0];
    int8x16_t v62 = vextq_s8(v56, v56, 8uLL);
    v63[0] = *(id *)(a1 + 48);
    v63[1] = v8;
    v63[2] = v10;
    v63[3] = v12;
    v63[4] = v14;
    *(double *)&v63[5] = v4;
    *(double *)&v63[6] = v6;
    +[TUIFeedView performAnimatedFeedUpdates:v61];
    unint64_t v49 = (id *)&v62.i64[1];
    unint64_t v50 = (id *)v63;
  }
  else
  {
    unint64_t v51 = *(void **)(a1 + 32);
    id v52 = [*(id *)(*(void *)(a1 + 40) + 152) model];
    uint64_t v53 = *(void *)(a1 + 40);
    uint64_t v54 = *(void *)(v53 + 128);
    v59[0] = _NSConcreteStackBlock;
    v59[1] = 3221225472;
    v59[2] = sub_710A4;
    double v59[3] = &unk_253310;
    void v59[4] = v53;
    id v60 = *(id *)(a1 + 32);
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3221225472;
    v57[2] = sub_71130;
    v57[3] = &unk_253338;
    id v58 = *(id *)(a1 + 48);
    [v51 performBatchUpdatesWithRenderModel:v52 flags:v54 block:v59 completion:v57];
    unint64_t v49 = &v60;
    unint64_t v50 = &v58;

    if (*(unsigned char *)(*(void *)(a1 + 40) + 128)) {
      [*(id *)(a1 + 32) setContentOffset:0 animated:v4 v6];
    }
  }

  *(void *)(*(void *)(a1 + 40) + 112) = 4;
}

void sub_708E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_709B8()
{
  JUMPOUT(0x709A8);
}

void sub_709CC()
{
}

void sub_709D4()
{
  JUMPOUT(0x709ACLL);
}

void sub_709E0()
{
}

void sub_709E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  JUMPOUT(0x709ACLL);
}

void sub_70A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  JUMPOUT(0x70A10);
}

id sub_70A18(uint64_t a1, void *a2)
{
  double v3 = [a2 UUID];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_70A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_70A6C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 160))
  {
    [*(id *)(a1 + 40) setApplyPhase:2];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_70BF0;
    void v14[3] = &unk_253310;
    id v2 = *(id *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 32);
    id v15 = v2;
    uint64_t v16 = v3;
    +[UIView performWithoutAnimation:v14];
  }
  [*(id *)(a1 + 40) setApplyPhase:3];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_70D58;
  void v7[3] = &unk_253388;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v4;
  uint64_t v9 = v5;
  id v10 = *(id *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 72);
  long long v11 = *(_OWORD *)(a1 + 56);
  long long v12 = v6;
  long long v13 = *(_OWORD *)(a1 + 88);
  +[TUIFeedView performAnimatedFeedUpdates:v7];
}

void sub_70BCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_70BF0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(*(void *)(a1 + 40) + 160) model];
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(v4 + 128);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_70CCC;
  void v6[3] = &unk_253310;
  double v6[4] = v4;
  id v7 = *(id *)(a1 + 32);
  [v2 performBatchUpdatesWithRenderModel:v3 flags:v5 block:v6 completion:0];
}

void sub_70CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_70CCC(uint64_t a1)
{
  [*(id *)(a1 + 32) _applyUpdates:*(void *)(a1 + 32) + 32 toFeedView:*(void *)(a1 + 40)];
  id v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  [*(id *)(*(void *)(a1 + 32) + 160) applyToContext:];
  [*(id *)(a1 + 40) invalidateWithContext:v2];
}

void sub_70D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_70D58(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(*(void *)(a1 + 40) + 168) model];
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(v4 + 128);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_70FEC;
  v19[3] = &unk_253310;
  void v19[4] = v4;
  id v20 = *(id *)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_71078;
  v17[3] = &unk_253338;
  id v18 = *(id *)(a1 + 48);
  [v2 performBatchUpdatesWithRenderModel:v3 flags:v5 block:v19 completion:v17];

  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 128);
  if (v6)
  {
    if ((v6 & 4) != 0)
    {
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_71090;
      void v13[3] = &unk_253360;
      id v14 = *(id *)(a1 + 32);
      long long v15 = *(_OWORD *)(a1 + 88);
      char v16 = 0;
      +[UIView performWithoutAnimation:v13];
      id v7 = v14;
    }
    else
    {
      id v7 = +[_TUIAnimationState currentState];
      id v8 = [v7 customAnimationForContentOffset];
      if (!v8
        || (double MaxY = CGRectGetMaxY(*(CGRect *)(a1 + 56)),
            [*(id *)(a1 + 32) renderModel],
            id v10 = objc_claimAutoreleasedReturnValue(),
            [v10 size],
            double v12 = v11,
            v10,
            MaxY > v12))
      {
        [*(id *)(a1 + 32) setContentOffset:1 animated:*(double *)(a1 + 88) *(double *)(a1 + 96)];
      }
    }
  }
}

void sub_70F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_70FEC(uint64_t a1)
{
  [*(id *)(a1 + 32) _applyUpdates:*(void *)(a1 + 32) + 56 toFeedView:*(void *)(a1 + 40)];
  id v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  [*(id *)(*(void *)(a1 + 32) + 168) applyToContext:];
  [*(id *)(a1 + 40) invalidateWithContext:v2];
}

void sub_71064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_71078(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_71090(uint64_t a1)
{
  return [*(id *)(a1 + 32) setContentOffset:*(unsigned __int8 *)(a1 + 56) animated:*(double *)(a1 + 40)];
}

void sub_710A4(uint64_t a1)
{
  [*(id *)(a1 + 32) _applyUpdates:*(void *)(a1 + 32) + 8 toFeedView:*(void *)(a1 + 40)];
  id v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  [*(id *)(*(void *)(a1 + 32) + 152) applyToContext:];
  [*(id *)(a1 + 40) invalidateWithContext:v2];
}

void sub_7111C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_71130(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_714D4(uint64_t a1)
{
  uint64_t v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "superclass"), "supportedAttributes");
  id v2 = [v1 mutableCopy];

  uint64_t v3 = +[TUIAttributeSet supportedAttributesTextStyling];
  [v2 unionSet:v3];

  v6[0] = @"insets";
  v6[1] = @"text";
  void v6[2] = @"return-key-type";
  uint64_t v4 = +[NSArray arrayWithObjects:v6 count:3];
  [v2 addAttributesFromArray:v4];

  uint64_t v5 = (void *)qword_2DF438;
  qword_2DF438 = (uint64_t)v2;
}

void sub_7163C(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF448;
  qword_2DF448 = v2;
}

void sub_71D2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_71D50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = (id *)(a1 + 88);
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v9 = [WeakRetained enabled];
  uint64_t v10 = *(void *)(a1 + 48);
  id v11 = objc_loadWeakRetained(v6);
  double v12 = [v11 identifier];
  long long v13 = +[TUITextView renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:style:placeholderText:text:returnKeyType:keyboardAppearance:](TUITextView, "renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:style:placeholderText:text:returnKeyType:keyboardAppearance:", v7, v4, v5, v9, v10, v12, *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 128));

  return v13;
}

uint64_t sub_72AD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained
    && (id v4 = [WeakRetained visibleBoundsGeneration], v5 = *(void *)(a1 + 32), v4 == *(id *)(v5 + 32)))
  {
    if (*(unsigned char *)(a1 + 40)) {
      unsigned int v6 = [*(id *)(v5 + 88) windowLowerLoadTriggered];
    }
    else {
      unsigned int v6 = 0;
    }
    if (*(unsigned char *)(a1 + 41))
    {
      unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 88) windowLowerUnloadTriggered];
      if (v6) {
        unsigned int v6 = 1;
      }
      else {
        unsigned int v6 = v8;
      }
    }
    if (*(unsigned char *)(a1 + 42))
    {
      unsigned int v9 = [*(id *)(*(void *)(a1 + 32) + 88) windowUpperLoadTriggered];
      if (v6) {
        unsigned int v6 = 1;
      }
      else {
        unsigned int v6 = v9;
      }
    }
    uint64_t v7 = v6 != 0;
    if (*(unsigned char *)(a1 + 43))
    {
      unsigned int v10 = [*(id *)(*(void *)(a1 + 32) + 88) windowUpperUnloadTriggered];
      if (v6) {
        uint64_t v7 = 1;
      }
      else {
        uint64_t v7 = v10;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_72D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(*(void *)(a1 + 32) + 56) mapData:a2];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_72E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(*(void *)(a1 + 32) + 56) mapData:a2];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_755FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class();
  TUIDynamicCast(v4, v3);
  id v14 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = [v14 objectForKeyedSubscript:@"bindings"];
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = [v14 objectForKeyedSubscript:@"template"];
  unsigned int v8 = TUIDynamicCast(v6, v7);

  unsigned int v9 = +[NSURL URLWithString:v8 relativeToURL:*(void *)(*(void *)(a1 + 32) + 56)];
  unsigned int v10 = +[TUIFeedEntry feedEntryFromTemplateURL:v9 data:0 behaviors:0];
  id v11 = [_TUIFeedCaptureSectionLoader alloc];
  double v12 = [v10 uuid];
  long long v13 = [(_TUIFeedCaptureSectionLoader *)v11 initWithTemplateURL:v9 uuid:v12 bindings:v5];

  [v10 setDelegate:v13];
  [*(id *)(a1 + 40) addObject:v10];
  [*(id *)(a1 + 48) addObject:v13];
}

void sub_758D8(uint64_t a1, unint64_t a2)
{
  if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 72) count] > a2
    && (unint64_t)[*(id *)(a1 + 40) count] > a2)
  {
    uint64_t v4 = objc_opt_class();
    uint64_t v5 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a2];
    TUIDynamicCast(v4, v5);
    id v12 = (id)objc_claimAutoreleasedReturnValue();

    uint64_t v6 = [v12 objectForKeyedSubscript:@"bindings"];
    uint64_t v7 = objc_opt_class();
    unsigned int v8 = [v12 objectForKeyedSubscript:@"template"];
    unsigned int v9 = TUIDynamicCast(v7, v8);

    unsigned int v10 = +[NSURL URLWithString:v9 relativeToURL:*(void *)(*(void *)(a1 + 32) + 56)];
    id v11 = [*(id *)(*(void *)(a1 + 32) + 72) objectAtIndexedSubscript:a2];
    [v11 updateTemplateURL:v10 bindings:v6];
  }
}

id sub_76660(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_78D34;
  void v14[3] = &unk_253628;
  id v8 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v7, "count"));
  id v15 = v8;
  id v16 = v5;
  id v17 = v6;
  id v9 = v6;
  id v10 = v5;
  [v7 enumerateKeysAndObjectsUsingBlock:v14];

  id v11 = v17;
  id v12 = v8;

  return v12;
}

id sub_76784(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 isFileURL] && objc_msgSend(v4, "isFileURL"))
  {
    id v5 = [v3 standardizedURL];
    id v6 = [v5 pathComponents];

    id v7 = [v4 standardizedURL];
    id v8 = [v7 pathComponents];

    unint64_t v9 = 0;
    if ([v6 count])
    {
      do
      {
        if (v9 >= (unint64_t)[v8 count]) {
          break;
        }
        id v10 = [v6 objectAtIndexedSubscript:v9];
        id v11 = [v8 objectAtIndexedSubscript:v9];
        unsigned int v12 = [v10 isEqualToString:v11];

        if (!v12) {
          break;
        }
        ++v9;
      }
      while (v9 < (unint64_t)[v6 count]);
    }
    long long v13 = objc_opt_new();
    id v14 = [v6 subarrayWithRange:v9, [v6 count] - v9];
    [v13 addObjectsFromArray:v14];

    while (v9 < (unint64_t)[v8 count])
      [v13 insertObject:@".." atIndex:0];
    id v15 = [v13 componentsJoinedByString:@"/"];
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

void sub_7716C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 dictionaryRepresentation];
  [v2 addObject:v3];
}

void sub_773CC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = [a2 aTemplate];
  id v3 = [v4 package];
  [v2 addObject:v3];
}

void sub_77760(uint64_t a1, void *a2)
{
  id v3 = [a2 dynamicStates];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_77800;
  void v4[3] = &unk_2534C0;
  id v5 = *(id *)(a1 + 32);
  [v3 enumerateObjectsUsingBlock:v4];
}

void sub_77800(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 kind];
  [v2 addObject:v3];
}

void sub_77858(uint64_t a1, void *a2)
{
  id v3 = [a2 dynamicStates];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_778FC;
  double v5[3] = &unk_2534E8;
  id v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  [v3 enumerateObjectsUsingBlock:v5];
}

void sub_778FC(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 kind];
  unsigned int v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  if (v4)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = [v10 instance];
    id v7 = [v5 objectForKeyedSubscript:v6];

    if (!v7)
    {
      id v7 = objc_alloc_init((Class)NSMutableSet);
      id v8 = *(void **)(a1 + 40);
      unint64_t v9 = [v10 instance];
      [v8 setObject:v7 forKeyedSubscript:v9];
    }
    [v7 addObject:v10];
  }
}

void sub_779E0(uint64_t a1, uint64_t a2, void *a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_77A6C;
  void v4[3] = &unk_253538;
  id v5 = *(id *)(a1 + 32);
  [a3 enumerateObjectsUsingBlock:v4];
}

void sub_77A6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v12 = (id)objc_opt_new();
  unsigned int v4 = [v3 instance];
  id v5 = sub_77C00(v4, 0, 0);
  [v12 setObject:v5 forKeyedSubscript:@"instance"];

  id v6 = [v3 parameters];
  id v7 = sub_77C00(v6, 0, 0);
  [v12 setObject:v7 forKeyedSubscript:@"parameters"];

  id v8 = objc_opt_new();
  unint64_t v9 = [v3 value];

  id v10 = sub_77C00(v9, v8, @"value");
  [v12 setObject:v10 forKeyedSubscript:@"value"];

  [v8 removeObject:@"value"];
  if ([v8 count])
  {
    id v11 = [v8 allObjects];
    [v12 setObject:v11 forKeyedSubscript:@"dynamicKeyPaths"];
  }
  [*(id *)(a1 + 32) addObject:v12];
}

id sub_77C00(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (!v5)
  {
    id v15 = 0;
    goto LABEL_23;
  }
  if (objc_opt_respondsToSelector())
  {
    id v8 = v5;
    unint64_t v9 = objc_alloc_init(_TUIFeedCaptureDynamicObserver);
    id v10 = [v8 instanceForObserver:v9];
    id v11 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicArrayInstance, v10);
    uint64_t v12 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicValueInstance, v10);
    long long v13 = (void *)v12;
    if (v11)
    {
      if (v7) {
        [v6 addObject:v7];
      }
      uint64_t v31 = 0;
      uint64_t v32 = &v31;
      uint64_t v33 = 0x3032000000;
      uint64_t v34 = sub_78DFC;
      uint64_t v35 = sub_78E0C;
      id v36 = 0;
      id v14 = [v11 count];
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_78E14;
      v27[3] = &unk_253650;
      uint64_t v30 = &v31;
      id v28 = v6;
      id v29 = v7;
      [v11 objectsInRange:0 block:v14, v27];
      id v15 = (id)v32[5];

      id v16 = v28;
    }
    else
    {
      if (!v12)
      {
        double v19 = (objc_class *)objc_opt_class();
        id v20 = NSStringFromClass(v19);
        id v15 = +[NSString stringWithFormat:@"invalid dynamic instance -- %@", v20];

        goto LABEL_17;
      }
      if (v7) {
        [v6 addObject:v7];
      }
      uint64_t v31 = 0;
      uint64_t v32 = &v31;
      uint64_t v33 = 0x3032000000;
      uint64_t v34 = sub_78DFC;
      uint64_t v35 = sub_78E0C;
      id v36 = 0;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_78F8C;
      v23[3] = &unk_253678;
      uint64_t v26 = &v31;
      id v24 = v6;
      id v25 = v7;
      [v13 valueWithBlock:v23];
      id v15 = (id)v32[5];

      id v16 = v24;
    }

    _Block_object_dispose(&v31, 8);
LABEL_17:

    goto LABEL_23;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    sub_78E68(v5, v6, v7);
    id v17 = (id)objc_claimAutoreleasedReturnValue();
LABEL_22:
    id v15 = v17;
    goto LABEL_23;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    sub_76660(v5, v6, v7);
    id v17 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_22;
  }
  if (+[NSJSONSerialization isValidJSONObject:v5]
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v17 = v5;
    goto LABEL_22;
  }
  uint64_t v21 = (objc_class *)objc_opt_class();
  uint64_t v22 = NSStringFromClass(v21);
  id v15 = +[NSString stringWithFormat:@"invalid JSON object -- %@", v22];

LABEL_23:

  return v15;
}

void sub_78020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_78380(uint64_t a1, void *a2)
{
  id v3 = [a2 imageResources];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_78420;
  void v4[3] = &unk_253588;
  id v5 = *(id *)(a1 + 32);
  [v3 enumerateObjectsUsingBlock:v4];
}

void sub_78420(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 kind];
  [v2 addObject:v3];
}

void sub_78478(uint64_t a1, void *a2)
{
  id v3 = [a2 imageResources];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_7851C;
  double v5[3] = &unk_2535B0;
  unsigned int v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  [v3 enumerateObjectsUsingBlock:v5];
}

void sub_7851C(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 kind];
  unsigned int v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  if (v4)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = [v10 instance];
    id v7 = [v5 objectForKeyedSubscript:v6];

    if (!v7)
    {
      id v7 = objc_alloc_init((Class)NSMutableSet);
      id v8 = *(void **)(a1 + 40);
      unint64_t v9 = [v10 instance];
      [v8 setObject:v7 forKeyedSubscript:v9];
    }
    [v7 addObject:v10];
  }
}

void sub_78600(uint64_t a1, uint64_t a2, void *a3)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_786A4;
  double v5[3] = &unk_2535D8;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  [a3 enumerateObjectsUsingBlock:v5];
}

void sub_786A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = objc_opt_new();
  id v5 = [v3 instance];
  id v6 = sub_77C00(v5, 0, 0);
  [v4 setObject:v6 forKeyedSubscript:@"instance"];

  id v7 = [v3 options];
  id v8 = sub_77C00(v7, 0, 0);
  [v4 setObject:v8 forKeyedSubscript:@"options"];

  unint64_t v9 = [v3 resource];
  id v10 = [v9 imageContentWithOptions:2];

  if (([v10 flags] & 1) == 0)
  {
    [v10 intrinsicSize];
    double v12 = v11;
    v58[0] = @"width";
    long long v13 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v58[1] = @"height";
    v59[0] = v13;
    id v14 = +[NSNumber numberWithDouble:v12];
    v59[1] = v14;
    id v15 = +[NSDictionary dictionaryWithObjects:v59 forKeys:v58 count:2];
    [v4 setObject:v15 forKeyedSubscript:@"intrinsicSize"];
  }
  id v16 = [v3 resource];
  id v17 = [v16 imageContentWithOptions:2];

  id v18 = [v17 image];

  if (v18)
  {
    double v19 = [v17 image];
    id v20 = (UIImage *)[v19 newImage];

    uint64_t v54 = v17;
    [v17 insets];
    double v25 = v24;
    double v26 = v22;
    double v27 = v23;
    if (v24 != UIEdgeInsetsZero.left
      || v21 != UIEdgeInsetsZero.top
      || v23 != UIEdgeInsetsZero.right
      || v22 != UIEdgeInsetsZero.bottom)
    {
      v56[0] = @"top";
      id v28 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      v57[0] = v28;
      v56[1] = @"left";
      id v29 = +[NSNumber numberWithDouble:v25];
      v57[1] = v29;
      v56[2] = @"right";
      uint64_t v30 = +[NSNumber numberWithDouble:v27];
      v57[2] = v30;
      v56[3] = @"bottom";
      +[NSNumber numberWithDouble:v26];
      v32 = uint64_t v31 = a1;
      v57[3] = v32;
      uint64_t v33 = +[NSDictionary dictionaryWithObjects:v57 forKeys:v56 count:4];
      [v4 setObject:v33 forKeyedSubscript:@"insets"];

      a1 = v31;
    }
    uint64_t v53 = v20;
    id v52 = UIImagePNGRepresentation(v20);
    uint64_t v34 = objc_opt_class();
    uint64_t v35 = [v3 instance];
    uint64_t v36 = TUIDynamicCast(v34, v35);

    CFStringRef v37 = @"image";
    if (v36) {
      CFStringRef v37 = (const __CFString *)v36;
    }
    unint64_t v51 = (__CFString *)v37;
    uint64_t v55 = a1;
    double v38 = *(void **)(a1 + 32);
    double v39 = [v3 instance];
    uint64_t v40 = +[NSString stringWithFormat:@"%@.png", v39];
    unint64_t v41 = [v38 URLByAppendingPathComponent:v40];

    double v42 = +[NSFileManager defaultManager];
    double v43 = [v41 path];
    LODWORD(v40) = [v42 fileExistsAtPath:v43];

    if (v40)
    {
      uint64_t v44 = 1;
      do
      {
        uint64_t v45 = [v3 instance];
        double v46 = +[NSString stringWithFormat:@"%@-%lu.png", v45, v44];
        double v47 = [v41 URLByAppendingPathComponent:v46];

        id v48 = +[NSFileManager defaultManager];
        unint64_t v49 = [v47 path];
        LOBYTE(v45) = [v48 fileExistsAtPath:v49];

        ++v44;
        unint64_t v41 = v47;
      }
      while ((v45 & 1) != 0);
    }
    else
    {
      double v47 = v41;
    }
    [v52 writeToURL:v47 atomically:0];
    a1 = v55;
    unint64_t v50 = sub_76784(v47, *(void **)(v55 + 32));
    [v4 setObject:v50 forKeyedSubscript:@"url"];

    id v17 = v54;
  }

  [*(id *)(a1 + 40) addObject:v4];
}

void sub_78D34(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v7 = *(void **)(a1 + 40);
  id v6 = *(void **)(a1 + 48);
  if (v6)
  {
    id v8 = [v6 stringByAppendingFormat:@".%@", v10];
  }
  else
  {
    id v8 = v10;
  }
  unint64_t v9 = sub_77C00(v5, v7, v8);
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:v10];

  if (v6) {
}
  }

uint64_t sub_78DFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_78E0C(uint64_t a1)
{
}

void sub_78E14(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_78E68(a2, *(void **)(a1 + 32), *(void **)(a1 + 40));
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_78E68(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_78FE0;
  void v14[3] = &unk_2536A0;
  id v15 = v5;
  id v16 = v6;
  id v8 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v7, "count"));
  id v17 = v8;
  id v9 = v6;
  id v10 = v5;
  [v7 enumerateObjectsUsingBlock:v14];

  double v11 = v17;
  id v12 = v8;

  return v12;
}

void sub_78F8C(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_77C00(a2, a1[4], a1[5]);
  uint64_t v4 = *(void *)(a1[6] + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_78FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_77C00(a2, *(void *)(a1 + 32), *(void *)(a1 + 40));
  if (v3)
  {
    uint64_t v4 = v3;
    [*(id *)(a1 + 48) addObject:v3];
    uint64_t v3 = v4;
  }
}

void sub_79534(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_79550(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    id v6 = *(void **)(a1 + 32);
    v9[0] = WeakRetained;
    v9[1] = v3;
    id v7 = +[NSArray arrayWithObjects:v9 count:2];
    id v8 = [v6 callWithArguments:v7];
  }
}

id TUIBundle()
{
  if (qword_2DF460 != -1) {
    dispatch_once(&qword_2DF460, &stru_2536E8);
  }
  uint64_t v0 = (void *)qword_2DF458;

  return v0;
}

void sub_79788(id a1)
{
  uint64_t v1 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v2 = (void *)qword_2DF458;
  qword_2DF458 = v1;
}

void sub_79BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_79C14(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    [*(id *)(a1 + 32) addObject:@", "];
  }
  [*(id *)(a1 + 32) addObject:v8];
  [*(id *)(a1 + 32) addObject:@" = "];
  id v6 = *(void **)(a1 + 32);
  id v7 = [v5 description];
  [v6 addObject:v7];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
}

void sub_7A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7A7EC(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    [*(id *)(a1 + 32) addObject:@", "];
  }
  [*(id *)(a1 + 32) addObject:v8];
  [*(id *)(a1 + 32) addObject:@" = "];
  id v6 = *(void **)(a1 + 32);
  id v7 = [v5 description];
  [v6 addObject:v7];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
}

void sub_7B1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_7B1F4(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0x8E38E38E38E38E39 * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x38E38E38E38E38FLL) {
      sub_4484();
    }
    uint64_t v5 = a1[1] - *a1;
    void v7[4] = result;
    v7[0] = sub_7BF34(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    void v7[3] = v7[0] + 72 * v6;
    sub_7BEBC(a1, v7);
    return sub_7C13C((uint64_t)v7);
  }
  return result;
}

void sub_7B2A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7C13C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_7BB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  sub_7C13C((uint64_t)&STACK[0x230]);

  _Unwind_Resume(a1);
}

uint64_t sub_7BC5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if ((uint64_t *)a2 != a3)
  {
    sub_7C224((uint64_t)&v7, a3, *(uint64_t **)(a1 + 8), a2);
    sub_7C1D0(a1, v5);
  }
  return a2;
}

void sub_7BD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_7BEBC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_7BF80((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_7BF34(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL) {
    sub_3EA4();
  }
  return operator new(72 * a2);
}

uint64_t sub_7BF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v18 = a6;
  *((void *)&v18 + 1) = a7;
  long long v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  if (a3 == a5)
  {
    uint64_t v13 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 72);
      a3 -= 72;
      *(void *)a3 = 0;
      *(void *)(a3 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
      *(_OWORD *)(v8 - 72) = v9;
      v8 -= 72;
      long long v10 = *(_OWORD *)(a3 + 16);
      long long v11 = *(_OWORD *)(a3 + 32);
      long long v12 = *(_OWORD *)(a3 + 48);
      *(void *)(v8 + 64) = *(void *)(a3 + 64);
      *(_OWORD *)(v8 + 32) = v11;
      *(_OWORD *)(v8 + sub_3BD4((uint64_t)this + 48) = v12;
      *(_OWORD *)(v8 + 16) = v10;
      v7 -= 72;
    }
    while (a3 != a5);
    *((void *)&v18 + 1) = v8;
    uint64_t v13 = v18;
  }
  char v16 = 1;
  sub_7C028((uint64_t)v15);
  return v13;
}

uint64_t sub_7C028(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_7C060((uint64_t *)a1);
  }
  return a1;
}

void sub_7C060(uint64_t *a1)
{
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  sub_7C0D8(v4, (uint64_t)v13, (uint64_t)v8);
}

void sub_7C0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(void *)(a2 + 32) = i)
  {

    uint64_t i = (id *)(*(void *)(a2 + 32) + 72);
  }
}

uint64_t sub_7C13C(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_7C174(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 72;
  }
}

void sub_7C1D0(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 72)
  {

    uint64_t v5 = *(void **)(i - 72);
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = a2;
}

uint64_t *sub_7C224(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v7 = *v5;
    uint64_t *v5 = 0;
    uint64_t v8 = *(void **)a4;
    *(void *)a4 = v7;

    uint64_t v9 = v5[1];
    v5[1] = 0;
    uint64_t v10 = *(void **)(a4 + 8);
    *(void *)(a4 + _Block_object_dispose(&STACK[0x2D0], 8) = v9;

    long long v11 = *((_OWORD *)v5 + 1);
    long long v12 = *((_OWORD *)v5 + 2);
    long long v13 = *((_OWORD *)v5 + 3);
    *(void *)(a4 + 64) = v5[8];
    *(_OWORD *)(a4 + 32) = v12;
    *(_OWORD *)(a4 + sub_3BD4((uint64_t)this + 48) = v13;
    *(_OWORD *)(a4 + 16) = v11;
    a4 += 72;
    v5 += 9;
  }
  while (v5 != v6);
  return v6;
}

void sub_7C2BC(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_7C1D0((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_7C918(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if (a3) {
    [*(id *)(a1 + 32) appendString:@", "];
  }
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = [v7 description];
  [v5 appendString:v6];
}

void sub_7CFD8(id a1)
{
  CFStringRef v4 = @"n";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF468;
  qword_2DF468 = v2;
}

void sub_7D080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_7D150(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_7D1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_7D2A0(id a1)
{
  CFStringRef v4 = @"n";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF478;
  qword_2DF478 = v2;
}

void sub_7D348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_7D418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_7D4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_7D558(id a1)
{
  v4[0] = @"n";
  v4[1] = @"v";
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:2];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF488;
  qword_2DF488 = v2;
}

void sub_7D60C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_7D6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_7D984(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 24);
  id v4 = a2;
  id v7 = [v3 objectForKey:v4];
  uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v4];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained scrollToItemsMatchingQuery:v4 atScrollPosition:1 animated:[v7 BOOLValue] skipVoiceOverFocus:[v5 BOOLValue]];
}

void sub_7DC58(id a1)
{
  uint64_t v1 = objc_alloc_init(TUIStarRatingImageCache);
  uint64_t v2 = (void *)qword_2DF498;
  qword_2DF498 = (uint64_t)v1;
}

double *sub_7E0AC(double *result)
{
  if (*((void *)result + 5))
  {
    uint64_t v1 = result;
    unint64_t v2 = 0;
    do
      uint64_t result = (double *)[*((id *)v1 + 4) drawAtPoint:floor((v1[10] + v1[12]) * (double)v2++) - v1[7] -v1[6]];
    while (v2 < *((void *)v1 + 5));
  }
  return result;
}

void sub_7E7AC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v50 = a2;
  [*(id *)(a1 + 32) containingWidth];
  [v50 setContainingWidth:];
  [*(id *)(a1 + 32) containingHeight];
  [v50 setContainingHeight:];
  [*(id *)(a1 + 32) flexedWidth];
  [v50 setFlexedWidth:];
  [*(id *)(a1 + 32) flexedHeight];
  [v50 setFlexedHeight:];
  uint64_t v6 = [v50 box];
  [v6 minScale];
  double v8 = v7;

  uint64_t v9 = [v50 box];
  [v9 maxScale];
  double v11 = v10;

  double v12 = fmax(v8, 0.01);
  double v13 = fmax(v12, fmin(v11, 1.0));
  unint64_t v14 = (unint64_t)(v13 * 100.0);
  unint64_t v15 = (unint64_t)(v12 * 100.0);
  unint64_t v16 = (unint64_t)(v13 * 100.0 + 1.0);
  uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    [v50 setScale:(double)v14 / 100.0];
    [v50 validateLayout];
    [v50 computedBoundsWithFlags:3];
    CGFloat x = v52.origin.x;
    CGFloat y = v52.origin.y;
    CGFloat width = v52.size.width;
    CGFloat height = v52.size.height;
    double MinX = CGRectGetMinX(v52);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(MinX, 0.0)) {
      goto LABEL_13;
    }
    v53.origin.CGFloat x = x;
    v53.origin.CGFloat y = y;
    v53.size.CGFloat width = width;
    v53.size.CGFloat height = height;
    double MinY = CGRectGetMinY(v53);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(MinY, 0.0)) {
      goto LABEL_13;
    }
    [*(id *)(a1 + 32) containingWidth];
    v54.origin.CGFloat x = x;
    v54.origin.CGFloat y = y;
    v54.size.CGFloat width = width;
    v54.size.CGFloat height = height;
    double MaxX = CGRectGetMaxX(v54);
    [*(id *)(a1 + 32) containingWidth];
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(MaxX, v25)) {
      goto LABEL_13;
    }
    [*(id *)(a1 + 32) containingHeight];
    v55.origin.CGFloat x = x;
    v55.origin.CGFloat y = y;
    v55.size.CGFloat width = width;
    v55.size.CGFloat height = height;
    double MaxY = CGRectGetMaxY(v55);
    [*(id *)(a1 + 32) containingHeight];
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(MaxY, v27)) {
      goto LABEL_13;
    }
    [*(id *)(a1 + 32) flexedWidth];
    v56.origin.CGFloat x = x;
    v56.origin.CGFloat y = y;
    v56.size.CGFloat width = width;
    v56.size.CGFloat height = height;
    double v28 = CGRectGetMaxX(v56);
    [*(id *)(a1 + 32) flexedWidth];
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v28, v29)) {
      goto LABEL_13;
    }
    [*(id *)(a1 + 32) flexedHeight];
    v57.origin.CGFloat x = x;
    v57.origin.CGFloat y = y;
    v57.size.CGFloat width = width;
    v57.size.CGFloat height = height;
    double v30 = CGRectGetMaxY(v57);
    [*(id *)(a1 + 32) flexedHeight];
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v30, v31)) {
      goto LABEL_13;
    }
    id v32 = [*(id *)(a1 + 32) specifiedWidth];
    float v34 = v33;
    float v35 = *((float *)&v32 + 1);
    id v36 = [*(id *)(a1 + 32) specifiedHeight];
    float v38 = v37;
    v58.origin.CGFloat x = x;
    v58.origin.CGFloat y = y;
    v58.size.CGFloat width = width;
    v58.size.CGFloat height = height;
    double v39 = CGRectGetMaxX(v58);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(v39, v35)) {
      goto LABEL_13;
    }
    v59.origin.CGFloat x = x;
    v59.origin.CGFloat y = y;
    v59.size.CGFloat width = width;
    v59.size.CGFloat height = height;
    double v40 = CGRectGetMaxX(v59);
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v40, v34)) {
      goto LABEL_13;
    }
    v60.origin.CGFloat x = x;
    v60.origin.CGFloat y = y;
    v60.size.CGFloat width = width;
    v60.size.CGFloat height = height;
    double v41 = CGRectGetMaxY(v60);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(v41, *((float *)&v36 + 1))) {
      goto LABEL_13;
    }
    v61.origin.CGFloat x = x;
    v61.origin.CGFloat y = y;
    v61.size.CGFloat width = width;
    v61.size.CGFloat height = height;
    double v42 = CGRectGetMaxY(v61);
    if (TUICGFloatIsLessThanOrAlmostEqualFloat(v42, v38))
    {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 112), a2);
      *(void *)(*(void *)(a1 + 32) + 104) = a3;
      unint64_t v43 = v14 + v16 + 1;
      int v44 = 1;
      unint64_t v15 = v14;
      uint64_t v17 = v14;
    }
    else
    {
LABEL_13:
      int v44 = 0;
      unint64_t v43 = v15 + v14;
      unint64_t v16 = v14;
    }
    unint64_t v14 = v43 >> 1;
  }
  while (v43 >> 1 < v16 && v15 < v16);
  if (v17 == 0x7FFFFFFFFFFFFFFFLL) {
    int v45 = v44;
  }
  else {
    int v45 = 1;
  }
  if (v45) {
    unint64_t v46 = v17;
  }
  else {
    unint64_t v46 = (unint64_t)(v12 * 100.0);
  }
  if (v46 != 0x7FFFFFFFFFFFFFFFLL && v46 != v14)
  {
    [v50 setScale:(double)v46 / 100.0];
    [v50 validateLayout];
  }
  if (v45) {
    *a4 = 1;
  }
}

void sub_7F040(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  uint64_t v3 = (void *)qword_2DF4A8;
  qword_2DF4A8 = v2;
}

void sub_7F6EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_7F730(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  double v8 = (id *)(a1 + 80);
  id v54 = a5;
  id v53 = a4;
  id v52 = a3;
  id WeakRetained = objc_loadWeakRetained(v8);
  double v10 = [WeakRetained menuContainer];
  double v11 = [v10 menuModel];
  id v12 = objc_loadWeakRetained(v8);
  id v13 = [v12 menuIsPrimary];
  uint64_t v14 = *(void *)(a1 + 32);
  id v15 = objc_loadWeakRetained((id *)(a1 + 88));
  CGRect v55 = [v11 menuWithIsPrimary:v13 actionObject:v14 actionDelegate:v15];

  uint64_t v47 = *(void *)(a1 + 40);
  uint64_t v46 = *(void *)(a1 + 48);
  id v51 = objc_loadWeakRetained(v8);
  int v44 = [v51 linkEntities];
  id v50 = objc_loadWeakRetained(v8);
  unsigned __int8 v42 = [v50 enabled];
  id v49 = objc_loadWeakRetained(v8);
  [v49 pressedScale];
  double v17 = v16;
  id v48 = objc_loadWeakRetained(v8);
  [v48 touchInsets];
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  id v45 = objc_loadWeakRetained(v8);
  uint64_t v26 = [v45 identifier];
  uint64_t v39 = *(void *)(a1 + 56);
  double v40 = (void *)v26;
  id v43 = objc_loadWeakRetained(v8);
  double v27 = [v43 pointer];
  id v41 = objc_loadWeakRetained(v8);
  double v28 = [v41 focusStyle];
  id v29 = objc_loadWeakRetained(v8);
  LOBYTE(WeakRetained) = [v29 menuIsPrimary];
  uint64_t v30 = *(void *)(a1 + 64);
  uint64_t v31 = *(void *)(a1 + 72);
  id v32 = objc_loadWeakRetained(v8);
  LOBYTE(v10) = [v32 enableBackgroundForHighlightPreview];
  id v33 = objc_loadWeakRetained(v8);
  BYTE1(v3_Block_object_dispose(&STACK[0x2D0], 8) = [v33 enableShadowForHighlightPreview];
  LOBYTE(v3_Block_object_dispose(&STACK[0x2D0], 8) = (_BYTE)v10;
  LOBYTE(v37) = (_BYTE)WeakRetained;
  LOBYTE(v36) = v42;
  +[TUIControlView renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:](TUIControlView, "renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:", 0, v52, v53, v47, v46, v44, v17, v19, v21, v23, v25, 0, 0, 0, v36,
    v40,
    v39,
    v27,
    v28,
    v55,
    v37,
    v30,
    v31,
  float v34 = v38);

  [v34 setAnimationGroups:v54];

  return v34;
}

CFStringRef NSStringFromTUITriggerState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_253FC0[a1 - 1];
  }
}

id sub_80BA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeAssertion:*(void *)(a1 + 40)];
}

void sub_81260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_81284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateVisible:a3];
}

void sub_81F84(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 appendObjectsWithProtocol:*(void *)(a1 + 32) toArray:*(void *)(a1 + 40)];
  }
}

void sub_820F4(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_82100(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

id sub_821B4(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

id sub_822FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  id v3 = [WeakRetained invalidateInstantiation:*(void *)(a1 + 32)];

  return v3;
}

void sub_82474(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(v4 + 80) & 0xFFFFFFFFFFFFFFFDLL;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_82534;
  void v9[3] = &unk_254038;
  id v9[4] = v4;
  id v6 = *(id *)(a1 + 40);
  double v8 = *(void **)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  id v10 = v6;
  uint64_t v12 = v7;
  unint64_t v13 = v5;
  id v11 = v8;
  [a2 enumerateObjectsUsingBlock:v9];
}

void sub_82534(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v16 = (id)objc_opt_new();
  BOOL v6 = TUIEnumeratorNotNil(*(_DWORD *)(*(void *)(a1 + 32) + 16));
  id v7 = objc_alloc_init(*(Class *)(*(void *)(a1 + 32) + 64));
  uint64_t v9 = *(void *)(a1 + 32);
  double v8 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned int v11 = [*(id *)(v9 + 72) uniqueID];
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 20);
  if (v6) {
    id v14 = [v8 evaluateEnumerator:*(unsigned int *)(v9 + 16) withObject:v5 atIndex:a3 count:v10 uniqueID:v11 nodes:v13 flags:v12 containingObject:v16 builder:v7];
  }
  else {
    id v14 = [v8 evaluateBinding:*(unsigned int *)(v9 + 28) withObject:v5 atIndex:a3 count:v10 uniqueID:v11 nodes:v13 flags:v12 containingObject:v16 builder:v7];
  }
  id v15 = v14;

  [v7 finalizeModelsWithParent:v16 context:*(void *)(a1 + 40)];
  [v16 setInstantiateResult:v15];
  [*(id *)(a1 + 48) addObject:v16];
}

void sub_82810(uint64_t a1)
{
  id v103 = [*(id *)(*(void *)(a1 + 32) + 8) mutableCopy];
  if (!v103) {
    id v103 = objc_alloc_init((Class)NSMutableArray);
  }
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 64))
  {
    if ((*(unsigned char *)(v3 + 104) & 4) != 0)
    {
      id v4 = [*(id *)(v3 + 72) fetchWindow];
      uint64_t v3 = *(void *)(a1 + 32);
      if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
      {
        id v5 = [*(id *)(v3 + 72) fetchWindow];
        uint64_t v3 = *(void *)(a1 + 32);
        if ((unint64_t)v5 < *(void *)(v3 + 96))
        {
          id v6 = [*(id *)(v3 + 72) fetchDelta];
          if (v6) {
            BOOL v7 = v6 == (id)0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            BOOL v7 = 1;
          }
          if (v7) {
            unint64_t v8 = 1;
          }
          else {
            unint64_t v8 = (unint64_t)v6;
          }
          uint64_t v9 = (uint64_t *)(a1 + 32);
          if (v8 >= *(void *)(*(void *)(a1 + 32) + 96)) {
            unint64_t v10 = *(void *)(*(void *)(a1 + 32) + 96);
          }
          else {
            unint64_t v10 = v8;
          }
          [v103 removeObjectsInRange:0, v10];
          *(void *)(*v9 + 96) -= v10;
          *(void *)(*v9 + 88) += v10;
          unsigned int v11 = [*(id *)(a1 + 40) statsCollector];
          [v11 recordEvent:21];

          uint64_t v3 = *v9;
        }
      }
    }
  }
  *(unsigned char *)(v3 + 104) &= ~4u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 64))
  {
    if ((*(unsigned char *)(v12 + 104) & 8) != 0)
    {
      id v13 = [*(id *)(v12 + 72) fetchWindow];
      uint64_t v12 = *(void *)(a1 + 32);
      if (v13 != (id)0x7FFFFFFFFFFFFFFFLL)
      {
        id v14 = [*(id *)(v12 + 72) fetchWindow];
        uint64_t v12 = *(void *)(a1 + 32);
        if ((unint64_t)v14 < *(void *)(v12 + 96))
        {
          id v15 = [*(id *)(v12 + 72) fetchDelta];
          if (v15 == (id)0x7FFFFFFFFFFFFFFFLL) {
            unint64_t v16 = 1;
          }
          else {
            unint64_t v16 = (unint64_t)v15;
          }
          double v17 = (uint64_t *)(a1 + 32);
          unint64_t v18 = *(void *)(*(void *)(a1 + 32) + 96);
          if (v16 >= v18) {
            unint64_t v19 = *(void *)(*(void *)(a1 + 32) + 96);
          }
          else {
            unint64_t v19 = v16;
          }
          [v103 removeObjectsInRange:v18 - v19, v19];
          *(void *)(*v17 + 96) -= v19;
          double v20 = [*(id *)(a1 + 40) statsCollector];
          [v20 recordEvent:23];

          uint64_t v12 = *v17;
        }
      }
    }
  }
  *(unsigned char *)(v12 + 104) &= ~8u;
  uint64_t v21 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 64) && (*(unsigned char *)(v21 + 104) & 1) != 0)
  {
    id v22 = [*(id *)(v21 + 72) fetchDelta];
    unint64_t v23 = (unint64_t)((unint64_t)v22 <= 1 ? &def_141F14 + 1 : v22);
    uint64_t v21 = *(void *)(a1 + 32);
    unint64_t v24 = *(void *)(v21 + 88);
    if (v24)
    {
      if (v23 != 0x7FFFFFFFFFFFFFFFLL)
      {
        if (v24 >= v23) {
          uint64_t v25 = v24 - v23;
        }
        else {
          uint64_t v25 = 0;
        }
        if (v24 >= v23) {
          unint64_t v26 = v23;
        }
        else {
          unint64_t v26 = *(void *)(v21 + 88);
        }
        if (v26)
        {
          double v27 = *(void **)(v21 + 32);
          v137[0] = _NSConcreteStackBlock;
          v137[1] = 3221225472;
          v137[2] = sub_83454;
          v137[3] = &unk_254088;
          v137[4] = v21;
          id v138 = *(id *)(a1 + 40);
          uint64_t v140 = v25;
          unint64_t v141 = v26;
          id v139 = v103;
          [v27 objectsInRange:v25 block:v26 v137];
          *(void *)(*(void *)(a1 + 32) + 8_Block_object_dispose(&STACK[0x2D0], 8) = v25;
          *(void *)(*(void *)(a1 + 32) + 96) += v26;
        }
        double v28 = [*(id *)(a1 + 40) statsCollector];
        [v28 recordEvent:20];

        uint64_t v21 = *(void *)(a1 + 32);
      }
    }
  }
  *(unsigned char *)(v21 + 104) &= ~1u;
  uint64_t v29 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 64) && (*(unsigned char *)(v29 + 104) & 2) != 0)
  {
    id v30 = [*(id *)(v29 + 72) fetchDelta];
    unint64_t v31 = (unint64_t)((unint64_t)v30 <= 1 ? &def_141F14 + 1 : v30);
    uint64_t v32 = *(void *)(a1 + 32);
    uint64_t v33 = *(void *)(v32 + 88);
    uint64_t v34 = *(void *)(v32 + 96);
    id v35 = [*(id *)(v32 + 32) count];
    uint64_t v29 = *(void *)(a1 + 32);
    if (v34 + v33 < (unint64_t)v35 && v31 != 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v36 = *(void *)(v29 + 88);
      uint64_t v37 = *(void *)(v29 + 96);
      uint64_t v38 = (char *)[*(id *)(v29 + 32) count];
      uint64_t v29 = *(void *)(a1 + 32);
      if (v31 >= (unint64_t)&v38[-*(void *)(v29 + 88) - *(void *)(v29 + 96)]) {
        unint64_t v31 = (unint64_t)&v38[-*(void *)(v29 + 88) - *(void *)(v29 + 96)];
      }
      if (v31)
      {
        uint64_t v39 = v37 + v36;
        double v40 = *(void **)(v29 + 32);
        v132[0] = _NSConcreteStackBlock;
        v132[1] = 3221225472;
        v132[2] = sub_83610;
        v132[3] = &unk_254088;
        v132[4] = v29;
        id v133 = *(id *)(a1 + 40);
        uint64_t v135 = v39;
        unint64_t v136 = v31;
        id v134 = v103;
        [v40 objectsInRange:v39 block:v31, v132];
        *(void *)(*(void *)(a1 + 32) + 96) += v31;
        id v41 = [*(id *)(a1 + 40) statsCollector];
        [v41 recordEvent:22];

        uint64_t v29 = *(void *)(a1 + 32);
      }
    }
  }
  *(unsigned char *)(v29 + 104) &= ~2u;
  if (*(unsigned char *)(a1 + 64)
    && [*(id *)(*(void *)(a1 + 32) + 72) fetchWindow] != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v43 = *(void *)(a1 + 32);
    unint64_t v44 = *(void *)(v43 + 96);
    BOOL v42 = v44 < (unint64_t)[*(id *)(v43 + 72) fetchWindow];
  }
  else
  {
    BOOL v42 = 1;
  }
  BOOL v102 = v42;
  unint64_t v101 = v113;
  unint64_t v100 = v106;
  *(void *)&long long v2 = 134218498;
  long long v99 = v2;
  while (1)
  {
    uint64_t v45 = *(void *)(a1 + 32);
    unint64_t v47 = *(void *)(v45 + 88);
    uint64_t v46 = *(char **)(v45 + 96);
    id v48 = [(char *)[v45 + 32 count:v99, v100, v101]];
    id v49 = -[TUIIndexMapper initWithCount:]([TUIIndexMapper alloc], "initWithCount:", [*(id *)(*(void *)(a1 + 32) + 32) count]);
    uint64_t v50 = *(void *)(a1 + 32);
    id v51 = *(void **)(v50 + 32);
    uint64_t v52 = *(void *)(a1 + 48);
    v126[0] = _NSConcreteStackBlock;
    v126[1] = 3221225472;
    v126[2] = sub_837C8;
    v126[3] = &unk_2540B0;
    v126[4] = v50;
    BOOL v131 = v102;
    id v53 = v103;
    id v127 = v53;
    id v128 = *(id *)(a1 + 40);
    id v54 = v49;
    uint64_t v129 = v54;
    id v130 = *(id *)(a1 + 56);
    unsigned int v104 = [v51 applyUpdatesForTransactionGroup:v52 withBlock:v126];
    if (!v104) {
      break;
    }
    CGRect v55 = [(TUIIndexMapper *)v54 fetchIndexes];
    CGRect v56 = (char *)[*(id *)(*(void *)(a1 + 32) + 32) count];
    uint64_t v120 = 0;
    long long v121 = &v120;
    uint64_t v122 = 0x3032000000;
    uint64_t v123 = sub_83BB0;
    long long v124 = sub_83BC0;
    id v125 = 0;
    CGRect v57 = *(void **)(a1 + 32);
    CGRect v58 = (void *)v57[9];
    if (v58)
    {
      id v59 = [v58 fetchWindow];
      CGRect v57 = *(void **)(a1 + 32);
      if ((v59 != (id)0x7FFFFFFFFFFFFFFFLL || v56 < v48) && (v47 != v57[11] || v46 != (char *)v57[12]))
      {
        CGRect v60 = (char *)(v56 - v46);
        if (v47 < &v46[v47] - v56) {
          CGRect v60 = 0;
        }
        if (&v46[v47] <= v56) {
          CGRect v61 = (char *)v47;
        }
        else {
          CGRect v61 = v60;
        }
        if (&v46[(void)v61] <= v56) {
          int8x16_t v62 = v46;
        }
        else {
          int8x16_t v62 = v56;
        }
        if (&v46[(void)v61] <= v56) {
          unint64_t v63 = v61;
        }
        else {
          unint64_t v63 = 0;
        }
        id v64 = [v55 mutableCopy];
        id v65 = (void *)v121[5];
        v121[5] = (uint64_t)v64;

        while (1)
        {
          uint64_t v66 = *(void *)(a1 + 32);
          unint64_t v67 = *(void *)(v66 + 88);
          if ((unint64_t)v63 >= v67 || *(void *)(v66 + 96) + v67 >= (unint64_t)v56) {
            break;
          }
          long long v68 = +[NSNull null];
          [v53 insertObject:v68 atIndex:0];

          --*(void *)(*(void *)(a1 + 32) + 88);
          ++*(void *)(*(void *)(a1 + 32) + 96);
          [(id)v121[5] addIndex:*(void *)(*(void *)(a1 + 32) + 88)];
        }
        while (v67 < (unint64_t)v63 && *(void *)(v66 + 96))
        {
          [v53 removeObjectAtIndex:0];
          ++*(void *)(*(void *)(a1 + 32) + 88);
          --*(void *)(*(void *)(a1 + 32) + 96);
          uint64_t v66 = *(void *)(a1 + 32);
          unint64_t v67 = *(void *)(v66 + 88);
        }
        while (1)
        {
          unint64_t v70 = *(void *)(v66 + 96);
          if (v70 >= (unint64_t)v62 || *(void *)(v66 + 88) + v70 >= (unint64_t)v56) {
            break;
          }
          long long v69 = +[NSNull null];
          [v53 addObject:v69];

          [(id)v121[5] addIndex:*(void *)(*(void *)(a1 + 32) + 96) + *(void *)(*(void *)(a1 + 32) + 88)];
          ++*(void *)(*(void *)(a1 + 32) + 96);
          uint64_t v66 = *(void *)(a1 + 32);
        }
        long long v71 = (char *)[*(id *)(v66 + 72) fetchWindow];
        if (v71 != (char *)0x7FFFFFFFFFFFFFFFLL)
        {
          id v72 = [*(id *)(*(void *)(a1 + 32) + 72) fetchDelta];
          if ((unint64_t)v72 <= 1) {
            uint64_t v73 = 1;
          }
          else {
            uint64_t v73 = (uint64_t)v72;
          }
          long long v74 = &v71[2 * v73];
          if (v71 <= v62) {
            id v75 = v62;
          }
          else {
            id v75 = v71;
          }
          if (v74 >= v75) {
            int8x16_t v62 = v75;
          }
          else {
            int8x16_t v62 = v74;
          }
        }
        CGRect v57 = *(void **)(a1 + 32);
        if (v62 >= &v56[-v57[11]]) {
          id v76 = &v56[-v57[11]];
        }
        else {
          id v76 = v62;
        }
        for (; v57[12] > (unint64_t)v76; CGRect v57 = *(void **)(a1 + 32))
        {
          [v53 removeLastObject];
          --*(void *)(*(void *)(a1 + 32) + 96);
        }
      }
    }
    uint64_t v77 = v57[11];
    id v78 = (char *)v57[12];
    if (v78)
    {
      if (v77) {
        BOOL v79 = 0;
      }
      else {
        BOOL v79 = v78 == v56;
      }
      if (!v79) {
        goto LABEL_114;
      }
    }
    else
    {
      if (v77) {
        BOOL v80 = v77 == 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        BOOL v80 = 1;
      }
      if (!v80)
      {
LABEL_114:
        if (v121[5])
        {
          if (v77) {
            goto LABEL_116;
          }
LABEL_118:
          uint64_t v81 = 0;
        }
        else
        {
          id v82 = [v55 mutableCopy];
          uint64_t v83 = (void *)v121[5];
          v121[5] = (uint64_t)v82;

          CGRect v57 = *(void **)(a1 + 32);
          if (!v57[11]) {
            goto LABEL_118;
          }
LABEL_116:
          [(id)v121[5] removeIndexesInRange:0];
          CGRect v57 = *(void **)(a1 + 32);
          uint64_t v81 = v57[11];
        }
        if ((unint64_t)v56 > v57[12] + v81) {
          [v121[5] removeIndexesInRange:];
        }
      }
    }
    uint64_t v84 = objc_opt_class();
    v112[0] = _NSConcreteStackBlock;
    v112[1] = 3221225472;
    v113[0] = sub_83BC8;
    v113[1] = &unk_2540D8;
    uint64_t v85 = *(void *)(a1 + 32);
    uint64_t v117 = v84;
    v113[2] = v85;
    uint64_t v86 = v54;
    int v118 = v56;
    id v119 = v48;
    unint64_t v114 = v86;
    unint64_t v116 = &v120;
    id v87 = v55;
    id v115 = v87;
    [v53 enumerateObjectsUsingBlock:v112];
    int v88 = (void *)v121[5];
    if (v88)
    {
      id v89 = [v88 copy];

      id v87 = v89;
    }
    id v90 = *(id *)(*(void *)(a1 + 32) + 96);
    if (v90 != [v53 count])
    {
      unint64_t v91 = TUIInstantiationLog();
      if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR))
      {
        id v96 = [*(id *)(a1 + 40) feedId];
        NSStringFromRange(*(NSRange *)(*(void *)(a1 + 32) + 88));
        id v97 = (id)objc_claimAutoreleasedReturnValue();
        id v98 = [v53 count];
        *(_DWORD *)buf = v99;
        id v143 = v96;
        __int16 v144 = 2114;
        id v145 = v97;
        __int16 v146 = 2048;
        id v147 = v98;
        _os_log_error_impl(&def_141F14, v91, OS_LOG_TYPE_ERROR, "[fid:%lu] instantiateWindow %{public}@ has different length than children %lu", buf, 0x20u);
      }
      if (_TUIDeviceHasInternalInstall()) {
        objc_exception_throw([objc_alloc((Class)NSException) initWithName:@"InstatiateWindowAndChildrenMismatch" reason:@"The instantiateWindow and children has mismatching length" userInfo:0]);
      }
    }
    unint64_t v92 = *(void **)(*(void *)(a1 + 32) + 32);
    v105[0] = _NSConcreteStackBlock;
    v105[1] = 3221225472;
    v106[0] = sub_83D1C;
    v106[1] = &unk_254128;
    id v93 = v87;
    id v107 = v93;
    id v94 = *(id *)(a1 + 40);
    uint64_t v95 = *(void *)(a1 + 32);
    id v108 = v94;
    uint64_t v109 = v95;
    long long v111 = v56;
    id v110 = v53;
    [v92 objectsAtIndexes:v93 block:v105];

    _Block_object_dispose(&v120, 8);
    if ((v104 & 1) == 0) {
      goto LABEL_130;
    }
  }

LABEL_130:
  [*(id *)(a1 + 32) updateModelChildren:v53];
  [*(id *)(a1 + 56) layoutUpdateWindowRange:*(void *)(*(void *)(a1 + 32) + 88) *(void *)(*(void *)(a1 + 32) + 96)];
}

void sub_83404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_83454(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_83504;
  double v5[3] = &unk_254038;
  id v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  long long v8 = *(_OWORD *)(a1 + 56);
  id v7 = *(id *)(a1 + 48);
  [a2 enumerateObjectsUsingBlock:v5];
}

void sub_83504(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v8 = (id)objc_opt_new();
  id v6 = objc_alloc_init(*(Class *)(*(void *)(a1 + 32) + 64));
  id v7 = objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(void *)(a1 + 32) + 16), v5, *(void *)(a1 + 56) + a3, *(void *)(a1 + 64) + *(void *)(*(void *)(a1 + 32) + 96), objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "uniqueID"), *(void *)(*(void *)(a1 + 32) + 20), *(void *)(*(void *)(a1 + 32) + 80), v8, v6);

  [v6 finalizeModelsWithParent:v8 context:*(void *)(a1 + 40)];
  [v8 setInstantiateResult:v7];
  [*(id *)(a1 + 48) insertObject:v8 atIndex:a3];
}

void sub_83610(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_836C0;
  double v5[3] = &unk_254038;
  id v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  long long v8 = *(_OWORD *)(a1 + 56);
  id v7 = *(id *)(a1 + 48);
  [a2 enumerateObjectsUsingBlock:v5];
}

void sub_836C0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v8 = (id)objc_opt_new();
  id v6 = objc_alloc_init(*(Class *)(*(void *)(a1 + 32) + 64));
  id v7 = objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(void *)(a1 + 32) + 16), v5, *(void *)(a1 + 56) + a3, *(void *)(a1 + 64) + *(void *)(*(void *)(a1 + 32) + 96), objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "uniqueID"), *(void *)(*(void *)(a1 + 32) + 20), *(void *)(*(void *)(a1 + 32) + 80), v8, v6);

  [v6 finalizeModelsWithParent:v8 context:*(void *)(a1 + 40)];
  [v8 setInstantiateResult:v7];
  [*(id *)(a1 + 48) addObject:v8];
}

id *sub_837C8(id *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v6 = result;
  switch(a2)
  {
    case 0:
      id v7 = result[4];
      unint64_t v8 = v7[11];
      unint64_t v9 = v7[12];
      BOOL v10 = a4 < v8 || a4 - v8 >= v9;
      if (!v10 || ((unint64_t v11 = v9 + v8, *((unsigned char *)result + 72)) ? (v12 = v11 == a4) : (v12 = 0), v12))
      {
        id v35 = result[5];
        uint64_t v36 = +[NSNull null];
        [v35 insertObject:v36 atIndex:a4 - *((void *)v6[4] + 11)];

        ++*((void *)v6[4] + 12);
        uint64_t v37 = [v6[6] statsCollector];
        [v37 recordEvent:25];
      }
      else if (a4 < v8)
      {
        v7[11] = v8 + 1;
      }
      [v6[7] insertAtIndex:a4];
      id v38 = v6[8];
      return (id *)_[v38 layoutInsertAtIndex:a4];
    case 1:
      id v30 = (char *)[result[7] mapFromIndex:a3];
      unint64_t v31 = v30;
      uint64_t v32 = v6[4];
      unint64_t v33 = v32[11];
      if ((unint64_t)v30 < v33 || (unint64_t)&v30[-v33] >= v32[12])
      {
        if ((unint64_t)v30 < v33) {
          v32[11] = v33 - 1;
        }
      }
      else
      {
        [v6[5] removeObjectAtIndex:];
        --*((void *)v6[4] + 12);
        uint64_t v39 = [v6[6] statsCollector];
        [v39 recordEvent:24];
      }
      [v6[7] deleteAtIndex:a3];
      id v40 = v6[8];
      return (id *)_[v40 layoutDeleteAtIndex:v31];
    case 2:
      id v13 = (char *)[result[7] mapFromIndex:a3];
      id v14 = v6[4];
      unint64_t v16 = v14[11];
      unint64_t v15 = v14[12];
      double v17 = &v13[-v16];
      if ((unint64_t)v13 >= v16 && (unint64_t)v17 < v15)
      {
        id v19 = v6[5];
        double v20 = +[NSNull null];
        [v19 replaceObjectAtIndex:v17 withObject:v20];

        uint64_t v21 = [v6[6] statsCollector];
        [v21 recordEvent:26];
      }
      [v6[7] updateAtIndex:a3];
      id v22 = v6[8];
      return (id *)_[v22 layoutUpdateAtIndex:v13];
    case 3:
      unint64_t v23 = (char *)[result[7] mapFromIndex:a3];
      unint64_t v24 = v23;
      uint64_t v25 = v6[4];
      unint64_t v26 = v25[11];
      BOOL v28 = (unint64_t)v23 >= v26 && (unint64_t)&v23[-v26] < v25[12];
      if (v28)
      {
        [v6[5] removeObjectAtIndex:];
        uint64_t v29 = -1;
      }
      else
      {
        uint64_t v29 = 0;
        if ((unint64_t)v23 < v26) {
          v25[11] = v26 - 1;
        }
      }
      id v41 = v6[4];
      unint64_t v42 = v41[11];
      unint64_t v43 = v41[12];
      BOOL v44 = a4 < v42 || a4 - v42 >= v43;
      if (!v44 || *((unsigned char *)v6 + 72) && v42 + v29 + v43 == a4)
      {
        id v45 = v6[5];
        uint64_t v46 = +[NSNull null];
        [v45 insertObject:v46 atIndex:a4 - *((void *)v6[4] + 11)];

        ++v29;
LABEL_57:
        unint64_t v47 = [v6[6] statsCollector];
        [v47 recordEvent:27];

        goto LABEL_58;
      }
      if (a4 < v42) {
        v41[11] = v42 + 1;
      }
      if (v28) {
        goto LABEL_57;
      }
LABEL_58:
      *((void *)v6[4] + 12) += v29;
      [v6[7] moveFromIndex:a3 toIndex:a4];
      id v48 = v6[8];
      return [v48 layoutMoveFromIndex:v24];
    default:
      return result;
  }
}

uint64_t sub_83BB0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_83BC0(uint64_t a1)
{
}

void sub_83BC8(uint64_t a1, void *a2, uint64_t a3)
{
  id v24 = a2;
  if (objc_opt_class() == *(void *)(a1 + 64)) {
    id v5 = 0;
  }
  else {
    id v5 = v24;
  }
  id v6 = v5;
  id v7 = v6;
  if (!v6) {
    goto LABEL_37;
  }
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 88) + a3;
  id v9 = [v6 instantiateResult];
  unsigned int v10 = v9;
  if (!v9)
  {
    int v16 = 0;
    uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_32;
  }
  id v11 = [*(id *)(a1 + 40) mapToIndex:v8];
  if (v8) {
    BOOL v12 = 1;
  }
  else {
    BOOL v12 = v11 == 0;
  }
  int v13 = !v12;
  if (v8) {
    BOOL v14 = v11 == 0;
  }
  else {
    BOOL v14 = 0;
  }
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = (uint64_t)v11;
  }
  if (v14) {
    int v16 = 1;
  }
  else {
    int v16 = v13;
  }
  if (v10) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = (uint64_t)v11;
  }
  if ((v10 & 1) == 0) {
    int v16 = 0;
  }
  if ((v10 & 2) == 0)
  {
LABEL_32:
    if (((v8 != v17) & (v10 >> 2)) == 0 && !v16) {
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  uint64_t v18 = v17 + 1;
  uint64_t v19 = *(void *)(a1 + 80);
  if (v8 + 1 == *(void *)(a1 + 72))
  {
    if (v18 != v19) {
      int v16 = 1;
    }
    goto LABEL_32;
  }
  if (v18 != v19) {
    goto LABEL_32;
  }
LABEL_34:
  double v20 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  if (!v20)
  {
    id v21 = [*(id *)(a1 + 48) mutableCopy];
    uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8);
    unint64_t v23 = *(void **)(v22 + 40);
    *(void *)(v22 + 40) = v21;

    double v20 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  }
  [v20 addIndex:v8];
LABEL_37:
}

void sub_83D1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v25[0] = 0;
  v25[1] = v25;
  v25[2] = 0x2020000000;
  v25[3] = 0;
  id v4 = [*(id *)(a1 + 32) count];
  id v5 = [v3 count];
  if (v4 != v5)
  {
    id v6 = TUIInstantiationLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v11 = [*(id *)(a1 + 40) feedId];
      uint64_t v12 = *(void *)(a1 + 32);
      int v13 = [*(id *)(*(void *)(a1 + 48) + 32) array];
      BOOL v14 = [v13 dataProvider];
      uint64_t v15 = (objc_class *)objc_opt_class();
      int v16 = NSStringFromClass(v15);
      *(_DWORD *)buf = 134219266;
      id v27 = v11;
      __int16 v28 = 2114;
      uint64_t v29 = v12;
      __int16 v30 = 2048;
      id v31 = v4;
      __int16 v32 = 2114;
      unint64_t v33 = v16;
      __int16 v34 = 2048;
      id v35 = v5;
      __int16 v36 = 2112;
      id v37 = v3;
      _os_log_error_impl(&def_141F14, v6, OS_LOG_TYPE_ERROR, "[fid:%lu] requested indexes: %{public}@ (%lu) from %{public}@ -- received %lu: %@", buf, 0x3Eu);
    }
    if (_TUIDeviceHasInternalInstall()) {
      objc_exception_throw([objc_alloc((Class)NSException) initWithName:@"InvalidResponse" reason:@"The dynamic array provided yielded an incorrect response" userInfo:0]);
    }
  }
  id v7 = *(void **)(a1 + 32);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_83FCC;
  v18[3] = &unk_254100;
  uint64_t v22 = v25;
  id v23 = v5;
  id v8 = v3;
  id v19 = v8;
  int8x16_t v17 = *(int8x16_t *)(a1 + 40);
  id v9 = (id)v17.i64[0];
  int8x16_t v20 = vextq_s8(v17, v17, 8uLL);
  unsigned int v10 = *(void **)(a1 + 56);
  uint64_t v24 = *(void *)(a1 + 64);
  id v21 = v10;
  [v7 enumerateIndexesUsingBlock:v18];

  _Block_object_dispose(v25, 8);
}

void sub_83FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_83FCC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) >= *(void *)(a1 + 72))
  {
    id v7 = 0;
  }
  else
  {
    [*(id *)(a1 + 32) objectAtIndexedSubscript:];
    id v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  id v4 = objc_opt_new();
  id v5 = objc_alloc_init(*(Class *)(*(void *)(a1 + 40) + 64));
  id v6 = objc_msgSend(*(id *)(a1 + 48), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(void *)(a1 + 40) + 16), v7, a2, *(void *)(a1 + 80), objc_msgSend(*(id *)(*(void *)(a1 + 40) + 72), "uniqueID"), *(void *)(*(void *)(a1 + 40) + 20), *(void *)(*(void *)(a1 + 40) + 80), v4, v5);
  [v5 finalizeModelsWithParent:v4 context:*(void *)(a1 + 48)];
  [v4 setInstantiateResult:v6];
  [*(id *)(a1 + 56) replaceObjectAtIndex:a2 - *(void *)(*(void *)(a1 + 40) + 88) withObject:v4];
}

id sub_841AC(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  [v1 appendLayoutChildrenToArray:v2];

  id v3 = [v2 lastObject];

  return v3;
}

id sub_8421C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  [v1 appendLayoutChildrenToArray:v2];

  id v3 = [v2 firstObject];

  return v3;
}

void sub_84898(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"halign";
  v6[1] = @"hspacing";
  void v6[2] = @"vspacing";
  void v6[3] = @"layout-mode";
  id v3 = +[NSArray arrayWithObjects:v6 count:4];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF4B8;
  qword_2DF4B8 = (uint64_t)v4;
}

void sub_849DC(id a1)
{
  v4[0] = @"valign";
  v4[1] = @"estimated-width";
  void v4[2] = @"estimated-height";
  void v4[3] = @"estimated-height-above-pivot";
  id v1 = +[NSArray arrayWithObjects:v4 count:4];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF4C8;
  qword_2DF4C8 = v2;
}

void sub_84DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_84E24()
{
  if (qword_2DF4E0 != -1) {
    dispatch_once(&qword_2DF4E0, &stru_2541B0);
  }
  uint64_t v0 = (void *)qword_2DF4D8;

  return v0;
}

void sub_84F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8504C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_850E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_85104(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = (void *)qword_2DF4D8;
  qword_2DF4D8 = v1;

  [(id)qword_2DF4D8 setObject:&off_2664A0 forKeyedSubscript:@"__text_value"];
  [(id)qword_2DF4D8 setObject:&off_2664B8 forKeyedSubscript:@"__closure"];
  [(id)qword_2DF4D8 setObject:&off_2664D0 forKeyedSubscript:@"accepts-drop"];
  [(id)qword_2DF4D8 setObject:&off_2664E8 forKeyedSubscript:@"alignment-rect-insets"];
  [(id)qword_2DF4D8 setObject:&off_266500 forKeyedSubscript:@"allow-fullscreen"];
  [(id)qword_2DF4D8 setObject:&off_266518 forKeyedSubscript:@"allow-group-blending"];
  [(id)qword_2DF4D8 setObject:&off_266530 forKeyedSubscript:@"allow-hanging-punctuation"];
  [(id)qword_2DF4D8 setObject:&off_266548 forKeyedSubscript:@"allow-shrink-to-fit"];
  [(id)qword_2DF4D8 setObject:&off_266560 forKeyedSubscript:@"alpha"];
  [(id)qword_2DF4D8 setObject:&off_266578 forKeyedSubscript:@"anchor-offset"];
  [(id)qword_2DF4D8 setObject:&off_266590 forKeyedSubscript:@"anchor-position"];
  [(id)qword_2DF4D8 setObject:&off_2665A8 forKeyedSubscript:@"anchor-ref-id"];
  [(id)qword_2DF4D8 setObject:&off_2665C0 forKeyedSubscript:@"arrow-direction"];
  [(id)qword_2DF4D8 setObject:&off_2665D8 forKeyedSubscript:@"aspect-ratio"];
  [(id)qword_2DF4D8 setObject:&off_2665F0 forKeyedSubscript:@"attribute"];
  [(id)qword_2DF4D8 setObject:&off_266608 forKeyedSubscript:@"auto-play"];
  [(id)qword_2DF4D8 setObject:&off_266620 forKeyedSubscript:@"axis"];
  [(id)qword_2DF4D8 setObject:&off_266638 forKeyedSubscript:@"ax-adjustable"];
  [(id)qword_2DF4D8 setObject:&off_266650 forKeyedSubscript:@"ax-button"];
  [(id)qword_2DF4D8 setObject:&off_266668 forKeyedSubscript:@"ax-default"];
  [(id)qword_2DF4D8 setObject:&off_266680 forKeyedSubscript:@"ax-disabled"];
  [(id)qword_2DF4D8 setObject:&off_266698 forKeyedSubscript:@"ax-enable"];
  [(id)qword_2DF4D8 setObject:&off_2666B0 forKeyedSubscript:@"ax-heading"];
  [(id)qword_2DF4D8 setObject:&off_2666C8 forKeyedSubscript:@"ax-hint"];
  [(id)qword_2DF4D8 setObject:&off_2666E0 forKeyedSubscript:@"ax-identifier"];
  [(id)qword_2DF4D8 setObject:&off_2666F8 forKeyedSubscript:@"ax-image"];
  [(id)qword_2DF4D8 setObject:&off_266710 forKeyedSubscript:@"ax-label"];
  [(id)qword_2DF4D8 setObject:&off_266728 forKeyedSubscript:@"ax-toggle"];
  [(id)qword_2DF4D8 setObject:&off_266740 forKeyedSubscript:@"ax-touch-container"];
  [(id)qword_2DF4D8 setObject:&off_266758 forKeyedSubscript:@"ax-value"];
  [(id)qword_2DF4D8 setObject:&off_266770 forKeyedSubscript:@"background-color"];
  [(id)qword_2DF4D8 setObject:&off_266788 forKeyedSubscript:@"balance-sections"];
  [(id)qword_2DF4D8 setObject:&off_2667A0 forKeyedSubscript:@"based-on"];
  [(id)qword_2DF4D8 setObject:&off_2667B8 forKeyedSubscript:@"baseline"];
  [(id)qword_2DF4D8 setObject:&off_2667D0 forKeyedSubscript:@"baseline-offset"];
  [(id)qword_2DF4D8 setObject:&off_2667E8 forKeyedSubscript:@"behavior"];
  [(id)qword_2DF4D8 setObject:&off_266800 forKeyedSubscript:@"binding"];
  [(id)qword_2DF4D8 setObject:&off_266818 forKeyedSubscript:@"blend-mode"];
  [(id)qword_2DF4D8 setObject:&off_266830 forKeyedSubscript:@"blur-offset"];
  [(id)qword_2DF4D8 setObject:&off_266848 forKeyedSubscript:@"blur-radius"];
  [(id)qword_2DF4D8 setObject:&off_266860 forKeyedSubscript:@"blur-style"];
  [(id)qword_2DF4D8 setObject:&off_266878 forKeyedSubscript:@"border-color"];
  [(id)qword_2DF4D8 setObject:&off_266890 forKeyedSubscript:@"border-width"];
  [(id)qword_2DF4D8 setObject:&off_2668A8 forKeyedSubscript:@"bottom"];
  [(id)qword_2DF4D8 setObject:&off_2668C0 forKeyedSubscript:@"button-role"];
  [(id)qword_2DF4D8 setObject:&off_2668D8 forKeyedSubscript:@"c"];
  [(id)qword_2DF4D8 setObject:&off_2668F0 forKeyedSubscript:@"calculation-mode"];
  [(id)qword_2DF4D8 setObject:&off_266908 forKeyedSubscript:@"cancel-text"];
  [(id)qword_2DF4D8 setObject:&off_266920 forKeyedSubscript:@"char-count"];
  [(id)qword_2DF4D8 setObject:&off_266938 forKeyedSubscript:@"chart-type"];
  [(id)qword_2DF4D8 setObject:&off_266950 forKeyedSubscript:@"clips-to-bounds"];
  [(id)qword_2DF4D8 setObject:&off_266968 forKeyedSubscript:@"color"];
  [(id)qword_2DF4D8 setObject:&off_266980 forKeyedSubscript:@"columns"];
  [(id)qword_2DF4D8 setObject:&off_266998 forKeyedSubscript:@"column-multiple"];
  [(id)qword_2DF4D8 setObject:&off_2669B0 forKeyedSubscript:@"column-spacing"];
  [(id)qword_2DF4D8 setObject:&off_2669C8 forKeyedSubscript:@"column-span"];
  [(id)qword_2DF4D8 setObject:&off_2669E0 forKeyedSubscript:@"column-width"];
  [(id)qword_2DF4D8 setObject:&off_2669F8 forKeyedSubscript:@"container-fraction"];
  [(id)qword_2DF4D8 setObject:&off_266A10 forKeyedSubscript:@"content-width"];
  [(id)qword_2DF4D8 setObject:&off_266A28 forKeyedSubscript:@"continuous-corners"];
  [(id)qword_2DF4D8 setObject:&off_266A40 forKeyedSubscript:@"corner-radius"];
  [(id)qword_2DF4D8 setObject:&off_266A58 forKeyedSubscript:@"cover-urls"];
  [(id)qword_2DF4D8 setObject:&off_266A70 forKeyedSubscript:@"cover-filters"];
  [(id)qword_2DF4D8 setObject:&off_266A88 forKeyedSubscript:@"crossfades-contents"];
  [(id)qword_2DF4D8 setObject:&off_266AA0 forKeyedSubscript:@"curve"];
  [(id)qword_2DF4D8 setObject:&off_266AB8 forKeyedSubscript:@"deceleration-rate"];
  [(id)qword_2DF4D8 setObject:&off_266AD0 forKeyedSubscript:@"delay"];
  [(id)qword_2DF4D8 setObject:&off_266AE8 forKeyedSubscript:@"designated-id"];
  [(id)qword_2DF4D8 setObject:&off_266B00 forKeyedSubscript:@"direction"];
  [(id)qword_2DF4D8 setObject:&off_266B18 forKeyedSubscript:@"duration"];
  [(id)qword_2DF4D8 setObject:&off_266B30 forKeyedSubscript:@"dynamic-unique-id"];
  [(id)qword_2DF4D8 setObject:&off_266B48 forKeyedSubscript:@"element"];
  [(id)qword_2DF4D8 setObject:&off_266B60 forKeyedSubscript:@"enable-background-for-highlight-preview"];
  [(id)qword_2DF4D8 setObject:&off_266B78 forKeyedSubscript:@"enable-shadow-for-highlight-preview"];
  [(id)qword_2DF4D8 setObject:&off_266B90 forKeyedSubscript:@"enabled"];
  [(id)qword_2DF4D8 setObject:&off_266BA8 forKeyedSubscript:@"end-color"];
  [(id)qword_2DF4D8 setObject:&off_266BC0 forKeyedSubscript:@"end-position"];
  [(id)qword_2DF4D8 setObject:&off_266BD8 forKeyedSubscript:@"estimated-height"];
  [(id)qword_2DF4D8 setObject:&off_266BF0 forKeyedSubscript:@"estimated-height-above-pivot"];
  [(id)qword_2DF4D8 setObject:&off_266C08 forKeyedSubscript:@"estimated-width"];
  [(id)qword_2DF4D8 setObject:&off_266C20 forKeyedSubscript:@"fallback-color"];
  [(id)qword_2DF4D8 setObject:&off_266C38 forKeyedSubscript:@"feature"];
  [(id)qword_2DF4D8 setObject:&off_266C50 forKeyedSubscript:@"fetch-delta"];
  [(id)qword_2DF4D8 setObject:&off_266C68 forKeyedSubscript:@"fetch-initial"];
  [(id)qword_2DF4D8 setObject:&off_266C80 forKeyedSubscript:@"fetch-padding"];
  [(id)qword_2DF4D8 setObject:&off_266C98 forKeyedSubscript:@"fetch-window"];
  [(id)qword_2DF4D8 setObject:&off_266CB0 forKeyedSubscript:@"fill-mode"];
  [(id)qword_2DF4D8 setObject:&off_266CC8 forKeyedSubscript:@"filter"];
  [(id)qword_2DF4D8 setObject:&off_266CE0 forKeyedSubscript:@"focus-style"];
  [(id)qword_2DF4D8 setObject:&off_266CF8 forKeyedSubscript:@"font"];
  [(id)qword_2DF4D8 setObject:&off_266D10 forKeyedSubscript:@"gradient-width"];
  [(id)qword_2DF4D8 setObject:&off_266D28 forKeyedSubscript:@"gradient-insets"];
  [(id)qword_2DF4D8 setObject:&off_266D40 forKeyedSubscript:@"gradient-fraction"];
  [(id)qword_2DF4D8 setObject:&off_266D58 forKeyedSubscript:@"grouped"];
  [(id)qword_2DF4D8 setObject:&off_266D70 forKeyedSubscript:@"group-identifier"];
  [(id)qword_2DF4D8 setObject:&off_266D88 forKeyedSubscript:@"group-priority"];
  [(id)qword_2DF4D8 setObject:&off_266DA0 forKeyedSubscript:@"halign"];
  [(id)qword_2DF4D8 setObject:&off_266DB8 forKeyedSubscript:@"hcompressed"];
  [(id)qword_2DF4D8 setObject:&off_266DD0 forKeyedSubscript:@"h"];
  [(id)qword_2DF4D8 setObject:&off_266DE8 forKeyedSubscript:@"hflip-for-rtl"];
  [(id)qword_2DF4D8 setObject:&off_266E00 forKeyedSubscript:@"hide-ellipses"];
  [(id)qword_2DF4D8 setObject:&off_266E18 forKeyedSubscript:@"hspacing"];
  [(id)qword_2DF4D8 setObject:&off_266E30 forKeyedSubscript:@"html-tags"];
  [(id)qword_2DF4D8 setObject:&off_266E48 forKeyedSubscript:@"href"];
  [(id)qword_2DF4D8 setObject:&off_266E60 forKeyedSubscript:@"identifier"];
  [(id)qword_2DF4D8 setObject:&off_266E78 forKeyedSubscript:@"ignore-insets-for-opacity-trigger"];
  [(id)qword_2DF4D8 setObject:&off_266E90 forKeyedSubscript:@"inherit-from"];
  [(id)qword_2DF4D8 setObject:&off_266EA8 forKeyedSubscript:@"inline"];
  [(id)qword_2DF4D8 setObject:&off_266EC0 forKeyedSubscript:@"impression-data"];
  [(id)qword_2DF4D8 setObject:&off_266ED8 forKeyedSubscript:@"indent-firstline"];
  [(id)qword_2DF4D8 setObject:&off_266EF0 forKeyedSubscript:@"indent-leading"];
  [(id)qword_2DF4D8 setObject:&off_266F08 forKeyedSubscript:@"indent-trailing"];
  [(id)qword_2DF4D8 setObject:&off_266F20 forKeyedSubscript:@"insets"];
  [(id)qword_2DF4D8 setObject:&off_266F38 forKeyedSubscript:@"instance"];
  [(id)qword_2DF4D8 setObject:&off_266F50 forKeyedSubscript:@"ih"];
  [(id)qword_2DF4D8 setObject:&off_266F68 forKeyedSubscript:@"iw"];
  [(id)qword_2DF4D8 setObject:&off_266F80 forKeyedSubscript:@"kind"];
  [(id)qword_2DF4D8 setObject:&off_266F98 forKeyedSubscript:@"layer-contents-gravity"];
  [(id)qword_2DF4D8 setObject:&off_266FB0 forKeyedSubscript:@"layer-video-gravity"];
  [(id)qword_2DF4D8 setObject:&off_266FC8 forKeyedSubscript:@"layout-direction"];
  [(id)qword_2DF4D8 setObject:&off_266FE0 forKeyedSubscript:@"layout-mode"];
  [(id)qword_2DF4D8 setObject:&off_266FF8 forKeyedSubscript:@"leading"];
  [(id)qword_2DF4D8 setObject:&off_267010 forKeyedSubscript:@"line-balancing"];
  [(id)qword_2DF4D8 setObject:&off_267028 forKeyedSubscript:@"lines"];
  [(id)qword_2DF4D8 setObject:&off_267040 forKeyedSubscript:@"live-transform"];
  [(id)qword_2DF4D8 setObject:&off_267058 forKeyedSubscript:@"loop"];
  [(id)qword_2DF4D8 setObject:&off_267070 forKeyedSubscript:@"mask-color"];
  [(id)qword_2DF4D8 setObject:&off_267088 forKeyedSubscript:@"max-aspect-ratio"];
  [(id)qword_2DF4D8 setObject:&off_2670A0 forKeyedSubscript:@"max-columns"];
  [(id)qword_2DF4D8 setObject:&off_2670B8 forKeyedSubscript:@"max-lines"];
  [(id)qword_2DF4D8 setObject:&off_2670D0 forKeyedSubscript:@"max-pages"];
  [(id)qword_2DF4D8 setObject:&off_2670E8 forKeyedSubscript:@"max-scale"];
  [(id)qword_2DF4D8 setObject:&off_267100 forKeyedSubscript:@"mica-text-key"];
  [(id)qword_2DF4D8 setObject:&off_267118 forKeyedSubscript:@"mica-text-value"];
  [(id)qword_2DF4D8 setObject:&off_267130 forKeyedSubscript:@"min-lines"];
  [(id)qword_2DF4D8 setObject:&off_267148 forKeyedSubscript:@"min-scale"];
  [(id)qword_2DF4D8 setObject:&off_267160 forKeyedSubscript:@"muted"];
  [(id)qword_2DF4D8 setObject:&off_267178 forKeyedSubscript:@"n"];
  [(id)qword_2DF4D8 setObject:&off_267190 forKeyedSubscript:@"name"];
  [(id)qword_2DF4D8 setObject:&off_2671A8 forKeyedSubscript:@"menu-is-primary"];
  [(id)qword_2DF4D8 setObject:&off_2671C0 forKeyedSubscript:@"item-type"];
  [(id)qword_2DF4D8 setObject:&off_2671D8 forKeyedSubscript:@"observation-mode"];
  [(id)qword_2DF4D8 setObject:&off_2671F0 forKeyedSubscript:@"observe-trigger"];
  [(id)qword_2DF4D8 setObject:&off_267208 forKeyedSubscript:@"observe-trigger-delay"];
  [(id)qword_2DF4D8 setObject:&off_267220 forKeyedSubscript:@"observe-trigger-value"];
  [(id)qword_2DF4D8 setObject:&off_267238 forKeyedSubscript:@"on"];
  [(id)qword_2DF4D8 setObject:&off_267250 forKeyedSubscript:@"opacity"];
  [(id)qword_2DF4D8 setObject:&off_267268 forKeyedSubscript:@"padding"];
  [(id)qword_2DF4D8 setObject:&off_267280 forKeyedSubscript:@"paginated"];
  [(id)qword_2DF4D8 setObject:&off_267298 forKeyedSubscript:@"param"];
  [(id)qword_2DF4D8 setObject:&off_2672B0 forKeyedSubscript:@"parameters"];
  [(id)qword_2DF4D8 setObject:&off_2672C8 forKeyedSubscript:@"play-state"];
  [(id)qword_2DF4D8 setObject:&off_2672E0 forKeyedSubscript:@"pointer-ref-id"];
  [(id)qword_2DF4D8 setObject:&off_2672F8 forKeyedSubscript:@"pointer-style"];
  [(id)qword_2DF4D8 setObject:&off_267310 forKeyedSubscript:@"poster-frame-url"];
  [(id)qword_2DF4D8 setObject:&off_267328 forKeyedSubscript:@"presentation"];
  [(id)qword_2DF4D8 setObject:&off_267340 forKeyedSubscript:@"pressed-scale"];
  [(id)qword_2DF4D8 setObject:&off_267358 forKeyedSubscript:@"progress"];
  [(id)qword_2DF4D8 setObject:&off_267370 forKeyedSubscript:@"progress-id"];
  [(id)qword_2DF4D8 setObject:&off_267388 forKeyedSubscript:@"mode"];
  [(id)qword_2DF4D8 setObject:&off_2673A0 forKeyedSubscript:@"paused"];
  [(id)qword_2DF4D8 setObject:&off_2673B8 forKeyedSubscript:@"raise"];
  [(id)qword_2DF4D8 setObject:&off_2673D0 forKeyedSubscript:@"rasterize"];
  [(id)qword_2DF4D8 setObject:&off_2673E8 forKeyedSubscript:@"rating"];
  [(id)qword_2DF4D8 setObject:&off_267400 forKeyedSubscript:@"ref-id"];
  [(id)qword_2DF4D8 setObject:&off_267418 forKeyedSubscript:@"ref-instance"];
  [(id)qword_2DF4D8 setObject:&off_267430 forKeyedSubscript:@"relative-width"];
  [(id)qword_2DF4D8 setObject:&off_267448 forKeyedSubscript:@"render-mode"];
  [(id)qword_2DF4D8 setObject:&off_267460 forKeyedSubscript:@"render-model"];
  [(id)qword_2DF4D8 setObject:&off_267478 forKeyedSubscript:@"render-outsets"];
  [(id)qword_2DF4D8 setObject:&off_267490 forKeyedSubscript:@"render-transform"];
  [(id)qword_2DF4D8 setObject:&off_2674A8 forKeyedSubscript:@"resource-instance"];
  [(id)qword_2DF4D8 setObject:&off_2674C0 forKeyedSubscript:@"resource-kind"];
  [(id)qword_2DF4D8 setObject:&off_2674D8 forKeyedSubscript:@"resource-load"];
  [(id)qword_2DF4D8 setObject:&off_2674F0 forKeyedSubscript:@"resource-options"];
  [(id)qword_2DF4D8 setObject:&off_267508 forKeyedSubscript:@"return-key-type"];
  [(id)qword_2DF4D8 setObject:&off_267520 forKeyedSubscript:@"role"];
  [(id)qword_2DF4D8 setObject:&off_267538 forKeyedSubscript:@"rows"];
  [(id)qword_2DF4D8 setObject:&off_267550 forKeyedSubscript:@"row-spacing"];
  [(id)qword_2DF4D8 setObject:&off_267568 forKeyedSubscript:@"row-span"];
  [(id)qword_2DF4D8 setObject:&off_267580 forKeyedSubscript:@"run-list"];
  [(id)qword_2DF4D8 setObject:&off_267598 forKeyedSubscript:@"scale"];
  [(id)qword_2DF4D8 setObject:&off_2675B0 forKeyedSubscript:@"search-text-max-length"];
  [(id)qword_2DF4D8 setObject:&off_2675C8 forKeyedSubscript:@"select"];
  [(id)qword_2DF4D8 setObject:&off_2675E0 forKeyedSubscript:@"select-index"];
  [(id)qword_2DF4D8 setObject:&off_2675F8 forKeyedSubscript:@"shadow-color"];
  [(id)qword_2DF4D8 setObject:&off_267610 forKeyedSubscript:@"shadow-offset"];
  [(id)qword_2DF4D8 setObject:&off_267628 forKeyedSubscript:@"shadow-opacity"];
  [(id)qword_2DF4D8 setObject:&off_267640 forKeyedSubscript:@"shadow-radius"];
  [(id)qword_2DF4D8 setObject:&off_267658 forKeyedSubscript:@"should-hyphenate"];
  [(id)qword_2DF4D8 setObject:&off_267670 forKeyedSubscript:@"show-cancel-button"];
  [(id)qword_2DF4D8 setObject:&off_267688 forKeyedSubscript:@"show-playback-controls"];
  [(id)qword_2DF4D8 setObject:&off_2676A0 forKeyedSubscript:@"size"];
  [(id)qword_2DF4D8 setObject:&off_2676B8 forKeyedSubscript:@"spacing"];
  [(id)qword_2DF4D8 setObject:&off_2676D0 forKeyedSubscript:@"span"];
  [(id)qword_2DF4D8 setObject:&off_2676E8 forKeyedSubscript:@"start-at-end"];
  [(id)qword_2DF4D8 setObject:&off_267700 forKeyedSubscript:@"start-color"];
  [(id)qword_2DF4D8 setObject:&off_267718 forKeyedSubscript:@"start-position"];
  [(id)qword_2DF4D8 setObject:&off_267730 forKeyedSubscript:@"startTime"];
  [(id)qword_2DF4D8 setObject:&off_267748 forKeyedSubscript:@"style"];
  [(id)qword_2DF4D8 setObject:&off_267760 forKeyedSubscript:@"text"];
  [(id)qword_2DF4D8 setObject:&off_267778 forKeyedSubscript:@"text-alignment"];
  [(id)qword_2DF4D8 setObject:&off_267790 forKeyedSubscript:@"timing"];
  [(id)qword_2DF4D8 setObject:&off_2677A8 forKeyedSubscript:@"tint"];
  [(id)qword_2DF4D8 setObject:&off_2677C0 forKeyedSubscript:@"title"];
  [(id)qword_2DF4D8 setObject:&off_2677D8 forKeyedSubscript:@"top"];
  [(id)qword_2DF4D8 setObject:&off_2677F0 forKeyedSubscript:@"touch-outsets"];
  [(id)qword_2DF4D8 setObject:&off_267808 forKeyedSubscript:@"trailing"];
  [(id)qword_2DF4D8 setObject:&off_267820 forKeyedSubscript:@"transform"];
  [(id)qword_2DF4D8 setObject:&off_267838 forKeyedSubscript:@"trigger"];
  [(id)qword_2DF4D8 setObject:&off_267850 forKeyedSubscript:@"trigger-offset"];
  [(id)qword_2DF4D8 setObject:&off_267868 forKeyedSubscript:@"truncate"];
  [(id)qword_2DF4D8 setObject:&off_267880 forKeyedSubscript:@"type"];
  [(id)qword_2DF4D8 setObject:&off_267898 forKeyedSubscript:@"url"];
  [(id)qword_2DF4D8 setObject:&off_2678B0 forKeyedSubscript:@"user-interface-style"];
  [(id)qword_2DF4D8 setObject:&off_2678C8 forKeyedSubscript:@"v"];
  [(id)qword_2DF4D8 setObject:&off_2678E0 forKeyedSubscript:@"valign"];
  [(id)qword_2DF4D8 setObject:&off_2678F8 forKeyedSubscript:@"vcompressed"];
  [(id)qword_2DF4D8 setObject:&off_267910 forKeyedSubscript:@"video-id"];
  [(id)qword_2DF4D8 setObject:&off_267928 forKeyedSubscript:@"vpivot"];
  [(id)qword_2DF4D8 setObject:&off_267940 forKeyedSubscript:@"vertical-placement"];
  [(id)qword_2DF4D8 setObject:&off_267958 forKeyedSubscript:@"vspacing"];
  [(id)qword_2DF4D8 setObject:&off_267970 forKeyedSubscript:@"weight"];
  [(id)qword_2DF4D8 setObject:&off_267988 forKeyedSubscript:@"w"];
  [(id)qword_2DF4D8 setObject:&off_2679A0 forKeyedSubscript:@"width-snap"];
  [(id)qword_2DF4D8 setObject:&off_2679B8 forKeyedSubscript:@"when-unavailable"];
  id v3 = (void *)qword_2DF4D8;

  [v3 setObject:&off_2679D0 forKeyedSubscript:@"z-index"];
}

void sub_86A20(id a1)
{
}

void sub_86BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

id sub_8732C(uint64_t a1, void *a2)
{
  return [a2 appendLayoutChildrenToArray:*(void *)(a1 + 32)];
}

id sub_873D0(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_874F0(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_874FC(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

void sub_88160(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)CAGradientLayer);
  [v4 setBounds:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  v12[0] = [*(id *)(a1 + 32) CGColor];
  v12[1] = [*(id *)(a1 + 40) CGColor];
  id v5 = +[NSArray arrayWithObjects:v12 count:2];
  [v4 setColors:v5];

  id v6 = +[NSNumber numberWithDouble:*(double *)(a1 + 80)];
  v11[0] = v6;
  v11[1] = &off_268AA0;
  id v7 = +[NSArray arrayWithObjects:v11 count:2];
  [v4 setLocations:v7];

  if (*(void *)(a1 + 88) == 1)
  {
    double v8 = 0.5;
    [v4 setStartPoint:*(double *)(a1 + 96), 0.5];
    double v9 = *(double *)(a1 + 104);
  }
  else
  {
    double v9 = 0.5;
    [v4 setStartPoint:0.5, *(double *)(a1 + 96)];
    double v8 = *(double *)(a1 + 104);
  }
  [v4 setEndPoint:v9, v8];
  id v10 = [v3 CGContext];

  [v4 renderInContext:v10];
}

void sub_88760(id a1)
{
  uint64_t v1 = (void *)qword_2DF4F8;
  qword_2DF4F8 = (uint64_t)&off_2685F0;
}

void sub_88B04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  double v8 = [a2 objectForKeyedSubscript:NSFontAttributeName];
  unsigned int v9 = [v8 isEqual:*(void *)(a1 + 32)];

  if (v9)
  {
    id v11 = [a2 mutableCopy];
    [v11 removeObjectForKey:NSFontAttributeName];
    [*(id *)(a1 + 40) addAttributes:v11 range:a3];
  }
  else
  {
    id v10 = *(void **)(a1 + 40);
    [v10 addAttributes:a2 range:a3];
  }
}

void sub_89238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_893E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_89620()
{
}

void sub_897C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_89978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_89A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_89AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_89B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_89FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8A460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8A544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8A5D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_123E4(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_8A6D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8A7B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8A900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8A9C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8AA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_123E4(a10);
  }

  _Unwind_Resume(a1);
}

void sub_8AB7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_8ABF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_8ACF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_8AFF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8B964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8BAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8BBCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8BCB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8C39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_8C5D0(_Unwind_Exception *a1)
{
  double v8 = v5;

  _Unwind_Resume(a1);
}

void sub_8C7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_8C84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

double sub_8C978(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 768);
    if (!v3) {
      operator new();
    }
LABEL_6:
    return sub_8CD60(v3);
  }
  id v4 = +[NSUserDefaults standardUserDefaults];
  unsigned int v5 = [v4 BOOLForKey:@"TUIRecordInstantiationStats"];

  uint64_t v3 = *(void *)(a1 + 768);
  if (v5)
  {
    if (!v3) {
      return result;
    }
    goto LABEL_6;
  }
  if (v3)
  {
    sub_3BD4(v3 + 88);
    sub_1265C(v3 + 48);
    sub_1265C(v3 + 8);
    operator delete();
  }
  return result;
}

void sub_8CAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_8CC8C(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)double result = 0;
  *(void *)(result + 4) = 0xFFFF0000FFFF0000;
  *(_DWORD *)(result + 12) = 0;
  if (a2)
  {
    *(_DWORD *)double result = *(unsigned __int16 *)a2;
    *(_DWORD *)(result + 4) = a2[2];
    *(_DWORD *)(result + _Block_object_dispose(&STACK[0x2D0], 8) = a2[1];
    *(_DWORD *)(result + 12) = a2[3];
  }
  return result;
}

void sub_8CCD0(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_8CD2C(exception, a1);
}

void sub_8CD18(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_8CD2C(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  return result;
}

double sub_8CD60(uint64_t a1)
{
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 1065353216;
  sub_8CDDC(a1 + 8, (uint64_t *)&v3);
  sub_1265C((uint64_t)&v3);
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 1065353216;
  sub_8CDDC(a1 + 48, (uint64_t *)&v3);
  sub_1265C((uint64_t)&v3);
  double result = 0.0;
  *(_OWORD *)(a1 + 27816) = 0u;
  *(_OWORD *)(a1 + 27832) = 0u;
  return result;
}

void sub_8CDDC(uint64_t a1, uint64_t *a2)
{
  sub_8CE80((void *)a1);
  uint64_t v4 = *a2;
  *a2 = 0;
  int v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v8 = a2[2];
  id v7 = a2 + 2;
  uint64_t v6 = v8;
  uint64_t v9 = *(v7 - 1);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v9;
  *(v7 - 1) = 0;
  uint64_t v10 = v7[1];
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    unint64_t v11 = *(void *)(v6 + 8);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        v11 %= v12;
      }
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v11) = a1 + 16;
    *id v7 = 0;
    v7[1] = 0;
  }
}

void *sub_8CE80(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    double result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        double result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

id sub_8E38C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) setContentInset:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  [*(id *)(*(void *)(a1 + 32) + 48) setFrame:*(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96)];
  [*(id *)(a1 + 32) _leadingGradientFrame];
  [*(id *)(*(void *)(a1 + 32) + 56) setFrame:];
  [*(id *)(a1 + 32) _trailingGradientFrame];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 64);

  return [v2 setFrame:];
}

id sub_8ED3C(uint64_t a1)
{
  uint64_t v2 = -[TUIFeedView initWithFrame:]([TUIFeedView alloc], "initWithFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 48);
  *(void *)(v3 + sub_3BD4((uint64_t)this + 48) = v2;

  [*(id *)(*(void *)(a1 + 32) + 48) setAutoresizingMask:18];
  int v5 = +[UIColor clearColor];
  [*(id *)(*(void *)(a1 + 32) + 48) setBackgroundColor:v5];

  [*(id *)(*(void *)(a1 + 32) + 48) setShowsHorizontalScrollIndicator:0];
  [*(id *)(*(void *)(a1 + 32) + 48) setShowsVerticalScrollIndicator:0];
  [*(id *)(*(void *)(a1 + 32) + 48) setPagingEnabled:0];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
  [*(id *)(*(void *)(a1 + 32) + 48) setViewFactory:WeakRetained];

  [*(id *)(*(void *)(a1 + 32) + 48) setDelegate:];
  [*(id *)(*(void *)(a1 + 32) + 48) setSubviewsDelegate:];
  [*(id *)(*(void *)(a1 + 32) + 24) decelerationRate];
  [*(id *)(*(void *)(a1 + 32) + 48) setDecelerationRate:];
  id v7 = *(void **)(a1 + 32);
  uint64_t v8 = v7[6];

  return [v7 addSubview:v8];
}

void sub_902CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

id sub_902EC(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_90318(uint64_t a1)
{
}

void sub_90320(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, 1);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

void sub_9038C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

void sub_905B4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_2DF508;
  qword_2DF508 = v1;
}

void sub_908F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = [v4 response];
  id v7 = [v5 URL];

  uint64_t v6 = +[NSURLRequest requestWithURL:v7];
  [*(id *)(*(void *)(a1 + 32) + 40) storeCachedResponse:v4 forRequest:v6];
}

uint64_t sub_90AE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_90AF4(uint64_t a1)
{
}

void sub_90AFC(uint64_t a1)
{
}

void sub_90F10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 25))
  {
    if ((*(void *)(v2 + 32) & 0x8000000000000000) != 0) {
      [v2 _aq_loadPostLaunchCaches];
    }
  }
  else if (*(unsigned char *)(v2 + 24))
  {
    [v2 _aq_saveOfflineCache];
    uint64_t v3 = objc_opt_new();
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = *(void **)(v4 + 8);
    *(void *)(v4 + _Block_object_dispose(&STACK[0x2D0], 8) = v3;
  }
  ++*(void *)(*(void *)(a1 + 32) + 32);
}

uint64_t sub_912B4(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  LODWORD(result) = [*(id *)(a1 + 32) fileExistsAtPath:a2 isDirectory:&v3];
  if (v3) {
    return result;
  }
  else {
    return 0;
  }
}

void sub_912F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = [v4 response];
  id v7 = [v5 URL];

  uint64_t v6 = +[NSURLRequest requestWithURL:v7];
  [*(id *)(*(void *)(a1 + 32) + 40) storeCachedResponse:v4 forRequest:v6];
}

id sub_91458(void *a1)
{
  return [*(id *)(a1[4] + 8) setObject:a1[5] forKey:a1[6]];
}

void sub_91598(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 8) valueForKey:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_91680(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) enumerateKeysAndObjectsUsingBlock:*(void *)(a1 + 40)];
}

id sub_91700(uint64_t a1)
{
  return [*(id *)(a1 + 32) _aq_saveOfflineCache];
}

void sub_91F5C(void *a1, void *a2, void *a3, void *a4)
{
  id v11 = a2;
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = (unsigned char *)a1[4];
  if (v9[32]) {
    [v9 _addURLToOfflineCache:a1[5] response:v7 data:v11];
  }
  uint64_t v10 = a1[6];
  if (v10) {
    (*(void (**)(uint64_t, id, id))(v10 + 16))(v10, v11, v8);
  }
}

void sub_92180(void *a1, void *a2, void *a3, void *a4)
{
  id v11 = a2;
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = (unsigned char *)a1[4];
  if (v9[32]) {
    [v9 _addURLToOfflineCache:a1[5] response:v7 data:v11];
  }
  uint64_t v10 = a1[6];
  if (v10) {
    (*(void (**)(uint64_t, id, id))(v10 + 16))(v10, v7, v8);
  }
}

void sub_924B0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t TUIKeyboardAppearanceFromEnvironmentStyle(uint64_t a1)
{
  if (a1 == 2) {
    return 1;
  }
  else {
    return 2 * (a1 == 1);
  }
}

BOOL TUIPlatformKeyboardAppearanceFromKeyboardAppearance(BOOL result)
{
  if (result != 2) {
    return result == 1;
  }
  return result;
}

void sub_9392C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_939D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_93A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_93B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_94574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,uint64_t a49,char a50)
{
  sub_95848((uint64_t)&a22);
  if (__p)
  {
    a48 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_63800((uint64_t)&a50);

  _Unwind_Resume(a1);
}

double sub_94678(long long *a1, double *a2, void *a3, unint64_t a4)
{
  int v186 = 0;
  int v187 = 0;
  uint64_t v188 = 0;
  uint64_t v6 = *(void **)a1;
  uint64_t v168 = a2;
  if (a4)
  {
    unint64_t v7 = a4;
  }
  else
  {
    unint64_t v7 = 1;
    unint64_t v9 = *((void *)a1 + 1);
    unint64_t v8 = *((void *)a1 + 2);
LABEL_4:
    while (1)
    {
      unint64_t v10 = v8;
      unint64_t v11 = v9;
      if (v9 == *((void *)a1 + 4) && v8 == *((void *)a1 + 5)) {
        break;
      }
      uint64_t v12 = *v6;
      uint64_t v13 = *(void *)(*v6 + 88 * v9) + 96 * v8;
      uint64_t v15 = *(id **)(v13 + 48);
      BOOL v14 = *(id **)(v13 + 56);
      if (v15 == v14)
      {
        unint64_t v17 = 0;
      }
      else
      {
        int v16 = v6;
        unint64_t v17 = 0;
        do
        {
          if (*v15)
          {
            id v18 = [*v15 span];
            if ((unint64_t)v18 <= 1) {
              uint64_t v19 = 1;
            }
            else {
              uint64_t v19 = (uint64_t)v18;
            }
          }
          else
          {
            uint64_t v19 = 1;
          }
          v17 += v19;
          v15 += 8;
        }
        while (v15 != v14);
        uint64_t v6 = v16;
        uint64_t v12 = *v16;
      }
      unint64_t v8 = 0;
      if (v7 <= v17) {
        unint64_t v7 = v17;
      }
      unint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v6[1] - v12) >> 3);
      if (v11 < v9)
      {
        unint64_t v8 = v10 + 1;
        int8x16_t v20 = (void *)(v12 + 88 * v11 + 8);
        while (v8 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v20 - *(v20 - 1)) >> 5))
        {
          unint64_t v8 = 0;
          ++v11;
          v20 += 11;
          if (v9 == v11) {
            goto LABEL_4;
          }
        }
        unint64_t v9 = v11;
      }
    }
    uint64_t v6 = *(void **)a1;
    a2 = v168;
  }
  unint64_t v169 = v7;
  double v21 = a2[5];
  double v22 = *a2 - a2[2] - a2[4];
  long long v183 = 0uLL;
  unint64_t v184 = 0;
  unint64_t v24 = *((void *)a1 + 1);
  unint64_t v23 = *((void *)a1 + 2);
  double v25 = 0.0;
LABEL_26:
  while (1)
  {
    unint64_t v26 = v23;
    unint64_t v27 = v24;
    if (v24 == *((void *)a1 + 4) && v23 == *((void *)a1 + 5)) {
      break;
    }
    __int16 v28 = v6;
    uint64_t v29 = (uint64_t *)(*(void *)(*v6 + 88 * v24) + 96 * v23);
    sub_68438((uint64_t)&v185, 0, v29[6], v29[7], NAN);
    double v31 = v30;
    *((double *)v29 + 9) = v30;
    v29[10] = v32;
    unint64_t v33 = *((void *)&v183 + 1);
    uint64_t v34 = v183;
    if ((void)v183 == *((void *)&v183 + 1))
    {
      long long __p = 0uLL;
      uint64_t v182 = 0;
      if ((unint64_t)v183 >= v184)
      {
        unint64_t v33 = sub_96BCC((uint64_t *)&v183, (long long **)&__p);
      }
      else
      {
        *(void *)long long v183 = 0;
        *(void *)(v34 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
        *(void *)(v34 + 16) = 0;
        sub_96FB8((char *)v34, (long long *)__p, *((long long **)&__p + 1), (uint64_t)(*((void *)&__p + 1) - __p) >> 4);
        unint64_t v33 = v34 + 24;
      }
      *((void *)&v183 + 1) = v33;
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
        unint64_t v33 = *((void *)&v183 + 1);
      }
      double v25 = 0.0;
    }
    if (*((unsigned char *)v168 + 64) && *(void *)(v33 - 24) != *(void *)(v33 - 16) && v31 + v21 + v25 > v22)
    {
      long long __p = 0uLL;
      uint64_t v182 = 0;
      if (v33 >= v184)
      {
        unint64_t v33 = sub_96BCC((uint64_t *)&v183, (long long **)&__p);
      }
      else
      {
        *(void *)unint64_t v33 = 0;
        *(void *)(v33 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
        *(void *)(v33 + 16) = 0;
        sub_96FB8((char *)v33, (long long *)__p, *((long long **)&__p + 1), (uint64_t)(*((void *)&__p + 1) - __p) >> 4);
        v33 += 24;
      }
      *((void *)&v183 + 1) = v33;
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
        unint64_t v33 = *((void *)&v183 + 1);
      }
      double v25 = 0.0;
    }
    uint64_t v35 = *(void *)(v33 - 24);
    unint64_t v36 = *(void *)(v33 - 16);
    if (v35 == v36) {
      double v37 = -0.0;
    }
    else {
      double v37 = v21;
    }
    unint64_t v38 = *(void *)(v33 - 8);
    if (v36 >= v38)
    {
      uint64_t v40 = (uint64_t)(v36 - v35) >> 4;
      unint64_t v41 = v40 + 1;
      if ((unint64_t)(v40 + 1) >> 60) {
        sub_4484();
      }
      uint64_t v42 = v38 - v35;
      if (v42 >> 3 > v41) {
        unint64_t v41 = v42 >> 3;
      }
      if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v43 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v43 = v41;
      }
      if (v43) {
        BOOL v44 = (char *)sub_21C3C(v33 - 8, v43);
      }
      else {
        BOOL v44 = 0;
      }
      id v45 = (double *)&v44[16 * v40];
      *(void *)id v45 = v29;
      v45[1] = v31;
      unint64_t v47 = *(char **)(v33 - 24);
      uint64_t v46 = *(char **)(v33 - 16);
      id v48 = v45;
      if (v46 != v47)
      {
        do
        {
          *((_OWORD *)v48 - 1) = *((_OWORD *)v46 - 1);
          v48 -= 2;
          v46 -= 16;
        }
        while (v46 != v47);
        uint64_t v46 = *(char **)(v33 - 24);
      }
      uint64_t v39 = (char *)(v45 + 2);
      *(void *)(v33 - 24) = v48;
      *(void *)(v33 - 16) = v45 + 2;
      *(void *)(v33 - _Block_object_dispose(&STACK[0x2D0], 8) = &v44[16 * v43];
      if (v46) {
        operator delete(v46);
      }
    }
    else
    {
      *(void *)unint64_t v36 = v29;
      *(double *)(v36 + _Block_object_dispose(&STACK[0x2D0], 8) = v31;
      uint64_t v39 = (char *)(v36 + 16);
    }
    unint64_t v23 = 0;
    double v25 = v31 + v25 + v37;
    *(void *)(v33 - 16) = v39;
    uint64_t v6 = v28;
    unint64_t v24 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v28[1] - *v28) >> 3);
    if (v27 < v24)
    {
      unint64_t v23 = v26 + 1;
      id v49 = (void *)(*v28 + 88 * v27 + 8);
      while (v23 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v49 - *(v49 - 1)) >> 5))
      {
        unint64_t v23 = 0;
        ++v27;
        v49 += 11;
        if (v24 == v27) {
          goto LABEL_26;
        }
      }
      unint64_t v24 = v27;
    }
  }
  if (*((unsigned char *)v168 + 64))
  {
    id v51 = (double **)*((void *)&v183 + 1);
    for (uint64_t i = (double **)v183; i != v51; i += 3)
    {
      if (i != (double **)(*((void *)&v183 + 1) - 24)
        || 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v183 + 1) - v183) >> 3) <= 1)
      {
        uint64_t v52 = *i;
        id v53 = i[1];
        if (*i != v53)
        {
          double v54 = 0.0;
          CGRect v55 = *i;
          do
          {
            double v54 = v54 + v55[1];
            v55 += 2;
          }
          while (v55 != v53);
          uint64_t v56 = ((char *)v53 - (char *)v52) >> 4;
          double v57 = v22 - (v54 + (double)(unint64_t)(v56 - 1) * v21);
          if (v57 > 0.0 && v52 != v53)
          {
            double v59 = v57 / (double)(unint64_t)v56;
            do
            {
              uint64_t v60 = *(void *)v52;
              sub_68438((uint64_t)&v185, 1, *(void *)(*(void *)v52 + 48), *(void *)(*(void *)v52 + 56), v59 + v52[1]);
              *(void *)(v60 + 72) = v61;
              *(void *)(v60 + 80) = v62;
              *((void *)v52 + 1) = v61;
              v52 += 2;
            }
            while (v52 != v53);
          }
        }
      }
    }
  }
  *(void *)&long long __p = 0;
  sub_68854((uint64_t)&v186, v169, &__p);
  id v64 = *(uint64_t **)a1;
  unint64_t v63 = *((void *)a1 + 1);
  unint64_t v65 = *((void *)a1 + 2);
  uint64_t v66 = v168;
  unint64_t v162 = *(uint64_t **)a1;
LABEL_84:
  while (1)
  {
    unint64_t v67 = v63;
    unint64_t v68 = v65;
    if (v63 == *((void *)a1 + 4) && v65 == *((void *)a1 + 5)) {
      break;
    }
    uint64_t v69 = *v64;
    uint64_t v70 = *(void *)(*v64 + 88 * v63) + 96 * v65;
    uint64_t v71 = *(void *)(v70 + 48);
    uint64_t v72 = *(void *)(v70 + 56);
    if (v71 != v72)
    {
      unint64_t v164 = v65;
      uint64_t v73 = 0;
      unint64_t v74 = 0;
      uint64_t v75 = 2;
      do
      {
        double v76 = *(double *)(v71 + 56);
        if (*(void *)v71 && (unint64_t)[*(id *)v71 span] >= 2) {
          operator new();
        }
        if (v74 < v169) {
          v186[v74] = fmax(v186[v74], v76);
        }
        ++v74;
        v71 += 64;
        v73 += v75;
        v75 += 2;
      }
      while (v71 != v72);
      id v64 = v162;
      unint64_t v68 = v164;
      uint64_t v69 = *v162;
      uint64_t v66 = v168;
    }
    unint64_t v65 = 0;
    unint64_t v63 = 0x2E8BA2E8BA2E8BA3 * ((v64[1] - v69) >> 3);
    if (v67 < v63)
    {
      unint64_t v65 = v68 + 1;
      uint64_t v77 = (void *)(v69 + 88 * v67 + 8);
      while (v65 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v77 - *(v77 - 1)) >> 5))
      {
        unint64_t v65 = 0;
        ++v67;
        v77 += 11;
        if (v63 == v67) {
          goto LABEL_84;
        }
      }
      unint64_t v63 = v67;
    }
  }
  long long __p = 0uLL;
  uint64_t v182 = 0;
  __src[0] = 0;
  sub_68854((uint64_t)&__p, v169 + 1, __src);
  id v78 = v186;
  BOOL v79 = v187;
  uint64_t v80 = __p;
  if (v186 == v187)
  {
    uint64_t v85 = 0;
    double v82 = 0.0;
  }
  else
  {
    uint64_t v81 = 0;
    double v82 = 0.0;
    uint64_t v83 = (double *)__p;
    do
    {
      double v84 = *v78++;
      *v83++ = v82;
      double v82 = v82 + v84;
      --v81;
    }
    while (v78 != v79);
    uint64_t v85 = -v81;
  }
  *(double *)(v80 + 8 * v85) = v82;
  if (*((unsigned char *)v66 + 64)) {
    double v86 = 0.0;
  }
  else {
    double v86 = v66[2];
  }
  __src[0] = 0;
  __src[1] = 0;
  v180[0] = 0;
  uint64_t v166 = (long long **)*((void *)&v183 + 1);
  id v87 = (long long **)v183;
  if ((void)v183 == *((void *)&v183 + 1))
  {
    BOOL v102 = 0;
    uint64_t v101 = 0;
LABEL_136:
    unsigned int v104 = (char *)__src[0];
    uint64_t v105 = (v102 - (char *)__src[0]) >> 3;
    unint64_t v106 = v105 + 1;
    if ((unint64_t)(v105 + 1) >> 61) {
      sub_4484();
    }
    uint64_t v107 = v101 - (unint64_t)__src[0];
    if (v107 >> 2 > v106) {
      unint64_t v106 = v107 >> 2;
    }
    if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v108 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v108 = v106;
    }
    if (v108)
    {
      uint64_t v109 = (char *)sub_39FA0((uint64_t)v180, v108);
      unsigned int v104 = (char *)__src[0];
      BOOL v102 = (char *)__src[1];
    }
    else
    {
      uint64_t v109 = 0;
    }
    id v110 = (double *)&v109[8 * v105];
    long long v111 = &v109[8 * v108];
    double *v110 = v86;
    id v103 = v110 + 1;
    while (v102 != v104)
    {
      uint64_t v112 = *((void *)v102 - 1);
      v102 -= 8;
      *((void *)v110-- - 1) = v112;
    }
    __src[0] = v110;
    __src[1] = v103;
    v180[0] = v111;
    if (v104) {
      operator delete(v104);
    }
    goto LABEL_150;
  }
  do
  {
    int v176 = 0;
    int v177 = 0;
    uint64_t v178 = 0;
    sub_96FB8((char *)&v176, *v87, v87[1], v87[1] - *v87);
    int v88 = v176;
    id v89 = v177;
    if (v176 != v177)
    {
      id v90 = (double *)__src[1];
      do
      {
        double v91 = v88[1];
        if ((unint64_t)v90 >= v180[0])
        {
          id v93 = (double *)__src[0];
          uint64_t v94 = ((char *)v90 - (char *)__src[0]) >> 3;
          unint64_t v95 = v94 + 1;
          if ((unint64_t)(v94 + 1) >> 61) {
            sub_4484();
          }
          int64_t v96 = v180[0] - (unint64_t)__src[0];
          if ((uint64_t)(v180[0] - (unint64_t)__src[0]) >> 2 > v95) {
            unint64_t v95 = v96 >> 2;
          }
          if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v97 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v97 = v95;
          }
          if (v97)
          {
            id v98 = (char *)sub_39FA0((uint64_t)v180, v97);
            id v93 = (double *)__src[0];
            id v90 = (double *)__src[1];
          }
          else
          {
            id v98 = 0;
          }
          long long v99 = (double *)&v98[8 * v94];
          *long long v99 = v86;
          unint64_t v92 = v99 + 1;
          while (v90 != v93)
          {
            uint64_t v100 = *((void *)v90-- - 1);
            *((void *)v99-- - 1) = v100;
          }
          __src[0] = v99;
          __src[1] = v92;
          v180[0] = &v98[8 * v97];
          if (v93) {
            operator delete(v93);
          }
        }
        else
        {
          *id v90 = v86;
          unint64_t v92 = v90 + 1;
        }
        __src[1] = v92;
        double v86 = v21 + v86 + v91;
        v88 += 2;
        id v90 = (double *)v92;
      }
      while (v88 != v89);
      int v88 = v176;
    }
    if (v88)
    {
      int v177 = v88;
      operator delete(v88);
    }
    v87 += 3;
  }
  while (v87 != v166);
  BOOL v102 = (char *)__src[1];
  uint64_t v101 = v180[0];
  if (__src[1] >= (void *)v180[0]) {
    goto LABEL_136;
  }
  *(double *)__src[1] = v86;
  id v103 = v102 + 8;
LABEL_150:
  __src[1] = v103;
  unint64_t v113 = __src[0];
  if (v66 + 9 != (double *)__src)
  {
    sub_9702C((char *)v66 + 72, (char *)__src[0], (uint64_t)v103, (int64_t)((uint64_t)v103 - (unint64_t)__src[0]) >> 3);
    unint64_t v113 = __src[0];
  }
  if (v113)
  {
    __src[1] = v113;
    operator delete(v113);
  }
  long long v174 = *a1;
  uint64_t v175 = *((void *)a1 + 2);
  long long v172 = *(long long *)((char *)a1 + 24);
  uint64_t v173 = *((void *)a1 + 5);
  *(void *)&long long v170 = v66;
  *((void *)&v170 + 1) = &__p;
  uint64_t v171 = a1;
  sub_96720(a3, (size_t)&v174, (uint64_t)&v172, &v170);
  uint64_t v163 = *(void *)(*((void *)&__p + 1) - 8);
  id v115 = *(uint64_t **)a1;
  unint64_t v114 = *((void *)a1 + 1);
  unint64_t v116 = *((void *)a1 + 2);
  uint64_t v165 = *(uint64_t **)a1;
LABEL_155:
  while (1)
  {
    unint64_t v117 = v114;
    unint64_t v118 = v116;
    if (v114 == *((void *)a1 + 4) && v116 == *((void *)a1 + 5)) {
      break;
    }
    uint64_t v119 = *v115;
    uint64_t v120 = *(void *)(*v115 + 88 * v114);
    long long v121 = (uint64_t *)(v120 + 96 * v118);
    uint64_t v122 = *v121;
    unint64_t v123 = v121[2];
    if (v123 <= 1) {
      unint64_t v123 = 1;
    }
    if (*((void *)v66 + 7) == 2)
    {
      long long v124 = (double *)*((void *)v66 + 9);
      double v125 = v66[5];
      double v126 = v66[2] + v66[4];
      if (*((unsigned char *)v66 + 64)) {
        double v126 = 0.0;
      }
      double v127 = v124[v122];
      double v128 = v124[v123 + v122] - v127 - v125;
      double v129 = *(double *)(*((void *)v66 + 10) - 8) - *v124 - v125 + v126 - v127 - v128;
    }
    else
    {
      uint64_t v130 = *((void *)v66 + 9);
      double v129 = *(double *)(v130 + 8 * v122);
      double v128 = *(double *)(v130 + 8 * (v123 + v122)) - v129 - v66[5];
    }
    uint64_t v131 = v120 + 96 * v118;
    uint64_t v133 = *(void *)(v131 + 48);
    uint64_t v132 = *(void *)(v131 + 56);
    if (v133 != v132)
    {
      unint64_t v167 = v118;
      unint64_t v134 = 0;
      double v135 = 0.0;
      do
      {
        double v136 = 0.0;
        if (v134 < v169) {
          double v136 = v186[v134];
        }
        unint64_t v137 = (unint64_t)[*(id *)v133 valign] - 1;
        double v138 = 0.0;
        if (v137 <= 3) {
          double v138 = dbl_2433D0[v137];
        }
        double v139 = *(double *)(v133 + 56);
        uint64_t v140 = *((void *)v66 + 7);
        unint64_t v141 = (char *)[*(id *)v133 halign];
        double v142 = v138 * (v136 - v139);
        if (v141 == (unsigned char *)&def_141F14 + 3) {
          double v143 = 1.0;
        }
        else {
          double v143 = 0.0;
        }
        if (v141 == (unsigned char *)&def_141F14 + 2) {
          double v143 = 0.5;
        }
        if (v140 != 2) {
          double v143 = 1.0 - v143;
        }
        double v144 = v129 + *((double *)a1 + 6) + v143 * (v128 - *(double *)(v133 + 48));
        double v145 = v142 + v135 + *((double *)a1 + 7);
        *(double *)(v133 + 32) = v144;
        *(double *)(v133 + 40) = v145;
        uint64_t v146 = *(void *)(v133 + 8);
        uint64_t v147 = *(void *)(v133 + 16);
        while (v146 != v147)
        {
          uint64_t v148 = *(void *)(v146 + 56);
          uint64_t v149 = a3[14] + 152 * v148;
          int v150 = (const CGPoint *)(v149 + 136);
          p_CGFloat y = (CGFloat *)(v149 + 144);
          BOOL v152 = v148 == -1;
          if (v148 == -1) {
            unsigned int v153 = &CGPointZero;
          }
          else {
            unsigned int v153 = v150;
          }
          if (v152) {
            p_CGFloat y = &CGPointZero.y;
          }
          sub_69564((double *)(v146 + 8), v144 - v153->x + *(double *)(v146 + 72), v145 - *p_y + *(double *)(v146 + 64));
          v146 += 96;
        }
        double v135 = v135 + v136;
        ++v134;
        v133 += 64;
        uint64_t v66 = v168;
      }
      while (v133 != v132);
      id v115 = v165;
      unint64_t v118 = v167;
      uint64_t v119 = *v165;
    }
    unint64_t v116 = 0;
    unint64_t v114 = 0x2E8BA2E8BA2E8BA3 * ((v115[1] - v119) >> 3);
    if (v117 < v114)
    {
      unint64_t v116 = v118 + 1;
      unsigned int v154 = (void *)(v119 + 88 * v117 + 8);
      while (v116 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v154 - *(v154 - 1)) >> 5))
      {
        unint64_t v116 = 0;
        ++v117;
        v154 += 11;
        if (v114 == v117) {
          goto LABEL_155;
        }
      }
      unint64_t v114 = v117;
    }
  }
  unint64_t v156 = *((void *)a1 + 12);
  unsigned int v155 = (void *)*((void *)a1 + 13);
  *((void *)a1 + 12) = v184;
  long long v157 = a1[5];
  a1[5] = v183;
  long long v183 = v157;
  unint64_t v184 = v156;
  *(long long *)((char *)a1 + 104) = __p;
  uint64_t v158 = *((void *)a1 + 15);
  *((void *)a1 + 15) = v182;
  *(void *)&long long __p = v155;
  uint64_t v182 = v158;
  double v159 = v66[2] + v66[4];
  if (*((unsigned char *)v66 + 64)) {
    double v159 = 0.0;
  }
  double v160 = *(double *)(*((void *)v66 + 10) - 8) - **((double **)v66 + 9) - v66[5] + v159;
  *((double *)a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v160;
  *((void *)a1 + 9) = v163;
  if (v155)
  {
    *((void *)&__p + 1) = v155;
    operator delete(v155);
  }
  *(void *)&long long __p = &v183;
  sub_964DC((void ***)&__p);
  if (v186)
  {
    int v187 = v186;
    operator delete(v186);
  }
  return v160;
}

void sub_954CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,char *__p,char *a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38)
{
  if (__p)
  {
    a34 = __p;
    operator delete(__p);
  }
  long long __p = &a37;
  sub_964DC((void ***)&__p);
  uint64_t v40 = *(void **)(v38 - 184);
  if (v40)
  {
    *(void *)(v38 - 176) = v40;
    operator delete(v40);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_955B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    sub_9739C(a3, *(void *)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        uint64_t v8 = v7 - 40;

        uint64_t v7 = v8;
      }
      while (v8 != v6);
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x2D0], 8) = v6;
  }
  return a2;
}

double *sub_95630(id *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  double v14 = *(double *)(a4 + 32);
  double v15 = *(double *)a4;
  double v38 = *(double *)(a4 + 8);
  long long v30 = *(_OWORD *)(a4 + 16);
  long long v39 = v30;
  double v40 = v14;
  uint64_t v16 = sub_620A0(a3, (char *)&def_141F14 + 1);
  if (*(void *)(a3 + 32) != v16)
  {
    uint64_t v17 = v16;
    sub_68438((uint64_t)&v37, 0, *(void *)(v16 + 40), *(void *)(v16 + 48), *(double *)&v30);
    *(double *)(v17 + 72) = v18;
    *(void *)(v17 + 80) = v19;
    double v20 = *(double *)&v39 - v18;
    double v21 = v15 - *(double *)&v39 + v20 * 0.5;
    double v22 = v20 * 0.5;
    if (*(void *)(a4 + 56) == 2) {
      double v22 = v21;
    }
    double v35 = a6 + v22;
    double v36 = a7 + v38;
    *(void *)&long long v33 = &v38;
    *((void *)&v33 + 1) = a2;
    uint64_t v34 = &v35;
    sub_97964(a5, (uint64_t *)v17, (uint64_t *)(v17 + 96), &v33);
    sub_97CF8(v17, &dword_4, a2, (uint64_t)a5, v35, v36);
    sub_622EC(v17, 1);
    [*a1 addObjectsFromArray:*(void *)(v17 + 88)];
  }
  uint64_t result = (double *)sub_620A0(a3, (char *)&def_141F14 + 2);
  if (*(double **)(a3 + 32) != result)
  {
    unint64_t v24 = result;
    sub_68438((uint64_t)&v37, 0, *((void *)result + 5), *((void *)result + 6), v40);
    double v26 = v25;
    v24[9] = v25;
    *((void *)v24 + 10) = v27;
    __int16 v28 = (uint64_t *)sub_620A0(a3, (char *)&def_141F14 + 2);
    double v29 = v15 - v40 + (v40 - v26) * 0.5;
    if (*(void *)(a4 + 56) == 2) {
      double v29 = (v40 - v26) * 0.5;
    }
    double v35 = a6 + v29;
    double v36 = a7 + v38;
    *(void *)&long long v31 = &v38;
    *((void *)&v31 + 1) = a2;
    uint64_t v32 = &v35;
    sub_97EBC(a5, v28, v28 + 12, &v31);
    sub_97CF8((uint64_t)v24, &dword_4, a2, (uint64_t)a5, v35, v36);
    sub_622EC((uint64_t)v24, 1);
    return (double *)[*a1 addObjectsFromArray:*((void *)v24 + 11)];
  }
  return result;
}

uint64_t sub_95848(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 104);
  if (v2)
  {
    *(void *)(a1 + 112) = v2;
    operator delete(v2);
  }
  id v4 = (void **)(a1 + 80);
  sub_964DC(&v4);
  return a1;
}

void sub_959F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_95C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_96184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_96348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_96488(uint64_t *a1)
{
  *a1 = 0;
  uint64_t v2 = objc_opt_new();
  uint64_t v3 = (void *)*a1;
  *a1 = v2;

  return a1;
}

void sub_964C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_964DC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_96530((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_96530(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      uint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_96588(unint64_t *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v4 = *a1;
  uint64_t v25 = 0x7FF8000000000000;
  sub_68854((uint64_t)a2, v4, &v25);
  uint64_t v5 = (void *)*a2;
  *(void *)*a2 = 0;
  unint64_t v6 = *a1;
  uint64_t v7 = 8 * *a1;
  if (*a1 >= 2)
  {
    unint64_t v8 = a1[1];
    uint64_t v9 = 1;
    do
    {
      unint64_t v10 = 0;
      uint64_t v11 = 0;
      double v12 = NAN;
      uint64_t v13 = 2;
      unint64_t v14 = v8;
      do
      {
        double v15 = (double *)(v14 - 8 * (v10 >> 1));
        if (v12 < *v15 + *(double *)&v5[v11]) {
          double v12 = *v15 + *(double *)&v5[v11];
        }
        ++v11;
        v14 += v7 - 8;
        v10 += v13;
        v13 += 2;
      }
      while (v9 != v11);
      *(double *)&v5[v9++] = v12;
      v8 += 8;
    }
    while (v9 != v6);
  }
  if (v6)
  {
    unint64_t v16 = v6 - 1;
    uint64_t v17 = v7 - 16;
    uint64_t v18 = v7 - 8;
    do
    {
      double v19 = *(double *)&v5[--v6];
      if (v6)
      {
        unint64_t v20 = 0;
        uint64_t v21 = 0;
        unint64_t v22 = a1[1] + v17;
        uint64_t v23 = 2;
        do
        {
          double v24 = v19 - *(double *)(v22 - 8 * (v20 >> 1));
          if (v24 >= *(double *)&v5[v21]) {
            double v24 = *(double *)&v5[v21];
          }
          *(double *)&v5[v21++] = v24;
          v22 += v18;
          v20 += v23;
          v23 += 2;
        }
        while (v16 != v21);
      }
      --v16;
      v17 -= 8;
    }
    while (v6);
  }
}

void sub_96704(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(&STACK[0x2D0], 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_96720(void *a1, size_t size, uint64_t a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    unint64_t v43 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = 64;
    memset(ptr, 0, sizeof(ptr));
    uint64_t v7 = *(void **)size;
    unint64_t v6 = *(void *)(size + 8);
    unint64_t v8 = ptr;
    unint64_t v9 = *(void *)(size + 16);
    uint64_t v32 = *(void **)size;
    uint64_t v33 = a3;
LABEL_3:
    while (1)
    {
      unint64_t v10 = v9;
      unint64_t v11 = v6;
      if (v6 == *(void *)(a3 + 8) && v9 == *(void *)(a3 + 16)) {
        break;
      }
      uint64_t v12 = *(void *)(*v7 + 88 * v6);
      if (v43 >= v5)
      {
        unint64_t v13 = v5 + 64;
        unint64_t v36 = v13;
        if (v8 == ptr)
        {
          unint64_t v8 = malloc_type_malloc(8 * v13, 0x2004093837F09uLL);
          memcpy(v8, ptr, 8 * v43);
        }
        else
        {
          unint64_t v8 = malloc_type_realloc(v8, 8 * v13, 0x2004093837F09uLL);
        }
      }
      else
      {
        unint64_t v36 = v5;
      }
      unint64_t v34 = v10;
      double v35 = v8;
      uint64_t v42 = (uint64_t *)(v12 + 96 * v10);
      *((void *)v8 + v43) = v42;
      uint64_t v37 = v42[7];
      if (v42[6] != v37)
      {
        unint64_t v14 = 0;
        double v15 = (uint64_t *)(v12 + 96 * v10);
        unint64_t v16 = v15 + 1;
        uint64_t v17 = v15 + 2;
        uint64_t v18 = v15 + 3;
        uint64_t v19 = v42[6];
        do
        {
          uint64_t v38 = v19;
          uint64_t v39 = *(void *)(v19 + 16);
          uint64_t v20 = *(void *)(v19 + 8);
          if (v20 != v39)
          {
            do
            {
              uint64_t v21 = v20;
              uint64_t v22 = a1[8];
              uint64_t v40 = v21;
              unint64_t v23 = (*(void *)(v21 + 8) - v22) >> 3;
              uint64_t v24 = *(void *)(v21 + 16) - v22;
              if (v23 < v24 >> 3)
              {
                uint64_t v41 = v24 >> 3;
                do
                {
                  uint64_t v25 = *(void *)(a1[11] + 8 * v23);
                  if (v25 != -1)
                  {
                    if (!v4) {
                      unint64_t v4 = objc_opt_new();
                    }
                    do
                    {
                      if (([v4 containsIndex:v25] & 1) == 0)
                      {
                        uint64_t v26 = a1[14] + 152 * v25;
                        *(void *)uint64_t v26 = -1;
                        *(_OWORD *)(v26 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v26 + 24) = 0u;
                        *(_OWORD *)(v26 + 40) = 0u;
                        [v4 addIndex:v25];
                      }
                      unint64_t v27 = v23;
                      uint64_t v28 = a1[14];
                      sub_69170((void *)(v28 + 152 * v25), v43, *v42, *v16, v14, *v17, *v18, 1uLL);
                      uint64_t v25 = *(void *)(v28 + 152 * v25 + 128);
                      unint64_t v23 = v27;
                    }
                    while (v25 != -1);
                  }
                  ++v23;
                }
                while (v23 != v41);
              }
              uint64_t v20 = v40 + 96;
            }
            while (v40 + 96 != v39);
          }
          ++v14;
          uint64_t v19 = v38 + 64;
        }
        while (v38 + 64 != v37);
      }
      unint64_t v9 = 0;
      ++v43;
      uint64_t v7 = v32;
      a3 = v33;
      unint64_t v6 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v32[1] - *v32) >> 3);
      unint64_t v8 = v35;
      unint64_t v29 = v11;
      unint64_t v5 = v36;
      if (v11 < v6)
      {
        unint64_t v9 = v34 + 1;
        long long v30 = (void *)(*v32 + 88 * v11 + 8);
        while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v30 - *(v30 - 1)) >> 5))
        {
          unint64_t v9 = 0;
          ++v29;
          v30 += 11;
          if (v6 == v29) {
            goto LABEL_3;
          }
        }
        unint64_t v6 = v29;
      }
    }
    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3221225472;
    v49[2] = sub_9717C;
    v49[3] = &unk_253220;
    void v49[4] = a1;
    long long v50 = *a4;
    uint64_t v51 = *((void *)a4 + 2);
    uint64_t v52 = v8;
    [v4 enumerateRangesUsingBlock:v49];
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472;
    v45[2] = sub_972B8;
    _OWORD v45[3] = &unk_253220;
    void v45[4] = a1;
    long long v46 = *a4;
    uint64_t v47 = *((void *)a4 + 2);
    id v48 = v8;
    [v4 enumerateRangesWithOptions:2 usingBlock:v45];
    if (v8 != ptr) {
      free(v8);
    }
  }
}

void sub_96BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_96BCC(uint64_t *a1, long long **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_12768(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  unint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  double v15 = v11;
  unint64_t v16 = &v10[24 * v9];
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_96FB8(v11, *a2, a2[1], a2[1] - *a2);
  v15 += 24;
  sub_96CE4(a1, v14);
  uint64_t v12 = a1[1];
  sub_96EA4((uint64_t)v14);
  return v12;
}

void sub_96CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_96EA4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_96CE4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_96D5C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_96D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v18 = a6;
  *((void *)&v18 + 1) = a7;
  long long v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  char v16 = 0;
  if (a3 == a5)
  {
    uint64_t v13 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      uint64_t v10 = v7 - 24;
      *(void *)(v10 + 16) = 0;
      unint64_t v11 = *(long long **)(v9 - 24);
      uint64_t v12 = *(long long **)(v9 - 16);
      v9 -= 24;
      sub_96FB8((char *)v10, v11, v12, v12 - v11);
      uint64_t v7 = *((void *)&v18 + 1) - 24;
      *((void *)&v18 + 1) -= 24;
    }
    while (v9 != a5);
    uint64_t v13 = v18;
  }
  char v16 = 1;
  sub_96E24((uint64_t)v15);
  return v13;
}

void sub_96E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_96E24(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_96E5C(a1);
  }
  return a1;
}

void sub_96E5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + _Block_object_dispose(&STACK[0x2D0], 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_96EA4(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_96EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void *sub_96F38(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  uint64_t v4 = 0x7FF8000000000000;
  sub_68854((uint64_t)(a1 + 1), (unint64_t)((a2 - 1) * a2) >> 1, &v4);
  return a1;
}

void sub_96F9C(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

char *sub_96FB8(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_28D8C(result, a4);
    uint64_t v7 = (_OWORD *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_97010(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(&STACK[0x2D0], 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_9702C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      sub_4484();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_97138(v7, v11);
    uint64_t v13 = (char *)v7[1];
    uint64_t v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      long long v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  char v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    long long v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *uint64_t v12 = &v9[v17];
  return result;
}

char *sub_97138(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_4484();
  }
  uint64_t result = (char *)sub_39FA0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_9717C(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = 152 * a2 + 120;
    do
    {
      uint64_t v7 = *(void *)(v5 + 112);
      uint64_t v8 = *(void *)(v7 + v6 - 112);
      unint64_t v9 = *(void *)(v7 + v6 - 88);
      uint64_t v10 = v4[5];
      if (v9 <= 1) {
        unint64_t v9 = 1;
      }
      if (*(void *)(v10 + 56) == 2)
      {
        double v11 = 0.0;
        if (!*(unsigned char *)(v10 + 64)) {
          double v11 = *(double *)(v10 + 16) + *(double *)(v10 + 32);
        }
        uint64_t v12 = *(double **)(v10 + 72);
        double v13 = *(double *)(*(void *)(v10 + 80) - 8)
            - *v12
            - *(double *)(v10 + 40)
            + v11
            - v12[v8]
            - (v12[v9 + v8]
             - v12[v8]
             - *(double *)(v10 + 40));
      }
      else
      {
        double v13 = *(double *)(*(void *)(v10 + 72) + 8 * v8);
      }
      uint64_t v14 = v4[7];
      double v15 = *(double *)(*(void *)v4[6] + 8 * *(void *)(v7 + v6 - 96));
      double v16 = *(double *)(v14 + 48);
      double v17 = *(double *)(v14 + 56);
      uint64_t v18 = v7 + v6;
      uint64_t v19 = *(void **)(v7 + v6);
      uint64_t v20 = *(void *)(v7 + v6 + 8);
      uint64_t v21 = v7 + 152 * v20;
      BOOL v22 = v20 == -1;
      p_CGFloat y = &CGPointZero.y;
      if (!v22) {
        p_CGFloat y = (CGFloat *)(v21 + 144);
      }
      double v24 = v13 + v16;
      double v25 = v15 + v17;
      uint64_t v26 = (const CGPoint *)(v21 + 136);
      if (v22) {
        uint64_t v26 = &CGPointZero;
      }
      double v27 = *p_y;
      double x = v26->x;
      *(double *)(v18 + 16) = v24;
      *(double *)(v18 + 24) = v25;
      uint64_t result = [v19 setComputedOrigin:v24 - x, v25 - v27];
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_972B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = 152 * (a2 + a3) - 32;
    do
    {
      uint64_t v7 = (id *)(*(void *)(v5 + 112) + v6);
      unint64_t v8 = (unint64_t)*(v7 - 11);
      if (v8 <= 1) {
        unint64_t v8 = 1;
      }
      double v9 = *(double *)(*(void *)(*(void *)(a1 + 40) + 72) + 8 * ((void)*(v7 - 14) + v8))
         - *(double *)(*(void *)(*(void *)(a1 + 40) + 72) + 8 * (void)*(v7 - 14))
         - *(double *)(*(void *)(a1 + 40) + 40);
      double v10 = *(double *)(**(void **)(a1 + 48) + 8 * ((uint64_t)*(v7 - 12) + (void)*(v7 - 9)))
          - *(double *)(**(void **)(a1 + 48) + 8 * (void)*(v7 - 12));
      double v11 = [*v7 controller];
      [v11 validateGroupedContainingLayout:*v7 withSize:v9, v10];

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_9738C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_9739C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_973FC(a3, v4);
      v4 += 40;
      a3 += 40;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_973FC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v3;
    objc_storeStrong((id *)(a1 + 32), *(id *)(a2 + 32));
  }
  return a1;
}

uint64_t sub_9743C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  v15[4] = a1 + 2;
  if (v9) {
    double v10 = (char *)sub_69ED0(v7, v9);
  }
  else {
    double v10 = 0;
  }
  double v11 = &v10[40 * v4];
  v15[0] = v10;
  v15[1] = v11;
  void v15[3] = &v10[40 * v9];
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)double v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 4) = *(id *)(a2 + 32);
  v15[2] = v11 + 40;
  sub_97548(a1, v15);
  uint64_t v13 = a1[1];
  sub_97600((uint64_t)v15);
  return v13;
}

void sub_97534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_97600((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_97548(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  if (v4 == *result)
  {
    uint64_t v7 = a2[1];
  }
  else
  {
    do
    {
      uint64_t v7 = v6 - 40;
      uint64_t v8 = v4 - 40;
      long long v9 = *(_OWORD *)(v4 - 40);
      *(_OWORD *)(v6 - 24) = *(_OWORD *)(v4 - 24);
      *(_OWORD *)(v6 - 40) = v9;
      uint64_t result = (uint64_t *)*(id *)(v4 - 8);
      *(void *)(v6 - _Block_object_dispose(&STACK[0x2D0], 8) = result;
      v6 -= 40;
      uint64_t v4 = v8;
    }
    while (v8 != v5);
  }
  a2[1] = v7;
  uint64_t v10 = *v3;
  uint64_t *v3 = v7;
  a2[1] = v10;
  uint64_t v11 = v3[1];
  v3[1] = a2[2];
  a2[2] = v11;
  uint64_t v12 = v3[2];
  int v3[2] = a2[3];
  a2[3] = v12;
  *a2 = a2[1];
  return result;
}

uint64_t sub_97600(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

double sub_97654(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a3 == a4) {
    return 0.0;
  }
  uint64_t v8 = a3;
  double v11 = 0.0;
  double v12 = 0.0;
  do
  {
    double v13 = sub_976FC(v8, a2, a1, NAN, a6);
    if (v12 < v14) {
      double v12 = v14;
    }
    double v11 = v11 + v13;
    v8 += 64;
  }
  while (v8 != a4);
  return v11;
}

double sub_976FC(uint64_t a1, int a2, uint64_t a3, double a4, double a5)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  double width = CGSizeZero.width;
  for (double i = CGSizeZero.height; v6 != v7; v6 += 96)
  {
    double v14 = sub_977A4(v6, a2, a3, a4, a5);
    if (width < v14) {
      double width = v14;
    }
    if (i < v15) {
      double i = v15;
    }
  }
  *(double *)(a1 + sub_3BD4((uint64_t)this + 48) = width;
  *(double *)(a1 + 56) = i;
  return width;
}

double sub_977A4(uint64_t a1, int a2, uint64_t a3, double a4, double a5)
{
  double v6 = sub_97820(a4 - (*(double *)(a1 + 72) + *(double *)(a1 + 88)), a5 - (*(double *)(a1 + 64) + *(double *)(a1 + 80)), a3, a2, *(id **)(a1 + 8), *(id **)(a1 + 16));
  *(double *)(a1 + 40) = v6;
  *(void *)(a1 + sub_3BD4((uint64_t)this + 48) = v7;
  return v6 + *(double *)(a1 + 72) + *(double *)(a1 + 88);
}

double sub_97820(double a1, double a2, uint64_t a3, int a4, id *a5, id *a6)
{
  if (a5 == a6) {
    return 0.0;
  }
  uint64_t v8 = a5;
  if (a4) {
    double v9 = a2;
  }
  else {
    double v9 = NAN;
  }
  double v10 = 0.0;
  double v11 = 0.0;
  do
  {
    [*v8 setContainingWidth:NAN];
    [*v8 setContainingHeight:a2];
    [*v8 setFlexedWidth:NAN];
    [*v8 setFlexedHeight:v9];
    [*v8 validateLayout];
    id v12 = *v8++;
    [v12 computedNaturalSize];
    if (v11 < v14) {
      double v11 = v14;
    }
    double v10 = v10 + v13;
  }
  while (v8 != a6);
  return v10;
}

uint64_t sub_978F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = CGRectEqualToRect(*(CGRect *)a2, *(CGRect *)a3);
  if (result)
  {
    double v6 = *(void **)(a2 + 32);
    if (v6 == *(void **)(a3 + 32))
    {
      return 1;
    }
    else
    {
      return (uint64_t)[v6 isEqual:];
    }
  }
  return result;
}

void sub_97964(void *a1, uint64_t *size, uint64_t *a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    uint64_t v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      double v6 = 0;
      double v9 = ptr;
    }
    else
    {
      double v6 = 0;
      unint64_t v7 = 0;
      unint64_t v8 = 64;
      double v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            double v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            double v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        unint64_t v22 = v8;
        unint64_t v23 = v9;
        *((void *)v9 + v7) = v4;
        uint64_t v10 = v4[5];
        uint64_t v24 = v4[6];
        if (v10 != v24)
        {
          unint64_t v11 = 0;
          do
          {
            uint64_t v25 = v10;
            uint64_t v13 = *(void *)(v10 + 8);
            uint64_t v12 = *(void *)(v10 + 16);
            uint64_t v26 = v12;
            while (v13 != v12)
            {
              uint64_t v14 = a1[8];
              uint64_t v27 = v13;
              unint64_t v15 = (*(void *)(v13 + 8) - v14) >> 3;
              uint64_t v16 = *(void *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                uint64_t v28 = v16 >> 3;
                do
                {
                  uint64_t v17 = *(void *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6) {
                      double v6 = objc_opt_new();
                    }
                    do
                    {
                      if (([v6 containsIndex:v17] & 1) == 0)
                      {
                        uint64_t v18 = a1[14] + 152 * v17;
                        *(void *)uint64_t v18 = -1;
                        *(_OWORD *)(v18 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        [v6 addIndex:v17];
                      }
                      uint64_t v19 = a1[14];
                      sub_69170((void *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      uint64_t v17 = *(void *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              uint64_t v12 = v26;
              uint64_t v13 = v27 + 96;
            }
            ++v11;
            uint64_t v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        unint64_t v8 = v22;
        double v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_98250;
    void v33[3] = &unk_253220;
    void v33[4] = a1;
    long long v34 = *a4;
    uint64_t v35 = *((void *)a4 + 2);
    unint64_t v36 = v9;
    [v6 enumerateRangesUsingBlock:v33];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_98314;
    void v29[3] = &unk_253220;
    void v29[4] = a1;
    long long v30 = *a4;
    uint64_t v31 = *((void *)a4 + 2);
    uint64_t v32 = v9;
    [v6 enumerateRangesWithOptions:2 usingBlock:v29];
    if (v9 != ptr) {
      free(v9);
    }
  }
}

void sub_97CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_97CF8(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v35 = *(void *)(a1 + 48);
  if (v6 != v35)
  {
    unint64_t v11 = 0;
    unint64_t v12 = (a3[1] - *a3) >> 3;
    do
    {
      if (v11 >= v12) {
        unint64_t v13 = v12 - 1;
      }
      else {
        unint64_t v13 = v11;
      }
      uint64_t v14 = *a3;
      double v15 = *(double *)(*a3 + 8 * v13);
      if (*(void *)v6)
      {
        uint64_t v16 = (uint64_t)[*(id *)v6 span];
        uint64_t v14 = *a3;
        id v17 = *(id *)v6;
      }
      else
      {
        id v17 = 0;
        uint64_t v16 = 1;
      }
      v11 += v16;
      if (v11 >= v12) {
        unint64_t v18 = v12 - 1;
      }
      else {
        unint64_t v18 = v11;
      }
      double v19 = *(double *)(v14 + 8 * v18);
      double v20 = *(double *)(v6 + 56);
      id v21 = v17;
      unint64_t v22 = (int *)[v21 valign];
      double v23 = v19 - v15;

      uint64_t v24 = a2;
      if (v22) {
        uint64_t v24 = v22;
      }
      if (v24 == (int *)((char *)&def_141F14 + 1) || v24 == (int *)((char *)&def_141F14 + 3))
      {
        double v25 = v23 - v20;
      }
      else
      {
        double v25 = (v23 - v20) * 0.5;
        if (v24 != &dword_4) {
          double v25 = 0.0;
        }
      }
      double v26 = a6 + v15 + v25;
      *(double *)(v6 + 32) = a5;
      *(double *)(v6 + 40) = v26;
      uint64_t v27 = *(void *)(v6 + 8);
      uint64_t v28 = *(void *)(v6 + 16);
      while (v27 != v28)
      {
        uint64_t v29 = *(void *)(v27 + 56);
        uint64_t v30 = *(void *)(a4 + 112) + 152 * v29;
        uint64_t v31 = (const CGPoint *)(v30 + 136);
        p_CGFloat y = (CGFloat *)(v30 + 144);
        BOOL v33 = v29 == -1;
        if (v29 == -1) {
          long long v34 = &CGPointZero;
        }
        else {
          long long v34 = v31;
        }
        if (v33) {
          p_CGFloat y = &CGPointZero.y;
        }
        sub_69564((double *)(v27 + 8), a5 - v34->x + *(double *)(v27 + 72), v26 - *p_y + *(double *)(v27 + 64));
        v27 += 96;
      }
      v6 += 64;
    }
    while (v6 != v35);
  }
}

void sub_97EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_97EBC(void *a1, uint64_t *size, uint64_t *a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    uint64_t v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      uint64_t v6 = 0;
      double v9 = ptr;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      unint64_t v8 = 64;
      double v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            double v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            double v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        unint64_t v22 = v8;
        double v23 = v9;
        *((void *)v9 + v7) = v4;
        uint64_t v10 = v4[5];
        uint64_t v24 = v4[6];
        if (v10 != v24)
        {
          unint64_t v11 = 0;
          do
          {
            uint64_t v25 = v10;
            uint64_t v13 = *(void *)(v10 + 8);
            uint64_t v12 = *(void *)(v10 + 16);
            uint64_t v26 = v12;
            while (v13 != v12)
            {
              uint64_t v14 = a1[8];
              uint64_t v27 = v13;
              unint64_t v15 = (*(void *)(v13 + 8) - v14) >> 3;
              uint64_t v16 = *(void *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                uint64_t v28 = v16 >> 3;
                do
                {
                  uint64_t v17 = *(void *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6) {
                      uint64_t v6 = objc_opt_new();
                    }
                    do
                    {
                      if (([v6 containsIndex:v17] & 1) == 0)
                      {
                        uint64_t v18 = a1[14] + 152 * v17;
                        *(void *)uint64_t v18 = -1;
                        *(_OWORD *)(v18 + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        [v6 addIndex:v17];
                      }
                      uint64_t v19 = a1[14];
                      sub_69170((void *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      uint64_t v17 = *(void *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              uint64_t v12 = v26;
              uint64_t v13 = v27 + 96;
            }
            ++v11;
            uint64_t v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        unint64_t v8 = v22;
        double v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_983D0;
    void v33[3] = &unk_253220;
    void v33[4] = a1;
    long long v34 = *a4;
    uint64_t v35 = *((void *)a4 + 2);
    unint64_t v36 = v9;
    [v6 enumerateRangesUsingBlock:v33];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_98494;
    void v29[3] = &unk_253220;
    void v29[4] = a1;
    long long v30 = *a4;
    uint64_t v31 = *((void *)a4 + 2);
    uint64_t v32 = v9;
    [v6 enumerateRangesWithOptions:2 usingBlock:v29];
    if (v9 != ptr) {
      free(v9);
    }
  }
}

void sub_9822C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_98250(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = 152 * a2;
    do
    {
      uint64_t v7 = *(void *)(v5 + 112);
      uint64_t v8 = v7 + v6;
      double v9 = (double *)v4[7];
      double v10 = *(double *)(*(void *)v4[6] + 8 * *(void *)(v7 + v6 + 24));
      unint64_t v11 = *(void **)(v7 + v6 + 120);
      uint64_t v12 = *(void *)(v7 + v6 + 128);
      uint64_t v13 = v7 + 152 * v12;
      BOOL v14 = v12 == -1;
      p_CGFloat y = &CGPointZero.y;
      if (!v14) {
        p_CGFloat y = (CGFloat *)(v13 + 144);
      }
      double v16 = *v9 + 0.0;
      double v17 = v10 + v9[1];
      uint64_t v18 = (const CGPoint *)(v13 + 136);
      if (v14) {
        uint64_t v18 = &CGPointZero;
      }
      double v19 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      uint64_t result = [v11 setComputedOrigin:v16 - x, v17 - v19];
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_98314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = 152 * (a2 + a3);
    do
    {
      uint64_t v7 = *(void *)(v5 + 112) + v6;
      double v8 = *(double *)(*(void *)(a1 + 40) + 8);
      double v9 = *(double *)(**(void **)(a1 + 48) + 8 * (*(void *)(v7 - 104) + *(void *)(v7 - 128)))
         - *(double *)(**(void **)(a1 + 48) + 8 * *(void *)(v7 - 128));
      double v10 = [*(id *)(v7 - 32) controller];
      [v10 validateGroupedContainingLayout:*(void *)(v7 - 32) withSize:v8, v9];

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_983C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_983D0(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = 152 * a2;
    do
    {
      uint64_t v7 = *(void *)(v5 + 112);
      uint64_t v8 = v7 + v6;
      double v9 = (double *)v4[7];
      double v10 = *(double *)(*(void *)v4[6] + 8 * *(void *)(v7 + v6 + 24));
      unint64_t v11 = *(void **)(v7 + v6 + 120);
      uint64_t v12 = *(void *)(v7 + v6 + 128);
      uint64_t v13 = v7 + 152 * v12;
      BOOL v14 = v12 == -1;
      p_CGFloat y = &CGPointZero.y;
      if (!v14) {
        p_CGFloat y = (CGFloat *)(v13 + 144);
      }
      double v16 = *v9 + 0.0;
      double v17 = v10 + v9[1];
      uint64_t v18 = (const CGPoint *)(v13 + 136);
      if (v14) {
        uint64_t v18 = &CGPointZero;
      }
      double v19 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      uint64_t result = [v11 setComputedOrigin:v16 - x, v17 - v19];
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_98494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = 152 * (a2 + a3);
    do
    {
      uint64_t v7 = *(void *)(v5 + 112) + v6;
      double v8 = *(double *)(*(void *)(a1 + 40) + 8);
      double v9 = *(double *)(**(void **)(a1 + 48) + 8 * (*(void *)(v7 - 104) + *(void *)(v7 - 128)))
         - *(double *)(**(void **)(a1 + 48) + 8 * *(void *)(v7 - 128));
      double v10 = [*(id *)(v7 - 32) controller];
      [v10 validateGroupedContainingLayout:v7 withSize:v8, v9];

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_98540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_98550(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (id *)**a1;
  if (v2)
  {
    uint64_t v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 5;

        uint64_t v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_987BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_987CC(uint64_t a1)
{
}

void sub_987D4(uint64_t a1)
{
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 64), *(id *)(a1 + 40));
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v3 = [TUIPair alloc];
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v2)
  {
    uint64_t v6 = [*(id *)(v5 + 16) from];
    uint64_t v7 = [(TUIPair *)v4 initWithFirst:v6 second:*(void *)(*(void *)(a1 + 32) + 32)];
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    double v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    id v10 = *(id *)(*(void *)(a1 + 32) + 16);
    id v11 = *(id *)(*(void *)(a1 + 32) + 32);
    id v12 = *(id *)(*(void *)(a1 + 32) + 8);
    objc_initWeak(&location, *(id *)(a1 + 32));
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    void v28[2] = sub_98A1C;
    v28[3] = &unk_2543A0;
    objc_copyWeak(&v33, &location);
    id v29 = *(id *)(a1 + 40);
    id v13 = v11;
    id v30 = v13;
    id v14 = v10;
    id v31 = v14;
    id v15 = v12;
    id v32 = v15;
    id v16 = [v28 copy];
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = *(void **)(v17 + 24);
    *(void *)(v17 + 24) = v16;

    uint64_t v19 = *(void *)(a1 + 32);
    double v20 = *(void **)(v19 + 16);
    *(void *)(v19 + 16) = 0;

    uint64_t v21 = *(void *)(a1 + 32);
    unint64_t v22 = *(void **)(v21 + 32);
    *(void *)(v21 + 32) = 0;

    uint64_t v23 = *(void *)(a1 + 32);
    uint64_t v24 = *(void **)(v23 + 8);
    *(void *)(v23 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;

    objc_destroyWeak(&v33);
    objc_destroyWeak(&location);
  }
  else
  {
    uint64_t v25 = [(TUIPair *)v3 initWithFirst:*(void *)(v5 + 72) second:*(void *)(v5 + 88)];
    uint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v27 = *(void **)(v26 + 40);
    *(void *)(v26 + 40) = v25;
  }
}

void sub_98A00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_98A1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (objc_opt_respondsToSelector()) {
      [*(id *)(a1 + 32) updateHostingMap:*(void *)(a1 + 40) controller:WeakRetained];
    }
    uint64_t v3 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_98AF0;
    double v5[3] = &unk_251990;
    uint64_t v4 = *(void *)(a1 + 48);
    id v6 = *(id *)(a1 + 56);
    [v3 applyUpdate:v4 controller:WeakRetained completion:v5];
  }
}

id sub_98AF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeAllObjects];
}

void sub_98BE8(uint64_t a1)
{
}

void sub_98CEC(uint64_t a1)
{
  uint64_t v2 = [[TUIPair alloc] initWithFirst:*(void *)(*(void *)(a1 + 32) + 72) second:*(void *)(*(void *)(a1 + 32) + 88)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_98E38(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 64));

  if (v2 == WeakRetained)
  {
    uint64_t v4 = (id *)(*(void *)(a1 + 40) + 64);
    objc_storeWeak(v4, 0);
  }
}

id sub_98F7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateWithHostingMap:*(void *)(a1 + 40) transactionGroup:*(void *)(a1 + 48)];
}

void sub_99118(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_99130(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 88), *(id *)(a1 + 40));
  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if (*(unsigned char *)(v5 + 40))
    {
      id v6 = *(void **)(a1 + 40);
      objc_storeStrong((id *)(v5 + 32), v6);
    }
  }
}

id sub_991BC(void *a1)
{
  return [*(id *)(*(void *)(a1[6] + 8) + 40) updateHostingMap:a1[4] controller:a1[5]];
}

id sub_992E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateWithRenderModel:*(void *)(a1 + 40) viewState:*(void *)(a1 + 48) flags:*(void *)(a1 + 64) transactionGroup:*(void *)(a1 + 56)];
}

void sub_99B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
}

void sub_99B50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  uint64_t v3 = *(void *)(*(void *)(a1 + 72) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), *(id *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 32);
  if (*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) || !*(unsigned char *)(v5 + 40))
  {
    id v6 = *(void **)(v5 + 16);
    *(void *)(v5 + 16) = 0;

    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 32);
    *(void *)(v7 + 32) = 0;

    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = *(void **)(v9 + 8);
    *(void *)(v9 + _Block_object_dispose(&STACK[0x2D0], 8) = 0;
  }
  else
  {
    objc_storeStrong((id *)(v5 + 16), *(id *)(a1 + 56));
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = *(id *)(a1 + 64);
    id v10 = *(void **)(v11 + 8);
    *(void *)(v11 + _Block_object_dispose(&STACK[0x2D0], 8) = v12;
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 40) = 0;
}

void sub_99C20(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_99D08;
  void v9[3] = &unk_252678;
  uint64_t v7 = *(void **)(a1 + 48);
  id v10 = v3;
  uint64_t v11 = v6;
  id v12 = v7;
  id v13 = *(id *)(a1 + 56);
  id v8 = v3;
  [v4 applyUpdate:v5 controller:v6 completion:v9];
}

void sub_99D08(uint64_t a1)
{
  [*(id *)(a1 + 32) invalidate];
  id v2 = *(NSObject **)(*(void *)(a1 + 40) + 48);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_99DB8;
  v3[3] = &unk_251828;
  id v4 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 56);
  dispatch_async(v2, v3);
}

void sub_99DB8(uint64_t a1)
{
  [*(id *)(a1 + 32) removeAllObjects];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) resumeUnload:v7];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

id sub_9A718(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) play];
}

void sub_9C6C0(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"title";
  v6[1] = @"observe-trigger";
  void v6[2] = @"observe-trigger-value";
  void v6[3] = @"item-type";
  void v6[4] = @"opacity";
  void v6[5] = @"text";
  id v3 = +[NSArray arrayWithObjects:v6 count:6];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  uint64_t v5 = (void *)qword_2DF518;
  qword_2DF518 = (uint64_t)v4;
}

void sub_9C858(id a1)
{
  uint64_t v1 = (void *)qword_2DF528;
  qword_2DF528 = (uint64_t)&off_268618;
}

uint64_t TUIIndexMapperComputeCount(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (a1 & (a2 >> 63)) + a2;
  unint64_t v4 = a3 + (a1 & (a3 >> 63));
  if (v3 >= a1) {
    unint64_t v3 = a1;
  }
  if (v4 + 1 < a1) {
    unint64_t v5 = v4 + 1;
  }
  else {
    unint64_t v5 = a1;
  }
  BOOL v6 = __OFSUB__(v5, v3);
  uint64_t v7 = v5 - v3;
  if ((v7 < 0) ^ v6 | (v7 == 0)) {
    return 0;
  }
  else {
    return v7;
  }
}

void sub_9E318()
{
}

uint64_t *sub_9E4D0(uint64_t **a1, unint64_t a2, unint64_t a3)
{
  sub_9FA24((uint64_t)a1, a2, 0, 0);
  uint64_t result = sub_A0790(a1, a3, 0);
  if (a1 + 1 != (uint64_t **)result)
  {
    uint64_t v7 = result;
    uint64_t v8 = result[4];
    long long v10 = (unint64_t *)v8;
    *(unsigned char *)(v8 + 32) |= 3u;
    uint64_t v9 = (uint64_t)a1[8] + 1;
    a1[8] = (uint64_t *)v9;
    *(void *)(v8 + 40) = v9;
    sub_A0398(a1, result);
    operator delete(v7);
    *(void *)uint64_t v8 = a2;
    *(void *)(v8 + _Block_object_dispose(&STACK[0x2D0], 8) = 1;
    return sub_9F4C0(a1, &v10, (uint64_t *)&v10);
  }
  return result;
}

uint64_t sub_9E5A8(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a3 + a2;
  BOOL v6 = sub_A0028(a1, a3 + a2, 1);
  if (a1 + 4 == v6) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v7 = (uint64_t *)v6[4];
  unint64_t v8 = v7[2];
  BOOL v10 = v5 >= v8;
  unint64_t v9 = v5 - v8;
  BOOL v10 = !v10 || v9 >= v7[3];
  if (v10) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v11 = *v7;
  if (v11 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v12 = v11 + v9;
  if (v12 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return v12 - a3;
  }
}

id sub_9E634(uint64_t a1)
{
  id v2 = objc_opt_new();
  unint64_t v3 = *(void **)(a1 + 24);
  unint64_t v4 = (void *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      unint64_t v5 = (void *)v3[4];
      if (v5[2] != 0x7FFFFFFFFFFFFFFFLL && *v5 == 0x7FFFFFFFFFFFFFFFLL) {
        [v2 addIndexesInRange:];
      }
      BOOL v6 = (void *)v3[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          BOOL v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          unint64_t v3 = v7;
        }
        while (!v8);
      }
      unint64_t v3 = v7;
    }
    while (v7 != v4);
  }
  id v9 = [v2 copy];

  return v9;
}

void sub_9E704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_9E720(uint64_t a1)
{
  id v2 = objc_opt_new();
  unint64_t v3 = *(void **)(a1 + 24);
  unint64_t v4 = (void *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      uint64_t v5 = v3[4];
      if ((*(unsigned char *)(v5 + 32) & 1) != 0
        && *(void *)(v5 + 16) != 0x7FFFFFFFFFFFFFFFLL
        && *(void *)v5 != 0x7FFFFFFFFFFFFFFFLL)
      {
        [v2 addIndexesInRange:];
      }
      BOOL v6 = (void *)v3[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          BOOL v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          unint64_t v3 = v7;
        }
        while (!v8);
      }
      unint64_t v3 = v7;
    }
    while (v7 != v4);
  }
  id v9 = [v2 copy];

  return v9;
}

void sub_9E7F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_9E814(uint64_t a1)
{
  id v2 = objc_opt_new();
  unint64_t v3 = *(void **)(a1 + 24);
  unint64_t v4 = (void *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      uint64_t v5 = v3[4];
      uint64_t v6 = *(void *)(v5 + 16);
      if (*(unsigned char *)(v5 + 32))
      {
        if (v6 != 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_7;
        }
      }
      else if (v6 != 0x7FFFFFFFFFFFFFFFLL && *(void *)v5 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_7:
        [v2 addIndexesInRange:];
      }
      uint64_t v7 = (void *)v3[1];
      if (v7)
      {
        do
        {
          BOOL v8 = v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          BOOL v8 = (void *)v3[2];
          BOOL v9 = *v8 == (void)v3;
          unint64_t v3 = v8;
        }
        while (!v9);
      }
      unint64_t v3 = v8;
    }
    while (v8 != v4);
  }
  id v10 = [v2 copy];

  return v10;
}

void sub_9E8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_9E974(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = a1[9];
  if ((v4 & 0x8000000000000000) != 0) {
    v4 += a1[7];
  }
  uint64_t v5 = a1[10];
  unint64_t v6 = a1[7];
  if (v5 < 0) {
    v5 += v6;
  }
  if (v4 >= v6) {
    unint64_t v7 = a1[7];
  }
  else {
    unint64_t v7 = v4;
  }
  if (v5 + 1 < v6) {
    uint64_t v8 = v5 + 1;
  }
  else {
    uint64_t v8 = a1[7];
  }
  sub_9F3DC(v9, v8 - v7);
}

void sub_9EEE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_9EF2C(__CFString *a1)
{
  NSLog(@"old -> new");
  uint64_t v38 = a1;
  isa = a1->isa;
  p_info = &a1->info;
  if (a1->isa != &a1->info)
  {
    do
    {
      unint64_t v4 = (NSRange *)isa[4];
      CFStringRef v5 = @"(u)";
      if ((v4[2].location & 1) == 0) {
        CFStringRef v5 = @"   ";
      }
      unint64_t v6 = @"(m)";
      if ((v4[2].location & 2) == 0) {
        unint64_t v6 = (__CFString *)v5;
      }
      unint64_t v7 = v6;
      uint64_t v8 = &stru_257BF0;
      if (v4[2].length != 0x7FFFFFFFFFFFFFFFLL)
      {
        BOOL v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:");
        uint64_t v8 = +[NSString stringWithFormat:@"[%@]", v9];
      }
      id v10 = @"x ";
      if ((v4[2].location & 4) == 0) {
        id v10 = @"  ";
      }
      uint64_t v11 = v10;
      uint64_t v12 = @" x";
      if ((v4[2].location & 8) == 0) {
        uint64_t v12 = @"  ";
      }
      id v13 = v12;
      NSUInteger location = v4->location;
      CFStringRef v15 = @"NFound";
      if (v4->location != 0x7FFFFFFFFFFFFFFFLL)
      {
        NSStringFromRange(*v4);
        uint64_t v39 = (__CFString *)objc_claimAutoreleasedReturnValue();
        CFStringRef v15 = v39;
      }
      NSUInteger v16 = v4[1].location;
      CFStringRef v17 = @"NotFound";
      if (v16 != 0x7FFFFFFFFFFFFFFFLL)
      {
        NSStringFromRange(v4[1]);
        uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
        CFStringRef v17 = v1;
      }
      NSLog(@"%@%@ -> %@%@ %@ %@", v11, v15, v17, v13, v7, v8);
      if (v16 != 0x7FFFFFFFFFFFFFFFLL) {

      }
      if (location != 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v18 = (uint64_t *)isa[1];
      }
      if (v18)
      {
        do
        {
          uint64_t v19 = v18;
          uint64_t v18 = (uint64_t *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          uint64_t v19 = (uint64_t *)isa[2];
          BOOL v20 = *v19 == (void)isa;
          isa = v19;
        }
        while (!v20);
      }
      isa = v19;
    }
    while (v19 != p_info);
  }
  NSLog(@"new -> old");
  length = (__CFString *)v38->length;
  uint64_t v41 = v38 + 1;
  if (length != &v38[1])
  {
    do
    {
      unint64_t v22 = (NSRange *)length[1].isa;
      CFStringRef v23 = @"(u)";
      if ((v22[2].location & 1) == 0) {
        CFStringRef v23 = @"   ";
      }
      uint64_t v24 = @"(m)";
      if ((v22[2].location & 2) == 0) {
        uint64_t v24 = (__CFString *)v23;
      }
      uint64_t v25 = v24;
      uint64_t v26 = &stru_257BF0;
      if (v22[2].length != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v27 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:");
        uint64_t v26 = +[NSString stringWithFormat:@"[%@]", v27];
      }
      uint64_t v28 = @"x ";
      if ((v22[2].location & 4) == 0) {
        uint64_t v28 = @"  ";
      }
      id v29 = v28;
      id v30 = @" x";
      if ((v22[2].location & 8) == 0) {
        id v30 = @"  ";
      }
      id v31 = v30;
      NSUInteger v32 = v22->location;
      CFStringRef v33 = @"NFound";
      if (v22->location != 0x7FFFFFFFFFFFFFFFLL)
      {
        NSStringFromRange(*v22);
        uint64_t v39 = (__CFString *)objc_claimAutoreleasedReturnValue();
        CFStringRef v33 = v39;
      }
      NSUInteger v34 = v22[1].location;
      CFStringRef v35 = @"NotFound";
      if (v34 != 0x7FFFFFFFFFFFFFFFLL)
      {
        NSStringFromRange(v22[1]);
        uint64_t v38 = (__CFString *)objc_claimAutoreleasedReturnValue();
        CFStringRef v35 = v38;
      }
      NSLog(@"%@%@ <- %@%@ %@ %@", v29, v33, v35, v31, v25, v26);
      if (v34 != 0x7FFFFFFFFFFFFFFFLL) {

      }
      if (v32 != 0x7FFFFFFFFFFFFFFFLL) {
      info = (__CFString *)length->info;
      }
      if (info)
      {
        do
        {
          data = info;
          info = (__CFString *)info->isa;
        }
        while (info);
      }
      else
      {
        do
        {
          data = (__CFString *)length->data;
          BOOL v20 = data->isa == length;
          length = data;
        }
        while (!v20);
      }
      length = data;
    }
    while (data != v41);
  }
}

void sub_9F320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  if (v21 != 0x7FFFFFFFFFFFFFFFLL) {

  }
  _Unwind_Resume(a1);
}

void sub_9F3DC(void *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  a1[4] = 0;
  a1[3] = a1 + 4;
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = a2;
  a1[8] = 0;
  a1[9] = 0;
  a1[10] = -1;
  operator new();
}

void sub_9F49C(_Unwind_Exception *a1)
{
  sub_9F928(v2, *(void **)(v1 + 32));
  sub_9F928(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_9F4C0(uint64_t **a1, unint64_t **a2, uint64_t *a3)
{
  CFStringRef v5 = (uint64_t **)sub_9F544((uint64_t)a1, &v9, a2);
  unint64_t v6 = *v5;
  if (!*v5)
  {
    unint64_t v7 = v5;
    unint64_t v6 = (uint64_t *)operator new(0x28uLL);
    void v6[4] = *a3;
    sub_9F5D0(a1, v9, v7, v6);
  }
  return v6;
}

void *sub_9F544(uint64_t a1, void *a2, unint64_t **a3)
{
  CFStringRef v5 = *(void **)(a1 + 8);
  uint64_t result = (void *)(a1 + 8);
  unint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    unint64_t v7 = **a3;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = v4;
        uint64_t v9 = (unint64_t *)v4[4];
        unint64_t v10 = *v9;
        if (v7 != 0x7FFFFFFFFFFFFFFFLL || v10 != 0x7FFFFFFFFFFFFFFFLL) {
          break;
        }
        if (v6 >= v9) {
          goto LABEL_15;
        }
LABEL_13:
        unint64_t v4 = (void *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_19;
        }
      }
      if (v7 < v10) {
        goto LABEL_13;
      }
      if (v7 == 0x7FFFFFFFFFFFFFFFLL && v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_15:
        if (v9 >= v6) {
          goto LABEL_19;
        }
        goto LABEL_16;
      }
      if (v10 >= v7) {
        goto LABEL_19;
      }
LABEL_16:
      uint64_t result = v8 + 1;
      unint64_t v4 = (void *)v8[1];
      if (!v4) {
        goto LABEL_19;
      }
    }
  }
  uint64_t v8 = result;
LABEL_19:
  *a2 = v8;
  return result;
}

uint64_t *sub_9F5D0(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  CFStringRef v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_9F654(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL sub_9F628(void *a1, void *a2)
{
  if (*a1 == 0x7FFFFFFFFFFFFFFFLL && *a2 == 0x7FFFFFFFFFFFFFFFLL) {
    return a1 < a2;
  }
  else {
    return *a1 < *a2;
  }
}

uint64_t *sub_9F654(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      id v3 = (uint64_t *)v2[2];
      unint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), CFStringRef v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            uint64_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            uint64_t v9 = (uint64_t **)v2[1];
            unint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              unint64_t v10[2] = (uint64_t)v2;
              id v3 = (uint64_t *)v2[2];
            }
            void v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *uint64_t v9 = v2;
            v2[2] = (uint64_t)v9;
            id v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), CFStringRef v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            id v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          id v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        int v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t *sub_9F7EC(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  CFStringRef v5 = (uint64_t **)sub_9F870((uint64_t)a1, &v9, a2);
  int v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    int v6 = (uint64_t *)operator new(0x28uLL);
    void v6[4] = *a3;
    sub_9F5D0(a1, v9, v7, v6);
  }
  return v6;
}

void *sub_9F870(uint64_t a1, void *a2, unint64_t *a3)
{
  CFStringRef v5 = *(void **)(a1 + 8);
  uint64_t result = (void *)(a1 + 8);
  unint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    unint64_t v7 = *(void *)(*a3 + 16);
    while (1)
    {
      while (1)
      {
        int v8 = v4;
        unint64_t v9 = v4[4];
        unint64_t v10 = *(void *)(v9 + 16);
        if (v7 != 0x7FFFFFFFFFFFFFFFLL || v10 != 0x7FFFFFFFFFFFFFFFLL) {
          break;
        }
        if (v6 >= v9) {
          goto LABEL_15;
        }
LABEL_13:
        unint64_t v4 = (void *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_19;
        }
      }
      if (v7 < v10) {
        goto LABEL_13;
      }
      if (v7 == 0x7FFFFFFFFFFFFFFFLL && v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_15:
        if (v9 >= v6) {
          goto LABEL_19;
        }
        goto LABEL_16;
      }
      if (v10 >= v7) {
        goto LABEL_19;
      }
LABEL_16:
      uint64_t result = v8 + 1;
      unint64_t v4 = (void *)v8[1];
      if (!v4) {
        goto LABEL_19;
      }
    }
  }
  int v8 = result;
LABEL_19:
  *a2 = v8;
  return result;
}

BOOL sub_9F8FC(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a2 + 16);
  if (v2 == 0x7FFFFFFFFFFFFFFFLL && v3 == 0x7FFFFFFFFFFFFFFFLL) {
    return a1 < a2;
  }
  else {
    return v2 < v3;
  }
}

void sub_9F928(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_9F928(a1, *a2);
    sub_9F928(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t sub_9F97C(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  if (*(void *)a1 != a1 + 8)
  {
    do
    {
      if (v2[4]) {
        operator delete();
      }
      unint64_t v3 = (void *)v2[1];
      if (v3)
      {
        do
        {
          unint64_t v4 = v3;
          unint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
      else
      {
        do
        {
          unint64_t v4 = (void *)v2[2];
          BOOL v5 = *v4 == (void)v2;
          unint64_t v2 = v4;
        }
        while (!v5);
      }
      unint64_t v2 = v4;
    }
    while (v4 != (void *)(a1 + 8));
  }
  sub_9F928(a1 + 24, *(void **)(a1 + 32));
  sub_9F928(a1, *(void **)(a1 + 8));
  return a1;
}

uint64_t sub_9FA24(uint64_t a1, unint64_t a2, int a3, int a4)
{
  int v8 = sub_9FEB0(a1, a2, 1);
  if ((uint64_t *)(a1 + 8) != v8)
  {
    unint64_t v9 = v8;
    uint64_t v10 = v8[4];
    uint64_t v19 = v10;
    uint64_t v12 = *(void *)v10;
    unint64_t v11 = *(void *)(v10 + 8);
    if (a2 >= *(void *)v10 && a2 - *(void *)v10 < v11)
    {
      unint64_t v14 = *(void *)(v10 + 16);
      if (v14 != 0x7FFFFFFFFFFFFFFFLL)
      {
        if (a2 == v12)
        {
          unint64_t v16 = v11 - 1;
          if (!v16)
          {
            CFStringRef v17 = sub_A0028((void *)a1, v14, 1);
            if (a3)
            {
              if (a4)
              {
                *(unsigned char *)(v10 + 32) = *(unsigned char *)(v10 + 32) & 0xFE | a4;
                uint64_t v18 = *(void *)(a1 + 64) + 1;
                *(void *)(a1 + 64) = v18;
                *(void *)(v10 + 40) = v18;
                a3 = (*(unsigned __int8 *)(v10 + 32) >> 1) & 1;
              }
              else
              {
                sub_A0398((uint64_t **)(a1 + 24), v17);
                operator delete(v17);
                *(_OWORD *)(v10 + 16) = xmmword_243050;
                sub_9F7EC((uint64_t **)(a1 + 24), (unint64_t *)&v19, &v19);
                a3 = 0;
              }
            }
            else
            {
              sub_A0398((uint64_t **)a1, v9);
              operator delete(v9);
              sub_A0398((uint64_t **)(a1 + 24), v17);
              operator delete(v17);
            }
            goto LABEL_25;
          }
          *(void *)uint64_t v10 = a2 + 1;
          *(void *)(v10 + _Block_object_dispose(&STACK[0x2D0], 8) = v16;
          --*(void *)(v10 + 24);
          if (!a3)
          {
LABEL_25:
            sub_A01A0(a1);
            return a3 ^ 1u;
          }
          if (a4) {
            operator new();
          }
        }
        else
        {
          if (v11 + v12 != a2 + 1) {
            operator new();
          }
          *(void *)(v10 + _Block_object_dispose(&STACK[0x2D0], 8) = v11 - 1;
          --*(void *)(v10 + 24);
          if (!a3) {
            goto LABEL_25;
          }
          if (a4) {
            operator new();
          }
        }
        operator new();
      }
    }
  }
  a3 = 0;
  return a3 ^ 1u;
}

void *sub_9FEB0(uint64_t a1, unint64_t a2, char a3)
{
  long long v17 = xmmword_243380;
  uint64_t v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v7 = (void *)(a1 + 8);
  unint64_t v6 = *(void **)a1;
  CFStringRef v15 = (uint64_t *)&v16;
  unint64_t v16 = a2;
  unint64_t v22 = sub_9F628;
  char v21 = 0;
  int v8 = sub_A0210(v6, v7, &v15, (unsigned int (**)(void, void))&v22);
  if (a3)
  {
    if (v7 != v8)
    {
      if (a3) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    if (*(void **)a1 != v7)
    {
LABEL_10:
      uint64_t v10 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v7 = v10;
          uint64_t v10 = (void *)v10[1];
        }
        while (v10);
      }
      else
      {
        unint64_t v14 = v7;
        do
        {
          unint64_t v7 = (void *)v14[2];
          BOOL v11 = *v7 == (void)v14;
          unint64_t v14 = v7;
        }
        while (v11);
      }
      return v7;
    }
    if (a3) {
      return v7;
    }
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 56);
    goto LABEL_15;
  }
  unint64_t v9 = *(void *)(a1 + 56);
  if (v9 > a2)
  {
    if (v7 == v8 && *(void **)a1 != v7) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
LABEL_15:
  if (v9 <= a2) {
    return v8;
  }
  BOOL v11 = v7 == v8;
  unint64_t v7 = v8;
  if (v11) {
    return v7;
  }
LABEL_17:
  if (*(void **)a1 == v8) {
    return v8;
  }
  unint64_t v7 = v8;
  if (*(void *)v8[4] > a2)
  {
    uint64_t v12 = (void *)*v8;
    if (*v8)
    {
      do
      {
        unint64_t v7 = v12;
        uint64_t v12 = (void *)v12[1];
      }
      while (v12);
    }
    else
    {
      do
      {
        unint64_t v7 = (void *)v8[2];
        BOOL v11 = *v7 == (void)v8;
        int v8 = v7;
      }
      while (v11);
    }
  }
  return v7;
}

void *sub_A0028(void *a1, unint64_t a2, char a3)
{
  long long v16 = xmmword_243050;
  unint64_t v17 = a2;
  uint64_t v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v6 = (void *)a1[3];
  unint64_t v7 = a1 + 4;
  CFStringRef v15 = &v16;
  unint64_t v22 = sub_9F8FC;
  char v21 = 0;
  int v8 = sub_A0210(v6, a1 + 4, &v15, (unsigned int (**)(void, void))&v22);
  if (a3)
  {
    if (v7 != v8)
    {
      if (a3) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    if ((void *)a1[3] != v7)
    {
LABEL_10:
      uint64_t v10 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v7 = v10;
          uint64_t v10 = (void *)v10[1];
        }
        while (v10);
      }
      else
      {
        unint64_t v14 = a1 + 4;
        do
        {
          unint64_t v7 = (void *)v14[2];
          BOOL v11 = *v7 == (void)v14;
          unint64_t v14 = v7;
        }
        while (v11);
      }
      return v7;
    }
    if (a3) {
      return v7;
    }
LABEL_14:
    unint64_t v9 = a1[6];
    goto LABEL_15;
  }
  unint64_t v9 = a1[6];
  if (v9 > a2)
  {
    if (v7 == v8 && (void *)a1[3] != v7) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
LABEL_15:
  if (v9 <= a2) {
    return v8;
  }
  BOOL v11 = v7 == v8;
  unint64_t v7 = v8;
  if (v11) {
    return v7;
  }
LABEL_17:
  if ((void *)a1[3] == v8) {
    return v8;
  }
  unint64_t v7 = v8;
  if (*(void *)(v8[4] + 16) > a2)
  {
    uint64_t v12 = (void *)*v8;
    if (*v8)
    {
      do
      {
        unint64_t v7 = v12;
        uint64_t v12 = (void *)v12[1];
      }
      while (v12);
    }
    else
    {
      do
      {
        unint64_t v7 = (void *)v8[2];
        BOOL v11 = *v7 == (void)v8;
        int v8 = v7;
      }
      while (v11);
    }
  }
  return v7;
}

uint64_t sub_A01A0(uint64_t result)
{
  uint64_t v1 = *(void **)(result + 24);
  if (v1 != (void *)(result + 32))
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = v1[4];
      if (*(void *)(v3 + 16) != 0x7FFFFFFFFFFFFFFFLL)
      {
        *(void *)(v3 + 16) = v2;
        v2 += *(void *)(v3 + 24);
      }
      unint64_t v4 = (void *)v1[1];
      if (v4)
      {
        do
        {
          BOOL v5 = v4;
          unint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          BOOL v5 = (void *)v1[2];
          BOOL v6 = *v5 == (void)v1;
          uint64_t v1 = v5;
        }
        while (!v6);
      }
      uint64_t v1 = v5;
    }
    while (v5 != (void *)(result + 32));
  }
  return result;
}

void *sub_A0210(void *a1, void *a2, void *a3, unsigned int (**a4)(void, void))
{
  unint64_t v4 = a1;
  if (a1 != a2)
  {
    unint64_t v7 = 0;
    int v8 = a1;
    do
    {
      unint64_t v9 = (void *)v8[1];
      if (v9)
      {
        do
        {
          uint64_t v10 = v9;
          unint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v10 = (void *)v8[2];
          BOOL v11 = *v10 == (void)v8;
          int v8 = v10;
        }
        while (!v11);
      }
      ++v7;
      int v8 = v10;
    }
    while (v10 != a2);
    do
    {
      unint64_t v12 = v7 >> 1;
      long long v16 = v4;
      sub_A030C(&v16, v7 >> 1);
      if ((*a4)(v16[4], *a3))
      {
        uint64_t v13 = v16;
        unint64_t v14 = (void *)v16[1];
        if (v14)
        {
          do
          {
            unint64_t v4 = v14;
            unint64_t v14 = (void *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            unint64_t v4 = (void *)v13[2];
            BOOL v11 = *v4 == (void)v13;
            uint64_t v13 = v4;
          }
          while (!v11);
        }
        unint64_t v12 = v7 + ~v12;
      }
      unint64_t v7 = v12;
    }
    while (v12);
  }
  return v4;
}

void **sub_A030C(void **result, uint64_t a2)
{
  if (a2 < 0)
  {
    unint64_t v7 = *result;
    do
    {
      int v8 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v4 = v8;
          int v8 = (void *)v8[1];
        }
        while (v8);
      }
      else
      {
        do
        {
          unint64_t v4 = (void *)v7[2];
          BOOL v5 = *v4 == (void)v7;
          unint64_t v7 = v4;
        }
        while (v5);
      }
      unint64_t v7 = v4;
    }
    while (!__CFADD__(a2++, 1));
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = *result;
    do
    {
      uint64_t v3 = (void *)v2[1];
      if (v3)
      {
        do
        {
          unint64_t v4 = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
      else
      {
        do
        {
          unint64_t v4 = (void *)v2[2];
          BOOL v5 = *v4 == (void)v2;
          uint64_t v2 = v4;
        }
        while (!v5);
      }
      uint64_t v2 = v4;
    }
    while (a2-- > 1);
  }
  void *result = v4;
  return result;
}

uint64_t *sub_A0398(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    unint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      unint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  BOOL v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_A040C(v6, a2);
  return v3;
}

uint64_t *sub_A040C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    unint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      uint64_t v3 = v4;
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  BOOL v6 = (uint64_t **)v3[2];
  unint64_t v7 = *v6;
  if (*v6 == v3)
  {
    *BOOL v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      unint64_t v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      unint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    int v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    uint64_t *v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + _Block_object_dispose(&STACK[0x2D0], 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *uint64_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        uint64_t result = v7;
      }
      unint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    CFStringRef v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      long long v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *unint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        long long v16 = v7;
      }
      else
      {
        CFStringRef v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      uint64_t v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + _Block_object_dispose(&STACK[0x2D0], 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      uint64_t *v24 = v23;
      goto LABEL_72;
    }
    long long v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      unint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    unint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      uint64_t result = v7;
    }
    unint64_t v7 = *(uint64_t **)v12;
  }
  char v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    uint64_t *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    char v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  uint64_t v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void *sub_A0790(void *a1, unint64_t a2, int a3)
{
  BOOL v6 = sub_A0028(a1, a2, 1);
  if (a1 + 4 == v6) {
    operator new();
  }
  unint64_t v7 = (unint64_t *)v6[4];
  unint64_t v17 = v7;
  if (v7[2] == 0x7FFFFFFFFFFFFFFFLL) {
LABEL_3:
  }
    operator new();
  uint64_t v9 = a1 + 1;
  ++v7[3];
  sub_A01A0((uint64_t)a1);
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  unint64_t v12 = v10 - 1;
  void v7[3] = v10 - 1;
  if (a2 == v11)
  {
    if (v12 | a2)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0)
      {
        v7[2] = a2 + 1;
        goto LABEL_3;
      }
      goto LABEL_34;
    }
    *unint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
    v7[1] = 0;
    v7[2] = 0;
    void v7[3] = 1;
  }
  else
  {
    if (v11 + v12 == a2)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0) {
        goto LABEL_3;
      }
      goto LABEL_34;
    }
    if (a2 >= v11 && a2 - v11 < v12)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0) {
        operator new();
      }
LABEL_34:
      void v7[3] = v10;
      uint64_t v9 = sub_A0AE8((uint64_t)a1, &v17);
      goto LABEL_5;
    }
    if (v11 | v12) {
      operator new();
    }
    *(_OWORD *)unint64_t v7 = xmmword_243050;
    v7[2] = a2;
    void v7[3] = 1;
  }
LABEL_5:
  sub_A01A0((uint64_t)a1);
  return v9;
}

void *sub_A0AE8(uint64_t a1, unint64_t **a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = v4;
  if (!v4) {
    return v2;
  }
  int v5 = *a2;
  unint64_t v6 = **a2;
  unint64_t v7 = v2;
  do
  {
    int v8 = (unint64_t *)v3[4];
    unint64_t v9 = *v8;
    BOOL v10 = *v8 < v6;
    BOOL v11 = v8 < v5;
    if (v9 != 0x7FFFFFFFFFFFFFFFLL || v6 != 0x7FFFFFFFFFFFFFFFLL) {
      BOOL v11 = v10;
    }
    BOOL v13 = !v11;
    if (v11) {
      uint64_t v14 = v3 + 1;
    }
    else {
      uint64_t v14 = v3;
    }
    if (v13) {
      unint64_t v7 = v3;
    }
    uint64_t v3 = (void *)*v14;
  }
  while (*v14);
  if (v7 == v2) {
    return v2;
  }
  CFStringRef v15 = (unint64_t *)v7[4];
  unint64_t v16 = *v15;
  if (v6 == 0x7FFFFFFFFFFFFFFFLL && v16 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v5 >= v15) {
      return v7;
    }
    return v2;
  }
  if (v6 < v16) {
    return v2;
  }
  return v7;
}

uint64_t sub_A0B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a3 + a2;
  unint64_t v7 = sub_9FEB0(a1, a3 + a2, 1);
  if ((void *)(a1 + 8) == v7) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  int v8 = (void *)v7[4];
  unint64_t v9 = v6 - *v8;
  if (v6 < *v8 || v9 >= v8[1]) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v11 = v8[2];
  if (v11 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v12 = v11 + v9;
  if (v12 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return v12 - a4;
  }
}

void *sub_A0C04(void *result, unint64_t a2, int64_t a3)
{
  uint64_t v3 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    a2 += result[7];
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (a3 < 0) {
LABEL_3:
  }
    a3 += result[7];
LABEL_4:
  if ((uint64_t)a2 > a3 || a2 >= result[7])
  {
    uint64_t v14 = (void *)*result;
    if ((void *)*result != result + 1)
    {
      do
      {
        uint64_t v15 = v14[4];
        if (*(void *)v15 != 0x7FFFFFFFFFFFFFFFLL) {
          *(unsigned char *)(v15 + 32) |= 4u;
        }
        unint64_t v16 = (void *)v14[1];
        if (v16)
        {
          do
          {
            unint64_t v17 = v16;
            unint64_t v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            unint64_t v17 = (void *)v14[2];
            BOOL v10 = *v17 == (void)v14;
            uint64_t v14 = v17;
          }
          while (!v10);
        }
        uint64_t v14 = v17;
      }
      while (v17 != result + 1);
    }
  }
  else
  {
    unint64_t v4 = a3 + 1;
    int v5 = sub_A0F40((uint64_t)result, a2);
    unint64_t v6 = v3 + 1;
    if (v3 + 1 != v5)
    {
      unint64_t v7 = (void *)*v3;
      if ((void *)*v3 != v5)
      {
        do
        {
          *(unsigned char *)(v7[4] + 32) |= 4u;
          int v8 = (void *)v7[1];
          if (v8)
          {
            do
            {
              unint64_t v9 = v8;
              int v8 = (void *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              unint64_t v9 = (void *)v7[2];
              BOOL v10 = *v9 == (void)v7;
              unint64_t v7 = v9;
            }
            while (!v10);
          }
          unint64_t v7 = v9;
        }
        while (v9 != v5);
      }
    }
    uint64_t result = sub_A0F40((uint64_t)v3, v4);
    if (v6 != result)
    {
      do
      {
        uint64_t v11 = result[4];
        if (*(void *)v11 != 0x7FFFFFFFFFFFFFFFLL) {
          *(unsigned char *)(v11 + 32) |= 4u;
        }
        uint64_t v12 = (void *)result[1];
        if (v12)
        {
          do
          {
            BOOL v13 = v12;
            uint64_t v12 = (void *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            BOOL v13 = (void *)result[2];
            BOOL v10 = *v13 == (void)result;
            uint64_t result = v13;
          }
          while (!v10);
        }
        uint64_t result = v13;
      }
      while (v13 != v6);
    }
  }
  return result;
}

void *sub_A0DA0(void *result, unint64_t a2, int64_t a3)
{
  uint64_t v3 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    a2 += result[6];
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (a3 < 0) {
LABEL_3:
  }
    a3 += result[6];
LABEL_4:
  if ((uint64_t)a2 > a3 || a2 >= result[6])
  {
    uint64_t v14 = (void *)result[3];
    if (v14 != result + 4)
    {
      do
      {
        uint64_t v15 = v14[4];
        if (*(void *)(v15 + 16) != 0x7FFFFFFFFFFFFFFFLL) {
          *(unsigned char *)(v15 + 32) |= 8u;
        }
        unint64_t v16 = (void *)v14[1];
        if (v16)
        {
          do
          {
            unint64_t v17 = v16;
            unint64_t v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            unint64_t v17 = (void *)v14[2];
            BOOL v10 = *v17 == (void)v14;
            uint64_t v14 = v17;
          }
          while (!v10);
        }
        uint64_t v14 = v17;
      }
      while (v17 != result + 4);
    }
  }
  else
  {
    unint64_t v4 = a3 + 1;
    int v5 = sub_A10AC(result, a2);
    unint64_t v6 = v3 + 4;
    if (v3 + 4 != v5)
    {
      unint64_t v7 = (void *)v3[3];
      if (v7 != v5)
      {
        do
        {
          *(unsigned char *)(v7[4] + 32) |= 8u;
          int v8 = (void *)v7[1];
          if (v8)
          {
            do
            {
              unint64_t v9 = v8;
              int v8 = (void *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              unint64_t v9 = (void *)v7[2];
              BOOL v10 = *v9 == (void)v7;
              unint64_t v7 = v9;
            }
            while (!v10);
          }
          unint64_t v7 = v9;
        }
        while (v9 != v5);
      }
    }
    uint64_t result = sub_A10AC(v3, v4);
    if (v6 != result)
    {
      do
      {
        uint64_t v11 = result[4];
        if (*(void *)(v11 + 16) != 0x7FFFFFFFFFFFFFFFLL) {
          *(unsigned char *)(v11 + 32) |= 8u;
        }
        uint64_t v12 = (void *)result[1];
        if (v12)
        {
          do
          {
            BOOL v13 = v12;
            uint64_t v12 = (void *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            BOOL v13 = (void *)result[2];
            BOOL v10 = *v13 == (void)result;
            uint64_t result = v13;
          }
          while (!v10);
        }
        uint64_t result = v13;
      }
      while (v13 != v6);
    }
  }
  return result;
}

void *sub_A0F40(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_9FEB0(a1, a2, 0);
  if ((void *)(a1 + 8) != result)
  {
    int v5 = (unint64_t *)result[4];
    BOOL v6 = a2 >= *v5;
    unint64_t v7 = a2 - *v5;
    if (v7)
    {
      BOOL v8 = !v6 || v7 >= v5[1];
      uint64_t result = (void *)(a1 + 8);
      if (!v8) {
        operator new();
      }
    }
  }
  return result;
}

uint64_t sub_A105C(uint64_t result, uint64_t a2)
{
  int v2 = *(unsigned char *)(result + 32) & 0xFE | *(unsigned char *)(a2 + 32) & 1;
  *(unsigned char *)(result + 32) = v2;
  unsigned int v3 = v2 & 0xFFFFFFFD | (2 * ((*(unsigned __int8 *)(a2 + 32) >> 1) & 1));
  *(unsigned char *)(result + 32) = v3;
  unsigned int v4 = v3 & 0xFFFFFFFB | (4 * ((*(unsigned __int8 *)(a2 + 32) >> 2) & 1));
  *(unsigned char *)(result + 32) = v4;
  *(unsigned char *)(result + 32) = v4 & 0xF7 | *(unsigned char *)(a2 + 32) & 8;
  *(void *)(result + 40) = *(void *)(a2 + 40);
  return result;
}

void *sub_A10AC(void *a1, unint64_t a2)
{
  uint64_t result = sub_A0028(a1, a2, 0);
  if (a1 + 4 != result)
  {
    uint64_t v5 = result[4];
    unint64_t v6 = *(void *)(v5 + 16);
    if (a2 != v6 && a2 >= v6 && a2 - v6 < *(void *)(v5 + 24)) {
      operator new();
    }
  }
  return result;
}

void sub_A2A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_A2A40(uint64_t a1)
{
  ++*(void *)(*(void *)(a1 + 32) + 128);
  id result = [*(id *)(a1 + 32) _q_shouldLoadResourceIfNeededAllowDefer:1];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void *sub_A2AFC(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 128);
  if (v2)
  {
    *(void *)(v1 + 12_Block_object_dispose(&STACK[0x2D0], 8) = v2 - 1;
    id result = (void *)result[4];
    if (!result[16] && !result[18]) {
      return [result _q_unloadResource];
    }
  }
  return result;
}

void sub_A2BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_A2BF8(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 136);
  *(void *)(v1 + 136) = v2 + 1;
  if (!v2)
  {
    unsigned int v3 = result;
    id result = [*(id *)(result[4] + 64) markAsNonVolatile];
    uint64_t v4 = v3[4];
    char v5 = *(unsigned char *)(v4 + 104);
    if (result)
    {
      *(unsigned char *)(v4 + 104) = v5 | 2;
    }
    else
    {
      *(unsigned char *)(v4 + 104) = v5 & 0xFD;
      uint64_t v6 = v3[4];
      unint64_t v7 = *(void **)(v6 + 64);
      *(void *)(v6 + 64) = 0;

      id result = [v3[4] _q_shouldLoadResourceIfNeededAllowDefer:1];
      if (result) {
        *(unsigned char *)(*(void *)(v3[5] + 8) + 24) = 1;
      }
    }
  }
  return result;
}

void sub_A2D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_A2D54(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[16] || result[17])
  {
    id result = [result _q_shouldLoadResourceIfNeededAllowDefer:0];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

void *sub_A2E10(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 136);
  if (v2)
  {
    uint64_t v3 = v2 - 1;
    *(void *)(v1 + 136) = v3;
    if (!v3)
    {
      uint64_t v4 = result;
      id result = [*(id *)(result[4] + 64) markAsVolatile];
      if (result) {
        *(unsigned char *)(v4[4] + 104) &= ~2u;
      }
    }
  }
  return result;
}

void sub_A2F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_A2FB8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_A2FC8(uint64_t a1)
{
}

void sub_A2FD0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) _q_shouldLoadResourceIfNeededAllowDefer:0];
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(void *)(*(void *)(a1 + 32) + 64))
  {
    uint64_t v2 = [TUIImageContent alloc];
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = -[TUIImageContent initWithImage:insets:intrinsicSize:flags:](v2, "initWithImage:insets:intrinsicSize:flags:", *(void *)(v3 + 64), (*(unsigned char *)(v3 + 104) & 4) == 0, *(double *)(v3 + 72), *(double *)(v3 + 80), *(double *)(v3 + 88), *(double *)(v3 + 96), *(double *)(v3 + 112), *(double *)(v3 + 120));
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
}

void sub_A3224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_A323C(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[8])
  {
    [result _q_unloadResource];
    id result = [*(id *)(a1 + 32) _q_shouldLoadResourceIfNeededAllowDefer:0];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

uint64_t sub_A32F8(uint64_t result)
{
  return result;
}

void *sub_A3380(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 144);
  if (v2)
  {
    uint64_t v3 = v2 - 1;
    *(void *)(v1 + ++*(void *)(*(void *)(result + 32) + 144) = v3;
    if (!v3)
    {
      id result = (void *)result[4];
      if (!result[16]) {
        return [result _q_unloadResource];
      }
    }
  }
  return result;
}

void sub_A3720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_A3770(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if ((v2[104] & 1) == 0)
  {
    if (![v2 allowsMultipleUpdates]) {
      return;
    }
    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  if (*(unsigned char *)(a1 + 112))
  {
    char v3 = 8;
  }
  else
  {
    v2[104] &= ~1u;
    *(unsigned char *)(*(void *)(a1 + 32) + 104) |= 2u;
    uint64_t v2 = *(unsigned char **)(a1 + 32);
    char v3 = 8 * *(unsigned char *)(a1 + 112);
  }
  v2[104] = v2[104] & 0xF7 | v3;
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(v4 + 128)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = *(void *)(v4 + 144) == 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v5;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(v6 + 152) + 1;
    *(void *)(v6 + 152) = v7;
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v7;
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), *(id *)(a1 + 40));
  uint64_t v8 = *(void *)(a1 + 32);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v8 + 8_Block_object_dispose(&STACK[0x2D0], 8) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v8 + 72) = v9;
  BOOL v10 = *(CGSize **)(a1 + 32);
  if ((LOBYTE(v10[6].height) & 4) != 0) {
    p_CGFloat height = &v10[7].height;
  }
  else {
    p_CGFloat height = &CGSizeZero.height;
  }
  double v12 = *p_height;
  BOOL v13 = v10 + 7;
  if ((LOBYTE(v10[6].height) & 4) == 0) {
    BOOL v13 = &CGSizeZero;
  }
  double width = v13->width;
  -[CGSize _q_loadedImage:insets:](v10, "_q_loadedImage:insets:", *(void *)(a1 + 40), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  uint64_t v15 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v15 + 104) & 4) != 0) {
    unint64_t v16 = (const CGSize *)(v15 + 112);
  }
  else {
    unint64_t v16 = &CGSizeZero;
  }
  if ((*(unsigned char *)(v15 + 104) & 4) != 0) {
    unint64_t v17 = (CGFloat *)(v15 + 120);
  }
  else {
    unint64_t v17 = &CGSizeZero.height;
  }
  if (width != v16->width || v12 != *v17)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    uint64_t v15 = *(void *)(a1 + 32);
  }
  if ([*(id *)(v15 + 40) count])
  {
    uint64_t v19 = [*(id *)(*(void *)(a1 + 32) + 40) allObjects];
    uint64_t v20 = *(void *)(*(void *)(a1 + 72) + 8);
    BOOL v21 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v19;
  }
  else if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    uint64_t v22 = *(void *)(a1 + 32);
    uint64_t v23 = *(void **)(v22 + 64);
    *(void *)(v22 + 64) = 0;

    uint64_t v24 = *(void *)(a1 + 32);
    long long v25 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    *(_OWORD *)(v24 + 72) = *(_OWORD *)&UIEdgeInsetsZero.top;
    *(_OWORD *)(v24 + 8_Block_object_dispose(&STACK[0x2D0], 8) = v25;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_A398C(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          [v7 imageResourceDidChangeIntrinsicSize:*(void *)(a1 + 32) v8];
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void *sub_A3AB4(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[19] == *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    return [result _q_unloadResource];
  }
  return result;
}

void sub_A3E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_A3E74(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  if (*(void **)(v3 + 64) != v2
    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 72), *(float64x2_t *)(a1 + 72)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 88), *(float64x2_t *)(a1 + 88)))), 0xFuLL))) & 1) != 0)
  {
    objc_storeStrong((id *)(v3 + 64), v2);
    uint64_t v4 = *(void *)(a1 + 32);
    long long v5 = *(_OWORD *)(a1 + 72);
    *(_OWORD *)(v4 + 8_Block_object_dispose(&STACK[0x2D0], 8) = *(_OWORD *)(a1 + 88);
    *(_OWORD *)(v4 + 72) = v5;
    *(unsigned char *)(*(void *)(a1 + 32) + 104) = *(unsigned char *)(*(void *)(a1 + 32) + 104) & 0xF7 | (8
                                                                                                * *(unsigned char *)(a1 + 104));
    char v6 = *(unsigned char *)(a1 + 105);
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 32);
      if (*(void *)(v7 + 128)) {
        char v6 = 0;
      }
      else {
        char v6 = *(void *)(v7 + 144) == 0;
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v6;
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(v8 + 152) + 1;
      *(void *)(v8 + 152) = v9;
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v9;
    }
    if ([*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count])
    {
      uint64_t v10 = [*(id *)(*(void *)(a1 + 32) + 40) allObjects];
      uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8);
      double v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
  }
}

void *sub_A3FC0(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[19] == *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    return [result _q_unloadResource];
  }
  return result;
}

void sub_A40DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 64);
  char v4 = *(unsigned char *)(v2 + 104);
  if (v3) {
    BOOL v5 = (v4 & 3) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && (*(unsigned char *)(a1 + 48) & 1) != 0)
  {
    char v6 = -[TUIImageContent initWithImage:insets:]([TUIImageContent alloc], "initWithImage:insets:", *(void *)(*(void *)(a1 + 32) + 64), *(double *)(*(void *)(a1 + 32) + 72), *(double *)(*(void *)(a1 + 32) + 80), *(double *)(*(void *)(a1 + 32) + 88), *(double *)(*(void *)(a1 + 32) + 96));
  }
  else
  {
    if ((v4 & 4) == 0 || (*(unsigned char *)(a1 + 48) & 2) == 0) {
      return;
    }
    char v6 = -[TUIImageContent initWithIntrinsicSize:flags:]([TUIImageContent alloc], "initWithIntrinsicSize:flags:", 0, *(double *)(*(void *)(a1 + 32) + 112), *(double *)(*(void *)(a1 + 32) + 120));
  }
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

uint64_t sub_A4244(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (*(void *)(v1 + 64)) {
    int v2 = (*(unsigned __int8 *)(v1 + 104) >> 1) & 1;
  }
  else {
    LOBYTE(v2) = 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = v2;
  return result;
}

uint64_t sub_A431C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = (*(unsigned char *)(*(void *)(result + 32) + 104) & 3) == 1;
  return result;
}

void sub_A43F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unsigned char *sub_A4408(uint64_t a1)
{
  id result = *(unsigned char **)(a1 + 32);
  if ((result[104] & 4) == 0)
  {
    id result = [result _q_shouldLoadResourceIfNeededAllowDefer:0];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

id sub_A44F0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) addObject:*(void *)(a1 + 40)];
}

id sub_A45A4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) removeObject:*(void *)(a1 + 40)];
}

void sub_A4DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A4DD8(id *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = objc_alloc((Class)BCUPurgeableImage);
    [a1[5] contentsScale];
    id v5 = [v4 initWithData:v3];
  }
  else
  {
    char v6 = TUIImageCacheLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = [a1[4] absoluteURL];
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl(&def_141F14, v6, OS_LOG_TYPE_INFO, "failed to load image with url:%@", (uint8_t *)&v9, 0xCu);
    }
    id v5 = 0;
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  [WeakRetained _loadedImage:v5 insets:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
}

id sub_A5234(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _loadedImage:a2];
}

void sub_A5E54(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  BOOL v13 = *(void **)(a1 + 32);
  id v14 = a3;
  [v13 _endFilterOperation:a2];
  TUIProtocolCast(&OBJC_PROTOCOL___TUIPurgeableImage, v14);
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(a4, a5, a6, a7);
}

TUIImageResourceCacheKey *__cdecl sub_A6468(id a1, TUIImageResource *a2)
{
  return (TUIImageResourceCacheKey *)[(TUIImageResource *)a2 sizedKey];
}

TUIImageResourceCacheKey *__cdecl sub_A6538(id a1, TUIImageResource *a2)
{
  return (TUIImageResourceCacheKey *)[(TUIImageResource *)a2 unsizedKey];
}

void sub_A6EE0(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11 = a2;
  double v12 = TUIImageCacheLog();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
    sub_191888(v11, a1, v12);
  }

  [*(id *)(a1 + 40) _loadedImage:v11 insets:a3, a4, a5, a6];
  [*(id *)(a1 + 32) removeAllObjects];
}

void sub_A71E4(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  BOOL v13 = *(void **)(a1 + 32);
  id v14 = a3;
  [v13 _endFilterOperation:a2];
  TUIProtocolCast(&OBJC_PROTOCOL___TUIPurgeableImage, v14);
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(a4, a5, a6, a7);
}

void sub_A7550(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    char v6 = TUIImageCacheLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_19193C(a1, v5, v6);
    }

    (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  }
  else
  {
    id v7 = [objc_alloc((Class)BCUPurgeableImage) initWithImage:a2 surface:0 contentsScale:*(double *)(a1 + 48)];
    (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  }
}

void sub_A7E08(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  int v2 = [*(id *)(*(void *)(a1 + 32) + 72) objectEnumerator];
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v17;
    *(void *)&long long v4 = 134218498;
    long long v15 = v4;
    do
    {
      for (double i = 0; i != v5; double i = (char *)i + 1)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        int v9 = [v8 imageContentWithOptions:1 v15];
        uint64_t v10 = [v9 image];

        if (!*(unsigned char *)(a1 + 40) || v10)
        {
          id v11 = TUIImageCacheLog();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            uint64_t v12 = [v8 debugFunctionalDescription];
            BOOL v13 = (void *)v12;
            *(_DWORD *)buf = v15;
            id v14 = "not-loaded";
            if (v10) {
              id v14 = "loaded";
            }
            BOOL v21 = v8;
            __int16 v22 = 2114;
            uint64_t v23 = v12;
            __int16 v24 = 2082;
            long long v25 = v14;
            _os_log_impl(&def_141F14, v11, OS_LOG_TYPE_INFO, "[%p] %{public}@ (%{public}s)", buf, 0x20u);
          }
        }
      }
      id v5 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
    }
    while (v5);
  }
}

void sub_A86A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [*(id *)(*(void *)(a1 + 40) + 40) objectForKey:v2];
  }
  else
  {
    id v3 = 0;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v3);
  if (v2) {

  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) && *(void *)(a1 + 32))
  {
    +[_TUICachedURLImageResource sizedURLFromTemplatedURL:baseURL:naturalSize:contentsScale:](_TUICachedURLImageResource, "sizedURLFromTemplatedURL:baseURL:naturalSize:contentsScale:", *(void *)(a1 + 48), *(void *)(a1 + 56), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88));
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    long long v4 = +[_TUICachedURLImageResource unsizedKeyFromTemplatedURL:*(void *)(a1 + 48) baseURL:*(void *)(a1 + 56)];
    id v5 = sub_A8808(v4, *(void **)(*(void *)(a1 + 40) + 48));
    uint64_t v6 = -[_TUICachedURLImageResource initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:]([_TUICachedURLImageResource alloc], "initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(void *)(*(void *)(a1 + 40) + 8));
    uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [*(id *)(*(void *)(a1 + 40) + 40) setObject:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) forKey:*(void *)(a1 + 32)];
  }
}

_TUIImageResourceUnsizedCacheSet *sub_A8808(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3)
  {
    uint64_t v6 = [v4 objectForKey:v3];
    if (!v6)
    {
      uint64_t v6 = objc_alloc_init(_TUIImageResourceUnsizedCacheSet);
      [v5 setObject:v6 forKey:v3];
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_A8A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A8A18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [*(id *)(*(void *)(a1 + 40) + 40) objectForKey:v2];
  }
  else
  {
    id v3 = 0;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v3);
  if (v2) {

  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) && *(void *)(a1 + 32) && *(void *)(a1 + 48))
  {
    id v4 = -[_TUICachedURLImageResource initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:]([_TUICachedURLImageResource alloc], "initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:", CGSizeZero.width, CGSizeZero.height, *(double *)(a1 + 64), *(void *)(*(void *)(a1 + 40) + 8));
    uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;

    uint64_t v7 = [[TUIImageResourceCacheKey alloc] initWithURL:*(void *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 40) + 40) setObject:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) forKey:v7];
  }
}

void sub_A8CD0(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 56) objectForKey:a1[5]];
  uint64_t v3 = *(void *)(a1[8] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (!*(void *)(*(void *)(a1[8] + 8) + 40))
  {
    id v9 = +[_TUICachedTintedImageResource unsizedKeyForColor:a1[6] imageResource:a1[7]];
    uint64_t v5 = sub_A8808(v9, *(void **)(a1[4] + 64));
    uint64_t v6 = [[_TUICachedTintedImageResource alloc] initWithCache:a1[4] unsizedCacheSet:v5 queue:*(void *)(a1[4] + 32) resource:a1[7] color:a1[6]];
    uint64_t v7 = *(void *)(a1[8] + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [*(id *)(a1[4] + 56) setObject:*(void *)(*(void *)(a1[8] + 8) + 40) forKey:a1[5]];
  }
}

void sub_A8FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A8FD8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 72) objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (!*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    id v9 = +[_TUICachedFilterImageResource unsizedKeyForFilter:*(void *)(a1 + 48) contentsScale:*(void *)(a1 + 56) imageResource:*(double *)(a1 + 72)];
    uint64_t v5 = sub_A8808(v9, *(void **)(*(void *)(a1 + 32) + 80));
    uint64_t v6 = -[_TUICachedFilterImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:filter:]([_TUICachedFilterImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:filter:", *(void *)(a1 + 32), v5, *(void *)(*(void *)(a1 + 32) + 32), *(void *)(a1 + 56), *(void *)(a1 + 48), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 72));
    uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [*(id *)(*(void *)(a1 + 32) + 72) setObject:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) forKey:*(void *)(a1 + 40)];
  }
}

void sub_A92D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A92F0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 88) objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 72) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (!*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40))
  {
    long long v18 = +[_TUICachedSeriesStackImageResource unsizedKeyForContentsScale:*(void *)(a1 + 48) imageResources:*(double *)(a1 + 80)];
    long long v17 = sub_A8808(v18, *(void **)(*(void *)(a1 + 32) + 80));
    uint64_t v5 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 56) count]);
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v6 = *(id *)(a1 + 56);
    id v7 = [v6 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v20;
      do
      {
        for (double i = 0; i != v8; double i = (char *)i + 1)
        {
          if (*(void *)v20 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void *)(*((void *)&v19 + 1) + 8 * i);
          uint64_t v12 = [*(id *)(*(void *)(a1 + 32) + 16) imageFilterWithIdentifier:v11];
          if (v12)
          {
            [v5 addObject:v12];
          }
          else
          {
            BOOL v13 = TUIImageCacheLog();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v24 = v11;
              _os_log_error_impl(&def_141F14, v13, OS_LOG_TYPE_ERROR, "Can't find cover filter '%@' for series stack", buf, 0xCu);
            }
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v19 objects:v25 count:16];
      }
      while (v8);
    }

    id v14 = -[_TUICachedSeriesStackImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resources:filters:imageSetFilter:]([_TUICachedSeriesStackImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resources:filters:imageSetFilter:", *(void *)(a1 + 32), v17, *(void *)(*(void *)(a1 + 32) + 32), *(void *)(a1 + 48), v5, *(void *)(a1 + 64), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 80));
    uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
    long long v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    [*(id *)(*(void *)(a1 + 32) + 88) setObject:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) forKey:*(void *)(a1 + 40)];
  }
}

void sub_A9924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_A994C(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 120) objectForKey:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_A999C(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 120) objectForKey:a1[5]];

  uint64_t v3 = *(void **)(a1[4] + 120);
  if (v2)
  {
    uint64_t v4 = [v3 objectForKey:a1[5]];
    uint64_t v5 = *(void *)(a1[6] + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
  else
  {
    uint64_t v7 = a1[5];
    uint64_t v8 = *(void *)(*(void *)(a1[6] + 8) + 40);
    [v3 setObject:v8 forKey:v7];
  }
}

void sub_A9DA0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setUserInterfaceStyle:v3];
  [v4 setDisplayScale:*(double *)(a1 + 40)];
  [v4 setLayoutDirection:*(void *)(a1 + 48)];
}

id sub_A9E08(uint64_t a1)
{
  UIEdgeInsetsSubtract();
  double v4 = v3 + CGPointZero.y;
  double v6 = *(double *)(a1 + 72) - (v2 + v5);
  double v8 = *(double *)(a1 + 80) - (v3 + v7);
  uint64_t v9 = *(void **)(a1 + 32);

  return [v9 drawInRect:CGPointZero.x + v2, v4, v6, v8];
}

void sub_AA008(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 104) objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    id v9 = +[_TUICachedMediaBackdropImageResource unsizedKeyForContentsScale:*(void *)(a1 + 48) imageResource:*(double *)(a1 + 64)];
    double v5 = sub_A8808(v9, *(void **)(*(void *)(a1 + 32) + 112));
    double v6 = -[_TUICachedMediaBackdropImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:]([_TUICachedMediaBackdropImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:", *(void *)(a1 + 32), v5, *(void *)(*(void *)(a1 + 32) + 32), *(void *)(a1 + 48), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 64));
    uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
    double v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [*(id *)(*(void *)(a1 + 32) + 104) setObject:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) forKey:*(void *)(a1 + 40)];
  }
}

void sub_AA18C(uint64_t a1)
{
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) objectEnumerator];
  id v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * (void)v6) _refresh];
        double v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 56) objectEnumerator];
  id v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * (void)v11) _refresh];
        uint64_t v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  uint64_t v12 = [*(id *)(*(void *)(a1 + 32) + 72) objectEnumerator];
  id v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      long long v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * (void)v16) _refresh];
        long long v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      id v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v17 = [*(id *)(*(void *)(a1 + 32) + 88) objectEnumerator];
  id v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      long long v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * (void)v21) _refresh];
        long long v21 = (char *)v21 + 1;
      }
      while (v19 != v21);
      id v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

uint64_t TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(TUI::Util::PartialStruct::Storage::Header *this, unsigned int a2)
{
  uint64_t v4 = *(void *)this;
  uint64_t v2 = (char *)this + 8;
  uint64_t v3 = v4;
  uint64_t v5 = v4 - *(unsigned int *)(v4 + 4);
  unsigned int v6 = *(_DWORD *)(v5 + 4);
  if (v6 >= 2)
  {
    unint64_t v7 = ((unint64_t)*(unsigned __int16 *)(v3 + 8) + 16) >> 4;
    do
    {
      unint64_t v8 = v7;
      if (!v7) {
        break;
      }
      --v7;
    }
    while (!*(_WORD *)&v2[2 * v8 - 2]);
    uint64_t v9 = 0;
    unint64_t v10 = a2 >> 4;
    uint64_t v11 = v6;
    do
    {
      uint64_t v12 = v5 + *(unsigned int *)(v5 + 16 + 4 * v9);
      unint64_t v13 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
      if (v13 >= v8) {
        unint64_t v14 = v8;
      }
      else {
        unint64_t v14 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
      }
      if (v14)
      {
        if (v8 >= v13) {
          unint64_t v15 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
        }
        else {
          unint64_t v15 = v8;
        }
        long long v16 = (unsigned __int16 *)v2;
        long long v17 = (unsigned __int16 *)(v12 + 12);
        while (1)
        {
          int v19 = *v16++;
          int v18 = v19;
          int v20 = *v17++;
          if ((v18 & ~v20) != 0) {
            break;
          }
          if (!--v15) {
            goto LABEL_16;
          }
        }
      }
      else
      {
LABEL_16:
        if (a2 == 0xFFFF)
        {
          if (v8 <= v13) {
            return v12;
          }
        }
        else if (v13 > v10 && v8 <= v13 && ((1 << (a2 & 0xF)) & *(unsigned __int16 *)(v12 + 12 + 2 * v10)) != 0)
        {
          return v12;
        }
      }
      ++v9;
    }
    while (v9 != v11);
  }
  return 0;
}

void *TUI::Util::PartialStruct::Storage::Header::transferToNewMap(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(unsigned __int16 *)(*(void *)a1 + 8) >= *(unsigned __int16 *)(a2 + 8)) {
    unsigned int v5 = *(unsigned __int16 *)(a2 + 8);
  }
  else {
    unsigned int v5 = *(unsigned __int16 *)(*(void *)a1 + 8);
  }
  uint64_t v6 = *(void *)a1 - *(unsigned int *)(*(void *)a1 + 4);
  unint64_t v7 = malloc_type_malloc(*(unsigned __int16 *)(a2 + 10), 0xC0528C8BuLL);
  bzero(v7, *(unsigned __int16 *)(a2 + 10));
  long long v16 = v7;
  *unint64_t v7 = a2;
  unint64_t v8 = v7 + 1;
  bzero(v8, ((*(unsigned __int16 *)(a2 + 8) + 16) >> 3) & 0x3FFELL);
  for (unsigned __int16 i = 0; i <= v5; ++i)
  {
    if ((*(unsigned __int16 *)(v4 + 2 * (i >> 4)) >> (i & 0xF)))
    {
      if (i <= (unsigned __int16)*(_DWORD *)(v6 + 12)) {
        size_t v10 = *(unsigned __int16 *)(2 * (unsigned __int16)*(_DWORD *)(v6 + 12)
      }
                                  + v6
                                  + 16
                                  + 4 * *(unsigned int *)(v6 + 4)
                                  + 2 * i
                                  + 2);
      else {
        size_t v10 = 0;
      }
      unsigned int v11 = *(unsigned __int16 *)(*(void *)a1 + 8);
      if (v11 >= i) {
        unint64_t v12 = (unint64_t)*(unsigned __int16 *)(*(void *)a1 + (((v11 + 16) >> 3) & 0x3FFELL) + 2 * i + 12) >> 1;
      }
      else {
        unint64_t v12 = 0;
      }
      unsigned int v13 = *(unsigned __int16 *)(a2 + 8);
      if (v13 >= i)
      {
        if (v12)
        {
          unint64_t v14 = *(unsigned __int16 *)(a2 + 12 + (((v13 + 16) >> 3) & 0x3FFELL) + 2 * i);
          if (v14 >= 2)
          {
            memcpy((char *)v16 + (v14 >> 1), (const void *)(v12 + a1), v10);
            *((_WORD *)v8 + (i >> 4)) |= 1 << (i & 0xF);
          }
        }
      }
    }
  }
  return v16;
}

void TUI::Util::PartialStruct::Storage::~Storage(TUI::Util::PartialStruct::Storage::Header **this)
{
  uint64_t v2 = *this;
  if (*this) {
    BOOL v3 = ((unint64_t)*this & 1) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  if (v3)
  {
    unsigned __int16 v4 = 0;
    uint64_t v5 = *(void *)v2;
    unsigned int v6 = *(unsigned __int16 *)(*(void *)v2 + 8);
    uint64_t v7 = *(void *)v2 + 12;
    do
    {
      if ((*((unsigned __int16 *)v2 + (v4 >> 4) + 4) >> (v4 & 0xF)))
      {
        unsigned int v8 = *(unsigned __int16 *)(v5 + 8);
        if (v8 >= v4 && (*(_WORD *)(v7 + (((v8 + 16) >> 3) & 0x3FFELL) + 2 * v4) & 1) != 0) {
          TUI::Util::PartialStruct::Storage::setObjectForKey(this, v4, 0);
        }
      }
      ++v4;
    }
    while (v6 >= v4);
    free(v2);
  }
}

void TUI::Util::PartialStruct::Storage::setObjectForKey(TUI::Util::PartialStruct::Storage::Header **this, unsigned int a2, objc_object *a3)
{
  cf = a3;
  if (cf) {
    DataForKeCGFloat y = (const void **)TUI::Util::PartialStruct::Storage::allocateDataForKey(this, a2, v5, 0);
  }
  else {
    DataForKeCGFloat y = (const void **)TUI::Util::PartialStruct::Storage::dataForKey((TUI::Util::PartialStruct::Storage *)this, a2);
  }
  uint64_t v7 = DataForKey;
  if (DataForKey)
  {
    unsigned int v8 = *this;
    unsigned int v9 = *(unsigned __int16 *)(*(void *)v8 + 8);
    size_t v10 = *DataForKey;
    if (*v7 && v9 >= a2 && ((*((unsigned __int16 *)v8 + (a2 >> 4) + 4) >> (a2 & 0xF)) & 1) != 0) {
      CFRelease(v10);
    }
    if (cf)
    {
      *uint64_t v7 = CFRetain(cf);
      if (v9 >= a2) {
        *((_WORD *)v8 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
      }
    }
    else
    {
      if (v9 >= a2) {
        *((_WORD *)v8 + (a2 >> 4) + 4) &= ~(1 << (a2 & 0xF));
      }
      *uint64_t v7 = 0;
    }
  }
}

void sub_ACAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Util::PartialStruct::Storage::dataForKey(TUI::Util::PartialStruct::Storage *this, unsigned int a2)
{
  uint64_t v2 = *(void *)this;
  if (*(void *)this) {
    BOOL v3 = (*(void *)this & 1) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  if (v3
    && (unsigned int v4 = *(unsigned __int16 *)(*(void *)v2 + 8), v4 >= a2)
    && ((*(unsigned __int16 *)(v2 + 2 * (a2 >> 4) + 8) >> (a2 & 0xF)) & 1) != 0
    && (unint64_t v5 = *(unsigned __int16 *)(*(void *)v2 + (((v4 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v5 >= 2))
  {
    return v2 + (v5 >> 1);
  }
  else
  {
    return 0;
  }
}

unint64_t TUI::Util::PartialStruct::Storage::allocateDataForKey(TUI::Util::PartialStruct::Storage::Header **this, unsigned int a2, unint64_t a3, int a4)
{
  uint64_t v7 = (uint64_t)*this;
  if (*this) {
    BOOL v8 = ((unint64_t)*this & 1) == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    uint64_t v10 = *(void *)v7;
    unsigned int v11 = *(unsigned __int16 *)(*(void *)v7 + 8);
    if (v11 >= a2)
    {
      unint64_t v20 = *(unsigned __int16 *)(v10 + (((v11 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12);
      if (v20 >= 2)
      {
        unint64_t v24 = v20 >> 1;
        if (a4) {
          *(_WORD *)(v7 + 2 * (a2 >> 4) + 8) |= 1 << (a2 & 0xF);
        }
        return v7 + v24;
      }
      uint64_t v21 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, a2);
      if (!v21
        || (uint64_t v22 = v21,
            unint64_t v14 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap(v7, v21), free((void *)v7), *this = v14, v23 = *(unsigned __int16 *)(v22 + 8), v23 < a2)|| (v16 = *(unsigned __int16 *)(v22 + (((v23 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v16 < 2))
      {
        long long v17 = TUIDefaultLog();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          goto LABEL_34;
        }
        goto LABEL_15;
      }
    }
    else if (*(unsigned __int16 *)(v10 - *(unsigned int *)(v10 + 4) + 12) < a2 {
           || (uint64_t v12 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, a2)) == 0
    }
           || (uint64_t v13 = v12,
               unint64_t v14 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap(v7, v12), free((void *)v7), *this = v14, v15 = *(unsigned __int16 *)(v13 + 8), v15 < a2)|| (v16 = *(unsigned __int16 *)(v13 + (((v15 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v16 < 2))
    {
      long long v17 = TUIDefaultLog();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
LABEL_34:

        return 0;
      }
LABEL_15:
      sub_191A3C();
      goto LABEL_34;
    }
    unint64_t v30 = v16 >> 1;
    if (a4) {
      *((_WORD *)v14 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
    }
    return (unint64_t)v14 + v30;
  }
  if ((v7 & 1) == 0)
  {
    unsigned int v9 = TUIDefaultLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_191AA4(v9);
    }

    return 0;
  }
  uint64_t v18 = *(unsigned int *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 4);
  if (v18) {
    unint64_t v19 = (v7 & 0xFFFFFFFFFFFFFFFELL) + *(unsigned int *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 4 * v18 + 12);
  }
  else {
    unint64_t v19 = 0;
  }
  unsigned int v26 = *(unsigned __int16 *)(v19 + 8);
  if (v26 < a2)
  {
    long long v17 = TUIDefaultLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_191AE8();
    }
    goto LABEL_34;
  }
  unint64_t v27 = *(unsigned __int16 *)(v19 + (((v26 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12);
  if (v27 < 2)
  {
    long long v17 = TUIDefaultLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_191B50();
    }
    goto LABEL_34;
  }
  unint64_t v28 = v27 >> 1;
  long long v29 = malloc_type_malloc(*(unsigned __int16 *)(v19 + 10), 0x189F37EEuLL);
  bzero(v29, *(unsigned __int16 *)(v19 + 10));
  *long long v29 = v19;
  bzero(v29 + 1, ((*(unsigned __int16 *)(v19 + 8) + 16) >> 3) & 0x3FFELL);
  if (a4) {
    *((_WORD *)v29 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
  }
  *this = (TUI::Util::PartialStruct::Storage::Header *)v29;
  return (unint64_t)v29 + v28;
}

uint64_t *TUI::Util::PartialStruct::Storage::markAsDefault(uint64_t *this, unsigned int a2)
{
  uint64_t v2 = *this;
  if (*this) {
    BOOL v3 = (*this & 1) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  if (v3 && *(unsigned __int16 *)(*(void *)v2 + 8) >= a2) {
    *(_WORD *)(v2 + 2 * (a2 >> 4) + 8) &= ~(1 << (a2 & 0xF));
  }
  return this;
}

void *TUI::Util::PartialStruct::Storage::getObjectForKey(TUI::Util::PartialStruct::Storage *this, unsigned int a2)
{
  uint64_t v2 = (void *)TUI::Util::PartialStruct::Storage::dataForKey(this, a2);
  if (v2) {
    uint64_t v2 = (void *)*v2;
  }

  return v2;
}

uint64_t TUI::Util::PartialStruct::Storage::allocated(TUI::Util::PartialStruct::Storage *this)
{
  if (*(void *)this) {
    BOOL v1 = (*(void *)this & 1) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1) {
    return *(unsigned __int16 *)(**(void **)this + 10);
  }
  else {
    return 0;
  }
}

void TUI::Util::PartialStruct::Storage::compress(TUI::Util::PartialStruct::Storage::Header **this)
{
  BOOL v1 = *this;
  if (*this) {
    BOOL v2 = ((unint64_t)*this & 1) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (v2)
  {
    uint64_t v4 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, 0xFFFFu);
    if (v4)
    {
      if (*(void *)v1 != v4)
      {
        unint64_t v5 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap((uint64_t)v1, v4);
        free(v1);
        *this = v5;
      }
    }
  }
}

void sub_ACFDC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_AD4B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_AD524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_AD5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_AD6C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_123E4(a10);
  }
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_AD7E8(id a1)
{
  BOOL v1 = (void *)qword_2DF538;
  qword_2DF538 = (uint64_t)&off_268640;
}

id sub_AEB28(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 lastObject];
  int v5 = [v4 count] == 0;

  if (*(unsigned __int8 *)(a1 + 32) == v5)
  {
    unsigned int v6 = &__NSArray0__struct;
  }
  else
  {
    uint64_t v7 = [v3 lastObject];
    uint64_t v9 = v7;
    unsigned int v6 = +[NSArray arrayWithObjects:&v9 count:1];
  }

  return v6;
}

void sub_AEE5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_B092C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t sub_B0964(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_B0974(uint64_t a1)
{
}

void sub_B097C(uint64_t a1, void *a2, void *a3)
{
  id v16 = a2;
  id v5 = a3;
  unsigned int v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v16];
  if (v6)
  {
    uint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    if (!v7)
    {
      BOOL v8 = [*(id *)(*(void *)(a1 + 40) + 48) deletedModels];
      id v9 = [v8 mutableCopy];
      uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
      unsigned int v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;

      uint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    }
    [v7 setObject:v6 forKeyedSubscript:v16];
  }
  else
  {
    uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (!v12)
    {
      uint64_t v13 = [*(id *)(*(void *)(a1 + 40) + 40) containedSubmodels];
      id v14 = [v13 mutableCopy];
      unsigned int v15 = v14;
      if (!v14) {
        unsigned int v15 = objc_opt_new();
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v15);
      if (!v14) {

      }
      uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    }
    [v12 addObject:v5];
  }
}

void sub_B0AD4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void **)(*(void *)(a1[6] + 8) + 40);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_B0C04;
  void v14[3] = &unk_254850;
  id v8 = v5;
  id v15 = v8;
  id v9 = [v7 indexOfObjectPassingTest:v14];
  if (v9 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v10 = v9;
    unsigned int v11 = [*(id *)(a1[4] + 40) identifierToContainedSubmodelMap];
    uint64_t v12 = [v11 objectForKeyedSubscript:v8];

    id v13 = [v12 newToContainerPlusDeletesWithUpdate:v6 interests:a1[5]];
    [*(id *)(*(void *)(a1[6] + 8) + 40) replaceObjectAtIndex:v10 withObject:v13];
  }
}

id sub_B0C04(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_B0DC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_B0F14;
  v16[3] = &unk_254850;
  id v8 = v5;
  id v17 = v8;
  id v9 = [v7 indexOfObjectPassingTest:v16];
  if (v9 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v10 = v9;
    unsigned int v11 = [*(id *)(*(void *)(a1 + 40) + 40) identifierToContainedSubmodelMap];
    uint64_t v12 = [v11 objectForKeyedSubscript:v8];

    id v13 = [*(id *)(*(void *)(a1 + 40) + 24) identifierToContainedSubmodelMap];
    id v14 = [v13 objectForKeyedSubscript:v8];

    id v15 = [v12 newCurrentContainerPlusInsertsWithCurrent:v14 update:v6];
    [*(id *)(a1 + 32) replaceObjectAtIndex:v10 withObject:v15];
  }
}

id sub_B0F14(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

float64x2_t TUITransformedCornersOfRect(float64x2_t *a1, double *a2, double *a3, double *a4, double *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  CGFloat MinX = CGRectGetMinX(*(CGRect *)&a6);
  v23.origin.double x = a6;
  v23.origin.CGFloat y = a7;
  v23.size.double width = a8;
  v23.size.CGFloat height = a9;
  CGFloat MinY = CGRectGetMinY(v23);
  v24.origin.double x = a6;
  v24.origin.CGFloat y = a7;
  v24.size.double width = a8;
  v24.size.CGFloat height = a9;
  CGFloat MaxX = CGRectGetMaxX(v24);
  v25.origin.double x = a6;
  v25.origin.CGFloat y = a7;
  v25.size.double width = a8;
  v25.size.CGFloat height = a9;
  CGFloat MaxY = CGRectGetMaxY(v25);
  *a2 = MinX;
  a2[1] = MinY;
  *a3 = MinX;
  a3[1] = MaxY;
  *a4 = MaxX;
  a4[1] = MaxY;
  *a5 = MaxX;
  a5[1] = MinY;
  *(float64x2_t *)a2 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a2[1]), *a1, *a2));
  *(float64x2_t *)a3 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a3[1]), *a1, *a3));
  *(float64x2_t *)a4 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a4[1]), *a1, *a4));
  float64x2_t result = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a5[1]), *a1, *a5));
  *(float64x2_t *)a5 = result;
  return result;
}

double TUIFloatRoundedForScale(double result, double a2)
{
  if (a2 > 0.0) {
    return round(result * a2) / a2;
  }
  return result;
}

double TUISizeRoundedForScale(double result, double a2, double a3)
{
  if (a3 > 0.0) {
    return round(result * a3) / a3;
  }
  return result;
}

double TUIPointRoundedForScale(double result, double a2, double a3)
{
  if (a3 > 0.0) {
    return round(result * a3) / a3;
  }
  return result;
}

double TUIInsetsExtendedForScale(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6)
{
  if (a5 > 0.0)
  {
    *(double *)a6.i64 = ceil(fabs(*(double *)a1.i64) * a5) / a5;
    v6.f64[0] = NAN;
    v6.f64[1] = NAN;
    a1.i64[0] = vbslq_s8((int8x16_t)vnegq_f64(v6), a6, a1).u64[0];
  }
  return *(double *)a1.i64;
}

void sub_B1E50(id a1)
{
  CFStringRef v4 = @"param";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF560;
  qword_2DF560 = v2;
}

void sub_B1F68(id a1)
{
  CFStringRef v4 = @"n";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF570;
  qword_2DF570 = v2;
}

void sub_B2130(id a1)
{
  CFStringRef v4 = @"n";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF580;
  qword_2DF580 = v2;
}

void sub_B22DC(id a1)
{
  CFStringRef v4 = @"n";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF590;
  qword_2DF590 = v2;
}

void sub_B25A0(id a1)
{
  CFStringRef v4 = @"param";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF5A0;
  qword_2DF5A0 = v2;
}

void sub_B26CC(id a1)
{
  CFStringRef v4 = @"n";
  BOOL v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF5B0;
  qword_2DF5B0 = v2;
}

id sub_B32D0(uint64_t a1)
{
  CGContextTranslateCTM(*(CGContextRef *)(a1 + 40), 0.0, -*(double *)(*(void *)(a1 + 32) + 24));
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);

  return +[TSWPText renderColumns:v3 selection:0 inContext:v2 isFlipped:0 viewScale:1.0];
}

void sub_B5054(id a1)
{
  BOOL v1 = (void *)qword_2DF5C0;
  qword_2DF5C0 = (uint64_t)&off_268668;
}

void sub_B575C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    uint64_t v2 = objc_opt_new();
    sub_B5920(v2, *(void **)(*(void *)(a1 + 32) + 40), 0);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = *(id *)(*(void *)(a1 + 32) + 48);
    id v4 = [v3 countByEnumeratingWithState:&v13 objects:v21 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v14;
      do
      {
        for (unsigned __int16 i = 0; i != v5; unsigned __int16 i = (char *)i + 1)
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          id v9 = TUILinkEntityObserverLog();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            uint64_t v10 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 134218242;
            uint64_t v18 = v10;
            __int16 v19 = 2112;
            unint64_t v20 = v2;
            _os_log_impl(&def_141F14, v9, OS_LOG_TYPE_INFO, "detach-from-tracker observer[%p]: removed=%@", buf, 0x16u);
          }

          [v8 linkEntityController:*(void *)(a1 + 32) visibleEntityReferencesWithAdded:0 removed:v2];
        }
        id v5 = [v3 countByEnumeratingWithState:&v13 objects:v21 count:16];
      }
      while (v5);
    }

    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = 0;
  }
}

void sub_B5920(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v8 = [v6 identifiers];
  id v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v23;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v23 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void *)(*((void *)&v22 + 1) + 8 * (void)v12);
        long long v14 = [v6 attributesMap];
        long long v15 = [v14 objectForKeyedSubscript:v13];

        sub_B6F8C(v5, v15, v7);
        uint64_t v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v10);
  }

  long long v16 = [v6 identifierNodeMap];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_B7104;
  v19[3] = &unk_2549D0;
  id v20 = v7;
  id v21 = v5;
  id v17 = v5;
  id v18 = v7;
  [v16 enumerateKeysAndObjectsUsingBlock:v19];
}

void sub_B5CF8(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  uint64_t v11 = [v9 added];
  id v12 = [v11 countByEnumeratingWithState:&v39 objects:v44 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v40;
    do
    {
      long long v15 = 0;
      do
      {
        if (*(void *)v40 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void *)(*((void *)&v39 + 1) + 8 * (void)v15);
        id v17 = [v9 attributesMap];
        id v18 = [v17 objectForKeyedSubscript:v16];

        sub_B6F8C(v7, v18, v10);
        long long v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      id v13 = [v11 countByEnumeratingWithState:&v39 objects:v44 count:16];
    }
    while (v13);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  __int16 v19 = [v9 removed];
  id v20 = [v19 countByEnumeratingWithState:&v35 objects:v43 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v36;
    do
    {
      long long v23 = 0;
      do
      {
        if (*(void *)v36 != v22) {
          objc_enumerationMutation(v19);
        }
        uint64_t v24 = *(void *)(*((void *)&v35 + 1) + 8 * (void)v23);
        long long v25 = [v9 attributesMap];
        unsigned int v26 = [v25 objectForKeyedSubscript:v24];

        sub_B6F8C(v8, v26, v10);
        long long v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      id v21 = [v19 countByEnumeratingWithState:&v35 objects:v43 count:16];
    }
    while (v21);
  }

  unint64_t v27 = [v9 identifierNodeMap];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_B7194;
  v31[3] = &unk_2549F8;
  id v32 = v10;
  id v33 = v7;
  id v34 = v8;
  id v28 = v8;
  id v29 = v7;
  id v30 = v10;
  [v27 enumerateKeysAndObjectsUsingBlock:v31];
}

void sub_B6068(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) addObject:*(void *)(a1 + 40)];
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    uint64_t v2 = objc_opt_new();
    sub_B6170(v2, *(void **)(*(void *)(a1 + 32) + 40), 0);
    id v3 = TUILinkEntityObserverLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 134218242;
      uint64_t v6 = v4;
      __int16 v7 = 2112;
      id v8 = v2;
      _os_log_impl(&def_141F14, v3, OS_LOG_TYPE_INFO, "add observer[%p]: added=%@", (uint8_t *)&v5, 0x16u);
    }

    [*(id *)(a1 + 40) linkEntityController:*(void *)(a1 + 32) visibleEntityReferencesWithAdded:v2 removed:0];
  }
}

void sub_B6170(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v8 = [v6 identifiers];
  id v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v23;
    do
    {
      id v12 = 0;
      do
      {
        if (*(void *)v23 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void *)(*((void *)&v22 + 1) + 8 * (void)v12);
        uint64_t v14 = [v6 attributesMap];
        long long v15 = [v14 objectForKeyedSubscript:v13];

        sub_B6F8C(v5, v15, v7);
        id v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v10);
  }

  uint64_t v16 = [v6 identifierNodeMap];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_B7224;
  v19[3] = &unk_2549D0;
  id v20 = v7;
  id v21 = v5;
  id v17 = v5;
  id v18 = v7;
  [v16 enumerateKeysAndObjectsUsingBlock:v19];
}

void sub_B63F0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) removeObject:*(void *)(a1 + 40)];
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    uint64_t v2 = objc_opt_new();
    sub_B5920(v2, *(void **)(*(void *)(a1 + 32) + 40), 0);
    id v3 = TUILinkEntityObserverLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 134218242;
      uint64_t v6 = v4;
      __int16 v7 = 2112;
      id v8 = v2;
      _os_log_impl(&def_141F14, v3, OS_LOG_TYPE_INFO, "remove observer[%p]: removed=%@", (uint8_t *)&v5, 0x16u);
    }

    [*(id *)(a1 + 40) linkEntityController:*(void *)(a1 + 32) visibleEntityReferencesWithAdded:0 removed:v2];
  }
}

void sub_B65BC(uint64_t a1)
{
  id v2 = (id)objc_opt_new();
  sub_B662C(v2, *(void **)(a1 + 40), *(void **)(*(void *)(a1 + 32) + 40), 0);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_B662C(void *a1, void *a2, void *a3, void *a4)
{
  id v30 = a1;
  id v36 = a2;
  id v7 = a3;
  id v29 = a4;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v31 = v7;
  obuint64_t j = [v7 identifiers];
  id v32 = [obj countByEnumeratingWithState:&v41 objects:v49 count:16];
  if (v32)
  {
    uint64_t v28 = *(void *)v42;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v42 != v28) {
          objc_enumerationMutation(obj);
        }
        uint64_t v33 = v8;
        uint64_t v9 = *(void *)(*((void *)&v41 + 1) + 8 * v8);
        id v10 = [v31 attributesMap];
        uint64_t v11 = [v10 objectForKeyedSubscript:v9];

        id v35 = v30;
        id v34 = v36;
        id v12 = v11;
        id v13 = v29;
        long long v45 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        uint64_t v14 = [v12 linkEntities];
        id v15 = [v14 countByEnumeratingWithState:&v45 objects:v50 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v46;
          do
          {
            for (unsigned __int16 i = 0; i != v16; unsigned __int16 i = (char *)i + 1)
            {
              if (*(void *)v46 != v17) {
                objc_enumerationMutation(v14);
              }
              uint64_t v19 = *(void *)(*((void *)&v45 + 1) + 8 * i);
              if (!v36
                || (*((unsigned int (**)(id, void))v36 + 2))(v34, *(void *)(*((void *)&v45 + 1) + 8 * i)))
              {
                id v20 = [TUILinkEntityReference alloc];
                id v21 = [v12 identifier];
                long long v22 = [(TUILinkEntityReference *)v20 initWithModel:v19 path:v13 renderIdentifier:v21];

                [v35 addObject:v22];
              }
            }
            id v16 = [v14 countByEnumeratingWithState:&v45 objects:v50 count:16];
          }
          while (v16);
        }

        uint64_t v8 = v33 + 1;
      }
      while ((id)(v33 + 1) != v32);
      id v32 = [obj countByEnumeratingWithState:&v41 objects:v49 count:16];
    }
    while (v32);
  }

  long long v23 = [v31 identifierNodeMap];
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_B72B4;
  v37[3] = &unk_254A20;
  id v38 = v29;
  id v39 = v30;
  id v40 = v36;
  id v24 = v36;
  id v25 = v30;
  id v26 = v29;
  [v23 enumerateKeysAndObjectsUsingBlock:v37];
}

void sub_B6F8C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  obuint64_t j = [v6 linkEntities];
  id v8 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v18;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void *)(*((void *)&v17 + 1) + 8 * (void)v11);
        id v13 = [TUILinkEntityReference alloc];
        uint64_t v14 = [v6 identifier];
        id v15 = [(TUILinkEntityReference *)v13 initWithModel:v12 path:v7 renderIdentifier:v14];

        [v5 addObject:v15];
        uint64_t v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v9);
  }
}

void sub_B7104(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[_TUILinkEntityReferencePath alloc] initWithIdentifier:v6 parent:*(void *)(a1 + 32)];

  sub_B5920(*(void *)(a1 + 40), v5, v7);
}

void sub_B7194(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[_TUILinkEntityReferencePath alloc] initWithIdentifier:v6 parent:a1[4]];

  sub_B5CF8(a1[5], a1[6], v5, v7);
}

void sub_B7224(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[_TUILinkEntityReferencePath alloc] initWithIdentifier:v6 parent:*(void *)(a1 + 32)];

  sub_B6170(*(void *)(a1 + 40), v5, v7);
}

void sub_B72B4(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[_TUILinkEntityReferencePath alloc] initWithIdentifier:v6 parent:a1[4]];

  sub_B662C(a1[5], a1[6], v5, v7);
}

id sub_B86A4(uint64_t a1)
{
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 32)];
  [*(id *)(*(void *)(a1 + 32) + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 48)];
  [*(id *)(*(void *)(a1 + 32) + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 56)];
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 40)];
  id v2 = *(void **)(a1 + 32);

  return [v2 _updateGeometry];
}

id sub_B95C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) updateVisible:a3 forIdentifier:*(void *)(a1 + 40)];
}

void sub_B9878(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

id sub_B9D18(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 appendRenderOverrideObservers:*(void *)(a1 + 32)];
}

void sub_BA918(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_BA95C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_BA96C(uint64_t a1)
{
}

void sub_BA974(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 56);
  *(void *)(v2 + 56) = 0;

  [*(id *)(a1 + 32) updateFromState];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = 0;
}

BOOL TUIRenderModelIsEqualToRenderModel(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 == v4)
  {
    BOOL v16 = 1;
  }
  else
  {
    if ((v3 == 0) == (v4 != 0)) {
      goto LABEL_8;
    }
    id v6 = [v3 kind];
    if (v6 != [v5 kind]) {
      goto LABEL_8;
    }
    id v7 = [v3 identifier];
    id v8 = [v5 identifier];
    unsigned int v9 = TUIIdentifierIsEqualToIdentifier(v7, v8);

    if (v9)
    {
      [v3 size];
      double v11 = v10;
      double v13 = v12;
      [v5 size];
      BOOL v16 = v13 == v15 && v11 == v14;
    }
    else
    {
LABEL_8:
      BOOL v16 = 0;
    }
  }

  return v16;
}

void TUIRenderModelCopyProperties(void *a1, void *a2)
{
  id v3 = a2;
  id v9 = a1;
  id v4 = [v3 identifier];
  [v9 setIdentifier:v4];

  [v3 size];
  double v6 = v5;
  double v8 = v7;

  [v9 setSize:v6, v8];
}

id TUIRenderModelArrayContainingIsEqualToRenderModelArrayContaining(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (TUIRenderModelIsEqualToRenderModel(v3, v4))
  {
    double v5 = [v3 containedSubmodels];
    double v6 = [v4 containedSubmodels];
    if (v5 == v6 || [v5 isEqual:v6])
    {
      double v7 = [v3 identifierToContainedSubmodelMap];
      double v8 = [v4 identifierToContainedSubmodelMap];
      if (v7 == v8) {
        id v9 = &def_141F14 + 1;
      }
      else {
        id v9 = [v7 isEqual:v8];
      }
    }
    else
    {
      id v9 = 0;
    }
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void TUIRenderModelDebugCollectContainedModels(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  double v5 = v4;
  if (v3 && ([v4 containsObject:v3] & 1) == 0)
  {
    [v5 addObject:v3];
    double v6 = TUIProtocolCast(&OBJC_PROTOCOL___TUIRenderModelBaseContaining, v3);
    double v7 = v6;
    if (v6)
    {
      long long v15 = 0u;
      long long v16 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      double v8 = [v6 debugContainedSubmodels];
      id v9 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v14;
        do
        {
          double v12 = 0;
          do
          {
            if (*(void *)v14 != v11) {
              objc_enumerationMutation(v8);
            }
            TUIRenderModelDebugCollectContainedModels(*(void *)(*((void *)&v13 + 1) + 8 * (void)v12), v5);
            double v12 = (char *)v12 + 1;
          }
          while (v10 != v12);
          id v10 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
        }
        while (v10);
      }
    }
  }
}

id TUIRenderModelDebugTree(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_new();
  id v3 = v2;
  if (v1) {
    sub_BDD5C(v2, v1, &stru_257BF0);
  }

  return v3;
}

void sub_BDD5C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  double v8 = (objc_class *)objc_opt_class();
  id v9 = NSStringFromClass(v8);
  id v10 = [v6 identifier];
  [v5 appendFormat:@"%@%@ %p id=%@\n", v7, v9, v6, v10];

  uint64_t v11 = TUIProtocolCast(&OBJC_PROTOCOL___TUIRenderModelBaseContaining, v6);
  if (v11)
  {
    id v12 = [objc_alloc((Class)NSString) initWithFormat:@"%@  ", v7];
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v13 = [v11 debugContainedSubmodels];
    id v14 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v19;
      do
      {
        long long v17 = 0;
        do
        {
          if (*(void *)v19 != v16) {
            objc_enumerationMutation(v13);
          }
          sub_BDD5C(v5, *(void *)(*((void *)&v18 + 1) + 8 * (void)v17), v12);
          long long v17 = (char *)v17 + 1;
        }
        while (v15 != v17);
        id v15 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v15);
    }
  }
}

void sub_C1CE8(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose((const void *)(v1 - 256), 8);
  _Block_object_dispose(&STACK[0x2E0], 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_C1E70(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
  id v4 = [(_TUIFeedLayoutSection *)a3 layoutController];
  [v4 resetInstantiationStats:1];
}

uint64_t sub_C1EB8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_C1EC8(uint64_t a1)
{
}

id sub_C1ED0(uint64_t a1, void *a2)
{
  id v3 = [a2 uuid];
  id v4 = [v3 isEqual:*(void *)(*(void *)(a1 + 32) + 368)];

  return v4;
}

void sub_C1F18(void *a1, uint64_t a2)
{
  id v4 = *(void **)(a1[4] + 320);
  id v5 = +[NSNumber numberWithUnsignedInteger:a2];
  id v18 = [v4 objectForKeyedSubscript:v5];

  if ([v18 needsInstantiation])
  {
    [v18 lq_instantiateWithController:a1[4] transactionGroup:a1[5]];
LABEL_13:
    id v14 = *(void **)(*(void *)(a1[8] + 8) + 40);
    if (!v14)
    {
      uint64_t v15 = objc_opt_new();
      uint64_t v16 = *(void *)(a1[8] + 8);
      long long v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 40) = v15;

      id v14 = *(void **)(*(void *)(a1[8] + 8) + 40);
    }
    [v14 addIndex:a2];
    goto LABEL_16;
  }
  if ([v18 environmentNeedsUpdate]) {
    [v18 lq_updateEnvironment:a1[4] + 80 withTransactionGroup:a1[5]];
  }
  id v6 = [v18 entry];
  id v7 = [v6 stackNames];
  if ([v7 containsObject:a1[6]])
  {
    unsigned int v8 = 1;
  }
  else
  {
    id v9 = [v18 entry];
    id v10 = [v9 stackNames];
    unsigned int v8 = [v10 containsObject:*(void *)(a1[4] + 216)];
  }
  unsigned __int8 v11 = [v18 lq_updateLayoutWithTransactionGroup:a1[5]];
  uint64_t v12 = *(void *)(a1[7] + 8);
  if (*(unsigned char *)(v12 + 24)) {
    char v13 = 1;
  }
  else {
    char v13 = v11;
  }
  *(unsigned char *)(v12 + 24) = v13;
  if ((v11 & 1) != 0 || v8) {
    goto LABEL_13;
  }
LABEL_16:
}

id sub_C20BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _lq_scheduleLayoutRemainder];
}

void sub_C20C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 304);
  if (v3 != 0x7FFFFFFFFFFFFFFFLL && v3 == *(void *)(v2 + 296))
  {
    id v4 = [*(id *)(v2 + 256) info];
    id v5 = [v4 objectForKeyedSubscript:@"TUIRenderInfoKeyIsFinal"];
    unsigned __int8 v6 = [v5 BOOLValue];

    if ((v6 & 1) == 0)
    {
      long long v43 = *(void **)(a1 + 32);
      uint64_t v78 = v43[9];
      BOOL v11 = v78 != 0;
      BOOL v16 = *(unsigned char *)(a1 + 120) != 0;
      if (v43[38]) {
        uint64_t v44 = 2;
      }
      else {
        uint64_t v44 = 1;
      }
      [v43 setLayoutState:v44];
      long long v45 = [TUIRenderModelCollection alloc];
      long long v46 = *(void **)(a1 + 32);
      uint64_t v47 = *(void *)(a1 + 40);
      uint64_t v48 = v46[9];
      uint64_t v49 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
      uint64_t v50 = *(void *)(*(void *)(a1 + 96) + 8);
      uint64_t v51 = [v46 _infoForFinal:1];
      uint64_t v52 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v45, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", v48, v49, v47, v51, *(void *)(a1 + 48), [*(id *)(*(void *)(a1 + 32) + 80) layoutDirection], *(double *)(v50 + 32), *(double *)(v50 + 40), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, 0, 0);
      uint64_t v53 = *(void *)(*(void *)(a1 + 80) + 8);
      double v54 = *(void **)(v53 + 40);
      *(void *)(v53 + 40) = v52;

      objc_storeStrong((id *)(*(void *)(a1 + 32) + 256), *(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
      if (objc_msgSend(*(id *)(a1 + 32), "_lq_shouldSubmitRenderModelUpdate:transactionGroup:", *(unsigned __int8 *)(a1 + 121), *(void *)(a1 + 56)))
      {
        uint64_t v55 = *(void *)(a1 + 32);
        uint64_t v56 = *(void *)(v55 + 344);
        if (v56 == 1)
        {
          [*(id *)(v55 + 120) updateWithRenderModel:*(void *)(v55 + 280) transactionGroup:*(void *)(a1 + 56) hasInvalidLayouts:*(unsigned __int8 *)(a1 + 122)];
        }
        else
        {
          if (v56) {
            goto LABEL_42;
          }
          [*(id *)(v55 + 104) updateWithHostingMap:*(void *)(v55 + 264) transactionGroup:*(void *)(a1 + 56)];
          [*(id *)(*(void *)(a1 + 32) + 104) updateWithRenderModel:*(void *)(*(void *)(a1 + 32) + 256) viewState:*(void *)(a1 + 64) flags:*(void *)(a1 + 112) transactionGroup:*(void *)(a1 + 56)];
          [*(id *)(*(void *)(a1 + 32) + 112) updateWithRenderModel:*(void *)(*(void *)(a1 + 32) + 272) transactionGroup:*(void *)(a1 + 56)];
        }
        int v68 = 1;
        if (!v78) {
          goto LABEL_47;
        }
        goto LABEL_39;
      }
LABEL_38:
      int v68 = 0;
      if (!v11)
      {
LABEL_47:
        if (!v16) {
          goto LABEL_58;
        }
        int v70 = 0;
        goto LABEL_49;
      }
LABEL_39:
      uint64_t v69 = [*(id *)(*(void *)(a1 + 32) + 184) initialContentReadyDate];
      if (!v69) {
        goto LABEL_52;
      }
      long long v45 = v69;
      if (!v16)
      {

        goto LABEL_58;
      }
      int v70 = 1;
LABEL_49:
      uint64_t v71 = [*(id *)(*(void *)(a1 + 32) + 184) allContentReadyDate];

      if (!v70)
      {
        if (v71) {
          goto LABEL_58;
        }
        char v73 = 0;
        char v74 = 0;
        *(unsigned char *)(*(void *)(a1 + 32) + 8) &= ~1u;
        BOOL v16 = 1;
        goto LABEL_57;
      }

      if (v71) {
        goto LABEL_58;
      }
      BOOL v16 = 1;
LABEL_52:
      *(unsigned char *)(*(void *)(a1 + 32) + 8) &= ~1u;
      uint64_t v72 = *(void *)(a1 + 32);
      if ((*(unsigned char *)(v72 + 8) & 2) != 0)
      {
        char v74 = 0;
        char v73 = 1;
      }
      else
      {
        *(unsigned char *)(v72 + 8) |= 2u;
        char v73 = 1;
        char v74 = 1;
      }
LABEL_57:
      uint64_t v75 = *(void **)(a1 + 56);
      v79[0] = _NSConcreteStackBlock;
      v79[1] = 3221225472;
      v79[2] = sub_C281C;
      v79[3] = &unk_254B78;
      char v80 = v74;
      v79[4] = *(void *)(a1 + 32);
      BOOL v81 = v16;
      BOOL v82 = v16;
      char v83 = v73;
      [v75 appendUpdateBlock:v79];
      goto LABEL_58;
    }
  }
  if (*(unsigned char *)(a1 + 123))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) || *(unsigned char *)(v7 + 32))
  {
LABEL_8:
    uint64_t v8 = *(void *)(v7 + 304);
    if (v8 == 0x7FFFFFFFFFFFFFFFLL)
    {
      if (!*(void *)(v7 + 72)) {
        goto LABEL_18;
      }
      goto LABEL_13;
    }
    uint64_t v9 = *(void *)(v7 + 296);
    uint64_t v10 = *(void *)(v7 + 72);
    BOOL v11 = v10 != 0;
    if (v10)
    {
      if (v8 != v9)
      {
LABEL_13:
        double v12 = *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
        [*(id *)(v7 + 80) viewSize];
        if (v12 > v13
          || (uint64_t v14 = *(void *)(a1 + 32),
              unint64_t v15 = *(void *)(v14 + 296),
              v15 > (unint64_t)[*(id *)(v14 + 72) initialContentReadyEntryIndex]))
        {
          BOOL v11 = 1;
          goto LABEL_19;
        }
LABEL_18:
        BOOL v11 = 0;
LABEL_19:
        uint64_t v18 = *(void *)(a1 + 32);
        unint64_t v19 = *(void *)(v18 + 304);
        if (v19 != 0x7FFFFFFFFFFFFFFFLL && *(void *)(v18 + 296) < v19)
        {
          id v20 = [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) count];
          long long v21 = *(id **)(a1 + 32);
          if (v20)
          {
            [v21[10] viewSize];
            double v23 = v22;
            uint64_t v24 = *(void *)(a1 + 32);
            double v25 = *(double *)(v24 + 144);
            [*(id *)(v24 + 80) viewSize];
            double v27 = v26 * 0.5;
            uint64_t v28 = *(void *)(a1 + 32);
            double v29 = *(double *)(v28 + 152);
            double v30 = *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
            if (v29 < v30 + v25 * 0.5) {
              double v29 = v30 + v25 * 0.5;
            }
            double v31 = v29 - v30;
            id v32 = *(void **)(v28 + 320);
            uint64_t v33 = +[NSNumber numberWithUnsignedInteger:*(void *)(v28 + 296)];
            id v34 = [v32 objectForKeyedSubscript:v33];
            id v35 = [v34 loadingRenderModelWithSize:*(void *)(*(void *)(a1 + 32) + 80) center:v23 environment:v25];

            id v36 = [v35 section];
            double v37 = *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
            id v38 = [v35 UUID];
            id v39 = [v35 copyWithSection:v36 offset:v38 uuid:0.0 v37];

            [v39 frame];
            *(CGFloat *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) = CGRectGetMaxY(v84);
            uint64_t v40 = [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) arrayByAddingObject:v39];
            uint64_t v41 = *(void *)(*(void *)(a1 + 88) + 8);
            long long v42 = *(void **)(v41 + 40);
            *(void *)(v41 + 40) = v40;

            [*(id *)(a1 + 32) setLayoutState:2];
          }
          else
          {
            [v21 setLayoutState:1];
          }
        }
        BOOL v16 = 0;
        uint64_t v17 = 0;
LABEL_34:
        double v57 = [TUIRenderModelCollection alloc];
        CGRect v58 = *(void **)(a1 + 32);
        uint64_t v59 = *(void *)(a1 + 40);
        uint64_t v60 = v58[9];
        uint64_t v61 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
        uint64_t v62 = *(void *)(*(void *)(a1 + 96) + 8);
        long long v45 = [v58 _infoForFinal:v17];
        unint64_t v63 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v57, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", v60, v61, v59, v45, *(void *)(a1 + 48), [*(id *)(*(void *)(a1 + 32) + 80) layoutDirection], *(double *)(v62 + 32), *(double *)(v62 + 40), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, 0, 0);
        uint64_t v64 = *(void *)(*(void *)(a1 + 80) + 8);
        unint64_t v65 = *(void **)(v64 + 40);
        *(void *)(v64 + 40) = v63;

        objc_storeStrong((id *)(*(void *)(a1 + 32) + 256), *(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
        if (objc_msgSend(*(id *)(a1 + 32), "_lq_shouldSubmitRenderModelUpdate:transactionGroup:", *(unsigned __int8 *)(a1 + 121), *(void *)(a1 + 56)))
        {
          uint64_t v66 = *(void *)(a1 + 32);
          uint64_t v67 = *(void *)(v66 + 344);
          if (v67 == 1)
          {
            [*(id *)(v66 + 120) updateWithRenderModel:*(void *)(v66 + 280) transactionGroup:*(void *)(a1 + 56) hasInvalidLayouts:*(unsigned __int8 *)(a1 + 122)];
LABEL_46:
            int v68 = 1;
            if (!v11) {
              goto LABEL_47;
            }
            goto LABEL_39;
          }
          if (!v67)
          {
            [*(id *)(v66 + 104) updateWithHostingMap:*(void *)(v66 + 264) transactionGroup:*(void *)(a1 + 56)];
            [*(id *)(*(void *)(a1 + 32) + 104) updateWithRenderModel:*(void *)(*(void *)(a1 + 32) + 256) viewState:*(void *)(a1 + 64) flags:*(void *)(a1 + 112) transactionGroup:*(void *)(a1 + 56)];
            [*(id *)(*(void *)(a1 + 32) + 112) updateWithRenderModel:*(void *)(*(void *)(a1 + 32) + 272) transactionGroup:*(void *)(a1 + 56)];
            goto LABEL_46;
          }
LABEL_42:
          int v68 = 1;
          if (!v11) {
            goto LABEL_47;
          }
          goto LABEL_39;
        }
        goto LABEL_38;
      }
    }
    else if (v8 != v9)
    {
      goto LABEL_18;
    }
    BOOL v16 = *(unsigned char *)(a1 + 120) != 0;
    [(id)v7 setLayoutState:2];
    uint64_t v17 = 1;
    goto LABEL_34;
  }
  int v68 = 0;
LABEL_58:
  if (*(unsigned char *)(a1 + 123))
  {
    uint64_t v76 = *(void *)(a1 + 32);
  }
  else
  {
    uint64_t v76 = *(void *)(a1 + 32);
    if (!*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) && !*(unsigned char *)(v76 + 32)) {
      return;
    }
  }
  uint64_t v77 = [*(id *)(v76 + 184) initialLayoutStartDate];

  if (v77)
  {
    if (!v68) {
      return;
    }
    goto LABEL_64;
  }
  [*(id *)(*(void *)(a1 + 32) + 184) setInitialLayoutStartDate:*(void *)(a1 + 72)];
  if (v68) {
LABEL_64:
  }
    [*(id *)(a1 + 32) lq_updateAXModelTreeWithTransactionGroup:*(void *)(a1 + 56)];
}

void sub_C281C(uint64_t a1)
{
  uint64_t v2 = +[NSDate date];
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if ((*(unsigned char *)(v3 + 12) & 0x10) != 0)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(v3 + 64));
      [WeakRetained feedLayoutControllerInitialContentReady:*(void *)(a1 + 32)];
    }
  }
  if (*(unsigned char *)(a1 + 41))
  {
    if (*(unsigned char *)(a1 + 42))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      if ((*(unsigned char *)(v5 + 12) & 8) != 0)
      {
        id v6 = objc_loadWeakRetained((id *)(v5 + 64));
        [v6 feedLayoutControllerAllContentReady:*(void *)(a1 + 32)];
      }
    }
  }
  uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 240) activeQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  void block[2] = sub_C2954;
  block[3] = &unk_254B50;
  char v11 = *(unsigned char *)(a1 + 43);
  block[4] = *(void *)(a1 + 32);
  id v10 = v2;
  char v12 = *(unsigned char *)(a1 + 42);
  id v8 = v2;
  dispatch_async(v7, block);
}

void sub_C2954(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 184) initialContentReadyDate];

    if (!v2) {
      [*(id *)(*(void *)(a1 + 32) + 184) setInitialContentReadyDate:*(void *)(a1 + 40)];
    }
  }
  if (*(unsigned char *)(a1 + 49))
  {
    uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 184) allContentReadyDate];

    if (!v3) {
      [*(id *)(*(void *)(a1 + 32) + 184) setAllContentReadyDate:*(void *)(a1 + 40)];
    }
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v4 + 248) & 0x10) != 0 && (*(unsigned char *)(v4 + 12))
  {
    id v5 = +[TUITransaction noAnimationTransaction];
    [*(id *)(*(void *)(a1 + 32) + 88) scheduleLayoutUpdateWithTransaction:v5 block:&stru_254B28];
    [v5 commit];
  }
}

BOOL sub_C2A44(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

void sub_C2A4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 440);
  id v4 = a3;
  id v5 = [v4 layoutController];
  [v3 collectStatsFromLayoutController:v5];

  id v6 = [v4 layoutController];

  [v6 resetInstantiationStats:0];
}

void sub_C2AD8(uint64_t a1, uint64_t a2, void *a3)
{
  id v13 = a3;
  id v4 = [v13 timingCollector];
  [v4 finalizeWithTimebase:*(void *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 376) recordReason:[v4 reason]];
  [*(id *)(*(void *)(a1 + 32) + 376) addPhase:1 fromCollector:v4];
  [*(id *)(*(void *)(a1 + 32) + 376) addPhase:2 fromCollector:v4];
  [*(id *)(*(void *)(a1 + 32) + 376) addPhase:3 fromCollector:v4];
  [*(id *)(*(void *)(a1 + 32) + 376) addPhase:4 fromCollector:v4];
  if ([v4 reason])
  {
    id v5 = [v13 entry];
    id v6 = [v5 uid];

    uint64_t v7 = [TUIStatsFeedEntryPass alloc];
    id v8 = [v13 entry];
    uint64_t v9 = [v8 templateURL];
    id v10 = [v4 reason];
    char v11 = [v13 eventCollector];
    char v12 = [(TUIStatsFeedEntryPass *)v7 initWithURL:v9 uid:v6 reason:v10 timingCollector:v4 timeBase:*(void *)(a1 + 48) eventCollector:v11];

    [*(id *)(a1 + 40) addObject:v12];
  }
}

void sub_C2C70(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
  id v4 = a3;
  id v5 = [(_TUIFeedLayoutSection *)v4 timingCollector];
  [v5 reset];

  id v6 = [(_TUIFeedLayoutSection *)v4 eventCollector];

  [v6 reset];
}

void sub_C2CE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  [WeakRetained feedLayoutController:*(void *)(a1 + 32) updateStats:*(void *)(a1 + 40)];
}

uint64_t sub_C2DC8(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 312) |= 3uLL;
  return 1;
}

void sub_C30A4(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) completed:(void)v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_C3560(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) completed:(void)v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_C3798(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(a1 + 32) + 160);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_C3814;
  v3[3] = &unk_254C58;
  int v4 = *(_DWORD *)(a1 + 40);
  return [v1 enumerateObjectsUsingBlock:v3];
}

id sub_C3814(uint64_t a1, void *a2, double a3)
{
  LODWORD(a3) = *(_DWORD *)(a1 + 32);
  return [a2 setPriority:a3];
}

id sub_C3960(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 2sub_3BD4((uint64_t)this + 48) = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 192);
  *(void *)(v2 + 192) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 376);
  *(void *)(v4 + 376) = 0;

  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    long long v7 = [[TUIStatsCollector alloc] initWithMode:*(void *)(a1 + 40)];
    uint64_t v8 = *(void *)(a1 + 32);
    long long v9 = *(void **)(v8 + 192);
    *(void *)(v8 + 192) = v7;

    uint64_t v6 = *(void *)(a1 + 40);
    if ((v6 & 4) != 0)
    {
      id v10 = [[TUIStatsTimingCollector alloc] initWithMode:*(void *)(a1 + 40)];
      uint64_t v11 = *(void *)(a1 + 32);
      char v12 = *(void **)(v11 + 376);
      *(void *)(v11 + 376) = v10;

      uint64_t v6 = *(void *)(a1 + 40);
    }
  }
  id v13 = *(void **)(*(void *)(a1 + 32) + 320);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_C3A64;
  void v15[3] = &unk_254CA0;
  v15[4] = v6;
  return [v13 enumerateKeysAndObjectsUsingBlock:v15];
}

id sub_C3A64(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 setStatsMode:*(void *)(a1 + 32)];
}

void sub_C3BE4(uint64_t a1)
{
  uint64_t v2 = [[TUIStatsFeed alloc] initWithDates:*(void *)(*(void *)(a1 + 32) + 184) collector:*(void *)(*(void *)(a1 + 32) + 192)];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_C3D10(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 184) initialResourcesRenderedDate];

  if (!v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 184);
    _[v4 setInitialResourcesRenderedDate:v3];
  }
}

void sub_C3E30(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 184) resourcesStartLoadingDate];

  if (!v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 184);
    _[v4 setResourcesStartLoadingDate:v3];
  }
}

void sub_C3F50(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 184) resourcesLoadedDate];

  if (!v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 184);
    [v4 setResourcesLoadedDate:v3];
  }
}

void sub_C4070(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 184) viewWillAppearDate];

  if (!v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 184);
    _[v4 setViewWillAppearDate:v3];
  }
}

void sub_C4144(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 160) enumerateObjectsUsingBlock:&stru_254CE0];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 160);
  *(void *)(v2 + 160) = 0;
}

void sub_C4194(id a1, TUIFeedDataRequest *a2, unint64_t a3, BOOL *a4)
{
}

uint64_t sub_C4454(uint64_t a1, void *a2, void *a3)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
  id v6 = a3;
  id v7 = a2;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 368), *(id *)(a1 + 48));
  [*(id *)(a1 + 32) lq_updateContent:*(void *)(a1 + 56) contentUpdateDate:*(void *)(a1 + 64) transaction:v6 transactionGroup:v7];

  return 1;
}

BOOL sub_C4544(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

uint64_t sub_C475C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 1;
}

void sub_C4D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,id location,id a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  objc_destroyWeak(v49);
  objc_destroyWeak(v50);
  _Block_object_dispose(&a35, 8);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a40);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_C4D58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v6 = objc_loadWeakRetained((id *)(a1 + 64));
  BOOL v7 = ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) > 0;
  uint64_t v8 = TUILayoutLog();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);
  if (v7)
  {
    if (!v9) {
      goto LABEL_5;
    }
    id v10 = [WeakRetained feedId];
    uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    uint64_t v12 = *(void *)(a1 + 72);
    *(_DWORD *)buf = 134218754;
    id v36 = v10;
    __int16 v37 = 1024;
    int v38 = v11;
    __int16 v39 = 1024;
    *(_DWORD *)uint64_t v40 = v12;
    *(_WORD *)&void v40[4] = 2112;
    *(void *)&v40[6] = v6;
    id v13 = "[fid:%lu] #%d update entry at section %d %@";
    uint64_t v14 = v8;
    uint32_t v15 = 34;
  }
  else
  {
    if (!v9) {
      goto LABEL_5;
    }
    id v27 = [WeakRetained feedId];
    uint64_t v28 = *(void *)(a1 + 72);
    *(_DWORD *)buf = 134218498;
    id v36 = v27;
    __int16 v37 = 1024;
    int v38 = v28;
    __int16 v39 = 2112;
    *(void *)uint64_t v40 = v6;
    id v13 = "[fid:%lu] initial update entry at section %d %@";
    uint64_t v14 = v8;
    uint32_t v15 = 28;
  }
  _os_log_debug_impl(&def_141F14, v14, OS_LOG_TYPE_DEBUG, v13, buf, v15);
LABEL_5:

  if (WeakRetained) {
    BOOL v16 = v6 == 0;
  }
  else {
    BOOL v16 = 1;
  }
  int v17 = !v16;
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    if (v17)
    {
      uint64_t v18 = [WeakRetained transactionCoordinator];
      uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      void v32[2] = sub_C50E4;
      v32[3] = &unk_254D78;
      objc_copyWeak(v34, (id *)(a1 + 56));
      v34[1] = *(id *)(a1 + 80);
      id v20 = v6;
      long long v21 = *(void **)(a1 + 72);
      id v33 = v20;
      v34[2] = v21;
      [v18 scheduleLayoutUpdateWithTransaction:v19 block:v32];

      objc_destroyWeak(v34);
    }
    [*(id *)(a1 + 32) removeCompletionDeferral];
    [*(id *)(a1 + 32) removeSubTransactionCompletionDeferral];
    uint64_t v22 = *(void *)(*(void *)(a1 + 48) + 8);
    double v23 = *(void **)(v22 + 40);
    *(void *)(v22 + 40) = 0;
    goto LABEL_17;
  }
  if (v17)
  {
    double v23 = +[TUITransaction currentOrImplicitTransaction];
    uint64_t v24 = [WeakRetained transactionCoordinator];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_C5190;
    void v29[3] = &unk_254D78;
    objc_copyWeak(v31, (id *)(a1 + 56));
    v31[1] = *(id *)(a1 + 80);
    id v25 = v6;
    double v26 = *(void **)(a1 + 72);
    id v30 = v25;
    v31[2] = v26;
    [v24 scheduleLayoutUpdateWithTransaction:v23 block:v29];

    objc_destroyWeak(v31);
LABEL_17:
  }
}

void sub_C50C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_C50E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = *(id *)(a1 + 48);
  id v6 = [WeakRetained layoutGenerationId];
  if (v5 == v6)
  {
    BOOL v7 = *(void **)(a1 + 32);
    uint64_t v8 = [v7 data];
    id v9 = [WeakRetained lq_loadFeedEntry:v7 data:v8 section:*(void *)(a1 + 56) transactionGroup:v3];
  }
  return v5 == v6;
}

BOOL sub_C5190(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = *(id *)(a1 + 48);
  id v6 = [WeakRetained layoutGenerationId];
  if (v5 == v6)
  {
    BOOL v7 = *(void **)(a1 + 32);
    uint64_t v8 = [v7 data];
    id v9 = [WeakRetained lq_loadFeedEntry:v7 data:v8 section:*(void *)(a1 + 56) transactionGroup:v3];
  }
  return v5 == v6;
}

uint64_t sub_C52F0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(*(void *)(a1 + 32) + 184));
}

uint64_t sub_C5578(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 16));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2 == *(void **)(v3 + 24))
  {
    *(void *)(v3 + 24) = 0;

    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 16));
    if (([*(id *)(*(void *)(a1 + 32) + 80) isEqualToEnvironment:*(void *)(a1 + 40)] & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 384), *(id *)(*(void *)(a1 + 32) + 80));
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
      uint64_t v4 = 1;
      *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 352), *(id *)(a1 + 48));
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 360), *(id *)(a1 + 48));
      return v4;
    }
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 16));
  }
  return 0;
}

id sub_C57F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) lq_updateHostingGeometryMap:*(void *)(a1 + 40)];
}

void *sub_C5B00(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 344))
  {
    uint64_t v2 = result;
    [*(id *)(v1 + 104) updateWithHostingMap:0 transactionGroup:result[5]];
    uint64_t v3 = v2[5];
    uint64_t v4 = *(void **)(v2[4] + 104);
    return [v4 updateWithRenderModel:0 viewState:0 flags:0 transactionGroup:v3];
  }
  return result;
}

void sub_C5F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C5FA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v2 = [WeakRetained delegate];
  [v2 feedLayoutController:WeakRetained axModelSections:*(void *)(a1 + 32) renderModelCollection:*(void *)(*(void *)(a1 + 40) + 256) renderModelSections:*(void *)(a1 + 48)];
}

uint64_t sub_C60B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 1;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 320);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_C6164;
  void v7[3] = &unk_254BC8;
  id v8 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v7];

  return 1;
}

id sub_C6164(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 suspendAndTeardownWithTransactionGroup:*(void *)(a1 + 32)];
}

uint64_t sub_C6374(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 0;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 352), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 360), *(id *)(a1 + 48));
  *(void *)(*(void *)(a1 + 32) + 312) |= 0xCuLL;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 320);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_C6468;
  void v7[3] = &unk_254BC8;
  id v8 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v7];

  return 1;
}

id sub_C6468(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 resumeAndRebuildWithTransactionGroup:*(void *)(a1 + 32)];
}

void sub_C6554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C6574(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAfterLayoutConditionSuspendingUpdatesInvalidated];
}

void sub_C6690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C66B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAfterLayoutConditionSuspendingUpdatesInvalidated];
}

BOOL sub_C6750(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

void sub_C67E4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 34) = 1;
  *(void *)(*(void *)(a1 + 32) + 416) = 0;
  uint64_t v2 = TUIInstantiationLog();
  *(void *)(*(void *)(a1 + 32) + 424) = os_signpost_id_generate(v2);

  id v3 = TUIInstantiationLog();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  os_signpost_id_t v6 = *(void *)(v5 + 424);
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    uint64_t v7 = *(void *)(v5 + 56);
    int v13 = 134217984;
    uint64_t v14 = v7;
    _os_signpost_emit_with_name_impl(&def_141F14, v4, OS_SIGNPOST_INTERVAL_BEGIN, v6, "TUIFeedLayoutController.liveResize", "[fid:%lu]  isAnimation=YES", (uint8_t *)&v13, 0xCu);
  }

  id v8 = +[NSUserDefaults standardUserDefaults];
  unsigned int v9 = [v8 BOOLForKey:@"TUIRecordLiveResizeStats"];

  if (v9)
  {
    id v10 = objc_alloc_init(TUIStatsLiveResize);
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void **)(v11 + 440);
    *(void *)(v11 + 440) = v10;

    [*(id *)(*(void *)(a1 + 32) + 440) beginLiveResize];
  }
}

void sub_C69C8(uint64_t a1)
{
  uint64_t v2 = TUIInstantiationLog();
  id v3 = v2;
  uint64_t v4 = *(void **)(a1 + 32);
  os_signpost_id_t v5 = v4[53];
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    uint64_t v6 = v4[7];
    uint64_t v7 = v4[52];
    int v11 = 134218240;
    uint64_t v12 = v6;
    __int16 v13 = 2048;
    uint64_t v14 = v7;
    _os_signpost_emit_with_name_impl(&def_141F14, v3, OS_SIGNPOST_INTERVAL_END, v5, "TUIFeedLayoutController.liveResize", "[fid:%lu] layoutCount=%lu", (uint8_t *)&v11, 0x16u);
  }

  [*(id *)(*(void *)(a1 + 32) + 440) endLiveResize];
  uint64_t v8 = *(void *)(a1 + 32);
  unsigned int v9 = *(void **)(v8 + 440);
  *(void *)(v8 + 440) = 0;

  *(unsigned char *)(*(void *)(a1 + 32) + 34) = 0;
  uint64_t v10 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v10 + 35))
  {
    *(unsigned char *)(v10 + 35) = 0;
    [*(id *)(a1 + 32) _lq_scheduleLayoutRemainder];
  }
}

void sub_C6AF4(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
}

uint64_t sub_C6BE4(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 224), *(id *)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 224) beginCaptureWithFactory:*(void *)(*(void *)(a1 + 32) + 328) completion:*(void *)(a1 + 48)];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 320);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_C6C9C;
  void v4[3] = &unk_254BC8;
  id v5 = *(id *)(a1 + 40);
  [v2 enumerateKeysAndObjectsUsingBlock:v4];

  return 1;
}

void sub_C6C9C(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  uint64_t v4 = [*(id *)(a1 + 32) entry];
  if (!v4) {
    goto LABEL_3;
  }
  id v5 = (void *)v4;
  uint64_t v6 = [*(id *)(a1 + 32) entry];
  uint64_t v7 = [v8 entry];

  if (v6 == v7) {
LABEL_3:
  }
    [v8 lq_captureWithController:*(void *)(a1 + 32)];
}

void sub_C6E14(uint64_t a1)
{
  uint64_t v8 = 0;
  unsigned int v9 = &v8;
  uint64_t v10 = 0x3032000000;
  int v11 = sub_C1EB8;
  uint64_t v12 = sub_C1EC8;
  id v13 = 0;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 320);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_C6F30;
  double v5[3] = &unk_254E80;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = &v8;
  [v2 enumerateKeysAndObjectsUsingBlock:v5];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), v9[5], v3, v4);

  _Block_object_dispose(&v8, 8);
}

void sub_C6F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_C6F30(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v17 = a3;
  id v6 = [v17 entry];
  uint64_t v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    uint64_t v8 = [_TUIModelDescribingContext alloc];
    unsigned int v9 = [v17 template];
    uint64_t v10 = [v9 package];
    int v11 = [(_TUIModelDescribingContext *)v8 initWithPackage:v10];

    uint64_t v12 = [v17 layoutController];
    id v13 = [v12 rootBox];
    uint64_t v14 = TUIModelDump(v13, v11);
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
    BOOL v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    *a4 = 1;
  }
}

void sub_C7110(uint64_t a1)
{
  uint64_t v8 = 0;
  unsigned int v9 = &v8;
  uint64_t v10 = 0x3032000000;
  int v11 = sub_C1EB8;
  uint64_t v12 = sub_C1EC8;
  id v13 = 0;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 320);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_C722C;
  double v5[3] = &unk_254E80;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = &v8;
  [v2 enumerateKeysAndObjectsUsingBlock:v5];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), v9[5], v3, v4);

  _Block_object_dispose(&v8, 8);
}

void sub_C7214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_C722C(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v13 = a3;
  id v6 = [v13 entry];
  uint64_t v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    uint64_t v8 = [v13 layoutController];
    unsigned int v9 = [v8 rootLayout];
    uint64_t v10 = TUILayoutDump(v9, @"id");
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    *a4 = 1;
  }
}

void sub_C79C0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 firstObject];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_C8230(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  CFStringRef v6 = @"blur-style";
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF5D0;
  qword_2DF5D0 = (uint64_t)v4;
}

id TUIModelDump(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_opt_new();
  sub_C843C(v5, v4, 0, v3);

  return v5;
}

void sub_C843C(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  uint64_t v10 = [&stru_257BF0 stringByPaddingToLength:2 * a3 withString:@" " startingAtIndex:0];
  [v7 appendString:v10];

  uint64_t v11 = (objc_class *)objc_opt_class();
  uint64_t v12 = NSStringFromClass(v11);
  [v7 appendFormat:@"%@ ", v12];

  if (objc_opt_respondsToSelector())
  {
    id v13 = [v8 describeWithContext:v9];
    [v7 appendFormat:@"%@ ", v13];
  }
  if (objc_opt_respondsToSelector())
  {
    uint64_t v14 = [v8 identifier];
    uint64_t v15 = [v14 tui_identifierToString];
    [v7 appendFormat:@"id=%@ ", v15];
  }
  BOOL v16 = TUIProtocolCast(&OBJC_PROTOCOL___TUIModelContaining, v8);
  if (v16)
  {
    id v17 = objc_opt_new();
    [v16 appendContainedChildrenToArray:v17];
    if ([v17 count])
    {
      uint64_t v26 = 2 * a3;
      [v7 appendString:@"{\n"];
      long long v29 = 0u;
      long long v30 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      id v18 = v17;
      id v19 = [v18 countByEnumeratingWithState:&v27 objects:v31 count:16];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = *(void *)v28;
        uint64_t v22 = a3 + 1;
        do
        {
          for (unsigned __int16 i = 0; i != v20; unsigned __int16 i = (char *)i + 1)
          {
            if (*(void *)v28 != v21) {
              objc_enumerationMutation(v18);
            }
            sub_C843C(v7, *(void *)(*((void *)&v27 + 1) + 8 * i), v22, v9);
          }
          id v20 = [v18 countByEnumeratingWithState:&v27 objects:v31 count:16];
        }
        while (v20);
      }

      uint64_t v24 = [&stru_257BF0 stringByPaddingToLength:v26 withString:@" " startingAtIndex:0];
      [v7 appendString:v24];

      CFStringRef v25 = @"}\n";
    }
    else
    {
      CFStringRef v25 = @"\n";
    }
    [v7 appendString:v25];
  }
  else
  {
    [v7 appendString:@"\n"];
  }
}

id sub_C8820(void *a1, uint64_t a2)
{
  return [*(id *)(a1[4] + 56) augmentDataForRange:a1[7] data:a1[8] generation:a2 block:a1[5]];
}

id sub_C8944(void *a1, uint64_t a2)
{
  return _[*(id *)(a1[4] + 56) augmentDataForIndexes:a1[5] data:a2 generation:a1[6] block:a1[7]];
}

void sub_C8C98(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"name";
  v6[1] = @"trigger-offset";
  id v3 = +[NSArray arrayWithObjects:v6 count:2];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF5E0;
  qword_2DF5E0 = (uint64_t)v4;
}

void sub_C8F54(_Unwind_Exception *a1)
{
  id v2 = v1;

  _Unwind_Resume(a1);
}

id sub_C9774(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:0 completion:0];
}

void sub_CB9A0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];

  if (v2)
  {
    id v3 = *(void **)(*(void *)(a1 + 40) + 104);
    id v4 = [*(id *)(a1 + 32) viewController];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_CBA70;
    void v7[3] = &unk_251828;
    id v5 = *(id *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    id v8 = v5;
    uint64_t v9 = v6;
    [v3 presentViewController:v4 animated:1 completion:v7];
  }
}

void sub_CBA70(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];
  id v3 = [v2 popoverPresentationController];
  [v3 setPassthroughViews:0];

  id v4 = *(void **)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) identifier];
  [v4 updateVisible:1 forIdentifier:v5];
}

id sub_CBC9C(uint64_t a1)
{
  id v2 = TUIHostingLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_192388(a1, v2);
  }

  return [*(id *)(a1 + 48) setHidden:1];
}

void sub_CBE28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) viewController];
    [v3 setModalPresentationStyle:7];

    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 viewController];
    uint64_t v6 = [v5 popoverPresentationController];
    [v6 setDelegate:v4];

    uint64_t v7 = *(void *)(a1 + 40);
    id v8 = [*(id *)(a1 + 32) viewController];
    uint64_t v9 = [v8 popoverPresentationController];
    [v9 setBarButtonItem:v7];

    id v10 = [*(id *)(a1 + 48) _popoverArrowDirectionFromProperties:*(void *)(a1 + 56)];
    uint64_t v11 = [*(id *)(a1 + 32) viewController];
    uint64_t v12 = [v11 popoverPresentationController];
    [v12 setPermittedArrowDirections:v10];

    id v13 = *(void **)(*(void *)(a1 + 48) + 104);
    uint64_t v14 = [*(id *)(a1 + 32) viewController];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_CBFAC;
    v17[3] = &unk_251828;
    id v15 = *(id *)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 48);
    id v18 = v15;
    uint64_t v19 = v16;
    [v13 presentViewController:v14 animated:1 completion:v17];
  }
}

void sub_CBFAC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];
  id v3 = [v2 popoverPresentationController];
  [v3 setPassthroughViews:0];

  id v4 = *(void **)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) identifier];
  [v4 updateVisible:1 forIdentifier:v5];
}

uint64_t sub_CC3E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_CC644(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:0];
  [*(id *)(a1 + 32) setAlpha:0.0];
  CGAffineTransformMakeScale(&v5, 0.92, 0.92);
  id v2 = *(void **)(a1 + 32);
  CGAffineTransform v4 = v5;
  return [v2 setTransform:&v4];
}

id sub_CC6B4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_CCB24(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_CCB30(uint64_t a1)
{
  CGAffineTransformMakeScale(&v5, 0.92, 0.92);
  id v2 = *(void **)(a1 + 32);
  CGAffineTransform v4 = v5;
  return [v2 setTransform:&v4];
}

void sub_CCB88(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v2 = [*(id *)(a1 + 40) viewController];
  [v2 endAppearanceTransition];
}

void sub_CCBE0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_CCC84;
  v3[3] = &unk_251990;
  id v4 = *(id *)(a1 + 32);
  [v2 dismissViewControllerAnimated:1 completion:v3];
}

id sub_CCC84(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentationDidDismiss];
}

void sub_CCE00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 96);
  *(void *)(v1 + 96) = 0;
}

void sub_CD2B8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_CD2D4(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x2D0], 8) = a1;
}

void sub_CDDC4(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"rating";
  v6[1] = @"kind";
  void v6[2] = @"background-color";
  void v6[3] = @"start-color";
  void v6[4] = @"color";
  void v6[5] = @"enabled";
  long long v3 = +[NSArray arrayWithObjects:v6 count:6];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  CGAffineTransform v5 = (void *)qword_2DF5F0;
  qword_2DF5F0 = (uint64_t)v4;
}

void sub_CDF3C(id a1)
{
  CFStringRef v4 = @"binding";
  uint64_t v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  long long v3 = (void *)qword_2DF600;
  qword_2DF600 = v2;
}

void sub_CE6C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_CE6E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v31 = *(void *)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 40);
  CGAffineTransform v5 = (id *)(a1 + 80);
  id v6 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained identifier];
  uint64_t v29 = *(void *)(a1 + 48);
  double v9 = *(double *)(a1 + 88);
  unsigned int v28 = *(unsigned __int8 *)(a1 + 104);
  id v27 = [v7 computedLayoutDirection];
  long long v26 = *(_OWORD *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 72);
  id v10 = +[TUIRatingsBox starRatingImageNameFromKind:*(void *)(a1 + 96)];
  uint64_t v11 = +[TUIRatingsBox foregroundImageName];
  id v12 = objc_loadWeakRetained(v5);
  id v13 = [v12 size];
  [v7 computedNaturalSize];
  +[TUIRatingsBox starSizeForSize:layoutSize:](TUIRatingsBox, "starSizeForSize:layoutSize:", v13);
  double v15 = v14;
  id v16 = objc_loadWeakRetained(v5);
  id v17 = [v16 size];
  [v7 computedNaturalSize];
  double v19 = v18;
  double v21 = v20;

  +[TUIRatingsBox spacingForSize:layoutSize:](TUIRatingsBox, "spacingForSize:layoutSize:", v17, v19, v21);
  double v23 = +[TUIRatingsView renderModelWithStates:actionHandler:viewState:identifier:name:rating:enabled:direction:color:startColor:backgroundColor:backgroundImageName:foregroundImageName:starWidth:starPadding:](TUIRatingsView, "renderModelWithStates:actionHandler:viewState:identifier:name:rating:enabled:direction:color:startColor:backgroundColor:backgroundImageName:foregroundImageName:starWidth:starPadding:", v6, v31, v30, v8, v29, v28, v9, v15, v22, v27, v26, v25, v10, v11);

  return v23;
}

TUI::Evaluation::DynamicCache *TUI::Evaluation::DynamicCache::DynamicCache(TUI::Evaluation::DynamicCache *this)
{
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x2D0], 8) = 0u;
  uint64_t v2 = (char *)this + 8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  *(void *)this = objc_opt_class();
  unint64_t v4 = objc_opt_class();
  CGAffineTransform v5 = (uint64_t *)&v4;
  *((unsigned char *)sub_42B9C((uint64_t)v2, &v4, (uint64_t)&std::piecewise_construct, &v5) + 24) = 1;
  return this;
}

void sub_CF184(_Unwind_Exception *a1)
{
  sub_1265C(v2);
  sub_1265C(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::DynamicCache::~DynamicCache(TUI::Evaluation::DynamicCache *this)
{
}

{
  sub_1265C((uint64_t)this + 48);
  sub_1265C((uint64_t)this + 8);
}

void sub_CFF34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [v3 identifier];
  [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:];
  unint64_t v4 = (TUIRenderModelLayerBuilder *)objc_claimAutoreleasedReturnValue();
  if (!v4) {
    unint64_t v4 = objc_alloc_init(TUIRenderModelLayerBuilder);
  }
  [*(id *)(a1 + 40) setObject:v4 forKeyedSubscript:v6];
  CGAffineTransform v5 = [v3 submodel];

  [(TUIRenderModelLayerBuilder *)v4 setModel:v5];
}

void sub_D00DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [v3 identifier];
  CGAffineTransform v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v4];
  id v6 = [v5 layer];
  if (v3)
  {
    [v3 transform];
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
    long long v8 = 0u;
  }
  v7[0] = v8;
  v7[1] = v9;
  v7[2] = v10;
  [v6 setAffineTransform:v7];
  [v3 center];
  [v6 setPosition:];
  [*(id *)(a1 + 40) addObject:v6];
}

void sub_D02F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D03C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D04D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_D0504(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) dynamicController];
  id v3 = [v2 invalidateInstantiation:*(void *)(a1 + 40)];

  return v3;
}

void sub_D0548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D0608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_D0620(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_D06C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_D06DC(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_D0730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_D0800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D0818(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_D0824(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

void sub_D0948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D0A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D0BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D15EC(id a1)
{
  +[UISegmentedControl defaultHeightForStyle:5];
  qword_2DF618 = v1;
}

void sub_D1B38(id *a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id v6 = [a1[4] geometryForIdentifier:v7];
  [a1[5] removeObject:v7];
  if (v6 != v5 && ([v5 isEqualToGeometry:v6] & 1) == 0) {
    [a1[6] addObject:v7];
  }
}

void *TUI::Instruction::Decoder::Decoder(void *result, uint64_t a2, unsigned int a3)
{
  unsigned char *result = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  result[1] = *(void *)(a2 + 8);
  result[2] = a3;
  result[3] = v3;
  return result;
}

{
  uint64_t v3;

  unsigned char *result = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  result[1] = *(void *)(a2 + 8);
  result[2] = a3;
  result[3] = v3;
  return result;
}

uint64_t TUI::Instruction::Decoder::offsetKind(uint64_t this)
{
  if (this <= 0x14u) {
    return this;
  }
  else {
    return 0;
  }
}

uint64_t TUI::Instruction::Decoder::offsetIndex(TUI::Instruction::Decoder *this)
{
  return this >> 8;
}

uint64_t TUI::Instruction::Decoder::symbolNameFromU24(TUI::Instruction::Decoder *this)
{
  return (unsigned __int16)(this >> 12) | ((unsigned __int16)((unsigned __int16)this & 0xFFF) << 16);
}

uint64_t TUI::Instruction::Decoder::enumerator(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3 = TUIEnumeratorNil;
  if (this)
  {
    if (this == 10) {
      return this >> 8;
    }
    else {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::elementName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = (unsigned __int16)TUINameNil;
  unsigned int v4 = HIWORD(TUINameNil);
  if (this)
  {
    if (this == 15)
    {
      unsigned int v3 = this >> 20;
      unsigned int v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::bindingName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = (unsigned __int16)TUINameNil;
  unsigned int v4 = HIWORD(TUINameNil);
  if (this)
  {
    if (this == 16)
    {
      unsigned int v3 = this >> 20;
      unsigned int v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::constantName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = (unsigned __int16)TUINameNil;
  unsigned int v4 = HIWORD(TUINameNil);
  if (this)
  {
    if (this == 17)
    {
      unsigned int v3 = this >> 20;
      unsigned int v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::propertyName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  if (!this) {
    return 0xFFFFLL;
  }
  if (this == 20) {
    return this >> 8;
  }
  TUI::Evaluation::Context::reportError(a2, 1031, 0);
  return 0xFFFFLL;
}

uint64_t TUI::Instruction::Decoder::globalsName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = (unsigned __int16)TUINameNil;
  unsigned int v4 = HIWORD(TUINameNil);
  if (this)
  {
    if (this == 19)
    {
      unsigned int v3 = this >> 20;
      unsigned int v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

unint64_t TUI::Instruction::Decoder::styleReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = TUIStyleReferenceNil;
  uint64_t v4 = HIDWORD(TUIStyleReferenceNil);
  if (this)
  {
    if (this == 14)
    {
      unsigned int v3 = this >> 14;
      uint64_t v4 = (this >> 8) & 0x3F;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (unint64_t)(v4 << 32);
}

unint64_t TUI::Instruction::Decoder::animationReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3 = TUIAnimationReferenceNil;
  uint64_t v4 = *(unsigned int *)algn_2DD53C;
  if (this)
  {
    if (this == 13)
    {
      unsigned int v3 = this >> 14;
      uint64_t v4 = (this >> 8) & 0x3F;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (unint64_t)(v4 << 32);
}

uint64_t TUI::Instruction::Decoder::elementReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3 = TUIElementReferenceNil;
  if (this)
  {
    if (this == 12) {
      return this >> 8;
    }
    else {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::nameReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3 = TUINameReferenceNil;
  if (this)
  {
    if (this == 11) {
      return this >> 8;
    }
    else {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::definition(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3 = TUIDefinitionNil;
  if (this)
  {
    if (this == 9) {
      return this >> 8;
    }
    else {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3;
}

void sub_D214C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D21F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_D229C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_D2320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_D3CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  sub_63800((uint64_t)&STACK[0x338]);
  _Unwind_Resume(a1);
}

double sub_D3E90(long long *a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v97 = 0;
  id v98 = 0;
  uint64_t v99 = 0;
  if (!a4)
  {
    uint64_t v30 = *(uint64_t **)a1;
    unint64_t v31 = *((void *)a1 + 1);
    a4 = 1;
    unint64_t v32 = *((void *)a1 + 2);
    uint64_t v33 = *((void *)a1 + 4);
LABEL_22:
    while (1)
    {
      unint64_t v34 = v32;
      unint64_t v35 = v31;
      if (v31 == v33 && v32 == *((void *)a1 + 5)) {
        break;
      }
      unint64_t v32 = 0;
      uint64_t v36 = *v30;
      uint64_t v37 = *(void *)(*(void *)(*v30 + 88 * v31) + 96 * v34 + 56)
          - *(void *)(*(void *)(*v30 + 88 * v31) + 96 * v34 + 48);
      BOOL v38 = a4 > v37 >> 6;
      uint64_t v39 = v37 >> 6;
      if (!v38) {
        a4 = v39;
      }
      unint64_t v31 = 0x2E8BA2E8BA2E8BA3 * ((v30[1] - v36) >> 3);
      if (v35 < v31)
      {
        unint64_t v32 = v34 + 1;
        uint64_t v40 = (void *)(v36 + 88 * v35 + 8);
        while (v32 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v40 - *(v40 - 1)) >> 5))
        {
          unint64_t v32 = 0;
          ++v35;
          v40 += 11;
          if (v31 == v35) {
            goto LABEL_22;
          }
        }
        unint64_t v31 = v35;
      }
    }
  }
  __p[0] = 0;
  unint64_t v87 = a4;
  sub_68854((uint64_t)&v97, a4, __p);
  long long v8 = *(uint64_t **)a1;
  unint64_t v7 = *((void *)a1 + 1);
  unint64_t v9 = *((void *)a1 + 2);
  char v83 = *(uint64_t **)a1;
LABEL_3:
  while (1)
  {
    unint64_t v10 = v9;
    unint64_t v11 = v7;
    if (v7 == *((void *)a1 + 4) && v9 == *((void *)a1 + 5)) {
      break;
    }
    uint64_t v12 = *v8;
    uint64_t v13 = *(void *)(*v8 + 88 * v7);
    double v14 = (unint64_t *)(v13 + 96 * v9);
    uint64_t v15 = v14[6];
    unint64_t v16 = v14[7];
    if (v15 != v16)
    {
      unint64_t v17 = 0;
      unint64_t v85 = v9;
      double v18 = (unint64_t *)(v13 + 96 * v9 + 16);
      do
      {
        double v19 = sub_62124(a2, *v14, *v18);
        sub_684E0(v15, 0, (uint64_t)&v96, v19);
        if (v17 < v87) {
          *((double *)v97 + v17) = fmax(*((double *)v97 + v17), v20);
        }
        ++v17;
        v15 += 64;
      }
      while (v15 != v16);
      long long v8 = v83;
      unint64_t v10 = v85;
      uint64_t v12 = *v83;
    }
    unint64_t v9 = 0;
    unint64_t v7 = 0x2E8BA2E8BA2E8BA3 * ((v8[1] - v12) >> 3);
    if (v11 < v7)
    {
      unint64_t v9 = v10 + 1;
      double v21 = (void *)(v12 + 88 * v11 + 8);
      while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v21 - *(v21 - 1)) >> 5))
      {
        unint64_t v9 = 0;
        ++v11;
        v21 += 11;
        if (v7 == v11) {
          goto LABEL_3;
        }
      }
      unint64_t v7 = v11;
    }
  }
  memset(__p, 0, sizeof(__p));
  uint64_t v94 = 0;
  sub_68854((uint64_t)__p, v87 + 1, &v94);
  double v22 = (double *)v97;
  double v23 = v98;
  uint64_t v24 = (double *)__p[0];
  if (v97 == v98)
  {
    uint64_t v29 = 0;
    double v26 = 0.0;
  }
  else
  {
    uint64_t v25 = 0;
    double v26 = 0.0;
    id v27 = (double *)__p[0];
    do
    {
      double v28 = *v22++;
      *v27++ = v26;
      double v26 = v26 + v28;
      --v25;
    }
    while (v22 != v23);
    uint64_t v29 = -v25;
  }
  v24[v29] = v26;
  long long v92 = *a1;
  uint64_t v93 = *((void *)a1 + 2);
  long long v90 = *(long long *)((char *)a1 + 24);
  uint64_t v91 = *((void *)a1 + 5);
  *(void *)&long long v88 = a2;
  *((void *)&v88 + 1) = __p;
  id v89 = a1;
  sub_D55A8(a3, (size_t)&v92, (uint64_t)&v90, &v88);
  uint64_t v41 = (void *)*((void *)a1 + 13);
  long long v42 = *(_OWORD *)&__p[1];
  double v43 = *((double *)__p[1] - 1);
  long long v44 = *(long long *)((char *)a1 + 88);
  *((void **)a1 + 11) = __p[0];
  *(_OWORD *)long long __p = v44;
  a1[6] = v42;
  __p[2] = v41;
  double v81 = sub_62620(a2);
  long long v46 = *(void **)a1;
  unint64_t v45 = *((void *)a1 + 1);
  unint64_t v47 = *((void *)a1 + 2);
  uint64_t v86 = a2;
  BOOL v82 = *(void **)a1;
LABEL_34:
  while (1)
  {
    unint64_t v48 = v45;
    unint64_t v49 = v47;
    if (v45 == *((void *)a1 + 4) && v47 == *((void *)a1 + 5)) {
      break;
    }
    uint64_t v50 = *(void *)(*v46 + 88 * v45);
    int v51 = *((_DWORD *)a1 + 16);
    if (v51)
    {
      uint64_t v52 = v50 + 96 * v47;
      uint64_t v53 = *(void *)(v52 + 48);
      uint64_t v54 = *(void *)(v52 + 56);
      double v55 = 0.0;
      while (v53 != v54)
      {
        double v55 = v55 + *(double *)(v53 + 56);
        v53 += 64;
      }
      double v56 = 0.0;
      if (v51 == 5) {
        double v56 = 1.0;
      }
      if (v51 == 3) {
        double v56 = 1.0;
      }
      if (v51 == 2) {
        double v57 = 0.5;
      }
      else {
        double v57 = v56;
      }
    }
    else
    {
      double v57 = 0.0;
      double v55 = 0.0;
    }
    sub_68CD0(a2, *(void *)(v50 + 96 * v49), *(void *)(v50 + 96 * v49 + 16), 1);
    unint64_t v84 = v49;
    uint64_t v59 = v50 + 96 * v49;
    uint64_t v60 = *(void *)(v59 + 48);
    uint64_t v61 = *(void *)(v59 + 56);
    if (v60 != v61)
    {
      double v62 = v58;
      unint64_t v63 = 0;
      double v64 = v57 * (v43 - v55);
      do
      {
        double v65 = 0.0;
        double v66 = 0.0;
        if (v63 < v87) {
          double v66 = *((double *)v97 + v63);
        }
        if (*((_DWORD *)a1 + 16))
        {
          double v66 = *(double *)(v60 + 56);
        }
        else
        {
          uint64_t v67 = (char *)[*(id *)v60 valign:0.0];
          double v68 = 0.0;
          if ((unint64_t)(v67 - 1) <= 3) {
            double v68 = dbl_2434C0[(void)(v67 - 1)];
          }
          double v65 = v68 * (v66 - *(double *)(v60 + 56));
        }
        double v69 = v62 + *((double *)a1 + 6);
        double v70 = v65 + v64 + *((double *)a1 + 7);
        *(double *)(v60 + 32) = v69;
        *(double *)(v60 + 40) = v70;
        uint64_t v71 = *(void *)(v60 + 8);
        uint64_t v72 = *(void *)(v60 + 16);
        while (v71 != v72)
        {
          uint64_t v73 = *(void *)(v71 + 56);
          uint64_t v74 = a3[14] + 152 * v73;
          uint64_t v75 = (const CGPoint *)(v74 + 136);
          p_CGFloat y = (CGFloat *)(v74 + 144);
          BOOL v77 = v73 == -1;
          if (v73 == -1) {
            uint64_t v78 = &CGPointZero;
          }
          else {
            uint64_t v78 = v75;
          }
          if (v77) {
            p_CGFloat y = &CGPointZero.y;
          }
          sub_69564((double *)(v71 + 8), v69 - v78->x + *(double *)(v71 + 72), v70 - *p_y + *(double *)(v71 + 64));
          v71 += 96;
        }
        double v64 = v64 + v66;
        ++v63;
        v60 += 64;
        a2 = v86;
      }
      while (v60 != v61);
    }
    unint64_t v47 = 0;
    long long v46 = v82;
    unint64_t v45 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v82[1] - *v82) >> 3);
    if (v48 < v45)
    {
      unint64_t v47 = v84 + 1;
      BOOL v79 = (void *)(*v82 + 88 * v48 + 8);
      while (v47 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v79 - *(v79 - 1)) >> 5))
      {
        unint64_t v47 = 0;
        ++v48;
        v79 += 11;
        if (v45 == v48) {
          goto LABEL_34;
        }
      }
      unint64_t v45 = v48;
    }
  }
  *((double *)a1 + 9) = v81;
  *((double *)a1 + 10) = v43;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v97)
  {
    id v98 = (double *)v97;
    operator delete(v97);
  }
  return v81;
}

void sub_D449C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p) {
    operator delete(__p);
  }
  if (a29) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

double *sub_D44EC(id *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  long long v14 = *(_OWORD *)(a4 + 40);
  long long v37 = *(_OWORD *)(a4 + 24);
  long long v38 = v14;
  double v15 = *(double *)a4;
  uint64_t v16 = sub_620A0(a3, (char *)&def_141F14 + 1);
  if (*(void *)(a3 + 32) != v16)
  {
    uint64_t v17 = v16;
    sub_68438((uint64_t)&v36, 0, *(void *)(v16 + 40), *(void *)(v16 + 48), *((double *)&v37 + 1));
    *(double *)(v17 + 72) = v18;
    *(void *)(v17 + 80) = v19;
    double v20 = *((double *)&v37 + 1) - v18;
    double v21 = v15 - *((double *)&v37 + 1) + v20 * 0.5;
    double v22 = v20 * 0.5;
    if (*(void *)(a4 + 96) == 2) {
      double v22 = v21;
    }
    double v34 = a6 + v22;
    double v35 = a7 + *(double *)&v37;
    *(void *)&long long v32 = &v37;
    *((void *)&v32 + 1) = a2;
    uint64_t v33 = &v34;
    sub_D5DDC(a5, (uint64_t *)v17, (uint64_t *)(v17 + 96), &v32);
    sub_97CF8(v17, &dword_4, a2, (uint64_t)a5, v34, v35);
    sub_622EC(v17, 1);
    [*a1 addObjectsFromArray:*(void *)(v17 + 88)];
  }
  float64x2_t result = (double *)sub_620A0(a3, (char *)&def_141F14 + 2);
  if (*(double **)(a3 + 32) != result)
  {
    uint64_t v24 = result;
    sub_68438((uint64_t)&v36, 0, *((void *)result + 5), *((void *)result + 6), *((double *)&v38 + 1));
    double v26 = v25;
    v24[9] = v25;
    *((void *)v24 + 10) = v27;
    double v28 = (uint64_t *)sub_620A0(a3, (char *)&def_141F14 + 2);
    double v29 = v15 - *((double *)&v38 + 1) + (*((double *)&v38 + 1) - v26) * 0.5;
    if (*(void *)(a4 + 96) == 2) {
      double v29 = (*((double *)&v38 + 1) - v26) * 0.5;
    }
    double v34 = a6 + v29;
    double v35 = a7 + *(double *)&v37;
    *(void *)&long long v30 = &v37;
    *((void *)&v30 + 1) = a2;
    unint64_t v31 = &v34;
    sub_D6170(a5, v28, v28 + 12, &v30);
    sub_97CF8((uint64_t)v24, &dword_4, a2, (uint64_t)a5, v34, v35);
    sub_622EC((uint64_t)v24, 1);
    return (double *)[*a1 addObjectsFromArray:*((void *)v24 + 11)];
  }
  return result;
}

unint64_t *sub_D46F8@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = result[4];
  while (1)
  {
    unint64_t v5 = *result;
    if (v4 != *result && (v4 >= *result || !*(void *)(result[1] + 8 * v4))) {
      break;
    }
    if (v4 < v5)
    {
      unint64_t v6 = result[1];
      while (*(void *)(v6 + 8 * v4))
      {
        result[4] = ++v4;
        if (v5 == v4) {
          goto LABEL_11;
        }
      }
    }
    if (v4 == v5)
    {
LABEL_11:
      unint64_t v7 = (void *)result[1];
      long long v8 = (void *)result[2];
      while (v7 != v8)
      {
        if (*v7) {
          --*v7;
        }
        ++v7;
      }
      unint64_t v4 = 0;
      uint64_t v9 = result[5] + 1;
      result[4] = 0;
      result[5] = v9;
    }
  }
  unint64_t v10 = result[6];
  if (v10 && result[5] >= v10 || (unint64_t v11 = result[7]) != 0 && result[5] >= v11)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  if (v10 && result[5] + a3 > v10)
  {
LABEL_29:
    uint64_t v12 = 1;
    goto LABEL_30;
  }
  if (!v11)
  {
    if (v4 + a2 <= v5) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  uint64_t v12 = 1;
  if (v4 + a2 > v5)
  {
LABEL_30:
    uint64_t v13 = 1;
    goto LABEL_31;
  }
  uint64_t v13 = 1;
  if (result[5] + a3 > v11)
  {
LABEL_31:
    uint64_t v14 = 0;
    unint64_t v15 = result[5];
    *(void *)a4 = v4;
    *(void *)(a4 + sub_1265C((uint64_t)this + 8) = v15;
    *(void *)(a4 + 16) = v12;
    *(void *)(a4 + 24) = v13;
    unint64_t v16 = result[1];
    do
    {
      *(void *)(v16 + 8 * (v14 + result[4])) = v13;
      ++v14;
    }
    while (v12 != v14);
    unint64_t v4 = result[4];
    goto LABEL_34;
  }
LABEL_35:
  if (a2)
  {
    uint64_t v17 = 0;
    if (v5 >= v4) {
      unint64_t v18 = v5 - v4;
    }
    else {
      unint64_t v18 = 0;
    }
    uint64_t v12 = 1;
    while (v18 != v17 && !*(void *)(result[1] + 8 * v4 + 8 * v17))
    {
      if (a2 == ++v17)
      {
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        goto LABEL_31;
      }
    }
    goto LABEL_30;
  }
  uint64_t v12 = 0;
  unint64_t v19 = result[5];
  *(void *)a4 = v4;
  *(void *)(a4 + sub_1265C((uint64_t)this + 8) = v19;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a3;
LABEL_34:
  result[4] = v4 + v12;
  return result;
}

uint64_t sub_D48A0(uint64_t result)
{
  uint64_t v1 = *(int64x2_t ***)result;
  int64x2_t v2 = 0uLL;
  while (v1 != *(int64x2_t ***)(result + 8))
  {
    for (unsigned __int16 i = *v1; i != v1[1]; i += 6)
    {
      if (i[1].i64[0])
      {
        if (i[1].i64[1])
        {
          int8x16_t v4 = (int8x16_t)vaddq_s64(*i, i[1]);
          int8x16_t v5 = (int8x16_t)vdupq_laneq_s64(v2, 1);
          int64x2_t v2 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v5, (uint64x2_t)v4), v5, v4);
        }
      }
    }
    v1 += 11;
  }
  *(int64x2_t *)(result + sub_1265C((uint64_t)this + 48) = v2;
  return result;
}

void sub_D4900(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  unint64_t v10 = *(uint64_t **)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
LABEL_2:
  while (1)
  {
    unint64_t v12 = v11;
    unint64_t v13 = v9;
    if (v9 == *(void *)(a1 + 32) && v11 == *(void *)(a1 + 40)) {
      break;
    }
    uint64_t v14 = *v10;
    uint64_t v15 = *(void *)(*v10 + 88 * v9);
    uint64_t v16 = v15 + 96 * v11;
    unint64_t v17 = *(void *)(v16 + 16);
    uint64_t v18 = *(void *)(v16 + 24);
    if (v17) {
      BOOL v19 = v18 == 0;
    }
    else {
      BOOL v19 = 1;
    }
    if (!v19)
    {
      double v20 = (unint64_t *)(v15 + 96 * v12);
      double v21 = sub_62124(a2, *v20, v17);
      sub_68438((uint64_t)&v30, 0, v20[6], v20[7], v21);
      v20[9] = v22;
      v20[10] = v23;
      uint64_t v14 = *v10;
    }
    unint64_t v11 = 0;
    unint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v10[1] - v14) >> 3);
    if (v13 < v9)
    {
      unint64_t v11 = v12 + 1;
      uint64_t v24 = (void *)(v14 + 88 * v13 + 8);
      while (v11 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v24 - *(v24 - 1)) >> 5))
      {
        unint64_t v11 = 0;
        ++v13;
        v24 += 11;
        if (v9 == v13) {
          goto LABEL_2;
        }
      }
      unint64_t v9 = v13;
    }
  }
  switch(*(_DWORD *)(a1 + 64))
  {
    case 0:
    case 1:
      double v25 = 0.0;
      goto LABEL_19;
    case 2:
      double v25 = 0.5;
      goto LABEL_19;
    case 3:
      double v25 = 1.0;
LABEL_19:
      double v26 = sub_D6804(a1, a2, a3, v25, a4, a5);
      goto LABEL_23;
    case 4:
      double v28 = 0.0;
      goto LABEL_22;
    case 5:
      double v28 = 1.0;
LABEL_22:
      double v26 = sub_D6DEC(a1, a2, v28, a4, a5);
LABEL_23:
      *(double *)(a1 + sub_1265C((uint64_t)this + 48) = v26;
      *(void *)(a1 + 56) = v27;
      break;
    default:
      return;
  }
}

void sub_D4AF8(id *a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6, double a7)
{
  unint64_t v30 = 0;
  uint64_t v14 = (double *)sub_39FA0((uint64_t)&v30, 1uLL);
  unint64_t v16 = (unint64_t)&v14[v15];
  *uint64_t v14 = 0.0;
  unint64_t v17 = v14 + 1;
  long long __p = v14;
  unint64_t v30 = v16;
  double v29 = v14 + 1;
  if ((unint64_t)(v14 + 1) >= v16)
  {
    BOOL v19 = (double *)__p;
    uint64_t v20 = ((char *)v17 - (unsigned char *)__p) >> 3;
    unint64_t v21 = v20 + 1;
    if ((unint64_t)(v20 + 1) >> 61) {
      sub_4484();
    }
    uint64_t v22 = v16 - (void)__p;
    if (v22 >> 2 > v21) {
      unint64_t v21 = v22 >> 2;
    }
    if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v23 = v21;
    }
    if (v23)
    {
      uint64_t v24 = (char *)sub_39FA0((uint64_t)&v30, v23);
      BOOL v19 = (double *)__p;
      unint64_t v17 = v29;
    }
    else
    {
      uint64_t v24 = 0;
    }
    double v25 = (double *)&v24[8 * v20];
    double v26 = &v24[8 * v23];
    *double v25 = a7;
    uint64_t v18 = v25 + 1;
    while (v17 != v19)
    {
      uint64_t v27 = *((void *)v17-- - 1);
      *((void *)v25-- - 1) = v27;
    }
    long long __p = v25;
    double v29 = v18;
    unint64_t v30 = (unint64_t)v26;
    if (v19) {
      operator delete(v19);
    }
  }
  else
  {
    v14[1] = a7;
    uint64_t v18 = v14 + 2;
  }
  double v29 = v18;
  sub_D44EC(a1, (uint64_t *)&__p, a2, a3, a4, a5, a6);
  if (__p)
  {
    double v29 = (double *)__p;
    operator delete(__p);
  }
}

void sub_D4C9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_D4DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D4EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D50FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D5284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_D53D8(uint64_t a1, unint64_t a2)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  uint64_t v4 = 0;
  sub_D5454(a1 + 8, a2, &v4);
  return a1;
}

void sub_D5438(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_D5454(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + sub_1265C((uint64_t)this + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_D5484((void **)a1, a2 - v3, a3);
  }
}

void sub_D5484(void **a1, unint64_t a2, void *a3)
{
  long long v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  unint64_t v7 = v8;
  unint64_t v9 = *(void **)(v6 - 8);
  if (a2 <= (v8 - (unsigned char *)v9) >> 3)
  {
    if (a2)
    {
      uint64_t v16 = 8 * a2;
      unint64_t v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      unint64_t v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    uint64_t v10 = (char *)v9 - (unsigned char *)*a1;
    unint64_t v11 = a2 + (v10 >> 3);
    if (v11 >> 61) {
      sub_4484();
    }
    uint64_t v12 = v10 >> 3;
    uint64_t v13 = v7 - (unsigned char *)*a1;
    if (v13 >> 2 > v11) {
      unint64_t v11 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v11;
    }
    if (v14) {
      uint64_t v15 = (char *)sub_39FA0(v6, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v18 = &v15[8 * v12];
    BOOL v19 = &v18[8 * a2];
    uint64_t v20 = 8 * a2;
    unint64_t v21 = v18;
    do
    {
      *(void *)unint64_t v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    uint64_t v22 = &v15[8 * v14];
    unint64_t v23 = (char *)*a1;
    for (unsigned __int16 i = (char *)a1[1]; i != v23; i -= 8)
    {
      uint64_t v25 = *((void *)i - 1);
      *((void *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
    {
      operator delete(v23);
    }
  }
}

void sub_D55A8(void *a1, size_t size, uint64_t a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    unint64_t v43 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 64;
    memset(ptr, 0, sizeof(ptr));
    unint64_t v7 = *(void **)size;
    unint64_t v6 = *(void *)(size + 8);
    long long v8 = ptr;
    unint64_t v9 = *(void *)(size + 16);
    long long v32 = *(void **)size;
    uint64_t v33 = a3;
LABEL_3:
    while (1)
    {
      unint64_t v10 = v9;
      unint64_t v11 = v6;
      if (v6 == *(void *)(a3 + 8) && v9 == *(void *)(a3 + 16)) {
        break;
      }
      uint64_t v12 = *(void *)(*v7 + 88 * v6);
      if (v43 >= v5)
      {
        unint64_t v13 = v5 + 64;
        unint64_t v36 = v13;
        if (v8 == ptr)
        {
          long long v8 = malloc_type_malloc(8 * v13, 0x2004093837F09uLL);
          memcpy(v8, ptr, 8 * v43);
        }
        else
        {
          long long v8 = malloc_type_realloc(v8, 8 * v13, 0x2004093837F09uLL);
        }
      }
      else
      {
        unint64_t v36 = v5;
      }
      unint64_t v34 = v10;
      double v35 = v8;
      long long v42 = (uint64_t *)(v12 + 96 * v10);
      *((void *)v8 + v43) = v42;
      uint64_t v37 = v42[7];
      if (v42[6] != v37)
      {
        unint64_t v14 = 0;
        uint64_t v15 = (uint64_t *)(v12 + 96 * v10);
        uint64_t v16 = v15 + 1;
        unint64_t v17 = v15 + 2;
        uint64_t v18 = v15 + 3;
        uint64_t v19 = v42[6];
        do
        {
          uint64_t v38 = v19;
          uint64_t v39 = *(void *)(v19 + 16);
          uint64_t v20 = *(void *)(v19 + 8);
          if (v20 != v39)
          {
            do
            {
              uint64_t v21 = v20;
              uint64_t v22 = a1[8];
              uint64_t v40 = v21;
              unint64_t v23 = (*(void *)(v21 + 8) - v22) >> 3;
              uint64_t v24 = *(void *)(v21 + 16) - v22;
              if (v23 < v24 >> 3)
              {
                uint64_t v41 = v24 >> 3;
                do
                {
                  uint64_t v25 = *(void *)(a1[11] + 8 * v23);
                  if (v25 != -1)
                  {
                    if (!v4) {
                      uint64_t v4 = objc_opt_new();
                    }
                    do
                    {
                      if (([v4 containsIndex:v25] & 1) == 0)
                      {
                        uint64_t v26 = a1[14] + 152 * v25;
                        *(void *)uint64_t v26 = -1;
                        *(_OWORD *)(v26 + sub_1265C((uint64_t)this + 8) = 0u;
                        *(_OWORD *)(v26 + 24) = 0u;
                        *(_OWORD *)(v26 + 40) = 0u;
                        [v4 addIndex:v25];
                      }
                      unint64_t v27 = v23;
                      uint64_t v28 = a1[14];
                      sub_69170((void *)(v28 + 152 * v25), v43, *v42, *v16, v14, *v17, *v18, 1uLL);
                      uint64_t v25 = *(void *)(v28 + 152 * v25 + 128);
                      unint64_t v23 = v27;
                    }
                    while (v25 != -1);
                  }
                  ++v23;
                }
                while (v23 != v41);
              }
              uint64_t v20 = v40 + 96;
            }
            while (v40 + 96 != v39);
          }
          ++v14;
          uint64_t v19 = v38 + 64;
        }
        while (v38 + 64 != v37);
      }
      unint64_t v9 = 0;
      ++v43;
      unint64_t v7 = v32;
      a3 = v33;
      unint64_t v6 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v32[1] - *v32) >> 3);
      long long v8 = v35;
      unint64_t v29 = v11;
      unint64_t v5 = v36;
      if (v11 < v6)
      {
        unint64_t v9 = v34 + 1;
        unint64_t v30 = (void *)(*v32 + 88 * v11 + 8);
        while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v30 - *(v30 - 1)) >> 5))
        {
          unint64_t v9 = 0;
          ++v29;
          v30 += 11;
          if (v6 == v29) {
            goto LABEL_3;
          }
        }
        unint64_t v6 = v29;
      }
    }
    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3221225472;
    v49[2] = sub_D5A54;
    v49[3] = &unk_253220;
    void v49[4] = a1;
    long long v50 = *a4;
    uint64_t v51 = *((void *)a4 + 2);
    uint64_t v52 = v8;
    [v4 enumerateRangesUsingBlock:v49];
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472;
    v45[2] = sub_D5CEC;
    _OWORD v45[3] = &unk_253220;
    void v45[4] = a1;
    long long v46 = *a4;
    uint64_t v47 = *((void *)a4 + 2);
    unint64_t v48 = v8;
    [v4 enumerateRangesWithOptions:2 usingBlock:v45];
    if (v8 != ptr) {
      free(v8);
    }
  }
}

void sub_D5A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_D5A54(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    unint64_t v6 = result + 5;
    uint64_t v7 = 152 * a2;
    do
    {
      uint64_t v8 = *(void *)(v5 + 112) + v7;
      uint64_t v9 = *(void *)(v4[8] + 8 * *(void *)v8);
      uint64_t v10 = *(void *)(v8 + 112);
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v11 = *(_OWORD *)(v8 + 32);
      long long v13 = *(_OWORD *)v8;
      uint64_t v23 = *(void *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      double v14 = sub_D5B44(v6, v9, v10, (unint64_t *)v22);
      uint64_t v16 = *(void *)(v8 + 128);
      if (v16 == -1)
      {
        p_CGFloat y = &CGPointZero.y;
        uint64_t v18 = &CGPointZero;
      }
      else
      {
        uint64_t v17 = *(void *)(v5 + 112) + 152 * v16;
        uint64_t v18 = (const CGPoint *)(v17 + 136);
        p_CGFloat y = (CGFloat *)(v17 + 144);
      }
      double v20 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + ++*(void *)(*(void *)(result + 32) + 144) = v15;
      float64x2_t result = [*(id *)(v8 + 120) setComputedOrigin:v14 - x, v15 - v20];
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_D5B44(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8 = a1[2];
  sub_68CD0(*a1, a4[1], a4[4], 1);
  double v10 = v9;
  sub_62124(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 64))
  {
    [*(id *)(*(void *)(a2 + 48) + (a4[3] << 6)) valign];
    [*(id *)(*(void *)(a2 + 48) + ((a4[6] + a4[3] - 1) << 6)) valign];
  }
  return v10 + *(double *)(v8 + 48);
}

void sub_D5CEC(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = a1[4];
    unint64_t v6 = a1 + 5;
    uint64_t v7 = 152 * a3;
    uint64_t v8 = 152 * a2;
    do
    {
      uint64_t v9 = *(void *)(v5 + 112) + v7 + v8;
      uint64_t v10 = *(void *)(a1[8] + 8 * *(void *)(v9 - 152));
      uint64_t v11 = *(void *)(v9 - 40);
      long long v12 = *(_OWORD *)(v9 - 136);
      long long v13 = *(_OWORD *)(v9 - 120);
      long long v14 = *(_OWORD *)(v9 - 152);
      uint64_t v22 = *(void *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      double v15 = sub_D5B44(v6, v10, v11, (unint64_t *)v21);
      double v17 = v16;
      double v19 = v18;
      double v20 = [*(id *)(v9 - 32) controller];
      [v20 validateGroupedContainingLayout:v17 withSize:v19];

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_D5DCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D5DDC(void *a1, uint64_t *size, uint64_t *a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    uint64_t v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      unint64_t v6 = 0;
      uint64_t v9 = ptr;
    }
    else
    {
      unint64_t v6 = 0;
      unint64_t v7 = 0;
      unint64_t v8 = 64;
      uint64_t v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            uint64_t v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            uint64_t v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        unint64_t v22 = v8;
        uint64_t v23 = v9;
        *((void *)v9 + v7) = v4;
        uint64_t v10 = v4[5];
        uint64_t v24 = v4[6];
        if (v10 != v24)
        {
          unint64_t v11 = 0;
          do
          {
            uint64_t v25 = v10;
            uint64_t v13 = *(void *)(v10 + 8);
            uint64_t v12 = *(void *)(v10 + 16);
            uint64_t v26 = v12;
            while (v13 != v12)
            {
              uint64_t v14 = a1[8];
              uint64_t v27 = v13;
              unint64_t v15 = (*(void *)(v13 + 8) - v14) >> 3;
              uint64_t v16 = *(void *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                uint64_t v28 = v16 >> 3;
                do
                {
                  uint64_t v17 = *(void *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6) {
                      unint64_t v6 = objc_opt_new();
                    }
                    do
                    {
                      if (([v6 containsIndex:v17] & 1) == 0)
                      {
                        uint64_t v18 = a1[14] + 152 * v17;
                        *(void *)uint64_t v18 = -1;
                        *(_OWORD *)(v18 + sub_1265C((uint64_t)this + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        [v6 addIndex:v17];
                      }
                      uint64_t v19 = a1[14];
                      sub_69170((void *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      uint64_t v17 = *(void *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              uint64_t v12 = v26;
              uint64_t v13 = v27 + 96;
            }
            ++v11;
            uint64_t v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        unint64_t v8 = v22;
        uint64_t v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_D6504;
    void v33[3] = &unk_253220;
    void v33[4] = a1;
    long long v34 = *a4;
    uint64_t v35 = *((void *)a4 + 2);
    unint64_t v36 = v9;
    [v6 enumerateRangesUsingBlock:v33];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_D65C8;
    void v29[3] = &unk_253220;
    void v29[4] = a1;
    long long v30 = *a4;
    uint64_t v31 = *((void *)a4 + 2);
    long long v32 = v9;
    [v6 enumerateRangesWithOptions:2 usingBlock:v29];
    if (v9 != ptr) {
      free(v9);
    }
  }
}

void sub_D614C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D6170(void *a1, uint64_t *size, uint64_t *a3, long long *a4)
{
  if (a1[14] != a1[15])
  {
    uint64_t v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      unint64_t v6 = 0;
      uint64_t v9 = ptr;
    }
    else
    {
      unint64_t v6 = 0;
      unint64_t v7 = 0;
      unint64_t v8 = 64;
      uint64_t v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            uint64_t v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            uint64_t v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        unint64_t v22 = v8;
        uint64_t v23 = v9;
        *((void *)v9 + v7) = v4;
        uint64_t v10 = v4[5];
        uint64_t v24 = v4[6];
        if (v10 != v24)
        {
          unint64_t v11 = 0;
          do
          {
            uint64_t v25 = v10;
            uint64_t v13 = *(void *)(v10 + 8);
            uint64_t v12 = *(void *)(v10 + 16);
            uint64_t v26 = v12;
            while (v13 != v12)
            {
              uint64_t v14 = a1[8];
              uint64_t v27 = v13;
              unint64_t v15 = (*(void *)(v13 + 8) - v14) >> 3;
              uint64_t v16 = *(void *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                uint64_t v28 = v16 >> 3;
                do
                {
                  uint64_t v17 = *(void *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6) {
                      unint64_t v6 = objc_opt_new();
                    }
                    do
                    {
                      if (([v6 containsIndex:v17] & 1) == 0)
                      {
                        uint64_t v18 = a1[14] + 152 * v17;
                        *(void *)uint64_t v18 = -1;
                        *(_OWORD *)(v18 + sub_1265C((uint64_t)this + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        [v6 addIndex:v17];
                      }
                      uint64_t v19 = a1[14];
                      sub_69170((void *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      uint64_t v17 = *(void *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              uint64_t v12 = v26;
              uint64_t v13 = v27 + 96;
            }
            ++v11;
            uint64_t v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        unint64_t v8 = v22;
        uint64_t v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_D6684;
    void v33[3] = &unk_253220;
    void v33[4] = a1;
    long long v34 = *a4;
    uint64_t v35 = *((void *)a4 + 2);
    unint64_t v36 = v9;
    [v6 enumerateRangesUsingBlock:v33];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_D6748;
    void v29[3] = &unk_253220;
    void v29[4] = a1;
    long long v30 = *a4;
    uint64_t v31 = *((void *)a4 + 2);
    long long v32 = v9;
    [v6 enumerateRangesWithOptions:2 usingBlock:v29];
    if (v9 != ptr) {
      free(v9);
    }
  }
}

void sub_D64E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_D6504(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = 152 * a2;
    do
    {
      uint64_t v7 = *(void *)(v5 + 112);
      uint64_t v8 = v7 + v6;
      uint64_t v9 = (double *)v4[7];
      double v10 = *(double *)(*(void *)v4[6] + 8 * *(void *)(v7 + v6 + 24));
      unint64_t v11 = *(void **)(v7 + v6 + 120);
      uint64_t v12 = *(void *)(v7 + v6 + 128);
      uint64_t v13 = v7 + 152 * v12;
      BOOL v14 = v12 == -1;
      p_CGFloat y = &CGPointZero.y;
      if (!v14) {
        p_CGFloat y = (CGFloat *)(v13 + 144);
      }
      double v16 = *v9 + 0.0;
      double v17 = v10 + v9[1];
      uint64_t v18 = (const CGPoint *)(v13 + 136);
      if (v14) {
        uint64_t v18 = &CGPointZero;
      }
      double v19 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + ++*(void *)(*(void *)(result + 32) + 144) = v17;
      float64x2_t result = [v11 setComputedOrigin:v16 - x, v17 - v19];
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_D65C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = 152 * (a2 + a3);
    do
    {
      uint64_t v7 = *(void *)(v5 + 112) + v6;
      double v8 = *(double *)(*(void *)(a1 + 40) + 8);
      double v9 = *(double *)(**(void **)(a1 + 48) + 8 * (*(void *)(v7 - 104) + *(void *)(v7 - 128)))
         - *(double *)(**(void **)(a1 + 48) + 8 * *(void *)(v7 - 128));
      double v10 = [*(id *)(v7 - 32) controller];
      [v10 validateGroupedContainingLayout:v7 withSize:v8];

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_D6674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_D6684(void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = result[4];
    uint64_t v6 = 152 * a2;
    do
    {
      uint64_t v7 = *(void *)(v5 + 112);
      uint64_t v8 = v7 + v6;
      double v9 = (double *)v4[7];
      double v10 = *(double *)(*(void *)v4[6] + 8 * *(void *)(v7 + v6 + 24));
      unint64_t v11 = *(void **)(v7 + v6 + 120);
      uint64_t v12 = *(void *)(v7 + v6 + 128);
      uint64_t v13 = v7 + 152 * v12;
      BOOL v14 = v12 == -1;
      p_CGFloat y = &CGPointZero.y;
      if (!v14) {
        p_CGFloat y = (CGFloat *)(v13 + 144);
      }
      double v16 = *v9 + 0.0;
      double v17 = v10 + v9[1];
      uint64_t v18 = (const CGPoint *)(v13 + 136);
      if (v14) {
        uint64_t v18 = &CGPointZero;
      }
      double v19 = *p_y;
      double x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + ++*(void *)(*(void *)(result + 32) + 144) = v17;
      float64x2_t result = [v11 setComputedOrigin:v16 - x, v17 - v19];
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_D6748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = 152 * (a2 + a3);
    do
    {
      uint64_t v7 = *(void *)(v5 + 112) + v6;
      double v8 = *(double *)(*(void *)(a1 + 40) + 8);
      double v9 = *(double *)(**(void **)(a1 + 48) + 8 * (*(void *)(v7 - 104) + *(void *)(v7 - 128)))
         - *(double *)(**(void **)(a1 + 48) + 8 * *(void *)(v7 - 128));
      double v10 = [*(id *)(v7 - 32) controller];
      [v10 validateGroupedContainingLayout:*(void *)(v7 - 32) withSize:v8, v9];

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_D67F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_D6804(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v10 = a2;
  if (*(void *)(a2 + 16) <= 1uLL) {
    unint64_t v12 = 1;
  }
  else {
    unint64_t v12 = *(void *)(a2 + 16);
  }
  double v13 = *(double *)(a2 + 88);
  sub_96F38(&v97, 2 * v12);
  unint64_t v14 = 0;
  unint64_t v100 = v12;
  double v101 = v13;
  id v103 = 0;
  uint64_t v104 = 0;
  long long __p = 0;
  double v16 = *(uint64_t **)a1;
  unint64_t v15 = *(void *)(a1 + 8);
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = v98;
  uint64_t v19 = v97 - 1;
  uint64_t v20 = *(void *)(a1 + 32);
LABEL_5:
  while (1)
  {
    unint64_t v21 = v17;
    unint64_t v22 = v15;
    if (v15 == v20 && v17 == *(void *)(a1 + 40)) {
      break;
    }
    uint64_t v23 = *v16;
    uint64_t v24 = *(void *)(*v16 + 88 * v15);
    if (*(void *)(v24 + 96 * v21 + 16))
    {
      uint64_t v25 = *(void *)(v24 + 96 * v21 + 24);
      if (v25)
      {
        uint64_t v26 = v24 + 96 * v21;
        uint64_t v27 = *(void *)(v26 + 8);
        unint64_t v28 = v27 + v25;
        if (v14 <= v27 + v25) {
          unint64_t v14 = v27 + v25;
        }
        double v29 = *(double *)(v26 + 80);
        long long v30 = (double *)&v18[2 * v28 + ~((((2 * v27) | 1uLL) * 2 * v27) >> 1) + v19 * 2 * v27];
        if (*(v30 - 1) >= v29) {
          double v29 = *(v30 - 1);
        }
        *(v30 - 1) = v29;
        if (v27)
        {
          double v31 = v101;
          unint64_t v32 = 2 * v27 + ~((unint64_t)((2 * v27 - 1) * 2 * v27) >> 1) + v19 * (2 * v27 - 1);
          if (*(double *)&v18[v32] >= v101) {
            double v31 = *(double *)&v18[v32];
          }
          *(double *)&v18[v32] = v31;
        }
        if (v12 > v28)
        {
          double v33 = v101;
          unint64_t v34 = ((2 * v28) | 1) + v19 * 2 * v28 + ~((((2 * v28) | 1) * 2 * v28) >> 1);
          if (*(double *)&v18[v34] >= v101) {
            double v33 = *(double *)&v18[v34];
          }
          *(double *)&v18[v34] = v33;
        }
      }
    }
    unint64_t v17 = 0;
    unint64_t v15 = 0x2E8BA2E8BA2E8BA3 * ((v16[1] - v23) >> 3);
    if (v22 < v15)
    {
      unint64_t v17 = v21 + 1;
      uint64_t v35 = (void *)(v23 + 88 * v22 + 8);
      while (v17 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v35 - *(v35 - 1)) >> 5))
      {
        unint64_t v17 = 0;
        ++v22;
        v35 += 11;
        if (v15 == v22) {
          goto LABEL_5;
        }
      }
      unint64_t v15 = v22;
    }
  }
  sub_D6F78(&v97);
  uint64_t v37 = *(uint64_t **)a1;
  unint64_t v36 = *(void *)(a1 + 8);
  unint64_t v38 = *(void *)(a1 + 16);
  uint64_t v89 = a3;
  long long v90 = *(uint64_t **)a1;
  uint64_t v91 = a1;
  uint64_t v92 = v10;
LABEL_28:
  while (1)
  {
    unint64_t v39 = v36;
    unint64_t v40 = v38;
    if (v36 == *(void *)(a1 + 32) && v38 == *(void *)(a1 + 40)) {
      break;
    }
    uint64_t v41 = *(void *)(*v37 + 88 * v36);
    uint64_t v42 = v41 + 96 * v38;
    unint64_t v45 = *(void *)(v42 + 16);
    long long v44 = (unint64_t *)(v42 + 16);
    unint64_t v43 = v45;
    if (v45)
    {
      uint64_t v46 = v41 + 96 * v38;
      uint64_t v48 = *(void *)(v46 + 24);
      uint64_t v47 = (void *)(v46 + 24);
      if (v48)
      {
        uint64_t v93 = v44;
        uint64_t v94 = (unint64_t *)(v41 + 96 * v38);
        unint64_t v95 = v38;
        double v49 = sub_62124(v10, *v94, v43);
        uint64_t v50 = v41;
        uint64_t v51 = v41 + 96 * v95;
        uint64_t v53 = *(void *)(v51 + 8);
        uint64_t v52 = (uint64_t *)(v51 + 8);
        double v54 = *((double *)__p + 2 * *v47 + 2 * v53 - 1) - *((double *)__p + 2 * v53);
        sub_68438((uint64_t)&v96, 0, v52[5], v52[6], v49);
        double v56 = v55;
        uint64_t v57 = v50 + 96 * v95;
        *(void *)(v57 + 72) = v58;
        *(double *)(v57 + 80) = v55;
        sub_68CD0(v92, *v94, *v93, 1);
        uint64_t v60 = v50;
        uint64_t v61 = *v52;
        uint64_t v62 = v52[5];
        uint64_t v63 = v52[6];
        if (v62 == v63)
        {
          uint64_t v10 = v92;
        }
        else
        {
          double v64 = *((double *)__p + 2 * v61) + (v54 - v56) * a4;
          double v65 = a5 + v59;
          double v66 = a6 + v64;
          uint64_t v67 = *(void *)(v91 + 72);
          double v68 = 0.0;
          do
          {
            *(double *)(v62 + 32) = v65;
            *(double *)(v62 + 40) = v66 + v68;
            uint64_t v69 = *(void *)(v62 + 8);
            uint64_t v70 = *(void *)(v62 + 16);
            while (v69 != v70)
            {
              uint64_t v71 = *(void *)(v69 + 56);
              uint64_t v72 = *(void *)(v67 + 112) + 152 * v71;
              uint64_t v73 = (const CGPoint *)(v72 + 136);
              p_CGFloat y = (CGFloat *)(v72 + 144);
              BOOL v75 = v71 == -1;
              if (v71 == -1) {
                uint64_t v76 = &CGPointZero;
              }
              else {
                uint64_t v76 = v73;
              }
              if (v75) {
                p_CGFloat y = &CGPointZero.y;
              }
              sub_69564((double *)(v69 + 8), v65 - v76->x + *(double *)(v69 + 72), v66 + v68 - *p_y + *(double *)(v69 + 64));
              v69 += 96;
            }
            double v68 = v68 + *(double *)(v62 + 56);
            v62 += 64;
          }
          while (v62 != v63);
          uint64_t v61 = *v52;
          uint64_t v10 = v92;
        }
        uint64_t v37 = v90;
        if (*(void *)(v89 + 16)) {
          BOOL v77 = v61 == 0;
        }
        else {
          BOOL v77 = 1;
        }
        BOOL v78 = !v77 && *v93 == 1;
        a1 = v91;
        unint64_t v40 = v95;
        if (v78)
        {
          sub_68CD0(v10, *v94, 1uLL, 1);
          double v80 = v79;
          double v81 = *((double *)__p + 2 * *v52);
          double v82 = *(double *)(v10 + 88);
          double v83 = *(double *)(v89 + 8);
          id v84 = *(id *)(v60 + 96 * v95 + 32);
          unint64_t v85 = [v84 identifier];
          sub_695E4((void *)v89, v85, a5 + v80, a6 + v81 - v82 * 0.5 - v83 * 0.5);

          uint64_t v37 = v90;
          unint64_t v40 = v95;
        }
      }
    }
    unint64_t v38 = 0;
    unint64_t v36 = 0x2E8BA2E8BA2E8BA3 * ((v37[1] - *v37) >> 3);
    if (v39 < v36)
    {
      unint64_t v38 = v40 + 1;
      uint64_t v86 = (void *)(*v37 + 88 * v39 + 8);
      while (v38 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v86 - *(v86 - 1)) >> 5))
      {
        unint64_t v38 = 0;
        ++v39;
        v86 += 11;
        if (v36 == v39) {
          goto LABEL_28;
        }
      }
      unint64_t v36 = v39;
    }
  }
  double v87 = sub_62620(v10);
  if (__p)
  {
    id v103 = __p;
    operator delete(__p);
  }
  if (v98)
  {
    uint64_t v99 = v98;
    operator delete(v98);
  }
  return v87;
}

void sub_D6DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_D6FC8((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_D6DEC(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  double v9 = sub_62620(a2);
  sub_D700C(a1, &v32);
  uint64_t v10 = v32;
  unint64_t v11 = v33;
  if (v32 == v33)
  {
    if (!v32) {
      return v9;
    }
    goto LABEL_10;
  }
  double v12 = 0.0;
  do
  {
    long long v13 = *((_OWORD *)v10 + 2);
    long long v14 = *(_OWORD *)v10;
    *(_OWORD *)double v31 = *((_OWORD *)v10 + 1);
    *(_OWORD *)&v31[16] = v13;
    long long v30 = v14;
    uint64_t v15 = *((void *)v10 + 2);
    long long v28 = v14;
    uint64_t v29 = v15;
    long long v26 = *(_OWORD *)&v31[8];
    uint64_t v27 = *((void *)&v13 + 1);
    double v16 = sub_D73D4(a1, (uint64_t)&v28, (uint64_t)&v26, a2);
    if (v12 < v16) {
      double v12 = v16;
    }
    v10 += 48;
  }
  while (v10 != v11);
  unint64_t v17 = v32;
  uint64_t v10 = v33;
  if (v32 != v33)
  {
    do
    {
      long long v18 = *((_OWORD *)v17 + 2);
      long long v19 = *(_OWORD *)v17;
      *(_OWORD *)double v31 = *((_OWORD *)v17 + 1);
      *(_OWORD *)&v31[16] = v18;
      long long v30 = v19;
      uint64_t v20 = *((void *)v17 + 2);
      long long v24 = v19;
      uint64_t v25 = v20;
      long long v22 = *(_OWORD *)&v31[8];
      uint64_t v23 = *((void *)&v18 + 1);
      sub_D7634(a1, (uint64_t)&v24, (uint64_t)&v22, a2, v12, a4, a5);
      v17 += 48;
    }
    while (v17 != v10);
    uint64_t v10 = v32;
  }
  if (v10)
  {
LABEL_10:
    double v33 = v10;
    operator delete(v10);
  }
  return v9;
}

void sub_D6F58(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 104);
  if (v3)
  {
    *(void *)(v1 - 96) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_D6F78(unint64_t *a1)
{
  sub_96588(a1, &v4);
  int64x2_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = (unint64_t)v2;
    operator delete(v2);
  }
  double result = *(double *)&v4;
  *((_OWORD *)a1 + 3) = v4;
  a1[8] = v5;
  return result;
}

void *sub_D6FC8(void *a1)
{
  int64x2_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_D700C(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v5 = a2 + 2;
  uint64_t v7 = *(uint64_t **)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = v8;
  unint64_t v10 = v6;
  unint64_t v38 = a2 + 2;
LABEL_2:
  while (1)
  {
    unint64_t v11 = v8;
    unint64_t v12 = v6;
    if (v6 == *(void *)(a1 + 32) && v8 == *(void *)(a1 + 40)) {
      break;
    }
    uint64_t v13 = *v7;
    long long v14 = (unint64_t *)(*(void *)(*v7 + 88 * v6) + 96 * v8);
    unint64_t v15 = v14[3] + *v14;
    if (v10 != v6 || v9 != v11)
    {
      if (*v14 < v4)
      {
        if (v15 < v4) {
          unint64_t v4 = v14[3] + *v14;
        }
        goto LABEL_29;
      }
      if ((unint64_t)v3 >= *v5)
      {
        unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a2) >> 4);
        unint64_t v17 = v16 + 1;
        if (v16 + 1 > 0x555555555555555) {
          sub_4484();
        }
        if (0x5555555555555556 * ((uint64_t)(*v5 - (void)*a2) >> 4) > v17) {
          unint64_t v17 = 0x5555555555555556 * ((uint64_t)(*v5 - (void)*a2) >> 4);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v5 - (void)*a2) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v18 = 0x555555555555555;
        }
        else {
          unint64_t v18 = v17;
        }
        if (v18) {
          long long v19 = (char *)sub_452C((uint64_t)v5, v18);
        }
        else {
          long long v19 = 0;
        }
        uint64_t v20 = &v19[48 * v16];
        *(void *)uint64_t v20 = v7;
        *((void *)v20 + 1) = v10;
        *((void *)v20 + 2) = v9;
        *((void *)v20 + 3) = v7;
        *((void *)v20 + 4) = v12;
        *((void *)v20 + 5) = v11;
        long long v22 = *a2;
        unint64_t v21 = a2[1];
        uint64_t v23 = v20;
        if (v21 != *a2)
        {
          do
          {
            long long v24 = *((_OWORD *)v21 - 3);
            long long v25 = *((_OWORD *)v21 - 1);
            *((_OWORD *)v23 - 2) = *((_OWORD *)v21 - 2);
            *((_OWORD *)v23 - 1) = v25;
            *((_OWORD *)v23 - 3) = v24;
            v23 -= 48;
            v21 -= 48;
          }
          while (v21 != v22);
          unint64_t v21 = v22;
        }
        uint64_t v3 = v20 + 48;
        *a2 = v23;
        a2[1] = v20 + 48;
        a2[2] = &v19[48 * v18];
        if (v21) {
          operator delete(v21);
        }
        unint64_t v5 = v38;
      }
      else
      {
        *(void *)uint64_t v3 = v7;
        *((void *)v3 + 1) = v10;
        *((void *)v3 + 2) = v9;
        *((void *)v3 + 3) = v7;
        *((void *)v3 + 4) = v6;
        *((void *)v3 + 5) = v11;
        v3 += 48;
      }
      a2[1] = v3;
      uint64_t v13 = *v7;
    }
    unint64_t v9 = v11;
    unint64_t v10 = v12;
    unint64_t v4 = v15;
LABEL_29:
    unint64_t v8 = 0;
    unint64_t v6 = 0x2E8BA2E8BA2E8BA3 * ((v7[1] - v13) >> 3);
    if (v12 < v6)
    {
      unint64_t v8 = v11 + 1;
      long long v26 = (void *)(v13 + 88 * v12 + 8);
      while (v8 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v26 - *(v26 - 1)) >> 5))
      {
        unint64_t v8 = 0;
        ++v12;
        v26 += 11;
        if (v6 == v12) {
          goto LABEL_2;
        }
      }
      unint64_t v6 = v12;
    }
  }
  if (v10 != v6 || v9 != v8)
  {
    if ((unint64_t)v3 >= *v5)
    {
      unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a2) >> 4);
      if (v28 + 1 > 0x555555555555555) {
        sub_4484();
      }
      unint64_t v29 = 0x5555555555555556 * ((uint64_t)(*v5 - (void)*a2) >> 4);
      if (v29 <= v28 + 1) {
        unint64_t v29 = v28 + 1;
      }
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v5 - (void)*a2) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
        unint64_t v30 = 0x555555555555555;
      }
      else {
        unint64_t v30 = v29;
      }
      if (v30) {
        double v31 = (char *)sub_452C((uint64_t)v5, v30);
      }
      else {
        double v31 = 0;
      }
      unint64_t v32 = &v31[48 * v28];
      double v33 = &v31[48 * v30];
      *(void *)unint64_t v32 = v7;
      *((void *)v32 + 1) = v10;
      *((void *)v32 + 2) = v9;
      *((void *)v32 + 3) = v7;
      *((void *)v32 + 4) = v12;
      *((void *)v32 + 5) = v11;
      uint64_t v27 = v32 + 48;
      uint64_t v35 = *a2;
      unint64_t v34 = a2[1];
      if (v34 != *a2)
      {
        do
        {
          long long v36 = *((_OWORD *)v34 - 3);
          long long v37 = *((_OWORD *)v34 - 1);
          *((_OWORD *)v32 - 2) = *((_OWORD *)v34 - 2);
          *((_OWORD *)v32 - 1) = v37;
          *((_OWORD *)v32 - 3) = v36;
          v32 -= 48;
          v34 -= 48;
        }
        while (v34 != v35);
        unint64_t v34 = v35;
      }
      *a2 = v32;
      a2[1] = v27;
      a2[2] = v33;
      if (v34) {
        operator delete(v34);
      }
    }
    else
    {
      *(void *)uint64_t v3 = v7;
      *((void *)v3 + 1) = v10;
      *((void *)v3 + 2) = v9;
      *((void *)v3 + 3) = v7;
      uint64_t v27 = v3 + 48;
      *((void *)v3 + 4) = v6;
      *((void *)v3 + 5) = v8;
    }
    a2[1] = v27;
  }
}

void sub_D73A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  unint64_t v11 = *(void **)a10;
  if (*(void *)a10)
  {
    *(void *)(a10 + sub_1265C((uint64_t)this + 8) = v11;
    operator delete(v11);
  }
  _Unwind_Resume(exception_object);
}

double sub_D73D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16) <= 1uLL) {
    unint64_t v6 = 1;
  }
  else {
    unint64_t v6 = *(void *)(a4 + 16);
  }
  double v7 = *(double *)(a4 + 88);
  sub_96F38(&v33, 2 * v6);
  unint64_t v8 = 0;
  unint64_t v36 = v6;
  double v37 = v7;
  unint64_t v39 = 0;
  uint64_t v40 = 0;
  long long __p = 0;
  unint64_t v10 = *(uint64_t **)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  unint64_t v11 = *(void *)(a2 + 16);
  unint64_t v12 = v34;
  uint64_t v13 = v33 - 1;
  uint64_t v14 = *(void *)(a3 + 8);
LABEL_5:
  while (1)
  {
    unint64_t v15 = v11;
    unint64_t v16 = v9;
    if (v9 == v14 && v11 == *(void *)(a3 + 16)) {
      break;
    }
    uint64_t v17 = *v10;
    uint64_t v18 = *(void *)(*v10 + 88 * v9);
    if (*(void *)(v18 + 96 * v15 + 16))
    {
      uint64_t v19 = *(void *)(v18 + 96 * v15 + 24);
      if (v19)
      {
        uint64_t v20 = v18 + 96 * v15;
        uint64_t v21 = *(void *)(v20 + 8);
        unint64_t v22 = v21 + v19;
        if (v8 <= v21 + v19) {
          unint64_t v8 = v21 + v19;
        }
        double v23 = *(double *)(v20 + 80);
        long long v24 = (double *)&v12[2 * v22 + ~((((2 * v21) | 1uLL) * 2 * v21) >> 1) + v13 * 2 * v21];
        if (*(v24 - 1) >= v23) {
          double v23 = *(v24 - 1);
        }
        *(v24 - 1) = v23;
        if (v21)
        {
          double v25 = v37;
          unint64_t v26 = 2 * v21 + ~((unint64_t)((2 * v21 - 1) * 2 * v21) >> 1) + v13 * (2 * v21 - 1);
          if (*(double *)&v12[v26] >= v37) {
            double v25 = *(double *)&v12[v26];
          }
          *(double *)&v12[v26] = v25;
        }
        if (v6 > v22)
        {
          double v27 = v37;
          unint64_t v28 = ((2 * v22) | 1) + v13 * 2 * v22 + ~((((2 * v22) | 1) * 2 * v22) >> 1);
          if (*(double *)&v12[v28] >= v37) {
            double v27 = *(double *)&v12[v28];
          }
          *(double *)&v12[v28] = v27;
        }
      }
    }
    unint64_t v11 = 0;
    unint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v10[1] - v17) >> 3);
    if (v16 < v9)
    {
      unint64_t v11 = v15 + 1;
      unint64_t v29 = (void *)(v17 + 88 * v16 + 8);
      while (v11 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v29 - *(v29 - 1)) >> 5))
      {
        unint64_t v11 = 0;
        ++v16;
        v29 += 11;
        if (v9 == v16) {
          goto LABEL_5;
        }
      }
      unint64_t v9 = v16;
    }
  }
  sub_D6F78(&v33);
  if (v8)
  {
    unint64_t v30 = __p;
    double v31 = *((double *)__p + 2 * v8 - 1);
  }
  else
  {
    unint64_t v30 = __p;
    double v31 = 0.0;
    if (!__p) {
      goto LABEL_31;
    }
  }
  unint64_t v39 = v30;
  operator delete(v30);
LABEL_31:
  if (v34)
  {
    uint64_t v35 = v34;
    operator delete(v34);
  }
  return v31;
}

void sub_D7620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_D6FC8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_D7634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  if (*(void *)(a4 + 16) <= 1uLL) {
    unint64_t v12 = 1;
  }
  else {
    unint64_t v12 = *(void *)(a4 + 16);
  }
  double v13 = *(double *)(a4 + 88);
  sub_96F38(&v69, 2 * v12);
  unint64_t v14 = 0;
  unint64_t v72 = v12;
  double v73 = v13;
  BOOL v75 = 0;
  uint64_t v76 = 0;
  long long __p = 0;
  unint64_t v16 = *(uint64_t **)a2;
  unint64_t v15 = *(void *)(a2 + 8);
  unint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = v70;
  uint64_t v19 = v69 - 1;
  uint64_t v20 = *(void *)(a3 + 8);
LABEL_5:
  while (1)
  {
    unint64_t v21 = v17;
    unint64_t v22 = v15;
    if (v15 == v20 && v17 == *(void *)(a3 + 16)) {
      break;
    }
    uint64_t v23 = *v16;
    uint64_t v24 = *(void *)(*v16 + 88 * v15);
    if (*(void *)(v24 + 96 * v21 + 16))
    {
      uint64_t v25 = *(void *)(v24 + 96 * v21 + 24);
      if (v25)
      {
        uint64_t v26 = v24 + 96 * v21;
        uint64_t v27 = *(void *)(v26 + 8);
        unint64_t v28 = v27 + v25;
        if (v14 <= v27 + v25) {
          unint64_t v14 = v27 + v25;
        }
        double v29 = *(double *)(v26 + 80);
        unint64_t v30 = (double *)&v18[2 * v28 + ~((((2 * v27) | 1uLL) * 2 * v27) >> 1) + v19 * 2 * v27];
        if (*(v30 - 1) >= v29) {
          double v29 = *(v30 - 1);
        }
        *(v30 - 1) = v29;
        if (v27)
        {
          double v31 = v73;
          unint64_t v32 = 2 * v27 + ~((unint64_t)((2 * v27 - 1) * 2 * v27) >> 1) + v19 * (2 * v27 - 1);
          if (*(double *)&v18[v32] >= v73) {
            double v31 = *(double *)&v18[v32];
          }
          *(double *)&v18[v32] = v31;
        }
        if (v12 > v28)
        {
          double v33 = v73;
          unint64_t v34 = ((2 * v28) | 1) + v19 * 2 * v28 + ~((((2 * v28) | 1) * 2 * v28) >> 1);
          if (*(double *)&v18[v34] >= v73) {
            double v33 = *(double *)&v18[v34];
          }
          *(double *)&v18[v34] = v33;
        }
      }
    }
    unint64_t v17 = 0;
    unint64_t v15 = 0x2E8BA2E8BA2E8BA3 * ((v16[1] - v23) >> 3);
    if (v22 < v15)
    {
      unint64_t v17 = v21 + 1;
      uint64_t v35 = (void *)(v23 + 88 * v22 + 8);
      while (v17 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v35 - *(v35 - 1)) >> 5))
      {
        unint64_t v17 = 0;
        ++v22;
        v35 += 11;
        if (v15 == v22) {
          goto LABEL_5;
        }
      }
      unint64_t v15 = v22;
    }
  }
  sub_D6F78(&v69);
  if (v14) {
    double v36 = *((double *)__p + 2 * v14 - 1);
  }
  else {
    double v36 = 0.0;
  }
  unint64_t v38 = *(uint64_t **)a2;
  unint64_t v37 = *(void *)(a2 + 8);
  double v39 = a5 - v36;
  unint64_t v40 = *(void *)(a2 + 16);
  uint64_t v67 = *(uint64_t **)a2;
  uint64_t v68 = a3;
LABEL_31:
  while (1)
  {
    unint64_t v41 = v37;
    unint64_t v42 = v40;
    if (v37 == *(void *)(a3 + 8) && v40 == *(void *)(a3 + 16)) {
      break;
    }
    uint64_t v43 = *(void *)(*v38 + 88 * v37);
    uint64_t v44 = v43 + 96 * v40;
    unint64_t v45 = *(void *)(v44 + 16);
    uint64_t v46 = *(void *)(v44 + 24);
    if (v45) {
      BOOL v47 = v46 == 0;
    }
    else {
      BOOL v47 = 1;
    }
    if (!v47)
    {
      sub_68CD0(a4, *(void *)(v43 + 96 * v40), v45, 1);
      double v49 = (void *)(v43 + 96 * v42);
      uint64_t v51 = v49[6];
      uint64_t v50 = v49[7];
      if (v51 != v50)
      {
        double v52 = a6 + v48;
        double v53 = a7 + v39 + *((double *)__p + 2 * v49[1]);
        uint64_t v54 = *(void *)(a1 + 72);
        double v55 = 0.0;
        do
        {
          *(double *)(v51 + 32) = v52;
          *(double *)(v51 + 40) = v53 + v55;
          uint64_t v56 = *(void *)(v51 + 8);
          uint64_t v57 = *(void *)(v51 + 16);
          while (v56 != v57)
          {
            uint64_t v58 = *(void *)(v56 + 56);
            uint64_t v59 = *(void *)(v54 + 112) + 152 * v58;
            uint64_t v60 = (const CGPoint *)(v59 + 136);
            p_CGFloat y = (CGFloat *)(v59 + 144);
            BOOL v62 = v58 == -1;
            if (v58 == -1) {
              uint64_t v63 = &CGPointZero;
            }
            else {
              uint64_t v63 = v60;
            }
            if (v62) {
              p_CGFloat y = &CGPointZero.y;
            }
            sub_69564((double *)(v56 + 8), v52 - v63->x + *(double *)(v56 + 72), v53 + v55 - *p_y + *(double *)(v56 + 64));
            v56 += 96;
          }
          double v55 = v55 + *(double *)(v51 + 56);
          v51 += 64;
        }
        while (v51 != v50);
      }
    }
    unint64_t v40 = 0;
    unint64_t v38 = v67;
    a3 = v68;
    unint64_t v37 = 0x2E8BA2E8BA2E8BA3 * ((v67[1] - *v67) >> 3);
    if (v41 < v37)
    {
      unint64_t v40 = v42 + 1;
      double v64 = (void *)(*v67 + 88 * v41 + 8);
      while (v40 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v64 - *(v64 - 1)) >> 5))
      {
        unint64_t v40 = 0;
        ++v41;
        v64 += 11;
        if (v37 == v41) {
          goto LABEL_31;
        }
      }
      unint64_t v37 = v41;
    }
  }
  if (__p)
  {
    BOOL v75 = __p;
    operator delete(__p);
  }
  if (v70)
  {
    uint64_t v71 = v70;
    operator delete(v70);
  }
}

void sub_D7A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_D6FC8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_D7CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D81CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  _Unwind_Resume(a1);
}

void sub_D82A4(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = [v4 submodel];
  if ([v3 kind] == &dword_4) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_D831C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_D8414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D8494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D862C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D87D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D8B34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D8CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D8DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D8ED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9438(_Unwind_Exception *a1)
{
  double v7 = v5;

  _Unwind_Resume(a1);
}

void sub_D966C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D99C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_D9EC4(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_DA004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DA098(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_DA3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_DA738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_DA888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DA920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DA978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DAADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DACE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DAED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_DB11C(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  double v7 = a1 + 1;
  unint64_t v6 = a1[1];
  if (v6)
  {
    unint64_t v8 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v9 = (uint64_t **)v6;
        unint64_t v10 = v6[4];
        if (v8 >= v10) {
          break;
        }
        unint64_t v6 = *v9;
        double v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      unint64_t v6 = v9[1];
      if (!v6)
      {
        double v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v9 = a1 + 1;
LABEL_10:
    unint64_t v11 = (uint64_t *)operator new(0x30uLL);
    void v11[4] = **a4;
    v11[5] = 0;
    sub_9F5D0(a1, (uint64_t)v9, v7, v11);
    return v11;
  }
  return (uint64_t *)v9;
}

uint64_t **sub_DB1DC(uint64_t **result, void *a2, void *a3)
{
  unint64_t v5 = result;
  if (result[2])
  {
    unint64_t v6 = *result;
    double v7 = result[1];
    double *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      unint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      unint64_t v8 = v6;
    }
    unint64_t v14 = result;
    unint64_t v15 = v8;
    unint64_t v16 = v8;
    if (v8)
    {
      unint64_t v15 = sub_DB3B8((uint64_t)v8);
      if (a2 != a3)
      {
        unint64_t v9 = a2;
        do
        {
          v8[4] = v9[4];
          void v8[5] = v9[5];
          sub_DB348(v5, v8);
          unint64_t v8 = v15;
          unint64_t v16 = v15;
          if (v15) {
            unint64_t v15 = sub_DB3B8((uint64_t)v15);
          }
          unint64_t v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              unint64_t v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              unint64_t v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          unint64_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    double result = (uint64_t **)sub_DB40C((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      double result = (uint64_t **)sub_DB464(v5, (_OWORD *)a2 + 2);
      unint64_t v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          double v13 = v12;
          unint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          double v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_DB334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_DB40C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_DB348(uint64_t **a1, uint64_t *a2)
{
  uint64_t v3 = a1 + 1;
  id v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (a2[4] >= (unint64_t)v4[4]) {
          break;
        }
        id v4 = (uint64_t *)*v4;
        unint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      id v4 = (uint64_t *)v4[1];
    }
    while (v4);
    unint64_t v5 = v3 + 1;
  }
  else
  {
    unint64_t v5 = a1 + 1;
  }
LABEL_8:
  sub_9F5D0(a1, (uint64_t)v3, v5, a2);
  return a2;
}

void *sub_DB3B8(uint64_t a1)
{
  double result = *(void **)(a1 + 16);
  if (result)
  {
    uint64_t v3 = (void *)*result;
    if (*result == a1)
    {
      void *result = 0;
      while (1)
      {
        id v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          double result = v4;
          id v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; uint64_t v3 = (void *)result[1])
      {
        do
        {
          double result = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_DB40C(uint64_t a1)
{
  sub_9F928(*(void *)a1, *(void **)(a1 + 16));
  int64x2_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        int64x2_t v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v2;
    }
    sub_9F928(*(void *)a1, v2);
  }
  return a1;
}

_OWORD *sub_DB464(uint64_t **a1, _OWORD *a2)
{
  id v4 = operator new(0x30uLL);
  unint64_t v5 = v4;
  void v4[2] = *a2;
  unint64_t v6 = a1 + 1;
  double v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        unint64_t v6 = (uint64_t **)v7;
        if (*((void *)v4 + 4) >= (unint64_t)v7[4]) {
          break;
        }
        double v7 = (uint64_t *)*v7;
        unint64_t v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      double v7 = (uint64_t *)v7[1];
    }
    while (v7);
    unint64_t v8 = v6 + 1;
  }
  else
  {
    unint64_t v8 = a1 + 1;
  }
LABEL_8:
  sub_9F5D0(a1, (uint64_t)v6, v8, (uint64_t *)v4);
  return v5;
}

id TUIResourceLoadFromString(void *a1)
{
  id v1 = a1;
  int64x2_t v2 = v1;
  if (qword_2DF628 != -1)
  {
    dispatch_once(&qword_2DF628, &stru_2551D8);
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    id v4 = 0;
    goto LABEL_6;
  }
  if (!v1) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v3 = [(id)qword_2DF620 objectForKeyedSubscript:v2];
  id v4 = [v3 unsignedIntegerValue];

LABEL_6:
  return v4;
}

void sub_DBC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_DBC2C(id a1)
{
  id v1 = (void *)qword_2DF620;
  qword_2DF620 = (uint64_t)&off_268690;
}

uint64_t TUIResourceLoadForURL(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!a2)
  {
    if ([v3 isFileURL]) {
      a2 = 1;
    }
    else {
      a2 = 2;
    }
  }

  return a2;
}

void sub_DBC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUIPriorityIsUndefined()
{
  return 0;
}

float TUIPriorityClamp(float a1)
{
  float v1 = 0.0;
  if (a1 >= 0.0) {
    float v1 = a1;
  }
  if (v1 > 1.0) {
    return 1.0;
  }
  return v1;
}

__CFString *NSStringFromTUISpringTimingParameters(float64x2_t *a1)
{
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_f64(*a1), (int32x4_t)vceqzq_f64(a1[1]))))) & 1) != 0|| a1[2].f64[0] != 0.0)
  {
    id v3 = objc_alloc_init((Class)NSMutableArray);
    [v3 addObject:@"{"];
    id v4 = +[NSString stringWithFormat:@" mass: %g", *(void *)&a1->f64[0]];
    [v3 addObject:v4];

    unint64_t v5 = +[NSString stringWithFormat:@" stiffness: %g", *(void *)&a1->f64[1]];
    [v3 addObject:v5];

    unint64_t v6 = +[NSString stringWithFormat:@" damping: %g", *(void *)&a1[1].f64[0]];
    [v3 addObject:v6];

    double v7 = +[NSString stringWithFormat:@" initialVelocity: { %g, %g }", *(void *)&a1[1].f64[1], *(void *)&a1[2].f64[0]];
    [v3 addObject:v7];

    double v8 = a1->f64[1];
    double v9 = 0.0;
    if (v8 != 0.0 && a1->f64[0] != 0.0)
    {
      double v10 = sqrt(a1->f64[0] * v8);
      double v9 = a1[1].f64[0] / (v10 + v10);
    }
    BOOL v11 = +[NSString stringWithFormat:@" == dampingRatio: %g", *(void *)&v9];
    [v3 addObject:v11];

    [v3 addObject:@" }"];
    int64x2_t v2 = [v3 componentsJoinedByString:&stru_257BF0];
  }
  else
  {
    int64x2_t v2 = @"TUISpringTimingParametersZero";
  }

  return v2;
}

void sub_DBEB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double TUISpringTimingCalculateDampingRatio(double *a1)
{
  double v1 = a1[1];
  double result = 0.0;
  if (v1 != 0.0 && *a1 != 0.0)
  {
    double v3 = sqrt(v1 * *a1);
    return a1[2] / (v3 + v3);
  }
  return result;
}

BOOL TUIValueNotNil(int a1)
{
  return a1 != 0;
}

BOOL TUIValueIsNil(int a1)
{
  return a1 == 0;
}

BOOL TUIConditionNotNil(int a1)
{
  return a1 != 0;
}

BOOL TUIConditionIsNil(int a1)
{
  return a1 == 0;
}

BOOL TUILocationNotNil(int a1)
{
  return a1 != 0x7FFFFFFF;
}

BOOL TUILocationIsNil(int a1)
{
  return a1 == 0x7FFFFFFF;
}

BOOL TUIReferenceListNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIReferenceListIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIDefinitionNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIDefinitionIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIEnumeratorNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIEnumeratorIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUINameIsValid(int a1)
{
  return (~a1 & 0xFFFF0000) != 0 && (_WORD)a1 != 0xFFFF;
}

BOOL TUIElementReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIElementReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUINameReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUINameReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIAttributesNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIAttributesIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIElementNodeNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIElementNodeIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIClosureNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIClosureIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUISize32Equal(float a1, float a2, float a3, float a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL TUIInsets32Equal(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8)
{
  return a1 == a5 && a2 == a6 && a3 == a7 && a4 == a8;
}

BOOL TUIAffineTransform32IsIdentity(float *a1)
{
  return *a1 == 1.0 && a1[1] == 0.0 && a1[2] == 0.0 && a1[3] == 1.0 && a1[4] == 0.0 && a1[5] == 0.0;
}

uint64_t TUILayerCompositingFilterNeedsBackdropLayer(void *a1)
{
  id v1 = a1;
  if (qword_2DF638 != -1) {
    dispatch_once(&qword_2DF638, &stru_2551F8);
  }
  uint64_t v2 = objc_opt_class();
  double v3 = TUIDynamicCast(v2, v1);
  if (v3
    || (uint64_t v4 = objc_opt_class(),
        TUIDynamicCast(v4, v1),
        unint64_t v5 = objc_claimAutoreleasedReturnValue(),
        [v5 type],
        double v3 = objc_claimAutoreleasedReturnValue(),
        v5,
        v3))
  {
    uint64_t v6 = [(id)qword_2DF630 containsObject:v3] ^ 1;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_DC1B4(_Unwind_Exception *a1)
{
  double v3 = v2;

  _Unwind_Resume(a1);
}

void sub_DC1E4(id a1)
{
  v4[0] = kCAFilterNormalBlendMode;
  v4[1] = kCAFilterMultiplyBlendMode;
  void v4[2] = kCAFilterScreenBlendMode;
  void v4[3] = kCAFilterOverlayBlendMode;
  void v4[4] = kCAFilterDarkenBlendMode;
  void v4[5] = kCAFilterLightenBlendMode;
  void v4[6] = kCAFilterColorDodgeBlendMode;
  v4[7] = kCAFilterColorBurnBlendMode;
  v4[8] = kCAFilterSoftLightBlendMode;
  v4[9] = kCAFilterHardLightBlendMode;
  v4[10] = kCAFilterDifferenceBlendMode;
  v4[11] = kCAFilterExclusionBlendMode;
  v4[12] = kCAFilterSubtractBlendMode;
  v4[13] = kCAFilterDivideBlendMode;
  v4[14] = kCAFilterLinearBurnBlendMode;
  v4[15] = kCAFilterLinearDodgeBlendMode;
  v4[16] = kCAFilterLinearLightBlendMode;
  v4[17] = kCAFilterPinLightBlendMode;
  v4[18] = kCAFilterHueBlendMode;
  v4[19] = kCAFilterSaturationBlendMode;
  v4[20] = kCAFilterColorBlendMode;
  v4[21] = kCAFilterLuminosityBlendMode;
  v4[22] = kCAFilterPlusL;
  v4[23] = kCAFilterPlusD;
  id v1 = +[NSArray arrayWithObjects:v4 count:24];
  uint64_t v2 = +[NSSet setWithArray:v1];
  double v3 = (void *)qword_2DF630;
  qword_2DF630 = v2;
}

void sub_DC3CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned int *TUI::Box::Flags::Flags(unsigned int *this)
{
  int v1 = *((unsigned __int8 *)this + 6);
  unint64_t v2 = (*this | ((unint64_t)(*((unsigned __int16 *)this + 2) | (v1 << 16)) << 32)) & 0xFF002000E00000;
  *((unsigned char *)this + 6) = v1;
  *this = v2;
  *((_WORD *)this + 2) = WORD2(v2);
  return this;
}

{
  int v1;
  unint64_t v2;

  int v1 = *((unsigned __int8 *)this + 6);
  unint64_t v2 = (*this | ((unint64_t)(*((unsigned __int16 *)this + 2) | (v1 << 16)) << 32)) & 0xFF002000E00000;
  *((unsigned char *)this + 6) = v1;
  *this = v2;
  *((_WORD *)this + 2) = WORD2(v2);
  return this;
}

int64_t sub_DCA14(id a1, _TUIDynamicArrayUpdate *a2, _TUIDynamicArrayUpdate *a3)
{
  uint64_t v4 = a3;
  unint64_t v5 = [(_TUIDynamicArrayUpdate *)a2 newIndex];
  unint64_t v6 = [(_TUIDynamicArrayUpdate *)v4 newIndex];

  if (v5 < v6) {
    return -1;
  }
  else {
    return 1;
  }
}

id *sub_DCCFC(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a2)
  {
    case 0:
      double result = (id *)[result[4] insertItemAtIndex:a4];
      break;
    case 1:
      double result = (id *)[result[4] deleteItemAtIndex:];
      break;
    case 2:
      double result = [result[4] updateItemAtIndex:];
      break;
    case 3:
      double result = [result[4] moveItemFromIndex:toIndex:];
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_DD264(uint64_t a1, void *a2)
{
  double v3 = [a2 superview];
  BOOL v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

id sub_DD2A4(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:0];
  unint64_t v2 = *(void **)(a1 + 32);

  return [v2 prepareForReuse];
}

void sub_DD3DC(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      unint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) prepareForReuse:(void)v6];
        unint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_DDC98(id a1)
{
  id v1 = (void *)qword_2DF640;
  qword_2DF640 = (uint64_t)&off_2662F0;
}

void sub_DDEC8(id a1)
{
  id v1 = (void *)qword_2DF650;
  qword_2DF650 = (uint64_t)&off_266308;
}

void sub_DDF44(id a1)
{
  v3[0] = @"didPlay";
  v3[1] = @"didPause";
  int v3[2] = @"didResume";
  v3[3] = @"didMute";
  void v3[4] = @"didUnmute";
  void v3[5] = @"didEnterFullscreen";
  v3[6] = @"didExitFullscreen";
  v3[7] = @"didPlayToCompletion";
  v3[8] = @"didFailToLoad";
  v3[9] = @"didStall";
  v3[10] = @"didBeginScrubbing";
  v3[11] = @"didEndScrubbing";
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:12];
  id v2 = (void *)qword_2DF660;
  qword_2DF660 = v1;
}

void sub_DE278(id a1)
{
  uint64_t v1 = (void *)qword_2DF670;
  qword_2DF670 = (uint64_t)&off_266320;
}

void sub_DE2FC(id a1)
{
  uint64_t v1 = (void *)qword_2DF680;
  qword_2DF680 = (uint64_t)&off_266338;
}

void sub_DE378(id a1)
{
  v3[0] = @"actionPlay";
  v3[1] = @"actionPause";
  int v3[2] = @"actionMute";
  v3[3] = @"actionUnmute";
  void v3[4] = @"actionEnterFullscreen";
  void v3[5] = @"actionExitFullscreen";
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:6];
  id v2 = (void *)qword_2DF690;
  qword_2DF690 = v1;
}

void sub_DE6EC(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("TUIAVAsset.creationQueue", (dispatch_queue_attr_t)&_dispatch_queue_attr_concurrent);
  id v2 = (void *)qword_2DF6A0;
  qword_2DF6A0 = (uint64_t)v1;
}

void sub_DE730(uint64_t a1)
{
  id v2 = [objc_alloc((Class)AVURLAsset) initWithURL:*(void *)(a1 + 32) options:0];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_DE888(_Unwind_Exception *a1)
{
  id v2 = v1;

  _Unwind_Resume(a1);
}

void sub_E0648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23)
{
  _Unwind_Resume(a1);
}

void sub_E07B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)TUILayoutController;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_E0850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E0A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E0AF4(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  if (((unint64_t)[v8 directEnvironmentUseMask] & a3) != 0) {
    [v7 addObject:v8];
  }
  if (((unint64_t)[v8 descendentEnvironmentUseMask] & a3) != 0)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    double v10 = [v9 environmentChildContainersForContainer:v8];
    id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v11)
    {
      uint64_t v12 = *(void *)v16;
      do
      {
        double v13 = 0;
        do
        {
          if (*(void *)v16 != v12) {
            objc_enumerationMutation(v10);
          }
          uint64_t v14 = *(void *)(*((void *)&v15 + 1) + 8 * (void)v13);
          if (v14) {
            sub_E0AF4(v7, v14, a3, v9);
          }
          double v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v11);
    }
  }
}

void sub_E0C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E0D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_E0D50(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = v4;
  if (!v3 || v3 == v4)
  {
    long long v6 = v3;
  }
  else
  {
    do
    {
      long long v6 = [v3 parentModel];

      if (!v6) {
        break;
      }
      id v3 = v6;
    }
    while (v6 != v5);
  }

  return v6 == v5;
}

void sub_E0DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E0E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E14E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  TUI::Graph::Ordering::~Ordering((TUI::Graph::Ordering *)&a51);
  sub_1265C((uint64_t)&a67);

  _Unwind_Resume(a1);
}

unint64_t sub_E1630(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 directEnvironmentUseMask];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v6 = [v4 environmentChildContainersForContainer:v3];
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  unint64_t v17 = (unint64_t)v5;
  uint64_t v8 = 0;
  if (v7)
  {
    uint64_t v9 = *(void *)v19;
    do
    {
      for (unsigned __int16 i = 0; i != v7; unsigned __int16 i = (char *)i + 1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        if (v11)
        {
          uint64_t v12 = [*(id *)(*((void *)&v18 + 1) + 8 * i) parentModel];
          double v13 = (void *)v12;
          if (v12) {
            BOOL v14 = v12 == (void)v3;
          }
          else {
            BOOL v14 = 1;
          }
          if (v14)
          {
            id v15 = (id)v12;
          }
          else
          {
            do
            {
              id v15 = [v13 parentModel];

              if (!v15) {
                break;
              }
              double v13 = v15;
            }
            while (v15 != v3);
          }
          if (v15 == v3) {
            v8 |= sub_E1630(v11, v4);
          }
        }
      }
      id v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v7);
  }

  [v3 setDescendentEnvironmentUseMask:v8];
  return v8 | v17;
}

void sub_E17DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E18F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E1ACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E1C6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E1D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E1E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_E1E48(uint64_t a1, void *a2)
{
  id v10 = a2;
  uint64_t v4 = a1 + 88;
  id v5 = sub_417C((void *)(a1 + 88), (unint64_t *)&v10);
  if (!v5)
  {
    v9[0] = v10;
    memset(&v9[1], 0, 24);
    id v5 = sub_E4FDC(v4, (unint64_t *)v9, (uint64_t *)v9);
  }
  ++v5[3];
  *(void *)(a1 + 3232 + 24 * *(void *)(a1 + 2780TUI::Evaluation::Variables::Capture::~Capture((TUI::Evaluation::Variables::Capture *)((char *)this - 8)) = a2;
  uint64_t result = mach_absolute_time();
  uint64_t v7 = *(void *)(a1 + 27808);
  uint64_t v8 = a1 + 3232 + 24 * v7;
  *(void *)(v8 + sub_1265C((uint64_t)this + 8) = result;
  *(void *)(v8 + 16) = 0;
  *(void *)(a1 + 2780sub_1265C((uint64_t)this + 8) = v7 + 1;
  return result;
}

void sub_E1EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_E1F10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 27808) - 1;
  *(void *)(a1 + 2780sub_1265C((uint64_t)this + 8) = v2;
  uint64_t v3 = a1 + 3232;
  id v4 = *(id *)(a1 + 3232 + 24 * v2);
  unint64_t v5 = *(void *)(v3 + 24 * *(void *)(a1 + 27808) + 8);
  uint64_t v6 = mach_absolute_time();
  id v12 = v4;
  uint64_t v7 = sub_417C((void *)(a1 + 88), (unint64_t *)&v12);
  if (!v7)
  {
    v11[0] = v12;
    memset(&v11[1], 0, 24);
    uint64_t v7 = sub_E4FDC(a1 + 88, (unint64_t *)v11, (uint64_t *)v11);
  }
  uint64_t v8 = v6 - v5;
  if (v5 >= v6) {
    uint64_t v8 = v5 - v6;
  }
  uint64_t v9 = v7[4];
  v7[5] += v8;
  uint64_t v10 = *(void *)(a1 + 27808);
  void v7[4] = v8 - *(void *)(a1 + 24 * v10 + 3248) + v9;
  if (v10) {
    *(void *)(a1 + 24 * v10 + 3224) += v8;
  }
}

void sub_E2018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_E2144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_E2164(uint64_t a1)
{
  return [*(id *)(a1 + 32) groupedContainingValidateWithSize:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

void sub_E2294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E23C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E24B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E2904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E2C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_E2DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E2F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E3184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_E32F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E3580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E3714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E37F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E3924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E3B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);

  _Unwind_Resume(a1);
}

uint64_t sub_E3BB4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_E3BC4(uint64_t a1)
{
}

void sub_E3BCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_E3CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E3D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E3F24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E4024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E4190(_Unwind_Exception *a1)
{
  uint64_t v7 = v6;

  _Unwind_Resume(a1);
}

void sub_E42D8(_Unwind_Exception *a1)
{
  uint64_t v7 = v6;

  _Unwind_Resume(a1);
}

void sub_E4648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_E4928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_E4BFC(void *a1)
{
  id v1 = [a1 parentModel];
  if (v1)
  {
    while ((objc_opt_respondsToSelector() & 1) == 0)
    {
      uint64_t v2 = [v1 parentModel];

      id v1 = (id)v2;
      if (!v2) {
        goto LABEL_6;
      }
    }
    id v1 = v1;
  }
LABEL_6:

  return v1;
}

void sub_E4C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_E4C98(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    id v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      for (unsigned __int16 i = *v12; i; unsigned __int16 i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4) {
            break;
          }
        }
      }
    }
  }
  unsigned __int16 i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_3ED8(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    void *i = *v22;
LABEL_38:
    *unint64_t v22 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    unint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_E4EDC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_E4EF0(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  unint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  uint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

char *sub_E4FDC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    unint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      unint64_t v10 = (char *)*v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = *((void *)v10 + 1);
          if (v11 == v6)
          {
            if (*((void *)v10 + 2) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          unint64_t v10 = *(char **)v10;
        }
        while (v10);
      }
    }
  }
  id v12 = (void *)(a1 + 16);
  unint64_t v10 = (char *)operator new(0x30uLL);
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 1) = v6;
  uint64_t v13 = *a3;
  *a3 = 0;
  *((void *)v10 + 2) = v13;
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(a3 + 1);
  *((void *)v10 + 5) = a3[3];
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v7 || (float)(v15 * (float)v7) < v14)
  {
    BOOL v16 = 1;
    if (v7 >= 3) {
      BOOL v16 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v7);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_3ED8(a1, v19);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    *(void *)unint64_t v10 = *v21;
LABEL_38:
    void *v21 = v10;
    goto LABEL_39;
  }
  *(void *)unint64_t v10 = *v12;
  *id v12 = v10;
  *(void *)(v20 + 8 * v3) = v12;
  if (*(void *)v10)
  {
    unint64_t v22 = *(void *)(*(void *)v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v22 >= v7) {
        v22 %= v7;
      }
    }
    else
    {
      v22 &= v7 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_E521C(_Unwind_Exception *a1)
{
  sub_4124(v2, v1);
  _Unwind_Resume(a1);
}

void sub_E52F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_E5320(uint64_t a1, void *a2, void *a3)
{
  id v22 = a2;
  id v5 = a3;
  unint64_t v6 = *(void ***)(a1 + 32);
  id v8 = [v5 validatedIntrinsicWidthConsideringSpecified];
  uint64_t v9 = v7;
  unint64_t v10 = (unint64_t)v6[2];
  unint64_t v11 = v6[1];
  if ((unint64_t)v11 >= v10)
  {
    uint64_t v13 = ((char *)v11 - (unsigned char *)*v6) >> 4;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 60) {
      sub_4484();
    }
    uint64_t v15 = v10 - (void)*v6;
    if (v15 >> 3 > v14) {
      unint64_t v14 = v15 >> 3;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16) {
      unint64_t v17 = (char *)sub_21C3C((uint64_t)(v6 + 2), v16);
    }
    else {
      unint64_t v17 = 0;
    }
    unint64_t v18 = &v17[16 * v13];
    size_t v19 = &v17[16 * v16];
    *(void *)unint64_t v18 = v8;
    *((void *)v18 + 1) = v9;
    id v12 = v18 + 16;
    uint64_t v21 = (char *)*v6;
    uint64_t v20 = (char *)v6[1];
    if (v20 != *v6)
    {
      do
      {
        *((_OWORD *)v18 - 1) = *((_OWORD *)v20 - 1);
        v18 -= 16;
        v20 -= 16;
      }
      while (v20 != v21);
      uint64_t v20 = (char *)*v6;
    }
    *unint64_t v6 = v18;
    v6[1] = v12;
    void v6[2] = v19;
    if (v20) {
      operator delete(v20);
    }
  }
  else
  {
    *unint64_t v11 = v8;
    v11[1] = v7;
    id v12 = v11 + 2;
  }
  v6[1] = v12;
}

void sub_E5458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E55C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_E55F4(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

void sub_E5604(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  [*(id *)(a1 + 32) flexedWidth];
  [*(id *)(a1 + 32) flexedWidth];
  [v6 setFlexedWidth:];
  [*(id *)(a1 + 32) flexedHeight];
  [*(id *)(a1 + 32) flexedHeight];
  [v6 setFlexedHeight:];
  [v6 setContainingWidth:*(double *)(a1 + 48)];
  [v6 validateLayout];
  [v6 setComputedOrigin:CGPointZero.x, CGPointZero.y];
  [v6 computedTransformedSize];
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 56) = fmax(*(double *)(*(void *)(*(void *)(a1 + 40) + 8)+ 56), v4);
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + sub_1265C((uint64_t)this + 48) = fmax(*(double *)(*(void *)(*(void *)(a1 + 40) + 8)+ 48), v5);
}

void sub_E56E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E5790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E5848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E5950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E5A60(_Unwind_Exception *exception_object)
{
}

void sub_E5A84(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v6 = [objc_alloc((Class)NSMutableArray) initWithCapacity:1];
  [v5 appendLayoutModelsToArray:v6];
  uint64_t v7 = [v6 firstObject];
  id v8 = [*(id *)(a1 + 32) controller];
  uint64_t v9 = [v8 layoutForModel:v7];

  [*(id *)(*(void *)(a1 + 32) + 104) setObject:v9 forKeyedSubscript:v10];
}

void sub_E5B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E5C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E5CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E5D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E5E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E635C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_E6558(id *a1)
{
  uint64_t v2 = [a1[4] stateNameToLayout];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_E662C;
  v3[3] = &unk_255460;
  id v4 = a1[5];
  id v5 = a1[6];
  [v2 enumerateKeysAndObjectsUsingBlock:v3];
}

void sub_E660C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_E662C(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  id v5 = [*(id *)(a1 + 32) renderModelForLayout:a3 kind:6];
  [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v6];
}

void sub_E66A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E68F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_E698C(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) children];
  id v7 = [v6 indexOfObject:v5];

  id v8 = [*(id *)(a1 + 40) children];
  id v9 = [v8 count];

  if (v7 < v9)
  {
    id v10 = [*(id *)(a1 + 40) children];
    unint64_t v11 = [v10 objectAtIndexedSubscript:v7];

    [v11 setStateName:v12];
  }
}

void sub_E6A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_E6AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_E7F8C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  unint64_t v3 = [a2 type];
  id v4 = [v2 containsObject:v3];

  return v4;
}

void sub_E7FD4(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  id v6 = *(void **)(a1 + 32);
  id v7 = [v12 type];
  LODWORD(v6) = [v6 containsObject:v7];

  if (v6)
  {
    id v8 = [_TUIHostingGeometryReuseKey alloc];
    id v9 = [v12 type];
    id v10 = [v12 identifier];
    [v5 requestedSize];
    unint64_t v11 = -[_TUIHostingGeometryReuseKey initWithType:identifier:requestedSize:](v8, "initWithType:identifier:requestedSize:", v9, v10);

    [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v11];
  }
}

id sub_E9970(uint64_t a1)
{
  return [*(id *)(a1 + 32) _determineSystemAutoPlay];
}

TUI::Symbol::Tab *TUI::Symbol::Tab::Tab(TUI::Symbol::Tab *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + sub_1265C((uint64_t)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 1065353216;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((void *)this + 19) = 0;
  *((_DWORD *)this + 40) = 1065353216;
  *(_OWORD *)((char *)this + 16sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_DWORD *)this + 50) = 1065353216;
  sub_6ACC(__p, "width");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 0;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "height");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 1;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "top");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 2;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "left");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 3;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "bottom");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 4;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "right");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 5;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "min");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 6;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "max");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 7;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "env");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 8;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "deviceClass");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 9;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "widthClass");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 10;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "heightClass");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 11;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "windowSize");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 12;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "viewSize");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 89;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "split");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 13;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "orientation");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 14;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ipad-regular");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 15;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ipad-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 16;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "iphone-regular");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 17;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "iphone-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 18;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "iphone-large-plus");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 19;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "compact");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 20;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "regular");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 21;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 22;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "landscape");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 23;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "portrait");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 24;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "full");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 25;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "wide");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 26;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "half");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 27;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "narrow");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 28;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "style");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 29;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "light");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 30;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "dark");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 31;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "auto");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 32;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "inherit");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 33;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "intrinsic");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 34;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "grid");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 35;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "content");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 36;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "column");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 37;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "r");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 38;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "g");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 39;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "b");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 40;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "a");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 41;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "contentSizeCategory");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 42;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "x-small");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 43;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "small");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 44;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "medium");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 45;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "x-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 46;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "xx-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 47;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "xxx-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 48;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ax-medium");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 66;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ax-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 67;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ax-x-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 68;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ax-xx-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 69;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ax-xxx-large");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 70;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "contentsScale");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 49;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "tintColor");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 50;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "count");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 51;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "index");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 52;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "key");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 53;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "first");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 54;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "last");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 55;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "left-to-right");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 56;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "right-to-left");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 57;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "layoutDirection");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 58;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "color");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 59;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "brightness");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 60;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "translate");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 61;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "scale");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 62;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "rotate");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 63;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "leading");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 64;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "trailing");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 65;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "spring");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 71;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "mass");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 72;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "stiffness");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 73;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "damping");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 74;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "x");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 75;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "y");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 76;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "angle");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 77;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "identity");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 78;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "default");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 79;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "editing");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 80;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "editingHasValue");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 81;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "hasValue");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 82;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "highlighted");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 83;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "disabled");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 84;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "state");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 85;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "displayClass");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 86;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "oled");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 88;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "lcd");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 87;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "ceil");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 90;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "floor");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 91;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "mod");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 92;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "round");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 93;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "v");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 94;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "demoMode");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 95;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "size");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 96;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "insets");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 97;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "length");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 98;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "rgb");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 99;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "rgba");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 100;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "guide");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 101;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "unknown");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 102;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "none");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 103;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "pointSize");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 104;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "lightColor");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 105;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "darkColor");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 106;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "mac");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 107;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "active");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 108;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "inactive");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 109;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "activeAppearance");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 110;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "intrinsic-unclamped");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 111;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_6ACC(__p, "strcat");
  id v5 = __p;
  *((void *)sub_EDAD0((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (long long **)&v5) + 5) = 112;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return this;
}

void sub_EC730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_6A44(v16);
  sub_EDA48(v15 + 128);
  sub_ED9A4((void ***)&__p);
  sub_ED91C(v15 + 64);
  size_t v19 = *v17;
  if (*v17)
  {
    *(void *)(v15 + sub_1265C((uint64_t)this + 48) = v19;
    operator delete(v19);
  }
  sub_ED91C(v15);
  _Unwind_Resume(a1);
}

void TUI::Symbol::Tab::~Tab(TUI::Symbol::Tab *this)
{
  sub_6A44((uint64_t)this + 168);
  sub_EDA48((uint64_t)this + 128);
  unint64_t v3 = (void **)((char *)this + 104);
  sub_ED9A4(&v3);
  sub_ED91C((uint64_t)this + 64);
  uint64_t v2 = (void *)*((void *)this + 5);
  if (v2)
  {
    *((void *)this + 6) = v2;
    operator delete(v2);
  }
  sub_ED91C((uint64_t)this);
}

uint64_t TUI::Symbol::Tab::lookup(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = sub_EE310((void *)(a1 + 64), a2);
  if (v2) {
    return *((unsigned __int16 *)v2 + 20);
  }
  else {
    return 0xFFFFLL;
  }
}

uint64_t TUI::Symbol::Tab::lookup(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8) == *(void *)a2) {
    return 0;
  }
  uint64_t v2 = sub_EE414((void *)(a1 + 128), (unsigned __int16 **)a2);
  if (v2) {
    return *((unsigned __int16 *)v2 + 20);
  }
  else {
    return 0xFFFFLL;
  }
}

uint64_t TUI::Symbol::Tab::lookupEntry(uint64_t a1, char *a2)
{
  unint64_t v28 = 0;
  double v29 = 0;
  unint64_t v30 = 0;
  if (a2[23] >= 0) {
    unint64_t v3 = a2;
  }
  else {
    unint64_t v3 = *(char **)a2;
  }
  char v4 = (void *)(a1 + 64);
  id v5 = strchr(v3, 58);
  if (v5)
  {
    id v6 = v5;
    while (v6[1] == 58)
    {
      sub_ED870(__p, v3, v6 - v3);
      id v7 = sub_EE310(v4, (unsigned __int8 *)__p);
      if (v7) {
        int v8 = *((unsigned __int16 *)v7 + 20);
      }
      else {
        int v8 = 0xFFFF;
      }
      if (v27 < 0) {
        operator delete(__p[0]);
      }
      if (v8 == 0xFFFF) {
        break;
      }
      id v9 = v29;
      if (v29 >= v30)
      {
        unint64_t v11 = (char *)v28;
        uint64_t v12 = v29 - (unsigned char *)v28;
        if (v29 - (unsigned char *)v28 <= -3) {
          sub_4484();
        }
        uint64_t v13 = v12 >> 1;
        if (v30 - (unsigned char *)v28 <= (unint64_t)((v12 >> 1) + 1)) {
          uint64_t v14 = v13 + 1;
        }
        else {
          uint64_t v14 = v30 - (unsigned char *)v28;
        }
        if ((unint64_t)(v30 - (unsigned char *)v28) >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v15 = v14;
        }
        if (v15)
        {
          uint64_t v16 = (char *)sub_6B98((uint64_t)&v30, v15);
          unint64_t v11 = (char *)v28;
          id v9 = v29;
        }
        else
        {
          uint64_t v16 = 0;
        }
        unint64_t v17 = &v16[2 * v13];
        *(_WORD *)unint64_t v17 = v8;
        id v10 = v17 + 2;
        while (v9 != v11)
        {
          __int16 v18 = *((_WORD *)v9 - 1);
          v9 -= 2;
          *((_WORD *)v17 - 1) = v18;
          v17 -= 2;
        }
        unint64_t v28 = v17;
        double v29 = v10;
        unint64_t v30 = &v16[2 * v15];
        if (v11) {
          operator delete(v11);
        }
      }
      else
      {
        *(_WORD *)double v29 = v8;
        id v10 = v9 + 2;
      }
      double v29 = v10;
      unint64_t v3 = v6 + 2;
      id v6 = strchr(v6 + 2, 58);
      if (!v6) {
        goto LABEL_33;
      }
    }
    goto LABEL_36;
  }
  id v10 = 0;
LABEL_33:
  if (v10 == v28)
  {
    int v20 = 0;
  }
  else
  {
    size_t v19 = sub_EE414((void *)(a1 + 128), (unsigned __int16 **)&v28);
    if (!v19 || (int v20 = *((unsigned __int16 *)v19 + 20), v20 == 0xFFFF))
    {
LABEL_36:
      int v21 = 0;
      int v22 = -65536;
      goto LABEL_47;
    }
  }
  sub_6ACC(__p, v3);
  unint64_t v23 = sub_EE310(v4, (unsigned __int8 *)__p);
  if (v23) {
    int v24 = *((unsigned __int16 *)v23 + 20);
  }
  else {
    int v24 = 0xFFFF;
  }
  if (v27 < 0) {
    operator delete(__p[0]);
  }
  if (v24 == 0xFFFF) {
    int v21 = 0;
  }
  else {
    int v21 = v20;
  }
  int v22 = v24 << 16;
LABEL_47:
  if (v28)
  {
    double v29 = (char *)v28;
    operator delete(v28);
  }
  return v21 | v22;
}

void sub_ECE2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

id TUI::Symbol::Tab::string(TUI::Symbol::Tab *this, unsigned int a2)
{
  uint64_t v2 = *((void *)this + 13);
  if (0xAAAAAAAAAAAAAAABLL * ((*((void *)this + 14) - v2) >> 3) <= a2)
  {
    char v4 = 0;
  }
  else
  {
    unint64_t v3 = (uint64_t *)(v2 + 24 * a2);
    if (*((char *)v3 + 23) < 0) {
      unint64_t v3 = (uint64_t *)*v3;
    }
    char v4 = +[NSString stringWithUTF8String:v3];
  }

  return v4;
}

id TUI::Symbol::Tab::string(TUI::Symbol::Tab *this, unint64_t a2)
{
  int v3 = (unsigned __int16)a2;
  unint64_t v4 = a2 >> 16;
  id v5 = objc_opt_new();
  id v6 = (char *)this + 144;
  while (1)
  {
    id v6 = *(char **)v6;
    if (!v6) {
      break;
    }
    if (*((unsigned __int16 *)v6 + 20) == v3)
    {
      for (unsigned __int16 i = (unsigned __int16 *)*((void *)v6 + 2); i != *((unsigned __int16 **)v6 + 3); ++i)
      {
        uint64_t v8 = TUI::Symbol::Tab::string(this, *i);
        id v9 = (void *)v8;
        if (v8) {
          [v5 appendFormat:@"%@::", v8];
        }
      }
      break;
    }
  }
  id v10 = TUI::Symbol::Tab::string(this, (unsigned __int16)v4);
  if (v10) {
    [v5 appendString:v10];
  }
  id v11 = [v5 copy];

  return v11;
}

void sub_ECFF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::string *TUI::Symbol::Tab::std_string@<X0>(std::string *this@<X0>, Entry a2@<0:W1>, std::string *a3@<X8>)
{
  unsigned __int16 var1 = a2.var1;
  unint64_t v4 = this;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  id v6 = this + 6;
  while (1)
  {
    id v6 = (std::string *)v6->__r_.__value_.__r.__words[0];
    if (!v6) {
      break;
    }
    if (LOWORD(v6[1].__r_.__value_.__r.__words[2]) == a2.var0)
    {
      uint64_t v8 = (unsigned __int16 *)v6->__r_.__value_.__r.__words[2];
      for (unsigned __int16 i = (unsigned __int16 *)v6[1].__r_.__value_.__l.__data_; v8 != i; ++v8)
      {
        std::string::size_type size = v4[4].__r_.__value_.__l.__size_;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4[4].__r_.__value_.__r.__words[2] - size) >> 3) > *v8)
        {
          std::string::size_type v10 = size + 24 * *v8;
          int v11 = *(char *)(v10 + 23);
          if (v11 >= 0) {
            uint64_t v12 = (const std::string::value_type *)v10;
          }
          else {
            uint64_t v12 = *(const std::string::value_type **)v10;
          }
          if (v11 >= 0) {
            std::string::size_type v13 = *(unsigned __int8 *)(v10 + 23);
          }
          else {
            std::string::size_type v13 = *(void *)(v10 + 8);
          }
          std::string::append(a3, v12, v13);
          this = std::string::append(a3, "::");
          unsigned __int16 i = (unsigned __int16 *)v6[1].__r_.__value_.__l.__data_;
        }
      }
      break;
    }
  }
  std::string::size_type v14 = v4[4].__r_.__value_.__l.__size_;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4[4].__r_.__value_.__r.__words[2] - v14) >> 3) > var1)
  {
    std::string::size_type v15 = v14 + 24 * var1;
    int v16 = *(char *)(v15 + 23);
    if (v16 >= 0) {
      unint64_t v17 = (const std::string::value_type *)v15;
    }
    else {
      unint64_t v17 = *(const std::string::value_type **)v15;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *(unsigned __int8 *)(v15 + 23);
    }
    else {
      std::string::size_type v18 = *(void *)(v15 + 8);
    }
    return std::string::append(a3, v17, v18);
  }
  return this;
}

void sub_ED150(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Symbol::Tab::loadSymbol(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  uint64_t v5 = a1 + 64;
  id v6 = sub_EE53C((void *)(a1 + 64), a3);
  if (!v6)
  {
    *(void *)buf = a3;
    *((_WORD *)sub_EE640(v5, a3, (uint64_t)&std::piecewise_construct, (long long **)buf) + 20) = a2;
    return 1;
  }
  uint64_t v7 = *((unsigned __int16 *)v6 + 20);
  if (v7 == a2) {
    return 1;
  }
  uint64_t v8 = TUIDefaultLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    if ((a3[23] & 0x80u) == 0) {
      std::string::size_type v10 = a3;
    }
    else {
      std::string::size_type v10 = *(unsigned __int8 **)a3;
    }
    *(_DWORD *)buf = 136446722;
    *(void *)&uint8_t buf[4] = v10;
    __int16 v12 = 2048;
    uint64_t v13 = a2;
    __int16 v14 = 2048;
    uint64_t v15 = v7;
    _os_log_error_impl(&def_141F14, v8, OS_LOG_TYPE_ERROR, "symbol:%{public}s index:%lu already exists with index:%lu", buf, 0x20u);
  }

  return 0;
}

BOOL TUI::Symbol::Tab::endSymbolLoading(TUI::Symbol::Tab *this)
{
  uint64_t v2 = (char *)this + 40;
  sub_ED4A0((uint64_t)this + 40, 0x71uLL, &word_2435C0);
  for (unsigned __int16 i = (uint64_t *)*((void *)this + 2); i; unsigned __int16 i = (uint64_t *)*i)
  {
    if (*((char *)i + 39) < 0) {
      sub_124B4(&__p, (void *)i[2], i[3]);
    }
    else {
      std::string __p = *(std::string *)(i + 2);
    }
    uint64_t v12 = i[5];
    unint64_t v4 = sub_EE53C((void *)this + 8, (unsigned __int8 *)&__p);
    if (v4) {
      *(_WORD *)(*(void *)v2 + 2 * v12) = *((_WORD *)v4 + 20);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v5 = (uint64_t *)*((void *)this + 10);
  if (v5)
  {
    LOWORD(v6) = 0;
    do
    {
      if (*((char *)v5 + 39) < 0) {
        sub_124B4(&__p, (void *)v5[2], v5[3]);
      }
      else {
        std::string __p = *(std::string *)(v5 + 2);
      }
      LOWORD(v12) = *((_WORD *)v5 + 20);
      if ((unsigned __int16)v6 <= (unsigned __int16)v12) {
        uint64_t v6 = (unsigned __int16)v12;
      }
      else {
        uint64_t v6 = (unsigned __int16)v6;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v5 = (uint64_t *)*v5;
    }
    while (v5);
    unint64_t v7 = v6 + 1;
  }
  else
  {
    unint64_t v7 = 1;
  }
  uint64_t v8 = (void *)((char *)this + 104);
  sub_6ACC(&__p, "-");
  sub_ED4D0((uint64_t *)this + 13, v7, (long long *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  for (uint64_t j = (uint64_t *)*((void *)this + 10); j; uint64_t j = (uint64_t *)*j)
  {
    if (*((char *)j + 39) < 0) {
      sub_124B4(&__p, (void *)j[2], j[3]);
    }
    else {
      std::string __p = *(std::string *)(j + 2);
    }
    LOWORD(v12) = *((_WORD *)j + 20);
    std::string::operator=((std::string *)(*v8 + 24 * (unsigned __int16)v12), &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(__int16 *)(*(void *)v2 + 16) != -1;
}

void sub_ED47C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_ED4A0(uint64_t a1, unint64_t a2, _WORD *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 1;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + sub_1265C((uint64_t)this + 8) = *(void *)a1 + 2 * a2;
    }
  }
  else
  {
    sub_EE984((void **)a1, a2 - v3, a3);
  }
}

void sub_ED4D0(uint64_t *a1, unint64_t a2, long long *a3)
{
  uint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  BOOL v6 = a2 >= v5;
  unint64_t v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    sub_EEAA0(a1, v7, a3);
  }
  else if (!v6)
  {
    uint64_t v8 = *a1 + 24 * a2;
    while (v4 != v8)
    {
      if (*(char *)(v4 - 1) < 0) {
        operator delete(*(void **)(v4 - 24));
      }
      v4 -= 24;
    }
    a1[1] = v8;
  }
}

void TUI::Symbol::Tab::beginNSLoading(TUI::Symbol::Tab *this)
{
  __int16 v2 = *(_WORD *)(*((void *)this + 5) + 16);
  unint64_t v3 = (char *)this + 128;
  std::string __p = 0;
  uint64_t v13 = 0;
  __int16 v14 = 0;
  p_p = &__p;
  *((_WORD *)sub_EEED8((uint64_t)this + 128, (unsigned __int16 **)&__p, (uint64_t)&std::piecewise_construct, (uint64_t *)&p_p)+ 20) = 0;
  if (__p)
  {
    uint64_t v13 = __p;
    operator delete(__p);
  }
  uint64_t v4 = operator new(2uLL);
  std::string __p = v4;
  *uint64_t v4 = v2;
  uint64_t v13 = v4 + 1;
  __int16 v14 = v4 + 1;
  p_p = &__p;
  *((_WORD *)sub_EEED8((uint64_t)v3, (unsigned __int16 **)&__p, (uint64_t)&std::piecewise_construct, (uint64_t *)&p_p) + 20) = 1;
  if (__p)
  {
    uint64_t v13 = __p;
    operator delete(__p);
  }
  unint64_t v5 = (char *)this + 168;
  std::string __p = &word_2435C2;
  BOOL v6 = sub_EF228((uint64_t)v5, &word_2435C2, (uint64_t)&std::piecewise_construct, (_WORD **)&__p);
  uint64_t v8 = v6 + 3;
  unint64_t v7 = (void *)v6[3];
  if (v7)
  {
    void v6[4] = v7;
    operator delete(v7);
    void *v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
  }
  void *v8 = 0;
  v8[1] = 0;
  v8[2] = 0;
  id v9 = operator new(2uLL);
  *id v9 = v2;
  std::string __p = word_2435C4;
  std::string::size_type v10 = sub_EF228((uint64_t)v5, word_2435C4, (uint64_t)&std::piecewise_construct, (_WORD **)&__p);
  int v11 = (void *)v10[3];
  if (v11)
  {
    void v10[4] = v11;
    operator delete(v11);
    void v10[3] = 0;
    void v10[4] = 0;
    void v10[5] = 0;
  }
  void v10[3] = v9;
  void v10[4] = v9 + 1;
  void v10[5] = v9 + 1;
}

void sub_ED6EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  operator delete(v11);
  _Unwind_Resume(a1);
}

uint64_t TUI::Symbol::Tab::loadNS(uint64_t a1, unsigned __int16 a2, uint64_t a3)
{
  unsigned __int16 v18 = a2;
  uint64_t v5 = a1 + 128;
  BOOL v6 = sub_EF4E0((void *)(a1 + 128), (unsigned __int16 **)a3);
  unint64_t v7 = (void *)(a1 + 168);
  uint64_t v8 = sub_12E50(v7, &v18);
  if (!v6)
  {
    if (!v8)
    {
      unsigned __int16 v16 = v18;
      size_t v19 = (unsigned __int16 *)a3;
      *((_WORD *)sub_EF608(v5, (unsigned __int16 **)a3, (uint64_t)&std::piecewise_construct, (uint64_t *)&v19) + 20) = v16;
      size_t v19 = &v18;
      unint64_t v17 = (char *)(sub_EF228((uint64_t)v7, &v18, (uint64_t)&std::piecewise_construct, &v19) + 3);
      if (v17 != (char *)a3) {
        sub_EF9C8(v17, *(char **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 1);
      }
      return 1;
    }
    BOOL v9 = 1;
LABEL_6:
    int v11 = v8 + 3;
    std::string::size_type v10 = v8[3];
    size_t v12 = (char *)v11[1] - (char *)v10;
    if (v12 != *(void *)(a3 + 8) - *(void *)a3) {
      goto LABEL_11;
    }
    if (memcmp(v10, *(const void **)a3, v12) || v9) {
      goto LABEL_11;
    }
    return 1;
  }
  BOOL v9 = *((unsigned __int16 *)v6 + 20) != v18;
  if (v8) {
    goto LABEL_6;
  }
LABEL_11:
  __int16 v14 = TUIDefaultLog();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
    sub_1925F4(&v18, v14);
  }

  return 0;
}

uint64_t TUI::Symbol::Tab::endNSLoading(TUI::Symbol::Tab *this)
{
  return 1;
}

void *sub_ED870(void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_6B80();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    BOOL v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    BOOL v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

uint64_t sub_ED91C(uint64_t a1)
{
  sub_ED958(a1, *(void ***)(a1 + 16));
  __int16 v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_ED958(int a1, void **__p)
{
  if (__p)
  {
    __int16 v2 = __p;
    do
    {
      unint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      __int16 v2 = v3;
    }
    while (v3);
  }
}

void sub_ED9A4(void ***a1)
{
  __int16 v2 = *a1;
  if (*v2)
  {
    sub_ED9F8((uint64_t *)v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_ED9F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t sub_EDA48(uint64_t a1)
{
  sub_EDA84(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_EDA84(int a1, void *__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      unint64_t v3 = (void *)*v2;
      uint64_t v4 = (void *)v2[2];
      if (v4)
      {
        v2[3] = v4;
        operator delete(v4);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_EDAD0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  size_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_EDD5C(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    __int16 v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_EE208(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  unint64_t v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  unsigned __int16 v18 = *a4;
  long long v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)unsigned __int16 v18 = 0;
  *((void *)i + 5) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_3ED8(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  char v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    *char v27 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    char v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_EDD40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_EE2B0(v11, v10);
  _Unwind_Resume(a1);
}

unint64_t sub_EDD5C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_EDD9C((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_EDD9C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      BOOL v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_EE148(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_EE09C(a2, a3);
  }
  else
  {
    return sub_EDFA4(a2, a3);
  }
}

unint64_t sub_EDFA4(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_EE09C(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_EE148(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_EE208(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_EE2B0(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

unsigned __int8 *sub_EE310(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_EDD5C((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  int v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  int v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v6 == v13)
      {
        if (sub_EE208(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      int v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void *sub_EE414(void *a1, unsigned __int16 **a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (*a2 == v2)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    int8x8_t v5 = *a2;
    do
    {
      unsigned int v6 = *v5++;
      unint64_t v4 = v6 | (4 * v4);
    }
    while (v5 != v2);
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v10 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v4;
  }
  int v11 = *(void **)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)*v11;
  if (*v11)
  {
    size_t v13 = (char *)v2 - (char *)v3;
    do
    {
      unint64_t v14 = v12[1];
      if (v4 == v14)
      {
        uint64_t v15 = (const void *)v12[2];
        if (v12[3] - (void)v15 == v13 && !memcmp(v15, v3, v13)) {
          return v12;
        }
      }
      else
      {
        if (v9 > 1)
        {
          if (v14 >= *(void *)&v7) {
            v14 %= *(void *)&v7;
          }
        }
        else
        {
          v14 &= *(void *)&v7 - 1;
        }
        if (v14 != v10) {
          return 0;
        }
      }
      uint64_t v12 = (void *)*v12;
    }
    while (v12);
  }
  return v12;
}

unsigned __int8 *sub_EE53C(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_EDD5C((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  int v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (sub_EE208(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      int v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

unsigned __int8 *sub_EE640(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_EDD5C(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    unint64_t v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_EE208(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_EE8D8(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_3ED8(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    void *v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_EE8B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_EE2B0((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_EE8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + sub_1265C((uint64_t)this + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_124B4(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }
  *((_WORD *)v8 + 20) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_EE968(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_EE2B0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_EE984(void **a1, unint64_t a2, _WORD *a3)
{
  unint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  uint64_t v7 = v8;
  unint64_t v9 = *(_WORD **)(v6 - 8);
  if (a2 <= (v8 - (unsigned char *)v9) >> 1)
  {
    if (a2)
    {
      uint64_t v16 = 2 * a2;
      float v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 2;
      }
      while (v16);
      unint64_t v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    uint64_t v10 = (char *)v9 - (unsigned char *)*a1;
    uint64_t v11 = a2 + (v10 >> 1);
    if (v11 < 0) {
      sub_4484();
    }
    uint64_t v12 = v10 >> 1;
    unint64_t v13 = v7 - (unsigned char *)*a1;
    if (v13 > v11) {
      uint64_t v11 = v13;
    }
    if (v13 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v14 = v11;
    }
    if (v14) {
      uint64_t v15 = (char *)sub_6B98(v6, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    float v18 = &v15[2 * v12];
    BOOL v19 = &v18[2 * a2];
    uint64_t v20 = 2 * a2;
    unint64_t v21 = v18;
    do
    {
      *(_WORD *)unint64_t v21 = *a3;
      v21 += 2;
      v20 -= 2;
    }
    while (v20);
    size_t v22 = &v15[2 * v14];
    uint64_t v23 = (char *)*a1;
    for (uint64_t i = (char *)a1[1]; i != v23; i -= 2)
    {
      __int16 v25 = *((_WORD *)i - 1);
      *((_WORD *)v18 - 1) = v25;
      v18 -= 2;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
    {
      operator delete(v23);
    }
  }
}

void *sub_EEAA0(uint64_t *a1, unint64_t a2, long long *a3)
{
  uint64_t v8 = a1[2];
  uint64_t result = a1 + 2;
  uint64_t v7 = v8;
  uint64_t v9 = *(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - v9) >> 3) >= a2)
  {
    if (a2)
    {
      uint64_t v15 = v9 + 24 * a2;
      uint64_t v16 = 24 * a2;
      do
      {
        if (*((char *)a3 + 23) < 0)
        {
          uint64_t result = sub_124B4((unsigned char *)v9, *(void **)a3, *((void *)a3 + 1));
        }
        else
        {
          long long v17 = *a3;
          *(void *)(v9 + 16) = *((void *)a3 + 2);
          *(_OWORD *)uint64_t v9 = v17;
        }
        v9 += 24;
        v16 -= 24;
      }
      while (v16);
      uint64_t v9 = v15;
    }
    a1[1] = v9;
  }
  else
  {
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v9 - *a1) >> 3);
    unint64_t v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_4484();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v11;
    }
    size_t v22 = result;
    if (v13) {
      uint64_t v14 = (char *)sub_12768((uint64_t)result, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    float v18 = v14;
    BOOL v19 = &v14[24 * v10];
    uint64_t v20 = v19;
    unint64_t v21 = &v14[24 * v13];
    sub_EEC20(&v18, a2, a3);
    sub_EECB0(a1, &v18);
    return (void *)sub_EEE48((uint64_t)&v18);
  }
  return result;
}

void sub_EEC00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_EEE48((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_EEC20(void *result, uint64_t a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  if (a2)
  {
    uint64_t v6 = v4 + 24 * a2;
    uint64_t v7 = 24 * a2;
    do
    {
      if (*((char *)a3 + 23) < 0)
      {
        uint64_t result = sub_124B4((unsigned char *)v4, *(void **)a3, *((void *)a3 + 1));
      }
      else
      {
        long long v8 = *a3;
        *(void *)(v4 + 16) = *((void *)a3 + 2);
        *(_OWORD *)uint64_t v4 = v8;
      }
      v4 += 24;
      v7 -= 24;
    }
    while (v7);
    uint64_t v4 = v6;
  }
  int v3[2] = v4;
  return result;
}

void sub_EECA8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_EECB0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_EED28((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_EED28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  void v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - sub_1265C((uint64_t)this + 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - sub_1265C((uint64_t)this + 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_EEDC8((uint64_t)v12);
  return a6;
}

uint64_t sub_EEDC8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_EEE00(a1);
  }
  return a1;
}

void sub_EEE00(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_EEE48(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_EEE80(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void *sub_EEED8(uint64_t a1, unsigned __int16 **a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 == v7)
  {
    unint64_t v9 = 0;
  }
  else
  {
    unint64_t v9 = 0;
    long long v10 = *a2;
    do
    {
      unsigned int v11 = *v10++;
      unint64_t v9 = v11 | (4 * v9);
    }
    while (v10 != v7);
  }
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v12) {
        unint64_t v4 = v9 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v9;
    }
    long long v15 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      uint64_t v16 = *v15;
      if (*v15)
      {
        size_t v17 = (char *)v7 - (char *)v8;
        do
        {
          unint64_t v18 = v16[1];
          if (v18 == v9)
          {
            BOOL v19 = (const void *)v16[2];
            if (v16[3] - (void)v19 == v17 && !memcmp(v19, v8, v17)) {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v18 >= v12) {
                v18 %= v12;
              }
            }
            else
            {
              v18 &= v12 - 1;
            }
            if (v18 != v4) {
              break;
            }
          }
          uint64_t v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
  uint64_t v20 = (void *)(a1 + 16);
  uint64_t v16 = operator new(0x30uLL);
  void *v16 = 0;
  v16[1] = v9;
  uint64_t v21 = *a4;
  v16[3] = 0;
  void v16[4] = 0;
  v16[2] = 0;
  *((_OWORD *)v16 + 1) = *(_OWORD *)v21;
  void v16[4] = *(void *)(v21 + 16);
  *(void *)(v21 + sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(void *)uint64_t v21 = 0;
  *((_WORD *)v16 + 20) = 0;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v12 || (float)(v23 * (float)v12) < v22)
  {
    BOOL v24 = 1;
    if (v12 >= 3) {
      BOOL v24 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v12);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    sub_3ED8(a1, v27);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v9 >= v12) {
        unint64_t v4 = v9 % v12;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v9;
    }
  }
  uint64_t v28 = *(void *)a1;
  uint64_t v29 = *(void **)(*(void *)a1 + 8 * v4);
  if (v29)
  {
    void *v16 = *v29;
LABEL_45:
    *uint64_t v29 = v16;
    goto LABEL_46;
  }
  void *v16 = *v20;
  void *v20 = v16;
  *(void *)(v28 + 8 * v4) = v20;
  if (*v16)
  {
    unint64_t v30 = *(void *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v30 >= v12) {
        v30 %= v12;
      }
    }
    else
    {
      v30 &= v12 - 1;
    }
    uint64_t v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_45;
  }
LABEL_46:
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_EF16C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_EF188(v11, v10);
  _Unwind_Resume(a1);
}

void sub_EF188(uint64_t a1, void *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = (void *)__p[2];
    if (v3)
    {
      __p[3] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

char *sub_EF1E8(void *a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_4484();
  }
  uint64_t result = (char *)sub_6B98((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *sub_EF228(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    long long v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint8x8_t v13 = (void *)(a1 + 16);
  uint64_t v11 = operator new(0x30uLL);
  *uint64_t v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + sub_1265C((uint64_t)this + 8) = **a4;
  id v11[4] = 0;
  v11[5] = 0;
  v11[3] = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_3ED8(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *uint64_t v11 = *v21;
LABEL_38:
    void *v21 = v11;
    goto LABEL_39;
  }
  *uint64_t v11 = *v13;
  *uint8x8_t v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    unint64_t v22 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_EF464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_EF480(v11, v10);
  _Unwind_Resume(a1);
}

void sub_EF480(uint64_t a1, void *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = (void *)__p[3];
    if (v3)
    {
      __p[4] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *sub_EF4E0(void *a1, unsigned __int16 **a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (*a2 == v2)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v5 = *a2;
    do
    {
      unsigned int v6 = *v5++;
      unint64_t v4 = v6 | (4 * v4);
    }
    while (v5 != v2);
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v10 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v4;
  }
  uint64_t v11 = *(void **)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  unint64_t v12 = (void *)*v11;
  if (*v11)
  {
    size_t v13 = (char *)v2 - (char *)v3;
    do
    {
      unint64_t v14 = v12[1];
      if (v14 == v4)
      {
        float v15 = (const void *)v12[2];
        if (v12[3] - (void)v15 == v13 && !memcmp(v15, v3, v13)) {
          return v12;
        }
      }
      else
      {
        if (v9 > 1)
        {
          if (v14 >= *(void *)&v7) {
            v14 %= *(void *)&v7;
          }
        }
        else
        {
          v14 &= *(void *)&v7 - 1;
        }
        if (v14 != v10) {
          return 0;
        }
      }
      unint64_t v12 = (void *)*v12;
    }
    while (v12);
  }
  return v12;
}

void *sub_EF608(uint64_t a1, unsigned __int16 **a2, uint64_t a3, uint64_t *a4)
{
  int8x8_t v7 = *a2;
  unsigned int v6 = a2[1];
  if (*a2 == v6)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = *a2;
    do
    {
      unsigned int v10 = *v9++;
      unint64_t v8 = v10 | (4 * v8);
    }
    while (v9 != v6);
  }
  unint64_t v11 = *(void *)(a1 + 8);
  if (!v11) {
    goto LABEL_26;
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  unint64_t v13 = v12.u32[0];
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v4 = v8;
    if (v8 >= v11) {
      unint64_t v4 = v8 % v11;
    }
  }
  else
  {
    unint64_t v4 = (v11 - 1) & v8;
  }
  unint64_t v14 = *(void **)(*(void *)a1 + 8 * v4);
  if (!v14) {
    goto LABEL_26;
  }
  float v15 = (void *)*v14;
  if (!*v14) {
    goto LABEL_26;
  }
  uint64_t v28 = a4;
  size_t v16 = (char *)v6 - (char *)v7;
  do
  {
    unint64_t v17 = v15[1];
    if (v17 == v8)
    {
      unint64_t v18 = (const void *)v15[2];
      if (v15[3] - (void)v18 == v16 && !memcmp(v18, v7, v16)) {
        return v15;
      }
      goto LABEL_24;
    }
    if (v13 > 1)
    {
      if (v17 >= v11) {
        v17 %= v11;
      }
    }
    else
    {
      v17 &= v11 - 1;
    }
    if (v17 != v4) {
      break;
    }
LABEL_24:
    float v15 = (void *)*v15;
  }
  while (v15);
  a4 = v28;
LABEL_26:
  sub_EF8AC(a1, v8, a4, (uint64_t)&v29);
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    sub_3ED8(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11) {
        unint64_t v4 = v8 % v11;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v8;
    }
  }
  unint64_t v25 = *(void **)(*(void *)a1 + 8 * v4);
  if (v25)
  {
    *uint64_t v29 = *v25;
    *unint64_t v25 = v29;
  }
  else
  {
    *uint64_t v29 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v29;
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*v29)
    {
      unint64_t v26 = *(void *)(*v29 + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v26 >= v11) {
          v26 %= v11;
        }
      }
      else
      {
        v26 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v26) = v29;
    }
  }
  float v15 = v29;
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_EF888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    sub_EF188((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_EF8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x30uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + sub_1265C((uint64_t)this + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  void *v8 = 0;
  v8[1] = a2;
  uint64_t v9 = *a3;
  void v8[3] = 0;
  v8[4] = 0;
  v8[2] = 0;
  uint64_t result = sub_EF94C(v8 + 2, *(const void **)v9, *(void *)(v9 + 8), (uint64_t)(*(void *)(v9 + 8) - *(void *)v9) >> 1);
  *((_WORD *)v8 + 20) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_EF930(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_EF188(v3, v2);
  _Unwind_Resume(a1);
}

void *sub_EF94C(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    unsigned int v6 = result;
    uint64_t result = sub_EF1E8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_EF9AC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + sub_1265C((uint64_t)this + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_EF9C8(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (uint64_t)(v8 - *(void *)result) >> 1)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      unint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0) {
      sub_4484();
    }
    if (v8 <= a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v8 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t result = sub_EF1E8(v7, v11);
    unint64_t v13 = (char *)v7[1];
    uint8x8_t v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_17:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unint64_t v18 = v9;
      float v19 = __src;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  uint8x8_t v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 1;
  if (v15 >= a4) {
    goto LABEL_17;
  }
  size_t v16 = &__src[2 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unint64_t v18 = v9;
    float v19 = v16;
LABEL_19:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_20:
  *uint8x8_t v12 = &v9[v17];
  return result;
}

void sub_EFACC()
{
  TUI::Symbol::Entry::invalid = -65536;
}

void sub_F00A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained textView];
  [v2 setText:v1];
}

void sub_F2D58(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v2 = +[NSFileManager defaultManager];
  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 48) URLByAppendingPathComponent:@"fonts"];
  unint64_t v4 = [v2 enumeratorAtURL:v3 includingPropertiesForKeys:0 options:5 errorHandler:0];

  id v5 = [v4 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v5)
  {
    id v7 = v5;
    uint64_t v8 = *(void *)v19;
    *(void *)&long long v6 = 138543618;
    long long v16 = v6;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v4);
        }
        CFURLRef v10 = *(const __CFURL **)(*((void *)&v18 + 1) + 8 * i);
        if ((objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "containsObject:", v10, v16) & 1) == 0)
        {
          CFErrorRef error = 0;
          CTFontManagerRegisterFontsForURL(v10, kCTFontManagerScopeProcess, &error);
          uint64_t v11 = error;
          uint8x8_t v12 = v11;
          if (v11)
          {
            unint64_t v13 = [(__CFError *)v11 domain];
            if ([v13 isEqualToString:kCTFontManagerErrorDomain])
            {
              unint64_t v14 = (char *)[(__CFError *)v12 code];

              if (v14 == &stru_68.sectname[1]) {
                goto LABEL_17;
              }
            }
            else
            {
            }
            unint64_t v15 = TUIDefaultLog();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = v16;
              CFURLRef v23 = v10;
              __int16 v24 = 2112;
              CFErrorRef v25 = error;
              _os_log_error_impl(&def_141F14, v15, OS_LOG_TYPE_ERROR, "failed to register font at URL: %{public}@ %@", buf, 0x16u);
            }
          }
          else
          {
            [*(id *)(*(void *)(a1 + 32) + 16) addObject:v10];
            unint64_t v15 = TUIDefaultLog();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              CFURLRef v23 = v10;
              _os_log_impl(&def_141F14, v15, OS_LOG_TYPE_INFO, "registered font at URL:%@", buf, 0xCu);
            }
          }

LABEL_17:
          continue;
        }
      }
      id v7 = [v4 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }
    while (v7);
  }
}

id sub_F3074(uint64_t a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v1 = *(id *)(*(void *)(a1 + 32) + 16);
  id v2 = [v1 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v4) {
          objc_enumerationMutation(v1);
        }
        CFURLRef v6 = *(const __CFURL **)(*((void *)&v13 + 1) + 8 * i);
        CFErrorRef error = 0;
        CTFontManagerUnregisterFontsForURL(v6, kCTFontManagerScopeProcess, &error);
        CFErrorRef v7 = error;
        uint64_t v8 = TUIDefaultLog();
        uint64_t v9 = v8;
        if (v7)
        {
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            CFURLRef v18 = v6;
            __int16 v19 = 2112;
            CFErrorRef v20 = error;
            _os_log_error_impl(&def_141F14, v9, OS_LOG_TYPE_ERROR, "failed to unregister font at URL: %{public}@ %@", buf, 0x16u);
          }
        }
        else if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          CFURLRef v18 = v6;
          _os_log_impl(&def_141F14, v9, OS_LOG_TYPE_INFO, "unregistered font at URL:%@", buf, 0xCu);
        }
      }
      id v3 = [v1 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v3);
  }

  return [*(id *)(*(void *)(a1 + 32) + 16) removeAllObjects];
}

void sub_F3818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_F3AB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_F4200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_F4324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_F4880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_F4AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_F4AF4(uint64_t a1, void *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    uint8x8_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x28uLL);
  void *i = 0;
  i[1] = v9;
  uint64_t v15 = **a4;
  i[3] = 0;
  i[4] = 0;
  i[2] = v15;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_3ED8(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v22 = *(void *)a1;
  CFURLRef v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    void *i = *v23;
LABEL_38:
    void *v23 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v22 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v24 = *(void *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v24 >= v10) {
        v24 %= v10;
      }
    }
    else
    {
      v24 &= v10 - 1;
    }
    CFURLRef v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_F4D3C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_F4F04(id a1)
{
  id v1 = (void *)qword_2DF6B8;
  qword_2DF6B8 = (uint64_t)&off_2686B8;
}

void sub_F601C(id a1)
{
  CFStringRef v4 = @"name";
  id v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF6C8;
  qword_2DF6C8 = v2;
}

void sub_F62E4(id a1)
{
  CFStringRef v4 = @"run-list";
  id v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF6D8;
  qword_2DF6D8 = v2;
}

void sub_F6610(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSizeAndIntrinsic];
  id v2 = [v1 mutableCopy];

  v6[0] = @"fill-mode";
  v6[1] = @"mask-color";
  void v6[2] = @"resource-load";
  void v6[3] = @"filter";
  void v6[4] = @"continuous-corners";
  void v6[5] = @"corner-radius";
  void v6[6] = @"opacity";
  void v6[7] = @"rasterize";
  void v6[8] = @"resource-kind";
  void v6[9] = @"resource-instance";
  v6[10] = @"resource-options";
  void v6[11] = @"fallback-color";
  v6[12] = @"hflip-for-rtl";
  void v6[13] = @"crossfades-contents";
  v6[14] = @"blend-mode";
  id v3 = +[NSArray arrayWithObjects:v6 count:15];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  id v5 = (void *)qword_2DF6E8;
  qword_2DF6E8 = (uint64_t)v4;
}

uint64_t sub_F9444(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_F9454(uint64_t a1)
{
}

void sub_F945C(uint64_t a1)
{
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 40));
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  id v3 = (id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);

  objc_storeStrong(v3, v2);
}

void sub_F9544(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 16));

  if (v2 == WeakRetained)
  {
    id v4 = (id *)(*(void *)(a1 + 40) + 16);
    objc_storeWeak(v4, 0);
  }
}

void sub_F975C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_F9864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::~Context(TUI::Evaluation::Context *this)
{
  id v2 = (TUI::Instruction::Evaluation *)*((void *)this + 1);
  if (v2)
  {
    TUI::Instruction::Evaluation::~Evaluation(v2);
    operator delete();
  }
  if (*(void *)this) {
    (*(void (**)(void))(**(void **)this + 64))(*(void *)this);
  }
  uint64_t v3 = *((void *)this + 96);
  if (v3)
  {
    sub_3BD4(v3 + 88);
    sub_1265C(v3 + 48);
    sub_1265C(v3 + 8);
    operator delete();
  }

  id v4 = (void *)*((void *)this + 82);
  if (v4)
  {
    *((void *)this + 83) = v4;
    operator delete(v4);
  }
  sub_125DC((uint64_t)this + 616);

  sub_1265C((uint64_t)this + 496);
  sub_1265C((uint64_t)this + 456);
  sub_354AC((uint64_t)this + 352);
  sub_1265C((uint64_t)this + 312);

  TUI::Evaluation::DynamicCache::~DynamicCache((TUI::Evaluation::Context *)((char *)this + 64));
  id v5 = (std::__shared_weak_count *)*((void *)this + 7);
  if (v5) {
    sub_123E4(v5);
  }
}

void TUI::Evaluation::Context::Context(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a3;
  id v12 = a4;
  a5;
  a6;
  *(void *)(a1 + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(a1 + 56) = 0;
  TUI::Evaluation::DynamicCache::DynamicCache((TUI::Evaluation::DynamicCache *)(a1 + 64));
  *(_OWORD *)(a1 + 2sub_1265C((uint64_t)this + 48) = 0u;
  *(void *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 32sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 344) = 1065353216;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 36sub_1265C((uint64_t)this + 8) = 0u;
  *(_DWORD *)(a1 + 384) = 1065353216;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 40sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_DWORD *)(a1 + 48sub_1265C((uint64_t)this + 8) = 1065353216;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_DWORD *)(a1 + 52sub_1265C((uint64_t)this + 8) = 1065353216;
  *(_OWORD *)(a1 + 536) = 0u;
  *(void *)(a1 + 560) = a2;
  id v13 = v11;
  *(void *)(a1 + 56sub_1265C((uint64_t)this + 8) = v13;
  *(void *)(a1 + 576) = [v13 packageBuffer];
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 600) = v12;
  *(_OWORD *)(a1 + 60sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(void *)(a1 + 640) = 0;
  *(_DWORD *)(a1 + 6sub_1265C((uint64_t)this + 48) = 1065353216;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(void *)(a1 + 68sub_1265C((uint64_t)this + 8) = 0;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 72sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(void *)(a1 + 760) = 0;
  operator new();
}

void sub_F9E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, TUI::Evaluation::DynamicCache *a10, void *a11, void *a12, void *a13, void *a14)
{
  unint64_t v20 = *(void **)(v14 + 656);
  if (v20)
  {
    *(void *)(v14 + 664) = v20;
    operator delete(v20);
  }
  sub_125DC(v14 + 616);

  sub_1265C(v16 + 248);
  sub_1265C(v16 + 208);
  sub_354AC(v17);
  sub_1265C(v14 + 312);

  TUI::Evaluation::DynamicCache::~DynamicCache(a10);
  unint64_t v19 = *(std::__shared_weak_count **)(v14 + 56);
  if (v19) {
    sub_123E4(v19);
  }

  _Unwind_Resume(a1);
}

void sub_FA010(uint64_t a1)
{
  *(void *)&long long v2 = a1;
  DWORD2(v2) = 0;
  sub_107508((uint64_t)&v2, 0x100uLL);
  if (*(void *)(a1 + 88))
  {
    long long v2 = 0u;
    long long v3 = 0u;
    int v4 = 1065353216;
    sub_8CDDC(a1 + 64, (uint64_t *)&v2);
    sub_1265C((uint64_t)&v2);
  }
  *(void *)&long long v2 = a1 + 32;
  DWORD2(v2) = 0;
  sub_107508((uint64_t)&v2, 0x100uLL);
  if (*(void *)(a1 + 128))
  {
    long long v2 = 0u;
    long long v3 = 0u;
    int v4 = 1065353216;
    sub_1075B8(a1 + 104, (uint64_t *)&v2);
    sub_354AC((uint64_t)&v2);
  }
}

void TUI::Evaluation::Context::lookupConstant(TUI::Evaluation::Context *this@<X0>, unsigned int a2@<0:W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (unsigned __int16)a2;
  [*((id *)this + 67) recordEvent:14];
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + sub_1265C((uint64_t)this + 8) = 0;
  if (v6 == 1 || [*((id *)this + 73) hasExtendedNS:v6])
  {
    uint64_t v7 = *((void *)this + 70);
    *((void *)this + 74) |= sub_FA26C(a2, v7);
    unint64_t v8 = (void *)*((void *)this + 73);
    if (v8)
    {
      [v8 lookupName:a2 symtab:v7];
      *(_DWORD *)a3 = v15;
      *(void *)(a3 + sub_1265C((uint64_t)this + 8) = v16;
      *(void *)(a3 + 16) = v17;
    }
  }
  else
  {
    [*((id *)this + 67) recordEvent:14];
    uint64_t v9 = (*(uint64_t (**)(void, void))(**(void **)this + 8))(*(void *)this, a2);
    if (v10 == -1)
    {
      TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), a2);
      id v14 = (id)objc_claimAutoreleasedReturnValue();
      TUI::Evaluation::Context::reportError((uint64_t)this, 1007, v14);
    }
    else
    {
      uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 32))(v9);
      *(_DWORD *)a3 = *(_DWORD *)v11;
      id v12 = *(id *)(v11 + 8);
      uint64_t v13 = *(void *)(v11 + 16);
      *(void *)(a3 + sub_1265C((uint64_t)this + 8) = v12;
      *(void *)(a3 + 16) = v13;
    }
  }
}

void sub_FA258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

uint64_t sub_FA26C(int a1, uint64_t a2)
{
  if ((unsigned __int16)a1 != 1) {
    return 32;
  }
  long long v2 = *(unsigned __int16 **)(a2 + 40);
  unint64_t v3 = *(void *)(a2 + 48) - (void)v2;
  int v4 = v3 < 0x13 ? 0xFFFF : v2[9];
  if (v4 == HIWORD(a1)) {
    return 32;
  }
  if (v3 < 0x15) {
    int v6 = 0xFFFF;
  }
  else {
    int v6 = v2[10];
  }
  if (v6 == HIWORD(a1)) {
    return 4;
  }
  int v7 = v3 < 0x17 ? 0xFFFF : v2[11];
  if (v7 == HIWORD(a1)) {
    return 4;
  }
  if (v3 < 0x1B) {
    int v8 = 0xFFFF;
  }
  else {
    int v8 = v2[13];
  }
  if (v8 == HIWORD(a1)) {
    return 8;
  }
  if (v3 < 0x19) {
    int v9 = 0xFFFF;
  }
  else {
    int v9 = v2[12];
  }
  if (v9 == HIWORD(a1)) {
    return 1;
  }
  int v10 = v3 < 0xB3 ? 0xFFFF : v2[89];
  if (v10 == HIWORD(a1)) {
    return 1;
  }
  if (v3 < 0x1D) {
    int v11 = 0xFFFF;
  }
  else {
    int v11 = v2[14];
  }
  if (v11 == HIWORD(a1)) {
    return 8;
  }
  if (v3 < 0x3B) {
    int v12 = 0xFFFF;
  }
  else {
    int v12 = v2[29];
  }
  if (v12 == HIWORD(a1)) {
    return 16;
  }
  if (v3 < 0xBF) {
    int v13 = 0xFFFF;
  }
  else {
    int v13 = v2[95];
  }
  if (v13 == HIWORD(a1)) {
    return 32;
  }
  int v14 = v3 < 0x55 ? 0xFFFF : v2[42];
  if (v14 == HIWORD(a1)) {
    return 32;
  }
  int v15 = v3 < 0x63 ? 0xFFFF : v2[49];
  if (v15 == HIWORD(a1)) {
    return 32;
  }
  if (v3 < 0x65) {
    int v16 = 0xFFFF;
  }
  else {
    int v16 = v2[50];
  }
  if (v16 == HIWORD(a1)) {
    return 16;
  }
  int v17 = v3 < 0x75 ? 0xFFFF : v2[58];
  if (v17 == HIWORD(a1)) {
    return 32;
  }
  int v18 = v3 < 0xAD ? 0xFFFF : v2[86];
  if (v18 == HIWORD(a1)) {
    return 32;
  }
  if (v3 < 0xDD) {
    int v19 = 0xFFFF;
  }
  else {
    int v19 = v2[110];
  }
  if (v19 == HIWORD(a1)) {
    return 16;
  }
  else {
    return 0;
  }
}

void TUI::Evaluation::Context::reportError(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (*(unsigned char *)(a1 + 552))
  {
    int v6 = objc_opt_new();
    int v7 = v6;
    if (v5) {
      [v6 setObject:v5 forKeyedSubscript:@"TUIErrorInfoKey"];
    }
    if (*(void *)(a1 + 664) != *(void *)(a1 + 656))
    {
      int v8 = *(const TUI::Package::Buffer **)(a1 + 576);
      id v9 = [objc_alloc((Class)NSMutableArray) initWithCapacity:(uint64_t)(*(void *)(a1 + 664) - *(void *)(a1 + 656)) >> 2];
      int v10 = *(unsigned int **)(a1 + 656);
      int v11 = *(unsigned int **)(a1 + 664);
      while (v10 != v11)
      {
        unint64_t v12 = *v10;
        if (*((void *)v8 + 17) > v12 >> 12
          && (int v13 = (unsigned __int16 *)(*((void *)v8 + 16) + 8 * (v12 >> 12))) != 0)
        {
          uint64_t v14 = *v13;
          unint64_t v15 = (unint64_t)*((unsigned int *)v13 + 1) << 32;
          uint64_t v16 = v14 << 16;
        }
        else
        {
          unint64_t v15 = 0xFFFFFFFF00000000;
          uint64_t v16 = 4294901760;
        }
        unint64_t v24 = v15 | v16 | v12 & 0xFFF;
        int v17 = TUI::Package::Location::Entry::description((TUI::Package::Location::Entry *)&v24, v8);
        [v9 addObject:v17];

        ++v10;
      }
      id v18 = [v9 copy];

      [v7 setObject:v18 forKeyedSubscript:@"TUIErrorLocationsKey"];
    }
    int v19 = *(void **)(a1 + 680);
    if (!v19)
    {
      uint64_t v20 = objc_opt_new();
      size_t v21 = *(void **)(a1 + 680);
      *(void *)(a1 + 680) = v20;

      int v19 = *(void **)(a1 + 680);
    }
    if ([v7 count]) {
      uint64_t v22 = v7;
    }
    else {
      uint64_t v22 = 0;
    }
    CFURLRef v23 = +[NSError errorWithDomain:@"TUIErrorDomain" code:a2 userInfo:v22];
    [v19 addObject:v23];
  }
}

void sub_FA648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::lookupFunction(TUI::Evaluation::Context *this, unsigned int a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)this + 16))(*(void *)this, a2);
}

uint64_t TUI::Evaluation::Context::lookupBinding(id *this, Entry a2)
{
  [this[67] recordEvent:13];
  unint64_t v3 = **(uint64_t (***)(void))*this;

  return v3();
}

id TUI::Evaluation::Context::objectForBinding(id *this, unsigned int a2)
{
  uint64_t v3 = a2;
  [this[67] recordEvent:13];
  uint64_t v4 = (**(uint64_t (***)(id, uint64_t))*this)(*this, v3);
  if (v5 == -1) {
    id v6 = 0;
  }
  else {
    id v6 = *(id *)((*(uint64_t (**)(uint64_t))(*(void *)v4 + 16))(v4) + 32);
  }

  return v6;
}

uint64_t TUI::Evaluation::Context::lookupStyle(id *this, Entry a2)
{
  [this[67] recordEvent:16];
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)*this + 24);

  return v3();
}

uint64_t TUI::Evaluation::Context::lookupAnimation(TUI::Evaluation::Context *this, unsigned int a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)this + 32))(*(void *)this, a2);
}

uint64_t TUI::Evaluation::Context::lookupDefinedElement(id *this, Entry a2)
{
  [this[67] recordEvent:15];
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)*this + 40);

  return v3();
}

uint64_t TUI::Evaluation::Context::lookupNamedElement(id *this, Entry a2)
{
  [this[67] recordEvent:15];
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)*this + 48);

  return v3();
}

uint64_t TUI::Evaluation::Context::pushBinding(TUI::Evaluation::Context *this, Entry a2, objc_object *a3)
{
  id v6 = a3;
  Entry v7 = a2;
  Entry v8 = (Entry)-65536;
  TUI::Evaluation::Enumerator::State::State((uint64_t)v12, v8, v7);
  objc_storeStrong(&v13, a3);
  TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v11, (const TUI::Evaluation::Enumerator::State *)v12);
  uint64_t v9 = (**(uint64_t (***)(uint64_t, void, id *))(*(void *)this + 8))(*(void *)this + 8, HIDWORD(v11[0]), v11);
  TUI::Evaluation::Enumerator::State::~State(v11);
  TUI::Evaluation::Enumerator::State::~State(v12);

  return v9;
}

void sub_FA9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id a15)
{
  TUI::Evaluation::Enumerator::State::~State((id *)&a9);
  TUI::Evaluation::Enumerator::State::~State(&a15);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::pushBinding(uint64_t a1)
{
  return (**(uint64_t (***)(void))(*(void *)a1 + 8))();
}

uint64_t TUI::Evaluation::Context::enumeratorStateForBinding(TUI::Evaluation::Context *this, unsigned int a2)
{
  uint64_t v2 = (***(uint64_t (****)(void, void))this)(*(void *)this, a2);
  if (v3 == -1) {
    return 0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v2 + 16);

  return v4();
}

uint64_t TUI::Evaluation::Context::beginScope(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(void))(**(void **)this + 72))();
}

uint64_t TUI::Evaluation::Context::endScope(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(void))(**(void **)this + 80))();
}

BOOL TUI::Evaluation::Context::isDefined(id *this, uint64_t a2)
{
  unsigned int v2 = a2;
  if (HIDWORD(a2) == 2)
  {
    (*(void (**)(void))(*(void *)*this + 48))();
    return v7 != -1;
  }
  if (HIDWORD(a2) == 1)
  {
    (**(void (***)(void))*this)();
    return v7 != -1;
  }
  if (HIDWORD(a2)) {
    return 0;
  }
  if ((unsigned __int16)a2 != 1 && !objc_msgSend(this[73], "hasExtendedNS:"))
  {
    (*(void (**)(id, void))(*(void *)*this + 8))(*this, v2);
    return v7 != -1;
  }
  uint64_t v4 = (uint64_t)this[70];
  this[74] = (id)((unint64_t)this[74] | sub_FA26C(v2, v4));
  id v5 = this[73];
  if (!v5) {
    return 0;
  }
  [v5 lookupName:v2 symtab:v4];
  BOOL v6 = v9 != 0;

  return v6;
}

void TUI::Evaluation::Context::evaluateParams(TUI::Evaluation::Context *a1, unint64_t a2, unint64_t a3)
{
  TUI::Evaluation::Context::evaluateParams((uint64_t)a1, a3);

  TUI::Evaluation::Context::evaluateParams(a1, a2);
}

void TUI::Evaluation::Context::evaluateParams(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  unint64_t v3 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFFLL && v3 != 0)
  {
    uint64_t v6 = 8 * a2;
    do
    {
      uint64_t v7 = *(void *)(a1 + 576);
      if (*(void *)(v7 + 168) > v2 && (uint64_t v8 = *(void *)(v7 + 160), v6 + v8))
      {
        uint64_t v9 = v8 + v6;
        uint64_t v10 = *(unsigned __int16 *)(v8 + v6);
        uint64_t v11 = v10 & 0xFFF;
        unint64_t v12 = (int *)(v9 + 4);
        unint64_t v13 = (unint64_t)*(unsigned __int16 *)(v9 + 2) << 16;
        uint64_t v14 = (v10 << 20) & 0xF00000000;
      }
      else
      {
        uint64_t v11 = 0;
        uint64_t v14 = 0;
        unint64_t v13 = 4294901760;
        unint64_t v12 = &TUIValueNil;
      }
      int v15 = *v12;
      unint64_t v16 = v11 | v13 | v14;
      int v17 = v15;
      TUI::Evaluation::Context::pushArgument((TUI::Instruction::Evaluation **)a1, (const Entry *)&v16);
      v6 += 8;
      ++v2;
      --v3;
    }
    while (v3);
  }
}

void TUI::Evaluation::Context::evaluateParams(TUI::Evaluation::Context *this, unint64_t a2)
{
  unint64_t v3 = a2;
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFFLL && v4 != 0)
  {
    uint64_t v7 = 8 * a2;
    do
    {
      uint64_t v8 = *((void *)this + 72);
      if (*(void *)(v8 + 200) > v3 && (uint64_t v9 = *(void *)(v8 + 192), v7 + v9))
      {
        uint64_t v10 = v9 + v7;
        unint64_t v11 = *(unsigned __int16 *)(v9 + v7);
        uint64_t v12 = v11 & 0xFFF;
        uint64_t v13 = (v11 >> 12) & 7;
        unint64_t v14 = v11 >> 15;
        int v15 = (int *)(v10 + 4);
        unint64_t v16 = (unint64_t)*(unsigned __int16 *)(v10 + 2) << 16;
        uint64_t v17 = v13 << 32;
      }
      else
      {
        uint64_t v12 = 0;
        unint64_t v14 = 0;
        uint64_t v17 = 0;
        unint64_t v16 = 4294901760;
        int v15 = &TUIValueNil;
      }
      id v18 = (TUI::Instruction::Decoder *)*v15;
      unint64_t v19 = v16 | v12;
      v21[0] = v16 | v12 | v17;
      v21[1] = v14 | ((void)v18 << 32);
      if (v14 && !TUI::Evaluation::Context::isDefined((id *)this, v16 | v12 | v17))
      {
        if (TUIValueNotNil((int)v18))
        {
          TUI::Evaluation::Context::pushParam((TUI::Instruction::Evaluation **)this, (unsigned int *)v21, v18);
        }
        else
        {
          unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v19;
          uint64_t v20 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), v2);
          TUI::Evaluation::Context::reportError((uint64_t)this, 1018, v20);
        }
      }
      v7 += 8;
      ++v3;
      --v4;
    }
    while (v4);
  }
}

void sub_FAEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushArgument(TUI::Instruction::Evaluation **this, const Entry *a2)
{
  Entry v5 = a2[1];
  unint64_t v4 = (TUI::Instruction::Decoder *)a2[2];
  switch(v5)
  {
    case 2u:
      TUI::Instruction::Evaluation::evaluate((double *)&v20, this[1], (TUI::Instruction::Decoder *)a2[2]);
      TUI::Evaluation::ResolvedValue::elementValue(&v20, (const TUI::Evaluation::Context *)this);
      uint64_t v7 = (objc_object *)objc_claimAutoreleasedReturnValue();

      if (v7)
      {
        uint64_t v8 = [(objc_object *)v7 parsedElement];

        if (v8)
        {
          unsigned int v9 = *a2;
          [(objc_object *)v7 closureAndCapture];
          id v20 = [(objc_object *)v7 parsedElement];
          LODWORD(v21) = TUIElementNodeNil;
          id v10 = v20;
          TUI::Evaluation::Context::pushNamedElement(this, v9, v18, (uint64_t)&v20);

          unint64_t v11 = v19;
          if (!v19) {
            goto LABEL_14;
          }
        }
        else
        {
          id v13 = [(objc_object *)v7 ref];
          unsigned int v14 = *a2;
          (*(void (**)(int *__return_ptr))(*(void *)v13 + 112))(v16);
          unsigned int v15 = [(objc_object *)v7 node];
          id v20 = 0;
          LODWORD(v21) = v15;
          TUI::Evaluation::Context::pushNamedElement(this, v14, v16, (uint64_t)&v20);

          unint64_t v11 = v17;
          if (!v17) {
            goto LABEL_14;
          }
        }
        sub_123E4(v11);
      }
LABEL_14:

      return;
    case 1u:
      TUI::Instruction::Evaluation::evaluate((double *)&v20, this[1], (TUI::Instruction::Decoder *)a2[2]);
      TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v20, this);
      uint64_t v7 = (objc_object *)objc_claimAutoreleasedReturnValue();

      Entry v12 = *a2;
      TUI::Evaluation::Context::pushBinding((TUI::Evaluation::Context *)this, v12, v7);
      goto LABEL_14;
    case 0u:
      unsigned int v6 = *a2;
      TUI::Evaluation::Context::pushConstant(this, v6, v4);
      break;
  }
}

void sub_FB0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a12) {
    sub_123E4(a12);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushParam(TUI::Instruction::Evaluation **a1, unsigned int *a2, TUI::Instruction::Decoder *a3)
{
  unsigned int v5 = a2[1];
  switch(v5)
  {
    case 2u:
      TUI::Instruction::Evaluation::evaluate((uint64_t *)&v18, a1[1], a3);
      TUI::Evaluation::ResolvedValue::elementValue(&v18, (const TUI::Evaluation::Context *)a1);
      uint64_t v7 = (objc_object *)objc_claimAutoreleasedReturnValue();

      uint64_t v8 = [(objc_object *)v7 parsedElement];

      if (v8)
      {
        unsigned int v9 = *a2;
        unsigned int v10 = TUIClosureNil;
        id v18 = [(objc_object *)v7 parsedElement];
        LODWORD(v19) = TUIElementNodeNil;
        id v11 = v18;
        TUI::Evaluation::Context::pushNamedElement(a1, v9, v10, (uint64_t)&v18);
      }
      else
      {
        id v13 = [(objc_object *)v7 ref];
        unsigned int v14 = *a2;
        (*(void (**)(void *__return_ptr))(*(void *)v13 + 112))(v16);
        unsigned int v15 = [(objc_object *)v7 node];
        id v18 = 0;
        LODWORD(v19) = v15;
        TUI::Evaluation::Context::pushNamedElement(a1, v14, (int *)v16, (uint64_t)&v18);

        if (v17) {
          sub_123E4(v17);
        }
      }
      goto LABEL_10;
    case 1u:
      TUI::Instruction::Evaluation::evaluate((uint64_t *)&v18, a1[1], a3);
      TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v18, a1);
      uint64_t v7 = (objc_object *)objc_claimAutoreleasedReturnValue();

      Entry v12 = (Entry)*a2;
      TUI::Evaluation::Context::pushBinding((TUI::Evaluation::Context *)a1, v12, v7);
LABEL_10:

      return;
    case 0u:
      unsigned int v6 = *a2;
      TUI::Evaluation::Context::pushConstant(a1, v6, (TUI::Instruction::Decoder *)a3);
      break;
  }
}

void sub_FB310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *a12)
{
  if (a11) {
    sub_123E4(a11);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushConstant(TUI::Instruction::Evaluation **a1, unsigned int a2, TUI::Instruction::Decoder *a3)
{
  TUI::Instruction::Evaluation::evaluate(v5, a1[1], a3);
  (*(void (**)(uint64_t, void, uint64_t *))(*((void *)*a1 + 1) + 8))((uint64_t)*a1 + 8, a2, v5);
}

void sub_FB3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::resolve(uint64_t a1@<X0>, TUI::Instruction::Decoder *a2@<X1>, double *a3@<X8>)
{
}

void TUI::Evaluation::Context::pushNamedElement(void *a1, unsigned int a2, int *a3, uint64_t a4)
{
  uint64_t v4 = *a1 + 8;
  int v6 = *a3;
  unsigned int v5 = (std::__shared_weak_count *)*((void *)a3 + 2);
  uint64_t v7 = *((void *)a3 + 1);
  uint64_t v8 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(*(void *)v4 + 56))(v4, a2, a4, &v6);
  if (v8) {
    sub_123E4(v8);
  }
}

void sub_FB494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Context::pushNamedElement(void *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  (*(void (**)(void *__return_ptr, void, void))(*(void *)*a1 + 112))(v7, *a1, a3);
  (*(void (**)(uint64_t, void, uint64_t, void *))(*(void *)(v6 + 8) + 56))(v6 + 8, a2, a4, v7);
  if (v8) {
    sub_123E4(v8);
  }
}

void sub_FB554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Context::resolve(uint64_t a1@<X0>, TUI::Instruction::Decoder *a2@<X1>, uint64_t a3@<X8>)
{
  if (TUIConditionIsNil((int)a2))
  {
    *(_DWORD *)a3 = 12;
    *(void *)(a3 + sub_1265C((uint64_t)this + 8) = 0;
    *(unsigned char *)(a3 + 16) = 1;
  }
  else
  {
    uint64_t v6 = *(TUI::Instruction::Evaluation **)(a1 + 8);
    TUI::Instruction::Evaluation::evaluate((double *)a3, v6, a2);
  }
}

uint64_t TUI::Evaluation::Context::pushConstant(TUI::Evaluation::Context *this, Entry a2, const ResolvedValue *a3)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)this + 8) + 8))();
}

uint64_t TUI::Evaluation::Context::pushFunction(uint64_t a1, int a2)
{
  uint64_t result = TUIDefinitionNotNil(a2);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)(*(void *)a1 + 8) + 16);
    return v4();
  }
  return result;
}

void TUI::Evaluation::Context::pushNamedElement(TUI::Instruction::Evaluation **a1, unsigned int a2, TUI::Instruction::Decoder *a3)
{
  if (TUIValueNotNil((int)a3))
  {
    TUI::Instruction::Evaluation::evaluate((double *)&v15, a1[1], a3);
    uint64_t v6 = TUI::Evaluation::ResolvedValue::elementValue(&v15, (const TUI::Evaluation::Context *)a1);

    if (v6 && (~a2 & 0xFFFF0000) != 0 && (unsigned __int16)a2 != 0xFFFFLL)
    {
      uint64_t v7 = [v6 parsedElement];

      uint64_t v8 = (uint64_t)*a1 + 8;
      if (v7)
      {
        id v9 = [v6 parsedElement];
        id v15 = v9;
        LODWORD(v16) = TUIElementNodeNil;
        [v6 closureAndCapture];
        (*(void (**)(uint64_t, void, id *, unsigned char *))(*(void *)v8 + 56))(v8, a2, &v15, v13);
        if (v14) {
          sub_123E4(v14);
        }
      }
      else
      {
        unsigned int v10 = [v6 node];
        id v15 = 0;
        LODWORD(v16) = v10;
        [v6 closureAndCapture];
        (*(void (**)(uint64_t, void, id *, unsigned char *))(*(void *)v8 + 56))(v8, a2, &v15, v11);
        if (v12) {
          sub_123E4(v12);
        }
      }
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
}

void sub_FB880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a12) {
    sub_123E4(a12);
  }

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::pushStyle(uint64_t *a1, int *a2)
{
  uint64_t result = TUIDefinitionNotNil(*a2);
  if (result)
  {
    uint64_t v5 = a1[72];
    unint64_t v6 = *a2;
    if (*(void *)(v5 + 184) > v6 && (uint64_t v7 = *(void *)(v5 + 176) + 12 * v6) != 0)
    {
      uint64_t v8 = *(unsigned __int16 *)(v7 + 2);
      unint64_t v9 = (unint64_t)*(unsigned __int16 *)(v7 + 4) << 16;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v9 = 4294901760;
    }
    uint64_t v10 = *a1;
    long long v11 = *(_OWORD *)a2;
    uint64_t v12 = *((void *)a2 + 2);
    return (*(uint64_t (**)(uint64_t, unint64_t, long long *))(*(void *)(v10 + 8) + 24))(v10 + 8, v8 | v9, &v11);
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushAnimation(void *a1, unsigned int a2)
{
  unint64_t v3 = a2;
  uint64_t result = TUIDefinitionNotNil(a2);
  if (result)
  {
    uint64_t v5 = a1[72];
    if (*(void *)(v5 + 184) > v3)
    {
      uint64_t v6 = *(void *)(v5 + 176) + 12 * v3;
      if (v6)
      {
        if (*(unsigned __int16 *)(v6 + 4) != 0xFFFFLL && *(unsigned __int16 *)(v6 + 2) != 0xFFFF)
        {
          uint64_t v8 = *(uint64_t (**)(void))(*(void *)(*a1 + 8) + 32);
          return v8();
        }
      }
    }
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushDefinedElement(void *a1, unsigned int a2)
{
  unint64_t v3 = a2;
  uint64_t result = TUIDefinitionNotNil(a2);
  if (result)
  {
    uint64_t v5 = a1[72];
    if (*(void *)(v5 + 184) > v3)
    {
      uint64_t v6 = *(void *)(v5 + 176) + 12 * v3;
      if (v6)
      {
        if (*(unsigned __int16 *)(v6 + 4) != 0xFFFFLL && *(unsigned __int16 *)(v6 + 2) != 0xFFFF)
        {
          uint64_t v8 = *(uint64_t (**)(void))(*(void *)(*a1 + 8) + 40);
          return v8();
        }
      }
    }
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushClosure(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 120))();
}

{
  return (*(uint64_t (**)(void))(**(void **)a1 + 128))();
}

{
  return (*(uint64_t (**)(void))(**(void **)a1 + 136))();
}

{
  return (*(uint64_t (**)(void))(**(void **)a1 + 144))();
}

{
  return (*(uint64_t (**)(void))(**(void **)a1 + 152))();
}

uint64_t TUI::Evaluation::Context::popClosure(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(void))(**(void **)this + 168))();
}

id TUI::Evaluation::Context::clearErrors(id *this)
{
  return [this[85] removeAllObjects];
}

id TUI::Evaluation::Context::lastError(id *this)
{
  id v1 = [this[85] lastObject];
  id v2 = [v1 code];

  return v2;
}

void sub_FBC98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::newSnapshot()
{
}

void sub_FBD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_123E4(a12);
  }
  operator delete();
}

void sub_FBDDC(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *(void **)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 56);
  *a2 = v3;
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  if (!v3) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a1 + 544);
  uint64_t v5 = *(void *)(a1 + 752);
  uint64_t v6 = *(void *)(a1 + 208);
  id v7 = *(id *)(a1 + 760);
  if (v3[1] != v4 || v3[2] != v5 || (id)v3[3] != v7)
  {

    goto LABEL_8;
  }
  uint64_t v8 = v3[4];

  if (v8 != v6) {
LABEL_8:
  }
    operator new();
}

void sub_FBF10(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_123E4(v1);
  }
  _Unwind_Resume(exception_object);
}

void TUI::Evaluation::Context::evaluateWithSnapshot(uint64_t *a1, uint64_t **a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)a1[68];
  id v7 = v6;
  long long v53 = *((_OWORD *)a1 + 41);
  *((_OWORD *)a1 + 41) = 0u;
  uint64_t v52 = a1[84];
  a1[84] = 0;
  id v55 = (id)a1[76];
  id v51 = (id)a1[75];
  id v50 = (id)a1[94];
  id v49 = (id)a1[95];
  objc_storeStrong((id *)a1 + 68, *(id *)((*a2)[2] + 8));
  uint64_t v8 = *a2;
  if (a1 + 82 != *a2 + 6)
  {
    sub_1080F0((char *)a1 + 656, (char *)v8[6], v8[7], (v8[7] - v8[6]) >> 2);
    uint64_t v8 = *a2;
  }
  objc_storeStrong((id *)a1 + 76, (id)v8[5]);
  objc_storeStrong((id *)a1 + 75, (id)(*a2)[4]);
  objc_storeStrong((id *)a1 + 94, *(id *)((*a2)[2] + 16));
  objc_storeStrong((id *)a1 + 95, *(id *)((*a2)[2] + 24));
  uint64_t v48 = a1[26];
  a1[26] = *(void *)((*a2)[2] + 32);
  int v47 = *((_DWORD *)a1 + 61);
  int v64 = 1065353216;
  memset(v65, 0, sizeof(v65));
  int v66 = 1065353216;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  unint64_t v9 = (long long *)(a1 + 31);
  long long v10 = *(_OWORD *)(a1 + 33);
  long long v11 = *(_OWORD *)(a1 + 35);
  long long v59 = *(_OWORD *)(a1 + 31);
  long long v60 = v10;
  *(_OWORD *)(a1 + 31) = 0u;
  long long v12 = *(_OWORD *)(a1 + 37);
  long long v61 = v11;
  long long v62 = v12;
  *(_OWORD *)(a1 + 35) = 0u;
  *(_OWORD *)(a1 + 37) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  memset(v63, 0, sizeof(v63));
  sub_29920((uint64_t)(a1 + 39), (uint64_t)v63);
  sub_29920((uint64_t)(a1 + 44), (uint64_t)v65);
  long long v14 = *(_OWORD *)(a1 + 49);
  long long v13 = *(_OWORD *)(a1 + 51);
  long long v15 = v68;
  *(_OWORD *)(a1 + 49) = v67;
  *(_OWORD *)(a1 + 51) = v15;
  long long v67 = v14;
  long long v68 = v13;
  long long v17 = *(_OWORD *)(a1 + 55);
  long long v71 = *(_OWORD *)(a1 + 53);
  long long v16 = v71;
  long long v72 = v17;
  long long v18 = v70;
  *(_OWORD *)(a1 + 53) = v69;
  *(_OWORD *)(a1 + 55) = v18;
  long long v69 = v16;
  long long v70 = v17;
  uint64_t v46 = a1[27];
  id v19 = *a2;
  a1[27] = (*a2)[10];
  a1[28] = 0;
  int v45 = *((_DWORD *)a1 + 60);
  *((_DWORD *)a1 + 60) = *((_DWORD *)v19 + 22);
  uint64_t v20 = a1[29];
  a1[29] = v19[12];
  uint64_t v43 = a1[92];
  uint64_t v44 = v20;
  id WeakRetained = objc_loadWeakRetained((id *)v19 + 9);
  a1[92] = (uint64_t)WeakRetained;

  uint64_t v22 = *a1;
  CFURLRef v23 = (std::__shared_weak_count *)(*a2)[1];
  uint64_t v57 = **a2;
  uint64_t v58 = v23;
  if (v23) {
    atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(uint64_t, uint64_t *, id))(*(void *)v22 + 104))(v22, &v57, v5);
  if (v58) {
    sub_123E4(v58);
  }
  objc_storeStrong((id *)a1 + 68, v6);
  unint64_t v24 = (void *)a1[82];
  *((_OWORD *)a1 + 41) = v53;
  a1[84] = v52;
  CFErrorRef v25 = (void *)a1[76];
  a1[76] = (uint64_t)v55;
  id v56 = v55;

  unint64_t v26 = (void *)a1[75];
  a1[75] = (uint64_t)v51;
  id v54 = v51;

  a1[26] = v48;
  *((_DWORD *)a1 + 61) = v47;
  size_t v27 = v5;
  long long v29 = *v9;
  long long v28 = *(_OWORD *)(a1 + 33);
  long long v30 = v60;
  *unint64_t v9 = v59;
  *(_OWORD *)(a1 + 33) = v30;
  long long v59 = v29;
  long long v60 = v28;
  long long v32 = *(_OWORD *)(a1 + 35);
  long long v31 = *(_OWORD *)(a1 + 37);
  long long v33 = v62;
  *(_OWORD *)(a1 + 35) = v61;
  *(_OWORD *)(a1 + 37) = v33;
  long long v61 = v32;
  long long v62 = v31;
  sub_29920((uint64_t)(a1 + 39), (uint64_t)v63);
  sub_29920((uint64_t)(a1 + 44), (uint64_t)v65);
  long long v35 = *(_OWORD *)(a1 + 49);
  long long v34 = *(_OWORD *)(a1 + 51);
  long long v36 = v68;
  *(_OWORD *)(a1 + 49) = v67;
  *(_OWORD *)(a1 + 51) = v36;
  long long v67 = v35;
  long long v68 = v34;
  long long v38 = *(_OWORD *)(a1 + 53);
  long long v37 = *(_OWORD *)(a1 + 55);
  long long v39 = v70;
  *(_OWORD *)(a1 + 53) = v69;
  *(_OWORD *)(a1 + 55) = v39;
  long long v69 = v38;
  long long v70 = v37;
  a1[27] = v46;
  a1[28] = 0;
  *((_DWORD *)a1 + 60) = v45;
  a1[29] = v44;
  a1[92] = v43;
  unint64_t v40 = (void *)a1[94];
  a1[94] = (uint64_t)v50;
  id v41 = v50;

  unint64_t v42 = (void *)a1[95];
  a1[95] = (uint64_t)v49;

  sub_354AC((uint64_t)v65);
  sub_1265C((uint64_t)v63);

  if (v24) {
    operator delete(v24);
  }
}

void sub_FC340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24)
{
  if (a21) {
    operator delete(a21);
  }

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::locationForNode(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void **)(a1 + 576);
  if (v4[27] <= (unint64_t)a2) {
    id v5 = (unsigned int *)&dword_18;
  }
  else {
    id v5 = (unsigned int *)(v4[26] + 28 * a2 + 24);
  }
  unint64_t v6 = *v5;
  if (v4[17] > v6 >> 12 && (id v7 = (unsigned __int16 *)(v4[16] + 8 * (v6 >> 12))) != 0)
  {
    uint64_t v8 = *v7;
    unint64_t v9 = (unint64_t)*((unsigned int *)v7 + 1) << 32;
    uint64_t v10 = v8 << 16;
  }
  else
  {
    unint64_t v9 = 0xFFFFFFFF00000000;
    uint64_t v10 = 4294901760;
  }
  unint64_t v16 = v9 | v10 | v6 & 0xFFF;
  long long v11 = TUI::Package::Location::Entry::xpathString((uint64_t)&v16, v4);
  long long v12 = TUI::Package::Location::Entry::pathURL((unsigned __int16 *)&v16, *(void **)(a1 + 576));
  long long v13 = [v12 lastPathComponent];

  long long v14 = +[NSString stringWithFormat:@"[%@] %@", v13, v11];

  return v14;
}

void sub_FC4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithNodeIdentifier(uint64_t a1, unsigned int a2, void *a3)
{
  id v12 = a3;
  uint64_t v5 = a2;
  BOOL v6 = !TUIElementNodeNotNil(a2);
  if (!v12) {
    BOOL v6 = 1;
  }
  id v7 = v12;
  if (!v6)
  {
    id v8 = *(id *)(a1 + 608);
    uint64_t v9 = [*(id *)(a1 + 600) identifierWithNode:v5 baseIdentifier:*(void *)(a1 + 608)];
    uint64_t v10 = *(void **)(a1 + 608);
    *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v9;

    (*((void (**)(void))v12 + 2))();
    long long v11 = *(void **)(a1 + 608);
    *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v8;

    id v7 = v12;
  }
}

void sub_FC5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithUnmappedIdentifier(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  uint64_t v5 = a3;
  if (v13 && v5)
  {
    id v6 = *(id *)(a1 + 608);
    id v7 = *(void **)(a1 + 608);
    if (v7)
    {
      uint64_t v8 = [v7 tui_identifierByAppendingString:v13];
      id v9 = *(id *)(a1 + 608);
      *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v8;
    }
    else
    {
      id v9 = [objc_alloc((Class)NSIndexPath) initWithIndexes:0 length:0];
      uint64_t v10 = [v9 tui_identifierByAppendingString:v13];
      long long v11 = *(void **)(a1 + 608);
      *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v10;
    }
    v5[2](v5);
    id v12 = *(void **)(a1 + 608);
    *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v6;
  }
}

void sub_FC6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::identifierWithNode(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(a1 + 576);
  uint64_t v4 = a2;
  if (*(void *)(v3 + 216) > (unint64_t)a2 && (uint64_t v5 = *(void *)(v3 + 208) + 28 * a2) != 0) {
    id v6 = (int *)(v5 + 12);
  }
  else {
    id v6 = &TUIValueNil;
  }
  uint64_t v7 = *v6;
  if (!TUIValueNotNil(*v6)
    || TUI::Instruction::Decoder::offsetKind(v7) == 7
    || (TUI::Instruction::Evaluation::evaluate(v11, *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)v7), TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v11, (TUI::Symbol::Tab **)a1), v8 = objc_claimAutoreleasedReturnValue(), *(id *)&v11[1], !v8)|| (objc_msgSend(*(id *)(a1 + 608), "tui_identifierByAppendingString:", v8), id v9 = objc_claimAutoreleasedReturnValue(), v8, !v9))
  {
    id v9 = [*(id *)(a1 + 600) identifierWithNode:v4 baseIdentifier:*(void *)(a1 + 608)];
  }

  return v9;
}

void sub_FC7E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithIdentifier(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3;
  if (v5)
  {
    long long v11 = v5;
    id v6 = *(id *)(a1 + 608);
    uint64_t v7 = *(void **)(a1 + 608);
    if (v7) {
      [v7 tui_identifierByAppendingIndex:a2];
    }
    else {
    uint64_t v8 = +[NSNumber numberWithUnsignedInteger:a2];
    }
    id v9 = *(void **)(a1 + 608);
    *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v8;

    v11[2]();
    uint64_t v10 = *(void **)(a1 + 608);
    *(void *)(a1 + 60sub_1265C((uint64_t)this + 8) = v6;

    uint64_t v5 = v11;
  }
}

void sub_FC8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateEnumerator(void *a1, unint64_t a2, Entry a3, void *a4)
{
  uint64_t v7 = a4;
  if (v7)
  {
    (*(void (**)(void, uint64_t))(*(void *)*a1 + 72))(*a1, 1);
    unint64_t v8 = HIDWORD(a2);
    Entry v9 = a3;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v13, (Entry)v8, v9);
    uint64_t v10 = (**(uint64_t (***)(uint64_t, void, id *))(*a1 + 8))(*a1 + 8, HIDWORD(v13[0]), v13);
    uint64_t v12 = v11;
    TUI::Evaluation::Enumerator::State::~State(v13);
    v7[2](v7, v10, v12);
    (*(void (**)(void))(*(void *)*a1 + 80))();
  }
}

void sub_FC9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::enumerate(TUI::Symbol::Tab **a1, unint64_t a2, unint64_t a3, void *a4)
{
  id v54 = a4;
  if (!v54) {
    goto LABEL_35;
  }
  uint64_t v7 = (TUI::Instruction::Decoder *)HIDWORD(a3);
  if (!TUIValueNotNil(SHIDWORD(a3))) {
    goto LABEL_35;
  }
  int v8 = (unsigned __int16)a3;
  int v9 = WORD1(a3);
  uint64_t v53 = (uint64_t)a1;
  if (!a2)
  {
    (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 72))(*a1, 1);
    unint64_t v16 = WORD2(a2) | (HIWORD(a2) << 16);
    Entry v17 = (Entry)a3;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v75, (Entry)v16, v17);
    uint64_t v18 = (**((uint64_t (***)(uint64_t, void, id *))*a1 + 1))((uint64_t)*a1 + 8, HIDWORD(v75[0]), v75);
    uint64_t v20 = v19;
    TUI::Evaluation::Enumerator::State::~State(v75);
    TUI::Instruction::Evaluation::evaluate(&v73, a1[1], v7);
    TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v73, a1);
    obuint64_t j = (id)objc_claimAutoreleasedReturnValue();

    if (HIWORD(a2) == 0xFFFF
      || (a2 & 0xFFFF00000000) == 0xFFFF00000000
      || (objc_opt_respondsToSelector() & 1) == 0
      || (objc_opt_respondsToSelector() & 1) == 0)
    {
      if (v9 == 0xFFFF || v8 == 0xFFFF) {
        goto LABEL_33;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (objc_opt_respondsToSelector())
        {
          long long v63 = 0u;
          long long v64 = 0u;
          long long v61 = 0u;
          long long v62 = 0u;
          unint64_t v40 = [obj objectEnumerator];
          id v41 = [v40 countByEnumeratingWithState:&v61 objects:v76 count:16];
          if (v41)
          {
            uint64_t v42 = 0;
            uint64_t v43 = *(void *)v62;
            do
            {
              for (uint64_t i = 0; i != v41; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v62 != v43) {
                  objc_enumerationMutation(v40);
                }
                int v45 = *(void **)(*((void *)&v61 + 1) + 8 * i);
                uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v18 + 24))(v18, v20);
                objc_storeStrong((id *)(v46 + 32), v45);
                TUI::Evaluation::Context::evaluateWithIdentifier(v53, (uint64_t)i + v42, v54);
              }
              id v41 = [v40 countByEnumeratingWithState:&v61 objects:v76 count:16];
              v42 += (uint64_t)i;
            }
            while (v41);
          }
        }
        else
        {
          if ((objc_opt_respondsToSelector() & 1) == 0)
          {
            if (obj)
            {
              int v47 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicProviding, obj);
              BOOL v48 = v47 == 0;

              if (v48)
              {
                uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v18 + 24))(v18, v20);
                objc_storeStrong((id *)(v49 + 32), obj);
                v54[2]();
              }
            }
            goto LABEL_33;
          }
          v56[0] = _NSConcreteStackBlock;
          v56[1] = 3221225472;
          v56[2] = sub_FD2AC;
          v56[3] = &unk_2555A0;
          uint64_t v58 = a1;
          uint64_t v59 = v18;
          uint64_t v60 = v20;
          uint64_t v57 = v54;
          [obj tui_unwwrapEnumeratorWithBlock:v56];
          unint64_t v40 = v57;
        }
        goto LABEL_32;
      }
      id v32 = obj;
      id v33 = [v32 count];
      long long v67 = 0u;
      long long v68 = 0u;
      long long v65 = 0u;
      long long v66 = 0u;
      id v52 = v32;
      id v34 = [v52 countByEnumeratingWithState:&v65 objects:v77 count:16];
      if (v34)
      {
        uint64_t v35 = 0;
        uint64_t v36 = *(void *)v66;
        do
        {
          for (uint64_t j = 0; j != v34; uint64_t j = (char *)j + 1)
          {
            if (*(void *)v66 != v36) {
              objc_enumerationMutation(v52);
            }
            long long v38 = *(void **)(*((void *)&v65 + 1) + 8 * (void)j);
            uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v18 + 24))(v18, v20);
            *(void *)(v39 + 16) = (char *)j + v35;
            objc_storeStrong((id *)(v39 + 32), v38);
            *(unsigned char *)(v39 + sub_1265C((uint64_t)this + 8) = ((char *)j + v35 == 0) | (2 * ((char *)j + 1 - (void)v33 + v35 == 0)) | *(unsigned char *)(v39 + 8) & 0xFC;
            TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)a1, (uint64_t)j + v35, v54);
          }
          id v34 = [v52 countByEnumeratingWithState:&v65 objects:v77 count:16];
          v35 += (uint64_t)j;
        }
        while (v34);
      }
    }
    else
    {
      long long v71 = 0u;
      long long v72 = 0u;
      long long v69 = 0u;
      long long v70 = 0u;
      id v52 = [obj keyEnumerator];
      id v21 = [v52 countByEnumeratingWithState:&v69 objects:v78 count:16];
      if (v21)
      {
        uint64_t v50 = *(void *)v70;
        do
        {
          for (k = 0; k != v21; k = (char *)k + 1)
          {
            if (*(void *)v70 != v50) {
              objc_enumerationMutation(v52);
            }
            CFURLRef v23 = *(void **)(*((void *)&v69 + 1) + 8 * (void)k);
            unint64_t v24 = [obj objectForKey:v23];
            uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v18 + 24))(v18, v20);
            id v26 = v23;
            id v27 = v24;
            uint64_t v28 = v20;
            long long v29 = *(void **)(v25 + 24);
            *(void *)(v25 + 24) = v26;
            id v30 = v26;

            uint64_t v20 = v28;
            long long v31 = *(void **)(v25 + 32);
            *(void *)(v25 + 32) = v27;

            v54[2]();
          }
          id v21 = [v52 countByEnumeratingWithState:&v69 objects:v78 count:16];
        }
        while (v21);
      }
    }
    unint64_t v40 = v52;
LABEL_32:

    a1 = (TUI::Symbol::Tab **)v53;
LABEL_33:
    (*(void (**)(void))(*(void *)*a1 + 80))();
LABEL_34:

    goto LABEL_35;
  }
  if (a2 == 1)
  {
    TUI::Instruction::Evaluation::evaluate(&v73, a1[1], (TUI::Instruction::Decoder *)HIDWORD(a3));
    TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v73, a1);
    obuint64_t j = (id)objc_claimAutoreleasedReturnValue();

    if (WORD1(a3) != 0xFFFF && (unsigned __int16)a3 != 0xFFFF)
    {
      (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 72))(*a1, 1);
      Entry v10 = (Entry)a3;
      Entry v11 = (Entry)-65536;
      TUI::Evaluation::Enumerator::State::State((uint64_t)v55, v11, v10);
      uint64_t v12 = (**((uint64_t (***)(uint64_t, void, id *))*a1 + 1))((uint64_t)*a1 + 8, HIDWORD(v55[0]), v55);
      uint64_t v14 = v13;
      TUI::Evaluation::Enumerator::State::~State(v55);
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 24))(v12, v14);
      objc_storeStrong((id *)(v15 + 32), obj);
      v54[2]();
      (*(void (**)(void))(*(void *)*a1 + 80))();
    }
    goto LABEL_34;
  }
LABEL_35:
}

void sub_FD1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_FD2AC(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = a2;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 48) + 24))(*(void *)(a1 + 48), *(void *)(a1 + 56));
  objc_storeStrong((id *)(v7 + 32), a2);
  TUI::Evaluation::Context::evaluateWithIdentifier(v6, a3, *(void **)(a1 + 32));
}

void sub_FD348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::Snapshot::Snapshot(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = a4[1];
  *(void *)a1 = *a4;
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = a3[1];
  *(void *)(a1 + 16) = *a3;
  *(void *)(a1 + 24) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 32) = *(id *)(a2 + 600);
  id v8 = *(id *)(a2 + 608);
  *(void *)(a1 + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_108240((void *)(a1 + 48), *(const void **)(a2 + 656), *(void *)(a2 + 664), (uint64_t)(*(void *)(a2 + 664) - *(void *)(a2 + 656)) >> 2);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 96) = 0;
  objc_storeWeak((id *)(a1 + 72), *(id *)(a2 + 736));
  objc_storeStrong((id *)(a1 + 80), *(id *)(a2 + 216));
  *(_DWORD *)(a1 + 8sub_1265C((uint64_t)this + 8) = *(_DWORD *)(a2 + 240);
  objc_storeStrong((id *)(a1 + 96), *(id *)(a2 + 232));
  return a1;
}

void sub_FD438(_Unwind_Exception *a1)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 24);
  if (v3) {
    sub_123E4(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(v1 + 8);
  if (v4) {
    sub_123E4(v4);
  }
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::Snapshot::~Snapshot(id *this)
{
  objc_destroyWeak(this + 9);
  id v2 = this[6];
  if (v2)
  {
    this[7] = v2;
    operator delete(v2);
  }

  uint64_t v3 = (std::__shared_weak_count *)this[3];
  if (v3) {
    sub_123E4(v3);
  }
  uint64_t v4 = (std::__shared_weak_count *)this[1];
  if (v4) {
    sub_123E4(v4);
  }
}

id TUI::Evaluation::Context::errors(id *this)
{
  id v2 = [this[85] count];
  if (v2) {
    id v2 = [this[85] copy];
  }

  return v2;
}

void TUI::Evaluation::Context::instantiateNodeWithBuilder(uint64_t a1, unsigned int a2, void *a3)
{
  id v5 = a3;
  long long v12 = *(_OWORD *)(a1 + 192);
  uint64_t v6 = *(void *)(a1 + 208);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v5;
  int v9 = *(os_unfair_lock_s **)(a1 + 32);
  id v13 = v5;
  if (v9)
  {
    Entry v10 = (objc_class *)objc_opt_class();
    uint64_t v11 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v9, v10);
    id v5 = v13;
  }
  else
  {
    uint64_t v11 = **(void **)(a1 + 24);
  }
  *(void *)(a1 + 176) = v11;
  *(void *)(a1 + 192) = v5;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = 0;
  TUI::Evaluation::Context::instantiateChildNode(a1, a2);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v8;
  *(void *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v12;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = v6;
}

void sub_FD5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateChildNode(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(a1 + 576);
  if (*(void *)(v3 + 216) <= (unint64_t)a2) {
    id v5 = 0;
  }
  else {
    id v5 = (unsigned __int16 *)(*(void *)(v3 + 208) + 28 * a2);
  }
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(v6 + 80) - v7) >> 4);
  uint64_t v9 = v7 + 48 * *v5;
  uint64_t v10 = v6 + 24;
  if (v8 <= *v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v9;
  }
  uint64_t v12 = *(unsigned int *)(v11 + 40);
  unint64_t v13 = v12 | ((unint64_t)*(unsigned __int8 *)(v11 + 44) << 32);
  if ((v12 & 1) != 0 || (uint64_t v14 = *(void *)(v11 + 32)) != 0 && (v14 & ~*(void *)(a1 + 176)) == 0)
  {
    if ((v13 & 0x1F80000000) != 0 && *(unsigned char *)(a1 + 40) == 0)
    {
      uint64_t v18 = *(void *)(a1 + 216);
      uint64_t v19 = *(void *)(a1 + 224);
      int v20 = *(_DWORD *)(a1 + 240);
      uint64_t v21 = *(void *)(a1 + 232);
      if ((v13 & 0x1000000000) != 0)
      {
        if (v19) {
          *(void *)(a1 + 216) = v19;
        }
        *(_DWORD *)(a1 + 240) = a2;
        uint64_t v22 = *(void *)(a1 + 608);
        *(void *)(a1 + 224) = 0;
        *(void *)(a1 + 232) = v22;
      }
      (*(void (**)(void))(**(void **)a1 + 72))();
      if ((*(_DWORD *)(v11 + 40) & 0x400000) != 0) {
        TUI::Evaluation::Context::instantiateNodeWithEnumeration(a1, a2, v11);
      }
      else {
        TUI::Evaluation::Context::instantiateNode(a1, a2);
      }
      os_log_t loga = (os_log_t)objc_claimAutoreleasedReturnValue();
      (*(void (**)(void))(**(void **)a1 + 80))();
      if (((*(unsigned int *)(v11 + 40) | ((unint64_t)*(unsigned __int8 *)(v11 + 44) << 32)) & 0x1000000000) != 0) {
        *(void *)(a1 + 224) = v19;
      }
      *(void *)(a1 + 216) = v18;
      *(_DWORD *)(a1 + 240) = v20;
      *(void *)(a1 + 232) = v21;
      if (v13) {
        goto LABEL_38;
      }
    }
    else
    {
      if ((v12 & 0x400000) != 0) {
        TUI::Evaluation::Context::instantiateNodeWithEnumeration(a1, a2, v11);
      }
      else {
        TUI::Evaluation::Context::instantiateNode(a1, a2);
      }
      os_log_t loga = (os_log_t)objc_claimAutoreleasedReturnValue();
      uint64_t v23 = *(void *)(a1 + 224);
      if (v23) {
        *(void *)(a1 + 216) = v23;
      }
      *(void *)(a1 + 224) = 0;
      if (v13) {
        goto LABEL_38;
      }
    }
    if (loga)
    {
      int v24 = *(_DWORD *)(v11 + 40);
      if ((v24 & 0x100000) != 0)
      {
        [*(id *)v11 addObject:loga toContainingBuilder:*(void *)(a1 + 168) context:*(void *)(a1 + 16)];
      }
      else if ((v24 & 0x8000000) != 0)
      {
        [*(id *)(a1 + 168) addBox:loga];
      }
    }
LABEL_38:

    return;
  }
  log = TUIInstantiationLog();
  BOOL v16 = os_log_type_enabled(log, OS_LOG_TYPE_ERROR);
  Entry v17 = log;
  if (v16)
  {
    id v25 = [*(id *)(a1 + 16) feedId];
    id v26 = *(void **)(a1 + 576);
    unint64_t v27 = *v5;
    if (v26[55] <= v27) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = v26[54] + *(unsigned int *)(v26[56] + 4 * v27);
    }
    long long v29 = (objc_class *)objc_opt_class();
    id v30 = NSStringFromClass(v29);
    *(_DWORD *)buf = 134218498;
    id v34 = v25;
    __int16 v35 = 2082;
    uint64_t v36 = v28;
    __int16 v37 = 2114;
    long long v38 = v30;
    _os_log_error_impl(&def_141F14, log, OS_LOG_TYPE_ERROR, "[fid:%lu] child element name=%{public}s not allowed by current builder %{public}@", buf, 0x20u);

    Entry v17 = log;
  }
}

void sub_FD99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::instantiateNodeWithEnumeration(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 576);
  uint64_t v6 = a2;
  if (*(void *)(v5 + 216) <= (unint64_t)a2 || (uint64_t v7 = *(void *)(v5 + 208) + 28 * a2) == 0)
  {
    unint64_t v13 = TUIInstantiationLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_19275C((uint64_t)v30, (uint64_t)[*(id *)(a1 + 16) feedId], v6);
    }
    goto LABEL_9;
  }
  uint64_t v9 = *(unsigned int *)(v7 + 16);
  uint64_t v10 = *(unsigned __int16 *)(v7 + 2);
  sub_FDD58(a1 + 248, 0);
  *(void *)(a1 + 432) &= 0xFFFFFFFFFFC3FFFFLL;
  if (v10) {
    TUI::Evaluation::Context::computeAttributes(a1, v9 | (v10 << 32), 0, a1 + 248);
  }
  *(_DWORD *)(a1 + 244) = a2;
  LOWORD(v30[0]) = 85;
  uint64_t v11 = *(void *)(a1 + 288);
  if ((v11 & 0x200000) != 0)
  {
    uint64_t v12 = (TUI::Evaluation::ResolvedValue *)(sub_12E50((void *)(a1 + 352), (unsigned __int16 *)v30) + 3);
    uint64_t v11 = *(void *)(a1 + 288);
  }
  else
  {
    uint64_t v12 = 0;
  }
  LOWORD(v30[0]) = 83;
  if ((v11 & 0x80000) != 0)
  {
    uint64_t v15 = (TUI::Evaluation::ResolvedValue *)(sub_12E50((void *)(a1 + 352), (unsigned __int16 *)v30) + 3);
    uint64_t v11 = *(void *)(a1 + 288);
  }
  else
  {
    uint64_t v15 = 0;
  }
  LOWORD(v30[0]) = 82;
  if ((v11 & 0x40000) != 0)
  {
    BOOL v16 = (TUI::Evaluation::ResolvedValue *)(sub_12E50((void *)(a1 + 352), (unsigned __int16 *)v30) + 3);
    uint64_t v11 = *(void *)(a1 + 288);
  }
  else
  {
    BOOL v16 = 0;
  }
  LOWORD(v30[0]) = 84;
  if ((v11 & 0x100000) != 0)
  {
    Entry v17 = (TUI::Evaluation::ResolvedValue *)(sub_12E50((void *)(a1 + 352), (unsigned __int16 *)v30) + 3);
    if (v12) {
      goto LABEL_19;
    }
  }
  else
  {
    Entry v17 = 0;
    if (v12)
    {
LABEL_19:
      uint64_t v18 = TUI::Evaluation::ResolvedValue::integerValue(v12, (const TUI::Evaluation::Context *)a1);
      uint64_t v19 = TUI::Evaluation::ResolvedValue::integerValue(v15, (const TUI::Evaluation::Context *)a1);
      uint64_t v20 = TUI::Evaluation::ResolvedValue::integerValue(v16, (const TUI::Evaluation::Context *)a1);
      uint64_t v21 = TUI::Evaluation::ResolvedValue::integerValue(v17, (const TUI::Evaluation::Context *)a1);
      goto LABEL_22;
    }
  }
  uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_22:
  LOWORD(v30[0]) = 70;
  if ((*(unsigned char *)(a1 + 256) & 0x40) != 0) {
    uint64_t v22 = (unsigned int *)sub_12E50((void *)(a1 + 312), (unsigned __int16 *)v30) + 5;
  }
  else {
    uint64_t v22 = (unsigned int *)&TUIValueNil;
  }
  unint64_t v13 = +[TUIDynamicInstantiateOptions optionsWithFetchWindow:fetchInitial:fetchDelta:fetchPadding:uniqueID:](TUIDynamicInstantiateOptions, "optionsWithFetchWindow:fetchInitial:fetchDelta:fetchPadding:uniqueID:", v18, v19, v20, v21, *v22, v30[0]);
  LOWORD(v30[0]) = 183;
  if ((*(unsigned char *)(a1 + 270) & 0x80) != 0) {
    int v24 = (int *)sub_12E50((void *)(a1 + 312), (unsigned __int16 *)v30) + 5;
  }
  else {
    int v24 = &TUIValueNil;
  }
  unsigned int v25 = TUI::Instruction::Decoder::enumerator((TUI::Instruction::Decoder *)*v24, a1, v23);
  *(_DWORD *)(a1 + 244) = TUIElementNodeNil;
  sub_FA010(a1 + 248);
  if (TUIEnumeratorIsNil(v25))
  {
    if ((*(_DWORD *)(a3 + 40) & 0x800000) == 0)
    {
      TUI::Evaluation::Context::reportError(a1, 1033, @"nil enumerator used when not allowed");
LABEL_9:
      uint64_t v14 = 0;
      goto LABEL_37;
    }
    uint64_t v28 = TUI::Evaluation::Context::instantiateNode(a1, v6);
  }
  else
  {
    unsigned int v26 = TUI::Evaluation::Context::closureForElement(a1, v7);
    if (*(unsigned char *)(a1 + 184)) {
      uint64_t v27 = 3;
    }
    else {
      uint64_t v27 = 1;
    }
    uint64_t v28 = TUI::Evaluation::Context::instantiateEnumeratorWithNodes(a1, v25, v6 | 0x100000000, v26, v13, v27);
  }
  uint64_t v14 = (void *)v28;
LABEL_37:

  return v14;
}

void sub_FDD20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::feedId(id *this)
{
  return [this[2] feedId];
}

void sub_FDD58(uint64_t a1, int a2)
{
  *(void *)&long long v4 = a1;
  DWORD2(v4) = 0;
  sub_107508((uint64_t)&v4, 0x100uLL);
  *(void *)&long long v4 = a1 + 32;
  DWORD2(v4) = 0;
  sub_107508((uint64_t)&v4, 0x100uLL);
  if (*(void *)(a1 + 88))
  {
    long long v4 = 0u;
    long long v5 = 0u;
    int v6 = 1065353216;
    sub_8CDDC(a1 + 64, (uint64_t *)&v4);
    sub_1265C((uint64_t)&v4);
  }
  if (*(void *)(a1 + 128))
  {
    long long v4 = 0u;
    long long v5 = 0u;
    int v6 = 1065353216;
    sub_1075B8(a1 + 104, (uint64_t *)&v4);
    sub_354AC((uint64_t)&v4);
  }
  *(void *)&long long v4 = a1 + 144;
  DWORD2(v4) = 0;
  sub_107454(&v4, 0x100uLL);
  *(void *)&long long v4 = a1 + 176;
  DWORD2(v4) = 0;
  if (a2) {
    sub_107508((uint64_t)&v4, 0x100uLL);
  }
  else {
    sub_107454(&v4, 0x100uLL);
  }
}

void TUI::Evaluation::Context::computeAttributes(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v41 = TUIStyleReferenceNil;
  uint64_t v5 = WORD2(a2);
  if (WORD2(a2))
  {
    uint64_t v6 = 0;
    uint64_t v7 = *(void **)(a1 + 576);
    uint64_t v8 = a2;
    uint64_t v40 = a4 + 144;
    uint64_t v35 = a4 + 176;
    uint64_t v36 = a4 + 64;
    uint64_t v32 = a4 + 104;
    uint64_t v33 = a4 + 32;
    uint64_t v37 = a2;
    uint64_t v38 = WORD2(a2);
    do
    {
      if (v7[31] > (unint64_t)(v6 + v8) && (uint64_t v9 = (unsigned __int16 *)(v7[30] + 8 * (v6 + v8))) != 0)
      {
        unint64_t v10 = *v9;
        uint64_t v11 = v7[60];
        if (v10 >= (v7[61] - v11) >> 1)
        {
          LODWORD(v17) = 0;
          uint64_t v13 = v9[1];
          unint64_t v14 = *((unsigned int *)v9 + 1);
          unsigned int v16 = 0xFFFF;
          v42[0] = 1;
          uint64_t v15 = 0;
        }
        else
        {
          unint64_t v12 = *(unsigned __int16 *)(v11 + 2 * v10);
          uint64_t v13 = v9[1];
          unint64_t v14 = *((unsigned int *)v9 + 1);
          uint64_t v15 = 0;
          unsigned int v16 = 0xFFFF;
          if (v12 == 0xFFFF)
          {
            LODWORD(v17) = 0;
            v42[0] = 1;
          }
          else
          {
            if (v12 >= 0x100) {
              sub_8CCD0("bitset test argument out of range");
            }
            v42[0] = 0;
            uint64_t v17 = (*(void *)(v40 + ((v12 >> 3) & 0x1FF8)) >> v12) & 1;
            unsigned int v16 = v12;
          }
        }
        if ((v16 == 199 || v17) && v13)
        {
          uint64_t v18 = 12 * v14;
          while (1)
          {
            if (v7[29] <= v14)
            {
              uint64_t v20 = &TUIConditionNil;
              uint64_t v19 = &TUIValueNil;
            }
            else
            {
              uint64_t v19 = (int *)(v18 + v7[28]);
              uint64_t v20 = v19 + 1;
              if (!v19)
              {
                uint64_t v20 = &TUIConditionNil;
                uint64_t v19 = &TUIValueNil;
              }
            }
            uint64_t v21 = (TUI::Instruction::Decoder *)*v19;
            TUI::Evaluation::Context::resolve(a1, (TUI::Instruction::Decoder *)*v20, (uint64_t)&v42[1]);
            unsigned __int8 v22 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v42[1], (const TUI::Evaluation::Context *)a1);

            if (v22) {
              break;
            }
            v18 += 12;
            ++v14;
            if (!--v13) {
              goto LABEL_27;
            }
          }
          uint64_t v15 = v21;
LABEL_27:
          uint64_t v8 = v37;
          uint64_t v5 = v38;
        }
        if (!TUIValueNotNil((int)v15)) {
          goto LABEL_9;
        }
        if (v16 == 199)
        {
          uint64_t v41 = TUI::Instruction::Decoder::styleReference(v15, a1, v23);
        }
        else
        {
          LOWORD(v46) = v16;
          if (v42[0]) {
            goto LABEL_9;
          }
          if (v16 >= 0x100
            || (unint64_t v24 = (unint64_t)v16 >> 6,
                uint64_t v25 = 1 << v16,
                *(void *)(a4 + 8 * v24) |= 1 << v16,
                *(void *)&v42[1] = &v46,
                *((_DWORD *)sub_34F78(v36, (unsigned __int16 *)&v46, (uint64_t)&std::piecewise_construct, (_WORD **)&v42[1])+ 5) = v15, (unsigned __int16)v46 >= 0x100uLL))
          {
            sub_8CCD0("bitset set argument out of range");
          }
          *(void *)(v40 + (((unint64_t)(unsigned __int16)v46 >> 3) & 0x1FF8)) &= ~(1 << (char)v46);
          if ((*(void *)(v35 + 8 * v24) & v25) != 0) {
            goto LABEL_9;
          }
          if (a3)
          {
            if (v16 - 106 <= 0x2B && ((1 << (v16 - 106)) & 0x80080000001) != 0 || v16 == 1) {
              goto LABEL_9;
            }
          }
          else if (v16 == 1 || v16 == 149)
          {
            goto LABEL_9;
          }
          TUI::Instruction::Evaluation::evaluate((double *)&v42[1], *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)v15);
          unsigned __int16 v45 = v16;
          *(void *)(v33 + 8 * v24) |= v25;
          uint64_t v46 = &v45;
          unsigned int v26 = sub_354E8(v32, &v45, (uint64_t)&std::piecewise_construct, &v46);
          *((_DWORD *)v26 + 6) = v42[1];
          objc_storeStrong((id *)v26 + 4, obj);
          id v27 = obj;
          v26[5] = v44;
        }
      }
      else
      {
        TUIValueNotNil(0);
      }
LABEL_9:
      ++v6;
    }
    while (v6 != v5);
  }
  if (TUIReferenceListNotNil(v41))
  {
    uint64_t v28 = -192;
    uint64_t v29 = 144;
    do
    {
      uint64_t v30 = *(void *)(a4 + v29);
      v29 += 8;
      if (v30) {
        BOOL v31 = 1;
      }
      else {
        BOOL v31 = v28 == 0;
      }
      v28 += 64;
    }
    while (!v31);
    if (v30) {
      TUI::Evaluation::Context::computeStyle((TUI::Symbol::Tab **)a1, v41, a4);
    }
  }
}

void sub_FE258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

NSObject *TUI::Evaluation::Context::instantiateNode(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(a1 + 576);
  uint64_t v5 = a2;
  if (*(void *)(v4 + 216) <= (unint64_t)a2
    || (uint64_t v6 = (unsigned __int16 *)(*(void *)(v4 + 208) + 28 * a2)) == 0)
  {
    uint64_t v17 = TUIInstantiationLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_19275C((uint64_t)buf, (uint64_t)[*(id *)(a1 + 16) feedId], v5);
    }
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(v7 + 80) - v8) >> 4);
  uint64_t v10 = v8 + 48 * *v6;
  uint64_t v11 = v7 + 24;
  if (v9 <= *v6) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = v10;
  }
  if (!*(void *)v12)
  {
    uint64_t v17 = TUIInstantiationLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      id v81 = [*(id *)(a1 + 16) feedId];
      double v82 = *(void **)(a1 + 576);
      unint64_t v83 = *v6;
      if (v82[55] <= v83) {
        uint64_t v84 = 0;
      }
      else {
        uint64_t v84 = v82[54] + *(unsigned int *)(v82[56] + 4 * v83);
      }
      *(_DWORD *)buf = 134218242;
      id v102 = v81;
      __int16 v103 = 2082;
      uint64_t v104 = v84;
      _os_log_error_impl(&def_141F14, v17, OS_LOG_TYPE_ERROR, "[fid:%lu] no registered instantiator class for: %{public}s", buf, 0x16u);
    }
LABEL_14:
    uint64_t v18 = 0;
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 552))
  {
    int v13 = *((_DWORD *)v6 + 6);
    if (TUILocationNotNil(v13))
    {
      unint64_t v14 = *(int **)(a1 + 664);
      unint64_t v15 = *(void *)(a1 + 672);
      if ((unint64_t)v14 >= v15)
      {
        uint64_t v20 = *(int **)(a1 + 656);
        uint64_t v21 = v14 - v20;
        if ((unint64_t)(v21 + 1) >> 62) {
          sub_4484();
        }
        unint64_t v22 = v15 - (void)v20;
        unint64_t v23 = (uint64_t)(v15 - (void)v20) >> 1;
        if (v23 <= v21 + 1) {
          unint64_t v23 = v21 + 1;
        }
        if (v22 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v24 = v23;
        }
        if (v24)
        {
          uint64_t v25 = (char *)sub_10790C(a1 + 672, v24);
          unint64_t v14 = *(int **)(a1 + 664);
          uint64_t v20 = *(int **)(a1 + 656);
        }
        else
        {
          uint64_t v25 = 0;
        }
        unsigned int v26 = (int *)&v25[4 * v21];
        id v27 = &v25[4 * v24];
        *unsigned int v26 = v13;
        unsigned int v16 = v26 + 1;
        while (v14 != v20)
        {
          int v28 = *--v14;
          *--unsigned int v26 = v28;
        }
        *(void *)(a1 + 656) = v26;
        *(void *)(a1 + 664) = v16;
        *(void *)(a1 + 672) = v27;
        if (v20) {
          operator delete(v20);
        }
      }
      else
      {
        *unint64_t v14 = v13;
        unsigned int v16 = v14 + 1;
      }
      *(void *)(a1 + 664) = v16;
    }
  }
  uint64_t v29 = *(objc_class **)(v12 + 16);
  if (v29 && (~*(_DWORD *)(v12 + 40) & 0x10000004) != 0) {
    uint64_t v30 = (TUIBoxBuilder *)objc_alloc_init(v29);
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v31 = *(void *)(a1 + 168);
  uint64_t v86 = *((unsigned int *)v6 + 5);
  int v32 = *(_DWORD *)(v12 + 40);
  uint64_t v91 = *(void *)(a1 + 176);
  uint64_t v92 = v6[2];
  BOOL v33 = (v32 & 6) != 0 || v6[2] == 0;
  if (!v33)
  {
    if (v30 && (v32 & 0x10000004) == 0x10000000)
    {
      uint64_t v35 = v30;
      *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v35;
      uint64_t v36 = (void *)(v12 + 24);
LABEL_54:
      *(void *)(a1 + 176) = *v36;
      int v34 = 1;
      goto LABEL_55;
    }
    uint64_t v37 = *(objc_class **)(v12 + 8);
    if ((*(void *)&v32 & 0x80004) == 0x80000 && v37 != 0)
    {
      uint64_t v39 = (TUIBoxBuilder *)objc_alloc_init(v37);
      *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v39;
      uint64_t v36 = (void *)(v12 + 24);
LABEL_53:
      uint64_t v35 = v39;
      goto LABEL_54;
    }
    if ((v32 & 0x4000004) == 0x4000000)
    {
      uint64_t v39 = objc_alloc_init(TUIBoxBuilder);
      *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v39;
      uint64_t v36 = *(void **)(a1 + 24);
      goto LABEL_53;
    }
  }
  int v34 = 0;
  uint64_t v35 = 0;
LABEL_55:
  uint64_t v40 = *(unsigned int *)(v12 + 40);
  unint64_t v41 = v40 | ((unint64_t)*(unsigned __int8 *)(v12 + 44) << 32);
  if ((v40 & 8) != 0)
  {
    int v87 = v34;
    uint64_t v42 = v31;
    uint64_t v89 = v35;
    uint64_t v85 = *((unsigned int *)v6 + 4);
    uint64_t v43 = v6[1];
    sub_FDD58(a1 + 248, (v41 >> 4) & 1);
    if (v43)
    {
      int v44 = *(_DWORD *)(v12 + 40);
      if ((v44 & 0x100) != 0)
      {
        unsigned __int16 v45 = [*(id *)v12 attributesToIgnoreWhenResolving];
        uint64_t v46 = (char *)[v45 _bitset];
        for (uint64_t i = 0; i != 32; i += 8)
          *(void *)(a1 + 424 + i) |= *(void *)&v46[i];

        int v44 = *(_DWORD *)(v12 + 40);
      }
      if ((v44 & 0x400000) != 0)
      {
        *(int8x16_t *)(a1 + 432) = vorrq_s8(*(int8x16_t *)(a1 + 432), (int8x16_t)xmmword_2435D0);
        int v44 = *(_DWORD *)(v12 + 40);
      }
      if ((v44 & 0x40) != 0)
      {
        BOOL v48 = [*(id *)v12 attributesToEvaluate];
        uint64_t v49 = [v48 _bitset];
        long long v50 = v49[1];
        *(_OWORD *)(a1 + 392) = *v49;
        *(_OWORD *)(a1 + 40sub_1265C((uint64_t)this + 8) = v50;
      }
      TUI::Evaluation::Context::computeAttributes(a1, v85 | (v43 << 32), 0, a1 + 248);
    }
    *(_DWORD *)(a1 + 244) = a2;
    LODWORD(v41) = *(_DWORD *)(v12 + 40);
    uint64_t v35 = v89;
    uint64_t v31 = v42;
    int v34 = v87;
  }
  if ((v41 & 0x400) != 0)
  {
    [*(id *)v12 preconfigureBox:v30 context:*(void *)(a1 + 16)];
    LODWORD(v41) = *(_DWORD *)(v12 + 40);
  }
  if ((v41 & 0x8000000) != 0)
  {
    id v51 = v30;
    TUI::Evaluation::Context::configureBox(a1, v51, v52, v5);

    LODWORD(v41) = *(_DWORD *)(v12 + 40);
  }
  if ((v41 & 0x800) != 0 && v30)
  {
    uint64_t v53 = v30;
    [*(id *)v12 configureBox:v53 withNode:v5 attributes:*(void *)(a1 + 16) context:*(void *)(a1 + 16)];

    LODWORD(v41) = *(_DWORD *)(v12 + 40);
  }
  if ((v41 & 0x1000) != 0 && v30) {
    [*(id *)v12 configureObject:v30 withNode:v5 attributes:*(void *)(a1 + 16) context:*(void *)(a1 + 16)];
  }
  if ((v32 & 2) == 0 && (*(_DWORD *)(v12 + 40) & 4) != 0)
  {
    id v54 = (TUIBoxBuilder *)[*(id *)v12 builderWithNode:v5 object:v30 attributes:*(void *)(a1 + 16) context:*(void *)(a1 + 16)];

    *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v54;
    *(void *)(a1 + 176) = *(void *)(v12 + 24);
    if ((*(_DWORD *)(v12 + 40) & 0x10000000) != 0)
    {
      uint64_t v35 = v54;

      int v34 = 1;
      uint64_t v30 = v35;
    }
    else
    {
      int v34 = 1;
      uint64_t v35 = v54;
    }
  }
  uint64_t v55 = *(void *)(a1 + 208);
  if (v55)
  {
    if ((*(_DWORD *)(v55 + 40) & 0x4000) != 0)
    {
      if (v30)
      {
        if ((*(_DWORD *)(v12 + 40) & 0x8000000) != 0)
        {
          uint64_t v56 = *(void *)(a1 + 192);
          if (v56) {
            [*(id *)v55 configureChildBox:v30 withChildNode:v5 attributes:*(void *)(a1 + 16) builder:v56 context:*(void *)(a1 + 16)];
          }
        }
      }
    }
  }
  int v57 = *(_DWORD *)(v12 + 40);
  if ((~v57 & 0x1000008) == 0)
  {
    uint64_t v58 = *(void *)(a1 + 208);
    if (v58)
    {
      if ((*(_DWORD *)(v58 + 40) & 0x2000000) != 0)
      {
        uint64_t v59 = *(void **)(a1 + 192);
        if (v59)
        {
          [v59 configureWithChildNode:v5 attributes:*(void *)(a1 + 16)];
          int v57 = *(_DWORD *)(v12 + 40);
        }
      }
    }
  }
  if ((v57 & 0x8000000) != 0 && v30)
  {
    uint64_t v60 = v30;
    [(TUIBoxBuilder *)v60 _compressStorage];

    int v57 = *(_DWORD *)(v12 + 40);
  }
  if ((v57 & 0x2000) != 0) {
    char v61 = v34;
  }
  else {
    char v61 = 1;
  }
  if ((v61 & 1) == 0) {
    [*(id *)v12 configureContainingBuilder:*(void *)(a1 + 168) withNode:v5 attributes:*(void *)(a1 + 16) context:*(void *)(a1 + 16)];
  }
  uint64_t v88 = v31;
  *(_DWORD *)(a1 + 244) = TUIElementNodeNil;
  sub_FA010(a1 + 248);
  long long v90 = *(_OWORD *)(a1 + 192);
  uint64_t v62 = *(void *)(a1 + 208);
  if (v62 && (*(_DWORD *)(v62 + 40) & 0x200000) != 0)
  {
    *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = 0;
    *(void *)(a1 + 192) = 0;
  }
  char v63 = *(unsigned char *)(a1 + 184);
  int v64 = *(_DWORD *)(v12 + 40);
  if (!v30) {
    goto LABEL_118;
  }
  if ((v64 & 0x20000000) != 0)
  {
    if ((v64 & 0x40000000) != 0) {
      unsigned __int8 v65 = [(TUIBoxBuilder *)v30 allowDynamicWindowInstantiation];
    }
    else {
      unsigned __int8 v65 = 0;
    }
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a1 + 184) & 0xFE | v65;
  }
  if (v92) {
    int v66 = v34;
  }
  else {
    int v66 = 0;
  }
  if (v66 == 1)
  {
    *(void *)(a1 + 192) = v35;
    *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = v12;
    if (v35)
    {
      if ((*(void *)(*(void *)(a1 + 24) + 16) & *(void *)(v12 + 24)) != 0)
      {
        long long v67 = v35;
        *(void *)(a1 + 200) = v67;
      }
    }
  }
  int v64 = *(_DWORD *)(v12 + 40);
  if ((v64 & 0x40000) != 0)
  {
    [*(id *)v12 instantiateNode:v5 withObject:v30 context:*(void *)(a1 + 16)];
  }
  else
  {
LABEL_118:
    if ((v64 & 0x8000) != 0)
    {
      if ((v32 & 2) != 0 && (v64 & 2) == 0
        || ((*(void *)&v64 & 0x10000) == 0 ? (char v68 = 1) : (char v68 = v34), (v68 & 1) != 0))
      {
        BOOL v33 = (*(void *)&v64 & 0x20000) == 0;
        char v69 = v34 ^ 1;
        if (v33) {
          char v69 = 1;
        }
        if (v69)
        {
          if (v92)
          {
            if (objc_opt_respondsToSelector()) {
              [*(id *)(a1 + 168) onlyInstantiateFirstChildPassingConditionForEnumeratorChildren];
            }
            TUI::Evaluation::Context::instantiateChildren(a1, v86 | (v92 << 32));
          }
        }
        else if (v92)
        {
          id v70 = *(id *)v12;
          uint64_t v71 = *(void *)(a1 + 168);
          uint64_t v72 = *(void *)(a1 + 16);
          v93[0] = _NSConcreteStackBlock;
          v93[1] = 3221225472;
          v93[2] = sub_FFF8C;
          v93[3] = &unk_2555E0;
          v93[4] = a1;
          int v94 = v86;
          __int16 v95 = v92;
          __int16 v96 = 0;
          [v70 instantiateChildrenOfNode:v5 object:v30 builder:v71 context:v72 block:v93];
        }
      }
      else if (v92)
      {
        if ((v64 & 2) == 0) {
          *(void *)(a1 + 176) = *(void *)(v12 + 24);
        }
        id v73 = *(id *)v12;
        uint64_t v74 = *(void *)(a1 + 168);
        uint64_t v75 = *(void *)(a1 + 16);
        v97[0] = _NSConcreteStackBlock;
        v97[1] = 3221225472;
        v97[2] = sub_FFA30;
        v97[3] = &unk_2555C0;
        v97[4] = a1;
        int v98 = v86;
        __int16 v99 = v92;
        __int16 v100 = 0;
        [v73 instantiateChildrenOfNode:v5 object:v30 containingBuilder:v74 context:v75 block:v97, v85];
      }
    }
  }
  *(unsigned char *)(a1 + 184) = v63;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = v62;
  *(_OWORD *)(a1 + 192) = v90;
  char v76 = v34 ^ 1;
  if (!v30) {
    char v76 = 1;
  }
  if ((v76 & 1) == 0)
  {
    int v77 = *(_DWORD *)(v12 + 40);
    if ((v77 & 0x80000) != 0)
    {
      [*(id *)v12 configureObject:v30 withBuilder:*(void *)(a1 + 168) context:*(void *)(a1 + 16)];
    }
    else if ((v77 & 0x4000000) != 0)
    {
      BOOL v78 = v30;
      id v79 = *(id *)(a1 + 168);
      id v80 = [v79 finalizeModelsWithParent:v78 box:v78 context:*(void *)(a1 + 16)];
    }
  }
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v88;
  *(void *)(a1 + 176) = v91;
  if (*(unsigned char *)(a1 + 552) && TUILocationNotNil(*((_DWORD *)v6 + 6))) {
    *(void *)(a1 + 664) -= 4;
  }
  uint64_t v17 = v30;

  uint64_t v18 = v17;
LABEL_15:

  return v18;
}

void sub_FEC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::closureForElement(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = TUIClosureNil;
  if (!a2
    || TUI::Package::Buffer::findAttribute(*(void **)(a1 + 576), 1u, *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 2) << 32)) != 65537)
  {
    return v2;
  }
  uint64_t v5 = *(void *)(a1 + 576);
  uint64_t v6 = &TUIValueNil;
  if (*(void *)(v5 + 232) > v4)
  {
    uint64_t v7 = *(void *)(v5 + 224) + 12 * v4;
    if (v7) {
      uint64_t v6 = (int *)v7;
    }
  }
  uint64_t v8 = (TUI::Instruction::Decoder *)*v6;

  return TUI::Evaluation::Context::closure(a1, v8);
}

id TUI::Evaluation::Context::instantiateEnumeratorWithNodes(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, void *a5, uint64_t a6)
{
  id v11 = a5;
  if (*(void *)(a1 + 168) && (uint64_t v12 = a2, TUIEnumeratorNotNil(a2)))
  {
    uint64_t v13 = *(void *)(a1 + 576);
    if (*(void *)(v13 + 264) <= (unint64_t)a2) {
      unint64_t v14 = 0;
    }
    else {
      unint64_t v14 = (_DWORD *)(*(void *)(v13 + 256) + 16 * a2);
    }
    sub_8CC8C((uint64_t)&v26, v14);
    unint64_t v16 = v26;
    unint64_t v17 = v27;
    TUI::Instruction::Evaluation::evaluate((double *)&v26, *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)HIDWORD(v27));
    uint64_t v18 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v26, (TUI::Symbol::Tab **)a1);

    if (objc_opt_respondsToSelector()) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    id v20 = v19;
    if (v20)
    {
      if (objc_opt_respondsToSelector())
      {
        id v21 = (id)objc_opt_class();
        if (objc_opt_respondsToSelector()) {
          id v21 = [*(id *)(a1 + 168) builderClassForDynamicInstantiation];
        }
        id v22 = v21;
        unint64_t v23 = [*(id *)(a1 + 16) snapshotWithClosure:a4];
        unint64_t v15 = [v20 instantiateAsEnumerator:v12 options:v11 flags:a6 builderClass:v22 nodes:a3 snapshot:v23 context:*(void *)(a1 + 16)];
      }
      else
      {
        unint64_t v23 = +[NSString stringWithFormat:@"%@ not allowing dynamic", *(void *)(a1 + 168)];
        TUI::Evaluation::Context::reportError(a1, 1000, v23);
        unint64_t v15 = 0;
      }
    }
    else
    {
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_FFF9C;
      v25[3] = &unk_255600;
      void v25[4] = a1;
      v25[5] = a6;
      v25[6] = a3;
      TUI::Evaluation::Context::enumerate((TUI::Symbol::Tab **)a1, v16, v17, v25);
      unint64_t v15 = 0;
    }
  }
  else
  {
    unint64_t v15 = 0;
  }

  return v15;
}

void sub_FEFCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::configureBox(uint64_t a1, void *a2, uint64_t a3, unsigned int a4)
{
  id v6 = a2;
  uint64_t v7 = TUI::Evaluation::Context::identifierWithNode(a1, a4);
  [v6 setIdentifier:v7];

  unsigned __int16 v81 = 223;
  if ((*(unsigned char *)(a1 + 307) & 0x80) != 0)
  {
    uint64_t v10 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v8 = TUI::Evaluation::ResolvedValue::lengthValue((id *)v10 + 3, (const TUI::Evaluation::Context *)a1);
    uint64_t v9 = v11;
  }
  else
  {
    uint64_t v8 = 0x7FC000007FC00000;
    uint64_t v9 = 0x200007FC00000;
  }
  [v6 setWidth:v8 v9];
  unsigned __int16 v81 = 98;
  if ((*(unsigned char *)(a1 + 292) & 4) != 0)
  {
    unint64_t v14 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v12 = TUI::Evaluation::ResolvedValue::lengthValue((id *)v14 + 3, (const TUI::Evaluation::Context *)a1);
    uint64_t v13 = v15;
  }
  else
  {
    uint64_t v12 = 0x7FC000007FC00000;
    uint64_t v13 = 0x200007FC00000;
  }
  [v6 setHeight:v12, v13];
  unsigned __int16 v81 = 216;
  if (*(unsigned char *)(a1 + 307))
  {
    unint64_t v17 = sub_12E50((void *)(a1 + 352), &v81);
    unint64_t v16 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v17 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    unint64_t v16 = 0;
  }
  [v6 setValign:[TUIBox valignFromString:v16]];

  unsigned __int16 v81 = 96;
  if (*(unsigned char *)(a1 + 292))
  {
    uint64_t v19 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v18 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v19 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    uint64_t v18 = 0;
  }
  [v6 setHalign:[TUIBox halignFromString:v18]];

  unsigned __int16 v81 = 10;
  if ((*(unsigned char *)(a1 + 281) & 4) != 0)
  {
    id v21 = sub_12E50((void *)(a1 + 352), &v81);
    id v20 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v21 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    id v20 = 0;
  }
  [v6 setAnchorPosition:[TUIBox anchorPositionFromString:v20]];

  unsigned __int16 v81 = 168;
  if (*(unsigned char *)(a1 + 301))
  {
    unint64_t v23 = sub_12E50((void *)(a1 + 352), &v81);
    id v22 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v23 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    id v22 = 0;
  }
  [v6 setRenderModelKind:[TUIBox renderModelFromString:v22]];

  unsigned __int16 v81 = 176;
  if ((*(unsigned char *)(a1 + 302) & 1) != 0
    && (unint64_t v24 = sub_12E50((void *)(a1 + 352), &v81),
        TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v24 + 3), (TUI::Symbol::Tab **)a1), (uint64_t v25 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v26 = +[TUIBox roleFromString:v25];
  }
  else
  {
    uint64_t v25 = 0;
    id v26 = [(id)objc_opt_class() defaultRole];
  }
  [v6 setRole:v26];
  unsigned __int16 v81 = 226;
  if ((*(unsigned char *)(a1 + 308) & 4) != 0)
  {
    int v28 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v27 = TUI::Evaluation::ResolvedValue::integerValue((TUI::Evaluation::ResolvedValue *)(v28 + 3), (const TUI::Evaluation::Context *)a1);
  }
  else
  {
    uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
  }
  [v6 setZIndex:v27];
  uint64_t v29 = [*(id *)(a1 + 16) UUID];
  uint64_t v30 = [v6 identifier];
  unsigned __int16 v81 = 108;
  if ((*(unsigned char *)(a1 + 293) & 0x10) != 0)
  {
    int v32 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v31 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v32 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    uint64_t v31 = 0;
  }
  id v33 = +[TUIImpressionData newImpressionWithUUID:v29 identifier:v30 data:v31];
  [v6 setImpressionData:v33];

  unsigned __int16 v81 = 208;
  if (*(unsigned char *)(a1 + 306))
  {
    uint64_t v35 = sub_12E50((void *)(a1 + 352), &v81);
    TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)(v35 + 3), (const TUI::Evaluation::Context *)a1, &v78);
  }
  else
  {
    long long v34 = *(_OWORD *)&CGAffineTransformIdentity.c;
    long long v78 = *(_OWORD *)&CGAffineTransformIdentity.a;
    long long v79 = v34;
    long long v80 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  v77[0] = v78;
  v77[1] = v79;
  v77[2] = v80;
  [v6 setTransform:v77];
  unsigned __int16 v81 = 170;
  if ((*(unsigned char *)(a1 + 301) & 4) != 0)
  {
    uint64_t v37 = sub_12E50((void *)(a1 + 352), &v81);
    TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)(v37 + 3), (const TUI::Evaluation::Context *)a1, &v74);
  }
  else
  {
    long long v36 = *(_OWORD *)&CGAffineTransformIdentity.c;
    long long v74 = *(_OWORD *)&CGAffineTransformIdentity.a;
    long long v75 = v36;
    long long v76 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  v73[0] = v74;
  v73[1] = v75;
  v73[2] = v76;
  [v6 setRenderTransform:v73];
  unsigned __int16 v81 = 119;
  if ((*(unsigned char *)(a1 + 294) & 0x80) != 0)
  {
    uint64_t v39 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v38 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v39 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    uint64_t v38 = 0;
  }
  [v6 setLayoutDirection:[TUIBox interfaceLayoutDirectionFromString:v38]];

  unsigned __int16 v81 = 124;
  if ((*(unsigned char *)(a1 + 295) & 0x10) != 0)
  {
    unint64_t v41 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v40 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v41 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    uint64_t v40 = 0;
  }
  [v6 setLiveTransformKind:[TUIBox liveTransformFromString:v40]];

  unsigned __int16 v81 = 169;
  if ((*(unsigned char *)(a1 + 301) & 2) != 0)
  {
    uint64_t v46 = sub_12E50((void *)(a1 + 352), &v81);
    double top = TUI::Evaluation::ResolvedValue::insetsValue((id *)v46 + 3, (const TUI::Evaluation::Context *)a1);
  }
  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }
  [v6 setRenderOutsets:top, left, bottom, right];
  int v47 = sub_102CA8((TUI::Evaluation::Context *)a1);
  [v6 setGuides:v47];

  unsigned __int16 v81 = 164;
  if ((*(unsigned char *)(a1 + 300) & 0x10) != 0)
  {
    uint64_t v49 = sub_12E50((void *)(a1 + 352), &v81);
    BOOL v48 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v49 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    BOOL v48 = 0;
  }
  [v6 setRefId:v48];

  unsigned __int16 v81 = 165;
  if ((*(unsigned char *)(a1 + 300) & 0x20) != 0)
  {
    id v51 = sub_12E50((void *)(a1 + 352), &v81);
    long long v50 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v51 + 3), (TUI::Symbol::Tab **)a1);
  }
  else
  {
    long long v50 = 0;
  }
  [v6 setRefInstance:v50];

  unsigned __int16 v81 = 17;
  uint64_t v52 = *(void *)(a1 + 280);
  if ((v52 & 0x20000) != 0)
  {
    uint64_t v53 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxAdjustable:[TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v53 + 3), (const TUI::Evaluation::Context *)a1)]];
    uint64_t v52 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 18;
  if ((v52 & 0x40000) != 0)
  {
    id v54 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxButton:[TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v54 + 3), (const TUI::Evaluation::Context *)a1)]];
    uint64_t v52 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 20;
  if ((v52 & 0x100000) != 0)
  {
    uint64_t v56 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxDisabled:[TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v56 + 3), (const TUI::Evaluation::Context *)a1)]];
  }
  else
  {
    unsigned __int16 v81 = 74;
    if ((*(unsigned char *)(a1 + 289) & 4) != 0)
    {
      uint64_t v55 = sub_12E50((void *)(a1 + 352), &v81);
      [v6 setAxDisabled:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v55 + 3), (const TUI::Evaluation::Context *)a1) ^ 1];
    }
  }
  unsigned __int16 v81 = 21;
  uint64_t v57 = *(void *)(a1 + 280);
  if ((v57 & 0x200000) != 0)
  {
    uint64_t v58 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAXElement:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v58 + 3), (const TUI::Evaluation::Context *)a1)];
    uint64_t v57 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 25;
  if ((v57 & 0x2000000) != 0)
  {
    uint64_t v59 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxImage:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v59 + 3), (const TUI::Evaluation::Context *)a1)];
    uint64_t v57 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 24;
  if ((v57 & 0x1000000) != 0)
  {
    char v61 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v60 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v61 + 3), (TUI::Symbol::Tab **)a1);
    if (v60) {
      [v6 setAxIdentifier:v60];
    }
  }
  else
  {
    uint64_t v60 = 0;
  }
  unsigned __int16 v81 = 26;
  if ((*(unsigned char *)(a1 + 283) & 4) != 0)
  {
    char v63 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v62 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v63 + 3), (TUI::Symbol::Tab **)a1);
    if (v62) {
      [v6 setAxLabel:v62];
    }
  }
  else
  {
    uint64_t v62 = 0;
  }
  unsigned __int16 v81 = 22;
  uint64_t v64 = *(void *)(a1 + 280);
  if ((v64 & 0x400000) != 0)
  {
    unsigned __int8 v65 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxHeading:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v65 + 3), (const TUI::Evaluation::Context *)a1)];
    uint64_t v64 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 23;
  if ((v64 & 0x800000) != 0)
  {
    long long v67 = sub_12E50((void *)(a1 + 352), &v81);
    int v66 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v67 + 3), (TUI::Symbol::Tab **)a1);
    if (v66) {
      [v6 setAxHint:v66];
    }
  }
  else
  {
    int v66 = 0;
  }
  unsigned __int16 v81 = 27;
  uint64_t v68 = *(void *)(a1 + 280);
  if ((v68 & 0x8000000) != 0)
  {
    char v69 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxToggle:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v69 + 3), (const TUI::Evaluation::Context *)a1)];
    uint64_t v68 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 28;
  if ((v68 & 0x10000000) != 0)
  {
    id v70 = sub_12E50((void *)(a1 + 352), &v81);
    [v6 setAxTouchContainer:TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v70 + 3), (const TUI::Evaluation::Context *)a1)];
    uint64_t v68 = *(void *)(a1 + 280);
  }
  unsigned __int16 v81 = 29;
  if ((v68 & 0x20000000) != 0)
  {
    uint64_t v72 = sub_12E50((void *)(a1 + 352), &v81);
    uint64_t v71 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v72 + 3), (TUI::Symbol::Tab **)a1);
    if (v71) {
      [v6 setAxValue:v71];
    }
  }
  else
  {
    uint64_t v71 = 0;
  }
}

void sub_FF944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_FFA30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  *(void *)(v2 + 16sub_1265C((uint64_t)this + 8) = a2;
  return TUI::Evaluation::Context::instantiateChildren(v2, *(void *)(a1 + 40));
}

void TUI::Evaluation::Context::instantiateChildren(const TUI::Evaluation::Context *a1, uint64_t a2, char a3)
{
  uint64_t v3 = WORD2(a2);
  if (WORD2(a2))
  {
    char v4 = a3;
    unsigned int v5 = a2;
    do
    {
      uint64_t v7 = *((void *)a1 + 72);
      if (*(void *)(v7 + 216) <= (unint64_t)v5
        || (uint64_t v8 = (unsigned __int16 *)(*(void *)(v7 + 208) + 28 * v5)) == 0)
      {
        uint64_t v25 = TUIInstantiationLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          id v32 = [*((id *)a1 + 2) feedId];
          *(_DWORD *)buf = 134218240;
          *(void *)uint64_t v49 = v32;
          *(_WORD *)&v49[8] = 2048;
          *(void *)&v49[10] = v5;
          _os_log_error_impl(&def_141F14, v25, OS_LOG_TYPE_ERROR, "[fid:%lu] failed to find child element: %lu", buf, 0x16u);
        }
        goto LABEL_24;
      }
      uint64_t v9 = *((void *)a1 + 3);
      uint64_t v10 = *(void *)(v9 + 72);
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(v9 + 80) - v10) >> 4);
      uint64_t v12 = v10 + 48 * *v8;
      uint64_t v13 = v9 + 24;
      if (v11 <= *v8) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = v12;
      }
      char v15 = *(_DWORD *)(v14 + 40);
      if ((*(_DWORD *)(v14 + 40) & 1) == 0)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        if (!v16 || (v16 & ~*((void *)a1 + 22)) != 0)
        {
          uint64_t v25 = TUIInstantiationLog();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          {
            id v26 = [*((id *)a1 + 2) feedId];
            uint64_t v27 = (void *)*((void *)a1 + 72);
            unint64_t v28 = *v8;
            if (v27[55] <= v28) {
              uint64_t v29 = 0;
            }
            else {
              uint64_t v29 = v27[54] + *(unsigned int *)(v27[56] + 4 * v28);
            }
            long long v36 = (objc_class *)objc_opt_class();
            NSStringFromClass(v36);
            id v37 = (id)objc_claimAutoreleasedReturnValue();
            uint64_t v38 = *((void *)a1 + 4);
            if (v38)
            {
              unsigned __int16 v45 = TUI::ElementInstantiating::BuilderCache::description(*((void *)a1 + 4), *(void *)(v14 + 32));
              uint64_t v42 = *((void *)a1 + 4);
              if (v42)
              {
                uint64_t v43 = TUI::ElementInstantiating::BuilderCache::description(v42, *((void *)a1 + 22));
                char v41 = 0;
                uint64_t v39 = v45;
                int v44 = (void *)v43;
                uint64_t v40 = v43;
              }
              else
              {
                uint64_t v40 = 0;
                char v41 = 1;
                uint64_t v39 = v45;
              }
            }
            else
            {
              uint64_t v39 = 0;
              uint64_t v40 = 0;
              char v41 = 1;
            }
            *(_DWORD *)buf = 134219010;
            *(void *)uint64_t v49 = v26;
            *(_WORD *)&v49[8] = 2082;
            *(void *)&v49[10] = v29;
            __int16 v50 = 2114;
            id v51 = v37;
            __int16 v52 = 2112;
            uint64_t v53 = v39;
            __int16 v54 = 2112;
            uint64_t v55 = v40;
            _os_log_error_impl(&def_141F14, v25, OS_LOG_TYPE_ERROR, "[fid:%lu] child element name=%{public}s not allowed by current builder %{public}@; required:%@ builder:%@",
              buf,
              0x34u);
            if ((v41 & 1) == 0) {

            }
            char v4 = a3;
            if (v38) {
          }
            }
LABEL_24:

          goto LABEL_25;
        }
      }
      if ((v4 & 1) == 0)
      {
        unint64_t v17 = (TUI::Instruction::Decoder *)*((unsigned int *)v8 + 2);
        if (!TUIConditionIsNil(*((_DWORD *)v8 + 2)))
        {
          TUI::Evaluation::Context::resolve((uint64_t)a1, v17, (uint64_t)buf);
          unsigned int v18 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)buf, a1);

          if (!v18) {
            goto LABEL_25;
          }
        }
      }
      unint64_t v19 = *(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32);
      if ((v19 & 0x1F80000000) != 0)
      {
        uint64_t v21 = *((void *)a1 + 27);
        uint64_t v20 = *((void *)a1 + 28);
        int v22 = *((_DWORD *)a1 + 60);
        uint64_t v46 = *((void *)a1 + 29);
        if ((v19 & 0x1000000000) != 0)
        {
          if (v20) {
            *((void *)a1 + 27) = v20;
          }
          *((_DWORD *)a1 + 60) = v5;
          uint64_t v23 = *((void *)a1 + 76);
          *((void *)a1 + 2sub_1265C((uint64_t)this + 8) = 0;
          *((void *)a1 + 29) = v23;
          unint64_t v19 = *(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32);
        }
        (*(void (**)(void, unint64_t))(**(void **)a1 + 72))(*(void *)a1, (v19 >> 31) & 0x3F);
        if ((a3 & 4) != 0 || (*(_DWORD *)(v14 + 40) & 0x400000) == 0)
        {
          uint64_t v24 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, v5);
        }
        else
        {
          uint64_t v24 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, v5, v14);
        }
        uint64_t v31 = (void *)v24;
        (*(void (**)(void))(**(void **)a1 + 80))();
        if (((*(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32)) & 0x1000000000) != 0) {
          *((void *)a1 + 2sub_1265C((uint64_t)this + 8) = v20;
        }
        *((void *)a1 + 27) = v21;
        *((_DWORD *)a1 + 60) = v22;
        char v4 = a3;
        *((void *)a1 + 29) = v46;
        if ((v15 & 1) == 0) {
          goto LABEL_42;
        }
      }
      else
      {
        if ((v4 & 4) != 0 || (*(_DWORD *)(v14 + 40) & 0x400000) == 0)
        {
          uint64_t v30 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, v5);
        }
        else
        {
          uint64_t v30 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, v5, v14);
        }
        uint64_t v31 = (void *)v30;
        uint64_t v33 = *((void *)a1 + 28);
        if (v33) {
          *((void *)a1 + 27) = v33;
        }
        *((void *)a1 + 2sub_1265C((uint64_t)this + 8) = 0;
        if ((v15 & 1) == 0)
        {
LABEL_42:
          if (v31)
          {
            int v34 = *(_DWORD *)(v14 + 40);
            if ((v34 & 0x100000) != 0)
            {
              [*(id *)v14 addObject:v31 toContainingBuilder:*((void *)a1 + 21) context:*((void *)a1 + 2)];
            }
            else if ((v34 & 0x8000000) != 0)
            {
              id v35 = *((id *)a1 + 21);
              [v35 addBox:v31];
            }
          }
        }
      }

      if ((v4 & 2) != 0) {
        return;
      }
LABEL_25:
      ++v5;
      --v3;
    }
    while (v3);
  }
}

void sub_FFF1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_FFF8C(uint64_t a1)
{
  return TUI::Evaluation::Context::instantiateChildren(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

uint64_t sub_FFF9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (objc_opt_respondsToSelector()) {
    [*(id *)(v2 + 168) onlyInstantiateFirstChildPassingConditionForEnumeratorChildren];
  }
  char v3 = *(unsigned char *)(v2 + 184);
  *(unsigned char *)(v2 + 184) = v3 & 0xFE | ((*(_DWORD *)(a1 + 40) & 2) != 0);
  uint64_t result = TUI::Evaluation::Context::instantiateChildren(v2, *(void *)(a1 + 48));
  *(unsigned char *)(v2 + 184) = v3;
  return result;
}

id TUI::Evaluation::Context::instantiateEntry(id *a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong(a1 + 94, a2);
  uint64_t v5 = [v4 actionObject];
  id v6 = a1[68];
  a1[68] = (id)v5;

  uint64_t v7 = [v4 aTemplate];
  id v8 = a1[95];
  a1[95] = (id)v7;

  (*(void (**)(id, uint64_t))(*(void *)*a1 + 72))(*a1, 1);
  id v9 = *a1;
  uint64_t v10 = [v4 bindings];
  unint64_t v11 = [v10 data];
  (*(void (**)(id, void *))(*(void *)v9 + 88))(v9, v11);

  uint64_t v12 = [v4 aTemplate];
  uint64_t v13 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, [v12 rootElementNode]);

  (*(void (**)(void))(*(void *)*a1 + 80))();
  id v14 = a1[68];
  a1[68] = 0;

  id v15 = a1[94];
  a1[94] = 0;

  id v16 = a1[95];
  a1[95] = 0;

  a1[92] = 0;
  a1[21] = 0;

  return v13;
}

void sub_1001C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::updateEntryWithBuilderEnvironmentContainer(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  unint64_t v11 = *(void **)(a1 + 544);
  id v35 = v11;
  uint64_t v12 = *(void **)(a1 + 752);
  id v34 = v12;
  uint64_t v13 = *(void **)(a1 + 760);
  id v14 = v13;
  uint64_t v32 = *(void *)(a1 + 736);
  id v33 = v14;
  uint64_t v30 = *(void *)(a1 + 168);
  uint64_t v31 = *(void *)(a1 + 208);
  uint64_t v29 = *(void *)(a1 + 176);
  objc_storeStrong((id *)(a1 + 752), a2);
  long long v36 = v10;
  id v37 = v9;
  uint64_t v15 = [v8 actionObject];
  id v16 = *(void **)(a1 + 544);
  *(void *)(a1 + 544) = v15;

  uint64_t v17 = [v8 aTemplate];
  unsigned int v18 = *(void **)(a1 + 760);
  *(void *)(a1 + 760) = v17;

  uint64_t v19 = *(void *)(a1 + 592);
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v9;
  uint64_t v20 = *(os_unfair_lock_s **)(a1 + 32);
  if (v20)
  {
    uint64_t v21 = (objc_class *)objc_opt_class();
    uint64_t v22 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v20, v21);
  }
  else
  {
    uint64_t v22 = **(void **)(a1 + 24);
  }
  *(void *)(a1 + 176) = v22;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(a1 + 736) = v10;
  uint64_t v23 = *(void *)(a1 + 576);
  uint64_t v24 = [v8 aTemplate];
  unsigned int v25 = [v24 rootElementNode];
  if (*(void *)(v23 + 216) <= (unint64_t)v25)
  {
  }
  else
  {
    uint64_t v26 = *(void *)(v23 + 208) + 28 * v25;

    if (v26) {
      TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v26 + 20) | ((unint64_t)*(unsigned __int16 *)(v26 + 4) << 32), 0);
    }
  }
  uint64_t v27 = *(void *)(a1 + 592);
  *(void *)(a1 + 592) = v19;
  objc_storeStrong((id *)(a1 + 544), v11);
  objc_storeStrong((id *)(a1 + 752), v12);
  objc_storeStrong((id *)(a1 + 760), v13);
  *(void *)(a1 + 736) = v32;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = v31;
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v30;
  *(void *)(a1 + 176) = v29;
  if (([v37 containsSingleComponent] & 1) == 0) {
    v27 |= (*(uint64_t (**)(void))(**(void **)a1 + 216))();
  }

  return v27;
}

void sub_100434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::includeTemplate(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v4 = (void **)(a1 + 760);
  id v5 = *(id *)(a1 + 760);
  objc_storeStrong((id *)(a1 + 760), a2);
  unsigned int v6 = [v11 rootElementNode];
  uint64_t v7 = *(void *)(a1 + 576);
  if (*(void *)(v7 + 216) > (unint64_t)v6)
  {
    uint64_t v8 = *(void *)(v7 + 208) + 28 * v6;
    if (v8)
    {
      TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v8 + 20) | ((unint64_t)*(unsigned __int16 *)(v8 + 4) << 32), 0);
    }
  }
  id v10 = *v4;
  *id v4 = v5;
}

void sub_100554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateEnumeratorWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, char a8, void *a9, void *a10)
{
  id v38 = a3;
  id v37 = a9;
  id v14 = a10;
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 208);
  char v36 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v14;
  uint64_t v19 = *(os_unfair_lock_s **)(a1 + 32);
  if (v19)
  {
    uint64_t v20 = (objc_class *)objc_opt_class();
    uint64_t v21 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v19, v20);
  }
  else
  {
    uint64_t v21 = **(void **)(a1 + 24);
  }
  *(void *)(a1 + 176) = v21;
  *(void *)(a1 + 192) = v14;
  BOOL v22 = TUIEnumeratorNotNil(a2);
  if ((a7 & 0xFFFF00000000) != 0 && v22)
  {
    uint64_t v24 = *(void *)(a1 + 576);
    if (*(void *)(v24 + 264) <= (unint64_t)a2) {
      unsigned int v25 = 0;
    }
    else {
      unsigned int v25 = (_DWORD *)(*(void *)(v24 + 256) + 16 * a2);
    }
    sub_8CC8C((uint64_t)&v40, v25);
    unint64_t v28 = v40;
    Entry v27 = (Entry)v41;
    if (objc_opt_respondsToSelector())
    {
      unsigned int v29 = [*(id *)(a1 + 168) onlyInstantiateFirstChildPassingConditionForEnumeratorChildren];
      uint64_t v30 = 2;
      if (!v29) {
        uint64_t v30 = 0;
      }
    }
    else
    {
      uint64_t v30 = 0;
    }
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a1 + 184) & 0xFE | ((a8 & 2) != 0);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10090C;
    v39[3] = &unk_255600;
    v39[6] = a7;
    void v39[4] = a1;
    v39[5] = v30 & 0xFFFFFFFFFFFFFFFBLL | (4 * (a8 & 1));
    Entry v31 = v27;
    uint64_t v26 = TUI::Evaluation::Context::evaluateEnumeratorWithBlock((void *)a1, v28, v31, v38, a4, a5, a6, v39);
  }
  else
  {
    uint64_t v26 = 0;
  }
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v15;
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 192) = v17;
  *(void *)(a1 + 20sub_1265C((uint64_t)this + 8) = v18;
  *(unsigned char *)(a1 + 184) = v36;

  return v26;
}

void sub_100770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateEnumeratorWithBlock(void *a1, unint64_t a2, Entry a3, void *a4, uint64_t a5, uint64_t a6, int a7, void *a8)
{
  id v15 = a4;
  id v16 = a8;
  uint64_t v28 = 0;
  unsigned int v29 = &v28;
  uint64_t v30 = 0x2020000000;
  uint64_t v31 = 0;
  if (v16)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_102E84;
    v20[3] = &unk_2556B0;
    uint64_t v24 = a1;
    uint64_t v25 = a5;
    uint64_t v26 = a6;
    id v21 = v15;
    int v27 = a7;
    id v22 = v16;
    uint64_t v23 = &v28;
    Entry v17 = a3;
    TUI::Evaluation::Context::evaluateEnumerator(a1, a2, v17, v20);

    uint64_t v18 = v29[3];
  }
  else
  {
    uint64_t v18 = 0;
  }
  _Block_object_dispose(&v28, 8);

  return v18;
}

void sub_1008DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10090C(uint64_t a1)
{
}

uint64_t TUI::Evaluation::Context::evaluateBindingWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, char a8, uint64_t a9, void *a10)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  id v15 = a3;
  id v16 = a10;
  uint64_t v18 = *(void *)(a1 + 168);
  uint64_t v17 = *(void *)(a1 + 176);
  char v19 = *(unsigned char *)(a1 + 184);
  uint64_t v20 = **(void **)(a1 + 24);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v16;
  *(void *)(a1 + 176) = v20;
  BOOL IsValid = TUINameIsValid(a2);
  if ((a7 & 0xFFFF00000000) != 0 && IsValid)
  {
    unint64_t v31 = TUI::Package::Enumerator::Entry::binding((TUI::Package::Enumerator::Entry *)a2, v22);
    Entry v25 = v24;
    if (objc_opt_respondsToSelector())
    {
      unsigned int v26 = [*(id *)(a1 + 168) onlyInstantiateFirstChildPassingConditionForEnumeratorChildren:v31, v32, v33];
      uint64_t v27 = 2;
      if (!v26) {
        uint64_t v27 = 0;
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a1 + 184) & 0xFE | ((a8 & 2) != 0);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    v34[2] = sub_100AC4;
    id v34[3] = &unk_255600;
    v34[6] = a7;
    void v34[4] = a1;
    v34[5] = v27 & 0xFFFFFFFFFFFFFFFBLL | (4 * (a8 & 1));
    Entry v29 = v25;
    uint64_t v28 = TUI::Evaluation::Context::evaluateEnumeratorWithBlock((void *)a1, v31, v29, v15, v32, v33, a6, v34);
  }
  else
  {
    uint64_t v28 = 0;
  }
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v18;
  *(void *)(a1 + 176) = v17;
  *(unsigned char *)(a1 + 184) = v19;

  return v28;
}

void sub_100AA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100AC4(uint64_t a1)
{
}

void TUI::Evaluation::Context::evaluateEnumeratorWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  uint64_t v14 = *(void *)(a1 + 168);
  uint64_t v15 = *(void *)(a1 + 176);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v13;
  *(void *)(a1 + 176) = **(void **)(a1 + 24);
  BOOL v16 = TUIEnumeratorNotNil(a2);
  if ((a4 & 0xFFFF00000000) != 0 && v16)
  {
    uint64_t v18 = *(void *)(a1 + 576);
    if (*(void *)(v18 + 264) <= (unint64_t)a2) {
      char v19 = 0;
    }
    else {
      char v19 = (_DWORD *)(*(void *)(v18 + 256) + 16 * a2);
    }
    sub_8CC8C((uint64_t)&v27, v19);
    unint64_t v20 = v27;
    Entry v21 = (Entry)v28;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_100C6C;
    v23[3] = &unk_255628;
    uint64_t v25 = a1;
    id v24 = v11;
    uint64_t v26 = a4;
    Entry v22 = v21;
    TUI::Evaluation::Context::evaluateEnumerator((void *)a1, v20, v22, v23);
  }
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v14;
  *(void *)(a1 + 176) = v15;
}

void sub_100C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(const TUI::Evaluation::Context **)(a1 + 40);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a3);
  objc_storeStrong((id *)(v5 + 32), *(id *)(a1 + 32));
  uint64_t v6 = *(void *)(a1 + 48);

  TUI::Evaluation::Context::instantiateChildren(v4, v6, 0);
}

void TUI::Evaluation::Context::evaluateBindingWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v10 = a3;
  id v11 = a6;
  uint64_t v12 = *(void *)(a1 + 168);
  uint64_t v13 = *(void *)(a1 + 176);
  uint64_t v14 = **(void **)(a1 + 24);
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v11;
  *(void *)(a1 + 176) = v14;
  BOOL IsValid = TUINameIsValid(a2);
  if ((a4 & 0xFFFF00000000) != 0 && IsValid)
  {
    unint64_t v18 = TUI::Package::Enumerator::Entry::binding((TUI::Package::Enumerator::Entry *)a2, v16);
    Entry v20 = v19;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100E38;
    _OWORD v22[3] = &unk_255628;
    uint64_t v24 = a1;
    id v23 = v10;
    uint64_t v25 = a4;
    Entry v21 = v20;
    TUI::Evaluation::Context::evaluateEnumerator((void *)a1, v18, v21, v22);
  }
  *(void *)(a1 + 16sub_1265C((uint64_t)this + 8) = v12;
  *(void *)(a1 + 176) = v13;
}

void sub_100E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(const TUI::Evaluation::Context **)(a1 + 40);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a3);
  objc_storeStrong((id *)(v5 + 32), *(id *)(a1 + 32));
  uint64_t v6 = *(void *)(a1 + 48);

  TUI::Evaluation::Context::instantiateChildren(v4, v6, 0);
}

id TUI::Evaluation::Context::instantiateAnimationReference(void *a1, unint64_t a2)
{
  if (TUIReferenceListNotNil(a2))
  {
    uint64_t v68 = a1[22];
    uint64_t v69 = a1[21];
    id v4 = (void *)a1[72];
    id v70 = objc_opt_new();
    if (!HIDWORD(a2))
    {
LABEL_3:
      uint64_t v5 = v70;
      [v70 sortUsingComparator:&stru_255668];
      a1[21] = v69;
      a1[22] = v68;
      goto LABEL_5;
    }
    uint64_t v7 = 0;
    uint64_t v74 = a2;
    id v73 = a1 + 62;
    uint64_t v66 = (uint64_t)(a1 + 31);
    uint64_t v64 = a1 + 49;
    unsigned __int8 v65 = a1 + 53;
    if (HIDWORD(a2) <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = HIDWORD(a2);
    }
    uint64_t v67 = v8;
    while (1)
    {
      if (v4[19] <= (unint64_t)(v7 + v74)) {
        goto LABEL_62;
      }
      uint64_t v9 = v4[18] + 12 * (v7 + v74);
      if (!v9) {
        goto LABEL_62;
      }
      int v10 = *(unsigned __int16 *)(v9 + 2);
      uint64_t v11 = *(unsigned int *)(v9 + 8);
      uint64_t v12 = *(unsigned __int16 *)(v9 + 6);
      int v13 = *(unsigned __int16 *)(v9 + 4);
      unsigned int v75 = v10 | (v13 << 16);
      if (v13 == 0xFFFF || v10 == 0xFFFF) {
        goto LABEL_62;
      }
      if (!sub_270E0(v73, (unsigned __int16 *)&v75)) {
        break;
      }
      unint64_t v72 = v72 & 0xFFFFFFFF00000000 | v75;
      uint64_t v15 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v72);
      TUI::Evaluation::Context::reportError((uint64_t)a1, 1002, v15);

LABEL_62:
      if (++v7 == v8) {
        goto LABEL_3;
      }
    }
    Entry v16 = objc_alloc_init(TUIAnimationBuilder);
    a1[21] = v16;
    a1[22] = *(void *)(a1[3] + 8);
    uint64_t v71 = v16;
    sub_1082BC((uint64_t)v73, (unsigned __int16 *)&v75, &v75);
    uint64_t v17 = (*(uint64_t (**)(void, void))(*(void *)*a1 + 32))(*a1, v75);
    uint64_t v19 = v17;
    uint64_t v20 = v18;
    if (v18 == -1)
    {
      unint64_t v22 = TUIAnimationDefinitionNil;
      unint64_t v23 = unk_2DD58C;
    }
    else
    {
      unint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 56))(v17, v18);
      unint64_t v22 = v21;
      unint64_t v23 = HIDWORD(v21);
    }
    if (v4[27] <= v23 || (v24 = v4[26], (uint64_t v25 = (unsigned __int16 *)(v24 + 28 * v23)) == 0))
    {
      int v47 = TUIInstantiationLog();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        id v57 = [(id)a1[2] feedId];
        *(_DWORD *)buf = 134217984;
        id v77 = v57;
        _os_log_error_impl(&def_141F14, v47, OS_LOG_TYPE_ERROR, "[fid:%lu] invalid animation defintion node", buf, 0xCu);
      }

      goto LABEL_61;
    }
    unint64_t v62 = v23;
    uint64_t v63 = v24 + 28 * v23;
    uint64_t v26 = a1[3];
    unint64_t v27 = *v25;
    uint64_t v28 = *(void *)(v26 + 72);
    unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(v26 + 80) - v28) >> 4);
    uint64_t v30 = v28 + 48 * v27;
    uint64_t v31 = v26 + 24;
    if (v29 > v27) {
      uint64_t v31 = v30;
    }
    char v61 = *(void **)v31;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 44);
    uint64_t v33 = *(unsigned int *)(v31 + 40);
    unint64_t v34 = v22;
    if (!TUIDefinitionNotNil(v22))
    {
      unint64_t v60 = v60 & 0xFFFFFFFF00000000 | v75;
      BOOL v48 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v60);
      TUI::Evaluation::Context::reportError((uint64_t)a1, 1006, v48);
LABEL_60:

      uint64_t v56 = (uint64_t *)sub_270E0(v73, (unsigned __int16 *)&v75);
      sub_34E00(v73, v56);
LABEL_61:

      uint64_t v8 = v67;
      goto LABEL_62;
    }
    unint64_t v59 = v33 | (v32 << 32);
    if (v4[23] <= v34
      || (uint64_t v35 = v4[22] + 12 * v34) == 0
      || (uint64_t v36 = *(unsigned int *)(v35 + 8), v36 == -1))
    {
      id v38 = v71;
      if (v11 != -1)
      {
        unint64_t v58 = v58 & 0xFFFFFFFF00000000 | v75;
        uint64_t v49 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v58);
        TUI::Evaluation::Context::reportError((uint64_t)a1, 1018, v49);

        id v38 = v71;
LABEL_57:
        BOOL v48 = -[TUIAnimationBuilder finalizeAnimationWithContext:](v38, "finalizeAnimationWithContext:", a1[2], v58);
        if (v48) {
          [v70 addObject:v48];
        }
        a1[21] = 0;
        goto LABEL_60;
      }
      (*(void (**)(void, uint64_t))(*(void *)*a1 + 72))(*a1, 3);
      (*(void (**)(void, uint64_t, uint64_t))(*(void *)*a1 + 136))(*a1, v19, v20);
      if ((v59 & 8) != 0)
      {
        uint64_t v39 = *(unsigned int *)(v63 + 16);
        uint64_t v40 = *(unsigned __int16 *)(v63 + 2);
        sub_FDD58(v66, (v59 >> 5) & 1);
        if (v40)
        {
          if ((v59 & 0x200) != 0)
          {
            __int16 v50 = [v61 attributesToIgnoreWhenResolvingInvocation];
            id v51 = (char *)[v50 _bitset];
            for (uint64_t i = 0; i != 4; ++i)
              v65[i] |= *(void *)&v51[i * 8];

            id v38 = v71;
          }
          if ((v59 & 0x80) != 0)
          {
            uint64_t v53 = [v61 attributesToEvaluateForInvocation];
            __int16 v54 = [v53 _bitset];
            long long v55 = v54[1];
            *uint64_t v64 = *v54;
            *(_OWORD *)(a1 + 51) = v55;

            id v38 = v71;
          }
          goto LABEL_54;
        }
LABEL_55:
        *((_DWORD *)a1 + 61) = v62;
      }
    }
    else
    {
      uint64_t v37 = *(unsigned __int16 *)(v35 + 6);
      id v38 = v71;
      (*(void (**)(void, uint64_t))(*(void *)*a1 + 72))(*a1, 3);
      TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v11 | (v12 << 32));
      (*(void (**)(void, uint64_t, uint64_t))(*(void *)*a1 + 136))(*a1, v19, v20);
      TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v36 | (v37 << 32));
      if ((v59 & 8) != 0)
      {
        uint64_t v39 = *(unsigned int *)(v63 + 16);
        uint64_t v40 = *(unsigned __int16 *)(v63 + 2);
        sub_FDD58(v66, (v59 >> 5) & 1);
        if (v40)
        {
          if ((v59 & 0x200) != 0)
          {
            uint64_t v41 = [v61 attributesToIgnoreWhenResolvingInvocation];
            uint64_t v42 = (char *)[v41 _bitset];
            for (uint64_t j = 0; j != 4; ++j)
              v65[j] |= *(void *)&v42[j * 8];

            id v38 = v71;
          }
          if ((v59 & 0x80) != 0)
          {
            int v44 = [v61 attributesToEvaluateForInvocation];
            unsigned __int16 v45 = [v44 _bitset];
            long long v46 = v45[1];
            *uint64_t v64 = *v45;
            *(_OWORD *)(a1 + 51) = v46;

            id v38 = v71;
          }
LABEL_54:
          TUI::Evaluation::Context::computeAttributes((uint64_t)a1, v39 | (v40 << 32), 0, v66);
          goto LABEL_55;
        }
        goto LABEL_55;
      }
    }
    [(TUIAnimationBuilder *)v38 configureWithNode:v62 attributes:a1[2]];
    *((_DWORD *)a1 + 61) = TUIElementNodeNil;
    sub_FA010(v66);
    TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v63 + 20) | ((unint64_t)*(unsigned __int16 *)(v63 + 4) << 32), 0);
    (*(void (**)(void))(*(void *)*a1 + 168))();
    (*(void (**)(void))(*(void *)*a1 + 80))();
    goto LABEL_57;
  }
  uint64_t v5 = 0;
LABEL_5:

  return v5;
}

void sub_1015E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

int64_t sub_1016A8(id a1, TUIAnimation *a2, TUIAnimation *a3)
{
  id v4 = a3;
  [(TUIAnimation *)a2 delay];
  double v6 = v5;
  [(TUIAnimation *)v4 delay];
  if (v6 >= v7) {
    int64_t v8 = v6 > v7;
  }
  else {
    int64_t v8 = -1;
  }

  return v8;
}

void sub_101708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateElementReferenceWithChildrenOfNode(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4 = *(void *)(a1 + 576);
  if (*(void *)(v4 + 216) > (unint64_t)a3
    && (uint64_t v6 = *(void *)(v4 + 208) + 28 * a3) != 0
    && TUIElementReferenceNotNil(a2))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10181C;
    void v8[3] = &unk_255688;
    int v9 = a2;
    v8[4] = a1;
    void v8[5] = v6;
    v8[6] = v4;
    TUI::Evaluation::Context::evaluateWithNodeIdentifier(a1, a3, v8);
  }
  else
  {
    TUI::Evaluation::Context::reportError(a1, 1011, 0);
  }
}

void sub_10181C(uint64_t a1)
{
  uint64_t v2 = *(const TUI::Evaluation::Context **)(a1 + 32);
  uint64_t v3 = *((void *)v2 + 72);
  unint64_t v4 = *(unsigned int *)(a1 + 56);
  if (*(void *)(v3 + 152) > v4 && (uint64_t v5 = *(void *)(v3 + 144) + 12 * v4) != 0)
  {
    uint64_t v88 = *(unsigned __int16 *)(v5 + 2);
    unint64_t v85 = *(unsigned int *)(v5 + 8);
    int v86 = *(unsigned __int16 *)(v5 + 4) << 16;
    unint64_t v82 = (unint64_t)*(unsigned __int16 *)(v5 + 6) << 32;
  }
  else
  {
    unint64_t v82 = 0;
    unint64_t v85 = 0xFFFFFFFFLL;
    int v86 = -65536;
    uint64_t v88 = 0;
  }
  uint64_t v6 = *(void *)v2;
  unsigned int v7 = TUI::Evaluation::Context::closureForElement((uint64_t)v2, *(void *)(a1 + 40));
  (*(void (**)(char **__return_ptr, uint64_t, void))(*(void *)v6 + 112))(&v99, v6, v7);
  int v84 = (int)v99;
  unint64_t v83 = v100;
  long long v90 = v101;
  uint64_t v8 = *(void *)(a1 + 40);
  int v9 = *(_DWORD *)(v8 + 20);
  uint64_t v10 = *(unsigned __int16 *)(v8 + 4);
  __int16 v99 = 0;
  __int16 v100 = 0;
  double v101 = 0;
  if (v10)
  {
    uint64_t v11 = 0;
    int v12 = v9;
    do
    {
      unsigned int v13 = v11 + v12;
      uint64_t v14 = *(void *)(a1 + 48);
      if (*(void *)(v14 + 216) > (unint64_t)(v11 + v12))
      {
        uint64_t v15 = *(void *)(v14 + 208) + 28 * v13;
        if (v15)
        {
          Entry v16 = (TUI::Instruction::Decoder *)*(unsigned int *)(v15 + 8);
          if (TUIConditionIsNil(*(_DWORD *)(v15 + 8))
            || (TUI::Evaluation::Context::resolve((uint64_t)v2, v16, (uint64_t)&v97),
                unsigned int v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v97, v2), v98, v17))
          {
            uint64_t v18 = v100;
            if (v100 >= (char *)v101)
            {
              uint64_t v20 = v99;
              uint64_t v21 = (v100 - v99) >> 2;
              unint64_t v22 = v21 + 1;
              if ((unint64_t)(v21 + 1) >> 62) {
                sub_4484();
              }
              uint64_t v23 = (char *)v101 - v99;
              if (((char *)v101 - v99) >> 1 > v22) {
                unint64_t v22 = v23 >> 1;
              }
              if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v24 = v22;
              }
              if (v24)
              {
                uint64_t v25 = (char *)sub_10790C((uint64_t)&v101, v24);
                uint64_t v20 = v99;
                uint64_t v18 = v100;
              }
              else
              {
                uint64_t v25 = 0;
              }
              uint64_t v26 = &v25[4 * v21];
              *(_DWORD *)uint64_t v26 = v13;
              uint64_t v19 = v26 + 4;
              while (v18 != v20)
              {
                int v27 = *((_DWORD *)v18 - 1);
                v18 -= 4;
                *((_DWORD *)v26 - 1) = v27;
                v26 -= 4;
              }
              __int16 v99 = v26;
              __int16 v100 = v19;
              double v101 = (std::__shared_weak_count *)&v25[4 * v24];
              if (v20) {
                operator delete(v20);
              }
            }
            else
            {
              *(_DWORD *)__int16 v100 = v13;
              uint64_t v19 = v18 + 4;
            }
            __int16 v100 = v19;
          }
        }
      }
      ++v11;
    }
    while (v11 != v10);
  }
  [*((id *)v2 + 67) recordEvent:15];
  unint64_t v28 = v88 | v86 & 0xFFFF0000;
  uint64_t v29 = (*(uint64_t (**)(void, unint64_t))(**(void **)v2 + 40))(*(void *)v2, v28);
  uint64_t v31 = v29;
  uint64_t v32 = v30;
  if (v30 == -1)
  {
    LODWORD(v33) = TUIElementDefinitionNil;
    LODWORD(v34) = unk_2DD594;
  }
  else
  {
    unint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v29 + 64))(v29, v30);
    unint64_t v34 = HIDWORD(v33);
  }
  uint64_t v35 = *(void *)(a1 + 48);
  if (*(void *)(v35 + 216) > (unint64_t)v34)
  {
    uint64_t v36 = *(void *)(v35 + 208) + 28 * v34;
    if (v36)
    {
      unint64_t v37 = v33;
      if (TUIDefinitionNotNil(v33))
      {
        if (*((unsigned char *)v2 + 552))
        {
          int v38 = *(_DWORD *)(v36 + 24);
          if (TUILocationNotNil(v38))
          {
            uint64_t v39 = (int *)*((void *)v2 + 83);
            unint64_t v40 = *((void *)v2 + 84);
            if ((unint64_t)v39 >= v40)
            {
              uint64_t v42 = (int *)*((void *)v2 + 82);
              uint64_t v43 = v39 - v42;
              if ((unint64_t)(v43 + 1) >> 62) {
                sub_4484();
              }
              unint64_t v44 = v40 - (void)v42;
              unint64_t v45 = (uint64_t)(v40 - (void)v42) >> 1;
              if (v45 <= v43 + 1) {
                unint64_t v45 = v43 + 1;
              }
              if (v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v46 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v46 = v45;
              }
              if (v46)
              {
                int v47 = (char *)sub_10790C((uint64_t)v2 + 672, v46);
                uint64_t v39 = (int *)*((void *)v2 + 83);
                uint64_t v42 = (int *)*((void *)v2 + 82);
              }
              else
              {
                int v47 = 0;
              }
              BOOL v48 = (int *)&v47[4 * v43];
              uint64_t v49 = &v47[4 * v46];
              *BOOL v48 = v38;
              uint64_t v41 = v48 + 1;
              while (v39 != v42)
              {
                int v50 = *--v39;
                *--BOOL v48 = v50;
              }
              *((void *)v2 + 82) = v48;
              *((void *)v2 + 83) = v41;
              *((void *)v2 + 84) = v49;
              if (v42) {
                operator delete(v42);
              }
            }
            else
            {
              *uint64_t v39 = v38;
              uint64_t v41 = v39 + 1;
            }
            *((void *)v2 + 83) = v41;
          }
        }
        uint64_t v89 = *(unsigned int *)(v36 + 20);
        uint64_t v87 = *(unsigned __int16 *)(v36 + 4);
        uint64_t v51 = *((void *)v2 + 72);
        if (*(void *)(v51 + 184) <= v37
          || (uint64_t v52 = *(void *)(v51 + 176) + 12 * v37) == 0
          || *(_DWORD *)(v52 + 8) == -1)
        {
          if (v85 != 0xFFFFFFFF)
          {
            long long v78 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)v2 + 70), v28);
            TUI::Evaluation::Context::reportError((uint64_t)v2, 1018, v78);

LABEL_95:
            if (*((unsigned char *)v2 + 552) && TUILocationNotNil(*(_DWORD *)(v36 + 24))) {
              *((void *)v2 + 83) -= 4;
            }
            goto LABEL_98;
          }
          unsigned __int8 v65 = *(void (**)(void))(**(void **)v2 + 72);
          if (v10)
          {
            v65();
            uint64_t v67 = (unsigned int *)v99;
            uint64_t v66 = (unsigned int *)v100;
            if (v99 != v100)
            {
              do
              {
                unint64_t v68 = *v67;
                uint64_t v69 = *(void **)(a1 + 48);
                if (v69[27] > v68)
                {
                  uint64_t v70 = v69[26] + 28 * v68;
                  if (v70)
                  {
                    if (TUI::Package::Buffer::findAttribute(v69, 0x95u, *(unsigned int *)(v70 + 16) | ((unint64_t)*(unsigned __int16 *)(v70 + 2) << 32)) == 65685)
                    {
                      uint64_t v72 = *(void *)(a1 + 48);
                      if (*(void *)(v72 + 232) > v71 && (id v73 = (int *)(*(void *)(v72 + 224) + 12 * v71)) != 0)
                      {
                        uint64_t v74 = v73 + 1;
                      }
                      else
                      {
                        uint64_t v74 = &TUIConditionNil;
                        id v73 = &TUIValueNil;
                      }
                      unsigned int v75 = (TUI::Instruction::Decoder *)*v73;
                      if (!TUIConditionNotNil(*v74))
                      {
                        uint64_t v77 = TUI::Instruction::Decoder::elementName(v75, (uint64_t)v2, v76);
                        unint64_t v37 = v37 & 0xFFFFFFFF00000000 | v77;
                        if (TUINameIsValid(v37))
                        {
                          int v91 = v84;
                          uint64_t v92 = v83;
                          uint64_t v93 = v90;
                          if (v90) {
                            atomic_fetch_add_explicit(&v90->__shared_owners_, 1uLL, memory_order_relaxed);
                          }
                          id v97 = 0;
                          LODWORD(v9sub_1265C((uint64_t)this + 8) = v68;
                          unint64_t v85 = v85 & 0xFFFFFFFF00000000 | v77;
                          TUI::Evaluation::Context::pushNamedElement(v2, v77, &v91, (uint64_t)&v97);

                          if (v90) {
                            sub_123E4(v90);
                          }
                        }
                      }
                    }
                  }
                }
                ++v67;
              }
              while (v67 != v66);
            }
          }
          else
          {
            v65();
          }
          (*(void (**)(void, uint64_t, uint64_t))(**(void **)v2 + 144))(*(void *)v2, v31, v32);
        }
        else
        {
          uint64_t v80 = *(unsigned __int16 *)(v52 + 6);
          uint64_t v81 = *(unsigned int *)(v52 + 8);
          (*(void (**)(void, uint64_t))(**(void **)v2 + 72))(*(void *)v2, 63);
          __int16 v54 = (unsigned int *)v99;
          uint64_t v53 = (unsigned int *)v100;
          if (v99 != v100)
          {
            do
            {
              unint64_t v55 = *v54;
              uint64_t v56 = *(void **)(a1 + 48);
              if (v56[27] > v55)
              {
                uint64_t v57 = v56[26] + 28 * v55;
                if (v57)
                {
                  if (TUI::Package::Buffer::findAttribute(v56, 0x95u, *(unsigned int *)(v57 + 16) | ((unint64_t)*(unsigned __int16 *)(v57 + 2) << 32)) == 65685)
                  {
                    uint64_t v59 = *(void *)(a1 + 48);
                    if (*(void *)(v59 + 232) > v58 && (unint64_t v60 = (int *)(*(void *)(v59 + 224) + 12 * v58)) != 0)
                    {
                      char v61 = v60 + 1;
                    }
                    else
                    {
                      char v61 = &TUIConditionNil;
                      unint64_t v60 = &TUIValueNil;
                    }
                    unint64_t v62 = (TUI::Instruction::Decoder *)*v60;
                    if (!TUIConditionNotNil(*v61))
                    {
                      uint64_t v64 = TUI::Instruction::Decoder::elementName(v62, (uint64_t)v2, v63);
                      unint64_t v28 = v28 & 0xFFFFFFFF00000000 | v64;
                      if (TUINameIsValid(v28))
                      {
                        int v94 = v84;
                        __int16 v95 = v83;
                        __int16 v96 = v90;
                        if (v90) {
                          atomic_fetch_add_explicit(&v90->__shared_owners_, 1uLL, memory_order_relaxed);
                        }
                        id v97 = 0;
                        LODWORD(v9sub_1265C((uint64_t)this + 8) = v55;
                        unint64_t v79 = v79 & 0xFFFFFFFF00000000 | v64;
                        TUI::Evaluation::Context::pushNamedElement(v2, v64, &v94, (uint64_t)&v97);

                        if (v90) {
                          sub_123E4(v90);
                        }
                      }
                    }
                  }
                }
              }
              ++v54;
            }
            while (v54 != v53);
          }
          TUI::Evaluation::Context::evaluateParams((uint64_t)v2, v85 | v82);
          (*(void (**)(void, uint64_t, uint64_t))(**(void **)v2 + 144))(*(void *)v2, v31, v32);
          TUI::Evaluation::Context::evaluateParams(v2, v81 | (v80 << 32));
        }
        TUI::Evaluation::Context::instantiateChildren(v2, v89 | (v87 << 32), 0);
        (*(void (**)(void))(**(void **)v2 + 168))();
        (*(void (**)(void))(**(void **)v2 + 80))();
        goto LABEL_95;
      }
    }
  }
LABEL_98:
  if (v99)
  {
    __int16 v100 = v99;
    operator delete(v99);
  }
  if (v90) {
    sub_123E4(v90);
  }
}

void sub_102078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  if (a19) {
    sub_123E4(a19);
  }
  unint64_t v28 = *(void **)(v26 - 112);
  if (v28)
  {
    *(void *)(v26 - 104) = v28;
    operator delete(v28);
  }
  if (a19) {
    sub_123E4(a19);
  }
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateNamedElementReference(void *a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (!TUIElementReferenceNotNil(a2)) {
    goto LABEL_13;
  }
  uint64_t v4 = a1[72];
  if (*(void *)(v4 + 152) > v3 && (uint64_t v5 = *(void *)(v4 + 144) + 12 * v3) != 0)
  {
    uint64_t v6 = *(unsigned __int16 *)(v5 + 2);
    uint64_t v7 = *(unsigned int *)(v5 + 8);
    uint64_t v8 = *(unsigned __int16 *)(v5 + 6);
    unint64_t v9 = (unint64_t)*(unsigned __int16 *)(v5 + 4) << 16;
    uint64_t v10 = v8 << 32;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v10 = 0;
    uint64_t v7 = 0xFFFFFFFFLL;
    unint64_t v9 = 4294901760;
  }
  unint64_t v11 = v6 | v9;
  [(id)a1[67] recordEvent:15];
  uint64_t v12 = (*(uint64_t (**)(void, unint64_t))(*(void *)*a1 + 48))(*a1, v11);
  if (v13 == -1)
  {
LABEL_13:
    uint64_t v18 = (uint64_t)a1;
    uint64_t v19 = 1011;
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    unsigned int v16 = *(_DWORD *)((*(uint64_t (**)(uint64_t))(*(void *)v12 + 72))(v12) + 8);
    if (TUIElementNodeNotNil(v16))
    {
      (*(void (**)(void, uint64_t))(*(void *)*a1 + 72))(*a1, 63);
      if (v7 != 0xFFFFFFFFLL) {
        TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v7 | v10);
      }
      (*(void (**)(void, uint64_t, uint64_t))(*(void *)*a1 + 152))(*a1, v14, v15);
      TUI::Evaluation::Context::instantiateChildNode((uint64_t)a1, v16);
      (*(void (**)(void))(*(void *)*a1 + 168))();
      unsigned int v17 = *(void (**)(void))(*(void *)*a1 + 80);
      v17();
      return;
    }
    uint64_t v18 = (uint64_t)a1;
    uint64_t v19 = 1000;
  }

  TUI::Evaluation::Context::reportError(v18, v19, 0);
}

id TUI::Evaluation::Context::debugDescribeAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_opt_new();
  uint64_t v5 = WORD2(a2);
  if (WORD2(a2))
  {
    uint64_t v6 = 0;
    uint64_t v7 = *(void **)(a1 + 576);
    uint64_t v19 = a2;
    do
    {
      if (v7[31] > (unint64_t)(v6 + v19) && (uint64_t v8 = (unsigned __int16 *)(v7[30] + 8 * (v6 + v19))) != 0)
      {
        unint64_t v9 = *v8;
        uint64_t v10 = v7[60];
        if (v9 >= (v7[61] - v10) >> 1) {
          uint64_t v11 = 0xFFFFLL;
        }
        else {
          uint64_t v11 = *(unsigned __int16 *)(v10 + 2 * v9);
        }
        uint64_t v12 = v8[1];
        unint64_t v13 = *((unsigned int *)v8 + 1);
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v11 = 0xFFFFLL;
        unint64_t v13 = 0xFFFFFFFFLL;
      }
      uint64_t v14 = +[TUIAttributeRegistry nameForAttribute:v11];
      [v4 appendFormat:@"[%@] values=%lu (offset=%lu)\n", v14, v12, v13];

      if (v12)
      {
        uint64_t v15 = 12 * v13;
        do
        {
          if (v7[29] <= v13)
          {
            unsigned int v17 = (unsigned int *)&TUIConditionNil;
            unsigned int v16 = (unsigned int *)&TUIValueNil;
          }
          else
          {
            unsigned int v16 = (unsigned int *)(v15 + v7[28]);
            unsigned int v17 = v16 + 1;
            if (!v16)
            {
              unsigned int v17 = (unsigned int *)&TUIConditionNil;
              unsigned int v16 = (unsigned int *)&TUIValueNil;
            }
          }
          [v4 appendFormat:@"  v=%08x c=%08x\n", *v16, *v17];
          v15 += 12;
          ++v13;
          --v12;
        }
        while (v12);
      }
      ++v6;
    }
    while (v6 != v5);
  }

  return v4;
}

void sub_1024D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::computeStyle(TUI::Symbol::Tab **a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(a3 + 144);
  uint64_t v7 = -192;
  uint64_t v8 = 144;
  do
  {
    uint64_t v9 = *(void *)(a3 + v8);
    v8 += 8;
    if (v9) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = v7 == 0;
    }
    v7 += 64;
  }
  while (!v10);
  if (v9)
  {
    if (TUIReferenceListNotNil(a2))
    {
      unint64_t v11 = HIDWORD(a2);
      if (HIDWORD(a2))
      {
        uint64_t v12 = 0;
        uint64_t v13 = a2;
        uint64_t v14 = a1[72];
        uint64_t v15 = a1 + 57;
        if (v11 <= 1) {
          uint64_t v16 = 1;
        }
        else {
          uint64_t v16 = v11;
        }
        uint64_t v61 = v13;
        uint64_t v63 = v16;
        uint64_t v64 = v6;
        do
        {
          if (*((void *)v14 + 19) <= (unint64_t)(v12 + v13))
          {
            uint64_t v18 = 0;
            uint64_t v22 = 0;
            unint64_t v17 = 0;
          }
          else
          {
            unint64_t v17 = *((void *)v14 + 18) + 12 * (v12 + v13);
            if (v17)
            {
              uint64_t v18 = *(unsigned __int16 *)(v17 + 2);
              uint64_t v19 = *(unsigned int *)(v17 + 8);
              unint64_t v20 = (unint64_t)*(unsigned __int16 *)(v17 + 4) << 16;
              uint64_t v21 = *(unsigned __int16 *)(v17 + 6);
              unint64_t v17 = (unint64_t)*(unsigned __int16 *)v17 << 32;
              uint64_t v22 = v21 << 32;
              goto LABEL_20;
            }
            uint64_t v18 = 0;
            uint64_t v22 = 0;
          }
          unint64_t v20 = 4294901760;
          uint64_t v19 = 0xFFFFFFFFLL;
LABEL_20:
          unint64_t v23 = v18 | v20;
          unsigned int v66 = v18 | v20;
          if ((~v20 & 0xFFFF0000) == 0) {
            goto LABEL_56;
          }
          unint64_t v24 = v15;
          unint64_t v25 = HIDWORD(v17);
          if (v18 == 0xFFFF || HIDWORD(v17))
          {
            if (v18 == 0xFFFF || (HIDWORD(v17) - 1) > 1)
            {
              uint64_t v15 = v24;
              uint64_t v6 = v64;
              goto LABEL_56;
            }
            [(TUI::Symbol::Tab *)a1[67] recordEvent:15];
            uint64_t v27 = (*(uint64_t (**)(TUI::Symbol::Tab *, unint64_t))(*(void *)*a1 + 48))(*a1, v23);
            if (v28 != -1)
            {
              uint64_t v29 = v27;
              uint64_t v30 = v28;
              uint64_t v31 = objc_opt_class();
              id v32 = *(id *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v29 + 72))(v29, v30);
              unint64_t v33 = TUIDynamicCast(v31, v32);

              if (v33)
              {
                (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 72))(*a1, 7);
                (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(void *)*a1 + 152))(*a1, v29, v30);
                TUI::Evaluation::Context::computeStyle(a1, [v33 styleReference], a3);
                (*(void (**)(void))(*(void *)*a1 + 168))();
                (*(void (**)(void))(*(void *)*a1 + 80))();
              }
              else
              {
                unint64_t v59 = v59 & 0xFFFFFFFF00000000 | v66;
                unint64_t v45 = TUI::Symbol::Tab::string(a1[70], v59);
                unint64_t v46 = (objc_class *)*(id *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v29 + 72))(v29, v30);
                int v47 = NSStringFromClass(v46);
                BOOL v48 = +[NSString stringWithFormat:@"%@: %@", v45, v47];
                TUI::Evaluation::Context::reportError((uint64_t)a1, 1000, v48);
              }
              uint64_t v13 = v61;
LABEL_51:
              uint64_t v15 = v24;
              goto LABEL_52;
            }
            if (v25 == 2) {
              goto LABEL_51;
            }
            unint64_t v58 = v58 & 0xFFFFFFFF00000000 | v66;
            uint64_t v26 = TUI::Symbol::Tab::string(a1[70], v58);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1011, v26);
            uint64_t v15 = v24;
          }
          else
          {
            uint64_t v15 = v24;
            if (!sub_270E0(v24, (unsigned __int16 *)&v66))
            {
              sub_1082BC((uint64_t)v24, (unsigned __int16 *)&v66, &v66);
              uint64_t v34 = v66;
              [(TUI::Symbol::Tab *)a1[67] recordEvent:16];
              uint64_t v35 = (*(uint64_t (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 24))(*a1, v34);
              uint64_t v37 = v35;
              uint64_t v38 = v36;
              memset(v65, 0, sizeof(v65));
              if (v36 == -1)
              {
                *(_OWORD *)unsigned __int8 v65 = TUIStyleDefinitionNil;
                *(void *)&v65[16] = qword_2DD580;
              }
              else
              {
                (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(*(void *)v35 + 48))(v65, v35, v36);
              }
              if (TUIDefinitionNotNil(*(int *)v65))
              {
                uint64_t v39 = a1[72];
                if (*((void *)v39 + 23) > (unint64_t)*(unsigned int *)v65)
                {
                  uint64_t v40 = *((void *)v39 + 22) + 12 * *(unsigned int *)v65;
                  if (v40)
                  {
                    uint64_t v41 = *(unsigned int *)(v40 + 8);
                    if (v41 != -1)
                    {
                      unint64_t v42 = v19 | v22;
                      unint64_t v43 = v41 | ((unint64_t)*(unsigned __int16 *)(v40 + 6) << 32);
                      (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 72))(*a1, 7);
                      TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v42);
                      (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(void *)*a1 + 128))(*a1, v37, v38);
                      TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v43);
                      goto LABEL_45;
                    }
                  }
                }
                if (v19 == 0xFFFFFFFFLL)
                {
                  (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(void *)*a1 + 72))(*a1, 63);
                  (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(void *)*a1 + 128))(*a1, v37, v38);
LABEL_45:
                  TUI::Evaluation::Context::computeAttributes(a1, *(void *)&v65[4], 1, a3);
                  if (TUIReferenceListNotNil(*(int *)&v65[12])) {
                    TUI::Evaluation::Context::computeStyle(a1, *(void *)&v65[12], a3);
                  }
                  (*(void (**)(void))(*(void *)*a1 + 168))();
                  (*(void (**)(void))(*(void *)*a1 + 80))();
LABEL_48:
                  uint64_t v13 = v61;
                  uint64_t v15 = v24;
                }
                else
                {
                  unint64_t v57 = v57 & 0xFFFFFFFF00000000 | v66;
                  uint64_t v49 = TUI::Symbol::Tab::string(a1[70], v57);
                  TUI::Evaluation::Context::reportError((uint64_t)a1, 1018, v49);
                  uint64_t v13 = v61;
                  uint64_t v15 = v24;
                }
                uint64_t v6 = v64;
                int v50 = (uint64_t *)sub_270E0(v15, (unsigned __int16 *)&v66);
                sub_34E00(v15, v50);
                goto LABEL_55;
              }
              unint64_t v60 = v60 & 0xFFFFFFFF00000000 | v66;
              unint64_t v44 = TUI::Symbol::Tab::string(a1[70], v60);
              TUI::Evaluation::Context::reportError((uint64_t)a1, 1009, v44);

              goto LABEL_48;
            }
            unint64_t v62 = v62 & 0xFFFFFFFF00000000 | v66;
            uint64_t v26 = TUI::Symbol::Tab::string(a1[70], v62);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1002, v26);
          }

LABEL_52:
          uint64_t v6 = v64;
LABEL_55:
          uint64_t v16 = v63;
LABEL_56:
          uint64_t v51 = -192;
          uint64_t v52 = v6;
          do
          {
            uint64_t v54 = *v52++;
            uint64_t v53 = v54;
            if (v54) {
              BOOL v55 = 1;
            }
            else {
              BOOL v55 = v51 == 0;
            }
            v51 += 64;
          }
          while (!v55);
          ++v12;
          if (v53) {
            BOOL v56 = v12 == v16;
          }
          else {
            BOOL v56 = 1;
          }
        }
        while (!v56);
      }
    }
  }
}

void sub_102C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

TUIGuides *sub_102CA8(TUI::Evaluation::Context *a1)
{
  unsigned __int16 v10 = 121;
  if ((*((unsigned char *)a1 + 295) & 2) != 0) {
    uint64_t v2 = (id *)(sub_12E50((void *)a1 + 44, &v10) + 3);
  }
  else {
    uint64_t v2 = 0;
  }
  unsigned __int16 v11 = 207;
  uint64_t v3 = *((void *)a1 + 38);
  if ((v3 & 0x8000) != 0)
  {
    uint64_t v4 = (id *)(sub_12E50((void *)a1 + 44, &v11) + 3);
    uint64_t v3 = *((void *)a1 + 38);
  }
  else
  {
    uint64_t v4 = 0;
  }
  unsigned __int16 v12 = 205;
  if ((v3 & 0x2000) != 0) {
    uint64_t v5 = (id *)(sub_12E50((void *)a1 + 44, &v12) + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  unsigned __int16 v13 = 43;
  if ((*((unsigned char *)a1 + 285) & 8) != 0)
  {
    uint64_t v6 = (id *)(sub_12E50((void *)a1 + 44, &v13) + 3);
    if (!v2) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v6 = 0;
  if (v2)
  {
LABEL_14:
    TUI::Evaluation::ResolvedValue::guideValue(v2, a1);
    uint64_t v2 = (id *)objc_claimAutoreleasedReturnValue();
  }
LABEL_15:
  if (v4)
  {
    TUI::Evaluation::ResolvedValue::guideValue(v4, a1);
    uint64_t v4 = (id *)objc_claimAutoreleasedReturnValue();
  }
  if (v5)
  {
    TUI::Evaluation::ResolvedValue::guideValue(v5, a1);
    uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue();
  }
  if (v6)
  {
    uint64_t v7 = TUI::Evaluation::ResolvedValue::guideValue(v6, a1);
    if (v2) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (v2) {
      goto LABEL_27;
    }
  }
  if (!v4 && !v5 && !v7)
  {
    uint64_t v8 = 0;
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v8 = [[TUIGuides alloc] initWithLeading:v2 trailing:v4 top:v5 bottom:v7];
LABEL_28:

  return v8;
}

void sub_102E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_102E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(TUI::Symbol::Tab ***)(a1 + 56);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a3);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  unsigned __int16 v10 = *(void **)(a1 + 32);
  *(void *)(v7 + 16) = v8;
  objc_storeStrong((id *)(v7 + 32), v10);
  *(unsigned char *)(v7 + sub_1265C((uint64_t)this + 8) = (v8 == 0) | (2 * (v8 + 1 == v9)) | *(unsigned char *)(v7 + 8) & 0xFC;
  if (TUIValueNotNil(*(_DWORD *)(a1 + 80)))
  {
    TUI::Instruction::Evaluation::evaluate((double *)v14, v6[1], (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 80));
    unsigned __int16 v11 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v14, v6);

    TUI::Evaluation::Context::evaluateWithUnmappedIdentifier((uint64_t)v6, v11, *(void **)(a1 + 40));
  }
  else
  {
    TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v6, *(void *)(a1 + 64), *(void **)(a1 + 40));
  }
  unsigned __int16 v12 = (const TUI::Evaluation::Enumerator::State *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 16))(a2, a3);
  TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v14, v12);
  char v13 = v15;
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) |= 2uLL;
    if ((v15 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) |= 1uLL;
  char v13 = v15;
  if ((v15 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v13 & 4) != 0) {
LABEL_7:
  }
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) |= 4uLL;
LABEL_8:
  TUI::Evaluation::Enumerator::State::~State(v14);
}

void sub_10303C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

TUIMutableDynamicValue *TUI::Evaluation::Context::viewStateForNode(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = a3;
  if (TUINameIsValid(a3))
  {
    uint64_t v5 = *(void **)(*(void *)a1 + 16);
    if (v5)
    {
      [v5 model];
      uint64_t v6 = [*(id *)(v18 + 88) viewStateForBinding:v4];
      if (v19) {
        sub_123E4(v19);
      }
    }
    else
    {
      uint64_t v7 = [*(id *)(a1 + 224) viewStateForBinding:v4];
      if (v7)
      {
        uint64_t v6 = v7;
      }
      else
      {
        id v8 = *(id *)(a1 + 216);
        if (v8)
        {
          uint64_t v9 = v8;
          while (1)
          {
            unsigned __int16 v10 = [v9 viewStateForBinding:v4];
            if (v10) {
              break;
            }
            unsigned __int16 v11 = [v9 parent];

            uint64_t v9 = v11;
            if (!v11) {
              goto LABEL_14;
            }
          }
          unsigned __int16 v11 = v9;
        }
        else
        {
          unsigned __int16 v11 = 0;
LABEL_14:
          unsigned __int16 v12 = [*(id *)(a1 + 600) identifierWithNode:*(unsigned int *)(a1 + 240) baseIdentifier:*(void *)(a1 + 232)];
          if (v12)
          {
            char v13 = *(void **)(a1 + 160);
            if (!v13)
            {
              uint64_t v14 = objc_opt_new();
              char v15 = *(void **)(a1 + 160);
              *(void *)(a1 + 160) = v14;

              char v13 = *(void **)(a1 + 160);
            }
            uint64_t v16 = [v13 objectForKeyedSubscript:v12];
            if (!v16)
            {
              uint64_t v16 = [[_TUIViewStateMapping alloc] initWithParent:*(void *)(a1 + 216)];
              [*(id *)(a1 + 160) setObject:forKeyedSubscript:];
            }
            *(void *)(a1 + 224) = v16;
            unsigned __int16 v10 = [(_TUIViewStateMapping *)v16 viewStateForBinding:v4];
            if (!v10)
            {
              unsigned __int16 v10 = [(TUIDynamicValue *)[TUIMutableDynamicValue alloc] initWithValue:0];
              [(_TUIViewStateMapping *)v16 setViewState:v10 forBinding:v4];
            }
          }
          else
          {
            unsigned __int16 v10 = 0;
          }
        }
        uint64_t v6 = v10;
      }
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_103278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::fontSpecForNode(uint64_t a1)
{
  unsigned __int16 v12 = 89;
  if ((*(unsigned char *)(a1 + 291) & 2) != 0) {
    uint64_t v2 = (id *)(sub_12E50((void *)(a1 + 352), &v12) + 3);
  }
  else {
    uint64_t v2 = 0;
  }
  unsigned __int16 v13 = 51;
  if ((*(unsigned char *)(a1 + 286) & 8) != 0)
  {
    uint64_t v3 = sub_12E50((void *)(a1 + 352), &v13);
    uint64_t v4 = TUI::Evaluation::ResolvedValue::colorValue((id *)v3 + 3, (const TUI::Evaluation::Context *)a1);
    if (v4)
    {
      if (!v2) {
        goto LABEL_10;
      }
LABEL_9:
      uint64_t v5 = TUI::Evaluation::ResolvedValue::fontSpecValue(v2, (const TUI::Evaluation::Context *)a1);
      uint64_t v6 = [v5 mappedSpecIfNeededWithEnvironment:*(void *)(a1 + 584)];

      if (v6) {
        goto LABEL_13;
      }
      goto LABEL_10;
    }
  }
  uint64_t v4 = [*(id *)(a1 + 200) color];
  if (v2) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v7 = *(void **)(a1 + 200);
  if (!v7 || ([v7 fontSpec], (uint64_t v6 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    id v8 = +[TUIFontSpec defaultFontSpec];
    uint64_t v6 = [v8 mappedSpecIfNeededWithEnvironment:*(void *)(a1 + 584)];
  }
LABEL_13:
  if (v4)
  {
    uint64_t v9 = [v6 fontSpecWithColor:v4];

    uint64_t v6 = (void *)v9;
  }
  unsigned __int16 v10 = [v6 textStyle];

  if (v10) {
    *(void *)(a1 + 592) |= 0x20uLL;
  }

  return v6;
}

void sub_103444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::pointerForNode(uint64_t a1)
{
  unsigned __int16 v11 = 152;
  if (*(unsigned char *)(a1 + 299))
  {
    uint64_t v3 = (void *)(a1 + 352);
    uint64_t v4 = sub_12E50((void *)(a1 + 352), &v11);
    uint64_t v1 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v4 + 3), (TUI::Symbol::Tab **)a1);
    if (v1)
    {
      uint64_t v5 = objc_opt_class();
      unsigned __int16 v12 = 153;
      if ((*(unsigned char *)(a1 + 299) & 2) != 0)
      {
        id v8 = sub_12E50(v3, &v12);
        uint64_t v6 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v8 + 3), (TUI::Symbol::Tab **)a1);
      }
      else
      {
        uint64_t v6 = 0;
      }
      uint64_t v9 = TUIDynamicCast(v5, v6);

      uint64_t v7 = +[TUIPointer pointerWithRefId:v1 style:v9];

      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v7 = 0;
LABEL_9:

  return v7;
}

void sub_103578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::closure(uint64_t a1, TUI::Instruction::Decoder *a2)
{
  uint64_t v4 = TUIClosureNil;
  if (!TUIValueNotNil((int)a2)) {
    return v4;
  }
  if (TUI::Instruction::Decoder::offsetKind((uint64_t)a2) != 18)
  {
    TUI::Evaluation::Context::reportError(a1, 1000, 0);
    return v4;
  }

  return TUI::Instruction::Decoder::offsetIndex(a2);
}

uint64_t TUI::Evaluation::Context::closureForNode(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(a1 + 576);
  if (*(void *)(v2 + 216) <= (unint64_t)a2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *(void *)(v2 + 208) + 28 * a2;
  }
  return TUI::Evaluation::Context::closureForElement(a1, v3);
}

uint64_t TUI::Evaluation::Context::captureClosure(void *a1, unsigned int a2)
{
  return (*(uint64_t (**)(void, void))(*(void *)*a1 + 112))(*a1, a2);
}

uint64_t TUI::Evaluation::Context::useGlobalsWithName(void *a1, unsigned int a2)
{
  return (*(uint64_t (**)(void, void, void *))(*(void *)*a1 + 176))(*a1, a2, a1);
}

uint64_t TUI::Evaluation::Context::evaluateGlobals(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 592);
  *(unsigned char *)(a1 + 40) = 1;
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, a2, 0);
  *(unsigned char *)(a1 + 40) = v3;
  uint64_t result = *(void *)(a1 + 592);
  *(void *)(a1 + 592) = v4;
  return result;
}

void TUI::Evaluation::Context::setEnvironment(id *this, TUIEnvironment *a2)
{
  objc_storeStrong(this + 73, a2);
  uint64_t v4 = a2;
  (*(void (**)(void))(*(void *)*this + 184))();
}

void sub_103780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::reset(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(void))(**(void **)this + 200))();
}

void TUI::Evaluation::Context::instantiateComponentWithChildrenOfNode(const TUI::Evaluation::Context *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = a2;
  if (TUINameReferenceIsNil(a2))
  {
    uint64_t v7 = (uint64_t)a1;
    uint64_t v8 = 1013;
LABEL_40:
    TUI::Evaluation::Context::reportError(v7, v8, 0);
    return;
  }
  uint64_t v9 = *((void *)a1 + 72);
  if (*(void *)(v9 + 152) <= v6 || (uint64_t v10 = *(void *)(v9 + 144) + 12 * v6) == 0)
  {
    unsigned int v12 = -65536;
    unint64_t v13 = 0xFFFFFFFFLL;
    goto LABEL_9;
  }
  int v11 = *(unsigned __int16 *)(v10 + 4);
  unsigned int v12 = *(unsigned __int16 *)(v10 + 2) | ((unsigned __int16)v11 << 16);
  unint64_t v13 = *(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned __int16 *)(v10 + 6) << 32);
  if (v11 == 0xFFFF)
  {
LABEL_9:
    int v14 = TUINameNil;
    goto LABEL_10;
  }
  int v14 = TUINameNil;
  if (*(_WORD *)(v10 + 2) != 0xFFFF) {
    int v14 = *(unsigned __int16 *)(v10 + 2) | ((unsigned __int16)v11 << 16);
  }
LABEL_10:
  uint64_t v15 = TUI::Package::Buffer::componentWithName(v9, v14);
  if (v15)
  {
    uint64_t v16 = *((void *)a1 + 72);
    if (*(void *)(v16 + 216) <= (unint64_t)a3 || (uint64_t v17 = *(void *)(v16 + 208) + 28 * a3) == 0)
    {
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = 1011;
      goto LABEL_40;
    }
    uint64_t v18 = (unsigned __int16 *)v15;
    uint64_t v120 = TUI::Evaluation::Context::identifierWithNode((uint64_t)a1, a3);
    int v19 = *(_DWORD *)(v17 + 20);
    unint64_t v20 = *(unsigned __int16 *)(v17 + 4);
    double v139 = 0;
    uint64_t v140 = 0;
    unint64_t v141 = 0;
    double v128 = v18;
    if (!v20) {
      goto LABEL_46;
    }
    uint64_t v21 = 0;
    int v22 = v19;
    unint64_t v3 = (unint64_t)&v141;
    do
    {
      unsigned int v23 = v21 + v22;
      uint64_t v24 = *((void *)a1 + 72);
      if (*(void *)(v24 + 216) > (unint64_t)(v21 + v22))
      {
        uint64_t v25 = *(void *)(v24 + 208) + 28 * v23;
        if (v25)
        {
          uint64_t v26 = (TUI::Instruction::Decoder *)*(unsigned int *)(v25 + 8);
          if (TUIConditionIsNil(*(_DWORD *)(v25 + 8))
            || (TUI::Evaluation::Context::resolve((uint64_t)a1, v26, (uint64_t)&v142),
                unsigned int v27 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v142, a1), (id)v143, v27))
          {
            uint64_t v28 = v140;
            if (v140 >= v141)
            {
              uint64_t v30 = v139;
              uint64_t v31 = (v140 - v139) >> 2;
              unint64_t v32 = v31 + 1;
              if ((unint64_t)(v31 + 1) >> 62) {
                sub_4484();
              }
              uint64_t v33 = v141 - v139;
              if ((v141 - v139) >> 1 > v32) {
                unint64_t v32 = v33 >> 1;
              }
              if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v34 = v32;
              }
              if (v34)
              {
                uint64_t v35 = (char *)sub_10790C((uint64_t)&v141, v34);
                uint64_t v30 = v139;
                uint64_t v28 = v140;
              }
              else
              {
                uint64_t v35 = 0;
              }
              uint64_t v36 = &v35[4 * v31];
              *(_DWORD *)uint64_t v36 = v23;
              uint64_t v29 = v36 + 4;
              while (v28 != v30)
              {
                int v37 = *((_DWORD *)v28 - 1);
                v28 -= 4;
                *((_DWORD *)v36 - 1) = v37;
                v36 -= 4;
              }
              double v139 = v36;
              uint64_t v140 = v29;
              unint64_t v141 = &v35[4 * v34];
              if (v30) {
                operator delete(v30);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v140 = v23;
              uint64_t v29 = v28 + 4;
            }
            uint64_t v140 = v29;
          }
        }
      }
      ++v21;
    }
    while (v21 != v20);
    uint64_t v18 = v128;
    if (v139 == v140)
    {
LABEL_46:
      int v124 = 0;
      uint64_t v40 = 0;
      uint64_t v122 = 0;
    }
    else
    {
      uint64_t v38 = *(void *)a1;
      unsigned int v39 = TUI::Evaluation::Context::closureForElement((uint64_t)a1, v17);
      (*(void (**)(void ***__return_ptr, uint64_t, void))(*(void *)v38 + 112))(&v142, v38, v39);
      int v124 = (int)v142;
      uint64_t v40 = (std::__shared_weak_count *)*((void *)&v143 + 1);
      uint64_t v122 = v143;
    }
    double v127 = v40;
    uint64_t v41 = *((void *)a1 + 72);
    unint64_t v42 = *((unsigned int *)v18 + 2);
    if (*(void *)(v41 + 184) > v42 && (uint64_t v43 = *(void *)(v41 + 176) + 12 * v42) != 0)
    {
      uint64_t v125 = *(unsigned int *)(v43 + 8);
      unint64_t v130 = (unint64_t)*(unsigned __int16 *)(v43 + 6) << 32;
    }
    else
    {
      unint64_t v130 = 0;
      uint64_t v125 = 0xFFFFFFFFLL;
    }
    (*(void (**)(void, uint64_t))(**(void **)a1 + 72))(*(void *)a1, 63);
    unint64_t v44 = (unsigned int *)v139;
    unint64_t v45 = (unsigned int *)v140;
    if (v139 != v140)
    {
      do
      {
        unint64_t v46 = *v44;
        int v47 = (void *)*((void *)a1 + 72);
        if (v47[27] > v46)
        {
          uint64_t v48 = v47[26] + 28 * v46;
          if (v48)
          {
            if (TUI::Package::Buffer::findAttribute(v47, 0x95u, *(unsigned int *)(v48 + 16) | ((unint64_t)*(unsigned __int16 *)(v48 + 2) << 32)) == 65685)
            {
              uint64_t v50 = *((void *)a1 + 72);
              if (*(void *)(v50 + 232) > v49 && (uint64_t v51 = (int *)(*(void *)(v50 + 224) + 12 * v49)) != 0)
              {
                uint64_t v52 = v51 + 1;
              }
              else
              {
                uint64_t v52 = &TUIConditionNil;
                uint64_t v51 = &TUIValueNil;
              }
              uint64_t v53 = (TUI::Instruction::Decoder *)*v51;
              if (!TUIConditionNotNil(*v52))
              {
                uint64_t v55 = TUI::Instruction::Decoder::elementName(v53, (uint64_t)a1, v54);
                unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v55;
                if (TUINameIsValid(v3))
                {
                  int v136 = v124;
                  uint64_t v137 = v122;
                  double v138 = v127;
                  if (v127) {
                    atomic_fetch_add_explicit(&v127->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                  double v142 = 0;
                  LODWORD(v143) = v46;
                  unint64_t v20 = v20 & 0xFFFFFFFF00000000 | v55;
                  TUI::Evaluation::Context::pushNamedElement(a1, v20, &v136, (uint64_t)&v142);

                  if (v127) {
                    sub_123E4(v127);
                  }
                }
              }
            }
          }
        }
        ++v44;
      }
      while (v44 != v45);
    }
    TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v13);
    unint64_t v56 = (unint64_t)v128;
    uint64_t v57 = *(void *)a1;
    TUI::Evaluation::Variables::Capture::emptyClosed(&v134);
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v57 + 160))(v57, &v134);
    if (v135) {
      sub_123E4(v135);
    }
    TUI::Evaluation::Context::evaluateParams(a1, v125 | v130);
    uint64_t v58 = *(void *)a1;
    unsigned int v59 = TUI::Evaluation::Context::closure((uint64_t)a1, (TUI::Instruction::Decoder *)*((unsigned int *)v128 + 9));
    (*(void (**)(void ***__return_ptr, uint64_t, void))(*(void *)v58 + 112))(&v142, v58, v59);
    long long v60 = v143;
    (*(void (**)(void))(**(void **)a1 + 168))();
    (*(void (**)(void))(**(void **)a1 + 80))();
    uint64_t v61 = *((void *)a1 + 92);
    unint64_t v62 = (void *)*((void *)a1 + 91);
    id v63 = v120;
    unint64_t v64 = [v62 objectForKey:v61];
    double v126 = [(id)v64 objectForKey:v63];

    unint64_t v123 = v63;
    int v119 = *v128;
    int v121 = v119 != 0;
    unint64_t v65 = *((unsigned int *)v128 + 8);
    uint64_t v66 = v128[3];
    memset(v133, 0, sizeof(v133));
    if (v66)
    {
      unint64_t v131 = 0;
      uint64_t v67 = 0;
      uint64_t v68 = 4 * v65;
      do
      {
        uint64_t v69 = *((void *)a1 + 72);
        if (*(void *)(v69 + 344) > v65
          && (uint64_t v70 = *(void *)(v69 + 336), (v71 = (unsigned __int16 *)(v68 + v70)) != 0))
        {
          uint64_t v72 = v70 + v68;
          unint64_t v56 = v56 & 0xFFFFFFFF00000000 | *(unsigned __int16 *)(v70 + v68) | ((unint64_t)*(unsigned __int16 *)(v70 + v68 + 2) << 16);
          (*(void (**)(void ***__return_ptr))(**(void **)a1 + 192))(&v142);
          if (v142)
          {
            uint64_t v73 = *((unsigned int *)v142 + 22);
            unint64_t v74 = (unint64_t)v142[9];
            unint64_t v75 = (unint64_t)v142[10];
            sub_25FE4(v133, (long long *)&v142);
            v67 += v73;
            v131 |= v74 | v75;
          }
          else
          {
            unint64_t v64 = v64 & 0xFFFFFFFF00000000 | *v71 | ((unint64_t)*(unsigned __int16 *)(v72 + 2) << 16);
            long long v76 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a1 + 70), v64);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1012, v76);
          }
          if ((void)v143) {
            sub_123E4((std::__shared_weak_count *)v143);
          }
        }
        else
        {
          TUI::Evaluation::Context::reportError((uint64_t)a1, 1012, 0);
        }
        v68 += 4;
        ++v65;
        --v66;
      }
      while (v66);
    }
    else
    {
      uint64_t v67 = 0;
      unint64_t v131 = 0;
    }
    bzero(&v132, 1uLL);
    if (*((unsigned char *)a1 + 184)) {
      v132 |= 1u;
    }
    uint64_t v77 = v126;
    if (v126)
    {
      [(TUIComponent *)v126 model];
      long long v78 = v142[1];
      unint64_t v79 = (std::__shared_weak_count *)v142[2];
      if (v79) {
        atomic_fetch_add_explicit(&v79->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      BOOL v80 = TUI::Evaluation::Variables::Capture::operator==((uint64_t)v78, v60);
      if (v79) {
        sub_123E4(v79);
      }
      if ((void)v143) {
        sub_123E4((std::__shared_weak_count *)v143);
      }
      [(TUIComponent *)v126 model];
      uint64_t v81 = (char *)v142[10];
      if ((void)v143) {
        sub_123E4((std::__shared_weak_count *)v143);
      }
      [(TUIComponent *)v126 model];
      int v82 = *((unsigned __int8 *)v142 + 96);
      int v83 = v132;
      if ((void)v143) {
        sub_123E4((std::__shared_weak_count *)v143);
      }
      if (v81 == v67 && v80)
      {
        int v85 = 0;
        unsigned __int8 v86 = v83 ^ v82;
        int v87 = (v83 ^ v82) & 1;
        int v121 = v86 & (v119 != 0);
      }
      else
      {
        int v87 = 1;
        int v85 = 1;
      }
      uint64_t v77 = v126;
    }
    else
    {
      int v87 = 1;
      int v85 = 1;
    }
    int v150 = 0;
    uint64_t v88 = *((void *)a1 + 96);
    if (v88)
    {
      uint64_t v89 = *((void *)a1 + 72);
      unint64_t v90 = *((unsigned int *)v128 + 2);
      if (*(void *)(v89 + 184) > v90 && (uint64_t v91 = *(void *)(v89 + 176) + 12 * v90) != 0)
      {
        int v92 = *(unsigned __int16 *)(v91 + 2);
        int v93 = *(unsigned __int16 *)(v91 + 4) << 16;
      }
      else
      {
        int v92 = 0;
        int v93 = -65536;
      }
      int v149 = v92 | v93;
      uint64_t v94 = v88 + 8;
      __int16 v95 = sub_270E0((void *)(v88 + 8), (unsigned __int16 *)&v149);
      if (!v95)
      {
        uint64_t v148 = 0;
        long long v147 = 0u;
        long long v146 = 0u;
        long long v145 = 0u;
        long long v144 = 0u;
        long long v143 = 0u;
        LODWORD(v142) = v149;
        __int16 v95 = sub_107944(v94, (unsigned __int16 *)&v142, (uint64_t)&v142);
      }
      ++v95[7];
    }
    uint64_t v96 = *((void *)a1 + 96);
    if (!v77)
    {
      if (v96)
      {
        uint64_t v102 = *((void *)a1 + 72);
        unint64_t v103 = *((unsigned int *)v128 + 2);
        if (*(void *)(v102 + 184) > v103 && (uint64_t v104 = *(void *)(v102 + 176) + 12 * v103) != 0)
        {
          int v105 = *(unsigned __int16 *)(v104 + 2);
          int v106 = *(unsigned __int16 *)(v104 + 4) << 16;
        }
        else
        {
          int v105 = 0;
          int v106 = -65536;
        }
        int v149 = v105 | v106;
        uint64_t v112 = v96 + 8;
        unint64_t v113 = sub_270E0((void *)(v96 + 8), (unsigned __int16 *)&v149);
        if (!v113)
        {
          uint64_t v148 = 0;
          long long v147 = 0u;
          long long v146 = 0u;
          long long v145 = 0u;
          long long v144 = 0u;
          long long v143 = 0u;
          LODWORD(v142) = v149;
          unint64_t v113 = sub_107944(v112, (unsigned __int16 *)&v142, (uint64_t)&v142);
        }
        ++v113[8];
      }
      operator new();
    }
    if (v85)
    {
      if (v96)
      {
        uint64_t v97 = *((void *)a1 + 72);
        unint64_t v98 = *((unsigned int *)v128 + 2);
        if (*(void *)(v97 + 184) > v98 && (uint64_t v99 = *(void *)(v97 + 176) + 12 * v98) != 0)
        {
          int v100 = *(unsigned __int16 *)(v99 + 2);
          int v101 = *(unsigned __int16 *)(v99 + 4) << 16;
        }
        else
        {
          int v100 = 0;
          int v101 = -65536;
        }
        int v149 = v100 | v101;
        uint64_t v114 = v96 + 8;
        id v115 = sub_270E0((void *)(v96 + 8), (unsigned __int16 *)&v149);
        if (!v115)
        {
          uint64_t v148 = 0;
          long long v147 = 0u;
          long long v146 = 0u;
          long long v145 = 0u;
          long long v144 = 0u;
          long long v143 = 0u;
          LODWORD(v142) = v149;
          id v115 = sub_107944(v114, (unsigned __int16 *)&v142, (uint64_t)&v142);
        }
        ++v115[9];
      }
      operator new();
    }
    if (v96)
    {
      uint64_t v107 = *((void *)a1 + 72);
      unint64_t v108 = *((unsigned int *)v128 + 2);
      if (*(void *)(v107 + 184) > v108 && (uint64_t v109 = *(void *)(v107 + 176) + 12 * v108) != 0)
      {
        int v110 = *(unsigned __int16 *)(v109 + 2);
        int v111 = *(unsigned __int16 *)(v109 + 4) << 16;
      }
      else
      {
        int v110 = 0;
        int v111 = -65536;
      }
      int v149 = v110 | v111;
      uint64_t v116 = v96 + 8;
      unint64_t v117 = sub_270E0((void *)(v96 + 8), (unsigned __int16 *)&v149);
      if (!v117)
      {
        uint64_t v148 = 0;
        long long v147 = 0u;
        long long v146 = 0u;
        long long v145 = 0u;
        long long v144 = 0u;
        long long v143 = 0u;
        LODWORD(v142) = v149;
        unint64_t v117 = sub_107944(v116, (unsigned __int16 *)&v142, (uint64_t)&v142);
      }
      ++v117[10];
    }
    [(TUIComponent *)v77 setGlobalsEnvironmentUseMask:v131];
    unint64_t v118 = (void *)*((void *)a1 + 93);
    if (v131) {
      [v118 addObject:v77];
    }
    else {
      [v118 removeObject:v77];
    }
    if (v121) {
      TUI::Evaluation::Context::evaluateComponentBindings(a1, v77, &v150);
    }
    if (v87) {
      TUI::Evaluation::Context::instantiateComponentBody(a1, v77, 0);
    }
    if (objc_opt_respondsToSelector()) {
      [*((id *)a1 + 21) addModel:v77];
    }
    double v142 = (void **)v133;
    sub_28EDC(&v142);

    if (*((void *)&v60 + 1)) {
      sub_123E4(*((std::__shared_weak_count **)&v60 + 1));
    }
    if (v127) {
      sub_123E4(v127);
    }
    if (v139)
    {
      uint64_t v140 = v139;
      operator delete(v139);
    }
  }
  else
  {
    TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a1 + 70), v12);
    id v129 = (id)objc_claimAutoreleasedReturnValue();
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1013, v129);
  }
}

void sub_1045C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, void *a16, std::__shared_weak_count *a17, uint64_t a18, id a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(void *)(v41 - 96) = &a37;
  sub_28EDC((void ***)(v41 - 96));

  if (a15) {
    sub_123E4(a15);
  }
  if (a17) {
    sub_123E4(a17);
  }
  uint64_t v43 = *(void **)(v41 - 224);
  if (v43)
  {
    *(void *)(v41 - 216) = v43;
    operator delete(v43);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateComponentBindings(TUI::Evaluation::Context *this, TUIComponent *a2, TUI::Model::Component **a3)
{
  uint64_t v5 = a2;
  unint64_t v6 = v5;
  if (v5)
  {
    [(TUIComponent *)v5 model];
    uint64_t v7 = *(void *)(v29 + 40);
    if ((void)v30) {
      sub_123E4((std::__shared_weak_count *)v30);
    }
  }
  else
  {
    uint64_t v7 = 0x545845545F5FLL;
  }
  if (*(_WORD *)v7)
  {
    uint64_t v8 = [(TUIComponent *)v6 identifier];
    uint64_t v9 = *((void *)this + 96);
    if (v9)
    {
      uint64_t v10 = *((void *)this + 72);
      int v11 = v6;
      [(TUIComponent *)v11 model];
      unint64_t v12 = *(unsigned int *)(*(void *)(v29 + 40) + 8);
      if (*(void *)(v10 + 184) > v12 && (uint64_t v13 = *(void *)(v10 + 176) + 12 * v12) != 0)
      {
        int v14 = *(unsigned __int16 *)(v13 + 2);
        int v15 = *(unsigned __int16 *)(v13 + 4) << 16;
      }
      else
      {
        int v14 = 0;
        int v15 = -65536;
      }
      if ((void)v30) {
        sub_123E4((std::__shared_weak_count *)v30);
      }

      int v36 = v14 | v15;
      uint64_t v16 = sub_270E0((void *)(v9 + 8), (unsigned __int16 *)&v36);
      if (!v16)
      {
        uint64_t v35 = 0;
        long long v34 = 0u;
        long long v33 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v30 = 0u;
        LODWORD(v29) = v36;
        uint64_t v16 = sub_107944(v9 + 8, (unsigned __int16 *)&v29, (uint64_t)&v29);
      }
      ++v16[3];
    }
    *((void *)this + 8sub_1265C((uint64_t)this + 8) = v6;
    id v17 = [objc_alloc((Class)NSHashTable) initWithOptions:512 capacity:0];
    uint64_t v18 = (void *)*((void *)this + 89);
    *((void *)this + 89) = v17;

    uint64_t v19 = *(void *)this;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_1052E0;
    v23[3] = &unk_2556D8;
    uint64_t v26 = this;
    id v20 = v8;
    id v24 = v20;
    uint64_t v27 = v7;
    uint64_t v28 = a3;
    uint64_t v25 = v6;
    (*(void (**)(uint64_t, TUIComponent *, TUI::Evaluation::Context *, void, void *))(*(void *)v19
                                                                                                  + 208))(v19, v25, this, 0, v23);
    uint64_t v21 = (void *)*((void *)this + 89);
    *((_OWORD *)this + 44) = 0u;

    int v22 = (void *)*((void *)this + 90);
    *((void *)this + 90) = 0;
  }
}

void sub_104A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateComponentBody(TUI::Evaluation::Context *this, TUIComponent *a2, int a3)
{
  uint64_t v5 = a2;
  unint64_t v6 = v5;
  uint64_t v7 = *((void *)this + 96);
  if (v7)
  {
    uint64_t v8 = *((void *)this + 72);
    uint64_t v9 = v5;
    [(TUIComponent *)v9 model];
    unint64_t v10 = *(unsigned int *)(v76[5] + 8);
    if (*(void *)(v8 + 184) > v10 && (uint64_t v11 = *(void *)(v8 + 176) + 12 * v10) != 0)
    {
      int v12 = *(unsigned __int16 *)(v11 + 2);
      int v13 = *(unsigned __int16 *)(v11 + 4) << 16;
    }
    else
    {
      int v12 = 0;
      int v13 = -65536;
    }
    if ((void)v77) {
      sub_123E4((std::__shared_weak_count *)v77);
    }
    int v14 = v12 | v13;

    LODWORD(v74) = v14;
    int v15 = sub_270E0((void *)(v7 + 8), (unsigned __int16 *)&v74);
    if (!v15)
    {
      uint64_t v82 = 0;
      long long v81 = 0u;
      long long v80 = 0u;
      long long v79 = 0u;
      long long v78 = 0u;
      long long v77 = 0u;
      LODWORD(v76) = v74;
      int v15 = sub_107944(v7 + 8, (unsigned __int16 *)&v76, (uint64_t)&v76);
    }
    ++v15[6];
    *(_DWORD *)(v7 + 128 + 24 * *(void *)(v7 + 3200)) = v14;
    *(void *)(v7 + 128 + 24 * *(void *)(v7 + 3200) + 16) = 0;
    uint64_t v16 = mach_absolute_time();
    uint64_t v17 = *(void *)(v7 + 3200);
    *(void *)(v7 + 24 * v17 + 136) = v16;
    *(void *)(v7 + 3200) = v17 + 1;
  }
  uint64_t v18 = *((void *)this + 26);
  uint64_t v62 = *((void *)this + 22);
  uint64_t v63 = *((void *)this + 21);
  uint64_t v19 = *((void *)this + 92);
  NSUInteger location = (id *)((char *)this + 544);
  uint64_t v61 = (void *)*((void *)this + 68);
  id v20 = v61;
  uint64_t v70 = (id *)((char *)this + 752);
  obuint64_t j = (id)*((void *)this + 94);
  id v21 = obj;
  uint64_t v69 = (id *)((char *)this + 760);
  int v22 = (void *)*((void *)this + 95);
  id v23 = v22;
  long long v72 = *((_OWORD *)this + 41);
  *((_OWORD *)this + 41) = 0u;
  uint64_t v64 = *((void *)this + 84);
  *((void *)this + 84) = 0;
  uint64_t v67 = v21;
  uint64_t v68 = v20;
  id v66 = v23;
  if (a3)
  {
    [(TUIComponent *)v6 model];
    uint64_t v25 = v76[13];
    id v24 = (std::__shared_weak_count *)v76[14];
    if (v24)
    {
      atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
      sub_123E4(v24);
    }
    if ((void)v77) {
      sub_123E4((std::__shared_weak_count *)v77);
    }
    objc_storeStrong(location, *(id *)(v25 + 8));
    objc_storeStrong(v70, *(id *)(v25 + 16));
    objc_storeStrong(v69, *(id *)(v25 + 24));
    *((void *)this + 26) = *(void *)(v25 + 32);
  }
  uint64_t v59 = v19;
  *((void *)this + 92) = v6;
  uint64_t v26 = (void *)*((void *)this + 76);
  id v65 = v26;
  uint64_t v27 = [(TUIComponent *)v6 identifier];
  uint64_t v28 = (void *)*((void *)this + 76);
  *((void *)this + 76) = v27;

  uint64_t v29 = objc_alloc_init(TUIBoxBuilder);
  *((void *)this + 21) = v29;
  *((void *)this + 22) = **((void **)this + 3);
  [(TUIComponent *)v6 model];
  uint64_t v30 = v74;
  uint64_t v31 = *((void *)this + 74);
  *((void *)this + 74) = 0;
  uint64_t v32 = *(void *)(v30 + 40);
  int v33 = *(_DWORD *)(v32 + 12);
  if (*((unsigned char *)this + 552) && TUILocationNotNil(*(_DWORD *)(v32 + 12)))
  {
    long long v34 = (int *)*((void *)this + 83);
    unint64_t v35 = *((void *)this + 84);
    if ((unint64_t)v34 >= v35)
    {
      int v37 = (int *)*((void *)this + 82);
      uint64_t v58 = v34 - v37;
      if ((unint64_t)(v58 + 1) >> 62) {
        sub_4484();
      }
      unint64_t v38 = v35 - (void)v37;
      unint64_t v39 = (uint64_t)(v35 - (void)v37) >> 1;
      if (v39 <= v58 + 1) {
        unint64_t v39 = v58 + 1;
      }
      if (v38 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v40 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v40 = v39;
      }
      if (v40)
      {
        uint64_t v41 = (char *)sub_10790C((uint64_t)this + 672, v40);
        long long v34 = (int *)*((void *)this + 83);
        int v37 = (int *)*((void *)this + 82);
      }
      else
      {
        uint64_t v41 = 0;
      }
      unint64_t v42 = (int *)&v41[4 * v58];
      uint64_t v43 = &v41[4 * v40];
      *unint64_t v42 = v33;
      int v36 = v42 + 1;
      while (v34 != v37)
      {
        int v44 = *--v34;
        *--unint64_t v42 = v44;
      }
      *((void *)this + 82) = v42;
      *((void *)this + 83) = v36;
      *((void *)this + 84) = v43;
      if (v37) {
        operator delete(v37);
      }
    }
    else
    {
      *long long v34 = v33;
      int v36 = v34 + 1;
    }
    *((void *)this + 83) = v36;
  }
  uint64_t v45 = *(void *)this;
  v73[0] = _NSConcreteStackBlock;
  v73[1] = 3221225472;
  v73[2] = sub_10563C;
  _OWORD v73[3] = &unk_2556F8;
  v73[4] = this;
  v73[5] = v32;
  (*(void (**)(uint64_t, TUIComponent *, TUI::Evaluation::Context *, uint64_t, void *))(*(void *)v45 + 208))(v45, v6, this, 1, v73);
  if (*((unsigned char *)this + 552) && TUILocationNotNil(v33)) {
    *((void *)this + 83) -= 4;
  }
  uint64_t v46 = *((void *)this + 74);
  *((void *)this + 74) = v31;
  int v47 = (void *)*((void *)this + 82);
  *((_OWORD *)this + 41) = v72;
  *((void *)this + 84) = v64;
  [(TUIBoxBuilder *)v29 finalizeModelsWithParent:v6];
  [(TUIComponent *)v6 setDirectEnvironmentUseMask:v46];
  *((void *)this + 21) = v63;
  *((void *)this + 22) = v62;
  objc_storeStrong(location, v61);
  objc_storeStrong(v70, obj);
  objc_storeStrong(v69, v22);
  *((void *)this + 26) = v18;
  objc_storeStrong((id *)this + 76, v26);
  *((void *)this + 92) = v59;
  uint64_t v48 = *((void *)this + 96);
  if (v48)
  {
    uint64_t v49 = *(void *)(v48 + 3200) - 1;
    *(void *)(v48 + 3200) = v49;
    uint64_t v50 = v48 + 24 * v49;
    int v51 = *(_DWORD *)(v50 + 128);
    unint64_t v52 = *(void *)(v50 + 136);
    uint64_t v53 = mach_absolute_time();
    v83[0] = v51;
    uint64_t v54 = sub_270E0((void *)(v48 + 8), (unsigned __int16 *)v83);
    if (!v54)
    {
      uint64_t v82 = 0;
      long long v81 = 0u;
      long long v80 = 0u;
      long long v79 = 0u;
      long long v78 = 0u;
      long long v77 = 0u;
      LODWORD(v76) = v83[0];
      uint64_t v54 = sub_107944(v48 + 8, (unsigned __int16 *)&v76, (uint64_t)&v76);
    }
    uint64_t v55 = v53 - v52;
    if (v52 >= v53) {
      uint64_t v55 = v52 - v53;
    }
    uint64_t v56 = v54[11];
    v54[12] += v55;
    uint64_t v57 = *(void *)(v48 + 3200);
    v54[11] = v55 - *(void *)(v48 + 24 * v57 + 144) + v56;
    if (v57) {
      *(void *)(v48 + 24 * v57 + 120) += v55;
    }
  }
  if (v75) {
    sub_123E4(v75);
  }

  if (v47) {
    operator delete(v47);
  }
}

void sub_10506C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  if (a25) {
    operator delete(a25);
  }

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateComponentLocals(uint64_t a1, uint64_t a2)
{
  int v4 = TUIElementNodeNil;
  int v27 = 1065353216;
  memset(v28, 0, sizeof(v28));
  int v29 = 1065353216;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v5 = (_OWORD *)(a1 + 248);
  long long v6 = *(_OWORD *)(a1 + 280);
  long long v22 = *(_OWORD *)(a1 + 248);
  long long v23 = *(_OWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 2sub_1265C((uint64_t)this + 48) = 0u;
  memset(v26, 0, sizeof(v26));
  long long v24 = v6;
  long long v25 = *(_OWORD *)(a1 + 296);
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  uint64_t v7 = a1 + 312;
  *(_OWORD *)(a1 + 264) = 0u;
  sub_29920((uint64_t)v26, a1 + 312);
  sub_29920((uint64_t)v28, a1 + 352);
  long long v9 = v30;
  long long v8 = v31;
  long long v10 = v5[10];
  long long v30 = v5[9];
  long long v31 = v10;
  v5[9] = v9;
  v5[10] = v8;
  long long v12 = v32;
  long long v11 = v33;
  long long v13 = v5[12];
  long long v32 = v5[11];
  long long v33 = v13;
  v5[11] = v12;
  v5[12] = v11;
  int v21 = *(_DWORD *)(a1 + 244);
  *(_DWORD *)(a1 + 244) = v4;
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(*(void *)(*(void *)a2 + 40) + 20) | ((unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)a2 + 40) + 2) << 32), 0);
  _OWORD *v5 = v22;
  v5[1] = v23;
  v5[2] = v24;
  uint64_t v5[3] = v25;
  sub_29920((uint64_t)v26, v7);
  sub_29920((uint64_t)v28, a1 + 352);
  long long v15 = v30;
  long long v14 = v31;
  long long v16 = v5[10];
  long long v30 = v5[9];
  long long v31 = v16;
  v5[9] = v15;
  v5[10] = v14;
  long long v18 = v32;
  long long v17 = v33;
  long long v19 = v5[12];
  long long v32 = v5[11];
  long long v33 = v19;
  v5[11] = v18;
  v5[12] = v17;
  *(_DWORD *)(a1 + 244) = v21;
  sub_354AC((uint64_t)v28);
  return sub_1265C((uint64_t)v26);
}

void sub_1052C4(_Unwind_Exception *a1)
{
  sub_354AC(v2);
  sub_1265C(v1);
  _Unwind_Resume(a1);
}

void sub_1052E0(uint64_t a1)
{
  uint64_t v2 = *(id **)(a1 + 48);
  unint64_t v3 = [v2[20] objectForKeyedSubscript:*(void *)(a1 + 32)];
  int v4 = v2 + 90;
  objc_storeStrong(v2 + 90, v3);
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)v2, *(unsigned int *)(*(void *)(a1 + 56) + 16) | ((unint64_t)**(unsigned __int16 **)(a1 + 56) << 32), 0);
  id v5 = *v2;
  unsigned int v6 = TUI::Evaluation::Context::closure((uint64_t)v2, (TUI::Instruction::Decoder *)*(unsigned int *)(*(void *)(a1 + 56) + 40));
  (*(void (**)(uint64_t *__return_ptr, id, void))(*(void *)v5 + 112))(&v13, v5, v6);
  long long v8 = v14;
  uint64_t v7 = v15;
  if (!v3 && *v4) {
    [v2[20] setObject:*v4 forKeyedSubscript:*(void *)(a1 + 32)];
  }
  uint64_t v9 = **(void **)(a1 + 64);
  if (v9)
  {
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    long long v10 = *(std::__shared_weak_count **)(v9 + 32);
    *(void *)(v9 + 24) = v8;
    *(void *)(v9 + 32) = v7;
    if (v10) {
      sub_123E4(v10);
    }
    if (v7) {
      sub_123E4(v7);
    }
    objc_storeStrong((id *)(**(void **)(a1 + 64) + 72), v2[89]);
    objc_storeStrong((id *)(**(void **)(a1 + 64) + 88), v2[90]);
  }
  else
  {
    [*(id *)(a1 + 40) model];
    uint64_t v12 = *(void *)(v13 + 24);
    long long v11 = *(std::__shared_weak_count **)(v13 + 32);
    if (v11)
    {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
      sub_123E4(v11);
    }
    if (v14) {
      sub_123E4(v14);
    }
    if (!v12 || !v8 || !TUI::Evaluation::Variables::Capture::operator==(v12, (uint64_t)v8)) {
      operator new();
    }
  }
  if (v7) {
    sub_123E4(v7);
  }
}

void sub_105598()
{
}

void sub_10563C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = TUI::Package::Buffer::renderBodyForComponent(*(void *)(v1 + 576), *(void *)(a1 + 40));
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(v2 + 8);
  if (*(unsigned char *)(v1 + 552) && TUILocationNotNil(*(_DWORD *)(v2 + 8)))
  {
    id v5 = *(int **)(v1 + 664);
    unint64_t v6 = *(void *)(v1 + 672);
    if ((unint64_t)v5 >= v6)
    {
      long long v8 = *(int **)(v1 + 656);
      uint64_t v9 = v5 - v8;
      if ((unint64_t)(v9 + 1) >> 62) {
        sub_4484();
      }
      unint64_t v10 = v6 - (void)v8;
      unint64_t v11 = (uint64_t)(v6 - (void)v8) >> 1;
      if (v11 <= v9 + 1) {
        unint64_t v11 = v9 + 1;
      }
      if (v10 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v12 = v11;
      }
      if (v12)
      {
        uint64_t v13 = (char *)sub_10790C(v1 + 672, v12);
        id v5 = *(int **)(v1 + 664);
        long long v8 = *(int **)(v1 + 656);
      }
      else
      {
        uint64_t v13 = 0;
      }
      long long v14 = (int *)&v13[4 * v9];
      long long v15 = &v13[4 * v12];
      *long long v14 = v4;
      uint64_t v7 = v14 + 1;
      while (v5 != v8)
      {
        int v16 = *--v5;
        *--long long v14 = v16;
      }
      *(void *)(v1 + 656) = v14;
      *(void *)(v1 + 664) = v7;
      *(void *)(v1 + 672) = v15;
      if (v8) {
        operator delete(v8);
      }
    }
    else
    {
      int *v5 = v4;
      uint64_t v7 = v5 + 1;
    }
    *(void *)(v1 + 664) = v7;
  }
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)v1, *(unsigned int *)(v3 + 4) | ((unint64_t)*(unsigned __int16 *)(v3 + 12) << 32), 0);
  if (*(unsigned char *)(v1 + 552))
  {
    if (TUILocationNotNil(v4)) {
      *(void *)(v1 + 664) -= 4;
    }
  }
}

BOOL TUI::Evaluation::Context::updateComponentGlobalsIfNeeded(TUI::Evaluation::Context *this, TUIComponent *a2)
{
  unint64_t v3 = (unint64_t)&v54;
  int v4 = a2;
  unint64_t v5 = (unint64_t)v4;
  uint64_t v6 = *((void *)this + 96);
  uint64_t v50 = v4;
  if (v6)
  {
    uint64_t v7 = *((void *)this + 72);
    long long v8 = v4;
    [(TUIComponent *)v8 model];
    unint64_t v9 = *((unsigned int *)v54[5] + 2);
    if (*(void *)(v7 + 184) > v9 && (uint64_t v10 = *(void *)(v7 + 176) + 12 * v9) != 0)
    {
      int v11 = *(unsigned __int16 *)(v10 + 2);
      int v12 = *(unsigned __int16 *)(v10 + 4) << 16;
    }
    else
    {
      int v11 = 0;
      int v12 = -65536;
    }
    if ((void)v55) {
      sub_123E4((std::__shared_weak_count *)v55);
    }
    int v13 = v11 | v12;

    LODWORD(v53[0]) = v13;
    long long v14 = sub_270E0((void *)(v6 + 8), (unsigned __int16 *)v53);
    if (!v14)
    {
      uint64_t v60 = 0;
      long long v59 = 0u;
      long long v58 = 0u;
      long long v57 = 0u;
      long long v56 = 0u;
      long long v55 = 0u;
      LODWORD(v54) = v53[0];
      long long v14 = sub_107944(v6 + 8, (unsigned __int16 *)&v54, (uint64_t)&v54);
    }
    ++v14[4];
    *(_DWORD *)(v6 + 16 * *(void *)(v6 + 3224) + 320sub_1265C((uint64_t)this + 8) = v13;
    uint64_t v15 = mach_absolute_time();
    uint64_t v16 = *(void *)(v6 + 3224);
    *(void *)(v6 + 16 * v16 + 3216) = v15;
    *(void *)(v6 + 3224) = v16 + 1;
  }
  [(id)v5 model];
  long long v17 = v54;
  if ((void)v55) {
    sub_123E4((std::__shared_weak_count *)v55);
  }
  long long v18 = (unsigned int *)v17[5];
  unint64_t v19 = v18[8];
  uint64_t v20 = *((unsigned __int16 *)v18 + 3);
  memset(v53, 0, sizeof(v53));
  if (v20)
  {
    uint64_t v21 = 0;
    int v51 = 0;
    uint64_t v22 = 4 * v19;
    do
    {
      uint64_t v23 = *((void *)this + 72);
      if (*(void *)(v23 + 344) > v19
        && (v24 = *(void *)(v23 + 336), (long long v25 = (unsigned __int16 *)(v22 + v24)) != 0))
      {
        uint64_t v26 = v24 + v22;
        unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *(unsigned __int16 *)(v24 + v22) | ((unint64_t)*(unsigned __int16 *)(v24 + v22 + 2) << 16);
        (*(void (**)(void ***__return_ptr))(**(void **)this + 192))(&v54);
        if (v54)
        {
          uint64_t v27 = *((unsigned int *)v54 + 22);
          unint64_t v28 = (unint64_t)v54[9];
          unint64_t v29 = (unint64_t)v54[10];
          sub_25FE4(v53, (long long *)&v54);
          v51 += v27;
          v21 |= v28 | v29;
        }
        else
        {
          unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *v25 | ((unint64_t)*(unsigned __int16 *)(v26 + 2) << 16);
          long long v30 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), v5);
          TUI::Evaluation::Context::reportError((uint64_t)this, 1012, v30);
        }
        if ((void)v55) {
          sub_123E4((std::__shared_weak_count *)v55);
        }
      }
      else
      {
        TUI::Evaluation::Context::reportError((uint64_t)this, 1012, 0);
      }
      v22 += 4;
      ++v19;
      --v20;
    }
    while (v20);
  }
  else
  {
    int v51 = 0;
    uint64_t v21 = 0;
  }
  [(TUIComponent *)v50 setGlobalsEnvironmentUseMask:v21];
  long long v31 = (void *)*((void *)this + 93);
  if (v21) {
    [v31 addObject:v50];
  }
  else {
    [v31 removeObject:v50];
  }
  [(TUIComponent *)v50 model];
  long long v32 = (char *)v54[10];
  if ((void)v55) {
    sub_123E4((std::__shared_weak_count *)v55);
  }
  if (v51 != v32)
  {
    uint64_t v33 = *((void *)this + 96);
    if (v33)
    {
      uint64_t v34 = *((void *)this + 72);
      unint64_t v35 = v50;
      [(TUIComponent *)v35 model];
      unint64_t v36 = *((unsigned int *)v54[5] + 2);
      if (*(void *)(v34 + 184) > v36 && (uint64_t v37 = *(void *)(v34 + 176) + 12 * v36) != 0)
      {
        int v38 = *(unsigned __int16 *)(v37 + 2);
        int v39 = *(unsigned __int16 *)(v37 + 4) << 16;
      }
      else
      {
        int v38 = 0;
        int v39 = -65536;
      }
      if ((void)v55) {
        sub_123E4((std::__shared_weak_count *)v55);
      }

      LODWORD(v52) = v38 | v39;
      unint64_t v40 = sub_270E0((void *)(v33 + 8), (unsigned __int16 *)&v52);
      if (!v40)
      {
        uint64_t v60 = 0;
        long long v59 = 0u;
        long long v58 = 0u;
        long long v57 = 0u;
        long long v56 = 0u;
        long long v55 = 0u;
        LODWORD(v54) = v52;
        unint64_t v40 = sub_107944(v33 + 8, (unsigned __int16 *)&v54, (uint64_t)&v54);
      }
      ++v40[5];
    }
    operator new();
  }
  uint64_t v41 = *((void *)this + 96);
  if (v41)
  {
    uint64_t v42 = *(void *)(v41 + 3224) - 1;
    *(void *)(v41 + 3224) = v42;
    uint64_t v43 = v41 + 16 * v42;
    int v44 = *(_DWORD *)(v43 + 3208);
    unint64_t v45 = *(void *)(v43 + 3216);
    uint64_t v46 = mach_absolute_time();
    LODWORD(v52) = v44;
    int v47 = sub_270E0((void *)(v41 + 8), (unsigned __int16 *)&v52);
    if (!v47)
    {
      uint64_t v60 = 0;
      long long v59 = 0u;
      long long v58 = 0u;
      long long v57 = 0u;
      long long v56 = 0u;
      long long v55 = 0u;
      LODWORD(v54) = v52;
      int v47 = sub_107944(v41 + 8, (unsigned __int16 *)&v54, (uint64_t)&v54);
    }
    uint64_t v48 = v46 - v45;
    if (v45 >= v46) {
      uint64_t v48 = v45 - v46;
    }
    v47[13] += v48;
  }
  uint64_t v54 = (void **)v53;
  sub_28EDC(&v54);

  return v51 != v32;
}

void sub_105CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  a16 = (void **)&a25;
  sub_28EDC(&a16);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateComponentRender(id *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = a1[72];
  unint64_t v7 = a3;
  if (v6[27] <= (unint64_t)a3) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6[26] + 28 * a3;
  }
  id v9 = *((id *)*a1 + 2);
  if (!v9 || ((unint64_t v10 = a2, IsNil = TUINameReferenceIsNil(a2), !v8) ? (v12 = 1) : (v12 = IsNil), v12 == 1))
  {
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1005, 0);
    goto LABEL_10;
  }
  [v9 model];
  uint64_t shared_weak_owners = v89[1].__shared_weak_owners_;
  if (v90) {
    sub_123E4(v90);
  }
  long long v14 = a1[72];
  if (v14[19] > v10 && (uint64_t v15 = v14[18] + 12 * v10) != 0)
  {
    int v16 = *(unsigned __int16 *)(v15 + 4);
    unsigned int v17 = *(unsigned __int16 *)(v15 + 2) | ((unsigned __int16)v16 << 16);
    unint64_t v18 = *(unsigned int *)(v15 + 8) | ((unint64_t)*(unsigned __int16 *)(v15 + 6) << 32);
    if (v16 != 0xFFFF)
    {
      int v19 = TUINameNil;
      if (*(_WORD *)(v15 + 2) != 0xFFFF) {
        int v19 = *(unsigned __int16 *)(v15 + 2) | ((unsigned __int16)v16 << 16);
      }
      goto LABEL_20;
    }
  }
  else
  {
    unsigned int v17 = -65536;
    unint64_t v18 = 0xFFFFFFFFLL;
  }
  int v19 = TUINameNil;
LABEL_20:
  uint64_t v20 = TUI::Package::Buffer::renderMethodForComponent(v14, shared_weak_owners, v19);
  uint64_t v21 = (unsigned int *)v20;
  if (v20)
  {
    unint64_t v77 = v18;
    unsigned int v78 = v7;
    uint64_t v22 = *(unsigned int *)(v8 + 20);
    uint64_t v23 = *(unsigned __int16 *)(v8 + 4);
    uint64_t v89 = 0;
    unint64_t v90 = 0;
    unint64_t v91 = 0;
    long long v79 = (unsigned int *)v20;
    if (v23)
    {
      uint64_t v24 = 0;
      uint64_t v25 = v22 | (v23 << 32);
      do
      {
        unint64_t v7 = v24 + v25;
        uint64_t v26 = a1[72];
        if (v26[27] > (unint64_t)(v24 + v25))
        {
          uint64_t v27 = v26[26] + 28 * v7;
          if (v27)
          {
            unint64_t v3 = *(unsigned int *)(v27 + 8);
            if (TUIConditionIsNil(*(_DWORD *)(v27 + 8))
              || (TUI::Evaluation::Context::resolve((uint64_t)a1, (TUI::Instruction::Decoder *)v3, (uint64_t)&v86),
                  unint64_t v3 = (unint64_t)TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v86, (const TUI::Evaluation::Context *)a1), v87, v3))
            {
              unint64_t v28 = v90;
              if ((unint64_t)v90 >= v91)
              {
                long long v30 = v89;
                int64_t v31 = ((char *)v90 - (char *)v89) >> 2;
                unint64_t v32 = v31 + 1;
                if ((unint64_t)(v31 + 1) >> 62) {
                  sub_4484();
                }
                uint64_t v33 = v91 - (void)v89;
                if ((uint64_t)(v91 - (void)v89) >> 1 > v32) {
                  unint64_t v32 = v33 >> 1;
                }
                if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v34 = v32;
                }
                if (v34)
                {
                  unint64_t v35 = (char *)sub_10790C((uint64_t)&v91, v34);
                  long long v30 = v89;
                  unint64_t v28 = v90;
                }
                else
                {
                  unint64_t v35 = 0;
                }
                unint64_t v36 = &v35[4 * v31];
                *(_DWORD *)unint64_t v36 = v7;
                unint64_t v29 = (std::__shared_weak_count *)(v36 + 4);
                while (v28 != v30)
                {
                  int shared_weak_owners_high = HIDWORD(v28[-1].__shared_weak_owners_);
                  unint64_t v28 = (std::__shared_weak_count *)((char *)v28 - 4);
                  *((_DWORD *)v36 - 1) = shared_weak_owners_high;
                  v36 -= 4;
                }
                uint64_t v89 = (std::__shared_weak_count *)v36;
                unint64_t v90 = v29;
                unint64_t v91 = (unint64_t)&v35[4 * v34];
                if (v30) {
                  operator delete(v30);
                }
              }
              else
              {
                LODWORD(v90->__vftable) = v7;
                unint64_t v29 = (std::__shared_weak_count *)((char *)&v28->__vftable + 4);
              }
              unint64_t v90 = v29;
            }
          }
        }
        ++v24;
      }
      while (v24 != v23);
      if (v89 == v90)
      {
        int v74 = 0;
        int v39 = 0;
        id v73 = 0;
        uint64_t v21 = v79;
      }
      else
      {
        unint64_t v7 = (unint64_t)*a1;
        unsigned int v38 = TUI::Evaluation::Context::closureForElement((uint64_t)a1, v8);
        uint64_t v21 = v79;
        (*(void (**)(id *__return_ptr, unint64_t, void))(*(void *)v7 + 112))(&v86, v7, v38);
        int v74 = (int)v86;
        id v73 = v87;
        int v39 = v88;
      }
    }
    else
    {
      int v74 = 0;
      int v39 = 0;
      id v73 = 0;
    }
    long long v80 = v39;
    uint64_t v41 = a1[72];
    unint64_t v42 = *v21;
    if (v41[23] > v42 && (uint64_t v43 = v41[22] + 12 * v42) != 0)
    {
      uint64_t v75 = *(unsigned int *)(v43 + 8);
      unint64_t v76 = (unint64_t)*(unsigned __int16 *)(v43 + 6) << 32;
    }
    else
    {
      uint64_t v75 = 0xFFFFFFFFLL;
      unint64_t v76 = 0;
    }
    (*(void (**)(id, uint64_t))(*(void *)*a1 + 72))(*a1, 63);
    int v44 = v89;
    for (i = v90; v44 != i; int v44 = (std::__shared_weak_count *)((char *)v44 + 4))
    {
      unint64_t v46 = LODWORD(v44->__vftable);
      int v47 = a1[72];
      if (v47[27] > v46)
      {
        uint64_t v48 = v47[26] + 28 * v46;
        if (v48)
        {
          if (TUI::Package::Buffer::findAttribute(v47, 0x95u, *(unsigned int *)(v48 + 16) | ((unint64_t)*(unsigned __int16 *)(v48 + 2) << 32)) == 65685)
          {
            uint64_t v50 = a1[72];
            if (v50[29] > v49 && (int v51 = (int *)(v50[28] + 12 * v49)) != 0)
            {
              unint64_t v52 = v51 + 1;
            }
            else
            {
              unint64_t v52 = &TUIConditionNil;
              int v51 = &TUIValueNil;
            }
            uint64_t v53 = (TUI::Instruction::Decoder *)*v51;
            if (!TUIConditionNotNil(*v52))
            {
              uint64_t v55 = TUI::Instruction::Decoder::elementName(v53, (uint64_t)a1, v54);
              unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v55;
              if (TUINameIsValid(v3))
              {
                int v83 = v74;
                id v84 = v73;
                int v85 = v80;
                if (v80) {
                  atomic_fetch_add_explicit(&v80->__shared_owners_, 1uLL, memory_order_relaxed);
                }
                id v86 = 0;
                LODWORD(v87) = v46;
                unint64_t v7 = v7 & 0xFFFFFFFF00000000 | v55;
                TUI::Evaluation::Context::pushNamedElement(a1, v7, &v83, (uint64_t)&v86);

                if (v80) {
                  sub_123E4(v80);
                }
              }
            }
          }
        }
      }
    }
    TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v77);
    id v56 = *a1;
    TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(&v81);
    (*(void (**)(id, uint64_t *))(*(void *)v56 + 160))(v56, &v81);
    if (v82) {
      sub_123E4(v82);
    }
    TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v75 | v76);
    long long v57 = TUI::Evaluation::Context::identifierWithNode((uint64_t)a1, v78);
    id v58 = a1[76];
    id v59 = v58;
    objc_storeStrong(a1 + 76, v57);
    int v60 = v79[2];
    if (*((unsigned char *)a1 + 552) && TUILocationNotNil(v79[2]))
    {
      uint64_t v61 = (int *)a1[83];
      unint64_t v62 = (unint64_t)a1[84];
      if ((unint64_t)v61 >= v62)
      {
        uint64_t v64 = (int *)a1[82];
        uint64_t v65 = v61 - v64;
        if ((unint64_t)(v65 + 1) >> 62) {
          sub_4484();
        }
        unint64_t v66 = v62 - (void)v64;
        unint64_t v67 = (uint64_t)(v62 - (void)v64) >> 1;
        if (v67 <= v65 + 1) {
          unint64_t v67 = v65 + 1;
        }
        if (v66 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v68 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v68 = v67;
        }
        if (v68)
        {
          uint64_t v69 = (char *)sub_10790C((uint64_t)(a1 + 84), v68);
          uint64_t v61 = (int *)a1[83];
          uint64_t v64 = (int *)a1[82];
        }
        else
        {
          uint64_t v69 = 0;
        }
        uint64_t v70 = (int *)&v69[4 * v65];
        unint64_t v71 = &v69[4 * v68];
        *uint64_t v70 = v60;
        uint64_t v63 = v70 + 1;
        while (v61 != v64)
        {
          int v72 = *--v61;
          *--uint64_t v70 = v72;
        }
        a1[82] = v70;
        a1[83] = v63;
        a1[84] = v71;
        if (v64) {
          operator delete(v64);
        }
      }
      else
      {
        *uint64_t v61 = v60;
        uint64_t v63 = v61 + 1;
      }
      a1[83] = v63;
    }
    TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, v79[1] | ((unint64_t)*((unsigned __int16 *)v79 + 6) << 32), 0);
    if (*((unsigned char *)a1 + 552) && TUILocationNotNil(v60)) {
      a1[83] = (char *)a1[83] - 4;
    }
    objc_storeStrong(a1 + 76, v58);
    (*(void (**)(void))(*(void *)*a1 + 168))();
    (*(void (**)(void))(*(void *)*a1 + 80))();

    if (v80) {
      sub_123E4(v80);
    }
    if (v89)
    {
      unint64_t v90 = v89;
      operator delete(v89);
    }
  }
  else
  {
    unint64_t v40 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v17);
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1014, v40);
  }
LABEL_10:
}

void sub_106508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::defineComponentBinding(uint64_t a1, Entry a2, void *a3)
{
  id v5 = a3;
  if (objc_opt_respondsToSelector())
  {
    id v6 = v5;
    unint64_t v7 = [v6 instanceForObserver:*(void *)(a1 + 704)];
    if (v7) {
      [*(id *)(a1 + 712) addObject:v7];
    }
  }
  else
  {
    unint64_t v7 = v5;
  }
  Entry v8 = (Entry)-65536;
  Entry v9 = a2;
  TUI::Evaluation::Enumerator::State::State((uint64_t)v10, v8, v9);
  objc_storeStrong(&v11, v7);
  (**(void (***)(uint64_t, void, id *))(*(void *)a1 + 8))(*(void *)a1 + 8, *(unsigned int *)&a2, v10);
  TUI::Evaluation::Enumerator::State::~State(v10);
}

void sub_1066B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

TUIMutableDynamicValue *TUI::Evaluation::Context::componentViewStateWithName(uint64_t a1, unsigned int a2)
{
  if (*(void *)(a1 + 704))
  {
    int v4 = *(void **)(a1 + 720);
    if (!v4)
    {
      id v5 = [[_TUIViewStateMapping alloc] initWithParent:0];
      id v6 = *(void **)(a1 + 720);
      *(void *)(a1 + 720) = v5;

      int v4 = *(void **)(a1 + 720);
    }
    unint64_t v7 = [v4 viewStateForBinding:a2];
    if (!v7)
    {
      unint64_t v7 = [(TUIDynamicValue *)[TUIMutableDynamicValue alloc] initWithValue:0];
      [*(id *)(a1 + 720) setViewState:v7 forBinding:a2];
    }
  }
  else
  {
    unint64_t v7 = 0;
  }

  return v7;
}

void sub_1067C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::environmentChildContainersForContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = [*(id *)(a1 + 728) objectForKey:a2];
  unint64_t v3 = [v2 objectEnumerator];

  return v3;
}

void sub_106824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t TUI::Evaluation::Context::childrenOfNode(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(a1 + 576);
  if (*(void *)(v2 + 216) > (unint64_t)a2 && (uint64_t v3 = *(void *)(v2 + 208) + 28 * a2) != 0) {
    return *(unsigned int *)(v3 + 20) | ((unint64_t)*(unsigned __int16 *)(v3 + 4) << 32);
  }
  else {
    return TUIElementNodesNil;
  }
}

uint64_t TUI::Evaluation::Context::evaluateCconditionForNode(const TUI::Evaluation::Context *a1, unsigned int a2)
{
  uint64_t v2 = *((void *)a1 + 72);
  if (*(void *)(v2 + 216) <= (unint64_t)a2) {
    return 1;
  }
  uint64_t v3 = *(void *)(v2 + 208) + 28 * a2;
  if (!v3) {
    return 1;
  }
  TUI::Evaluation::Context::resolve((uint64_t)a1, (TUI::Instruction::Decoder *)*(unsigned int *)(v3 + 8), (uint64_t)v7);
  id v5 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v7, a1);

  return (uint64_t)v5;
}

void sub_1068F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateAttributeForNode(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  id v5 = *(void **)(a1 + 576);
  if (v5[27] <= (unint64_t)a3) {
    return 0;
  }
  uint64_t v6 = v5[26] + 28 * a3;
  if (!v6) {
    return 0;
  }
  int Attribute = TUI::Package::Buffer::findAttribute(v5, a2, *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int16 *)(v6 + 2) << 32));
  if ((_WORD)Attribute == 0xFFFF) {
    return 0;
  }
  uint64_t v10 = HIWORD(Attribute);
  if (!HIWORD(Attribute)) {
    return 0;
  }
  unint64_t v11 = v9;
  for (uint64_t i = 12 * v9; ; i += 12)
  {
    uint64_t v13 = *(void *)(a1 + 576);
    if (*(void *)(v13 + 232) <= v11)
    {
      uint64_t v15 = &TUIConditionNil;
      long long v14 = &TUIValueNil;
    }
    else
    {
      long long v14 = (int *)(i + *(void *)(v13 + 224));
      uint64_t v15 = v14 + 1;
      if (!v14)
      {
        uint64_t v15 = &TUIConditionNil;
        long long v14 = &TUIValueNil;
      }
    }
    int v16 = (TUI::Instruction::Decoder *)*v14;
    TUI::Evaluation::Context::resolve(a1, (TUI::Instruction::Decoder *)*v15, (uint64_t)&v20);
    unsigned int v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v20, (const TUI::Evaluation::Context *)a1);

    if (v17) {
      break;
    }
    ++v11;
    if (!--v10) {
      return 0;
    }
  }
  TUI::Instruction::Evaluation::evaluate(&v20, *(TUI::Instruction::Evaluation **)(a1 + 8), v16);
  *(_DWORD *)a4 = LODWORD(v20);
  objc_storeStrong((id *)(a4 + 8), obj);
  id v19 = obj;
  *(void *)(a4 + 16) = v22;

  return 1;
}

void sub_106A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::snapForAttribute(uint64_t a1, unsigned int a2)
{
  unsigned __int16 v10 = a2;
  if (a2 == 0xFFFF) {
    goto LABEL_7;
  }
  if (a2 >= 0x100) {
    sub_8CCD0("bitset test argument out of range");
  }
  if (((*(void *)(a1 + (((unint64_t)a2 >> 3) & 0x1FF8) + 280) >> a2) & 1) == 0)
  {
LABEL_7:
    id v5 = 0;
  }
  else
  {
    uint64_t v3 = sub_12E50((void *)(a1 + 352), &v10);
    int v4 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v3 + 3), (TUI::Symbol::Tab **)a1);
    if (v4 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      uint64_t v6 = (objc_class *)objc_opt_class();
      unint64_t v7 = NSStringFromClass(v6);
      id v8 = +[NSString stringWithFormat:@"expected TUISnap, got %@", v7];
      TUI::Evaluation::Context::reportError(a1, 1000, v8);

      id v5 = 0;
    }
    else
    {
      id v5 = v4;
    }
  }

  return v5;
}

void sub_106BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateStates(void *a1, void *a2, void *a3)
{
  id v20 = a2;
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = (void *)a1[76];
    id v22 = v6;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    obuint64_t j = v20;
    id v7 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v7)
    {
      id v8 = (void **)(a1 + 76);
      uint64_t v9 = *(void *)v28;
      do
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v28 != v9) {
            objc_enumerationMutation(obj);
          }
          unint64_t v11 = *(void **)(*((void *)&v27 + 1) + 8 * i);
          if (*((unsigned char *)a1 + 552)
            && ([(id)a1[86] containsObject:*(void *)(*((void *)&v27 + 1) + 8 * i)] & 1) == 0)
          {
            int v12 = +[NSString stringWithFormat:@"'%@' not a valid state", v11];
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1034, v12);
          }
          (*(void (**)(void, uint64_t))(*(void *)*a1 + 72))(*a1, 63);
          uint64_t v13 = a1[70];
          id v14 = v11;
          sub_6ACC(&__p, (char *)[v14 UTF8String]);
          __int16 v15 = TUI::Symbol::Tab::lookup(v13, (unsigned __int8 *)&__p);
          if (v26 < 0) {
            operator delete(__p);
          }
          uint64_t v16 = *(void *)(a1[70] + 40);
          if ((unint64_t)(*(void *)(a1[70] + 48) - v16) < 0xAB) {
            uint64_t v17 = 0xFFFFLL;
          }
          else {
            uint64_t v17 = *(unsigned __int16 *)(v16 + 170);
          }
          LODWORD(__p) = 6;
          id v24 = 0;
          __int16 v25 = v15;
          (*(void (**)(uint64_t, uint64_t, void **))(*(void *)(*a1 + 8) + 8))(*a1 + 8, v17 << 16, &__p);

          uint64_t v18 = [v22 tui_identifierByAppendingString:v14];
          id v19 = *v8;
          void *v8 = (void *)v18;

          v5[2](v5, v14);
          objc_storeStrong((id *)a1 + 76, v6);
          (*(void (**)(void))(*(void *)*a1 + 80))();
        }
        id v7 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
      }
      while (v7);
    }
  }
}

void sub_106E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::debugDumpEnvironmentContainerStructure(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = objc_opt_new();
  sub_106F90(a1, v3, 0, v4);

  return v4;
}

void sub_106F74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_106F90(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v31 = a2;
  id v7 = a4;
  id v8 = [&stru_257BF0 stringByPaddingToLength:2 * a3 withString:@" " startingAtIndex:0];
  [v7 appendString:v8];

  uint64_t v9 = (objc_class *)objc_opt_class();
  unsigned __int16 v10 = NSStringFromClass(v9);
  [v7 appendFormat:@"<%@ %p", v10, v31];

  uint64_t v11 = objc_opt_class();
  long long v30 = TUIDynamicCast(v11, v31);
  if (v30)
  {
    int v12 = *(TUI::Symbol::Tab **)(a1 + 560);
    uint64_t v13 = *(void **)(a1 + 576);
    [v30 model];
    unsigned int v14 = TUI::Package::Buffer::nameForComponent(v13, *(void *)(v36 + 40));
    __int16 v15 = TUI::Symbol::Tab::string(v12, v14);
    [v7 appendFormat:@" %@", v15];

    if (v37) {
      sub_123E4(v37);
    }
  }
  uint64_t v16 = [v31 identifier];
  uint64_t v17 = [v16 tui_identifierToString];
  uint64_t v18 = sub_107BA8((char)[v31 directEnvironmentUseMask]);
  [v7 appendFormat:@" id=%@ useMask=%@", v17, v18];

  if (objc_opt_respondsToSelector())
  {
    id v19 = v31;
    id v20 = sub_107BA8((char)[v19 globalsEnvironmentUseMask]);
    [v7 appendFormat:@" globalsUseMask=%@", v20];
  }
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v21 = TUI::Evaluation::Context::environmentChildContainersForContainer(a1, (uint64_t)v31);
  id v22 = [v21 countByEnumeratingWithState:&v32 objects:v38 count:16];
  if (v22)
  {
    uint64_t v29 = 2 * a3;
    char v23 = 0;
    uint64_t v24 = *(void *)v33;
    uint64_t v25 = a3 + 1;
    do
    {
      for (uint64_t i = 0; i != v22; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v24) {
          objc_enumerationMutation(v21);
        }
        uint64_t v27 = *(void *)(*((void *)&v32 + 1) + 8 * i);
        if ((v23 & 1) == 0) {
          [v7 appendString:@" {\n"];
        }
        sub_106F90(a1, v27, v25, v7);
        char v23 = 1;
      }
      id v22 = [v21 countByEnumeratingWithState:&v32 objects:v38 count:16];
    }
    while (v22);

    long long v28 = [&stru_257BF0 stringByPaddingToLength:v29 withString:@" " startingAtIndex:0];
    [v7 appendString:v28];

    [v7 appendString:@"}"];
  }
  else
  {
  }
  [v7 appendString:@"\n"];
}

void sub_1072D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::defineStruct(TUI::Evaluation::Context *this, unsigned int a2, TUIStruct *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)this;
  int v10 = 18;
  uint64_t v11 = v5;
  uint64_t v7 = a2;
  id v8 = *(void (**)(uint64_t, uint64_t, int *))(*(void *)(v6 + 8) + 8);
  uint64_t v9 = v5;
  v8(v6 + 8, v7, &v10);
}

void sub_10743C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void *sub_107454(void *result, unint64_t a2)
{
  unint64_t v2 = a2;
  id v3 = result;
  int v4 = *((_DWORD *)result + 2);
  id v5 = (void *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    unint64_t v2 = a2 - v6;
    void *result = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    uint64_t result = memset(v5, 255, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    id v8 = &v5[v7];
    void *v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void sub_107508(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  id v5 = *(void **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    id v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

void sub_1075B8(uint64_t a1, uint64_t *a2)
{
  sub_10765C(a1);
  uint64_t v4 = *a2;
  *a2 = 0;
  id v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v8 = a2[2];
  unint64_t v7 = a2 + 2;
  uint64_t v6 = v8;
  uint64_t v9 = *(v7 - 1);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v9;
  *(v7 - 1) = 0;
  uint64_t v10 = v7[1];
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    unint64_t v11 = *(void *)(v6 + 8);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        v11 %= v12;
      }
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v11) = a1 + 16;
    *unint64_t v7 = 0;
    v7[1] = 0;
  }
}

void sub_10765C(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_352C4(a1, *(id **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t sub_1076B4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  objc_initWeak((id *)a1, a2);
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v11;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = a6;
  return a1;
}

void sub_107724(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_107798(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1078BC((id **)va, 0);
  _Unwind_Resume(a1);
}

void sub_1077B4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

id *sub_1077EC(uint64_t a1)
{
  uint64_t result = *(id **)(a1 + 24);
  if (result)
  {
    sub_107878(result);
    operator delete();
  }
  return result;
}

uint64_t sub_107834(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

id *sub_107878(id *a1)
{
  objc_destroyWeak(a1);
  return a1;
}

id *sub_1078BC(id **a1, id *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_107878(result);
    operator delete();
  }
  return result;
}

void *sub_10790C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_3EA4();
  }
  return operator new(4 * a2);
}

unsigned __int16 *sub_107944(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  int v6 = *a2;
  unint64_t v7 = a2[1];
  unint64_t v8 = (v6 << 16) | v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = (v6 << 16) | v7;
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
    id v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      id v12 = (unsigned __int16 *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = *((void *)v12 + 1);
          if (v13 == v8)
          {
            if (v12[9] == v7 && v12[8] == v6) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          id v12 = *(unsigned __int16 **)v12;
        }
        while (v12);
      }
    }
  }
  id v12 = (unsigned __int16 *)operator new(0x70uLL);
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *(_DWORD *)a3;
  *(_OWORD *)(v12 + 2sub_1265C((uint64_t)this + 8) = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(v12 + 36) = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(v12 + 44) = *(_OWORD *)(a3 + 72);
  *((void *)v12 + 13) = *(void *)(a3 + 88);
  *(_OWORD *)(v12 + 12) = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(v12 + 20) = *(_OWORD *)(a3 + 24);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_3ED8(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  id v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)id v12 = *v22;
LABEL_42:
    *id v22 = v12;
    goto LABEL_43;
  }
  *(void *)id v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*(void *)v12)
  {
    unint64_t v23 = *(void *)(*(void *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    id v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_107B94(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

id sub_107BA8(char a1)
{
  uint64_t v2 = objc_opt_new();
  [v2 appendString:@"("];
  if ((a1 & 1) == 0)
  {
    if ((a1 & 4) == 0)
    {
      if ((a1 & 8) == 0)
      {
        char v3 = 1;
        if ((a1 & 0x10) != 0) {
          goto LABEL_5;
        }
LABEL_16:
        if ((a1 & 0x20) == 0) {
          goto LABEL_20;
        }
        if (v3) {
          goto LABEL_19;
        }
        goto LABEL_18;
      }
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  [v2 appendString:@"size"];
  if ((a1 & 4) != 0)
  {
    [v2 appendString:@","];
LABEL_11:
    [v2 appendString:@"sizeClass"];
  }
  if ((a1 & 8) == 0) {
    goto LABEL_15;
  }
  [v2 appendString:@","];
LABEL_14:
  [v2 appendString:@"configuration"];
LABEL_15:
  char v3 = 0;
  if ((a1 & 0x10) == 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v3 & 1) == 0) {
    [v2 appendString:@","];
  }
  [v2 appendString:@"style"];
  if ((a1 & 0x20) != 0)
  {
LABEL_18:
    [v2 appendString:@","];
LABEL_19:
    [v2 appendString:@"other"];
  }
LABEL_20:
  [v2 appendString:@""]);

  return v2;
}

void sub_107CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_107CE4(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  int v7 = *a2;
  unint64_t v8 = a2[1];
  unint64_t v9 = (v7 << 16) | v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = (v7 << 16) | v8;
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
    id v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      unint64_t v13 = *v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (*((unsigned __int16 *)v13 + 9) == v8 && *((unsigned __int16 *)v13 + 8) == v7) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          unint64_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  float v16 = (void *)(a1 + 16);
  unint64_t v13 = operator new(0x20uLL);
  *unint64_t v13 = 0;
  v13[1] = v9;
  *((_DWORD *)v13 + 4) = **a4;
  void v13[3] = 0;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_3ED8(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *unint64_t v13 = *v24;
LABEL_42:
    void *v24 = v13;
    goto LABEL_43;
  }
  *unint64_t v13 = *v16;
  void *v16 = v13;
  *(void *)(v23 + 8 * v4) = v16;
  if (*v13)
  {
    unint64_t v25 = *(void *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v13;
}

void sub_107F30(_Unwind_Exception *a1)
{
  sub_12DF8(v2, v1);
  _Unwind_Resume(a1);
}

void sub_107F4C(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_107FC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1080A0((id **)va, 0);
  _Unwind_Resume(a1);
}

void sub_107FDC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

id *sub_108014(uint64_t a1)
{
  uint64_t result = *(id **)(a1 + 24);
  if (result)
  {
    TUI::Evaluation::Context::Snapshot::~Snapshot(result);
    operator delete();
  }
  return result;
}

uint64_t sub_10805C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

id *sub_1080A0(id **a1, id *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    TUI::Evaluation::Context::Snapshot::~Snapshot(result);
    operator delete();
  }
  return result;
}

char *sub_1080F0(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  int v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *int v7 = 0;
      v7[1] = 0;
      void v7[2] = 0;
    }
    if (a4 >> 62) {
      sub_4484();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_1081FC(v7, v11);
    unint64_t v13 = (char *)v7[1];
    id v12 = (void **)(v7 + 1);
    unint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      float v18 = v9;
      BOOL v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  id v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  float v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    unint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    float v18 = v9;
    BOOL v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *id v12 = &v9[v17];
  return result;
}

char *sub_1081FC(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_4484();
  }
  uint64_t result = (char *)sub_10790C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *sub_108240(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    uint64_t result = sub_1081FC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1082A0(_Unwind_Exception *exception_object)
{
  char v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + sub_1265C((uint64_t)this + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1082BC(uint64_t a1, unsigned __int16 *a2, _DWORD *a3)
{
  int v6 = *a2;
  unint64_t v7 = a2[1];
  unint64_t v8 = (v6 << 16) | v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = (v6 << 16) | v7;
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
    unint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      id v12 = *v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (*((unsigned __int16 *)v12 + 9) == v7 && *((unsigned __int16 *)v12 + 8) == v6) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          id v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  id v12 = operator new(0x18uLL);
  *id v12 = 0;
  v12[1] = v8;
  *((_DWORD *)v12 + 4) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_3ED8(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  size_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *id v12 = *v22;
LABEL_42:
    *size_t v22 = v12;
    goto LABEL_43;
  }
  *id v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    unint64_t v23 = *(void *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    size_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_1084DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1084F0(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_108558(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1927A4(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_108574(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1085AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  return result;
}

uint64_t sub_1085DC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_108620(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)uint64_t result = a4;
  *(void *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(void *)(result + 14) = a3;
  return result;
}

void sub_108C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_108CE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_108D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_108DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_108E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_108E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_108F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_108FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1090BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1091DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10947C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10948C(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  if ([v6 length]) {
    [v6 appendString:@"\n"];
  }
  if (a3)
  {
    unint64_t v7 = 1;
    do
    {
      [v6 appendString:@"   | "];
      ++v7;
    }
    while (v7 <= a3);
  }
  if (v5)
  {
    unint64_t v8 = [v5 description];
    unint64_t v9 = v8;
    if (!v8)
    {
      unint64_t v9 = +[NSString stringWithFormat:@"-desc was nil!-"];
    }
    [v6 appendString:v9];
    if (!v8) {
  }
    }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint8x8_t v10 = [v5 children];
  id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v16;
    uint64_t v13 = (a3 + 1);
    do
    {
      for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v12) {
          objc_enumerationMutation(v10);
        }
        sub_10948C(*(void *)(*((void *)&v15 + 1) + 8 * i), v6, v13);
      }
      id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v11);
  }
}

void sub_109644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_109800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_109868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_109928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_109BCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_109DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10A11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10A20C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10A330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10A404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_10A420(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_10A4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10B670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10B714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10B848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10B9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10BD8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10C720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10C924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10CA04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10D20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_10D7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10D8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10D99C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10DBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,void *a33)
{
  _Unwind_Resume(a1);
}

void sub_10DC34(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = [*(id *)(a1 + 32) shouldUseSubviewRenderModelWithContext:*(void *)(a1 + 40)];
  if (v4)
  {
    id v5 = (id *)(a1 + 48);
    id v6 = *(id *)(a1 + 48);
    long long v7 = a2[1];
    *(_OWORD *)&v34.a = *a2;
    *(_OWORD *)&v34.c = v7;
    *(_OWORD *)&v34.tdouble x = a2[2];
    [*(id *)(a1 + 32) computedNaturalSize];
    CGAffineTransformMakeTranslation(&v34, v8 * 0.5, v9 * 0.5);
    uint64_t v10 = objc_opt_new();

    id v11 = (id)v10;
  }
  else
  {
    uint64_t v12 = [*(id *)(*(void *)(a1 + 32) + 24) submodel];
    id v5 = (id *)(a1 + 48);
    id v11 = *(id *)(a1 + 48);
    long long v13 = a2[1];
    *(_OWORD *)&v34.a = *a2;
    *(_OWORD *)&v34.c = v13;
    *(_OWORD *)&v34.tdouble x = a2[2];
    if (v12) {
      goto LABEL_6;
    }
  }
  id v14 = [*(id *)(a1 + 32) newRenderModelCompatibleWithKind:*(void *)(a1 + 56) context:*(void *)(a1 + 40)];
  if (!v14)
  {
    long long v15 = 0;
LABEL_10:
    uint64_t v18 = *(void *)(a1 + 56);
    unint64_t v19 = *(void **)(a1 + 32);
    uint64_t v20 = *(void *)(a1 + 40);
    CGAffineTransform v32 = v34;
    [v19 appendChildRenderModelCompatibleWithKind:v18 context:v20 transform:&v32 toModels:v11];
    goto LABEL_11;
  }
  uint64_t v12 = v14;
LABEL_6:
  long long v15 = [*(id *)(a1 + 40) convertRenderModel:v12 toKind:*(void *)(a1 + 56)];

  CGAffineTransform v33 = v34;
  long long v16 = [*(id *)(a1 + 32) _transformedRenderModel:v15 transform:&v33 context:*(void *)(a1 + 40) allowCache:v4 ^ 1];
  long long v17 = [*(id *)(a1 + 40) currentLiveTransform];
  [v16 setLiveTransform:v17];

  [v11 addObject:v16];
  if (!v15 || [*(id *)(a1 + 32) shouldAppendChildRenderModels]) {
    goto LABEL_10;
  }
LABEL_11:
  if (v4)
  {
    uint64_t v21 = [*(id *)(a1 + 40) renderModelForLayout:*(void *)(a1 + 32) submodels:v11 kind:6];
    size_t v22 = [*(id *)(a1 + 32) box];
    unint64_t v23 = [v22 identifier];
    uint64_t v24 = +[TUIContainerView renderModelWithSubviewsModel:v21 style:0 identifier:v23];

    [*(id *)(a1 + 32) renderModelSizeWithContext:*(void *)(a1 + 40)];
    [v24 setSize:];
    long long v25 = a2[1];
    v31[0] = *a2;
    v31[1] = v25;
    v31[2] = a2[2];
    char v26 = [*(id *)(a1 + 32) _transformedRenderModel:v24 transform:v31 context:*(void *)(a1 + 40) allowCache:1];
    uint64_t v27 = [*(id *)(a1 + 40) currentLiveTransform];
    [v26 setLiveTransform:v27];

    [*v5 addObject:v26];
  }
  if (*(void *)(*(void *)(a1 + 32) + 24))
  {
    long long v28 = [v15 animationGroups];

    if (v28)
    {
      uint64_t v29 = [v15 animationGroups];
      long long v30 = [v29 generateAllGroupRenderModelsFromSource:*(void *)(*(void *)(a1 + 32) + 24)];
      [*(id *)(*(void *)(a1 + 32) + 24) setAnimationRenderModels:v30];
    }
  }
}

void sub_10DF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10DFE8(uint64_t a1)
{
  [*(id *)(a1 + 32) computedTransformedSize];
  memset(&v10, 0, sizeof(v10));
  CGAffineTransformMakeTranslation(&v10, v2 * 0.5, v3 * 0.5);
  uint64_t v4 = *(void *)(a1 + 40);
  CGAffineTransform v9 = v10;
  return (*(uint64_t (**)(uint64_t, CGAffineTransform *, void, uint64_t, uint64_t, uint64_t))(v4 + 16))(v4, &v9, 0, v5, v6, v7);
}

void sub_10E210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10E394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10E4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10E670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E6EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10E9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10EA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10EC00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10EC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10EDCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10EFE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F1B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F5C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F63C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F6F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F7C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10F9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10FAAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10FCC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUILayoutDump(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 componentsSeparatedByString:@","];
  unsigned int v5 = [v4 containsObject:@"ptr"];
  unsigned int v6 = [v4 containsObject:@"box"];
  unsigned int v7 = [v4 containsObject:@"id"];
  unsigned int v8 = [v4 containsObject:@"content"];
  CGAffineTransform v9 = objc_opt_new();
  CGAffineTransform v10 = v9;
  uint64_t v11 = 2;
  if (!v6) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v5;
  uint64_t v13 = 4;
  if (!v7) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 8;
  if (!v8) {
    uint64_t v14 = 0;
  }
  sub_10FF20(v9, v3, v12 | v13 | v14, 0);

  return v10;
}

void sub_10FEF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10FF20(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a2;
  uint64_t v9 = 2 * a4;
  CGAffineTransform v10 = [&stru_257BF0 stringByPaddingToLength:2 * a4 withString:@" " startingAtIndex:0];
  [v7 appendString:v10];

  uint64_t v11 = (objc_class *)objc_opt_class();
  uint64_t v12 = NSStringFromClass(v11);
  [v8 computedFrame];
  uint64_t v13 = NSStringFromRect(v37);
  [v7 appendFormat:@"%@ %@", v12, v13];

  if (a3) {
    [v7 appendFormat:@" %p" v8];
  }
  if ((a3 & 4) != 0)
  {
    uint64_t v14 = [v8 box];
    long long v15 = [v14 identifier];
    long long v16 = [v15 tui_identifierToString];
    [v7 appendFormat:@" id=%@", v16];
  }
  if ((a3 & 2) != 0)
  {
    long long v17 = [v8 box];
    uint64_t v18 = (objc_class *)objc_opt_class();
    unint64_t v19 = NSStringFromClass(v18);
    uint64_t v20 = [v8 box];
    [v7 appendFormat:@" box=<%@ %p/>", v19, v20];
  }
  if ((a3 & 8) != 0)
  {
    uint64_t v21 = [v8 debugContentDescription];
    size_t v22 = (void *)v21;
    if (v21) {
      [v7 appendFormat:@" %@", v21];
    }
  }
  unint64_t v23 = [v8 children];
  id v24 = [v23 count];

  if (v24)
  {
    [v7 appendString:@"{\n"];
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v25 = [v8 children];
    id v26 = [v25 countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v26)
    {
      uint64_t v27 = *(void *)v33;
      uint64_t v28 = a4 + 1;
      do
      {
        uint64_t v29 = 0;
        do
        {
          if (*(void *)v33 != v27) {
            objc_enumerationMutation(v25);
          }
          sub_10FF20(v7, *(void *)(*((void *)&v32 + 1) + 8 * (void)v29), a3, v28);
          uint64_t v29 = (char *)v29 + 1;
        }
        while (v26 != v29);
        id v26 = [v25 countByEnumeratingWithState:&v32 objects:v36 count:16];
      }
      while (v26);
    }

    long long v30 = [&stru_257BF0 stringByPaddingToLength:v9 withString:@" " startingAtIndex:0];
    [v7 appendString:v30];

    CFStringRef v31 = @"}\n";
  }
  else
  {
    CFStringRef v31 = @"\n";
  }
  [v7 appendString:v31];
}

void sub_110238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1102C0(id a1)
{
  uint64_t v1 = +[NSBundle bundleForClass:objc_opt_class()];
  double v2 = [v1 URLForResource:@"TUILayout" withExtension:@"ppkg"];
  id v6 = 0;
  uint64_t v3 = +[NSData dataWithContentsOfURL:v2 options:8 error:&v6];
  id v4 = v6;
  unsigned int v5 = (void *)qword_2DF6F8;
  qword_2DF6F8 = v3;
}

void sub_11037C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_111D50(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v2 = (double)*(unint64_t *)&a2;
  id v3 = [*(id *)(a1 + 32) posterFrameImageView];
  [v3 setAlpha:v2];
}

void sub_111DA8(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v2 = (double)*(unint64_t *)&a2;
  id v3 = [*(id *)(a1 + 32) posterFrameImageView];
  [v3 setAlpha:v2];
}

void sub_111F70(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v2 = (double)*(unint64_t *)&a2;
  id v3 = [*(id *)(a1 + 32) playButton];
  [v3 setAlpha:v2];
}

void sub_111FC8(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) playButton];
  [v3 setEnabled:v2];

  uint64_t v4 = *(unsigned __int8 *)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) playButton];
  [v5 setUserInteractionEnabled:v4];
}

void sub_112048(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v3 = (double)*(unint64_t *)&a2;
  uint64_t v4 = [*(id *)(a1 + 32) playButton];
  [v4 setAlpha:v3];

  uint64_t v5 = *(unsigned __int8 *)(a1 + 40);
  id v6 = [*(id *)(a1 + 32) playButton];
  [v6 setEnabled:v5];

  uint64_t v7 = *(unsigned __int8 *)(a1 + 40);
  id v8 = [*(id *)(a1 + 32) playButton];
  [v8 setUserInteractionEnabled:v7];
}

void sub_112FD0(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) imageContentWithOptions:1];
  uint64_t v2 = [v5 image];
  id v3 = [v2 newImage];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 40) posterFrameImageView];
    [v4 setImage:v3];
  }
}

void sub_11394C(uint64_t a1, void *a2)
{
  if (([a2 isCancelled] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
    id v3 = [*(id *)(a1 + 32) feedControllerHost];
    uint64_t v4 = [v3 videoPlayerManager];
    id v5 = [*(id *)(*(void *)(a1 + 32) + 24) videoId];
    [v4 setMuteStateForPlayerWithVideoId:v5 muted:0 requestingHost:*(void *)(a1 + 32) isTriggerInitiated:1];

    [*(id *)(a1 + 32) _configureVideoViewController];
    [*(id *)(a1 + 32) _updateStateBasedSubviewsAnimated:1];
    [*(id *)(a1 + 32) _updateStateBasedTapGestureRecognizers];
    id v6 = *(void **)(a1 + 32);
    [v6 currentTime];
    double v8 = v7;
    uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 24) videoId];
    [v6 _reportEvent:5 mediaTimePlayed:v9 videoId:v8];

    CGAffineTransform v10 = [*(id *)(a1 + 32) videoViewController];
    [v10 flashPlaybackControlsWithDuration:3.0];
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 0;
}

void sub_113B0C(uint64_t a1, void *a2)
{
  if (([a2 isCancelled] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
    id v3 = [*(id *)(a1 + 32) feedControllerHost];
    uint64_t v4 = [v3 videoPlayerManager];
    id v5 = [*(id *)(*(void *)(a1 + 32) + 24) videoId];
    [v4 setMuteStateForPlayerWithVideoId:v5 muted:1 requestingHost:*(void *)(a1 + 32) isTriggerInitiated:1];

    [*(id *)(a1 + 32) _configureVideoViewController];
    [*(id *)(a1 + 32) _updateStateBasedSubviewsAnimated:1];
    [*(id *)(a1 + 32) _updateStateBasedTapGestureRecognizers];
    id v6 = *(void **)(a1 + 32);
    [v6 currentTime];
    double v8 = v7;
    uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 24) videoId];
    [v6 _reportEvent:6 mediaTimePlayed:v9 videoId:v8];
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 0;
}

void sub_113CE0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) videoViewController];
  [v1 flashPlaybackControlsWithDuration:100.0];
}

void sub_114324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1144B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1146AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_11476C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1147E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_114B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114BC0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 2;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + sub_1265C((uint64_t)this + 8) = *(void *)a1 + 4 * a2;
    }
  }
  else
  {
    sub_1164EC((char **)a1, a2 - v2);
  }
}

void sub_114D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114E28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114ECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_114F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_11500C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1152B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_115934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1159E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115A90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115BA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115F10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_115FE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1160C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_116174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_11623C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUIIdentifierIsEqualToIdentifier(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 == v4)
  {
    id v10 = &def_141F14 + 1;
  }
  else if ((v3 == 0) == (v4 != 0))
  {
    id v10 = 0;
  }
  else
  {
    uint64_t v6 = objc_opt_class();
    double v7 = TUIDynamicCast(v6, v3);
    if (v7)
    {
      uint64_t v8 = objc_opt_class();
      uint64_t v9 = TUIDynamicCast(v8, v5);
      if (v9) {
        id v10 = [v7 isEqual:v9];
      }
      else {
        id v10 = 0;
      }
    }
    else
    {
      uint64_t v11 = objc_opt_class();
      uint64_t v9 = TUIDynamicCast(v11, v3);
      if (v9)
      {
        uint64_t v12 = objc_opt_class();
        uint64_t v13 = TUIDynamicCast(v12, v5);
        if (v13) {
          id v10 = [v9 isEqual:v13];
        }
        else {
          id v10 = 0;
        }
      }
      else
      {
        uint64_t v13 = [v3 tui_identifierToString];
        uint64_t v14 = [v5 tui_identifierToString];
        id v10 = [v13 isEqualToString:v14];
      }
    }
  }
  return v10;
}

void sub_116450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id TUIIdentifierHash(void *a1)
{
  id v1 = [a1 tui_identifierToString];
  id v2 = [v1 hash];

  return v2;
}

void sub_1164DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1164EC(char **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  id v5 = v6;
  double v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 2)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 4 * a2);
      v7 += 4 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = v7 - *a1;
    unint64_t v10 = a2 + (v9 >> 2);
    if (v10 >> 62) {
      sub_4484();
    }
    uint64_t v11 = v9 >> 2;
    uint64_t v12 = v5 - v8;
    if (v12 >> 1 > v10) {
      unint64_t v10 = v12 >> 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v10;
    }
    if (v13)
    {
      uint64_t v14 = (char *)sub_10790C(v4, v13);
      uint64_t v8 = *a1;
      double v7 = a1[1];
    }
    else
    {
      uint64_t v14 = 0;
    }
    long long v15 = &v14[4 * v11];
    long long v16 = &v14[4 * v13];
    bzero(v15, 4 * a2);
    long long v17 = &v15[4 * a2];
    while (v7 != v8)
    {
      int v18 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v15 - 1) = v18;
      v15 -= 4;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

id sub_1167FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 lastObject];
  id v5 = [v4 count];

  if (v5 == *(id *)(a1 + 32))
  {
    uint64_t v6 = &__NSArray0__struct;
  }
  else
  {
    double v7 = [v3 lastObject];
    uint64_t v9 = v7;
    uint64_t v6 = +[NSArray arrayWithObjects:&v9 count:1];
  }

  return v6;
}

void sub_116F38(id a1)
{
  id v1 = objc_alloc_init(_TUIRunLoopWaiter);
  id v2 = (void *)qword_2DF708;
  qword_2DF708 = (uint64_t)v1;
}

void sub_117134(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24));
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  [*(id *)(*(void *)(a1 + 32) + 40) removeAllObjects];
  *(unsigned char *)(*(void *)(a1 + 32) + 8) &= ~1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24));
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * i) + 16))();
      }
      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  uint64_t v8 = TUISignpostFeedViewController();
  os_signpost_id_t v9 = os_signpost_id_generate(v8);

  unint64_t v10 = TUISignpostFeedViewController();
  uint64_t v11 = v10;
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v11, OS_SIGNPOST_INTERVAL_BEGIN, v9, "RunLoopWaitForReadyAssertion", (const char *)&unk_243F7A, v14, 2u);
  }

  dispatch_group_wait(*(dispatch_group_t *)(*(void *)(a1 + 32) + 32), 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v12 = TUISignpostFeedViewController();
  unint64_t v13 = v12;
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v13, OS_SIGNPOST_INTERVAL_END, v9, "RunLoopWaitForReadyAssertion", (const char *)&unk_243F7A, v14, 2u);
  }
}

void sub_1174AC(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24));
  --*(void *)(*(void *)(a1 + 32) + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24));
  id v2 = *(NSObject **)(*(void *)(a1 + 32) + 32);

  dispatch_group_leave(v2);
}

id sub_11750C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_117780(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_118020(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsEnvironmentUpdate];
}

void sub_1184D4(id a1, TUIRenderModelSection *a2, double a3, id a4)
{
  uint64_t v6 = (void (**)(id, void *, void *, double))a4;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  double v7 = [(TUIRenderModelSection *)a2 impressions];
  id v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        unint64_t v13 = [v12 data];
        uint64_t v14 = [v13 identifier];
        v6[2](v6, v12, v14, a3);
      }
      id v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v9);
  }
}

void sub_11862C(id a1, TUIRenderModelSection *a2, double a3, id a4)
{
  uint64_t v6 = (void (**)(id, void *, void *, double))a4;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  double v7 = [(TUIRenderModelSection *)a2 linkEntities];
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        unint64_t v13 = [v12 identifier];
        v6[2](v6, v12, v13, a3);
      }
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

void sub_1192FC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) viewIfLoaded];
  [v1 setNeedsLayout];
}

void sub_119DA0(uint64_t a1)
{
  --*(void *)(*(void *)(a1 + 32) + 48);
  id v1 = [*(id *)(*(void *)(a1 + 32) + 248) imageResourceCache];
  [v1 deferLoadsEnd];
}

id sub_11A428(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeNotifyWhenAppliedDeferral];
}

void sub_11A430(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_11A4D0;
  v3[3] = &unk_252320;
  id v2 = *(void **)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  TUIDispatchAsyncViaRunLoop((uint64_t)v3);
}

id sub_11A4D0(void *a1)
{
  id v2 = [*(id *)(a1[4] + 464) transactionCoordinator];
  [v2 finalizeSyncTransaction:a1[5]];

  id v3 = (void *)a1[6];

  return [v3 invalidate];
}

void sub_11A764(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_11A804;
  v3[3] = &unk_252320;
  id v2 = *(void **)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  TUIDispatchAsyncViaRunLoop((uint64_t)v3);
}

id sub_11A804(void *a1)
{
  id v2 = [*(id *)(a1[4] + 464) transactionCoordinator];
  [v2 finalizeSyncTransaction:a1[5]];

  id v3 = (void *)a1[6];

  return [v3 invalidate];
}

void sub_11AA00(uint64_t a1)
{
  id v2 = *(unsigned char **)(a1 + 32);
  if ((v2[304] & 6) != 0)
  {
    id v3 = [v2 view];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v31 = v10;

    [*(id *)(*(void *)(a1 + 32) + 456) bounds];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v20 = *(void *)(v19 + 304);
    double v21 = 1.0;
    CGFloat v29 = v5;
    CGFloat v30 = v7;
    if ((v20 & 2) != 0)
    {
      v34.origin.double x = v5;
      v34.origin.CGFloat y = v7;
      v34.size.double width = v9;
      CGFloat v23 = v31;
      v34.size.CGFloat height = v31;
      double Width = CGRectGetWidth(v34);
      v35.origin.double x = v12;
      v35.origin.CGFloat y = v14;
      v35.size.double width = v16;
      v35.size.CGFloat height = v18;
      CGFloat v25 = CGRectGetWidth(v35);
      uint64_t v19 = *(void *)(a1 + 32);
      double v22 = Width / v25;
      if ((*(void *)(v19 + 304) & 4) == 0)
      {
LABEL_7:
        CGAffineTransformMakeScale(&v33, v22, v21);
        uint64_t v28 = [*(id *)(v19 + 456) layer];
        CGAffineTransform v32 = v33;
        [v28 setAffineTransform:&v32];

        return;
      }
    }
    else
    {
      double v22 = 1.0;
      CGFloat v23 = v31;
      if ((v20 & 4) == 0) {
        goto LABEL_7;
      }
    }
    v36.origin.double x = v29;
    v36.origin.CGFloat y = v30;
    v36.size.double width = v9;
    v36.size.CGFloat height = v23;
    double Height = CGRectGetHeight(v36);
    v37.origin.double x = v12;
    v37.origin.CGFloat y = v14;
    v37.size.double width = v16;
    v37.size.CGFloat height = v18;
    CGFloat v27 = CGRectGetHeight(v37);
    uint64_t v19 = *(void *)(a1 + 32);
    double v21 = Height / v27;
    goto LABEL_7;
  }
}

void sub_11AB80(uint64_t a1)
{
  --*(void *)(*(void *)(a1 + 32) + 48);
  id v1 = [*(id *)(*(void *)(a1 + 32) + 248) imageResourceCache];
  [v1 deferLoadsEnd];
}

uint64_t sub_11B684(uint64_t a1)
{
  [*(id *)(a1 + 32) invalidate];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_11B6D8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_11B758;
  v2[3] = &unk_251828;
  id v1 = *(void **)(a1 + 40);
  v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  TUIDispatchAsyncViaRunLoop((uint64_t)v2);
}

void sub_11B758(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 464) transactionCoordinator];
  [v2 finalizeSyncTransaction:*(void *)(a1 + 40)];
}

BOOL sub_11BE78(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

uint64_t sub_11C7E0(uint64_t a1)
{
  return 1;
}

void sub_11D9C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 344);
  id v4 = *(id *)(a1 + 40);
  CGFloat v5 = *(void **)(v2 + 344);
  *(void *)(v2 + 344) = v4;
  id v6 = v3;

  [*(id *)(a1 + 32) _updateNavigationBarItems];
  [*(id *)(a1 + 32) _updateNavigationItemTriggerObservanceForCurrentRenderModel:*(void *)(a1 + 40) previous:v6];
}

void sub_11EB68(uint64_t a1, void *a2, void *a3)
{
  CGFloat v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  [v5 reset];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unint64_t v10[2] = sub_11EC54;
  void v10[3] = &unk_255A40;
  id v11 = *(id *)(a1 + 32);
  [v6 enumerateObjectsUsingBlock:v10];

  double v8 = [*(id *)(a1 + 32) imageResources];
  id v9 = [v8 copy];
  [*(id *)(a1 + 40) setObject:v9 forKeyedSubscript:v7];
}

void sub_11EC54(uint64_t a1, void *a2)
{
  id v3 = [a2 renderModel];
  uint64_t v4 = *(void *)(a1 + 32);
  long long v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v5;
  void v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v3 appendResourcesToCollector:v4 transform:v6];
}

void sub_11EFCC(void *a1)
{
  [*(id *)(a1[4] + 456) visibleBounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v10 = [*(id *)(a1[4] + 456) currentViewState];
  id v11 = +[TUIResourceCollector createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:](TUIResourceCollector, "createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:", v10, v3, v5, v7, v9);

  CGFloat v12 = [*(id *)(a1[4] + 456) renderModel];
  long long v13 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v25 = *(_OWORD *)&CGAffineTransformIdentity.a;
  long long v26 = v13;
  long long v27 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v12 appendResourcesToCollector:v11 transform:&v25];

  *(void *)&long long v25 = 0;
  *((void *)&v25 + 1) = &v25;
  *(void *)&long long v26 = 0x3032000000;
  *((void *)&v26 + 1) = sub_11F1F4;
  *(void *)&long long v27 = sub_11F204;
  CGFloat v14 = [_TUIImageResourceReadyWaiter alloc];
  double v15 = [v11 imageResources];
  uint64_t v16 = a1[5];
  double v17 = [*(id *)(a1[4] + 408) userInteractiveCallbackQueue];
  *((void *)&v27 + 1) = [(_TUIImageResourceReadyWaiter *)v14 initWithImageResources:v15 assertion:v16 assertionQueue:v17];

  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  void v21[2] = sub_11F20C;
  _OWORD v21[3] = &unk_255A90;
  uint64_t v18 = a1[7];
  uint64_t v20 = (void *)a1[5];
  uint64_t v19 = (void *)a1[6];
  CGFloat v23 = &v25;
  uint64_t v24 = v18;
  id v22 = v19;
  [v20 onInvalidate:v21];

  _Block_object_dispose(&v25, 8);
}

void sub_11F1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_11F1F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_11F204(uint64_t a1)
{
}

uint64_t sub_11F20C(void *a1)
{
  double v2 = TUISignpostFeedViewController();
  double v3 = v2;
  os_signpost_id_t v4 = a1[6];
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)double v8 = 0;
    _os_signpost_emit_with_name_impl(&def_141F14, v3, OS_SIGNPOST_INTERVAL_END, v4, "waitForVisibleImageResources", (const char *)&unk_243F7A, v8, 2u);
  }

  uint64_t v5 = *(void *)(a1[5] + 8);
  double v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = 0;

  uint64_t result = a1[4];
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_11F4B8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_11F4D0(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_11F4FC(uint64_t a1)
{
}

id sub_11F504(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_11F574;
  v2[3] = &unk_2542E0;
  v2[4] = *(void *)(a1 + 32);
  return TUIDispatchAsyncViaRunLoop((uint64_t)v2);
}

void sub_11F574(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    os_signpost_id_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

void sub_11F5E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, 1);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    os_signpost_id_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

void sub_11F64C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 456) visibleBounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v10 = [*(id *)(*(void *)(a1 + 32) + 456) currentViewState];
  id v11 = +[TUIResourceCollector createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:](TUIResourceCollector, "createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:", v10, v3, v5, v7, v9);

  CGFloat v12 = [*(id *)(*(void *)(a1 + 32) + 456) renderModel];
  long long v13 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v20 = *(_OWORD *)&CGAffineTransformIdentity.a;
  long long v21 = v13;
  long long v22 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v12 appendResourcesToCollector:v11 transform:&v20];

  *(void *)&long long v20 = 0;
  *((void *)&v20 + 1) = &v20;
  *(void *)&long long v21 = 0x3032000000;
  *((void *)&v21 + 1) = sub_11F1F4;
  *(void *)&long long v22 = sub_11F204;
  CGFloat v14 = [_TUIImageResourceReadyWaiter alloc];
  double v15 = [v11 imageResources];
  uint64_t v16 = *(void *)(a1 + 40);
  double v17 = [*(id *)(*(void *)(a1 + 32) + 408) userInitiatedCallbackQueue];
  *((void *)&v22 + 1) = [(_TUIImageResourceReadyWaiter *)v14 initWithImageResources:v15 assertion:v16 assertionQueue:v17];

  uint64_t v18 = *(void **)(a1 + 40);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_11F85C;
  v19[3] = &unk_2542E0;
  void v19[4] = &v20;
  [v18 onInvalidate:v19];
  _Block_object_dispose(&v20, 8);
}

void sub_11F844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_11F85C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  double v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0;
}

void sub_11FACC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 168) addRenderOverride:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

void sub_11FC08(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 168) removeRenderOverride:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

id sub_1200A0(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6)
{
  double v10 = *(void **)(*(void *)(a1 + 32) + 248);
  id v11 = a3;
  id v12 = a2;
  long long v13 = [v10 imageResourceCache];
  CGFloat v14 = [v13 imageResourceForTemplatedURL:v12 baseURL:v11 naturalSize:a4 contentsScale:a5];

  double v15 = [v14 unprocessedImageResource];

  return v15;
}

id sub_120414(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 456) setImpressionSnapshot:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 40);
  double v3 = *(void **)(*(void *)(a1 + 32) + 144);

  return [v3 updateWithImpressionSnapshot:v2];
}

void sub_121D40(uint64_t a1, void *a2)
{
  id v13 = a2;
  double v3 = [v13 overscrollingLiveTransform];
  [v13 defaultScale];
  double v5 = v4;
  if (*(double *)(*(void *)(a1 + 32) + 40) < 0.0)
  {
    [v13 defaultSize];
    double v7 = *(double *)(*(void *)(a1 + 32) + 40);
    if (v7 < 0.0) {
      double v7 = -v7;
    }
    double v5 = (v6 + v7) / v6;
  }
  [v13 currentScale];
  if (v8 != v5)
  {
    [v13 setCurrentScale:v5];
    double v9 = [*(id *)(*(void *)(a1 + 32) + 16) liveTransformViewInvalidationMap];
    double v10 = [v9 objectForKey:v3];

    id v11 = *(void **)(a1 + 40);
    id v12 = [v10 allObjects];
    [v11 invalidateIndexPaths:v12];
  }
}

BOOL _isLargePad(void)
{
  if (qword_2DF720 != -1) {
    dispatch_once(&qword_2DF720, &stru_255B80);
  }
  return dword_2DF718 != 0;
}

void sub_122254(id a1)
{
  uint64_t v1 = +[UIScreen mainScreen];
  [v1 bounds];
  double v3 = v2;
  double v5 = v4;

  BOOL v6 = v3 == 1366.0;
  if (v5 == 1366.0) {
    BOOL v6 = 1;
  }
  dword_2DF718 = v6;
}

void sub_1222BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _determineLayoutDirection(UITraitCollection *a1, UIViewController *a2)
{
  double v3 = a1;
  double v4 = a2;
  if ([(UITraitCollection *)v3 layoutDirection])
  {
    if ((char *)[(UITraitCollection *)v3 layoutDirection] == (char *)&def_141F14 + 1)
    {
      uint64_t v5 = 2;
    }
    else if (_UIApplicationIsExtension())
    {
      BOOL v6 = [(UIViewController *)v4 viewIfLoaded];
      if ([v6 effectiveUserInterfaceLayoutDirection] == (char *)&def_141F14 + 1) {
        uint64_t v5 = 2;
      }
      else {
        uint64_t v5 = 1;
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = 1;
  }

  return v5;
}

void sub_122370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _determineActiveAppearance(UITraitCollection *a1)
{
  uint64_t v1 = a1;
  if ([(UITraitCollection *)v1 _userInterfaceActiveAppearance] == (char *)&def_141F14 + 1) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = [(UITraitCollection *)v1 _userInterfaceActiveAppearance] == 0;
  }

  return v2;
}

void sub_1223E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _needsAccessibilityElements(void)
{
  return _AXSApplicationAccessibilityEnabled() != 0;
}

void sub_1228B4(_Unwind_Exception *a1)
{
  BOOL v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1228F4(id a1, UIMutableTraits *a2)
{
  uint64_t v2 = a2;
  [(UIMutableTraits *)v2 setActiveAppearance:1];
  [(UIMutableTraits *)v2 setUserInterfaceLevel:0];
  [(UIMutableTraits *)v2 setUserInterfaceStyle:1];
  [(UIMutableTraits *)v2 setHorizontalSizeClass:2];
  [(UIMutableTraits *)v2 setVerticalSizeClass:2];
}

void sub_12296C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_122A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_122B08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_122BF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_123288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12342C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1234F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12382C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_123C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_123D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12470C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_124770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_124AA8(id a1)
{
  id v3 = +[UIScreen mainScreen];
  [v3 bounds];
  qword_2DF728 = v1;
  qword_2DF730 = v2;
}

void sub_124B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *sub_124B1C(uint64_t a1, unsigned __int16 *a2, _WORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    double v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      double v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((unsigned __int16 *)v10 + 8) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          double v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  double v10 = operator new(0x18uLL);
  *double v10 = 0;
  v10[1] = v6;
  *((_WORD *)v10 + sub_1265C((uint64_t)this + 8) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_3ED8(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *double v10 = *v19;
LABEL_38:
    *uint64_t v19 = v10;
    goto LABEL_39;
  }
  *double v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_124D28(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_124D3C(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  int v7 = *a2;
  unint64_t v8 = a2[1];
  unint64_t v9 = (v7 << 16) | v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = (v7 << 16) | v8;
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
    float v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      float v13 = *v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (*((unsigned __int16 *)v13 + 9) == v8 && *((unsigned __int16 *)v13 + 8) == v7) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          float v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  unint64_t v16 = (void *)(a1 + 16);
  float v13 = operator new(0x30uLL);
  *float v13 = 0;
  v13[1] = v9;
  *((_DWORD *)v13 + 4) = **a4;
  *((_DWORD *)v13 + 6) = 0;
  void v13[4] = 0;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_3ED8(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *float v13 = *v24;
LABEL_42:
    void *v24 = v13;
    goto LABEL_43;
  }
  *float v13 = *v16;
  void *v16 = v13;
  *(void *)(v23 + 8 * v4) = v16;
  if (*v13)
  {
    unint64_t v25 = *(void *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v13;
}

void sub_124F8C(_Unwind_Exception *a1)
{
  sub_35454(v2, v1);
  _Unwind_Resume(a1);
}

void sub_125438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_125460(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (a4) {
    [WeakRetained _updatePopoverLayout];
  }
  else {
    [WeakRetained _updateVisible:a3];
  }
}

void sub_126218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_126230(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_126240(uint64_t a1)
{
}

void sub_126248(void *a1, void *a2)
{
  id v12 = a2;
  unint64_t v3 = (void *)a1[4];
  unint64_t v4 = [v12 refId];
  uint64_t v5 = [v12 refInstance];
  unint64_t v6 = [v12 identifier];
  LODWORD(v3) = [v3 matchesRefId:v4 refInstance:v5 identifier:v6];

  if (v3)
  {
    id v7 = *(void **)(a1[5] + 16);
    unint64_t v8 = [v12 identifier];
    uint64_t v9 = [v7 objectForKey:v8];
    uint64_t v10 = *(void *)(a1[6] + 8);
    uint8x8_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
}

BOOL sub_126710(id a1, id a2, BOOL *a3)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass) {
    *a3 = 1;
  }
  return isKindOfClass & 1;
}

id sub_127F2C(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 setParentModel:*(void *)(a1 + 32)];
}

id sub_1286BC(uint64_t a1)
{
  [*(id *)(a1 + 32) setContentInset:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  double v2 = *(double *)(a1 + 72);
  double v3 = *(double *)(a1 + 80);
  double v4 = *(double *)(a1 + 88);
  double v5 = *(double *)(a1 + 96);
  unint64_t v6 = *(void **)(a1 + 32);

  return [v6 setScrollIndicatorInsets:v2, v3, v4, v5];
}

void TUI::Model::Component::~Component(TUI::Model::Component *this)
{
  *(void *)this = off_255CA8;
  double v2 = (std::__shared_weak_count *)*((void *)this + 14);
  if (v2) {
    sub_123E4(v2);
  }

  double v5 = (void **)((char *)this + 48);
  sub_28EDC(&v5);
  double v3 = (std::__shared_weak_count *)*((void *)this + 4);
  if (v3) {
    sub_123E4(v3);
  }
  double v4 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v4) {
    sub_123E4(v4);
  }
}

{
  uint64_t vars8;

  TUI::Model::Component::~Component(this);

  operator delete();
}

TUI::Model::Component *TUI::Model::Component::Component(TUI::Model::Component *this)
{
  *(void *)this = off_255CA8;
  *((void *)this + 11) = 0;
  *(_OWORD *)((char *)this + sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  bzero((char *)this + 96, 1uLL);
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return this;
}

{
  *(void *)this = off_255CA8;
  *((void *)this + 11) = 0;
  *(_OWORD *)((char *)this + sub_1265C((uint64_t)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  bzero((char *)this + 96, 1uLL);
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return this;
}

uint64_t TUI::Model::Component::Component(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void **a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  *(void *)a1 = off_255CA8;
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v13;
  *(void *)(a1 + 16) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = a4[1];
  *(void *)(a1 + 24) = *a4;
  *(void *)(a1 + 32) = v14;
  if (v14) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_28D04((void *)(a1 + 48), *a5, a5[1], ((char *)a5[1] - (char *)*a5) >> 4);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a6;
  *(void *)(a1 + 8sub_1265C((uint64_t)this + 8) = 0;
  *(unsigned char *)(a1 + 96) = a7;
  uint64_t v15 = a8[1];
  *(void *)(a1 + 104) = *a8;
  *(void *)(a1 + 112) = v15;
  if (v15) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

{
  return TUI::Model::Component::Component(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_128B4C(_Unwind_Exception *exception_object)
{
  double v3 = *(std::__shared_weak_count **)(v1 + 32);
  if (v3) {
    sub_123E4(v3);
  }
  double v4 = *(std::__shared_weak_count **)(v1 + 16);
  if (v4) {
    sub_123E4(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Model::Component::Component(uint64_t result, uint64_t a2)
{
  *(void *)id result = off_255CA8;
  *(_OWORD *)(result + sub_1265C((uint64_t)this + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a2 + sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_OWORD *)(result + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_OWORD *)(result + sub_1265C((uint64_t)this + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(result + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + sub_1265C((uint64_t)this + 48) = 0;
  uint64_t v2 = *(void *)(a2 + 80);
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = v2;
  *(void *)(result + 8sub_1265C((uint64_t)this + 8) = 0;
  *(unsigned char *)(result + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v3 = *(void *)(a2 + 112);
  *(void *)(result + 104) = *(void *)(a2 + 104);
  *(void *)(result + 112) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t TUI::Model::Component::Component(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, int a5, uint64_t *a6, char a7)
{
  uint64_t v10 = (uint64_t *)(a2 + 8);
  if (a3) {
    uint64_t v10 = a4;
  }
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *(void *)a1 = off_255CA8;
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = v12;
  *(void *)(a1 + 16) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v13 = (uint64_t *)(a2 + 24);
  if (a5) {
    uint64_t v13 = a6;
  }
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v14;
  if (v14) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v16 = *(void *)(a2 + 40);
  *(void *)(a1 + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_28D04((void *)(a1 + 48), *(void **)(a2 + 48), *(void **)(a2 + 56), (uint64_t)(*(void *)(a2 + 56) - *(void *)(a2 + 48)) >> 4);
  uint64_t v17 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v17;
  *(void *)(a1 + 8sub_1265C((uint64_t)this + 8) = 0;
  *(unsigned char *)(a1 + 96) = a7;
  uint64_t v18 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v18;
  if (v18) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

{
  return TUI::Model::Component::Component(a1, a2, a3, a4, a5, a6, a7);
}

void sub_128CE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 32);
  if (v3) {
    sub_123E4(v3);
  }
  double v4 = *(std::__shared_weak_count **)(v1 + 16);
  if (v4) {
    sub_123E4(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Model::Component::operator=(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 8);
  *(void *)(a2 + sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(a2 + 16) = 0;
  double v5 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + sub_1265C((uint64_t)this + 8) = v4;
  if (v5) {
    sub_123E4(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  id v7 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  if (v7) {
    sub_123E4(v7);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_129474((uint64_t *)(a1 + 48));
  *(_OWORD *)(a1 + sub_1265C((uint64_t)this + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + sub_1265C((uint64_t)this + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 112);
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 112);
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v8;
  if (v10) {
    sub_123E4(v10);
  }
  return a1;
}

uint64_t (***sub_128DC8(void *a1, unsigned int a2))(void, void)
{
  uint64_t v3 = a2;
  id result = (uint64_t (***)(void, void))a1[3];
  if (!result || (id result = (uint64_t (***)(void, void))(**result)(result, a2), v5 == -1))
  {
    long long v6 = (uint64_t (***)(void, uint64_t))a1[1];
    if (!v6 || (id result = (uint64_t (***)(void, void))(**v6)(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(uint64_t (****)(void, uint64_t))(v8 - 16);
          v8 -= 16;
          id result = (uint64_t (***)(void, void))(**v9)(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_128EBC(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 8))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 8))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 8))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_128FB0(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 16))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 16))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_1290A4(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 24))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 24))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_129198(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 32))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 32))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 32))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_12928C(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 40))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 40))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 40))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_129380(void *a1, unsigned int a2)
{
  uint64_t v3 = a2;
  uint64_t result = a1[3];
  if (!result
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 48))(result, a2), v5 == -1))
  {
    uint64_t v6 = a1[1];
    if (!v6 || (uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v6 + 48))(a1[1], v3), v7 == -1))
    {
      uint64_t v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          uint64_t v9 = *(void *)(v8 - 16);
          v8 -= 16;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 48))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

void sub_129474(uint64_t *a1)
{
  if (*a1)
  {
    sub_28F30(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_12952C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1295B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12A164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,_Unwind_Exception *exception_object,void *a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  sub_1265C((uint64_t)&a60);
  _Unwind_Resume(a1);
}

void sub_12A448(uint64_t a1)
{
  uint64_t v16 = [*(id *)(a1 + 32) subviews];
  if (![v16 count])
  {
    [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
    goto LABEL_22;
  }
  uint64_t v2 = [v16 lastObject];
  uint64_t v3 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v2);

  if (v3)
  {
    long long v4 = [v3 layoutAttributes];
    id v5 = [v4 zIndex];
    uint64_t v6 = *(void *)(a1 + 64);

    if ((uint64_t)v5 <= v6)
    {
      [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
      goto LABEL_21;
    }
  }
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v7 = v16;
  id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (!v8) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)v18;
  while (2)
  {
    for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v18 != v9) {
        objc_enumerationMutation(v7);
      }
      uint64_t v11 = *(void **)(*((void *)&v17 + 1) + 8 * i);
      uint64_t v12 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v11);

      uint64_t v3 = v12;
      if (v12 && v12 != *(void **)(a1 + 40))
      {
        uint64_t v13 = [v12 layoutAttributes];
        id v14 = [v13 zIndex];

        id v15 = *(id *)(a1 + 64);
        if ((uint64_t)v15 < (uint64_t)v14)
        {
          [*(id *)(a1 + 32) insertSubview:*(void *)(a1 + 40) belowSubview:v11];
        }
        else
        {
          if (v15 != v14) {
            continue;
          }
          [*(id *)(a1 + 32) insertSubview:*(void *)(a1 + 40) aboveSubview:v3];
        }

        goto LABEL_21;
      }
    }
    id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v8) {
      continue;
    }
    break;
  }
LABEL_15:

  [*(id *)(a1 + 32) addSubview:*(void *)(a1 + 40)];
LABEL_21:

LABEL_22:
  [*(id *)(a1 + 40) setSemanticContentAttribute:*(void *)(*(void *)(a1 + 48) + 168)];
  sub_12A6F4(*(void **)(a1 + 40));
  TUIReusableSubviewApplyLayoutAttributes(*(void **)(a1 + 40), *(void **)(a1 + 56));
}

void sub_12A684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_12A6F4(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v7 = v1;
    if ([v1 effectiveUserInterfaceLayoutDirection])
    {
      uint64_t v2 = [v7 layer];
      unsigned __int8 v3 = [v2 flipsHorizontalAxis];

      id v1 = v7;
      if (v3) {
        goto LABEL_8;
      }
      long long v4 = [v7 layer];
      [v4 setFlipsHorizontalAxis:1];
    }
    else
    {
      id v5 = [v7 layer];
      unsigned int v6 = [v5 flipsHorizontalAxis];

      id v1 = v7;
      if (!v6) {
        goto LABEL_8;
      }
      long long v4 = [v7 layer];
      [v4 setFlipsHorizontalAxis:0];
    }

    id v1 = v7;
  }
LABEL_8:
}

void sub_12A7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12A7E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned __int8 v3 = *(void **)(v2 + 152);
  long long v4 = [*(id *)(v2 + 136) identifierForViewAtIndex:*(void *)(a1 + 48)];
  id v5 = [v3 viewStateForIdentifier:v4];

  [*(id *)(a1 + 40) viewStateRestore:v5];
}

void sub_12A868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id sub_12A884(uint64_t a1)
{
  return [*(id *)(a1 + 32) viewDidEndDisplay];
}

void sub_12AE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_12AFC8(uint64_t a1)
{
  [*(id *)(a1 + 32) resumeReuseOfView:*(void *)(a1 + 40)];
  uint64_t v2 = *(NSObject **)(a1 + 48);
  if (v2)
  {
    dispatch_group_leave(v2);
  }
}

id sub_12B018(uint64_t a1)
{
  return [*(id *)(a1 + 32) viewDidEndDisplay];
}

int64_t sub_12B020(id a1, UIView *a2, UIView *a3)
{
  long long v4 = a3;
  uint64_t v5 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, a2);
  uint64_t v6 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v4);
  id v7 = (void *)v6;
  if (v5 | v6)
  {
    if (v5) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = v6 == 0;
    }
    if (v8)
    {
      if (!v5 || v6)
      {
        uint64_t v10 = [(id)v5 layoutAttributes];
        id v11 = [v10 zIndex];

        uint64_t v12 = [v7 layoutAttributes];
        id v13 = [v12 zIndex];

        uint64_t v14 = -1;
        if ((uint64_t)v11 >= (uint64_t)v13) {
          uint64_t v14 = 1;
        }
        if (v11 == v13) {
          int64_t v9 = 0;
        }
        else {
          int64_t v9 = v14;
        }
      }
      else
      {
        int64_t v9 = 1;
      }
    }
    else
    {
      int64_t v9 = -1;
    }
  }
  else
  {
    int64_t v9 = 0;
  }

  return v9;
}

void sub_12B110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B340(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B58C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B5FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12B71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12B9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_12BB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_12BB7C(uint64_t a1, void *a2)
{
  return [a2 setCurrentViewState:*(void *)(a1 + 32)];
}

id sub_12BC64(uint64_t a1, void *a2)
{
  return [a2 setSemanticContentAttribute:*(void *)(a1 + 32)];
}

void sub_12BCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12BDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12BE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12C1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12C3FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12C40C(uint64_t a1, void *a2, uint64_t a3)
{
  id v18 = a2;
  uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:a3];
  [v18 frame];
  CGFloat x = v20.origin.x;
  CGFloat y = v20.origin.y;
  CGFloat width = v20.size.width;
  CGFloat height = v20.size.height;
  if (!CGRectIsEmpty(v20))
  {
    v21.origin.CGFloat x = x;
    v21.origin.CGFloat y = y;
    v21.size.CGFloat width = width;
    v21.size.CGFloat height = height;
    if (CGRectIntersectsRect(*(CGRect *)(a1 + 40), v21))
    {
      uint64_t v10 = 1;
LABEL_7:
      double v11 = *(double *)(a1 + 40);
      double v12 = *(double *)(a1 + 48);
      double v13 = *(double *)(a1 + 56);
      double v14 = *(double *)(a1 + 64);
      id v15 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:a3];
      uint64_t v16 = *(void *)(a1 + 32);
      id WeakRetained = objc_loadWeakRetained((id *)(v16 + 160));
      [v5 updateVisible:v10 bounds:v15 host:v16 liveTransformResolver:WeakRetained factory:*(void *)(a1 + 32) feedView:v11, v12, v13, v14];

      goto LABEL_8;
    }
  }
  if (([v5 visible] & 1) != 0 || objc_msgSend(v18, "containsLiveTransforms"))
  {
    uint64_t v10 = 0;
    goto LABEL_7;
  }
LABEL_8:
}

void sub_12C570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12C638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12C648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:];
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:a3];
  uint64_t v6 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(v6 + 160));
  [v8 updateInvalidatedWithHost:v5 liveTransformResolver:v6 factory:WeakRetained feedView:*(void *)(a1 + 32)];
}

void sub_12C704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12C824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12CA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_12CA8C(id *a1)
{
  uint64_t v2 = a1[4];
  unsigned __int8 v3 = (void *)v2[3];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  void v21[2] = sub_12CDA0;
  _OWORD v21[3] = &unk_255DD0;
  void v21[4] = v2;
  [v3 enumerateObjectsUsingBlock:v21];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v4 = *((id *)a1[4] + 4);
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v18;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * (void)v7) removeFromSuperview];
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v4 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v5);
  }

  objc_storeStrong((id *)a1[4] + 19, a1[5]);
  [*((id *)a1[4] + 23) setRenderModel:a1[5] withInvalidationContext:0];
  [*((id *)a1[4] + 24) setRenderModel:a1[5] withInvalidationContext:0];
  [*((id *)a1[4] + 25) setRenderModel:a1[5] withInvalidationContext:0];
  id v8 = [*((id *)a1[4] + 19) sections];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_12CEA0;
  double v11[3] = &unk_255E68;
  id v12 = a1[6];
  id v9 = a1[7];
  id v10 = a1[4];
  id v13 = v9;
  id v14 = v10;
  id v15 = a1[8];
  id v16 = a1[9];
  [v8 enumerateObjectsUsingBlock:v11];

  [*((id *)a1[4] + 19) size];
  [a1[4] setContentSize:];
}

void sub_12CD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_12CDA0(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  double y = CGRectNull.origin.y;
  double width = CGRectNull.size.width;
  double height = CGRectNull.size.height;
  id v8 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:a3];
  uint64_t v9 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(v9 + 160));
  [v11 updateVisible:0 bounds:v8 host:v9 liveTransformResolver:WeakRetained factory:*(void *)(a1 + 32) feedView:CGRectNull.origin.x, y, width, height];
}

void sub_12CE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12CEA0(uint64_t a1, void *a2, uint64_t a3)
{
  id v13 = a2;
  uint64_t v6 = [TUIFeedSectionView alloc];
  [v13 frame];
  id v7 = -[TUIFeedSectionView initWithFrame:](v6, "initWithFrame:");
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = v8;
  if (!v8)
  {
    unsigned __int8 v3 = [v13 entry];
    uint64_t v9 = [v3 uuid];
  }
  [(TUIFeedSectionView *)v7 setTui_querySectionUUID:v9];
  if (!v8)
  {
  }
  id v10 = *(void **)(a1 + 40);
  id v11 = v10;
  if (!v10)
  {
    unsigned __int8 v3 = [v13 entry];
    id v11 = [v3 uid];
  }
  [(TUIFeedSectionView *)v7 setTui_querySectionUID:v11];
  if (!v10)
  {
  }
  [(TUIFeedSectionView *)v7 setRenderModel:v13];
  TUISectionViewApplyRenderModelSection(v7, v13);
  [*(id *)(a1 + 48) addSectionView:v7 respectingZIndex:1];
  [*(id *)(a1 + 56) addObject:v7];
  id v12 = objc_alloc_init(_TUIFeedSectionModel);
  [(_TUIFeedSectionModel *)v12 setRenderModel:v13];
  [(_TUIFeedSectionModel *)v12 setSectionIndex:a3];
  -[_TUIFeedSectionModel setSemanticContentAttribute:](v12, "setSemanticContentAttribute:", [*(id *)(a1 + 48) semanticContentAttribute]);
  [(_TUIFeedSectionModel *)v12 setCurrentViewState:*(void *)(*(void *)(a1 + 48) + 224)];
  [*(id *)(a1 + 64) addObject:v12];
}

void sub_12D034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12D174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12D310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_12D524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12D550(uint64_t a1)
{
  double MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  [*(id *)(a1 + 32) contentOffset];
  double v4 = v3;
  double MidY = CGRectGetMidY(*(CGRect *)(a1 + 40));
  [*(id *)(a1 + 32) contentOffset];
  double v7 = v6;
  id v8 = [*(id *)(a1 + 32) superview];
  double v9 = MidX - v4;
  id v10 = [v8 _accessibilityHitTest:0 withEvent:v9 MidY - v7];

  id v11 = TUIDefaultLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v17.CGFloat x = v9;
    v17.double y = MidY - v7;
    id v12 = NSStringFromCGPoint(v17);
    int v13 = 138412546;
    id v14 = v12;
    __int16 v15 = 2112;
    id v16 = v10;
    _os_log_impl(&def_141F14, v11, OS_LOG_TYPE_INFO, "Focusing VoiceOver cursor at %@ so it will land on %@", (uint8_t *)&v13, 0x16u);
  }
  if (v10) {
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v10);
  }
}

void sub_12D6B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_12D6EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_12D7A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12D854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12DC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_12DE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12DF9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_12E350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_12E548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_12E560(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  double v6 = +[NSNumber numberWithUnsignedInteger:a3];
  double v7 = [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:a3];
  id v8 = [v7 renderModel];
  CGFloat v9 = *(double *)(a1 + 48);
  CGFloat v10 = *(double *)(a1 + 56);
  CGFloat v11 = *(double *)(a1 + 64);
  CGFloat v12 = *(double *)(a1 + 72);
  [v5 frame];
  v31.origin.CGFloat x = v13;
  v31.origin.double y = v14;
  v31.size.double width = v15;
  v31.size.double height = v16;
  v30.origin.CGFloat x = v9;
  v30.origin.double y = v10;
  v30.size.double width = v11;
  v30.size.double height = v12;
  BOOL v17 = CGRectIntersectsRect(v30, v31);
  long long v18 = [*(id *)(a1 + 40) objectForKeyedSubscript:v6];
  id v19 = v18;
  if (v17)
  {
    if (!v18)
    {
      long long v20 = +[NSIndexPath tui_indexPathForRow:0 inSection:a3];
      CGRect v21 = [v8 layoutAttributesForViewModel:v5 atIndexPath:v20 withLiveTransformResolver:*(void *)(a1 + 32)];
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 160));
      uint64_t v23 = [WeakRetained viewFactoryDequeueReusableSubviewWithReuseIdentifier:@"TUIReuseIdentifierStatsIndicatorView" indexPath:v20 host:*(void *)(a1 + 32)];

      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      _OWORD v26[2] = sub_12E818;
      void v26[3] = &unk_255488;
      id v19 = v23;
      id v27 = v19;
      id v24 = v21;
      uint64_t v25 = *(void *)(a1 + 32);
      id v28 = v24;
      uint64_t v29 = v25;
      +[UIView performWithoutAnimation:v26];
      [*(id *)(a1 + 40) setObject:v19 forKey:v6];
    }
  }
  else
  {
    [v18 removeFromSuperview];
    [*(id *)(a1 + 40) removeObjectForKey:v6];
  }
}

void sub_12E798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

id sub_12E818(uint64_t a1)
{
  TUIReusableSubviewApplyLayoutAttributes(*(void **)(a1 + 32), *(void **)(a1 + 40));
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 addSubview:v3];
}

void sub_12E8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12EBC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_12EC50(uint64_t a1)
{
  id v26 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[*(id *)(*(void *)(a1 + 32) + 40) count]];
  id v25 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[*(id *)(*(void *)(a1 + 32) + 40) count]];
  id v24 = [*(id *)(a1 + 40) matchingSectionUUID];
  [*(id *)(a1 + 40) matchingSectionUID];
  v48[0] = 0;
  v48[1] = v48;
  v48[2] = 0x2020000000;
  v48[3] = 0;
  uint64_t v44 = 0;
  unint64_t v45 = &v44;
  uint64_t v46 = 0x2020000000;
  v23 = char v47 = 0;
  uint64_t v2 = [*(id *)(a1 + 40) sections];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_12F1E4;
  void v33[3] = &unk_255F30;
  void v33[4] = *(void *)(a1 + 32);
  unint64_t v40 = &v44;
  uint64_t v41 = v48;
  uint64_t v42 = *(void *)(a1 + 64);
  id v34 = *(id *)(a1 + 48);
  char v43 = *(unsigned char *)(a1 + 72);
  id v35 = *(id *)(a1 + 56);
  id v3 = v24;
  id v36 = v3;
  id v4 = v23;
  id v37 = v4;
  id v5 = v26;
  id v38 = v5;
  id v6 = v25;
  id v39 = v6;
  [v2 enumerateObjectsUsingBlock:v33];

  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 32);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  void v32[2] = sub_12F9CC;
  v32[3] = &unk_255F58;
  void v32[4] = v7;
  [v8 enumerateObjectsUsingBlock:v32];
  if (*((unsigned char *)v45 + 24))
  {
    CGFloat v9 = [*(id *)(a1 + 32) subviews];
    CGFloat v10 = [v9 sortedArrayUsingComparator:&stru_255F78];

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v11 = v10;
    id v12 = [v11 countByEnumeratingWithState:&v28 objects:v49 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v29 != v13) {
            objc_enumerationMutation(v11);
          }
          [*(id *)(a1 + 32) bringSubviewToFront:*(void *)(*((void *)&v28 + 1) + 8 * i)];
        }
        id v12 = [v11 countByEnumeratingWithState:&v28 objects:v49 count:16];
      }
      while (v12);
    }
  }
  id v15 = [v5 copy];
  uint64_t v16 = *(void *)(a1 + 32);
  BOOL v17 = *(void **)(v16 + 32);
  *(void *)(v16 + 32) = v15;

  id v18 = [v6 copy];
  uint64_t v19 = *(void *)(a1 + 32);
  long long v20 = *(void **)(v19 + 24);
  *(void *)(v19 + 24) = v18;

  [*(id *)(a1 + 32) setRenderModel:*(void *)(a1 + 40)];
  id v21 = [*(id *)(a1 + 32) _isAutomaticContentOffsetAdjustmentEnabled];
  if (*(unsigned char *)(a1 + 64)) {
    [*(id *)(a1 + 32) _setAutomaticContentOffsetAdjustmentEnabled:0];
  }
  [*(id *)(*(void *)(a1 + 32) + 152) size];
  [*(id *)(a1 + 32) setContentSize:];
  [*(id *)(a1 + 32) _setAutomaticContentOffsetAdjustmentEnabled:v21];
  *(unsigned char *)(*(void *)(a1 + 32) + 48) |= 1u;
  [*(id *)(a1 + 32) setNeedsLayout];
  [*(id *)(a1 + 32) layoutIfNeeded];
  size_t v22 = [*(id *)(a1 + 40) sections];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_12FC84;
  v27[3] = &unk_255E40;
  void v27[4] = *(void *)(a1 + 32);
  [v22 enumerateObjectsUsingBlock:v27];

  _Block_object_dispose(&v44, 8);
  _Block_object_dispose(v48, 8);
}

void sub_12F0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);

  _Unwind_Resume(a1);
}

void sub_12F1E4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [*(id *)(*(void *)(a1 + 32) + 40) mapToIndex:a3];
  if (v6 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v7 = [TUIFeedSectionView alloc];
    [v5 frame];
    id v8 = -[TUIFeedSectionView initWithFrame:](v7, "initWithFrame:");
    CGFloat v9 = *(void **)(a1 + 56);
    CGFloat v10 = v9;
    if (!v9)
    {
      uint64_t v7 = [v5 entry];
      CGFloat v10 = [(TUIFeedSectionView *)v7 uuid];
    }
    [(TUIFeedSectionView *)v8 setTui_querySectionUUID:v10];
    if (!v9)
    {
    }
    id v11 = *(void **)(a1 + 64);
    id v12 = v11;
    if (!v11)
    {
      uint64_t v7 = [v5 entry];
      id v12 = [(TUIFeedSectionView *)v7 uid];
    }
    [(TUIFeedSectionView *)v8 setTui_querySectionUID:v12];
    if (!v11)
    {
    }
    [(TUIFeedSectionView *)v8 setRenderModel:v5];
    TUISectionViewApplyRenderModelSection(v8, v5);
    [*(id *)(a1 + 32) addSectionView:v8 respectingZIndex:*(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) == 0];
    uint64_t v13 = objc_alloc_init(_TUIFeedSectionModel);
    goto LABEL_36;
  }
  uint64_t v13 = [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:v6];
  id v8 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:v6];
  CGFloat v14 = [(TUIFeedSectionView *)v8 renderModel];
  id v15 = v14;
  if (!v14)
  {
    uint64_t v16 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    if (v5) {
      goto LABEL_13;
    }
LABEL_15:
    uint64_t v17 = 0;
    goto LABEL_16;
  }
  [v14 config];
  uint64_t v16 = v44;
  if (!v5) {
    goto LABEL_15;
  }
LABEL_13:
  [v5 config];
  uint64_t v17 = v41;
LABEL_16:

  if (v16 != v17) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 1;
  }
  id v34 = TUIAnimationAnimationPhaseForSectionView(v5, v8, *(void *)(a1 + 104));
  if ([v34 isEqualToString:@"update"]
    && ([(TUIFeedSectionView *)v8 frame], v18 > 0.0))
  {
    [(TUIFeedSectionView *)v8 frame];
    double MaxY = CGRectGetMaxY(v45);
    [v5 frame];
    *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = MaxY - CGRectGetMaxY(v46);
    char v20 = 1;
  }
  else
  {
    char v20 = 0;
  }
  TUIAnimationCollectionViewAnimationForSectionView(v5, v8, *(void *)(a1 + 104));
  id v21 = (void (**)(void, void))objc_claimAutoreleasedReturnValue();
  if (v21)
  {
    size_t v22 = *(NSObject **)(a1 + 40);
    if (v22) {
      dispatch_group_enter(v22);
    }
    [(TUIFeedSectionView *)v8 setRenderModel:v5];
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_12F8A0;
    v38[3] = &unk_255F08;
    id v39 = v8;
    id v40 = *(id *)(a1 + 40);
    ((void (**)(void, void *))v21)[2](v21, v38);
  }
  else
  {
    uint64_t v23 = [(TUIFeedSectionView *)v8 layer];
    id v24 = [v23 animationKeys];
    id v25 = [v24 count];

    if (!v25)
    {
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_12F9C0;
      void v35[3] = &unk_253310;
      id v36 = v8;
      id v37 = v5;
      +[UIView performWithoutAnimation:v35];
    }
    [(TUIFeedSectionView *)v8 setRenderModel:v5];
  }
  if (*(unsigned char *)(a1 + 112)) {
    char v26 = v20;
  }
  else {
    char v26 = 1;
  }
  if ((v26 & 1) == 0 && *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) != 0.0)
  {
    id v27 = [*(id *)(a1 + 48) animationForKeyPath:@"position"];
    [v27 setRemovedOnCompletion:1];
    [v27 setAdditive:1];
    long long v28 = +[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", 0.0, *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 24));
    [v27 setFromValue:v28];

    long long v29 = +[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", CGPointZero.x, CGPointZero.y);
    [v27 setToValue:v29];

    long long v30 = [(TUIFeedSectionView *)v8 layer];
    long long v31 = [v30 tui_uniqueAnimationKeyWithPrefix:@"additivePosition"];

    CGAffineTransform v32 = [(TUIFeedSectionView *)v8 layer];
    [v32 addAnimation:v27 forKey:v31];
  }
LABEL_36:
  CGAffineTransform v33 = [(_TUIFeedSectionModel *)v13 renderModel];
  [(_TUIFeedSectionModel *)v13 setPreviousRenderModel:v33];

  [(_TUIFeedSectionModel *)v13 setRenderModel:v5];
  [(_TUIFeedSectionModel *)v13 setSectionIndex:a3];
  -[_TUIFeedSectionModel setSemanticContentAttribute:](v13, "setSemanticContentAttribute:", [*(id *)(a1 + 32) semanticContentAttribute]);
  [(_TUIFeedSectionModel *)v13 setCurrentViewState:*(void *)(*(void *)(a1 + 32) + 224)];
  [*(id *)(a1 + 72) addObject:v8];
  [*(id *)(a1 + 80) addObject:v13];
}

void sub_12F7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_12F8A0(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_12F954;
  v3[3] = &unk_255D60;
  id v4 = *(id *)(a1 + 32);
  +[UIView performWithoutAnimation:v3];
  uint64_t v2 = *(NSObject **)(a1 + 40);
  if (v2) {
    dispatch_group_leave(v2);
  }
}

void sub_12F940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_12F954(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [v1 renderModel];
  TUISectionViewApplyRenderModelSection(v1, v2);
}

void sub_12F9AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12F9C0(uint64_t a1)
{
}

void sub_12F9CC(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 40) mapFromIndex:a3] == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v5 = [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:a3];
    double y = CGRectNull.origin.y;
    double width = CGRectNull.size.width;
    double height = CGRectNull.size.height;
    uint64_t v9 = *(void *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(v9 + 160));
    [v5 updateVisible:0 bounds:v11 host:v9 liveTransformResolver:WeakRetained factory:*(void *)(a1 + 32) feedView:CGRectNull.origin.x, y, width, height];

    [v11 removeFromSuperview];
  }
}

void sub_12FAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

int64_t sub_12FAF8(id a1, UIView *a2, UIView *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = TUIDynamicCast(v6, v4);
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = TUIDynamicCast(v8, v5);
  CGFloat v10 = (void *)v9;
  if (v7 | v9)
  {
    if (v7 || !v9)
    {
      if (!v7 || v9)
      {
        uint64_t v13 = [(id)v7 renderModel];
        CGFloat v14 = v13;
        if (v13)
        {
          [v13 config];
          uint64_t v15 = v20;
        }
        else
        {
          uint64_t v15 = 0;
          uint64_t v20 = 0;
        }

        uint64_t v16 = [v10 renderModel];
        uint64_t v17 = v16;
        if (v16)
        {
          [v16 config];
          uint64_t v18 = v20;
        }
        else
        {
          uint64_t v18 = 0;
        }

        uint64_t v19 = -1;
        if (v15 >= v18) {
          uint64_t v19 = 1;
        }
        if (v15 == v18) {
          int64_t v11 = 0;
        }
        else {
          int64_t v11 = v19;
        }
      }
      else
      {
        int64_t v11 = 1;
      }
    }
    else
    {
      int64_t v11 = -1;
    }
  }
  else
  {
    int64_t v11 = 0;
  }

  return v11;
}

void sub_12FC40(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void sub_12FC84(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndexedSubscript:];
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  [v1 setPreviousRenderModel:0];
}

void sub_12FCE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_12FCF4(uint64_t a1)
{
}

id sub_12FD74(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) insertAtIndex:a2];
}

id sub_12FE04(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) deleteAtIndex:a2];
}

void sub_1300C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1301BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_130230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_130334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1303FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1304E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1305E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1305FC(uint64_t a1, void *a2)
{
  return [a2 appendVisibleView:*(void *)(a1 + 32)];
}

void sub_1306BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1306DC(uint64_t a1, void *a2)
{
  return [a2 appendRenderOverrideObservers:*(void *)(a1 + 32)];
}

void sub_130860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_130A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_130E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_131040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1310FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1315F4(id a1)
{
  id v1 = +[NSProcessInfo processInfo];
  id v2 = [v1 physicalMemory];

  if ((double)(unint64_t)v2 * 9.31322575e-10 >= 2.0) {
    qword_2DE390 = 0x3FE0000000000000;
  }
}

void sub_131658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_131668(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_3ED8(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    sub_1316E0(a1, i + 2, (_OWORD *)i + 1);
  return a1;
}

void sub_1316C8(_Unwind_Exception *a1)
{
  sub_1265C(v1);
  _Unwind_Resume(a1);
}

void *sub_1316E0(uint64_t a1, unint64_t *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_3ED8(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    void *i = *v19;
LABEL_38:
    *uint64_t v19 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1318E8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1318FC(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  unint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_1319B0(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    CGFloat v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_3ED8(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  unint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *i = *v20;
LABEL_38:
    void *v20 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v21 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    unint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_131BBC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_131BD0(uint64_t a1, unint64_t *a2, void *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint8x8_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x18uLL);
  void *i = 0;
  i[1] = v6;
  i[2] = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_3ED8(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    void *i = *v19;
LABEL_38:
    *uint64_t v19 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_131DD8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1322CC(id a1)
{
  uint64_t v1 = objc_alloc_init(TUIDragController);
  int8x8_t v2 = (void *)qword_2DF750;
  qword_2DF750 = (uint64_t)v1;
}

id sub_132CBC(void *a1, void *a2, void *a3, double a4, double a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a1;
  uint64_t v12 = objc_opt_class();
  float v13 = [v11 _privateLocalContext];

  BOOL v14 = TUIDynamicCast(v12, v13);

  unint64_t v15 = [v14 dragInfo];
  id v16 = v10;
  size_t v17 = [v15 arguments];
  uint64_t v18 = [v17 objectForKeyedSubscript:@"clearBackground"];
  unsigned int v19 = [v18 BOOLValue];

  unint64_t v20 = v16;
  if (v19)
  {
    unint64_t v20 = +[UIColor clearColor];
  }
  if (v20)
  {
    id v21 = objc_alloc_init((Class)UIDragPreviewParameters);
    [v21 setBackgroundColor:v20];
  }
  else
  {
    id v21 = 0;
  }

  if (v21)
  {
    if (v9)
    {
LABEL_8:
      id v22 = [objc_alloc((Class)UIDragPreviewTarget) initWithContainer:v9 center:a4];
      id v23 = objc_alloc((Class)UITargetedDragPreview);
      id v24 = [v14 view];
      id v25 = [v23 initWithView:v24 parameters:v21 target:v22];

      goto LABEL_11;
    }
  }
  else
  {
    id v21 = objc_alloc_init((Class)UIDragPreviewParameters);
    if (v9) {
      goto LABEL_8;
    }
  }
  id v26 = objc_alloc((Class)UITargetedDragPreview);
  id v22 = [v14 view];
  id v25 = [v26 initWithView:v22 parameters:v21];
LABEL_11:

  return v25;
}

id sub_1335F4(id result, uint64_t a2)
{
  int8x8_t v2 = result;
  if (a2 == 1)
  {
    [*((id *)result + 4) _setAlpha:*((void *)result + 5) forSessionDragItems:1.0];
    unint64_t v5 = (void *)v2[4];
    uint64_t v6 = v2[5];
    uint64_t v7 = v2[6];
    return [v5 _notifyDelegateOfViewDraggingStateForSession:v6 interaction:v7 dropOperation:0];
  }
  else if (!a2)
  {
    unint64_t v3 = (void *)*((void *)result + 4);
    uint64_t v4 = v2[5];
    return [v3 _setAlpha:v4 forSessionDragItems:0.5];
  }
  return result;
}

id sub_133808(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  int8x8_t v2 = *(void **)(a1 + 40);

  return [v2 setUserInteractionEnabled:1];
}

id sub_1339C8(void *a1)
{
  uint64_t v1 = [a1 actionHandler];
  int8x8_t v2 = [v1 actionsData];

  unint64_t v3 = [v2 behaviorDataForTrigger:@"drag"];

  return v3;
}

void sub_133ED4(void *a1)
{
  int8x8_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  id v5 = [*(id *)(a1[6] + 32) behavior];
  uint64_t v4 = [*(id *)(a1[6] + 32) arguments];
  [v2 handleActionForObject:v3 withName:v5 arguments:v4];
}

void sub_1345D0(uint64_t a1, void *a2)
{
  id v3 = [a2 newUIMenuElementWithActionObject:*(void *)(a1 + 32) delegate:*(void *)(a1 + 40)];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 48) addObject:v3];
    id v3 = v4;
  }
}

BOOL sub_134884(id a1, TUIImageModel *a2, NSDictionary *a3)
{
  id v3 = a2;
  if ([(TUIImageModel *)v3 isLoaded])
  {
    BOOL v4 = 0;
  }
  else
  {
    id v5 = [(TUIImageModel *)v3 urlString];
    BOOL v4 = v5 != 0;
  }
  return v4;
}

void sub_1349AC(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_1349B8(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

void sub_134AA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector())
  {
    [v3 appendObjectsWithProtocol:&OBJC_PROTOCOL___TUIMenuItemModel toArray:*(void *)(a1 + 32)];
  }
  else
  {
    BOOL v4 = TUIInstantiationLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_192A10((uint64_t)v3, v4);
    }
  }
}

id sub_135DEC(uint64_t a1, void *a2)
{
  return _[a2 parentFeedDidUpdateTriggerStatesWithEvent:*(void *)(a1 + 32)];
}

void sub_13628C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_136364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_136640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1366EC(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  id v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      void v7[2] = 0;
    }
    if (a4 >> 60) {
      sub_4484();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_28D8C(v7, v11);
    float v13 = (char *)v7[1];
    uint64_t v12 = (void **)(v7 + 1);
    id v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      unsigned int v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v12 = (void **)(result + 8);
  BOOL v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 4;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  id v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    id v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    unsigned int v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *uint64_t v12 = &v9[v17];
  return result;
}

id TUI::Evaluation::Variables::Globals::equivalentTo(uint64_t a1, unsigned __int16 **a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  unint64_t v5 = (v3 - *a3) >> 4;
  if (v5 != (uint64_t)(*(void *)(a1 + 48) - *(void *)(a1 + 40)) >> 4) {
    return 0;
  }
  id result = TUI::Evaluation::Variables::Scope::equivalentTo(a2, *(const TUI::Evaluation::Variables::Scope **)(a1 + 24));
  if (result) {
    BOOL v9 = v3 == v4;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    uint64_t v10 = 0;
    unint64_t v11 = 1;
    while (*(void *)(*(void *)(*(void *)(a1 + 40) + v10) + 16) == *(void *)(*(void *)(*a3 + v10) + 16))
    {
      id result = (id)TUI::Evaluation::Variables::Globals::equivalentTo();
      if (result) {
        BOOL v12 = v11 >= v5;
      }
      else {
        BOOL v12 = 1;
      }
      ++v11;
      v10 += 16;
      if (v12) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

id TUI::Evaluation::Variables::Globals::equivalentTo(TUI::Evaluation::Variables::Globals *this, unsigned __int16 **a2)
{
  int8x8_t v2 = (const TUI::Evaluation::Variables::Scope *)*((void *)this + 3);
  if (v2 == (const TUI::Evaluation::Variables::Scope *)a2) {
    return &def_141F14 + 1;
  }
  else {
    return TUI::Evaluation::Variables::Scope::equivalentTo(a2, v2);
  }
}

BOOL TUI::Evaluation::Variables::Globals::equivalentTo(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = (v3 - *a2) >> 4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48) - v5;
  BOOL result = v4 == v6 >> 4;
  if (v4 == v6 >> 4 && v3 != v2)
  {
    unint64_t v9 = 1;
    while (*(void *)(*(void *)v5 + 16) == *(void *)(*(void *)v2 + 16))
    {
      int v10 = *(_DWORD *)(*(void *)v5 + 88);
      int v11 = *(_DWORD *)(*(void *)v2 + 88);
      BOOL result = v10 == v11;
      BOOL v12 = v10 != v11 || v9++ >= v4;
      v5 += 16;
      v2 += 16;
      if (v12) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

void sub_136CB4(id a1)
{
  uint64_t v1 = (void *)qword_2DF760;
  qword_2DF760 = (uint64_t)&off_2686E0;
}

void sub_136F80(id a1)
{
  uint64_t v1 = (void *)qword_2DF770;
  qword_2DF770 = (uint64_t)&off_268708;
}

id sub_1385D0(uint64_t a1, void *a2)
{
  return [a2 appendLayoutModelsToArray:*(void *)(a1 + 32)];
}

void sub_1386EC(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
}

id sub_1386F8(uint64_t a1, void *a2)
{
  return [a2 setParentModel:*(void *)(a1 + 32)];
}

void sub_1387D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 appendObjectsWithProtocol:*(void *)(a1 + 32) toArray:*(void *)(a1 + 40)];
  }
}

void sub_138B04(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = objc_alloc_init(TUIBoxBuilder);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  unint64_t v4 = [(TUIBoxBuilder *)v3 finalizeModelsWithParent:0 box:0 context:*(void *)(a1 + 32)];
  if ([v4 count] == (char *)&def_141F14 + 1)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    uint64_t v6 = [v4 firstObject];
    [v5 addModel:v6 forState:v7];
  }
  else
  {
    [*(id *)(a1 + 32) reportError:1021];
  }
}

NSArray *__cdecl sub_139038(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  NSUInteger v3 = [(NSArray *)v2 count];
  if (!v3) {
    goto LABEL_8;
  }
  NSUInteger v4 = v3;
  NSUInteger v5 = 0;
  while (1)
  {
    uint64_t v6 = [(NSArray *)v2 objectAtIndexedSubscript:v5];
    id v7 = [v6 updates];
    id v8 = [v7 count];

    if (v8) {
      break;
    }
    if (v4 == ++v5)
    {
      NSUInteger v5 = v4;
      break;
    }
  }
  if (v5)
  {
    -[NSArray subarrayWithRange:](v2, "subarrayWithRange:", v5, v4 - v5);
    unint64_t v9 = (NSArray *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
LABEL_8:
    unint64_t v9 = v2;
  }
  int v10 = v9;

  return v10;
}

void sub_139738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_139750(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_139760(uint64_t a1)
{
}

void sub_139768(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 firstObject];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  NSUInteger v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_139904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_13991C(uint64_t a1, void *a2)
{
}

void sub_1399E8(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  int v3[2] = sub_139A74;
  v3[3] = &unk_256218;
  id v4 = *(id *)(a1 + 32);
  [a2 enumerateObjectsUsingBlock:v3];
}

uint64_t sub_139A74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_13A378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    id v9 = objc_begin_catch(exception_object);
    int v10 = [v9 description];
    NSLog(@"Unable to copy TUIMicaPlayer. Error = %@");

    objc_end_catch();
    JUMPOUT(0x13A358);
  }
  _Unwind_Resume(exception_object);
}

void sub_13B69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_13B6B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_13B6C4(uint64_t a1)
{
}

void sub_13B6CC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) children];
  uint64_t v3 = [v2 firstObject];

  id v4 = *(void **)(a1 + 40);
  [v3 computedTransformedSize];
  double v6 = v5;
  id v7 = [*(id *)(a1 + 32) computedLayoutDirection];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unint64_t v10[2] = sub_13B7CC;
  void v10[3] = &unk_256240;
  id v11 = *(id *)(a1 + 40);
  id v12 = v3;
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = v8;
  id v9 = v3;
  [v4 evaluateWithWidth:v7 layoutDirection:v10 block:v6];
}

void sub_13B7CC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) renderModelForLayout:*(void *)(a1 + 40) kind:7];
  id v3 = [v2 copyWithSection:0 offset:*(void *)(*(void *)(a1 + 48) + 112) uuid:CGPointZero.x, CGPointZero.y];

  id v4 = *(void **)(a1 + 48);
  [*(id *)(a1 + 32) contentsScale];
  [v4 erasableInsetsForContentsScale:];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  uint64_t v13 = objc_opt_new();
  [*(id *)(a1 + 40) appendVisibleBoundsObservers:v13 axis:1 offset:0.0];
  uint64_t v14 = objc_alloc_init(TUILayoutRenderModelCollector);
  uint64_t v15 = *(void *)(a1 + 40);
  id v16 = [*(id *)(a1 + 32) UUID];
  [(TUILayoutRenderModelCollector *)v14 collectWithRoot:v15 options:1 entryUUID:v16];

  size_t v17 = [TUIRenderModelCollection alloc];
  id v30 = v3;
  uint64_t v18 = +[NSArray arrayWithObjects:&v30 count:1];
  [v3 size];
  double v20 = v19;
  double v22 = v21;
  uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 128);
  id v24 = [*(id *)(a1 + 32) layoutDirection];
  id v25 = [*(id *)(a1 + 32) UUID];
  id v26 = [*(id *)(a1 + 32) uid];
  id v27 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v17, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", 0, v18, v13, 0, v23, v24, v20, v22, v6, v8, v10, v12, v25, v26);
  uint64_t v28 = *(void *)(*(void *)(a1 + 56) + 8);
  long long v29 = *(void **)(v28 + 40);
  *(void *)(v28 + 40) = v27;
}

void sub_13C3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

int64_t sub_13CE5C(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = a3;
  [v4 defaultPosition];
  double v7 = v6;
  [v5 defaultPosition];
  if (v7 >= v8)
  {
    [v4 defaultPosition];
    double v11 = v10;
    [v5 defaultPosition];
    int64_t v9 = v11 > v12;
  }
  else
  {
    int64_t v9 = -1;
  }

  return v9;
}

void sub_13CFB0(void *a1, void *a2, uint64_t a3)
{
  id v28 = a2;
  id v5 = [v28 floatingLiveTransform];
  [v28 defaultPosition];
  double v7 = v6;
  [v28 defaultPosition];
  double v9 = v8;
  double v10 = *(double *)(a1[4] + 40);
  if (v8 <= v10)
  {
    [v28 sectionBottomY];
    double v12 = v11;
    [v5 size];
    if (v10 >= v12 - v13) {
      double v9 = v12 - v13;
    }
    else {
      double v9 = v10;
    }
    [v28 defaultPosition];
    if (v14 >= v9) {
      double v9 = v14;
    }
    if ((unint64_t)(a3 + 1) >= a1[6])
    {
      id v16 = 0;
    }
    else
    {
      uint64_t v15 = [*(id *)(a1[4] + 8) objectAtIndexedSubscript:];
      id v16 = v15;
      if (v15)
      {
        [v15 defaultPosition];
        double v18 = v17;
        [v5 size];
        if (v9 + v19 >= v18)
        {
          [v5 size:v9 + v19];
          double v9 = v18 - v20;
        }
      }
    }
  }
  [v28 currentOffset];
  if (v22 != v7 || v21 != v9)
  {
    [v28 setCurrentOffset:v7, v9];
    id v24 = [*(id *)(a1[4] + 16) liveTransformViewInvalidationMap];
    id v25 = [v24 objectForKey:v5];

    id v26 = (void *)a1[5];
    id v27 = [v25 allObjects];
    [v26 invalidateIndexPaths:v27];
  }
}

id sub_13D828(void *a1)
{
  uint64_t v1 = [a1 layoutAttributes];
  uint64_t v2 = [v1 renderModel];

  return v2;
}

void sub_13E264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_13E27C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_13E28C(uint64_t a1)
{
}

void sub_13E294(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) children];
  id v3 = [v2 firstObject];

  id v4 = *(void **)(a1 + 40);
  [v3 computedTransformedSize];
  double v6 = v5;
  id v7 = [*(id *)(a1 + 32) computedLayoutDirection];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unint64_t v10[2] = sub_13E394;
  void v10[3] = &unk_256240;
  id v11 = *(id *)(a1 + 40);
  id v12 = v3;
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = v8;
  id v9 = v3;
  [v4 evaluateWithWidth:v7 layoutDirection:v10 block:v6];
}

void sub_13E394(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) renderModelForLayout:*(void *)(a1 + 40) kind:7];
  id v3 = [v2 copyWithSection:0 offset:*(void *)(*(void *)(a1 + 48) + 112) uuid:CGPointZero.x, CGPointZero.y];

  id v4 = *(void **)(a1 + 48);
  [*(id *)(a1 + 32) contentsScale];
  [v4 erasableInsetsForContentsScale:];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  uint64_t v13 = objc_opt_new();
  [*(id *)(a1 + 40) appendVisibleBoundsObservers:v13 axis:2 offset:0.0];
  uint64_t v14 = [TUIRenderModelCollection alloc];
  id v27 = v3;
  uint64_t v15 = +[NSArray arrayWithObjects:&v27 count:1];
  [v3 size];
  double v17 = v16;
  double v19 = v18;
  uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 128);
  id v21 = [*(id *)(a1 + 32) layoutDirection];
  double v22 = [*(id *)(a1 + 32) UUID];
  uint64_t v23 = [*(id *)(a1 + 32) uid];
  id v24 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v14, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", 0, v15, v13, 0, v20, v21, v17, v19, v6, v8, v10, v12, v22, v23);
  uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
  id v26 = *(void **)(v25 + 40);
  *(void *)(v25 + 40) = v24;
}

void sub_13ED18(id a1)
{
  uint64_t v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  v6[0] = @"insets";
  v6[1] = @"columns";
  void v6[2] = @"spacing";
  id v3 = +[NSArray arrayWithObjects:v6 count:3];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  double v5 = (void *)qword_2DF780;
  qword_2DF780 = (uint64_t)v4;
}

void sub_13F310(id a1)
{
  id v1 = [[TUIRunLoopDispatcher alloc] initSharedInstance];
  id v2 = (void *)qword_2DF790;
  qword_2DF790 = (uint64_t)v1;
}

id sub_13F7DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _dispatchAsyncToMain:*(void *)(a1 + 40)];
}

id sub_13F95C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _dispatchAsyncToMain:*(void *)(a1 + 40)];
}

id TUIDispatchAsyncViaRunLoop(uint64_t a1)
{
  return +[TUIRunLoopDispatcher dispatchAsyncToMain:a1];
}

id TUIDispatchAfterViaRunLoop(uint64_t a1, uint64_t a2)
{
  return +[TUIRunLoopDispatcher dispatchAfter:a1 toMain:a2];
}

id TUIDispatchDrainWithTimeout()
{
  return (id)+[TUIRunLoopDispatcher drainWithTimeout:"drainWithTimeout:"];
}

void TUIDispatchGroupNotifyViaRunloopIfMain(void *a1, void *a2, void *a3)
{
  queue = a2;
  id v5 = a3;
  double v6 = a1;
  double v7 = v6;
  if (queue == &_dispatch_main_q) {
    +[TUIRunLoopDispatcher dispatchGroup:v6 notifyMain:v5];
  }
  else {
    dispatch_group_notify(v6, queue, v5);
  }
}

void sub_13FD30(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (objc_opt_respondsToSelector())
  {
    id v3 = [*(id *)(a1 + 32) dynamicValue];
    id v4 = [v3 property];
    id v5 = [v6 objectForKey:v4];
  }
  else
  {
    id v5 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1401AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_14032C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1403CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140BB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_140F60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_141034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1410FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1411C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1416EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_141838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_14186C(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  double v8 = *a1;
  if (a4 <= ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4)
  {
    unint64_t v12 = ((unsigned char *)a1[1] - (unsigned char *)v8) >> 4;
    if (v12 >= a4)
    {
      sub_141A98((uint64_t)&v19, a2, a3, v8);
      uint64_t v15 = v14;
      double v16 = (id *)a1[1];
      if (v16 != v14)
      {
        do
        {
          double v17 = v16 - 2;

          double v16 = v17;
        }
        while (v17 != v15);
      }
      a1[1] = v15;
    }
    else
    {
      uint64_t v13 = a2 + 16 * v12;
      sub_141A98((uint64_t)&v18, a2, v13, v8);
      sub_1419C8(a1, v13, a3);
    }
  }
  else
  {
    sub_141A2C(a1);
    if (a4 >> 60) {
      sub_4484();
    }
    uint64_t v9 = (unsigned char *)a1[2] - (unsigned char *)*a1;
    uint64_t v10 = v9 >> 3;
    if (v9 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_28D8C(a1, v11);
    sub_1419C8(a1, a2, a3);
  }
}

void *sub_1419C8(void *result, uint64_t a2, uint64_t a3)
{
  id v3 = result;
  id v4 = (void *)result[1];
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *id v4 = *(void *)v6;
      BOOL result = *(id *)(v6 + 8);
      v4[1] = result;
      v4 += 2;
      v6 += 16;
    }
    while (v6 != a3);
  }
  v3[1] = v4;
  return result;
}

void sub_141A2C(void **a1)
{
  id v1 = (id *)*a1;
  if (*a1)
  {
    id v3 = (id *)a1[1];
    id v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        id v5 = v3 - 2;

        id v3 = v5;
      }
      while (v5 != v1);
      id v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_141A98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    double v7 = (id *)(a4 + 1);
    *a4 = *(void *)v5;
    a4 += 2;
    objc_storeStrong(v7, *(id *)(v5 + 8));
    v5 += 16;
  }
  while (v5 != v6);
  return v6;
}

void *sub_141B00(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_28D8C(result, a4);
    return sub_1419C8(v6, a2, a3);
  }
  return result;
}

void sub_141B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_141B78(void ***a1)
{
  id v1 = *a1;
  id v2 = (id *)**a1;
  if (v2)
  {
    id v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 2;

        id v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_141C00(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
LABEL_1:
  uint64_t v10 = a1;
  while (1)
  {
    a1 = v10;
    uint64_t v11 = (char *)a2 - (char *)v10;
    uint64_t v12 = ((char *)a2 - (char *)v10) >> 4;
    if (!(!v5 & v4))
    {
      switch(v12)
      {
        case 0:
        case 1:
          return;
        case 2:
          double v41 = *((double *)a2 - 2);
          id v40 = a2 - 2;
          if (v41 >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = v40;
          break;
        case 3:
          sub_142440(a1, a1 + 2, a2 - 2);
          return;
        case 4:
          sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
          return;
        case 5:
          uint64_t v44 = (double *)(a1 + 4);
          sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
          double v46 = *((double *)a2 - 2);
          CGRect v45 = a2 - 2;
          if (v46 >= *((double *)a1 + 6)) {
            return;
          }
          sub_142740(a1 + 6, v45);
          if (*((double *)a1 + 6) >= *v44) {
            return;
          }
          sub_142740(a1 + 4, a1 + 6);
          if (*v44 >= *((double *)a1 + 2)) {
            return;
          }
          sub_142740(a1 + 2, a1 + 4);
          if (*((double *)a1 + 2) >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = a1 + 2;
          break;
        default:
          JUMPOUT(0);
      }
      sub_142740(v42, v43);
      return;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (a1 == a2) {
        return;
      }
      int64_t v62 = (unint64_t)(v12 - 2) >> 1;
      int64_t v63 = v62;
      do
      {
        int64_t v64 = v63;
        if (v62 >= v63)
        {
          uint64_t v65 = (2 * v63) | 1;
          unint64_t v66 = &a1[2 * v65];
          if (2 * v64 + 2 < v12 && *(double *)v66 < *((double *)v66 + 2))
          {
            v66 += 2;
            uint64_t v65 = 2 * v64 + 2;
          }
          unint64_t v67 = &a1[2 * v64];
          double v68 = *(double *)v66;
          double v69 = *(double *)v67;
          if (*(double *)v66 >= *(double *)v67)
          {
            uint64_t v70 = &a1[2 * v64];
            uint64_t v71 = v70[1];
            v70[1] = 0;
            do
            {
              int v72 = (double *)v67;
              unint64_t v67 = v66;
              *int v72 = v68;
              uint64_t v73 = v66[1];
              v67[1] = 0;
              int v74 = (void *)*((void *)v72 + 1);
              *((void *)v72 + 1) = v73;

              if (v62 < v65) {
                break;
              }
              uint64_t v75 = 2 * v65;
              uint64_t v65 = (2 * v65) | 1;
              unint64_t v66 = &a1[2 * v65];
              uint64_t v76 = v75 + 2;
              if (v76 < v12 && *(double *)v66 < *((double *)v66 + 2))
              {
                v66 += 2;
                uint64_t v65 = v76;
              }
              double v68 = *(double *)v66;
            }
            while (*(double *)v66 >= v69);
            *(double *)unint64_t v67 = v69;
            unint64_t v77 = (void *)v67[1];
            v67[1] = v71;
          }
        }
        int64_t v63 = v64 - 1;
      }
      while (v64);
      uint64_t v78 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v79 = 0;
        uint64_t v80 = *a1;
        uint64_t v81 = a1[1];
        a1[1] = 0;
        uint64_t v82 = a1;
        do
        {
          int v83 = v82;
          v82 += 2 * v79 + 2;
          uint64_t v84 = 2 * v79;
          uint64_t v79 = (2 * v79) | 1;
          uint64_t v85 = v84 + 2;
          if (v85 < v78 && *(double *)v82 < *((double *)v82 + 2))
          {
            v82 += 2;
            uint64_t v79 = v85;
          }
          *int v83 = *v82;
          uint64_t v86 = v82[1];
          v82[1] = 0;
          id v87 = (void *)v83[1];
          v83[1] = v86;
        }
        while (v79 <= (uint64_t)((unint64_t)(v78 - 2) >> 1));
        uint64_t v88 = a2 - 2;
        if (v82 == a2 - 2)
        {
          *uint64_t v82 = v80;
          int v101 = (void *)v82[1];
          v82[1] = v81;
          goto LABEL_115;
        }
        *uint64_t v82 = *(a2 - 2);
        uint64_t v89 = *(a2 - 1);
        *(a2 - 1) = 0;
        unint64_t v90 = (void *)v82[1];
        v82[1] = v89;

        *(a2 - 2) = v80;
        unint64_t v91 = (void *)*(a2 - 1);
        *(a2 - 1) = v81;

        uint64_t v92 = (char *)v82 - (char *)a1 + 16;
        if (v92 >= 17)
        {
          unint64_t v93 = (((unint64_t)v92 >> 4) - 2) >> 1;
          uint64_t v94 = (double *)&a1[2 * v93];
          double v95 = *v94;
          double v96 = *(double *)v82;
          if (*v94 < *(double *)v82)
          {
            uint64_t v97 = v82[1];
            v82[1] = 0;
            do
            {
              unint64_t v98 = (double *)v82;
              uint64_t v82 = (uint64_t *)v94;
              *unint64_t v98 = v95;
              uint64_t v99 = *((void *)v94 + 1);
              v82[1] = 0;
              int v100 = (void *)*((void *)v98 + 1);
              *((void *)v98 + 1) = v99;

              if (!v93) {
                break;
              }
              unint64_t v93 = (v93 - 1) >> 1;
              uint64_t v94 = (double *)&a1[2 * v93];
              double v95 = *v94;
            }
            while (*v94 < v96);
            *(double *)uint64_t v82 = v96;
            int v101 = (void *)v82[1];
            v82[1] = v97;
LABEL_115:
          }
        }
        a2 = v88;
        if (v78-- <= 2) {
          return;
        }
        continue;
      }
    }
    unint64_t v13 = (unint64_t)v12 >> 1;
    uint64_t v14 = &a1[2 * ((unint64_t)v12 >> 1)];
    if ((unint64_t)v11 < 0x801)
    {
      sub_142440(v14, a1, a2 - 2);
    }
    else
    {
      sub_142440(a1, v14, a2 - 2);
      sub_142440(a1 + 2, v14 - 2, a2 - 4);
      sub_142440(a1 + 4, &a1[2 * v13 + 2], a2 - 6);
      sub_142440(v14 - 2, v14, &a1[2 * v13 + 2]);
      sub_142740(a1, v14);
    }
    --a3;
    double v15 = *(double *)a1;
    if ((a4 & 1) != 0 || *((double *)a1 - 2) < v15)
    {
      uint64_t v16 = 0;
      uint64_t v17 = a1[1];
      a1[1] = 0;
      do
      {
        double v18 = *(double *)&a1[v16 + 2];
        v16 += 2;
      }
      while (v18 < v15);
      char v19 = &a1[v16];
      uint64_t v20 = a2;
      if (v16 == 2)
      {
        uint64_t v20 = a2;
        do
        {
          if (v19 >= v20) {
            break;
          }
          double v22 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v22 >= v15);
      }
      else
      {
        do
        {
          double v21 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v21 >= v15);
      }
      uint64_t v10 = &a1[v16];
      if (v19 < v20)
      {
        uint64_t v23 = v20;
        do
        {
          sub_142740(v10, v23);
          do
          {
            double v24 = *((double *)v10 + 2);
            v10 += 2;
          }
          while (v24 < v15);
          do
          {
            double v25 = *((double *)v23 - 2);
            v23 -= 2;
          }
          while (v25 >= v15);
        }
        while (v10 < v23);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v26 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v27 = (void *)a1[1];
        a1[1] = v26;
      }
      *((double *)v10 - 2) = v15;
      id v28 = (void *)*(v10 - 1);
      *(v10 - 1) = v17;

      if (v19 < v20) {
        goto LABEL_30;
      }
      BOOL v29 = sub_142500(a1, v10 - 2);
      if (sub_142500(v10, a2))
      {
        a2 = v10 - 2;
        if (v29) {
          return;
        }
        goto LABEL_1;
      }
      if (!v29)
      {
LABEL_30:
        sub_141C00(a1, v10 - 2, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      uint64_t v30 = a1[1];
      a1[1] = 0;
      if (v15 >= *((double *)a2 - 2))
      {
        CGAffineTransform v32 = a1 + 2;
        do
        {
          uint64_t v10 = v32;
          if (v32 >= a2) {
            break;
          }
          v32 += 2;
        }
        while (v15 >= *(double *)v10);
      }
      else
      {
        uint64_t v10 = a1;
        do
        {
          double v31 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v31);
      }
      CGAffineTransform v33 = a2;
      if (v10 < a2)
      {
        CGAffineTransform v33 = a2;
        do
        {
          double v34 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v34);
      }
      while (v10 < v33)
      {
        sub_142740(v10, v33);
        do
        {
          double v35 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v35);
        do
        {
          double v36 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v36);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v37 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v38 = (void *)a1[1];
        a1[1] = v37;
      }
      *((double *)v10 - 2) = v15;
      id v39 = (void *)*(v10 - 1);
      *(v10 - 1) = v30;

      a4 = 0;
    }
  }
  char v47 = a1 + 2;
  BOOL v49 = a1 == a2 || v47 == a2;
  if (a4)
  {
    if (!v49)
    {
      uint64_t v50 = 0;
      int v51 = a1;
      do
      {
        unint64_t v52 = v47;
        double v53 = *((double *)v51 + 2);
        double v54 = *(double *)v51;
        if (v53 < *(double *)v51)
        {
          uint64_t v55 = v51[3];
          v51[3] = 0;
          uint64_t v56 = v50;
          while (1)
          {
            long long v57 = (double *)((char *)a1 + v56);
            v57[2] = v54;
            uint64_t v58 = *(uint64_t *)((char *)a1 + v56 + 8);
            v57[1] = 0.0;
            id v59 = *(void **)((char *)a1 + v56 + 24);
            *((void *)v57 + 3) = v58;

            if (!v56) {
              break;
            }
            double v54 = *(v57 - 2);
            v56 -= 16;
            if (v53 >= v54)
            {
              uint64_t v60 = (uint64_t)a1 + v56 + 16;
              goto LABEL_83;
            }
          }
          uint64_t v60 = (uint64_t)a1;
LABEL_83:
          *(double *)uint64_t v60 = v53;
          uint64_t v61 = *(void **)(v60 + 8);
          *(void *)(v60 + sub_1265C((uint64_t)this + 8) = v55;
        }
        char v47 = v52 + 2;
        v50 += 16;
        int v51 = v52;
      }
      while (v52 + 2 != a2);
    }
  }
  else if (!v49)
  {
    unint64_t v103 = (void **)(a1 + 3);
    do
    {
      uint64_t v104 = v47;
      double v105 = *((double *)a1 + 2);
      double v106 = *(double *)a1;
      if (v105 < *(double *)a1)
      {
        uint64_t v107 = a1[3];
        a1[3] = 0;
        unint64_t v108 = v103;
        uint64_t v109 = v103;
        do
        {
          *((double *)v108 - 1) = v106;
          int v110 = *(v109 - 2);
          v109 -= 2;
          *uint64_t v109 = 0;
          int v111 = *v108;
          *unint64_t v108 = v110;

          double v106 = *((double *)v108 - 5);
          unint64_t v108 = v109;
        }
        while (v105 < v106);
        *((double *)v109 - 1) = v105;
        uint64_t v112 = *v109;
        *uint64_t v109 = (void *)v107;
      }
      char v47 = v104 + 2;
      v103 += 2;
      a1 = v104;
    }
    while (v104 + 2 != a2);
  }
}

  uint64_t v10 = a1;
  while (1)
  {
    a1 = v10;
    uint64_t v11 = (char *)a2 - (char *)v10;
    uint64_t v12 = ((char *)a2 - (char *)v10) >> 4;
    if (!(!v5 & v4))
    {
      switch(v12)
      {
        case 0:
        case 1:
          return;
        case 2:
          double v41 = *((double *)a2 - 2);
          id v40 = a2 - 2;
          if (v41 >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = v40;
          break;
        case 3:
          sub_142440(a1, a1 + 2, a2 - 2);
          return;
        case 4:
          sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
          return;
        case 5:
          uint64_t v44 = (double *)(a1 + 4);
          sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
          double v46 = *((double *)a2 - 2);
          CGRect v45 = a2 - 2;
          if (v46 >= *((double *)a1 + 6)) {
            return;
          }
          sub_142740(a1 + 6, v45);
          if (*((double *)a1 + 6) >= *v44) {
            return;
          }
          sub_142740(a1 + 4, a1 + 6);
          if (*v44 >= *((double *)a1 + 2)) {
            return;
          }
          sub_142740(a1 + 2, a1 + 4);
          if (*((double *)a1 + 2) >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = a1 + 2;
          break;
        default:
          JUMPOUT(0);
      }
      sub_142740(v42, v43);
      return;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (a1 == a2) {
        return;
      }
      int64_t v62 = (unint64_t)(v12 - 2) >> 1;
      int64_t v63 = v62;
      do
      {
        int64_t v64 = v63;
        if (v62 >= v63)
        {
          uint64_t v65 = (2 * v63) | 1;
          unint64_t v66 = &a1[2 * v65];
          if (2 * v64 + 2 < v12 && *(double *)v66 < *((double *)v66 + 2))
          {
            v66 += 2;
            uint64_t v65 = 2 * v64 + 2;
          }
          unint64_t v67 = &a1[2 * v64];
          double v68 = *(double *)v66;
          double v69 = *(double *)v67;
          if (*(double *)v66 >= *(double *)v67)
          {
            uint64_t v70 = &a1[2 * v64];
            uint64_t v71 = v70[1];
            v70[1] = 0;
            do
            {
              int v72 = (double *)v67;
              unint64_t v67 = v66;
              *int v72 = v68;
              uint64_t v73 = v66[1];
              v67[1] = 0;
              int v74 = (void *)*((void *)v72 + 1);
              *((void *)v72 + 1) = v73;

              if (v62 < v65) {
                break;
              }
              uint64_t v75 = 2 * v65;
              uint64_t v65 = (2 * v65) | 1;
              unint64_t v66 = &a1[2 * v65];
              uint64_t v76 = v75 + 2;
              if (v76 < v12 && *(double *)v66 < *((double *)v66 + 2))
              {
                v66 += 2;
                uint64_t v65 = v76;
              }
              double v68 = *(double *)v66;
            }
            while (*(double *)v66 >= v69);
            *(double *)unint64_t v67 = v69;
            unint64_t v77 = (void *)v67[1];
            v67[1] = v71;
          }
        }
        int64_t v63 = v64 - 1;
      }
      while (v64);
      uint64_t v78 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v79 = 0;
        uint64_t v80 = *a1;
        uint64_t v81 = a1[1];
        a1[1] = 0;
        uint64_t v82 = a1;
        do
        {
          int v83 = v82;
          v82 += 2 * v79 + 2;
          uint64_t v84 = 2 * v79;
          uint64_t v79 = (2 * v79) | 1;
          uint64_t v85 = v84 + 2;
          if (v85 < v78 && *(double *)v82 < *((double *)v82 + 2))
          {
            v82 += 2;
            uint64_t v79 = v85;
          }
          *int v83 = *v82;
          uint64_t v86 = v82[1];
          v82[1] = 0;
          id v87 = (void *)v83[1];
          v83[1] = v86;
        }
        while (v79 <= (uint64_t)((unint64_t)(v78 - 2) >> 1));
        uint64_t v88 = a2 - 2;
        if (v82 == a2 - 2)
        {
          *uint64_t v82 = v80;
          int v101 = (void *)v82[1];
          v82[1] = v81;
          goto LABEL_115;
        }
        *uint64_t v82 = *(a2 - 2);
        uint64_t v89 = *(a2 - 1);
        *(a2 - 1) = 0;
        unint64_t v90 = (void *)v82[1];
        v82[1] = v89;

        *(a2 - 2) = v80;
        unint64_t v91 = (void *)*(a2 - 1);
        *(a2 - 1) = v81;

        uint64_t v92 = (char *)v82 - (char *)a1 + 16;
        if (v92 >= 17)
        {
          unint64_t v93 = (((unint64_t)v92 >> 4) - 2) >> 1;
          uint64_t v94 = (double *)&a1[2 * v93];
          double v95 = *v94;
          double v96 = *(double *)v82;
          if (*v94 < *(double *)v82)
          {
            uint64_t v97 = v82[1];
            v82[1] = 0;
            do
            {
              unint64_t v98 = (double *)v82;
              uint64_t v82 = (uint64_t *)v94;
              *unint64_t v98 = v95;
              uint64_t v99 = *((void *)v94 + 1);
              v82[1] = 0;
              int v100 = (void *)*((void *)v98 + 1);
              *((void *)v98 + 1) = v99;

              if (!v93) {
                break;
              }
              unint64_t v93 = (v93 - 1) >> 1;
              uint64_t v94 = (double *)&a1[2 * v93];
              double v95 = *v94;
            }
            while (*v94 < v96);
            *(double *)uint64_t v82 = v96;
            int v101 = (void *)v82[1];
            v82[1] = v97;
LABEL_115:
          }
        }
        a2 = v88;
        if (v78-- <= 2) {
          return;
        }
        continue;
      }
    }
    unint64_t v13 = (unint64_t)v12 >> 1;
    uint64_t v14 = &a1[2 * ((unint64_t)v12 >> 1)];
    if ((unint64_t)v11 < 0x801)
    {
      sub_142440(v14, a1, a2 - 2);
    }
    else
    {
      sub_142440(a1, v14, a2 - 2);
      sub_142440(a1 + 2, v14 - 2, a2 - 4);
      sub_142440(a1 + 4, &a1[2 * v13 + 2], a2 - 6);
      sub_142440(v14 - 2, v14, &a1[2 * v13 + 2]);
      sub_142740(a1, v14);
    }
    --a3;
    double v15 = *(double *)a1;
    if ((a4 & 1) != 0 || *((double *)a1 - 2) < v15)
    {
      uint64_t v16 = 0;
      uint64_t v17 = a1[1];
      a1[1] = 0;
      do
      {
        double v18 = *(double *)&a1[v16 + 2];
        v16 += 2;
      }
      while (v18 < v15);
      char v19 = &a1[v16];
      uint64_t v20 = a2;
      if (v16 == 2)
      {
        uint64_t v20 = a2;
        do
        {
          if (v19 >= v20) {
            break;
          }
          double v22 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v22 >= v15);
      }
      else
      {
        do
        {
          double v21 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v21 >= v15);
      }
      uint64_t v10 = &a1[v16];
      if (v19 < v20)
      {
        uint64_t v23 = v20;
        do
        {
          sub_142740(v10, v23);
          do
          {
            double v24 = *((double *)v10 + 2);
            v10 += 2;
          }
          while (v24 < v15);
          do
          {
            double v25 = *((double *)v23 - 2);
            v23 -= 2;
          }
          while (v25 >= v15);
        }
        while (v10 < v23);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v26 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v27 = (void *)a1[1];
        a1[1] = v26;
      }
      *((double *)v10 - 2) = v15;
      id v28 = (void *)*(v10 - 1);
      *(v10 - 1) = v17;

      if (v19 < v20) {
        goto LABEL_30;
      }
      BOOL v29 = sub_14308C(a1, v10 - 2);
      if (sub_14308C(v10, a2))
      {
        a2 = v10 - 2;
        if (v29) {
          return;
        }
        goto LABEL_1;
      }
      if (!v29)
      {
LABEL_30:
        sub_14284C(a1, v10 - 2, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      uint64_t v30 = a1[1];
      a1[1] = 0;
      if (v15 >= *((double *)a2 - 2))
      {
        CGAffineTransform v32 = a1 + 2;
        do
        {
          uint64_t v10 = v32;
          if (v32 >= a2) {
            break;
          }
          v32 += 2;
        }
        while (v15 >= *(double *)v10);
      }
      else
      {
        uint64_t v10 = a1;
        do
        {
          double v31 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v31);
      }
      CGAffineTransform v33 = a2;
      if (v10 < a2)
      {
        CGAffineTransform v33 = a2;
        do
        {
          double v34 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v34);
      }
      while (v10 < v33)
      {
        sub_142740(v10, v33);
        do
        {
          double v35 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v35);
        do
        {
          double v36 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v36);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v37 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v38 = (void *)a1[1];
        a1[1] = v37;
      }
      *((double *)v10 - 2) = v15;
      id v39 = (void *)*(v10 - 1);
      *(v10 - 1) = v30;

      a4 = 0;
    }
  }
  char v47 = a1 + 2;
  BOOL v49 = a1 == a2 || v47 == a2;
  if (a4)
  {
    if (!v49)
    {
      uint64_t v50 = 0;
      int v51 = a1;
      do
      {
        unint64_t v52 = v47;
        double v53 = *((double *)v51 + 2);
        double v54 = *(double *)v51;
        if (v53 < *(double *)v51)
        {
          uint64_t v55 = v51[3];
          v51[3] = 0;
          uint64_t v56 = v50;
          while (1)
          {
            long long v57 = (double *)((char *)a1 + v56);
            v57[2] = v54;
            uint64_t v58 = *(uint64_t *)((char *)a1 + v56 + 8);
            v57[1] = 0.0;
            id v59 = *(void **)((char *)a1 + v56 + 24);
            *((void *)v57 + 3) = v58;

            if (!v56) {
              break;
            }
            double v54 = *(v57 - 2);
            v56 -= 16;
            if (v53 >= v54)
            {
              uint64_t v60 = (uint64_t)a1 + v56 + 16;
              goto LABEL_83;
            }
          }
          uint64_t v60 = (uint64_t)a1;
LABEL_83:
          *(double *)uint64_t v60 = v53;
          uint64_t v61 = *(void **)(v60 + 8);
          *(void *)(v60 + sub_1265C((uint64_t)this + 8) = v55;
        }
        char v47 = v52 + 2;
        v50 += 16;
        int v51 = v52;
      }
      while (v52 + 2 != a2);
    }
  }
  else if (!v49)
  {
    unint64_t v103 = (void **)(a1 + 3);
    do
    {
      uint64_t v104 = v47;
      double v105 = *((double *)a1 + 2);
      double v106 = *(double *)a1;
      if (v105 < *(double *)a1)
      {
        uint64_t v107 = a1[3];
        a1[3] = 0;
        unint64_t v108 = v103;
        uint64_t v109 = v103;
        do
        {
          *((double *)v108 - 1) = v106;
          int v110 = *(v109 - 2);
          v109 -= 2;
          *uint64_t v109 = 0;
          int v111 = *v108;
          *unint64_t v108 = v110;

          double v106 = *((double *)v108 - 5);
          unint64_t v108 = v109;
        }
        while (v105 < v106);
        *((double *)v109 - 1) = v105;
        uint64_t v112 = *v109;
        *uint64_t v109 = (void *)v107;
      }
      char v47 = v104 + 2;
      v103 += 2;
      a1 = v104;
    }
    while (v104 + 2 != a2);
  }
}

  uint64_t v10 = a1;
  while (1)
  {
    a1 = v10;
    uint64_t v11 = (char *)a2 - (char *)v10;
    uint64_t v12 = ((char *)a2 - (char *)v10) >> 4;
    if (!(!v5 & v4))
    {
      switch(v12)
      {
        case 0:
        case 1:
          return;
        case 2:
          double v41 = *((double *)a2 - 2);
          id v40 = a2 - 2;
          if (v41 >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = v40;
          break;
        case 3:
          sub_142440(a1, a1 + 2, a2 - 2);
          return;
        case 4:
          sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
          return;
        case 5:
          uint64_t v44 = (double *)(a1 + 4);
          sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
          double v46 = *((double *)a2 - 2);
          CGRect v45 = a2 - 2;
          if (v46 >= *((double *)a1 + 6)) {
            return;
          }
          sub_142740(a1 + 6, v45);
          if (*((double *)a1 + 6) >= *v44) {
            return;
          }
          sub_142740(a1 + 4, a1 + 6);
          if (*v44 >= *((double *)a1 + 2)) {
            return;
          }
          sub_142740(a1 + 2, a1 + 4);
          if (*((double *)a1 + 2) >= *(double *)a1) {
            return;
          }
          uint64_t v42 = a1;
          uint64_t v43 = a1 + 2;
          break;
        default:
          JUMPOUT(0);
      }
      sub_142740(v42, v43);
      return;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (a1 == a2) {
        return;
      }
      int64_t v62 = (unint64_t)(v12 - 2) >> 1;
      int64_t v63 = v62;
      do
      {
        int64_t v64 = v63;
        if (v62 >= v63)
        {
          uint64_t v65 = (2 * v63) | 1;
          unint64_t v66 = &a1[2 * v65];
          if (2 * v64 + 2 < v12 && *(double *)v66 < *((double *)v66 + 2))
          {
            v66 += 2;
            uint64_t v65 = 2 * v64 + 2;
          }
          unint64_t v67 = &a1[2 * v64];
          double v68 = *(double *)v66;
          double v69 = *(double *)v67;
          if (*(double *)v66 >= *(double *)v67)
          {
            uint64_t v70 = &a1[2 * v64];
            uint64_t v71 = v70[1];
            v70[1] = 0;
            do
            {
              int v72 = (double *)v67;
              unint64_t v67 = v66;
              *int v72 = v68;
              uint64_t v73 = v66[1];
              v67[1] = 0;
              int v74 = (void *)*((void *)v72 + 1);
              *((void *)v72 + 1) = v73;

              if (v62 < v65) {
                break;
              }
              uint64_t v75 = 2 * v65;
              uint64_t v65 = (2 * v65) | 1;
              unint64_t v66 = &a1[2 * v65];
              uint64_t v76 = v75 + 2;
              if (v76 < v12 && *(double *)v66 < *((double *)v66 + 2))
              {
                v66 += 2;
                uint64_t v65 = v76;
              }
              double v68 = *(double *)v66;
            }
            while (*(double *)v66 >= v69);
            *(double *)unint64_t v67 = v69;
            unint64_t v77 = (void *)v67[1];
            v67[1] = v71;
          }
        }
        int64_t v63 = v64 - 1;
      }
      while (v64);
      uint64_t v78 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v79 = 0;
        uint64_t v80 = *a1;
        uint64_t v81 = a1[1];
        a1[1] = 0;
        uint64_t v82 = a1;
        do
        {
          int v83 = v82;
          v82 += 2 * v79 + 2;
          uint64_t v84 = 2 * v79;
          uint64_t v79 = (2 * v79) | 1;
          uint64_t v85 = v84 + 2;
          if (v85 < v78 && *(double *)v82 < *((double *)v82 + 2))
          {
            v82 += 2;
            uint64_t v79 = v85;
          }
          *int v83 = *v82;
          uint64_t v86 = v82[1];
          v82[1] = 0;
          id v87 = (void *)v83[1];
          v83[1] = v86;
        }
        while (v79 <= (uint64_t)((unint64_t)(v78 - 2) >> 1));
        uint64_t v88 = a2 - 2;
        if (v82 == a2 - 2)
        {
          *uint64_t v82 = v80;
          int v101 = (void *)v82[1];
          v82[1] = v81;
          goto LABEL_115;
        }
        *uint64_t v82 = *(a2 - 2);
        uint64_t v89 = *(a2 - 1);
        *(a2 - 1) = 0;
        unint64_t v90 = (void *)v82[1];
        v82[1] = v89;

        *(a2 - 2) = v80;
        unint64_t v91 = (void *)*(a2 - 1);
        *(a2 - 1) = v81;

        uint64_t v92 = (char *)v82 - (char *)a1 + 16;
        if (v92 >= 17)
        {
          unint64_t v93 = (((unint64_t)v92 >> 4) - 2) >> 1;
          uint64_t v94 = (double *)&a1[2 * v93];
          double v95 = *v94;
          double v96 = *(double *)v82;
          if (*v94 < *(double *)v82)
          {
            uint64_t v97 = v82[1];
            v82[1] = 0;
            do
            {
              unint64_t v98 = (double *)v82;
              uint64_t v82 = (uint64_t *)v94;
              *unint64_t v98 = v95;
              uint64_t v99 = *((void *)v94 + 1);
              v82[1] = 0;
              int v100 = (void *)*((void *)v98 + 1);
              *((void *)v98 + 1) = v99;

              if (!v93) {
                break;
              }
              unint64_t v93 = (v93 - 1) >> 1;
              uint64_t v94 = (double *)&a1[2 * v93];
              double v95 = *v94;
            }
            while (*v94 < v96);
            *(double *)uint64_t v82 = v96;
            int v101 = (void *)v82[1];
            v82[1] = v97;
LABEL_115:
          }
        }
        a2 = v88;
        if (v78-- <= 2) {
          return;
        }
        continue;
      }
    }
    unint64_t v13 = (unint64_t)v12 >> 1;
    uint64_t v14 = &a1[2 * ((unint64_t)v12 >> 1)];
    if ((unint64_t)v11 < 0x801)
    {
      sub_142440(v14, a1, a2 - 2);
    }
    else
    {
      sub_142440(a1, v14, a2 - 2);
      sub_142440(a1 + 2, v14 - 2, a2 - 4);
      sub_142440(a1 + 4, &a1[2 * v13 + 2], a2 - 6);
      sub_142440(v14 - 2, v14, &a1[2 * v13 + 2]);
      sub_142740(a1, v14);
    }
    --a3;
    double v15 = *(double *)a1;
    if ((a4 & 1) != 0 || *((double *)a1 - 2) < v15)
    {
      uint64_t v16 = 0;
      uint64_t v17 = a1[1];
      a1[1] = 0;
      do
      {
        double v18 = *(double *)&a1[v16 + 2];
        v16 += 2;
      }
      while (v18 < v15);
      char v19 = &a1[v16];
      uint64_t v20 = a2;
      if (v16 == 2)
      {
        uint64_t v20 = a2;
        do
        {
          if (v19 >= v20) {
            break;
          }
          double v22 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v22 >= v15);
      }
      else
      {
        do
        {
          double v21 = *((double *)v20 - 2);
          v20 -= 2;
        }
        while (v21 >= v15);
      }
      uint64_t v10 = &a1[v16];
      if (v19 < v20)
      {
        uint64_t v23 = v20;
        do
        {
          sub_142740(v10, v23);
          do
          {
            double v24 = *((double *)v10 + 2);
            v10 += 2;
          }
          while (v24 < v15);
          do
          {
            double v25 = *((double *)v23 - 2);
            v23 -= 2;
          }
          while (v25 >= v15);
        }
        while (v10 < v23);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v26 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v27 = (void *)a1[1];
        a1[1] = v26;
      }
      *((double *)v10 - 2) = v15;
      id v28 = (void *)*(v10 - 1);
      *(v10 - 1) = v17;

      if (v19 < v20) {
        goto LABEL_30;
      }
      BOOL v29 = sub_143B0C(a1, v10 - 2);
      if (sub_143B0C(v10, a2))
      {
        a2 = v10 - 2;
        if (v29) {
          return;
        }
        goto LABEL_1;
      }
      if (!v29)
      {
LABEL_30:
        sub_1432CC(a1, v10 - 2, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      uint64_t v30 = a1[1];
      a1[1] = 0;
      if (v15 >= *((double *)a2 - 2))
      {
        CGAffineTransform v32 = a1 + 2;
        do
        {
          uint64_t v10 = v32;
          if (v32 >= a2) {
            break;
          }
          v32 += 2;
        }
        while (v15 >= *(double *)v10);
      }
      else
      {
        uint64_t v10 = a1;
        do
        {
          double v31 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v31);
      }
      CGAffineTransform v33 = a2;
      if (v10 < a2)
      {
        CGAffineTransform v33 = a2;
        do
        {
          double v34 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v34);
      }
      while (v10 < v33)
      {
        sub_142740(v10, v33);
        do
        {
          double v35 = *((double *)v10 + 2);
          v10 += 2;
        }
        while (v15 >= v35);
        do
        {
          double v36 = *((double *)v33 - 2);
          v33 -= 2;
        }
        while (v15 < v36);
      }
      if (v10 - 2 != a1)
      {
        *a1 = *(v10 - 2);
        uint64_t v37 = *(v10 - 1);
        *(v10 - 1) = 0;
        id v38 = (void *)a1[1];
        a1[1] = v37;
      }
      *((double *)v10 - 2) = v15;
      id v39 = (void *)*(v10 - 1);
      *(v10 - 1) = v30;

      a4 = 0;
    }
  }
  char v47 = a1 + 2;
  BOOL v49 = a1 == a2 || v47 == a2;
  if (a4)
  {
    if (!v49)
    {
      uint64_t v50 = 0;
      int v51 = a1;
      do
      {
        unint64_t v52 = v47;
        double v53 = *((double *)v51 + 2);
        double v54 = *(double *)v51;
        if (v53 < *(double *)v51)
        {
          uint64_t v55 = v51[3];
          v51[3] = 0;
          uint64_t v56 = v50;
          while (1)
          {
            long long v57 = (double *)((char *)a1 + v56);
            v57[2] = v54;
            uint64_t v58 = *(uint64_t *)((char *)a1 + v56 + 8);
            v57[1] = 0.0;
            id v59 = *(void **)((char *)a1 + v56 + 24);
            *((void *)v57 + 3) = v58;

            if (!v56) {
              break;
            }
            double v54 = *(v57 - 2);
            v56 -= 16;
            if (v53 >= v54)
            {
              uint64_t v60 = (uint64_t)a1 + v56 + 16;
              goto LABEL_83;
            }
          }
          uint64_t v60 = (uint64_t)a1;
LABEL_83:
          *(double *)uint64_t v60 = v53;
          uint64_t v61 = *(void **)(v60 + 8);
          *(void *)(v60 + sub_1265C((uint64_t)this + 8) = v55;
        }
        char v47 = v52 + 2;
        v50 += 16;
        int v51 = v52;
      }
      while (v52 + 2 != a2);
    }
  }
  else if (!v49)
  {
    unint64_t v103 = (void **)(a1 + 3);
    do
    {
      uint64_t v104 = v47;
      double v105 = *((double *)a1 + 2);
      double v106 = *(double *)a1;
      if (v105 < *(double *)a1)
      {
        uint64_t v107 = a1[3];
        a1[3] = 0;
        unint64_t v108 = v103;
        uint64_t v109 = v103;
        do
        {
          *((double *)v108 - 1) = v106;
          int v110 = *(v109 - 2);
          v109 -= 2;
          *uint64_t v109 = 0;
          int v111 = *v108;
          *unint64_t v108 = v110;

          double v106 = *((double *)v108 - 5);
          unint64_t v108 = v109;
        }
        while (v105 < v106);
        *((double *)v109 - 1) = v105;
        uint64_t v112 = *v109;
        *uint64_t v109 = (void *)v107;
      }
      char v47 = v104 + 2;
      v103 += 2;
      a1 = v104;
    }
    while (v104 + 2 != a2);
  }
}

  uint64_t v11 = (char *)a2 - 24;
  uint64_t v12 = (long long *)a1;
LABEL_2:
  unint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = (uint64_t)v12;
    uint64_t v14 = v13;
    double v15 = (char *)a2 - (char *)v12;
    uint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v12) >> 3);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          if (*((char *)a2 - 1) < 0)
          {
            sub_124B4(v60, *((void **)a2 - 3), *((void *)a2 - 2));
          }
          else
          {
            double v41 = *(_OWORD *)v11;
            uint64_t v61 = *((void *)a2 - 1);
            *(_OWORD *)uint64_t v60 = v41;
          }
          if (*((char *)v12 + 23) < 0)
          {
            sub_124B4(v58, *(void **)v12, *((void *)v12 + 1));
          }
          else
          {
            uint64_t v42 = *v12;
            id v59 = *((void *)v12 + 2);
            *(_OWORD *)uint64_t v58 = v42;
          }
          uint64_t v43 = *a3;
          uint64_t v44 = sub_EE310(*a3, (unsigned __int8 *)v60);
          CGRect v45 = sub_EE310(v43, (unsigned __int8 *)v58);
          double v46 = *((void *)v44 + 14);
          char v47 = *((void *)v45 + 14);
          uint64_t v48 = v46 < v47;
          if (v46 == v47)
          {
            BOOL v49 = *((void *)v44 + 8);
            uint64_t v50 = *((void *)v45 + 8);
            uint64_t v6 = v49 == v50;
            int v51 = v49 < v50;
            if (v6) {
              uint64_t v48 = v44 < v45;
            }
            else {
              uint64_t v48 = v51;
            }
          }
          if (SHIBYTE(v59) < 0) {
            operator delete(v58[0]);
          }
          if (SHIBYTE(v61) < 0) {
            operator delete(v60[0]);
          }
          if (v48)
          {
            unint64_t v52 = *v12;
            int64_t v63 = *((void *)v12 + 2);
            int64_t v62 = v52;
            double v53 = *(_OWORD *)v11;
            *((void *)v12 + 2) = *((void *)v11 + 2);
            *uint64_t v12 = v53;
            BOOL result = *(double *)&v62;
            *(_OWORD *)uint64_t v11 = v62;
            *((void *)v11 + 2) = v63;
          }
          break;
        case 3uLL:
          sub_1488AC(v12, (long long *)((char *)v12 + 24), (long long *)((char *)a2 - 24), a3);
          break;
        case 4uLL:
          *(void *)&BOOL result = sub_14A27C((uint64_t)v12, (uint64_t)v12 + 24, (uint64_t)(v12 + 3), (uint64_t)a2 - 24, a3).n128_u64[0];
          break;
        case 5uLL:
          *(void *)&BOOL result = sub_14A620((uint64_t)v12, (uint64_t)v12 + 24, (uint64_t)(v12 + 3), (uint64_t)v12 + 72, (uint64_t)a2 - 24, a3).n128_u64[0];
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 575)
    {
      if (a5) {
        sub_14822C(v12, a2, a3);
      }
      else {
        sub_14857C(v12, a2, a3);
      }
      return result;
    }
    if (v14 == 1) {
      break;
    }
    uint64_t v17 = v16 >> 1;
    double v18 = (long long *)((char *)v12 + 24 * (v16 >> 1));
    if ((unint64_t)v15 >= 0xC01)
    {
      sub_1488AC(v12, (long long *)((char *)v12 + 24 * (v16 >> 1)), (long long *)((char *)a2 - 24), a3);
      char v19 = 3 * v17;
      uint64_t v20 = (long long *)((char *)v12 + 24 * v17 - 24);
      sub_1488AC((long long *)((char *)v12 + 24), v20, a2 - 3, a3);
      double v21 = v12 + 3;
      double v22 = (long long *)((char *)v12 + 8 * v19 + 24);
      sub_1488AC(v21, v22, (long long *)((char *)a2 - 72), a3);
      sub_1488AC(v20, v18, v22, a3);
      uint64_t v23 = *(_OWORD *)a1;
      int64_t v63 = *(void *)(a1 + 16);
      int64_t v62 = v23;
      double v24 = *v18;
      *(void *)(a1 + 16) = *((void *)v18 + 2);
      *(_OWORD *)a1 = v24;
      double v25 = v62;
      *((void *)v18 + 2) = v63;
      void *v18 = v25;
      if (a5) {
        goto LABEL_27;
      }
    }
    else
    {
      sub_1488AC((long long *)((char *)v12 + 24 * (v16 >> 1)), v12, (long long *)((char *)a2 - 24), a3);
      if (a5) {
        goto LABEL_27;
      }
    }
    if (*(char *)(a1 - 1) < 0)
    {
      sub_124B4(__dst, *(void **)(a1 - 24), *(void *)(a1 - 16));
    }
    else
    {
      uint64_t v26 = *(_OWORD *)(a1 - 24);
      long long v57 = *(void *)(a1 - 8);
      *(_OWORD *)__dst = v26;
    }
    if (*(char *)(a1 + 23) < 0)
    {
      sub_124B4(__p, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      id v27 = *(_OWORD *)a1;
      uint64_t v55 = *(void *)(a1 + 16);
      *(_OWORD *)std::string __p = v27;
    }
    id v28 = *a3;
    BOOL v29 = sub_EE310(*a3, (unsigned __int8 *)__dst);
    uint64_t v30 = sub_EE310(v28, (unsigned __int8 *)__p);
    double v31 = *((void *)v29 + 14);
    CGAffineTransform v32 = *((void *)v30 + 14);
    CGAffineTransform v33 = v31 < v32;
    if (v31 == v32)
    {
      double v34 = *((void *)v29 + 8);
      double v35 = *((void *)v30 + 8);
      uint64_t v6 = v34 == v35;
      double v36 = v34 < v35;
      if (v6) {
        CGAffineTransform v33 = v29 < v30;
      }
      else {
        CGAffineTransform v33 = v36;
      }
    }
    if (SHIBYTE(v55) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v57) < 0) {
      operator delete(__dst[0]);
    }
    if (!v33)
    {
      uint64_t v12 = sub_148E84((long long *)a1, (void **)a2, a3);
      goto LABEL_32;
    }
LABEL_27:
    uint64_t v37 = sub_14963C(a1, (void **)a2, a3);
    if ((v38 & 1) == 0) {
      goto LABEL_30;
    }
    id v39 = sub_149D1C(a1, v37, a3);
    uint64_t v12 = (long long *)(v37 + 24);
    if (sub_149D1C(v37 + 24, (uint64_t)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v37;
      if (v39) {
        return result;
      }
      goto LABEL_1;
    }
    unint64_t v13 = v14 + 1;
    if (!v39)
    {
LABEL_30:
      sub_147D30(a1, v37, a3, -v14, a5 & 1);
      uint64_t v12 = (long long *)(v37 + 24);
LABEL_32:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (v12 != a2) {
    sub_14AAE8((uint64_t)v12, a2, a2, a3);
  }
  return result;
}

  uint64_t v11 = (unsigned __int8 *)a2 - 24;
  uint64_t v12 = (long long *)a1;
LABEL_2:
  unint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = (uint64_t)v12;
    uint64_t v14 = v13;
    double v15 = (char *)a2 - (char *)v12;
    uint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v12) >> 3);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          double v35 = (void *)(*a3 + 40);
          double v36 = sub_EE310(v35, v11);
          uint64_t v37 = sub_EE310(v35, (unsigned __int8 *)v12);
          id v38 = *((void *)v36 + 7);
          id v39 = *((void *)v37 + 7);
          if (v38 == v39)
          {
            id v40 = *((void *)v36 + 6);
            double v41 = *((void *)v37 + 6);
            uint64_t v6 = v40 == v41;
            uint64_t v42 = v40 < v41;
            if (v6) {
              uint64_t v42 = v36 < v37;
            }
            if (!v42) {
              return;
            }
          }
          else if (v38 >= v39)
          {
            return;
          }
          char v47 = *((void *)v12 + 2);
          CGRect v45 = *v12;
          uint64_t v43 = *(_OWORD *)v11;
          *((void *)v12 + 2) = *((void *)v11 + 2);
          *uint64_t v12 = v43;
          *(_OWORD *)uint64_t v11 = v45;
          *((void *)v11 + 2) = v47;
          return;
        case 3uLL:
          sub_14C0F0((unsigned __int8 *)v12, (unsigned __int8 *)v12 + 24, (unsigned __int8 *)a2 - 24, a3);
          return;
        case 4uLL:
          sub_14CDC4((uint64_t)v12, (unsigned __int8 *)v12 + 24, (unsigned __int8 *)v12 + 48, (unsigned __int8 *)a2 - 24, a3);
          return;
        case 5uLL:
          sub_14CF90((uint64_t)v12, (unsigned __int8 *)v12 + 24, (unsigned __int8 *)v12 + 48, (unsigned __int8 *)v12 + 72, (unsigned __int8 *)a2 - 24, a3);
          return;
        default:
          JUMPOUT(0);
      }
    }
    if (v15 <= 575) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        sub_14D1DC((uint64_t)v12, a2, a2, a3);
      }
      return;
    }
    uint64_t v17 = v16 >> 1;
    double v18 = (unsigned __int8 *)v12 + 24 * (v16 >> 1);
    if ((unint64_t)v15 >= 0xC01)
    {
      sub_14C0F0((unsigned __int8 *)v12, (unsigned __int8 *)v12 + 24 * (v16 >> 1), (unsigned __int8 *)a2 - 24, a3);
      char v19 = 3 * v17;
      uint64_t v20 = (unsigned __int8 *)v12 + 24 * v17 - 24;
      sub_14C0F0((unsigned __int8 *)v12 + 24, v20, (unsigned __int8 *)a2 - 48, a3);
      double v21 = (unsigned __int8 *)(v12 + 3);
      double v22 = (unsigned __int8 *)v12 + 8 * v19 + 24;
      sub_14C0F0(v21, v22, (unsigned __int8 *)a2 - 72, a3);
      sub_14C0F0(v20, v18, v22, a3);
      double v46 = *(void *)(a1 + 16);
      uint64_t v44 = *(_OWORD *)a1;
      uint64_t v23 = *(_OWORD *)v18;
      *(void *)(a1 + 16) = *((void *)v18 + 2);
      *(_OWORD *)a1 = v23;
      *((void *)v18 + 2) = v46;
      *(_OWORD *)double v18 = v44;
      if (a5) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_14C0F0((unsigned __int8 *)v12 + 24 * (v16 >> 1), (unsigned __int8 *)v12, (unsigned __int8 *)a2 - 24, a3);
      if (a5) {
        goto LABEL_18;
      }
    }
    double v24 = (void *)(*a3 + 40);
    double v25 = sub_EE310(v24, (unsigned __int8 *)(a1 - 24));
    uint64_t v26 = sub_EE310(v24, (unsigned __int8 *)a1);
    id v27 = *((void *)v25 + 7);
    id v28 = *((void *)v26 + 7);
    if (v27 == v28)
    {
      BOOL v29 = *((void *)v25 + 6);
      uint64_t v30 = *((void *)v26 + 6);
      uint64_t v6 = v29 == v30;
      double v31 = v29 < v30;
      if (v6) {
        double v31 = v25 < v26;
      }
      if (!v31)
      {
LABEL_22:
        uint64_t v12 = sub_14C3AC((long long *)a1, (unsigned __int8 *)a2, a3);
        goto LABEL_23;
      }
    }
    else if (v27 >= v28)
    {
      goto LABEL_22;
    }
LABEL_18:
    CGAffineTransform v32 = sub_14C734((long long *)a1, (unsigned __int8 *)a2, a3);
    if ((v33 & 1) == 0) {
      goto LABEL_21;
    }
    double v34 = sub_14CA78(a1, v32, a3);
    uint64_t v12 = (long long *)(v32 + 24);
    if (sub_14CA78(v32 + 24, (uint64_t)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v32;
      if (v34) {
        return;
      }
      goto LABEL_1;
    }
    unint64_t v13 = v14 + 1;
    if (!v34)
    {
LABEL_21:
      sub_14B89C(a1, v32, a3, -v14, a5 & 1);
      uint64_t v12 = (long long *)(v32 + 24);
LABEL_23:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (a5)
  {
    sub_14BD54((unsigned __int8 *)v12, (unsigned __int8 *)a2, a3);
  }
  else
  {
    sub_14BF2C((unsigned __int8 *)v12, (unsigned __int8 *)a2, a3);
  }
}

  uint64_t v11 = a1;
LABEL_2:
  uint64_t v12 = 1 - a4;
  while (1)
  {
    a1 = v11;
    unint64_t v13 = v12;
    uint64_t v14 = (char *)a2 - (char *)v11;
    double v15 = ((char *)a2 - (char *)v11) >> 3;
    if (!(!v6 & v5))
    {
      switch(v15)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          double v34 = (unint64_t)*(a2 - 1);
          char v47 = *v11;
          uint64_t v48 = v34;
          double v35 = (void *)(*a3 + 80);
          double v36 = sub_417C(v35, &v48);
          uint64_t v37 = sub_417C(v35, &v47);
          id v38 = v36[4];
          id v39 = v37[4];
          if (v38 == v39)
          {
            id v40 = v36[3];
            double v41 = v37[3];
            uint64_t v6 = v40 == v41;
            uint64_t v42 = v40 < v41;
            if (v6) {
              uint64_t v42 = v36 < v37;
            }
            if (!v42) {
              return;
            }
          }
          else if (v38 >= v39)
          {
            return;
          }
          uint64_t v43 = *v11;
          *uint64_t v11 = 0;
          uint64_t v44 = (unint64_t)*(a2 - 1);
          *(a2 - 1) = 0;
          CGRect v45 = (void *)*v11;
          *uint64_t v11 = v44;

          double v46 = *(a2 - 1);
          *(a2 - 1) = (void *)v43;

          return;
        case 3uLL:
          sub_14E284(v11, v11 + 1, (unint64_t *)a2 - 1, a3);
          return;
        case 4uLL:
          sub_14EF24(v11, v11 + 1, v11 + 2, (unint64_t *)a2 - 1, a3);
          return;
        case 5uLL:
          sub_14F12C(v11, v11 + 1, v11 + 2, v11 + 3, (unint64_t *)a2 - 1, a3);
          return;
        default:
          JUMPOUT(0);
      }
    }
    if (v14 <= 191)
    {
      if (a5) {
        sub_14DF50((void **)v11, a2, a3);
      }
      else {
        sub_14E108(v11, (unint64_t *)a2, a3);
      }
      return;
    }
    if (v13 == 1) {
      break;
    }
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = &v11[v15 >> 1];
    if ((unint64_t)v14 >= 0x401)
    {
      sub_14E284(v11, &v11[v15 >> 1], (unint64_t *)a2 - 1, a3);
      sub_14E284(v11 + 1, v17 - 1, (unint64_t *)a2 - 2, a3);
      sub_14E284(v11 + 2, &v11[v16 + 1], (unint64_t *)a2 - 3, a3);
      sub_14E284(v17 - 1, v17, &v11[v16 + 1], a3);
      double v18 = *v11;
      *uint64_t v11 = 0;
      char v19 = *v17;
      id *v17 = 0;
      uint64_t v20 = (void *)*v11;
      *uint64_t v11 = v19;

      double v21 = (void *)*v17;
      id *v17 = v18;

      if (a5) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_14E284(&v11[v15 >> 1], v11, (unint64_t *)a2 - 1, a3);
      if (a5) {
        goto LABEL_18;
      }
    }
    double v22 = *(v11 - 1);
    char v47 = *v11;
    uint64_t v48 = v22;
    uint64_t v23 = (void *)(*a3 + 80);
    double v24 = sub_417C(v23, &v48);
    double v25 = sub_417C(v23, &v47);
    uint64_t v26 = v24[4];
    id v27 = v25[4];
    if (v26 == v27)
    {
      id v28 = v24[3];
      BOOL v29 = v25[3];
      uint64_t v6 = v28 == v29;
      uint64_t v30 = v28 < v29;
      if (v6) {
        uint64_t v30 = v24 < v25;
      }
      if (!v30)
      {
LABEL_22:
        uint64_t v11 = sub_14E574(a1, (unint64_t *)a2, a3);
        goto LABEL_23;
      }
    }
    else if (v26 >= v27)
    {
      goto LABEL_22;
    }
LABEL_18:
    double v31 = sub_14E8CC(a1, (unint64_t *)a2, a3);
    if ((v32 & 1) == 0) {
      goto LABEL_21;
    }
    CGAffineTransform v33 = sub_14EBEC(a1, v31, a3);
    uint64_t v11 = v31 + 1;
    if (sub_14EBEC(v31 + 1, (unint64_t *)a2, a3))
    {
      a4 = -v13;
      a2 = (void **)v31;
      if (v33) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v12 = v13 + 1;
    if (!v33)
    {
LABEL_21:
      sub_14DBA8(a1, v31, a3, -v13, a5 & 1);
      uint64_t v11 = v31 + 1;
LABEL_23:
      a5 = 0;
      a4 = -v13;
      goto LABEL_2;
    }
  }
  if (v11 != (unint64_t *)a2) {
    sub_14F3C8(v11, (unint64_t *)a2, (unint64_t *)a2, a3);
  }
}

void sub_142440(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  char v5 = (double *)a1;
  double v6 = *(double *)a2;
  double v7 = *(double *)a3;
  if (*(double *)a2 >= *(double *)a1)
  {
    if (v7 >= v6) {
      return;
    }
    sub_142740(a2, a3);
    if (*(double *)a2 >= *v5) {
      return;
    }
    a1 = (uint64_t *)v5;
    double v8 = a2;
  }
  else
  {
    if (v7 >= v6)
    {
      sub_142740(a1, a2);
      if (*(double *)a3 >= *(double *)a2) {
        return;
      }
      a1 = a2;
    }
    double v8 = a3;
  }

  sub_142740(a1, v8);
}

BOOL sub_142500(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        double v6 = a1;
        double v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_142440(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      double v21 = (double *)(a1 + 4);
      sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
      double v23 = *((double *)a2 - 2);
      double v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_142740(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_142740(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_142740(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              double v6 = a1;
              double v7 = a1 + 2;
LABEL_4:
              sub_142740(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      double v8 = (double *)(a1 + 4);
      sub_142440(a1, a1 + 2, a1 + 4);
      uint64_t v9 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    double v12 = *(double *)v9;
    double v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      uint64_t v14 = v9[1];
      v9[1] = 0;
      uint64_t v15 = v10;
      while (1)
      {
        uint64_t v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        uint64_t v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        double v18 = *(void **)((char *)a1 + v15 + 56);
        *((void *)v16 + 7) = v17;

        if (v15 == -32) {
          break;
        }
        double v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          uint64_t v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      uint64_t v19 = (uint64_t)a1;
LABEL_14:
      *(double *)uint64_t v19 = v12;
      uint64_t v20 = *(void **)(v19 + 8);
      *(void *)(v19 + sub_1265C((uint64_t)this + 8) = v14;

      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    double v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

void sub_142740(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;
  *a2 = v3;
  uint64_t v4 = a1[1];
  a1[1] = 0;
  uint64_t v5 = a2[1];
  a2[1] = 0;
  double v6 = (void *)a1[1];
  a1[1] = v5;

  double v7 = (void *)a2[1];
  a2[1] = v4;
}

void sub_1427A4(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  sub_142440(a1, a2, a3);
  if (*(double *)a4 < *(double *)a3)
  {
    sub_142740(a3, a4);
    if (*(double *)a3 < *(double *)a2)
    {
      sub_142740(a2, a3);
      if (*(double *)a2 < *(double *)a1)
      {
        sub_142740(a1, a2);
      }
    }
  }
}

void sub_14284C(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
BOOL sub_14308C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        double v6 = a1;
        double v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_142440(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      double v21 = (double *)(a1 + 4);
      sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
      double v23 = *((double *)a2 - 2);
      double v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_142740(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_142740(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_142740(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              double v6 = a1;
              double v7 = a1 + 2;
LABEL_4:
              sub_142740(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      double v8 = (double *)(a1 + 4);
      sub_142440(a1, a1 + 2, a1 + 4);
      uint64_t v9 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    double v12 = *(double *)v9;
    double v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      uint64_t v14 = v9[1];
      v9[1] = 0;
      uint64_t v15 = v10;
      while (1)
      {
        uint64_t v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        uint64_t v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        double v18 = *(void **)((char *)a1 + v15 + 56);
        *((void *)v16 + 7) = v17;

        if (v15 == -32) {
          break;
        }
        double v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          uint64_t v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      uint64_t v19 = (uint64_t)a1;
LABEL_14:
      *(double *)uint64_t v19 = v12;
      uint64_t v20 = *(void **)(v19 + 8);
      *(void *)(v19 + sub_1265C((uint64_t)this + 8) = v14;

      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    double v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

void sub_1432CC(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
BOOL sub_143B0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        double v6 = a1;
        double v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_142440(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_1427A4(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      double v21 = (double *)(a1 + 4);
      sub_1427A4(a1, a1 + 2, a1 + 4, a1 + 6);
      double v23 = *((double *)a2 - 2);
      double v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_142740(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_142740(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_142740(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              double v6 = a1;
              double v7 = a1 + 2;
LABEL_4:
              sub_142740(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      double v8 = (double *)(a1 + 4);
      sub_142440(a1, a1 + 2, a1 + 4);
      uint64_t v9 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    double v12 = *(double *)v9;
    double v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      uint64_t v14 = v9[1];
      v9[1] = 0;
      uint64_t v15 = v10;
      while (1)
      {
        uint64_t v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        uint64_t v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        double v18 = *(void **)((char *)a1 + v15 + 56);
        *((void *)v16 + 7) = v17;

        if (v15 == -32) {
          break;
        }
        double v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          uint64_t v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      uint64_t v19 = (uint64_t)a1;
LABEL_14:
      *(double *)uint64_t v19 = v12;
      uint64_t v20 = *(void **)(v19 + 8);
      *(void *)(v19 + sub_1265C((uint64_t)this + 8) = v14;

      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    double v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t sub_143D4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 16;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

id sub_143F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) addAttributes:a2 range:a3];
}

void sub_144580(id a1)
{
  id v1 = (void *)qword_2DF7A0;
  qword_2DF7A0 = (uint64_t)&off_268730;
}

void sub_144624(id a1)
{
  id v1 = (void *)qword_2DF7B0;
  qword_2DF7B0 = (uint64_t)&off_268758;
}

void sub_1446D4(id a1)
{
  id v1 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [&off_266380 count]);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v2 = [&off_266380 countByEnumeratingWithState:&v37 objects:v41 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v38;
    p_cache = &OBJC_METACLASS____TUIHBoxDynamicSpacerLayout.cache;
    double height = CGSizeZero.height;
    double v7 = &OBJC_METACLASS____TUIHBoxDynamicSpacerLayout.cache;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v4) {
          objc_enumerationMutation(&off_266380);
        }
        uint64_t v9 = *(void **)(*((void *)&v37 + 1) + 8 * i);
        uint64_t v10 = (int *)[v9 unsignedIntegerValue];
        int v11 = [v7 + 293 buttonWithType:[p_cache + 373 uiButtonTypeFromTUIButtonType:v10]];
        double v12 = v11;
        if (v10 == &dword_4)
        {
          [v11 sizeThatFits:CGSizeZero.width height];
          double v14 = v13;
          uint64_t v15 = [_TUIButtonMetrics alloc];
          [v12 alignmentRectInsets];
          uint64_t v20 = -[_TUIButtonMetrics initWithHeight:widthPadding:alignmentRectInsets:](v15, "initWithHeight:widthPadding:alignmentRectInsets:", v14, NAN, v16, v17, v18, v19);
        }
        else
        {
          [v11 setTitle:@"button" forState:0];
          [v12 sizeThatFits:CGSizeZero.width, height];
          double v22 = v21;
          double v24 = v23;
          double v25 = v7;
          uint64_t v26 = p_cache;
          id v27 = [objc_alloc((Class)NSAttributedString) initWithString:@"button"];
          [v27 tui_widthAsTitle];
          double v29 = v28;
          uint64_t v30 = [_TUIButtonMetrics alloc];
          [v12 alignmentRectInsets];
          uint64_t v20 = -[_TUIButtonMetrics initWithHeight:widthPadding:alignmentRectInsets:](v30, "initWithHeight:widthPadding:alignmentRectInsets:", v24, v22 - v29, v31, v32, v33, v34);

          p_cache = v26;
          double v7 = v25;
        }
        [v1 setObject:v20 forKeyedSubscript:v9];
      }
      id v3 = [&off_266380 countByEnumeratingWithState:&v37 objects:v41 count:16];
    }
    while (v3);
  }
  id v35 = [v1 copy];
  double v36 = (void *)qword_2DF7C0;
  qword_2DF7C0 = (uint64_t)v35;
}

void sub_145548(id a1)
{
  id v1 = +[TUIAttributeSet supportedAttributesSize];
  id v2 = [v1 mutableCopy];

  [v2 removeAttribute:98];
  [v2 removeAttribute:223];
  v6[0] = @"on";
  v6[1] = @"enabled";
  id v3 = +[NSArray arrayWithObjects:v6 count:2];
  [v2 addAttributesFromArray:v3];

  id v4 = [v2 copy];
  char v5 = (void *)qword_2DF7D0;
  qword_2DF7D0 = (uint64_t)v4;
}

void sub_1456A0(id a1)
{
  CFStringRef v4 = @"binding";
  id v1 = +[NSArray arrayWithObjects:&v4 count:1];
  uint64_t v2 = +[TUIAttributeSet setWithArray:v1];
  id v3 = (void *)qword_2DF7E0;
  qword_2DF7E0 = v2;
}

void sub_145B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_145B70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 72);
  double v7 = (id *)(a1 + 64);
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained(v7);
  uint64_t v10 = [WeakRetained identifier];
  LOBYTE(v13) = *(unsigned char *)(a1 + 73);
  int v11 = +[TUIToggleView renderModelWithStates:v8 actionHandler:v4 viewState:v5 enabled:v6 identifier:v10 name:*(void *)(a1 + 48) title:*(void *)(a1 + 56) isOn:v13];

  return v11;
}

void sub_145EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id sub_145F98(void *a1)
{
  mach_timebase_info(&info);
  uint64_t v4 = objc_opt_new();
  sub_146B94(a1, v83);
  uint64_t v82 = 0;
  int64x2_t v80 = 0u;
  int64x2_t v81 = 0u;
  int64x2_t v78 = 0u;
  int64x2_t v79 = 0u;
  int64x2_t v77 = 0u;
  uint64_t v5 = v83[0];
  uint64_t v6 = v83[1];
  while (v5 != v6)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      sub_124B4(__dst, *(void **)v5, *(void *)(v5 + 8));
    }
    else
    {
      long long v7 = *(_OWORD *)v5;
      v56.i64[0] = *(void *)(v5 + 16);
      *(_OWORD *)__dst = v7;
    }
    id v8 = sub_EE310(a1, (unsigned __int8 *)__dst);
    if (v56.i8[7] < 0)
    {
      sub_124B4(__p, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)__dst;
      uint64_t v76 = v56.i64[0];
    }
    uint64_t v9 = sub_146D2C((void *)v8 + 5, (uint64_t *)__p, &info);
    [v4 addObject:v9];

    if (SHIBYTE(v76) < 0) {
      operator delete(__p[0]);
    }
    int64x2_t v10 = vaddq_s64(v78, *(int64x2_t *)(v8 + 56));
    int64x2_t v77 = vaddq_s64(v77, *(int64x2_t *)(v8 + 40));
    int64x2_t v78 = v10;
    int64x2_t v11 = vaddq_s64(v80, *(int64x2_t *)(v8 + 88));
    int64x2_t v79 = vaddq_s64(v79, *(int64x2_t *)(v8 + 72));
    int64x2_t v80 = v11;
    int64x2_t v81 = vaddq_s64(v81, *(int64x2_t *)(v8 + 104));
    v82 += *((void *)v8 + 15);
    if (v56.i8[7] < 0) {
      operator delete(__dst[0]);
    }
    v5 += 24;
  }
  double v12 = objc_opt_new();
  sub_147144((uint64_t)a1, &v73);
  int64x2_t v71 = 0uLL;
  uint64_t v72 = 0;
  uint64_t v13 = v73;
  for (uint64_t i = v74; v13 != i; v13 += 24)
  {
    if (*(char *)(v13 + 23) < 0)
    {
      sub_124B4(__dst, *(void **)v13, *(void *)(v13 + 8));
    }
    else
    {
      long long v15 = *(_OWORD *)v13;
      v56.i64[0] = *(void *)(v13 + 16);
      *(_OWORD *)__dst = v15;
    }
    double v16 = sub_EE310(a1 + 5, (unsigned __int8 *)__dst);
    if (v56.i8[7] < 0)
    {
      sub_124B4(v69, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)double v69 = *(_OWORD *)__dst;
      uint64_t v70 = v56.i64[0];
    }
    double v17 = sub_1472C4((void *)v16 + 5, (uint64_t *)v69, &info);
    [v12 addObject:v17];

    if (SHIBYTE(v70) < 0) {
      operator delete(v69[0]);
    }
    int64x2_t v71 = vaddq_s64(v71, *(int64x2_t *)(v16 + 40));
    v72 += *((void *)v16 + 7);
    if (v56.i8[7] < 0) {
      operator delete(__dst[0]);
    }
  }
  double v18 = objc_opt_new();
  sub_147478((uint64_t)a1, (uint64_t)&v67);
  double v19 = v67;
  for (uint64_t j = v68; v19 != j; ++v19)
  {
    __dst[0] = *v19;
    double v21 = sub_417C(a1 + 10, (unint64_t *)__dst);
    double v22 = sub_147560(v21 + 3, (Class)__dst[0], &info);
    [v18 addObject:v22];
  }
  double v23 = objc_opt_new();
  int64x2_t v65 = 0u;
  int64x2_t v66 = 0u;
  double v24 = (int64x2_t *)a1[15];
  double v25 = (int64x2_t *)a1[16];
  if (v24 == v25)
  {
    uint64_t v34 = a1[15];
  }
  else
  {
    int64x2_t v47 = 0uLL;
    int64x2_t v49 = 0uLL;
    do
    {
      int64x2_t v26 = v24[1];
      *(int64x2_t *)__dst = *v24;
      int64x2_t v56 = v26;
      int64x2_t v27 = v24[2];
      int64x2_t v28 = v24[3];
      int64x2_t v29 = v24[5];
      int64x2_t v59 = v24[4];
      int64x2_t v60 = v29;
      int64x2_t v57 = v27;
      int64x2_t v58 = v28;
      int64x2_t v30 = v24[6];
      int64x2_t v31 = v24[7];
      int64x2_t v32 = v24[9];
      int64x2_t v63 = v24[8];
      int64x2_t v64 = v32;
      int64x2_t v61 = v30;
      int64x2_t v62 = v31;
      int64x2_t v47 = vaddq_s64(v47, v56);
      int64x2_t v49 = vaddq_s64(v49, *(int64x2_t *)__dst);
      int64x2_t v65 = v49;
      int64x2_t v66 = v47;
      double v33 = sub_14777C((unint64_t *)__dst, a1[18], &info, *(double *)v47.i64, *(double *)v56.i64);
      [v23 addObject:v33];

      v24 += 10;
    }
    while (v24 != v25);
    double v24 = (int64x2_t *)a1[15];
    uint64_t v34 = a1[16];
  }
  unint64_t v35 = a1[18];
  unint64_t v36 = a1[19];
  if (v35 >= v36) {
    uint64_t v37 = ~v35;
  }
  else {
    uint64_t v37 = -(uint64_t)v35;
  }
  LODWORD(v2) = info.numer;
  LODWORD(v1) = info.denom;
  v85[0] = @"components";
  v85[1] = @"globals";
  v86[0] = v4;
  v86[1] = v12;
  v86[2] = v18;
  _OWORD v85[2] = @"layouts";
  v85[3] = @"componentsSummary";
  sub_6ACC(v53, "<all>");
  uint64_t v48 = sub_146D2C(&v77, (uint64_t *)v53, &info);
  v86[3] = v48;
  v85[4] = @"globalsSummary";
  sub_6ACC(v51, "<all>");
  uint64_t v50 = sub_1472C4(&v71, (uint64_t *)v51, &info);
  v86[4] = v50;
  v86[5] = v23;
  v85[5] = @"frames";
  v85[6] = @"frameCount";
  long long v38 = +[NSNumber numberWithUnsignedLong:0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[16] - a1[15]) >> 5)];
  double v39 = (double)v2 * (double)(v37 + v36) / (double)v1 / 1000000000.0;
  v86[6] = v38;
  v85[7] = @"elapsed";
  long long v40 = +[NSNumber numberWithDouble:v39];
  v86[7] = v40;
  v85[8] = @"totalElapsed";
  uint64_t v43 = sub_147A04((unint64_t *)&v65, &info, v41, v42);
  v86[8] = v43;
  v85[9] = @"fps";
  uint64_t v44 = +[NSNumber numberWithDouble:(double)(0xCCCCCCCCCCCCCCCDLL * ((v34 - (uint64_t)v24) >> 5)) / v39];
  v86[9] = v44;
  CGRect v45 = +[NSDictionary dictionaryWithObjects:v86 forKeys:v85 count:10];

  if (v52 < 0) {
    operator delete(v51[0]);
  }

  if (v54 < 0) {
    operator delete(v53[0]);
  }

  __dst[0] = &v67;
  sub_14FB7C((void ***)__dst);

  __dst[0] = &v73;
  sub_ED9A4((void ***)__dst);

  __dst[0] = v83;
  sub_ED9A4((void ***)__dst);

  return v45;
}

void sub_1465DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  if (a18 < 0) {
    operator delete(__p);
  }

  if (a24 < 0) {
    operator delete(a19);
  }

  a25 = &a50;
  sub_14FB7C((void ***)&a25);

  a25 = &a60;
  sub_ED9A4((void ***)&a25);

  a25 = &STACK[0x200];
  sub_ED9A4((void ***)&a25);

  _Unwind_Resume(a1);
}

uint64_t sub_146794(void *a1)
{
  unint64_t v4 = a1[17];
  uint64_t v2 = (uint64_t)(a1 + 17);
  unint64_t v3 = v4;
  uint64_t v5 = *(_OWORD **)(v2 - 8);
  if ((unint64_t)v5 >= v4)
  {
    long long v7 = (void **)(v2 - 16);
    uint64_t v8 = *(void *)(v2 - 16);
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v5 - v8) >> 5);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0x199999999999999) {
      sub_4484();
    }
    unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v3 - v8) >> 5);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0xCCCCCCCCCCCCCCLL) {
      unint64_t v12 = 0x199999999999999;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_14FBFC(v2, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    double v14 = &v13[160 * v9];
    long long v15 = &v13[160 * v12];
    *((_OWORD *)v14 + sub_1265C((uint64_t)this + 8) = 0u;
    *((_OWORD *)v14 + 9) = 0u;
    *((_OWORD *)v14 + 6) = 0u;
    *((_OWORD *)v14 + 7) = 0u;
    *((_OWORD *)v14 + 4) = 0u;
    *((_OWORD *)v14 + 5) = 0u;
    *((_OWORD *)v14 + 2) = 0u;
    *((_OWORD *)v14 + 3) = 0u;
    *(_OWORD *)double v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    uint64_t v6 = v14 + 160;
    double v17 = (char *)a1[15];
    double v16 = (char *)a1[16];
    if (v16 != v17)
    {
      do
      {
        long long v18 = *((_OWORD *)v16 - 9);
        *((_OWORD *)v14 - 10) = *((_OWORD *)v16 - 10);
        *((_OWORD *)v14 - 9) = v18;
        long long v19 = *((_OWORD *)v16 - 8);
        long long v20 = *((_OWORD *)v16 - 7);
        long long v21 = *((_OWORD *)v16 - 5);
        *((_OWORD *)v14 - 6) = *((_OWORD *)v16 - 6);
        *((_OWORD *)v14 - 5) = v21;
        *((_OWORD *)v14 - sub_1265C((uint64_t)this + 8) = v19;
        *((_OWORD *)v14 - 7) = v20;
        long long v22 = *((_OWORD *)v16 - 4);
        long long v23 = *((_OWORD *)v16 - 3);
        long long v24 = *((_OWORD *)v16 - 1);
        *((_OWORD *)v14 - 2) = *((_OWORD *)v16 - 2);
        *((_OWORD *)v14 - 1) = v24;
        *((_OWORD *)v14 - 4) = v22;
        *((_OWORD *)v14 - 3) = v23;
        v14 -= 160;
        v16 -= 160;
      }
      while (v16 != v17);
      double v16 = (char *)*v7;
    }
    a1[15] = v14;
    a1[16] = v6;
    a1[17] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    v5[8] = 0u;
    v5[9] = 0u;
    v5[6] = 0u;
    v5[7] = 0u;
    void v5[4] = 0u;
    void v5[5] = 0u;
    v5[2] = 0u;
    uint64_t v5[3] = 0u;
    uint64_t v6 = v5 + 10;
    _OWORD *v5 = 0u;
    v5[1] = 0u;
  }
  a1[16] = v6;
  uint64_t result = mach_absolute_time();
  *(void *)(a1[16] - 16) = result;
  return result;
}

void sub_146990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

int64x2_t sub_1469B0(uint64_t a1, void *a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 24); i; uint64_t i = (uint64_t *)*i)
  {
    long long v6 = *((_OWORD *)i + 4);
    long long v20 = *((_OWORD *)i + 3);
    long long v21 = v6;
    long long v7 = *((_OWORD *)i + 6);
    long long v22 = *((_OWORD *)i + 5);
    long long v23 = v7;
    long long v8 = *((_OWORD *)i + 2);
    *(_OWORD *)long long v19 = *((_OWORD *)i + 1);
    *(_OWORD *)&v19[16] = v8;
    unint64_t v2 = v2 & 0xFFFFFFFF00000000 | *(unsigned int *)v19;
    Entry v9 = (Entry)v2;
    TUI::Symbol::Tab::std_string(*(std::string **)a1, v9, &__p);
    sub_14FC44(a2, (unsigned __int8 *)&__p, (uint64_t)&v19[8]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  for (uint64_t j = *(uint64_t **)(a1 + 64); j; uint64_t j = (uint64_t *)*j)
  {
    long long v11 = *((_OWORD *)j + 2);
    *(_OWORD *)long long v19 = *((_OWORD *)j + 1);
    *(_OWORD *)&v19[16] = v11;
    unint64_t v2 = v2 & 0xFFFFFFFF00000000 | *(unsigned int *)v19;
    Entry v12 = (Entry)v2;
    TUI::Symbol::Tab::std_string(*(std::string **)a1, v12, &__p);
    sub_14FCEC((uint64_t)a2, (unsigned __int8 *)&__p, (int64x2_t *)&v19[8]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  for (k = *(uint64_t **)(a1 + 104); k; k = (uint64_t *)*k)
  {
    *(void *)long long v19 = (id)k[2];
    long long v14 = *(_OWORD *)(k + 3);
    *(void *)&v19[24] = k[5];
    *(_OWORD *)&v19[8] = v14;
    sub_14FDAC((uint64_t)a2, *(unint64_t *)v19, (int64x2_t *)&v19[8]);
  }
  uint64_t v15 = a2[16];
  int64x2_t v16 = *(int64x2_t *)(v15 - 144);
  *(int64x2_t *)(v15 - 160) = vaddq_s64(*(int64x2_t *)(v15 - 160), *(int64x2_t *)(a1 + 27816));
  int64x2_t result = vaddq_s64(v16, *(int64x2_t *)(a1 + 27832));
  *(int64x2_t *)(v15 - ++*(void *)(*(void *)(result + 32) + 144) = result;
  return result;
}

void sub_146B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  _Unwind_Resume(a1);
}

double sub_146B94@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v4 = (uint64_t *)a1[2];
  if (v4)
  {
    do
    {
      if (*((char *)v4 + 39) < 0)
      {
        sub_124B4(__p, (void *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v4 + 1);
        uint64_t v16 = v4[4];
      }
      long long v5 = *(_OWORD *)(v4 + 11);
      long long v19 = *(_OWORD *)(v4 + 9);
      long long v20 = v5;
      long long v21 = *(_OWORD *)(v4 + 13);
      uint64_t v22 = v4[15];
      long long v6 = *(_OWORD *)(v4 + 7);
      long long v17 = *(_OWORD *)(v4 + 5);
      long long v18 = v6;
      unint64_t v7 = a2[1];
      if (v7 >= a2[2])
      {
        uint64_t v9 = sub_147C0C(a2, (long long *)__p);
      }
      else
      {
        if (SHIBYTE(v16) < 0)
        {
          sub_124B4((unsigned char *)a2[1], __p[0], (unint64_t)__p[1]);
        }
        else
        {
          long long v8 = *(_OWORD *)__p;
          *(void *)(v7 + 16) = v16;
          *(_OWORD *)unint64_t v7 = v8;
        }
        uint64_t v9 = v7 + 24;
        a2[1] = v7 + 24;
      }
      a2[1] = v9;
      if (SHIBYTE(v16) < 0) {
        operator delete(__p[0]);
      }
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
    uint64_t v10 = *a2;
    long long v11 = (long long *)a2[1];
  }
  else
  {
    long long v11 = 0;
    uint64_t v10 = 0;
  }
  unint64_t v12 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v11 - v10) >> 3));
  long long v23 = a1;
  if (v11 == (long long *)v10) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v12;
  }
  return sub_147D30(v10, v11, &v23, v13, 1);
}

void sub_146CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

id sub_146D2C(void *a1, uint64_t *a2, _DWORD *a3)
{
  v26[0] = @"name";
  if (*((char *)a2 + 23) < 0) {
    a2 = (uint64_t *)*a2;
  }
  v27[0] = +[NSString stringWithCString:a2 encoding:4];
  v26[1] = @"instantiateBody";
  double v25 = +[NSNumber numberWithUnsignedLong:a1[3]];
  v27[1] = v25;
  _OWORD v26[2] = @"instantiate";
  long long v24 = +[NSNumber numberWithUnsignedLong:a1[4]];
  v27[2] = v24;
  void v26[3] = @"instantiateCreate";
  long long v23 = +[NSNumber numberWithUnsignedLong:a1[5]];
  v27[3] = v23;
  void v26[4] = @"instantiateUpdate";
  long long v5 = +[NSNumber numberWithUnsignedLong:a1[6]];
  void v27[4] = v5;
  v26[5] = @"instantiateReuse";
  long long v6 = +[NSNumber numberWithUnsignedLong:a1[7]];
  void v27[5] = v6;
  v26[6] = @"evaluatedBindings";
  unint64_t v7 = +[NSNumber numberWithUnsignedLong:*a1];
  v27[6] = v7;
  v26[7] = @"globalsEvaluated";
  long long v8 = +[NSNumber numberWithUnsignedLong:a1[1]];
  _WORD v27[7] = v8;
  v26[8] = @"globalsChanged";
  uint64_t v9 = +[NSNumber numberWithUnsignedLong:a1[2]];
  LODWORD(v10) = *a3;
  LODWORD(v11) = a3[1];
  double v12 = (double)(unint64_t)a1[8] * (double)v10;
  v27[8] = v9;
  v26[9] = @"elapsedInstantiateBody (direct)";
  uint64_t v13 = +[NSNumber numberWithDouble:v12 / (double)v11 / 1000000.0];
  v27[9] = v13;
  v26[10] = @"elapsedInstantiateBody (total)";
  LODWORD(v14) = *a3;
  LODWORD(v15) = a3[1];
  uint64_t v16 = +[NSNumber numberWithDouble:(double)(unint64_t)a1[9] * (double)v14 / (double)v15 / 1000000.0];
  v27[10] = v16;
  v26[11] = @"elapsedGlobalsEvaluated";
  LODWORD(v17) = *a3;
  LODWORD(v1sub_1265C((uint64_t)this + 8) = a3[1];
  long long v19 = +[NSNumber numberWithDouble:(double)(unint64_t)a1[10] * (double)v17 / (double)v18 / 1000000.0];
  v27[11] = v19;
  long long v20 = (void *)v27[0];
  long long v21 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:12];

  return v21;
}

void sub_147044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

int64x2_t sub_1470F0(int64x2_t *a1, int64x2_t *a2)
{
  int64x2_t v2 = a1[1];
  *a1 = vaddq_s64(*a1, *a2);
  a1[1] = vaddq_s64(v2, a2[1]);
  int64x2_t v3 = a1[3];
  a1[2] = vaddq_s64(a1[2], a2[2]);
  int64x2_t result = vaddq_s64(v3, a2[3]);
  int64x2_t v5 = vaddq_s64(a1[4], a2[4]);
  a1[3] = result;
  a1[4] = v5;
  a1[5].i64[0] += a2[5].i64[0];
  return result;
}

void sub_147144(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v4 = *(uint64_t **)(a1 + 56);
  if (v4)
  {
    do
    {
      if (*((char *)v4 + 39) < 0)
      {
        sub_124B4(__p, (void *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v4 + 1);
        uint64_t v13 = v4[4];
      }
      long long v14 = *(_OWORD *)(v4 + 5);
      uint64_t v15 = v4[7];
      unint64_t v5 = a2[1];
      if (v5 >= a2[2])
      {
        uint64_t v7 = sub_147C0C(a2, (long long *)__p);
      }
      else
      {
        if (SHIBYTE(v13) < 0)
        {
          sub_124B4((unsigned char *)a2[1], __p[0], (unint64_t)__p[1]);
        }
        else
        {
          long long v6 = *(_OWORD *)__p;
          *(void *)(v5 + 16) = v13;
          *(_OWORD *)unint64_t v5 = v6;
        }
        uint64_t v7 = v5 + 24;
        a2[1] = v5 + 24;
      }
      a2[1] = v7;
      if (SHIBYTE(v13) < 0) {
        operator delete(__p[0]);
      }
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
    uint64_t v8 = *a2;
    uint64_t v9 = (long long *)a2[1];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  unint64_t v10 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - v8) >> 3));
  uint64_t v16 = a1;
  if (v9 == (long long *)v8) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_14B89C(v8, v9, &v16, v11, 1);
}

void sub_147284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

id sub_1472C4(void *a1, uint64_t *a2, _DWORD *a3)
{
  v14[0] = @"name";
  if (*((char *)a2 + 23) < 0) {
    a2 = (uint64_t *)*a2;
  }
  unint64_t v5 = +[NSString stringWithCString:a2 encoding:4];
  v15[0] = v5;
  v14[1] = @"evaluated";
  long long v6 = +[NSNumber numberWithUnsignedLong:*a1];
  v15[1] = v6;
  void v14[2] = @"changed";
  uint64_t v7 = +[NSNumber numberWithUnsignedLong:a1[1]];
  LODWORD(vsub_1265C((uint64_t)this + 8) = *a3;
  LODWORD(v9) = a3[1];
  double v10 = (double)(unint64_t)a1[2] * (double)v8;
  v15[2] = v7;
  void v14[3] = @"elapsedEvaluated";
  uint64_t v11 = +[NSNumber numberWithDouble:v10 / (double)v9 / 1000000.0];
  void v15[3] = v11;
  double v12 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:4];

  return v12;
}

void sub_14743C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_147478(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(a2 + 16) = 0;
  unint64_t v4 = *(uint64_t **)(a1 + 96);
  if (v4)
  {
    do
    {
      id v10 = (id)v4[2];
      long long v5 = *(_OWORD *)(v4 + 3);
      uint64_t v12 = v4[5];
      long long v11 = v5;
      sub_14DA30((char **)a2, &v10);

      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
    long long v6 = *(char **)a2;
    uint64_t v7 = *(void ***)(a2 + 8);
  }
  else
  {
    uint64_t v7 = 0;
    long long v6 = 0;
  }
  unint64_t v8 = 126 - 2 * __clz(((char *)v7 - v6) >> 3);
  uint64_t v13 = a1;
  if (v7 == (void **)v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  sub_14DBA8((unint64_t *)v6, v7, &v13, v9, 1);
}

void sub_147538(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_14FB7C((void ***)va);
  _Unwind_Resume(a1);
}

id sub_147560(unint64_t *a1, Class aClass, _DWORD *a3)
{
  unint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  v20[0] = @"name";
  uint64_t v7 = NSStringFromClass(aClass);
  v21[0] = v7;
  v20[1] = @"countCompute";
  unint64_t v8 = +[NSNumber numberWithUnsignedLong:*a1];
  LODWORD(v9) = *a3;
  LODWORD(v10) = a3[1];
  v21[1] = v8;
  v20[2] = @"averageDirect";
  long long v11 = +[NSNumber numberWithDouble:(double)(v5 / v6) * (double)v9 / (double)v10 / 1000000.0];
  void v21[2] = v11;
  v20[3] = @"elapsedComputeDirect";
  LODWORD(v12) = *a3;
  LODWORD(v13) = a3[1];
  long long v14 = +[NSNumber numberWithDouble:(double)a1[1] * (double)v12 / (double)v13 / 1000000.0];
  _OWORD v21[3] = v14;
  void v20[4] = @"elapsedComputeTotal";
  LODWORD(v15) = *a3;
  LODWORD(v16) = a3[1];
  unint64_t v17 = +[NSNumber numberWithDouble:(double)a1[2] * (double)v15 / (double)v16 / 1000000.0];
  void v21[4] = v17;
  unint64_t v18 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:5];

  return v18;
}

void sub_147734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_14777C(unint64_t *a1, unint64_t a2, _DWORD *a3, double a4, double a5)
{
  unint64_t v7 = a1[18];
  unint64_t v8 = a1[19];
  if (v7 <= a2) {
    unint64_t v9 = a2 - v7;
  }
  else {
    unint64_t v9 = v7 - a2;
  }
  unint64_t v10 = v8 - v7;
  BOOL v11 = v7 >= v8;
  unint64_t v12 = v7 - v8;
  if (v11) {
    unint64_t v13 = v12;
  }
  else {
    unint64_t v13 = v10;
  }
  v29[0] = @"elapsed";
  long long v14 = sub_147A04(a1, a3, a4, a5);
  v30[0] = v14;
  v29[1] = @"componentSummary";
  sub_6ACC(v27, "<all>");
  unint64_t v15 = sub_146D2C(a1 + 4, (uint64_t *)v27, a3);
  v30[1] = v15;
  v29[2] = @"globalsSummary";
  sub_6ACC(__p, "<all>");
  unint64_t v16 = sub_1472C4(a1 + 15, (uint64_t *)__p, a3);
  LODWORD(v17) = *a3;
  LODWORD(v1sub_1265C((uint64_t)this + 8) = a3[1];
  v30[2] = v16;
  void v29[3] = @"total";
  long long v19 = +[NSNumber numberWithDouble:(double)v13 * (double)v17 / (double)v18 / 1000000.0];
  void v30[3] = v19;
  void v29[4] = @"offfset";
  LODWORD(v20) = *a3;
  LODWORD(v21) = a3[1];
  uint64_t v22 = +[NSNumber numberWithDouble:(double)v9 * (double)v20 / (double)v21 / 1000000.0];
  void v30[4] = v22;
  long long v23 = +[NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:5];

  if (v26 < 0) {
    operator delete(__p[0]);
  }

  if (v28 < 0) {
    operator delete(v27[0]);
  }

  return v23;
}

void sub_14798C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  if (a21 < 0) {
    operator delete(a16);
  }

  _Unwind_Resume(a1);
}

id sub_147A04(unint64_t *a1, _DWORD *a2, double a3, double a4)
{
  v20[0] = @"instantiate";
  LODWORD(a4) = *a2;
  unint64_t v6 = a2 + 1;
  unint64_t v7 = +[NSNumber numberWithDouble:(double)*a1 * (double)*(unint64_t *)&a4 / (double)a2[1] / 1000000.0];
  v21[0] = v7;
  v20[1] = @"layout";
  LODWORD(vsub_1265C((uint64_t)this + 8) = *a2;
  *(double *)&unint64_t v9 = (double)v8;
  double v10 = (double)a1[1] * *(double *)&v9;
  LODWORD(v9) = *v6;
  BOOL v11 = +[NSNumber numberWithDouble:v10 / (double)v9 / 1000000.0];
  v21[1] = v11;
  v20[2] = @"renderModel";
  LODWORD(v12) = *a2;
  LODWORD(v13) = a2[1];
  long long v14 = +[NSNumber numberWithDouble:(double)a1[2] * (double)v12 / (double)v13 / 1000000.0];
  void v21[2] = v14;
  v20[3] = @"globalsEnvironmentUpdate";
  LODWORD(v15) = *a2;
  LODWORD(v16) = a2[1];
  unint64_t v17 = +[NSNumber numberWithDouble:(double)a1[3] * (double)v15 / (double)v16 / 1000000.0];
  _OWORD v21[3] = v17;
  unint64_t v18 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:4];

  return v18;
}

void sub_147BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_147C0C(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_4484();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v18 = a1 + 2;
  if (v9) {
    double v10 = (char *)sub_12768(v7, v9);
  }
  else {
    double v10 = 0;
  }
  BOOL v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  unint64_t v16 = v11;
  unint64_t v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_124B4(v11, *(void **)a2, *((void *)a2 + 1));
    BOOL v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)BOOL v11 = v12;
  }
  unint64_t v16 = v11 + 24;
  sub_EECB0(a1, v15);
  uint64_t v13 = a1[1];
  sub_EEE48((uint64_t)v15);
  return v13;
}

void sub_147D1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_EEE48((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_147D30(uint64_t a1, long long *a2, void **a3, uint64_t a4, char a5)
{
void sub_1481B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

void sub_14822C(long long *a1, long long *a2, void **a3)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v3 = a2;
  char v5 = (long long *)((char *)a1 + 24);
  if ((long long *)((char *)a1 + 24) == a2) {
    return;
  }
  uint64_t v7 = 0;
  unint64_t v8 = a1;
  do
  {
    unint64_t v9 = v5;
    if (*((char *)v8 + 47) < 0)
    {
      sub_124B4(__dst, *(void **)v5, *((void *)v8 + 4));
    }
    else
    {
      *(_OWORD *)__dst = *v5;
      uint64_t v48 = *((void *)v5 + 2);
    }
    if (*((char *)v8 + 23) < 0)
    {
      sub_124B4(__p, *(void **)v8, *((void *)v8 + 1));
    }
    else
    {
      long long v10 = *v8;
      uint64_t v46 = *((void *)v8 + 2);
      *(_OWORD *)std::string __p = v10;
    }
    BOOL v11 = *a3;
    long long v12 = sub_EE310(*a3, (unsigned __int8 *)__dst);
    uint64_t v13 = sub_EE310(v11, (unsigned __int8 *)__p);
    unint64_t v14 = *((void *)v12 + 14);
    unint64_t v15 = *((void *)v13 + 14);
    BOOL v16 = v14 < v15;
    if (v14 == v15)
    {
      unint64_t v17 = *((void *)v12 + 8);
      unint64_t v18 = *((void *)v13 + 8);
      BOOL v19 = v17 == v18;
      BOOL v20 = v17 < v18;
      if (v19) {
        BOOL v16 = v12 < v13;
      }
      else {
        BOOL v16 = v20;
      }
    }
    if (SHIBYTE(v46) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v48) < 0)
    {
      operator delete(__dst[0]);
      if (!v16) {
        goto LABEL_45;
      }
    }
    else if (!v16)
    {
      goto LABEL_45;
    }
    unint64_t v21 = *(void **)v9;
    uint64_t v22 = (void *)*((void *)v8 + 4);
    v44[0] = *((_DWORD *)v8 + 10);
    *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)((char *)v8 + 43);
    int v23 = *((char *)v8 + 47);
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = 0;
    *(void *)unint64_t v9 = 0;
    uint64_t v38 = v7;
    while (1)
    {
      uint64_t v24 = (uint64_t)a1 + v7;
      long long v25 = (void **)((char *)a1 + v7 + 24);
      if (*((char *)a1 + v7 + 47) < 0) {
        operator delete(*v25);
      }
      *(_OWORD *)long long v25 = *(_OWORD *)v24;
      *(void *)((char *)a1 + v7 + 40) = *(void *)(v24 + 16);
      *(unsigned char *)(v24 + 23) = 0;
      *(unsigned char *)uint64_t v24 = 0;
      if (!v7)
      {
        BOOL v36 = a1;
        goto LABEL_44;
      }
      if (v23 < 0)
      {
        sub_124B4(v41, v21, (unint64_t)v22);
      }
      else
      {
        v41[0] = v21;
        v41[1] = v22;
        *(_DWORD *)long long v42 = v44[0];
        *(_DWORD *)&_DWORD v42[3] = *(_DWORD *)((char *)v44 + 3);
        char v43 = v23;
      }
      long long v26 = (void **)((char *)a1 + v7 - 24);
      if (*((char *)a1 + v7 - 1) < 0)
      {
        sub_124B4(v39, *v26, *(void *)((char *)a1 + v7 - 16));
      }
      else
      {
        *(_OWORD *)BOOL v39 = *(_OWORD *)v26;
        uint64_t v40 = *(void *)((char *)a1 + v7 - 8);
      }
      long long v27 = *a3;
      char v28 = sub_EE310(*a3, (unsigned __int8 *)v41);
      int64x2_t v29 = sub_EE310(v27, (unsigned __int8 *)v39);
      unint64_t v30 = *((void *)v28 + 14);
      unint64_t v31 = *((void *)v29 + 14);
      BOOL v32 = v30 < v31;
      if (v30 == v31)
      {
        unint64_t v33 = *((void *)v28 + 8);
        unint64_t v34 = *((void *)v29 + 8);
        BOOL v19 = v33 == v34;
        BOOL v35 = v33 < v34;
        if (v19) {
          BOOL v32 = v28 < v29;
        }
        else {
          BOOL v32 = v35;
        }
      }
      if (SHIBYTE(v40) < 0) {
        operator delete(v39[0]);
      }
      if (v43 < 0) {
        break;
      }
      if (!v32) {
        goto LABEL_42;
      }
LABEL_40:
      v7 -= 24;
    }
    operator delete(v41[0]);
    if (v32) {
      goto LABEL_40;
    }
LABEL_42:
    BOOL v36 = (long long *)((char *)a1 + v7);
    if (*((char *)a1 + v7 + 23) < 0) {
      operator delete(*(void **)v36);
    }
LABEL_44:
    uint64_t v3 = a2;
    uint64_t v7 = v38;
    *(void *)BOOL v36 = v21;
    *((void *)v36 + 1) = v22;
    *((_DWORD *)v36 + 4) = v44[0];
    *(_DWORD *)((char *)v36 + 19) = *(_DWORD *)((char *)v44 + 3);
    *((unsigned char *)v36 + 23) = v23;
LABEL_45:
    char v5 = (long long *)((char *)v9 + 24);
    v7 += 24;
    unint64_t v8 = v9;
  }
  while ((long long *)((char *)v9 + 24) != v3);
}

void sub_148508(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_14857C(long long *a1, long long *a2, void **a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = a2;
    unint64_t v4 = a1;
    char v5 = (long long *)((char *)a1 + 24);
    if ((long long *)((char *)a1 + 24) != a2)
    {
      uint64_t v7 = (char *)a1 + 47;
      do
      {
        unint64_t v8 = v5;
        if (*((char *)v4 + 47) < 0)
        {
          sub_124B4(__dst, *(void **)v5, *((void *)v4 + 4));
        }
        else
        {
          *(_OWORD *)__dst = *v5;
          uint64_t v44 = *((void *)v5 + 2);
        }
        if (*((char *)v4 + 23) < 0)
        {
          sub_124B4(__p, *(void **)v4, *((void *)v4 + 1));
        }
        else
        {
          long long v9 = *v4;
          uint64_t v42 = *((void *)v4 + 2);
          *(_OWORD *)std::string __p = v9;
        }
        long long v10 = *a3;
        BOOL v11 = sub_EE310(*a3, (unsigned __int8 *)__dst);
        long long v12 = sub_EE310(v10, (unsigned __int8 *)__p);
        unint64_t v13 = *((void *)v11 + 14);
        unint64_t v14 = *((void *)v12 + 14);
        BOOL v15 = v13 < v14;
        if (v13 == v14)
        {
          unint64_t v16 = *((void *)v11 + 8);
          unint64_t v17 = *((void *)v12 + 8);
          BOOL v18 = v16 == v17;
          BOOL v19 = v16 < v17;
          if (v18) {
            BOOL v15 = v11 < v12;
          }
          else {
            BOOL v15 = v19;
          }
        }
        if (SHIBYTE(v42) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v44) < 0)
        {
          operator delete(__dst[0]);
          if (v15)
          {
LABEL_20:
            BOOL v20 = *(void **)v8;
            unint64_t v21 = (void *)*((void *)v4 + 4);
            v40[0] = *((_DWORD *)v4 + 10);
            *(_DWORD *)((char *)v40 + 3) = *(_DWORD *)((char *)v4 + 43);
            int v22 = *((char *)v4 + 47);
            *((void *)v8 + 1) = 0;
            *((void *)v8 + 2) = 0;
            *(void *)unint64_t v8 = 0;
            int v23 = v7;
            do
            {
              uint64_t v24 = (void **)(v23 - 23);
              if ((char)*v23 < 0) {
                operator delete(*v24);
              }
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v23 - 47);
              *(void *)(v23 - 7) = *(void *)(v23 - 31);
              *(v23 - 24) = 0;
              *(v23 - 47) = 0;
              if (v22 < 0)
              {
                sub_124B4(v37, v20, (unint64_t)v21);
              }
              else
              {
                v37[0] = v20;
                v37[1] = v21;
                *(_DWORD *)uint64_t v38 = v40[0];
                *(_DWORD *)&v38[3] = *(_DWORD *)((char *)v40 + 3);
                char v39 = v22;
              }
              if ((char)*(v23 - 48) < 0)
              {
                sub_124B4(v35, *(void **)(v23 - 71), *(void *)(v23 - 63));
              }
              else
              {
                *(_OWORD *)BOOL v35 = *(_OWORD *)(v23 - 71);
                uint64_t v36 = *(void *)(v23 - 55);
              }
              long long v25 = *a3;
              long long v26 = sub_EE310(*a3, (unsigned __int8 *)v37);
              long long v27 = sub_EE310(v25, (unsigned __int8 *)v35);
              unint64_t v28 = *((void *)v26 + 14);
              unint64_t v29 = *((void *)v27 + 14);
              BOOL v30 = v28 < v29;
              if (v28 == v29)
              {
                unint64_t v31 = *((void *)v26 + 8);
                unint64_t v32 = *((void *)v27 + 8);
                BOOL v18 = v31 == v32;
                BOOL v33 = v31 < v32;
                if (v18) {
                  BOOL v30 = v26 < v27;
                }
                else {
                  BOOL v30 = v33;
                }
              }
              if (SHIBYTE(v36) < 0) {
                operator delete(v35[0]);
              }
              if (v39 < 0) {
                operator delete(v37[0]);
              }
              v23 -= 24;
            }
            while (v30);
            if ((char)*v23 < 0) {
              operator delete(*(void **)(v23 - 23));
            }
            *(void *)(v23 - 23) = v20;
            *(void *)(v23 - 15) = v21;
            *(_DWORD *)(v23 - 7) = v40[0];
            *((_DWORD *)v23 - 1) = *(_DWORD *)((char *)v40 + 3);
            unsigned char *v23 = v22;
            uint64_t v3 = a2;
          }
        }
        else if (v15)
        {
          goto LABEL_20;
        }
        char v5 = (long long *)((char *)v8 + 24);
        v7 += 24;
        unint64_t v4 = v8;
      }
      while ((long long *)((char *)v8 + 24) != v3);
    }
  }
}

void sub_148838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1488AC(long long *a1, long long *a2, long long *a3, void **a4)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_124B4(&__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long __dst = *a2;
    uint64_t v90 = *((void *)a2 + 2);
  }
  if (*((char *)a1 + 23) < 0)
  {
    sub_124B4(__p, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    *(_OWORD *)std::string __p = *a1;
    uint64_t v88 = *((void *)a1 + 2);
  }
  unint64_t v8 = *a4;
  long long v9 = sub_EE310(*a4, (unsigned __int8 *)&__dst);
  long long v10 = sub_EE310(v8, (unsigned __int8 *)__p);
  unint64_t v11 = *((void *)v9 + 14);
  unint64_t v12 = *((void *)v10 + 14);
  BOOL v13 = v11 < v12;
  if (v11 == v12)
  {
    unint64_t v14 = *((void *)v9 + 8);
    unint64_t v15 = *((void *)v10 + 8);
    BOOL v16 = v14 == v15;
    BOOL v17 = v14 < v15;
    if (v16) {
      BOOL v13 = v9 < v10;
    }
    else {
      BOOL v13 = v17;
    }
  }
  if (SHIBYTE(v88) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v90) < 0) {
    operator delete((void *)__dst);
  }
  int v18 = *((char *)a3 + 23);
  if (!v13)
  {
    if (v18 < 0)
    {
      sub_124B4(v85, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      *(_OWORD *)uint64_t v85 = *a3;
      uint64_t v86 = *((void *)a3 + 2);
    }
    if (*((char *)a2 + 23) < 0)
    {
      sub_124B4(v83, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      *(_OWORD *)int v83 = *a2;
      uint64_t v84 = *((void *)a2 + 2);
    }
    unint64_t v31 = *a4;
    unint64_t v32 = sub_EE310(*a4, (unsigned __int8 *)v85);
    BOOL v33 = sub_EE310(v31, (unsigned __int8 *)v83);
    unint64_t v34 = *((void *)v32 + 14);
    unint64_t v35 = *((void *)v33 + 14);
    BOOL v36 = v34 < v35;
    if (v34 == v35)
    {
      unint64_t v37 = *((void *)v32 + 8);
      unint64_t v38 = *((void *)v33 + 8);
      BOOL v16 = v37 == v38;
      BOOL v39 = v37 < v38;
      if (v16) {
        BOOL v36 = v32 < v33;
      }
      else {
        BOOL v36 = v39;
      }
    }
    if (SHIBYTE(v84) < 0) {
      operator delete(v83[0]);
    }
    if (SHIBYTE(v86) < 0)
    {
      operator delete(v85[0]);
      if (v36) {
        goto LABEL_45;
      }
    }
    else if (v36)
    {
LABEL_45:
      uint64_t v40 = *((void *)a2 + 2);
      long long v41 = *a2;
      uint64_t v42 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v42;
      *a3 = v41;
      *((void *)a3 + 2) = v40;
      if (*((char *)a2 + 23) < 0)
      {
        sub_124B4(v81, *(void **)a2, *((void *)a2 + 1));
      }
      else
      {
        *(_OWORD *)int64x2_t v81 = *a2;
        uint64_t v82 = *((void *)a2 + 2);
      }
      if (*((char *)a1 + 23) < 0)
      {
        sub_124B4(v79, *(void **)a1, *((void *)a1 + 1));
      }
      else
      {
        *(_OWORD *)int64x2_t v79 = *a1;
        uint64_t v80 = *((void *)a1 + 2);
      }
      unint64_t v47 = *a4;
      uint64_t v48 = sub_EE310(v47, (unsigned __int8 *)v81);
      unint64_t v49 = sub_EE310(v47, (unsigned __int8 *)v79);
      unint64_t v50 = *((void *)v48 + 14);
      unint64_t v51 = *((void *)v49 + 14);
      BOOL v52 = v50 < v51;
      if (v50 == v51)
      {
        unint64_t v53 = *((void *)v48 + 8);
        unint64_t v54 = *((void *)v49 + 8);
        BOOL v16 = v53 == v54;
        BOOL v55 = v53 < v54;
        if (v16) {
          BOOL v52 = v48 < v49;
        }
        else {
          BOOL v52 = v55;
        }
      }
      if (SHIBYTE(v80) < 0) {
        operator delete(v79[0]);
      }
      if (SHIBYTE(v82) < 0)
      {
        operator delete(v81[0]);
        if (!v52) {
          return 1;
        }
      }
      else if (!v52)
      {
        return 1;
      }
      uint64_t v65 = *((void *)a1 + 2);
      long long v66 = *a1;
      uint64_t v67 = *((void *)a2 + 2);
      *a1 = *a2;
      *((void *)a1 + 2) = v67;
      *a2 = v66;
      *((void *)a2 + 2) = v65;
      return 2;
    }
    return 0;
  }
  if (v18 < 0)
  {
    sub_124B4(v77, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    *(_OWORD *)int64x2_t v77 = *a3;
    uint64_t v78 = *((void *)a3 + 2);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_124B4(v75, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v75 = *a2;
    uint64_t v76 = *((void *)a2 + 2);
  }
  BOOL v19 = *a4;
  BOOL v20 = sub_EE310(*a4, (unsigned __int8 *)v77);
  unint64_t v21 = sub_EE310(v19, (unsigned __int8 *)v75);
  unint64_t v22 = *((void *)v20 + 14);
  unint64_t v23 = *((void *)v21 + 14);
  BOOL v24 = v22 < v23;
  if (v22 == v23)
  {
    unint64_t v25 = *((void *)v20 + 8);
    unint64_t v26 = *((void *)v21 + 8);
    BOOL v16 = v25 == v26;
    BOOL v27 = v25 < v26;
    if (v16) {
      BOOL v24 = v20 < v21;
    }
    else {
      BOOL v24 = v27;
    }
  }
  if (SHIBYTE(v76) < 0) {
    operator delete(v75[0]);
  }
  if (SHIBYTE(v78) < 0)
  {
    operator delete(v77[0]);
    if (v24) {
      goto LABEL_35;
    }
    goto LABEL_48;
  }
  if (!v24)
  {
LABEL_48:
    uint64_t v43 = *((void *)a1 + 2);
    long long v44 = *a1;
    uint64_t v45 = *((void *)a2 + 2);
    *a1 = *a2;
    *((void *)a1 + 2) = v45;
    *a2 = v44;
    *((void *)a2 + 2) = v43;
    if (*((char *)a3 + 23) < 0)
    {
      sub_124B4(v73, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      *(_OWORD *)uint64_t v73 = *a3;
      uint64_t v74 = *((void *)a3 + 2);
    }
    if (*((char *)a2 + 23) < 0)
    {
      sub_124B4(v71, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      *(_OWORD *)int64x2_t v71 = *a2;
      uint64_t v72 = *((void *)a2 + 2);
    }
    int64x2_t v56 = *a4;
    uint64_t v57 = sub_EE310(v56, (unsigned __int8 *)v73);
    int64x2_t v58 = sub_EE310(v56, (unsigned __int8 *)v71);
    unint64_t v59 = *((void *)v57 + 14);
    unint64_t v60 = *((void *)v58 + 14);
    BOOL v61 = v59 < v60;
    if (v59 == v60)
    {
      unint64_t v62 = *((void *)v57 + 8);
      unint64_t v63 = *((void *)v58 + 8);
      BOOL v16 = v62 == v63;
      BOOL v64 = v62 < v63;
      if (v16) {
        BOOL v61 = v57 < v58;
      }
      else {
        BOOL v61 = v64;
      }
    }
    if (SHIBYTE(v72) < 0) {
      operator delete(v71[0]);
    }
    if (SHIBYTE(v74) < 0)
    {
      operator delete(v73[0]);
      if (!v61) {
        return 1;
      }
    }
    else if (!v61)
    {
      return 1;
    }
    uint64_t v68 = *((void *)a2 + 2);
    long long v69 = *a2;
    uint64_t v70 = *((void *)a3 + 2);
    *a2 = *a3;
    *((void *)a2 + 2) = v70;
    *a3 = v69;
    *((void *)a3 + 2) = v68;
    return 2;
  }
LABEL_35:
  uint64_t v28 = *((void *)a1 + 2);
  long long v29 = *a1;
  uint64_t v30 = *((void *)a3 + 2);
  *a1 = *a3;
  *((void *)a1 + 2) = v30;
  *a3 = v29;
  *((void *)a3 + 2) = v28;
  return 1;
}

void sub_148D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

long long *sub_148E84(long long *a1, void **a2, void **a3)
{
  BOOL v6 = *(void **)a1;
  uint64_t v7 = (void *)*((void *)a1 + 1);
  v109[0] = *((_DWORD *)a1 + 4);
  *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)((char *)a1 + 19);
  int v8 = *((char *)a1 + 23);
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  if (v8 < 0)
  {
    sub_124B4(__dst, v6, (unint64_t)v7);
  }
  else
  {
    __dst[0] = v6;
    __dst[1] = v7;
    *(_DWORD *)uint64_t v107 = v109[0];
    *(_DWORD *)&v107[3] = *(_DWORD *)((char *)v109 + 3);
    char v108 = v8;
  }
  if (*((char *)a2 - 1) < 0)
  {
    sub_124B4(&v104, *(a2 - 3), (unint64_t)*(a2 - 2));
  }
  else
  {
    long long v104 = *(_OWORD *)(a2 - 3);
    uint64_t v105 = (uint64_t)*(a2 - 1);
  }
  long long v9 = *a3;
  long long v10 = sub_EE310(*a3, (unsigned __int8 *)__dst);
  unint64_t v11 = sub_EE310(v9, (unsigned __int8 *)&v104);
  unint64_t v12 = *((void *)v10 + 14);
  unint64_t v13 = *((void *)v11 + 14);
  BOOL v14 = v12 < v13;
  if (v12 == v13)
  {
    unint64_t v15 = *((void *)v10 + 8);
    unint64_t v16 = *((void *)v11 + 8);
    BOOL v17 = v15 == v16;
    BOOL v18 = v15 < v16;
    if (v17) {
      BOOL v14 = v10 < v11;
    }
    else {
      BOOL v14 = v18;
    }
  }
  if (SHIBYTE(v105) < 0) {
    operator delete((void *)v104);
  }
  if (v108 < 0) {
    operator delete(__dst[0]);
  }
  uint64_t v78 = a1;
  if (v14)
  {
    BOOL v19 = a1;
    do
    {
      if (v8 < 0)
      {
        sub_124B4(v101, v6, (unint64_t)v7);
      }
      else
      {
        v101[0] = v6;
        v101[1] = v7;
        *(_DWORD *)uint64_t v102 = v109[0];
        *(_DWORD *)&v102[3] = *(_DWORD *)((char *)v109 + 3);
        char v103 = v8;
      }
      uint64_t i = (long long *)((char *)v19 + 24);
      if (*((char *)v19 + 47) < 0)
      {
        sub_124B4(__p, *((void **)v19 + 3), *((void *)v19 + 4));
      }
      else
      {
        *(_OWORD *)std::string __p = *i;
        uint64_t v100 = *((void *)v19 + 5);
      }
      unint64_t v21 = *a3;
      unint64_t v22 = sub_EE310(*a3, (unsigned __int8 *)v101);
      unint64_t v23 = sub_EE310(v21, (unsigned __int8 *)__p);
      unint64_t v24 = *((void *)v22 + 14);
      unint64_t v25 = *((void *)v23 + 14);
      BOOL v26 = v24 < v25;
      if (v24 == v25)
      {
        unint64_t v27 = *((void *)v22 + 8);
        unint64_t v28 = *((void *)v23 + 8);
        BOOL v17 = v27 == v28;
        BOOL v29 = v27 < v28;
        if (v17) {
          BOOL v26 = v22 < v23;
        }
        else {
          BOOL v26 = v29;
        }
      }
      if (SHIBYTE(v100) < 0) {
        operator delete(__p[0]);
      }
      if (v103 < 0) {
        operator delete(v101[0]);
      }
      BOOL v19 = i;
    }
    while (!v26);
  }
  else
  {
    for (uint64_t i = (long long *)((char *)a1 + 24); i < (long long *)a2; uint64_t i = (long long *)((char *)i + 24))
    {
      if (v8 < 0)
      {
        sub_124B4(v96, v6, (unint64_t)v7);
      }
      else
      {
        v96[0] = v6;
        v96[1] = v7;
        *(_DWORD *)uint64_t v97 = v109[0];
        *(_DWORD *)&v97[3] = *(_DWORD *)((char *)v109 + 3);
        char v98 = v8;
      }
      if (*((char *)i + 23) < 0)
      {
        sub_124B4(v94, *(void **)i, *((void *)i + 1));
      }
      else
      {
        *(_OWORD *)uint64_t v94 = *i;
        uint64_t v95 = *((void *)i + 2);
      }
      uint64_t v30 = *a3;
      unint64_t v31 = sub_EE310(*a3, (unsigned __int8 *)v96);
      unint64_t v32 = sub_EE310(v30, (unsigned __int8 *)v94);
      unint64_t v33 = *((void *)v31 + 14);
      unint64_t v34 = *((void *)v32 + 14);
      BOOL v35 = v33 < v34;
      if (v33 == v34)
      {
        unint64_t v36 = *((void *)v31 + 8);
        unint64_t v37 = *((void *)v32 + 8);
        BOOL v17 = v36 == v37;
        BOOL v38 = v36 < v37;
        if (v17) {
          BOOL v35 = v31 < v32;
        }
        else {
          BOOL v35 = v38;
        }
      }
      if (SHIBYTE(v95) < 0) {
        operator delete(v94[0]);
      }
      if (v98 < 0) {
        operator delete(v96[0]);
      }
      if (v35) {
        break;
      }
    }
  }
  if (i >= (long long *)a2)
  {
    BOOL v39 = a2;
  }
  else
  {
    do
    {
      if (v8 < 0)
      {
        sub_124B4(v91, v6, (unint64_t)v7);
      }
      else
      {
        v91[0] = v6;
        v91[1] = v7;
        *(_DWORD *)uint64_t v92 = v109[0];
        *(_DWORD *)&v92[3] = *(_DWORD *)((char *)v109 + 3);
        char v93 = v8;
      }
      BOOL v39 = a2 - 3;
      if (*((char *)a2 - 1) < 0)
      {
        sub_124B4(v89, *(a2 - 3), (unint64_t)*(a2 - 2));
      }
      else
      {
        *(_OWORD *)uint64_t v89 = *(_OWORD *)v39;
        uint64_t v90 = (uint64_t)*(a2 - 1);
      }
      uint64_t v40 = *a3;
      long long v41 = sub_EE310(*a3, (unsigned __int8 *)v91);
      uint64_t v42 = sub_EE310(v40, (unsigned __int8 *)v89);
      unint64_t v43 = *((void *)v41 + 14);
      unint64_t v44 = *((void *)v42 + 14);
      BOOL v45 = v43 < v44;
      if (v43 == v44)
      {
        unint64_t v46 = *((void *)v41 + 8);
        unint64_t v47 = *((void *)v42 + 8);
        BOOL v17 = v46 == v47;
        BOOL v48 = v46 < v47;
        if (v17) {
          BOOL v45 = v41 < v42;
        }
        else {
          BOOL v45 = v48;
        }
      }
      if (SHIBYTE(v90) < 0) {
        operator delete(v89[0]);
      }
      if (v93 < 0) {
        operator delete(v91[0]);
      }
      a2 = v39;
    }
    while (v45);
  }
  while (i < (long long *)v39)
  {
    long long v49 = *i;
    int v111 = (void *)*((void *)i + 2);
    long long v110 = v49;
    long long v50 = *(_OWORD *)v39;
    *((void *)i + 2) = v39[2];
    long long *i = v50;
    long long v51 = v110;
    v39[2] = v111;
    *(_OWORD *)BOOL v39 = v51;
    BOOL v52 = i;
    do
    {
      if (v8 < 0)
      {
        sub_124B4(v86, v6, (unint64_t)v7);
      }
      else
      {
        v86[0] = v6;
        v86[1] = v7;
        *(_DWORD *)id v87 = v109[0];
        *(_DWORD *)&v87[3] = *(_DWORD *)((char *)v109 + 3);
        char v88 = v8;
      }
      uint64_t i = (long long *)((char *)v52 + 24);
      if (*((char *)v52 + 47) < 0)
      {
        sub_124B4(v84, *((void **)v52 + 3), *((void *)v52 + 4));
      }
      else
      {
        long long v53 = *i;
        uint64_t v85 = *((void *)v52 + 5);
        *(_OWORD *)uint64_t v84 = v53;
      }
      unint64_t v54 = *a3;
      BOOL v55 = sub_EE310(*a3, (unsigned __int8 *)v86);
      int64x2_t v56 = sub_EE310(v54, (unsigned __int8 *)v84);
      unint64_t v57 = *((void *)v55 + 14);
      unint64_t v58 = *((void *)v56 + 14);
      BOOL v59 = v57 < v58;
      if (v57 == v58)
      {
        unint64_t v60 = *((void *)v55 + 8);
        unint64_t v61 = *((void *)v56 + 8);
        BOOL v17 = v60 == v61;
        BOOL v62 = v60 < v61;
        if (v17) {
          BOOL v59 = v55 < v56;
        }
        else {
          BOOL v59 = v62;
        }
      }
      if (SHIBYTE(v85) < 0) {
        operator delete(v84[0]);
      }
      if (v88 < 0) {
        operator delete(v86[0]);
      }
      BOOL v52 = i;
    }
    while (!v59);
    unint64_t v63 = v39;
    do
    {
      if (v8 < 0)
      {
        sub_124B4(v81, v6, (unint64_t)v7);
      }
      else
      {
        v81[0] = v6;
        v81[1] = v7;
        *(_DWORD *)uint64_t v82 = v109[0];
        *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v109 + 3);
        char v83 = v8;
      }
      BOOL v39 = v63 - 3;
      if (*((char *)v63 - 1) < 0)
      {
        sub_124B4(v79, *(v63 - 3), (unint64_t)*(v63 - 2));
      }
      else
      {
        long long v64 = *(_OWORD *)v39;
        uint64_t v80 = (uint64_t)*(v63 - 1);
        *(_OWORD *)int64x2_t v79 = v64;
      }
      uint64_t v65 = *a3;
      long long v66 = sub_EE310(*a3, (unsigned __int8 *)v81);
      uint64_t v67 = sub_EE310(v65, (unsigned __int8 *)v79);
      unint64_t v68 = *((void *)v66 + 14);
      unint64_t v69 = *((void *)v67 + 14);
      BOOL v70 = v68 < v69;
      if (v68 == v69)
      {
        unint64_t v71 = *((void *)v66 + 8);
        unint64_t v72 = *((void *)v67 + 8);
        BOOL v17 = v71 == v72;
        BOOL v73 = v71 < v72;
        if (v17) {
          BOOL v70 = v66 < v67;
        }
        else {
          BOOL v70 = v73;
        }
      }
      if (SHIBYTE(v80) < 0) {
        operator delete(v79[0]);
      }
      if (v83 < 0) {
        operator delete(v81[0]);
      }
      unint64_t v63 = v39;
    }
    while (v70);
  }
  uint64_t v74 = (void **)i - 3;
  if ((long long *)((char *)i - 24) == v78)
  {
    if (*((char *)i - 1) < 0) {
      operator delete(*v74);
    }
  }
  else
  {
    if (*((char *)v78 + 23) < 0) {
      operator delete(*(void **)v78);
    }
    long long v75 = *(_OWORD *)v74;
    *((void *)v78 + 2) = *((void *)i - 1);
    *uint64_t v78 = v75;
    *((unsigned char *)i - 1) = 0;
    *((unsigned char *)i - 24) = 0;
  }
  *((void *)i - 3) = v6;
  *((void *)i - 2) = v7;
  int v76 = v109[0];
  *(_DWORD *)((char *)i - 5) = *(_DWORD *)((char *)v109 + 3);
  *((_DWORD *)i - 2) = v76;
  *((unsigned char *)i - 1) = v8;
  return i;
}

void sub_149500(_Unwind_Exception *a1)
{
  if (*(char *)(v3 - 137) < 0) {
    operator delete(*(void **)(v3 - 160));
  }
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_14963C(uint64_t a1, void **a2, void **a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = *(void **)a1;
  int v8 = *(void **)(a1 + 8);
  v96[0] = *(_DWORD *)(a1 + 16);
  *(_DWORD *)((char *)v96 + 3) = *(_DWORD *)(a1 + 19);
  int v9 = *(char *)(a1 + 23);
  *(void *)(a1 + sub_1265C((uint64_t)this + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  do
  {
    long long v10 = (void **)(a1 + v6 + 24);
    if (*(char *)(a1 + v6 + 47) < 0)
    {
      sub_124B4(&__dst, *v10, *(void *)(a1 + v6 + 32));
    }
    else
    {
      long long __dst = *(_OWORD *)v10;
      uint64_t v95 = *(void *)(a1 + v6 + 40);
    }
    if (v9 < 0)
    {
      sub_124B4(v91, v7, (unint64_t)v8);
    }
    else
    {
      v91[0] = v7;
      v91[1] = v8;
      *(_DWORD *)uint64_t v92 = v96[0];
      *(_DWORD *)&v92[3] = *(_DWORD *)((char *)v96 + 3);
      char v93 = v9;
    }
    unint64_t v11 = *a3;
    unint64_t v12 = sub_EE310(*a3, (unsigned __int8 *)&__dst);
    unint64_t v13 = sub_EE310(v11, (unsigned __int8 *)v91);
    unint64_t v14 = *((void *)v12 + 14);
    unint64_t v15 = *((void *)v13 + 14);
    BOOL v16 = v14 < v15;
    if (v14 == v15)
    {
      unint64_t v17 = *((void *)v12 + 8);
      unint64_t v18 = *((void *)v13 + 8);
      BOOL v19 = v17 == v18;
      BOOL v20 = v17 < v18;
      if (v19) {
        BOOL v16 = v12 < v13;
      }
      else {
        BOOL v16 = v20;
      }
    }
    if (v93 < 0) {
      operator delete(v91[0]);
    }
    if (SHIBYTE(v95) < 0) {
      operator delete((void *)__dst);
    }
    v6 += 24;
  }
  while (v16);
  unint64_t v21 = (long long *)(a1 + v6);
  if (v6 == 24)
  {
    if (v21 >= (long long *)a2)
    {
      uint64_t i = a2;
    }
    else
    {
      for (uint64_t i = a2 - 3; ; i -= 3)
      {
        if (*((char *)i + 23) < 0)
        {
          sub_124B4(&v89, *i, (unint64_t)i[1]);
        }
        else
        {
          long long v89 = *(_OWORD *)i;
          uint64_t v90 = i[2];
        }
        if (v9 < 0)
        {
          sub_124B4(v86, v7, (unint64_t)v8);
        }
        else
        {
          v86[0] = v7;
          v86[1] = v8;
          *(_DWORD *)id v87 = v96[0];
          *(_DWORD *)&v87[3] = *(_DWORD *)((char *)v96 + 3);
          char v88 = v9;
        }
        unint64_t v32 = *a3;
        unint64_t v33 = sub_EE310(*a3, (unsigned __int8 *)&v89);
        unint64_t v34 = sub_EE310(v32, (unsigned __int8 *)v86);
        unint64_t v35 = *((void *)v33 + 14);
        unint64_t v36 = *((void *)v34 + 14);
        BOOL v37 = v35 < v36;
        if (v35 == v36)
        {
          unint64_t v38 = *((void *)v33 + 8);
          unint64_t v39 = *((void *)v34 + 8);
          BOOL v19 = v38 == v39;
          BOOL v40 = v38 < v39;
          if (v19) {
            BOOL v37 = v33 < v34;
          }
          else {
            BOOL v37 = v40;
          }
        }
        if (v88 < 0) {
          operator delete(v86[0]);
        }
        if (SHIBYTE(v90) < 0) {
          operator delete((void *)v89);
        }
        char v41 = v21 >= (long long *)i || v37;
        if (v41) {
          break;
        }
      }
    }
  }
  else
  {
    do
    {
      uint64_t i = a2 - 3;
      if (*((char *)a2 - 1) < 0)
      {
        sub_124B4(v84, *(a2 - 3), (unint64_t)*(a2 - 2));
      }
      else
      {
        *(_OWORD *)uint64_t v84 = *(_OWORD *)i;
        uint64_t v85 = (uint64_t)*(a2 - 1);
      }
      if (v9 < 0)
      {
        sub_124B4(__p, v7, (unint64_t)v8);
      }
      else
      {
        __p[0] = v7;
        __p[1] = v8;
        *(_DWORD *)uint64_t v82 = v96[0];
        *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v96 + 3);
        char v83 = v9;
      }
      unint64_t v23 = *a3;
      unint64_t v24 = sub_EE310(*a3, (unsigned __int8 *)v84);
      unint64_t v25 = sub_EE310(v23, (unsigned __int8 *)__p);
      unint64_t v26 = *((void *)v24 + 14);
      unint64_t v27 = *((void *)v25 + 14);
      BOOL v28 = v26 < v27;
      if (v26 == v27)
      {
        unint64_t v29 = *((void *)v24 + 8);
        unint64_t v30 = *((void *)v25 + 8);
        BOOL v19 = v29 == v30;
        BOOL v31 = v29 < v30;
        if (v19) {
          BOOL v28 = v24 < v25;
        }
        else {
          BOOL v28 = v31;
        }
      }
      if (v83 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v85) < 0) {
        operator delete(v84[0]);
      }
      a2 = i;
    }
    while (!v28);
  }
  while (v21 < (long long *)i)
  {
    long long v97 = *v21;
    long long v42 = v97;
    char v98 = (void *)*((void *)v21 + 2);
    unint64_t v43 = v98;
    unint64_t v44 = i[2];
    long long *v21 = *(_OWORD *)i;
    *((void *)v21 + 2) = v44;
    i[2] = v43;
    *(_OWORD *)uint64_t i = v42;
    BOOL v45 = v21;
    do
    {
      unint64_t v21 = (long long *)((char *)v45 + 24);
      if (*((char *)v45 + 47) < 0)
      {
        sub_124B4(v79, *((void **)v45 + 3), *((void *)v45 + 4));
      }
      else
      {
        long long v46 = *v21;
        uint64_t v80 = *((void *)v45 + 5);
        *(_OWORD *)int64x2_t v79 = v46;
      }
      if (v9 < 0)
      {
        sub_124B4(v76, v7, (unint64_t)v8);
      }
      else
      {
        v76[0] = v7;
        v76[1] = v8;
        *(_DWORD *)int64x2_t v77 = v96[0];
        *(_DWORD *)&_OWORD v77[3] = *(_DWORD *)((char *)v96 + 3);
        char v78 = v9;
      }
      unint64_t v47 = *a3;
      BOOL v48 = sub_EE310(*a3, (unsigned __int8 *)v79);
      long long v49 = sub_EE310(v47, (unsigned __int8 *)v76);
      unint64_t v50 = *((void *)v48 + 14);
      unint64_t v51 = *((void *)v49 + 14);
      BOOL v52 = v50 < v51;
      if (v50 == v51)
      {
        unint64_t v53 = *((void *)v48 + 8);
        unint64_t v54 = *((void *)v49 + 8);
        BOOL v19 = v53 == v54;
        BOOL v55 = v53 < v54;
        if (v19) {
          BOOL v52 = v48 < v49;
        }
        else {
          BOOL v52 = v55;
        }
      }
      if (v78 < 0) {
        operator delete(v76[0]);
      }
      if (SHIBYTE(v80) < 0) {
        operator delete(v79[0]);
      }
      BOOL v45 = v21;
    }
    while (v52);
    int64x2_t v56 = i;
    do
    {
      uint64_t i = v56 - 3;
      if (*((char *)v56 - 1) < 0)
      {
        sub_124B4(v74, *(v56 - 3), (unint64_t)*(v56 - 2));
      }
      else
      {
        long long v57 = *(_OWORD *)i;
        uint64_t v75 = (uint64_t)*(v56 - 1);
        *(_OWORD *)uint64_t v74 = v57;
      }
      if (v9 < 0)
      {
        sub_124B4(v71, v7, (unint64_t)v8);
      }
      else
      {
        v71[0] = v7;
        v71[1] = v8;
        *(_DWORD *)unint64_t v72 = v96[0];
        *(_DWORD *)&v72[3] = *(_DWORD *)((char *)v96 + 3);
        char v73 = v9;
      }
      unint64_t v58 = *a3;
      BOOL v59 = sub_EE310(*a3, (unsigned __int8 *)v74);
      unint64_t v60 = sub_EE310(v58, (unsigned __int8 *)v71);
      unint64_t v61 = *((void *)v59 + 14);
      unint64_t v62 = *((void *)v60 + 14);
      BOOL v63 = v61 < v62;
      if (v61 == v62)
      {
        unint64_t v64 = *((void *)v59 + 8);
        unint64_t v65 = *((void *)v60 + 8);
        BOOL v19 = v64 == v65;
        BOOL v66 = v64 < v65;
        if (v19) {
          BOOL v63 = v59 < v60;
        }
        else {
          BOOL v63 = v66;
        }
      }
      if (v73 < 0) {
        operator delete(v71[0]);
      }
      if (SHIBYTE(v75) < 0) {
        operator delete(v74[0]);
      }
      int64x2_t v56 = i;
    }
    while (!v63);
  }
  uint64_t v67 = (void **)v21 - 3;
  if ((long long *)((char *)v21 - 24) == (long long *)a1)
  {
    if (*((char *)v21 - 1) < 0) {
      operator delete(*v67);
    }
  }
  else
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v68 = *(_OWORD *)v67;
    *(void *)(a1 + 16) = *((void *)v21 - 1);
    *(_OWORD *)a1 = v68;
    *((unsigned char *)v21 - 1) = 0;
    *((unsigned char *)v21 - 24) = 0;
  }
  *((void *)v21 - 3) = v7;
  *((void *)v21 - 2) = v8;
  int v69 = v96[0];
  *(_DWORD *)((char *)v21 - 5) = *(_DWORD *)((char *)v96 + 3);
  *((_DWORD *)v21 - 2) = v69;
  *((unsigned char *)v21 - 1) = v9;
  return (uint64_t)v21 - 24;
}

void sub_149C14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (a59 < 0) {
    operator delete(__p);
  }
  if (v60 < 0) {
    operator delete(v59);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_149D1C(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3 = a2;
  uint64_t v5 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v5)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v7 = (long long *)(a2 - 24);
      if (*(char *)(a2 - 1) < 0)
      {
        sub_124B4(&v68, *(void **)(a2 - 24), *(void *)(a2 - 16));
      }
      else
      {
        long long v68 = *v7;
        uint64_t v69 = *(void *)(a2 - 8);
      }
      if (*(char *)(a1 + 23) < 0)
      {
        sub_124B4(v66, *(void **)a1, *(void *)(a1 + 8));
      }
      else
      {
        *(_OWORD *)BOOL v66 = *(_OWORD *)a1;
        uint64_t v67 = *(void *)(a1 + 16);
      }
      BOOL v40 = *a3;
      char v41 = sub_EE310(*a3, (unsigned __int8 *)&v68);
      long long v42 = sub_EE310(v40, (unsigned __int8 *)v66);
      unint64_t v43 = *((void *)v41 + 14);
      unint64_t v44 = *((void *)v42 + 14);
      BOOL v45 = v43 < v44;
      if (v43 == v44)
      {
        unint64_t v46 = *((void *)v41 + 8);
        unint64_t v47 = *((void *)v42 + 8);
        BOOL v21 = v46 == v47;
        BOOL v48 = v46 < v47;
        if (v21) {
          BOOL v45 = v41 < v42;
        }
        else {
          BOOL v45 = v48;
        }
      }
      if (SHIBYTE(v67) < 0) {
        operator delete(v66[0]);
      }
      if (SHIBYTE(v69) < 0) {
        operator delete((void *)v68);
      }
      if (v45)
      {
        uint64_t v49 = *(void *)(a1 + 16);
        long long v50 = *(_OWORD *)a1;
        uint64_t v51 = *(void *)(v3 - 8);
        *(_OWORD *)a1 = *v7;
        *(void *)(a1 + 16) = v51;
        *uint64_t v7 = v50;
        *(void *)(v3 - sub_1265C((uint64_t)this + 8) = v49;
      }
      return 1;
    case 3uLL:
      sub_1488AC((long long *)a1, (long long *)(a1 + 24), (long long *)(a2 - 24), a3);
      return 1;
    case 4uLL:
      sub_14A27C(a1, a1 + 24, a1 + 48, a2 - 24, a3);
      return 1;
    case 5uLL:
      sub_14A620(a1, a1 + 24, a1 + 48, a1 + 72, a2 - 24, a3);
      return 1;
    default:
      uint64_t v8 = a1 + 48;
      sub_1488AC((long long *)a1, (long long *)(a1 + 24), (long long *)(a1 + 48), a3);
      uint64_t v9 = a1 + 72;
      if (a1 + 72 == v3) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      uint64_t v52 = v3;
      break;
  }
  while (2)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      sub_124B4(__dst, *(void **)v9, *(void *)(v9 + 8));
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v9;
      uint64_t v65 = *(void *)(v9 + 16);
    }
    if (*(char *)(v8 + 23) < 0)
    {
      sub_124B4(__p, *(void **)v8, *(void *)(v8 + 8));
    }
    else
    {
      long long v12 = *(_OWORD *)v8;
      uint64_t v63 = *(void *)(v8 + 16);
      *(_OWORD *)std::string __p = v12;
    }
    unint64_t v13 = *a3;
    unint64_t v14 = sub_EE310(*a3, (unsigned __int8 *)__dst);
    unint64_t v15 = sub_EE310(v13, (unsigned __int8 *)__p);
    unint64_t v16 = *((void *)v14 + 14);
    unint64_t v17 = *((void *)v15 + 14);
    BOOL v18 = v16 < v17;
    if (v16 == v17)
    {
      unint64_t v19 = *((void *)v14 + 8);
      unint64_t v20 = *((void *)v15 + 8);
      BOOL v21 = v19 == v20;
      BOOL v22 = v19 < v20;
      if (v21) {
        BOOL v18 = v14 < v15;
      }
      else {
        BOOL v18 = v22;
      }
    }
    if (SHIBYTE(v63) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v65) < 0)
    {
      operator delete(__dst[0]);
      if (!v18) {
        goto LABEL_47;
      }
    }
    else if (!v18)
    {
      goto LABEL_47;
    }
    int v54 = v11;
    char v23 = 0;
    unint64_t v24 = *(void **)v9;
    unint64_t v25 = *(void **)(v9 + 8);
    v61[0] = *(_DWORD *)(v9 + 16);
    *(_DWORD *)((char *)v61 + 3) = *(_DWORD *)(v9 + 19);
    int v26 = *(char *)(v9 + 23);
    *(void *)(v9 + sub_1265C((uint64_t)this + 8) = 0;
    *(void *)(v9 + 16) = 0;
    *(void *)uint64_t v9 = 0;
    uint64_t v53 = v10;
    while (1)
    {
      uint64_t v27 = a1 + v10;
      BOOL v28 = (void **)(a1 + v10 + 72);
      if (v23 < 0) {
        operator delete(*v28);
      }
      *(_OWORD *)BOOL v28 = *(_OWORD *)(v27 + 48);
      *(void *)(a1 + v10 + 8sub_1265C((uint64_t)this + 8) = *(void *)(v27 + 64);
      *(unsigned char *)(v27 + 71) = 0;
      *(unsigned char *)(v27 + sub_1265C((uint64_t)this + 48) = 0;
      if (v10 == -48)
      {
        uint64_t v39 = a1;
        goto LABEL_46;
      }
      if (v26 < 0)
      {
        sub_124B4(v58, v24, (unint64_t)v25);
      }
      else
      {
        v58[0] = v24;
        v58[1] = v25;
        *(_DWORD *)BOOL v59 = v61[0];
        *(_DWORD *)&double v59[3] = *(_DWORD *)((char *)v61 + 3);
        char v60 = v26;
      }
      unint64_t v29 = (void **)(a1 + v10 + 24);
      if (*(char *)(a1 + v10 + 47) < 0)
      {
        sub_124B4(v56, *v29, *(void *)(a1 + v10 + 32));
      }
      else
      {
        *(_OWORD *)int64x2_t v56 = *(_OWORD *)v29;
        uint64_t v57 = *(void *)(a1 + v10 + 40);
      }
      unint64_t v30 = *a3;
      BOOL v31 = sub_EE310(*a3, (unsigned __int8 *)v58);
      unint64_t v32 = sub_EE310(v30, (unsigned __int8 *)v56);
      unint64_t v33 = *((void *)v31 + 14);
      unint64_t v34 = *((void *)v32 + 14);
      BOOL v35 = v33 < v34;
      if (v33 == v34)
      {
        unint64_t v36 = *((void *)v31 + 8);
        unint64_t v37 = *((void *)v32 + 8);
        BOOL v21 = v36 == v37;
        BOOL v38 = v36 < v37;
        if (v21) {
          BOOL v35 = v31 < v32;
        }
        else {
          BOOL v35 = v38;
        }
      }
      if (SHIBYTE(v57) < 0) {
        operator delete(v56[0]);
      }
      if (v60 < 0) {
        break;
      }
      if (!v35) {
        goto LABEL_44;
      }
LABEL_42:
      char v23 = *(unsigned char *)(v27 + 71);
      v10 -= 24;
    }
    operator delete(v58[0]);
    if (v35) {
      goto LABEL_42;
    }
LABEL_44:
    uint64_t v39 = a1 + v10 + 48;
    if (*(char *)(a1 + v10 + 71) < 0) {
      operator delete(*(void **)v39);
    }
LABEL_46:
    uint64_t v3 = v52;
    uint64_t v10 = v53;
    *(void *)uint64_t v39 = v24;
    *(void *)(v39 + sub_1265C((uint64_t)this + 8) = v25;
    *(_DWORD *)(v39 + 16) = v61[0];
    *(_DWORD *)(v39 + 19) = *(_DWORD *)((char *)v61 + 3);
    *(unsigned char *)(v39 + 23) = v26;
    int v11 = v54 + 1;
    if (v54 != 7)
    {
LABEL_47:
      uint64_t v8 = v9;
      v10 += 24;
      v9 += 24;
      if (v9 == v3) {
        return 1;
      }
      continue;
    }
    return v9 + 24 == v52;
  }
}

void sub_14A1C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (*(char *)(v46 - 121) < 0) {
    operator delete(*(void **)(v46 - 144));
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_14A27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  sub_1488AC((long long *)a1, (long long *)a2, (long long *)a3, a5);
  if (*(char *)(a4 + 23) < 0)
  {
    sub_124B4(__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)a4;
    uint64_t v58 = *(void *)(a4 + 16);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    sub_124B4(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v56 = *(void *)(a3 + 16);
  }
  uint64_t v10 = *a5;
  int v11 = sub_EE310(*a5, (unsigned __int8 *)__dst);
  long long v12 = sub_EE310(v10, (unsigned __int8 *)__p);
  unint64_t v14 = *((void *)v11 + 14);
  unint64_t v15 = *((void *)v12 + 14);
  BOOL v16 = v14 < v15;
  if (v14 == v15)
  {
    unint64_t v17 = *((void *)v11 + 8);
    unint64_t v18 = *((void *)v12 + 8);
    BOOL v19 = v17 == v18;
    BOOL v20 = v17 < v18;
    if (v19) {
      BOOL v16 = v11 < v12;
    }
    else {
      BOOL v16 = v20;
    }
  }
  if (SHIBYTE(v56) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v58) < 0)
  {
    operator delete(__dst[0]);
    if (!v16) {
      return result;
    }
  }
  else if (!v16)
  {
    return result;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  long long v22 = *(_OWORD *)a3;
  uint64_t v23 = *(void *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(void *)(a3 + 16) = v23;
  *(_OWORD *)a4 = v22;
  *(void *)(a4 + 16) = v21;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_124B4(v53, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v53 = *(_OWORD *)a3;
    uint64_t v54 = *(void *)(a3 + 16);
  }
  if (*(char *)(a2 + 23) < 0)
  {
    sub_124B4(v51, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v51 = *(_OWORD *)a2;
    uint64_t v52 = *(void *)(a2 + 16);
  }
  unint64_t v24 = *a5;
  unint64_t v25 = sub_EE310(*a5, (unsigned __int8 *)v53);
  int v26 = sub_EE310(v24, (unsigned __int8 *)v51);
  unint64_t v27 = *((void *)v25 + 14);
  unint64_t v28 = *((void *)v26 + 14);
  BOOL v29 = v27 < v28;
  if (v27 == v28)
  {
    unint64_t v30 = *((void *)v25 + 8);
    unint64_t v31 = *((void *)v26 + 8);
    BOOL v19 = v30 == v31;
    BOOL v32 = v30 < v31;
    if (v19) {
      BOOL v29 = v25 < v26;
    }
    else {
      BOOL v29 = v32;
    }
  }
  if (SHIBYTE(v52) < 0) {
    operator delete(v51[0]);
  }
  if (SHIBYTE(v54) < 0)
  {
    operator delete(v53[0]);
    if (!v29) {
      return result;
    }
  }
  else if (!v29)
  {
    return result;
  }
  uint64_t v33 = *(void *)(a2 + 16);
  long long v34 = *(_OWORD *)a2;
  uint64_t v35 = *(void *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(void *)(a2 + 16) = v35;
  *(_OWORD *)a3 = v34;
  *(void *)(a3 + 16) = v33;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_124B4(v49, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)a2;
    uint64_t v50 = *(void *)(a2 + 16);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_124B4(v47, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v47 = *(_OWORD *)a1;
    uint64_t v48 = *(void *)(a1 + 16);
  }
  unint64_t v36 = *a5;
  unint64_t v37 = sub_EE310(*a5, (unsigned __int8 *)v49);
  BOOL v38 = sub_EE310(v36, (unsigned __int8 *)v47);
  unint64_t v39 = *((void *)v37 + 14);
  unint64_t v40 = *((void *)v38 + 14);
  BOOL v41 = v39 < v40;
  if (v39 == v40)
  {
    unint64_t v42 = *((void *)v37 + 8);
    unint64_t v43 = *((void *)v38 + 8);
    BOOL v19 = v42 == v43;
    BOOL v44 = v42 < v43;
    if (v19) {
      BOOL v41 = v37 < v38;
    }
    else {
      BOOL v41 = v44;
    }
  }
  if (SHIBYTE(v48) < 0) {
    operator delete(v47[0]);
  }
  if (SHIBYTE(v50) < 0) {
    operator delete(v49[0]);
  }
  if (v41)
  {
    uint64_t v45 = *(void *)(a1 + 16);
    __n128 result = *(__n128 *)a1;
    uint64_t v46 = *(void *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v46;
    *(__n128 *)a2 = result;
    *(void *)(a2 + 16) = v45;
  }
  return result;
}

void sub_14A590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,char a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_14A620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  sub_14A27C(a1, a2, a3, a4, a6);
  if (*(char *)(a5 + 23) < 0)
  {
    sub_124B4(__dst, *(void **)a5, *(void *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)a5;
    uint64_t v76 = *(void *)(a5 + 16);
  }
  if (*(char *)(a4 + 23) < 0)
  {
    sub_124B4(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v74 = *(void *)(a4 + 16);
  }
  long long v12 = *a6;
  unint64_t v13 = sub_EE310(*a6, (unsigned __int8 *)__dst);
  unint64_t v14 = sub_EE310(v12, (unsigned __int8 *)__p);
  unint64_t v16 = *((void *)v13 + 14);
  unint64_t v17 = *((void *)v14 + 14);
  BOOL v18 = v16 < v17;
  if (v16 == v17)
  {
    unint64_t v19 = *((void *)v13 + 8);
    unint64_t v20 = *((void *)v14 + 8);
    BOOL v21 = v19 == v20;
    BOOL v22 = v19 < v20;
    if (v21) {
      BOOL v18 = v13 < v14;
    }
    else {
      BOOL v18 = v22;
    }
  }
  if (SHIBYTE(v74) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v76) < 0)
  {
    operator delete(__dst[0]);
    if (!v18) {
      return result;
    }
  }
  else if (!v18)
  {
    return result;
  }
  uint64_t v23 = *(void *)(a4 + 16);
  long long v24 = *(_OWORD *)a4;
  uint64_t v25 = *(void *)(a5 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a5;
  *(void *)(a4 + 16) = v25;
  *(_OWORD *)a5 = v24;
  *(void *)(a5 + 16) = v23;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_124B4(v71, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v71 = *(_OWORD *)a4;
    uint64_t v72 = *(void *)(a4 + 16);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    sub_124B4(v69, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v69 = *(_OWORD *)a3;
    uint64_t v70 = *(void *)(a3 + 16);
  }
  int v26 = *a6;
  unint64_t v27 = sub_EE310(*a6, (unsigned __int8 *)v71);
  unint64_t v28 = sub_EE310(v26, (unsigned __int8 *)v69);
  unint64_t v29 = *((void *)v27 + 14);
  unint64_t v30 = *((void *)v28 + 14);
  BOOL v31 = v29 < v30;
  if (v29 == v30)
  {
    unint64_t v32 = *((void *)v27 + 8);
    unint64_t v33 = *((void *)v28 + 8);
    BOOL v21 = v32 == v33;
    BOOL v34 = v32 < v33;
    if (v21) {
      BOOL v31 = v27 < v28;
    }
    else {
      BOOL v31 = v34;
    }
  }
  if (SHIBYTE(v70) < 0) {
    operator delete(v69[0]);
  }
  if (SHIBYTE(v72) < 0)
  {
    operator delete(v71[0]);
    if (!v31) {
      return result;
    }
  }
  else if (!v31)
  {
    return result;
  }
  uint64_t v35 = *(void *)(a3 + 16);
  long long v36 = *(_OWORD *)a3;
  uint64_t v37 = *(void *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(void *)(a3 + 16) = v37;
  *(_OWORD *)a4 = v36;
  *(void *)(a4 + 16) = v35;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_124B4(v67, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v67 = *(_OWORD *)a3;
    uint64_t v68 = *(void *)(a3 + 16);
  }
  if (*(char *)(a2 + 23) < 0)
  {
    sub_124B4(v65, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v65 = *(_OWORD *)a2;
    uint64_t v66 = *(void *)(a2 + 16);
  }
  BOOL v38 = *a6;
  unint64_t v39 = sub_EE310(*a6, (unsigned __int8 *)v67);
  unint64_t v40 = sub_EE310(v38, (unsigned __int8 *)v65);
  unint64_t v41 = *((void *)v39 + 14);
  unint64_t v42 = *((void *)v40 + 14);
  BOOL v43 = v41 < v42;
  if (v41 == v42)
  {
    unint64_t v44 = *((void *)v39 + 8);
    unint64_t v45 = *((void *)v40 + 8);
    BOOL v21 = v44 == v45;
    BOOL v46 = v44 < v45;
    if (v21) {
      BOOL v43 = v39 < v40;
    }
    else {
      BOOL v43 = v46;
    }
  }
  if (SHIBYTE(v66) < 0) {
    operator delete(v65[0]);
  }
  if (SHIBYTE(v68) < 0)
  {
    operator delete(v67[0]);
    if (!v43) {
      return result;
    }
  }
  else if (!v43)
  {
    return result;
  }
  uint64_t v47 = *(void *)(a2 + 16);
  long long v48 = *(_OWORD *)a2;
  uint64_t v49 = *(void *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(void *)(a2 + 16) = v49;
  *(_OWORD *)a3 = v48;
  *(void *)(a3 + 16) = v47;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_124B4(v63, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v63 = *(_OWORD *)a2;
    uint64_t v64 = *(void *)(a2 + 16);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_124B4(v61, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v61 = *(_OWORD *)a1;
    uint64_t v62 = *(void *)(a1 + 16);
  }
  uint64_t v50 = *a6;
  uint64_t v51 = sub_EE310(*a6, (unsigned __int8 *)v63);
  uint64_t v52 = sub_EE310(v50, (unsigned __int8 *)v61);
  unint64_t v53 = *((void *)v51 + 14);
  unint64_t v54 = *((void *)v52 + 14);
  BOOL v55 = v53 < v54;
  if (v53 == v54)
  {
    unint64_t v56 = *((void *)v51 + 8);
    unint64_t v57 = *((void *)v52 + 8);
    BOOL v21 = v56 == v57;
    BOOL v58 = v56 < v57;
    if (v21) {
      BOOL v55 = v51 < v52;
    }
    else {
      BOOL v55 = v58;
    }
  }
  if (SHIBYTE(v62) < 0) {
    operator delete(v61[0]);
  }
  if (SHIBYTE(v64) < 0) {
    operator delete(v63[0]);
  }
  if (v55)
  {
    uint64_t v59 = *(void *)(a1 + 16);
    __n128 result = *(__n128 *)a1;
    uint64_t v60 = *(void *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v60;
    *(__n128 *)a2 = result;
    *(void *)(a2 + 16) = v59;
  }
  return result;
}