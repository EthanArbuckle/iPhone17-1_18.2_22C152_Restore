unint64_t sub_998DC()
{
  unint64_t result;

  result = qword_319718;
  if (!qword_319718)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319718);
  }
  return result;
}

uint64_t GetStartedActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_319720);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t StartedAction = type metadata accessor for GetStartedActionEvent.Model(0);
  __chkstk_darwin(StartedAction);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_998DC();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = StartedAction;
    v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_16BF4();
    uint64_t v14 = v25;
    sub_27E260();
    v19 = v11;
    unsigned char *v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_99C28(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_99C28(uint64_t a1, uint64_t a2)
{
  uint64_t StartedAction = type metadata accessor for GetStartedActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(StartedAction - 8) + 32))(a2, a1, StartedAction);
  return a2;
}

uint64_t sub_99C8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GetStartedActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_99CA4(void *a1)
{
  return GetStartedActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_99CBC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315700, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3196D8, a1);
}

uint64_t sub_99CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315708, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3196F0, a1);
}

uint64_t sub_99D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for GetStartedActionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319708);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for GetStartedActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9A2CC);
}

uint64_t sub_9A2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319708);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for GetStartedActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9A3E0);
}

uint64_t sub_9A3E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_319708);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_9A4EC()
{
  sub_9A5B4();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_9A5B4()
{
  if (!qword_319790)
  {
    sub_16BF4();
    sub_16C4C();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_319790);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GetStartedActionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_27D7C0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

unsigned char *initializeWithCopy for GetStartedActionEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for GetStartedActionEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for GetStartedActionEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for GetStartedActionEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetStartedActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9A8EC);
}

uint64_t sub_9A8EC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GetStartedActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9A9A8);
}

unsigned char *sub_9A9A8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_9AA4C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GetStartedActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9ABB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetStartedActionEvent.Model.CodingKeys()
{
  return &type metadata for GetStartedActionEvent.Model.CodingKeys;
}

unint64_t sub_9ABEC()
{
  unint64_t result = qword_319850;
  if (!qword_319850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319850);
  }
  return result;
}

unint64_t sub_9AC44()
{
  unint64_t result = qword_319858;
  if (!qword_319858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319858);
  }
  return result;
}

unint64_t sub_9AC9C()
{
  unint64_t result = qword_319860;
  if (!qword_319860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319860);
  }
  return result;
}

uint64_t sub_9ACF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AEA10 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_9ADEC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_319868, &enum case for SessionGroup.default(_:));
}

uint64_t static AppSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315710, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319868, a1);
}

uint64_t sub_9AE4C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_319880, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AppSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315718, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319880, a1);
}

uint64_t AppSessionStartEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_319218);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppSessionStartEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_319218);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AppSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionStartEvent(uint64_t a1)
{
  return sub_5338(a1, qword_319908);
}

uint64_t AppSessionStartEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

__n128 AppSessionStartEvent.Model.orientationData.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v2 = v1[1].n128_u32[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u32[0] = v2;
  return result;
}

uint64_t AppSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionStartEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_319998);
}

uint64_t AppSessionStartEvent.Model.init(orientationData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = *(_DWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_DWORD *)(a3 + 16) = v5;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 20);
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_9B2F0()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x7461746E6569726FLL;
  }
}

uint64_t sub_9B33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_9C9F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_9B364(uint64_t a1)
{
  unint64_t v2 = sub_9B5A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9B3A0(uint64_t a1)
{
  unint64_t v2 = sub_9B5A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppSessionStartEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_319898);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_9B5A0();
  sub_27E440();
  int v9 = *((_DWORD *)v3 + 4);
  long long v12 = *v3;
  int v13 = v9;
  v11[15] = 0;
  sub_8E274();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for AppSessionStartEvent.Model(0);
    LOBYTE(v12) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_9B5A0()
{
  unint64_t result = qword_3198A0;
  if (!qword_3198A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3198A0);
  }
  return result;
}

uint64_t AppSessionStartEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_3198A8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  __chkstk_darwin(started);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_9B5A0();
  sub_27E430();
  if (!v2)
  {
    uint64_t v19 = started;
    uint64_t v20 = v5;
    uint64_t v11 = (uint64_t)v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v28 = 0;
    sub_8ECCC();
    uint64_t v14 = v25;
    sub_27E1F0();
    int v15 = v27;
    *(_OWORD *)uint64_t v11 = v26;
    *(_DWORD *)(v11 + 16) = v15;
    LOBYTE(v26) = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v16 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v11 + *(int *)(v19 + 20), v20, v13);
    sub_9B8F0(v11, v16);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_9B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_9B954@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_9B96C(void *a1)
{
  return AppSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t sub_9B984@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315710, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319868, a1);
}

uint64_t sub_9B9BC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315718, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319880, a1);
}

uint64_t sub_9B9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319218);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9BFA0);
}

uint64_t sub_9BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_319218);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9C0B4);
}

uint64_t sub_9C0B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_319218);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_9C1C0()
{
  sub_9C288();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_9C288()
{
  if (!qword_3192F8)
  {
    sub_8ECCC();
    sub_8E274();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3192F8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AppSessionStartEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v4 = *a2;
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9C5E8);
}

uint64_t sub_9C5E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    if (*a1 <= 3u) {
      int v4 = 3;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 3;
    if (*a1 >= 3u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9C6B0);
}

unsigned char *sub_9C6B0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 252)
  {
    *unint64_t result = a2 + 3;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_9C754()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionStartEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9C8B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_9C8F4()
{
  unint64_t result = qword_3199D0;
  if (!qword_3199D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3199D0);
  }
  return result;
}

unint64_t sub_9C94C()
{
  unint64_t result = qword_3199D8;
  if (!qword_3199D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3199D8);
  }
  return result;
}

unint64_t sub_9C9A4()
{
  unint64_t result = qword_3199E0;
  if (!qword_3199E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3199E0);
  }
  return result;
}

uint64_t sub_9C9F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t NotificationEngagementData.targetID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NotificationEngagementData.targetID.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

unsigned char *NotificationEngagementData.init(actionType:actionUrl:targetID:targetType:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a5;
  *(unsigned char *)a6 = *result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = v6;
  return result;
}

uint64_t sub_9CB70()
{
  uint64_t result = 0x79546E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72556E6F69746361;
      break;
    case 2:
      uint64_t result = 0x4449746567726174;
      break;
    case 3:
      uint64_t result = 0x7954746567726174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_9CC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_9DA10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_9CC2C(uint64_t a1)
{
  unint64_t v2 = sub_9D3A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9CC68(uint64_t a1)
{
  unint64_t v2 = sub_9D3A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationEngagementData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3199E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v16 = *((void *)v1 + 2);
  uint64_t v17 = v9;
  uint64_t v15 = *((void *)v1 + 3);
  int v14 = v1[32];
  sub_5900(a1, a1[3]);
  sub_9D3A4();
  sub_27E440();
  char v24 = v8;
  char v23 = 0;
  sub_9D3F8();
  sub_27E330();
  if (!v2)
  {
    uint64_t v10 = v15;
    char v11 = v14;
    char v22 = 1;
    sub_27E2F0();
    uint64_t v18 = v10;
    char v21 = 2;
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319628);
    sub_27E2C0();
    char v20 = v11;
    char v19 = 3;
    sub_9D44C();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t NotificationEngagementData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_319A08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_9D3A4();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v25 = 0;
    sub_9D4A0();
    sub_27E260();
    int v9 = v26;
    char v24 = 1;
    uint64_t v10 = sub_27E220();
    uint64_t v13 = v12;
    uint64_t v18 = v10;
    int v19 = v9;
    sub_4E04(&qword_319620);
    char v23 = 2;
    sub_97C90(&qword_319650);
    swift_bridgeObjectRetain();
    sub_27E1F0();
    uint64_t v17 = a2;
    uint64_t v14 = v20;
    char v21 = 3;
    sub_9D4F4();
    swift_bridgeObjectRetain();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v15 = v22;
    uint64_t v16 = v17;
    *uint64_t v17 = v19;
    *((void *)v16 + 1) = v18;
    *((void *)v16 + 2) = v13;
    *((void *)v16 + 3) = v14;
    v16[32] = v15;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_9D214@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return NotificationEngagementData.init(from:)(a1, a2);
}

uint64_t sub_9D22C(void *a1)
{
  return NotificationEngagementData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics26NotificationEngagementDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(void **)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  if ((sub_2E528(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    goto LABEL_34;
  }
  if (v2 != v6 || v3 != v7)
  {
    char v11 = 0;
    if ((sub_27E370() & 1) == 0) {
      return v11 & 1;
    }
  }
  if (!v4)
  {
    if (!v8) {
      goto LABEL_10;
    }
LABEL_34:
    char v11 = 0;
    return v11 & 1;
  }
  if (!v8 || (sub_80FC4(v4, v8) & 1) == 0) {
    goto LABEL_34;
  }
LABEL_10:
  unint64_t v12 = 0xD000000000000012;
  unint64_t v13 = 0x80000000002AD680;
  if (v5 == 1) {
    unint64_t v14 = 0xD000000000000012;
  }
  else {
    unint64_t v14 = 0xD00000000000001ALL;
  }
  if (v5 == 1) {
    unint64_t v15 = 0x80000000002AD680;
  }
  else {
    unint64_t v15 = 0x80000000002AD6A0;
  }
  if (v5) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0x6E776F6E6B6E75;
  }
  if (v5) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE700000000000000;
  }
  if (v9 != 1)
  {
    unint64_t v12 = 0xD00000000000001ALL;
    unint64_t v13 = 0x80000000002AD6A0;
  }
  if (v9) {
    uint64_t v18 = v12;
  }
  else {
    uint64_t v18 = 0x6E776F6E6B6E75;
  }
  if (v9) {
    unint64_t v19 = v13;
  }
  else {
    unint64_t v19 = 0xE700000000000000;
  }
  if (v16 == v18 && v17 == v19) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_9D3A4()
{
  unint64_t result = qword_3199F0;
  if (!qword_3199F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3199F0);
  }
  return result;
}

unint64_t sub_9D3F8()
{
  unint64_t result = qword_3199F8;
  if (!qword_3199F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3199F8);
  }
  return result;
}

unint64_t sub_9D44C()
{
  unint64_t result = qword_319A00;
  if (!qword_319A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A00);
  }
  return result;
}

unint64_t sub_9D4A0()
{
  unint64_t result = qword_319A10;
  if (!qword_319A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A10);
  }
  return result;
}

unint64_t sub_9D4F4()
{
  unint64_t result = qword_319A18;
  if (!qword_319A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A18);
  }
  return result;
}

unint64_t sub_9D54C()
{
  unint64_t result = qword_319A20;
  if (!qword_319A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A20);
  }
  return result;
}

unint64_t sub_9D5A4()
{
  unint64_t result = qword_319A28;
  if (!qword_319A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A28);
  }
  return result;
}

uint64_t destroy for NotificationEngagementData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationEngagementData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationEngagementData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ThemesData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for NotificationEngagementData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationEngagementData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationEngagementData()
{
  return &type metadata for NotificationEngagementData;
}

unsigned char *storeEnumTagSinglePayload for NotificationEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9D8D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationEngagementData.CodingKeys()
{
  return &type metadata for NotificationEngagementData.CodingKeys;
}

unint64_t sub_9D90C()
{
  unint64_t result = qword_319A30;
  if (!qword_319A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A30);
  }
  return result;
}

unint64_t sub_9D964()
{
  unint64_t result = qword_319A38;
  if (!qword_319A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A38);
  }
  return result;
}

unint64_t sub_9D9BC()
{
  unint64_t result = qword_319A40;
  if (!qword_319A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A40);
  }
  return result;
}

uint64_t sub_9DA10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79546E6F69746361 && a2 == 0xEA00000000006570;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72556E6F69746361 && a2 == 0xE90000000000006CLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746567726174 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954746567726174 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_9DBF0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_319A48, &enum case for SessionGroup.default(_:));
}

uint64_t static StreamingBitrateChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315720, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319A48, a1);
}

uint64_t sub_9DC50(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_319A60, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static StreamingBitrateChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315728, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319A60, a1);
}

uint64_t StreamingBitrateChangeEvent.bitRateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316788);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StreamingBitrateChangeEvent(uint64_t a1)
{
  return sub_5338(a1, qword_319AE8);
}

uint64_t StreamingBitrateChangeEvent.bitRateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316788);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*StreamingBitrateChangeEvent.bitRateData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t StreamingBitrateChangeEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316790);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t StreamingBitrateChangeEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316790);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*StreamingBitrateChangeEvent.errorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t StreamingBitrateChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t StreamingBitrateChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*StreamingBitrateChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t StreamingBitrateChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for StreamingBitrateChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

void StreamingBitrateChangeEvent.Model.bitRateData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 100);
  int v3 = *(_DWORD *)(v1 + 104);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 96);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
}

uint64_t StreamingBitrateChangeEvent.Model.errorData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[15];
  uint64_t v3 = v1[16];
  uint64_t v4 = v1[17];
  *a1 = v1[14];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t StreamingBitrateChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StreamingBitrateChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_319B80);
}

uint64_t StreamingBitrateChangeEvent.Model.init(contentData:bitRateData:errorData:eventData:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  long long v8 = *(_OWORD *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  __int16 v11 = *(_WORD *)(a1 + 56);
  int v12 = *(_DWORD *)(a1 + 60);
  char v13 = *(unsigned char *)(a1 + 64);
  int v14 = *(_DWORD *)(a1 + 68);
  char v15 = *(unsigned char *)(a1 + 72);
  char v16 = *(unsigned char *)(a1 + 77);
  int v17 = *a2;
  char v18 = *((unsigned char *)a2 + 4);
  int v19 = a2[2];
  long long v20 = *a3;
  uint64_t v22 = *((void *)a3 + 2);
  uint64_t v21 = *((void *)a3 + 3);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v6;
  *(unsigned char *)(a5 + 16) = v7;
  *(_OWORD *)(a5 + 24) = v8;
  *(void *)(a5 + 40) = v9;
  *(void *)(a5 + 48) = v10;
  *(_WORD *)(a5 + 56) = v11;
  *(_DWORD *)(a5 + 60) = v12;
  *(unsigned char *)(a5 + 64) = v13;
  *(_DWORD *)(a5 + 68) = v14;
  *(unsigned char *)(a5 + 72) = v15;
  *(_DWORD *)(a5 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a5 + 77) = v16;
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_DWORD *)(a5 + 96) = v17;
  *(unsigned char *)(a5 + 100) = v18;
  *(_DWORD *)(a5 + 104) = v19;
  *(_OWORD *)(a5 + 112) = v20;
  *(void *)(a5 + 128) = v22;
  *(void *)(a5 + 136) = v21;
  uint64_t v23 = a5 + *(int *)(type metadata accessor for StreamingBitrateChangeEvent.Model(0) + 28);
  uint64_t v24 = sub_27D7C0();
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);

  return v25(v23, a4, v24);
}

uint64_t sub_9E3F0()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4465746152746962;
      break;
    case 2:
      uint64_t v2 = 0x44726F727265;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x44746E657665;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_9E480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A08E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_9E4A8(uint64_t a1)
{
  unint64_t v2 = sub_9E7CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9E4E4(uint64_t a1)
{
  unint64_t v2 = sub_9E7CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t StreamingBitrateChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_319A78);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_9E7CC();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v28 = *(void *)v4;
  *((void *)&v28 + 1) = v10;
  LOBYTE(v29) = v11;
  long long v30 = v12;
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  __int16 v33 = v15;
  int v34 = v16;
  char v35 = v17;
  int v36 = v18;
  char v37 = v19;
  int v38 = *(_DWORD *)(v4 + 73);
  char v39 = v20;
  long long v40 = *(_OWORD *)(v4 + 80);
  char v27 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *(unsigned char *)(v4 + 100);
    int v22 = *(_DWORD *)(v4 + 104);
    LODWORD(v28) = *(_DWORD *)(v4 + 96);
    BYTE4(v28) = v21;
    DWORD2(v28) = v22;
    char v27 = 1;
    sub_1A2D0();
    sub_27E330();
    uint64_t v23 = *(void *)(v4 + 128);
    uint64_t v24 = *(void *)(v4 + 136);
    long long v28 = *(_OWORD *)(v4 + 112);
    uint64_t v29 = v23;
    *(void *)&long long v30 = v24;
    char v27 = 2;
    sub_1A324();
    sub_27E330();
    type metadata accessor for StreamingBitrateChangeEvent.Model(0);
    LOBYTE(v28) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_9E7CC()
{
  unint64_t result = qword_319A80;
  if (!qword_319A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319A80);
  }
  return result;
}

uint64_t StreamingBitrateChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v36 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4E04(&qword_319A88);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StreamingBitrateChangeEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  int v38 = a1;
  sub_5900(a1, v11);
  sub_9E7CC();
  long long v12 = v7;
  uint64_t v13 = v39;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v38);
  }
  uint64_t v14 = (uint64_t)v10;
  __int16 v15 = v5;
  uint64_t v17 = v35;
  uint64_t v16 = v36;
  char v53 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v40 + 1);
  char v19 = v41;
  long long v20 = v42;
  uint64_t v21 = v43;
  uint64_t v22 = v44;
  __int16 v23 = v45;
  int v24 = v46;
  char v25 = v47;
  int v26 = v48;
  char v27 = v49;
  char v28 = v51;
  *(void *)uint64_t v14 = v40;
  *(void *)(v14 + 8) = v18;
  *(unsigned char *)(v14 + 16) = v19;
  *(_OWORD *)(v14 + 24) = v20;
  *(void *)(v14 + 40) = v21;
  *(void *)(v14 + 48) = v22;
  *(_WORD *)(v14 + 56) = v23;
  *(_DWORD *)(v14 + 60) = v24;
  *(unsigned char *)(v14 + 64) = v25;
  *(_DWORD *)(v14 + 68) = v26;
  *(unsigned char *)(v14 + 72) = v27;
  *(_DWORD *)(v14 + 73) = v50;
  *(unsigned char *)(v14 + 77) = v28;
  *(_OWORD *)(v14 + 80) = v52;
  char v53 = 1;
  sub_1AA88();
  sub_27E260();
  char v29 = BYTE4(v40);
  int v30 = DWORD2(v40);
  *(_DWORD *)(v14 + 96) = v40;
  *(unsigned char *)(v14 + 100) = v29;
  *(_DWORD *)(v14 + 104) = v30;
  char v53 = 2;
  sub_1AADC();
  sub_27E260();
  uint64_t v31 = v41;
  uint64_t v32 = v42;
  *(_OWORD *)(v14 + 112) = v40;
  *(void *)(v14 + 128) = v31;
  *(void *)(v14 + 136) = v32;
  LOBYTE(v40) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v37);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v14 + *(int *)(v8 + 28), v15, v3);
  sub_9EC90(v14, v34);
  sub_5E94((uint64_t)v38);
  return sub_9ECF4(v14);
}

uint64_t sub_9EC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreamingBitrateChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9ECF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreamingBitrateChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9ED50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingBitrateChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_9ED68(void *a1)
{
  return StreamingBitrateChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_9ED80@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315720, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319A48, a1);
}

uint64_t sub_9EDB8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315728, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319A60, a1);
}

uint64_t sub_9EDF0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for StreamingBitrateChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316788);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316790);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for StreamingBitrateChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9F7D0);
}

uint64_t sub_9F7D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for StreamingBitrateChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9F98C);
}

uint64_t sub_9F98C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_9FB40()
{
  sub_9FD28(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_9FD28(319, &qword_316880, (void (*)(void))sub_1AA88, (void (*)(void))sub_1A2D0);
    if (v1 <= 0x3F)
    {
      sub_9FD28(319, (unint64_t *)&unk_316888, (void (*)(void))sub_1AADC, (void (*)(void))sub_1A324);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_9FD28(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    unint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(void *)(a1 + 96) = a2[12];
    uint64_t v10 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    uint64_t v11 = a2[17];
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v17 = a1 + v12;
    uint64_t v18 = (uint64_t)a2 + v12;
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v11;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v17, v18, v13);
  }
  return v3;
}

uint64_t destroy for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v11;
  uint64_t v16 = a2 + v11;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v16, v12);
  return a1;
}

uint64_t assignWithCopy for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v8;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 128);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A04C4);
}

uint64_t sub_A04C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StreamingBitrateChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A0588);
}

uint64_t sub_A0588(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_A0630()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StreamingBitrateChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA07A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamingBitrateChangeEvent.Model.CodingKeys()
{
  return &type metadata for StreamingBitrateChangeEvent.Model.CodingKeys;
}

unint64_t sub_A07E4()
{
  unint64_t result = qword_319BC0;
  if (!qword_319BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319BC0);
  }
  return result;
}

unint64_t sub_A083C()
{
  unint64_t result = qword_319BC8;
  if (!qword_319BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319BC8);
  }
  return result;
}

unint64_t sub_A0894()
{
  unint64_t result = qword_319BD0;
  if (!qword_319BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319BD0);
  }
  return result;
}

uint64_t sub_A08E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4465746152746962 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::ContentEnvironment_optional __swiftcall ContentEnvironment.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7D90;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ContentEnvironment.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 24945;
      break;
    case 2:
      uint64_t result = 0x676E6967617473;
      break;
    case 3:
      uint64_t result = 1685025392;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A0BB4(unsigned __int8 *a1, char *a2)
{
  return sub_30264(*a1, *a2);
}

unint64_t sub_A0BC4()
{
  unint64_t result = qword_319BD8;
  if (!qword_319BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319BD8);
  }
  return result;
}

Swift::Int sub_A0C18()
{
  return sub_27E420();
}

uint64_t sub_A0CDC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_A0D88()
{
  return sub_27E420();
}

BookAnalytics::ContentEnvironment_optional sub_A0E48(Swift::String *a1)
{
  return ContentEnvironment.init(rawValue:)(*a1);
}

void sub_A0E54(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 24945;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6967617473;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1685025392;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_A0ED8()
{
  return sub_27DED0();
}

uint64_t sub_A0F38()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ContentEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA1054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironment()
{
  return &type metadata for ContentEnvironment;
}

unint64_t sub_A108C()
{
  unint64_t result = qword_319BE0;
  if (!qword_319BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319BE0);
  }
  return result;
}

uint64_t sub_A10E0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_319BE8, &enum case for SessionGroup.default(_:));
}

uint64_t static RoomViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315730, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319BE8, a1);
}

uint64_t sub_A1140(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_319C00, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RoomViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315738, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319C00, a1);
}

uint64_t RoomViewEvent.roomData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_319C18);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t RoomViewEvent.roomData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_319C18);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t RoomViewEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RoomViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_319CA0);
}

uint64_t RoomViewEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RoomViewEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomViewEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RoomViewEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RoomViewEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomViewEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RoomViewEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RoomViewEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RoomViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RoomViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RoomViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RoomViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RoomViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RoomViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t RoomViewEvent.Model.roomData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t RoomViewEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 168);
  v11[6] = *(_OWORD *)(v1 + 152);
  v11[7] = v2;
  v11[8] = *(_OWORD *)(v1 + 184);
  uint64_t v12 = *(void *)(v1 + 200);
  long long v3 = *(_OWORD *)(v1 + 104);
  v11[2] = *(_OWORD *)(v1 + 88);
  v11[3] = v3;
  long long v4 = *(_OWORD *)(v1 + 136);
  v11[4] = *(_OWORD *)(v1 + 120);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 72);
  v11[0] = *(_OWORD *)(v1 + 56);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 184);
  *(void *)(a1 + 144) = *(void *)(v1 + 200);
  long long v7 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v9;
  return sub_35DC8((uint64_t)v11);
}

uint64_t RoomViewEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 224);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 208);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void RoomViewEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 232);
}

uint64_t RoomViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RoomViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_319D48);
}

uint64_t RoomViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RoomViewEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7F0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RoomViewEvent.Model.init(roomData:linkData:upSellData:suggestionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_OWORD *)(a7 + 40) = *(_OWORD *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a7 + 152) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a7 + 168) = v10;
  *(_OWORD *)(a7 + 184) = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a7 + 88) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a7 + 104) = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a7 + 120) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a7 + 136) = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a7 + 56) = *(_OWORD *)a2;
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  uint64_t v16 = *(void *)(a3 + 16);
  char v17 = *a4;
  *(void *)(a7 + 16) = *(void *)(a1 + 16);
  *(void *)(a7 + 24) = v14;
  *(unsigned char *)(a7 + 32) = v15;
  *(void *)(a7 + 200) = *(void *)(a2 + 144);
  *(_OWORD *)(a7 + 72) = v13;
  *(_OWORD *)(a7 + 208) = *(_OWORD *)a3;
  *(void *)(a7 + 224) = v16;
  *(unsigned char *)(a7 + 232) = v17;
  uint64_t v18 = type metadata accessor for RoomViewEvent.Model(0);
  uint64_t v19 = a7 + *(int *)(v18 + 32);
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a5, v20);
  uint64_t v21 = a7 + *(int *)(v18 + 36);
  uint64_t v22 = sub_27D7F0();
  __int16 v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);

  return v23(v21, a6, v22);
}

uint64_t sub_A1E68()
{
  uint64_t result = 0x617461446D6F6F72;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 2:
      uint64_t result = 0x61446C6C65537075;
      break;
    case 3:
      uint64_t result = 0x6974736567677573;
      break;
    case 4:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A1F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A5390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_A1F60(uint64_t a1)
{
  unint64_t v2 = sub_A2380();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A1F9C(uint64_t a1)
{
  unint64_t v2 = sub_A2380();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RoomViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_319C20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_A2380();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  long long v31 = *v3;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  char v34 = v11;
  long long v35 = *(long long *)((char *)v3 + 40);
  char v30 = 0;
  sub_A23D4();
  sub_27E330();
  if (!v2)
  {
    long long v12 = *(long long *)((char *)v3 + 168);
    long long v26 = *(long long *)((char *)v3 + 152);
    long long v27 = v12;
    long long v28 = *(long long *)((char *)v3 + 184);
    uint64_t v29 = *((void *)v3 + 25);
    long long v13 = *(long long *)((char *)v3 + 104);
    long long v22 = *(long long *)((char *)v3 + 88);
    long long v23 = v13;
    long long v14 = *(long long *)((char *)v3 + 136);
    long long v24 = *(long long *)((char *)v3 + 120);
    long long v25 = v14;
    long long v15 = *(long long *)((char *)v3 + 72);
    long long v20 = *(long long *)((char *)v3 + 56);
    long long v21 = v15;
    char v19 = 1;
    sub_1FF00();
    sub_27E330();
    uint64_t v16 = *((void *)v3 + 28);
    long long v20 = v3[13];
    *(void *)&long long v21 = v16;
    char v19 = 2;
    sub_36A74();
    sub_27E2C0();
    LOBYTE(v20) = *((unsigned char *)v3 + 232);
    char v19 = 3;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for RoomViewEvent.Model(0);
    LOBYTE(v20) = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v20) = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_A2380()
{
  unint64_t result = qword_319C28;
  if (!qword_319C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319C28);
  }
  return result;
}

unint64_t sub_A23D4()
{
  unint64_t result = qword_319C30;
  if (!qword_319C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319C30);
  }
  return result;
}

uint64_t RoomViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_27D7F0();
  uint64_t v34 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4E04(&qword_319C38);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoomViewEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v41 = a1;
  sub_5900(a1, v13);
  sub_A2380();
  long long v40 = v9;
  uint64_t v14 = v55;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v41);
  }
  uint64_t v33 = v7;
  uint64_t v32 = v4;
  uint64_t v15 = v37;
  uint64_t v16 = v38;
  uint64_t v55 = v5;
  LOBYTE(v43) = 0;
  sub_A2BA0();
  uint64_t v17 = v39;
  sub_27E260();
  long long v18 = v47;
  char v19 = v48[0];
  uint64_t v20 = (uint64_t)v12;
  *(_OWORD *)long long v12 = v46;
  *((_OWORD *)v12 + 1) = v18;
  v12[32] = v19;
  *(_OWORD *)(v12 + 40) = *(_OWORD *)&v48[8];
  char v45 = 1;
  sub_20940();
  sub_27E260();
  long long v21 = v52;
  *(_OWORD *)(v12 + 152) = v51;
  *(_OWORD *)(v12 + 168) = v21;
  *(_OWORD *)(v12 + 184) = v53;
  long long v22 = *(_OWORD *)&v48[16];
  *(_OWORD *)(v12 + 88) = *(_OWORD *)v48;
  *(_OWORD *)(v12 + 104) = v22;
  long long v23 = v50;
  *(_OWORD *)(v12 + 120) = v49;
  *(_OWORD *)(v12 + 136) = v23;
  long long v24 = v47;
  *(_OWORD *)(v12 + 56) = v46;
  *((void *)v12 + 25) = v54;
  *(_OWORD *)(v12 + 72) = v24;
  char v42 = 2;
  sub_37744();
  uint64_t v31 = 0;
  sub_27E1F0();
  uint64_t v25 = v15;
  uint64_t v26 = v44;
  *(_OWORD *)(v20 + 208) = v43;
  *(void *)(v20 + 224) = v26;
  char v42 = 3;
  sub_377EC();
  sub_27E1F0();
  *(unsigned char *)(v20 + 232) = v43;
  LOBYTE(v43) = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v27 = v33;
  uint64_t v28 = v55;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v20 + *(int *)(v10 + 32), v27, v28);
  LOBYTE(v43) = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v29 = v32;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v40, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v20 + *(int *)(v10 + 36), v29, v16);
  sub_A2BF4(v20, v35);
  sub_5E94((uint64_t)v41);
  return sub_A2C58(v20);
}

unint64_t sub_A2BA0()
{
  unint64_t result = qword_319C40;
  if (!qword_319C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319C40);
  }
  return result;
}

uint64_t sub_A2BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoomViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A2C58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoomViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A2CB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RoomViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_A2CCC(void *a1)
{
  return RoomViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_A2CE4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315730, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319BE8, a1);
}

uint64_t sub_A2D1C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315738, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319C00, a1);
}

uint64_t sub_A2D54@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for RoomViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319C18);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for RoomViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for RoomViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for RoomViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for RoomViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for RoomViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A3B58);
}

uint64_t sub_A3B58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319C18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for RoomViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A3DB4);
}

uint64_t sub_A3DB4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319C18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_A4008()
{
  sub_A42A0(319, (unint64_t *)&unk_319CB0, (void (*)(void))sub_A2BA0, (void (*)(void))sub_A23D4);
  if (v0 <= 0x3F)
  {
    sub_A42A0(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_A42A0(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
      if (v2 <= 0x3F)
      {
        sub_A42A0(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_A42A0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for RoomViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    uint64_t v11 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v11;
    uint64_t v12 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v12;
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v13 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v13;
    uint64_t v14 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v14;
    uint64_t v15 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v15;
    uint64_t v16 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v16;
    uint64_t v17 = a2[23];
    *(void *)(a1 + 176) = a2[22];
    *(void *)(a1 + 184) = v17;
    uint64_t v18 = a2[25];
    *(void *)(a1 + 192) = a2[24];
    *(void *)(a1 + 200) = v18;
    *(_WORD *)(a1 + 208) = *((_WORD *)a2 + 104);
    uint64_t v19 = a2[27];
    uint64_t v20 = a2[28];
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v21 = *(int *)(a3 + 32);
    uint64_t v30 = (uint64_t)a2 + v21;
    uint64_t v31 = a1 + v21;
    *(void *)(a1 + 216) = v19;
    *(void *)(a1 + 224) = v20;
    uint64_t v22 = sub_27D7C0();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v31, v30, v22);
    uint64_t v23 = *(int *)(a3 + 36);
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return v4;
}

uint64_t destroy for RoomViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  uint64_t v17 = *(void *)(a2 + 216);
  uint64_t v18 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v19 = *(int *)(a3 + 32);
  uint64_t v27 = a2 + v19;
  uint64_t v28 = a1 + v19;
  *(void *)(a1 + 216) = v17;
  *(void *)(a1 + 224) = v18;
  uint64_t v20 = sub_27D7C0();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v28, v27, v20);
  uint64_t v21 = *(int *)(a3 + 36);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 208) = v7;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v19 = *(int *)(a3 + 32);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 36);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A4E28);
}

uint64_t sub_A4E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for RoomViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A4F68);
}

uint64_t sub_A4F68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_A5094()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RoomViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA5250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomViewEvent.Model.CodingKeys()
{
  return &type metadata for RoomViewEvent.Model.CodingKeys;
}

unint64_t sub_A528C()
{
  unint64_t result = qword_319D90;
  if (!qword_319D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319D90);
  }
  return result;
}

unint64_t sub_A52E4()
{
  unint64_t result = qword_319D98;
  if (!qword_319D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319D98);
  }
  return result;
}

unint64_t sub_A533C()
{
  unint64_t result = qword_319DA0;
  if (!qword_319DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319DA0);
  }
  return result;
}

uint64_t sub_A5390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461446D6F6F72 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_A565C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_319DA8, &enum case for SessionGroup.default(_:));
}

uint64_t static SwooshExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315740, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319DA8, a1);
}

uint64_t sub_A56BC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_319DC0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SwooshExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315748, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319DC0, a1);
}

uint64_t SwooshExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SwooshExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_319E48);
}

uint64_t SwooshExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SwooshExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SwooshExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SwooshExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = enum case for EventProperty.optional<A>(_:);
  uint64_t v11 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v2, v17);
}

uint64_t SwooshExposureEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 288);
  *(void *)a1 = *(void *)(v1 + 264);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 272);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SwooshExposureEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 312);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 296);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void SwooshExposureEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 320);
}

uint64_t SwooshExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SwooshExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_319EF0);
}

uint64_t SwooshExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwooshExposureEvent.Model(0) + 40);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SwooshExposureEvent.Model.init(sectionData:linkData:pageData:upSellData:suggestionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v11 = *(_DWORD *)(a1 + 4);
  long long v12 = *(_OWORD *)(a1 + 8);
  long long v13 = *(_OWORD *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  int v16 = *(_DWORD *)(a1 + 88);
  char v17 = *(unsigned char *)(a1 + 92);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(a3 + 24);
  uint64_t v22 = *(void *)(a4 + 16);
  char v23 = *a5;
  *(unsigned char *)a8 = *(unsigned char *)a1;
  *(_DWORD *)(a8 + 4) = v11;
  *(_OWORD *)(a8 + 8) = v12;
  *(_OWORD *)(a8 + 24) = v13;
  *(void *)(a8 + 40) = v14;
  *(void *)(a8 + 48) = v15;
  *(_OWORD *)(a8 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a8 + 72) = *(_OWORD *)(a1 + 72);
  *(_DWORD *)(a8 + 88) = v16;
  *(unsigned char *)(a8 + 92) = v17;
  *(void *)(a8 + 96) = v18;
  *(void *)(a8 + 104) = v19;
  long long v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a8 + 208) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a8 + 224) = v24;
  *(_OWORD *)(a8 + 240) = *(_OWORD *)(a2 + 128);
  *(void *)(a8 + 256) = *(void *)(a2 + 144);
  long long v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a8 + 144) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a8 + 160) = v25;
  long long v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a8 + 176) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a8 + 192) = v26;
  long long v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a8 + 112) = *(_OWORD *)a2;
  *(_OWORD *)(a8 + 128) = v27;
  *(_OWORD *)(a8 + 264) = *(_OWORD *)a3;
  *(void *)(a8 + 280) = v21;
  *(void *)(a8 + 288) = v20;
  *(_OWORD *)(a8 + 296) = *(_OWORD *)a4;
  *(void *)(a8 + 312) = v22;
  *(unsigned char *)(a8 + 320) = v23;
  uint64_t v28 = type metadata accessor for SwooshExposureEvent.Model(0);
  uint64_t v29 = a8 + *(int *)(v28 + 36);
  uint64_t v30 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a6, v30);
  uint64_t v31 = a8 + *(int *)(v28 + 40);
  uint64_t v32 = sub_27D7F0();
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);

  return v33(v31, a7, v32);
}

uint64_t sub_A6414()
{
  uint64_t result = 0x446E6F6974636573;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1802398060;
      return v2 | 0x6174614400000000;
    case 2:
      unsigned int v2 = 1701273968;
      return v2 | 0x6174614400000000;
    case 3:
      return 0x61446C6C65537075;
    case 4:
      return 0x6974736567677573;
    case 5:
      uint64_t v3 = 0x44746E657665;
      goto LABEL_9;
    case 6:
      uint64_t v3 = 0x4464656D6974;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A6504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AA008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_A652C(uint64_t a1)
{
  unint64_t v2 = sub_A69B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A6568(uint64_t a1)
{
  unint64_t v2 = sub_A69B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SwooshExposureEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_319DD8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_A69B8();
  sub_27E440();
  int v8 = *((_DWORD *)v2 + 1);
  long long v9 = *(_OWORD *)(v2 + 8);
  long long v10 = *(_OWORD *)(v2 + 24);
  uint64_t v11 = *((void *)v2 + 5);
  uint64_t v12 = *((void *)v2 + 6);
  int v13 = *((_DWORD *)v2 + 22);
  char v14 = v2[92];
  uint64_t v15 = *((void *)v2 + 12);
  uint64_t v16 = *((void *)v2 + 13);
  char v39 = *v2;
  int v40 = v8;
  long long v41 = v9;
  long long v42 = v10;
  uint64_t v43 = v11;
  uint64_t v44 = v12;
  long long v45 = *(_OWORD *)(v2 + 56);
  long long v46 = *(_OWORD *)(v2 + 72);
  int v47 = v13;
  char v48 = v14;
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  char v38 = 0;
  sub_1FE58();
  uint64_t v17 = v51;
  sub_27E330();
  if (!v17)
  {
    long long v18 = *((_OWORD *)v2 + 14);
    long long v34 = *((_OWORD *)v2 + 13);
    long long v35 = v18;
    long long v36 = *((_OWORD *)v2 + 15);
    uint64_t v37 = *((void *)v2 + 32);
    long long v19 = *((_OWORD *)v2 + 10);
    long long v30 = *((_OWORD *)v2 + 9);
    long long v31 = v19;
    long long v20 = *((_OWORD *)v2 + 12);
    long long v32 = *((_OWORD *)v2 + 11);
    long long v33 = v20;
    long long v21 = *((_OWORD *)v2 + 8);
    long long v28 = *((_OWORD *)v2 + 7);
    long long v29 = v21;
    char v27 = 1;
    sub_1FF00();
    sub_27E330();
    uint64_t v22 = *((void *)v2 + 35);
    uint64_t v23 = *((void *)v2 + 36);
    long long v28 = *(_OWORD *)(v2 + 264);
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = v23;
    char v27 = 2;
    sub_1FEAC();
    sub_27E330();
    uint64_t v24 = *((void *)v2 + 39);
    long long v28 = *(_OWORD *)(v2 + 296);
    *(void *)&long long v29 = v24;
    char v27 = 3;
    sub_36A74();
    sub_27E2C0();
    LOBYTE(v28) = v2[320];
    char v27 = 4;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for SwooshExposureEvent.Model(0);
    LOBYTE(v28) = 5;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v28) = 6;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_A69B8()
{
  unint64_t result = qword_319DE0;
  if (!qword_319DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319DE0);
  }
  return result;
}

uint64_t SwooshExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v50 = sub_27D7F0();
  uint64_t v46 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  int v47 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v48 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_4E04(&qword_319DE8);
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  int v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SwooshExposureEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_A69B8();
  long long v52 = v8;
  uint64_t v12 = v64;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  int v13 = v6;
  uint64_t v14 = v49;
  uint64_t v15 = v11;
  uint64_t v16 = v50;
  uint64_t v44 = v9;
  uint64_t v64 = v4;
  LOBYTE(v54) = 0;
  sub_20898();
  sub_27E260();
  int v17 = *(_DWORD *)&v58[4];
  long long v18 = *(_OWORD *)&v58[8];
  long long v19 = *(_OWORD *)&v58[24];
  uint64_t v20 = *(void *)&v58[40];
  uint64_t v21 = *(void *)v59;
  int v22 = *(_DWORD *)&v59[40];
  char v23 = v59[44];
  long long v24 = v60;
  long long v25 = v15;
  *uint64_t v15 = v58[0];
  *((_DWORD *)v15 + 1) = v17;
  *(_OWORD *)(v15 + 8) = v18;
  *(_OWORD *)(v15 + 24) = v19;
  *((void *)v15 + 5) = v20;
  *((void *)v15 + 6) = v21;
  *(_OWORD *)(v15 + 56) = *(_OWORD *)&v59[8];
  *(_OWORD *)(v15 + 72) = *(_OWORD *)&v59[24];
  *((_DWORD *)v15 + 22) = v22;
  v15[92] = v23;
  *((_OWORD *)v15 + 6) = v24;
  char v57 = 1;
  sub_20940();
  sub_27E260();
  v43[1] = 0;
  long long v26 = v61;
  long long v27 = v62;
  long long v28 = *(_OWORD *)&v59[32];
  *((_OWORD *)v15 + 13) = v60;
  *((_OWORD *)v15 + 14) = v26;
  *((_OWORD *)v15 + 15) = v27;
  *((void *)v15 + 32) = v63;
  long long v29 = *(_OWORD *)v59;
  *((_OWORD *)v15 + 9) = *(_OWORD *)&v58[32];
  *((_OWORD *)v15 + 10) = v29;
  *((_OWORD *)v15 + 11) = *(_OWORD *)&v59[16];
  *((_OWORD *)v15 + 12) = v28;
  long long v30 = *(_OWORD *)&v58[16];
  *((_OWORD *)v15 + 7) = *(_OWORD *)v58;
  *((_OWORD *)v15 + 8) = v30;
  char v53 = 2;
  sub_208EC();
  sub_27E260();
  uint64_t v31 = (uint64_t)a1;
  uint64_t v32 = v55;
  uint64_t v33 = v56;
  *(_OWORD *)(v25 + 264) = v54;
  *((void *)v25 + 35) = v32;
  *((void *)v25 + 36) = v33;
  char v53 = 3;
  sub_37744();
  sub_27E1F0();
  uint64_t v34 = v55;
  *(_OWORD *)(v25 + 296) = v54;
  *((void *)v25 + 39) = v34;
  char v53 = 4;
  sub_377EC();
  sub_27E1F0();
  v25[320] = v54;
  LOBYTE(v54) = 5;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v35 = v13;
  uint64_t v36 = v64;
  sub_27E260();
  uint64_t v37 = v44;
  uint64_t v38 = *(int *)(v44 + 36);
  v43[0] = v25;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v25[v38], v35, v36);
  LOBYTE(v54) = 6;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  char v39 = v47;
  uint64_t v40 = v51;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v52, v40);
  uint64_t v41 = v43[0];
  (*(void (**)(void, char *, uint64_t))(v46 + 32))(v43[0] + *(int *)(v37 + 40), v39, v16);
  sub_A72F8(v41, v45);
  sub_5E94(v31);
  return sub_A735C(v41);
}

uint64_t sub_A72F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SwooshExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A735C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SwooshExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A73B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SwooshExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_A73D0(void *a1)
{
  return SwooshExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_A73E8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315740, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_319DA8, a1);
}

uint64_t sub_A7420@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315748, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_319DC0, a1);
}

uint64_t sub_A7458@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.optional<A>(_:);
  uint64_t v12 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_315DE8);
  long long v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for SwooshExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A10);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for SwooshExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for SwooshExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for SwooshExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for SwooshExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for SwooshExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for SwooshExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A8464);
}

uint64_t sub_A8464(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  uint64_t v15 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for SwooshExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A8710);
}

uint64_t sub_A8710(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A10);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  uint64_t v18 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v21 = sub_4E04(&qword_315DE8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_A89B4()
{
  sub_A8CC0(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
  if (v0 <= 0x3F)
  {
    sub_A8CC0(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_A8CC0(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
      if (v2 <= 0x3F)
      {
        sub_A8CC0(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
        if (v3 <= 0x3F)
        {
          sub_A8CC0(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
          if (v4 <= 0x3F)
          {
            sub_6DA0();
            if (v5 <= 0x3F)
            {
              sub_6E6C();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_A8CC0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SwooshExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v36 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v36;
    uint64_t v35 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v35;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
    *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
    uint64_t v10 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v11;
    uint64_t v12 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v12;
    uint64_t v13 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v13;
    *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
    uint64_t v14 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v15;
    uint64_t v16 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v16;
    uint64_t v17 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v17;
    uint64_t v18 = a2[30];
    *(void *)(a1 + 232) = a2[29];
    *(void *)(a1 + 240) = v18;
    uint64_t v19 = a2[32];
    *(void *)(a1 + 248) = a2[31];
    *(void *)(a1 + 256) = v19;
    uint64_t v20 = a2[34];
    *(void *)(a1 + 264) = a2[33];
    *(void *)(a1 + 272) = v20;
    uint64_t v21 = a2[36];
    *(void *)(a1 + 280) = a2[35];
    *(void *)(a1 + 288) = v21;
    *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
    *(unsigned char *)(a1 + 297) = *((unsigned char *)a2 + 297);
    uint64_t v22 = a2[38];
    uint64_t v23 = a2[39];
    *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
    uint64_t v24 = *(int *)(a3 + 36);
    uint64_t v33 = (uint64_t)a2 + v24;
    uint64_t v34 = a1 + v24;
    *(void *)(a1 + 304) = v22;
    *(void *)(a1 + 312) = v23;
    uint64_t v25 = sub_27D7C0();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v33, v25);
    uint64_t v26 = *(int *)(a3 + 40);
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (uint64_t)a2 + v26;
    uint64_t v29 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return v4;
}

uint64_t destroy for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  uint64_t v21 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v21;
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  uint64_t v22 = *(void *)(a2 + 304);
  uint64_t v23 = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v24 = *(int *)(a3 + 36);
  uint64_t v32 = a2 + v24;
  uint64_t v33 = a1 + v24;
  *(void *)(a1 + 304) = v22;
  *(void *)(a1 + 312) = v23;
  uint64_t v25 = sub_27D7C0();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v33, v32, v25);
  uint64_t v26 = *(int *)(a3 + 40);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t assignWithCopy for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  long long v13 = *(_OWORD *)(a2 + 192);
  long long v14 = *(_OWORD *)(a2 + 208);
  long long v15 = *(_OWORD *)(a2 + 224);
  long long v16 = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  long long v17 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v17;
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 208) = v14;
  uint64_t v21 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = *(int *)(a3 + 40);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

uint64_t assignWithTake for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v22;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 296) = *(_WORD *)(a2 + 296);
  uint64_t v23 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v24 = *(int *)(a3 + 36);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = *(int *)(a3 + 40);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A9A94);
}

uint64_t sub_A9A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SwooshExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A9BD4);
}

uint64_t sub_A9BD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_A9D00()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SwooshExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA9EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwooshExposureEvent.Model.CodingKeys()
{
  return &type metadata for SwooshExposureEvent.Model.CodingKeys;
}

unint64_t sub_A9F04()
{
  unint64_t result = qword_319F40;
  if (!qword_319F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319F40);
  }
  return result;
}

unint64_t sub_A9F5C()
{
  unint64_t result = qword_319F48;
  if (!qword_319F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319F48);
  }
  return result;
}

unint64_t sub_A9FB4()
{
  unint64_t result = qword_319F50;
  if (!qword_319F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319F50);
  }
  return result;
}

uint64_t sub_AA008(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

id sub_AA350()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for EventReporter()) init];
  qword_319F60 = (uint64_t)result;
  return result;
}

id static EventReporter.shared.getter()
{
  if (qword_315750 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_319F60;

  return v0;
}

double sub_AA438()
{
  qword_319F88 = 0;
  double result = 0.0;
  xmmword_319F68 = 0u;
  *(_OWORD *)algn_319F78 = 0u;
  return result;
}

uint64_t static EventReporter.libraryAnalyticsDataProvider.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_315758 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_AA4D0((uint64_t)&xmmword_319F68, a1);
}

uint64_t sub_AA4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_319F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static EventReporter.libraryAnalyticsDataProvider.setter(uint64_t a1)
{
  if (qword_315758 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_AA5D0(a1, (uint64_t)&xmmword_319F68);
  swift_endAccess();
  return sub_ADCF8(a1, &qword_319F90);
}

uint64_t sub_AA5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_319F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static EventReporter.libraryAnalyticsDataProvider.modify())()
{
  if (qword_315758 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_AA6C4()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___BAEventReporter_dataProviders);
  BOOL v2 = v1 + 4;
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_AA7F4(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_AA728(void **a1, uint64_t a2)
{
  sub_AE110(a2, (uint64_t)v7);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = sub_2668FC(0, v3[2] + 1, 1, v3);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    int v3 = sub_2668FC((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  uint64_t result = sub_AE174(v7, (uint64_t)&v3[5 * v5 + 4]);
  *a1 = v3;
  return result;
}

uint64_t sub_AA7F4(void **a1)
{
  return sub_AA728(a1, *(void *)(v1 + 16));
}

uint64_t sub_AA874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (qword_315758 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  if (qword_319F80)
  {
    sub_AE110((uint64_t)&xmmword_319F68, (uint64_t)v11 + 1);
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    sub_5900((void *)((char *)v11 + 1), v12);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v11, a1, a2, v7, v8);
    char v9 = v11[0];
    uint64_t result = sub_5E94((uint64_t)v11 + 1);
    unint64_t v10 = 0x404020100uLL >> (8 * v9);
  }
  else
  {
    LOBYTE(v10) = 4;
  }
  *a3 = v10;
  return result;
}

uint64_t sub_AA9F8(uint64_t a1, char a2, char a3)
{
  LOBYTE(v8[0]) = a2;
  BYTE1(v8[0]) = a3;
  sub_4E04(&qword_319FE0);
  uint64_t v3 = sub_27D380();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v4 + 104))(v6 + v5, enum case for DataEventTrait.onlyOnce(_:), v3);
  sub_AE074();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for AccountEvent(0);
  sub_AE0C8((unint64_t *)&unk_31A080, (void (*)(uint64_t))type metadata accessor for AccountEvent);
  memset(v8, 0, sizeof(v8));
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v8, (uint64_t *)&unk_320320);
}

uint64_t sub_AABA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unint64_t v5 = sub_ACE04(a2);

  *(void *)&v11[0] = v5;
  sub_4E04(&qword_319FE0);
  uint64_t v6 = sub_27D380();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9 + v8, enum case for DataEventTrait.onlyOnce(_:), v6);
  sub_ADF9C();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DragDropEvent(0);
  sub_AE0C8(&qword_31A070, (void (*)(uint64_t))type metadata accessor for DragDropEvent);
  memset(v11, 0, sizeof(v11));
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v11, (uint64_t *)&unk_320320);
}

uint64_t sub_AADD4(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_AD4B8;
  *(void *)(v4 + 24) = v3;
  id v5 = a2;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_AAE98()
{
  sub_DF4A4((uint64_t)v5);
  sub_4E04(&qword_319FE0);
  uint64_t v0 = sub_27D380();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for HideBookEvent(0);
  sub_AE0C8((unint64_t *)&unk_31A050, (void (*)(uint64_t))type metadata accessor for HideBookEvent);
  memset(v5, 0, sizeof(v5));
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v5, (uint64_t *)&unk_320320);
}

uint64_t sub_AB1D0()
{
  sub_E1AD0((uint64_t)&v12);
  int v0 = v12;
  char v1 = v13;
  int v2 = v14;
  char v3 = v15;
  char v4 = v16;
  char v5 = v17;
  sub_DF4A4((uint64_t)v18);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = v0;
  *(unsigned char *)(v6 + 20) = v1;
  *(_DWORD *)(v6 + 24) = v2;
  *(unsigned char *)(v6 + 28) = v3;
  *(unsigned char *)(v6 + 29) = v4;
  *(unsigned char *)(v6 + 30) = v5;
  long long v7 = v18[3];
  *(_OWORD *)(v6 + 64) = v18[2];
  *(_OWORD *)(v6 + 80) = v7;
  long long v8 = v18[5];
  *(_OWORD *)(v6 + 96) = v18[4];
  *(_OWORD *)(v6 + 112) = v8;
  long long v9 = v18[1];
  *(_OWORD *)(v6 + 32) = v18[0];
  *(_OWORD *)(v6 + 48) = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_AD4C4;
  *(void *)(v10 + 24) = v6;
  sub_68EB8((uint64_t)v18);
  swift_retain();
  sub_27D730();
  swift_release();
  swift_release();
  return sub_6957C((uint64_t)v18);
}

uint64_t sub_AB48C(uint64_t a1, int *a2, _OWORD *a3)
{
  int v4 = *a2;
  char v5 = *((unsigned char *)a2 + 4);
  int v6 = a2[2];
  char v7 = *((unsigned char *)a2 + 12);
  char v8 = *((unsigned char *)a2 + 13);
  char v9 = *((unsigned char *)a2 + 14);
  long long v10 = a3[3];
  v19[2] = a3[2];
  v19[3] = v10;
  long long v11 = a3[5];
  v19[4] = a3[4];
  v19[5] = v11;
  long long v12 = a3[1];
  v19[0] = *a3;
  v19[1] = v12;
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = v4;
  *(unsigned char *)(v13 + 20) = v5;
  *(_DWORD *)(v13 + 24) = v6;
  *(unsigned char *)(v13 + 28) = v7;
  *(unsigned char *)(v13 + 29) = v8;
  *(unsigned char *)(v13 + 30) = v9;
  long long v14 = a3[3];
  *(_OWORD *)(v13 + 64) = a3[2];
  *(_OWORD *)(v13 + 80) = v14;
  long long v15 = a3[5];
  *(_OWORD *)(v13 + 96) = a3[4];
  *(_OWORD *)(v13 + 112) = v15;
  long long v16 = a3[1];
  *(_OWORD *)(v13 + 32) = *a3;
  *(_OWORD *)(v13 + 48) = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_AD4C4;
  *(void *)(v17 + 24) = v13;
  sub_68EB8((uint64_t)v19);
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_AB5C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v15[0]) = a2;
  BYTE4(v15[0]) = BYTE4(a2) & 1;
  DWORD2(v15[0]) = a3;
  BYTE12(v15[0]) = BYTE4(a3) & 1;
  BYTE13(v15[0]) = BYTE5(a3) & 1;
  BYTE14(v15[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  long long v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v15[2] = a4[2];
  v15[3] = v11;
  long long v12 = a4[5];
  v15[4] = a4[4];
  v15[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for InBookSearchEvent(0);
  sub_AE0C8(&qword_31A048, (void (*)(uint64_t))type metadata accessor for InBookSearchEvent);
  memset(v15, 0, 32);
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v15, (uint64_t *)&unk_320320);
}

uint64_t sub_AB834(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void *a5)
{
  v21[1] = a1;
  uint64_t v9 = sub_27D0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  long long v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a3;
  uint64_t v14 = *a4;
  v21[0] = *a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v15, v12, v9);
  *(void *)(v18 + v16) = v13;
  *(void *)(v18 + v17) = v14;
  *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21[0];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_AD598;
  *(void *)(v19 + 24) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_ABA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for InitialAppStateQueryEvent(0);
  sub_AE0C8((unint64_t *)&unk_31A020, (void (*)(uint64_t))type metadata accessor for InitialAppStateQueryEvent);
  sub_27D2D0();
  *(void *)&v13[0] = a3;
  sub_4E04(&qword_319FE0);
  uint64_t v4 = sub_27D380();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_285930;
  uint64_t v8 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 104);
  v9(v7 + v6, enum case for DataEventTrait.onlyOnce(_:), v4);
  sub_ADDA8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_285930;
  v9(v10 + v6, v8, v4);
  sub_ADDFC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_285930;
  v9(v11 + v6, v8, v4);
  sub_ADE50();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  memset(v13, 0, sizeof(v13));
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v13, (uint64_t *)&unk_320320);
}

id sub_ABCF0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  unint64_t v17 = a1;
  if (a1 || (id result = sub_103814(), (v17 = result) != 0))
  {
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v20 = a8;
    uint64_t v21 = a4;
    uint64_t v22 = v19;
    v19[2] = v8;
    v19[3] = a3;
    v19[4] = v21;
    v19[5] = a6;
    _OWORD v19[6] = a5;
    v19[7] = v17;
    v19[8] = a7;
    v19[9] = v20;
    v19[10] = a2;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_AD6A4;
    *(void *)(v23 + 24) = v22;
    id v24 = a7;
    id v25 = a2;
    swift_retain();
    id v26 = a1;
    id v27 = v8;
    swift_bridgeObjectRetain();
    id v28 = v17;
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_ABE50(int a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, id a8, unint64_t a9, void *a10)
{
  if (a5 >= 7)
  {
    *(void *)&long long v52 = a5;
LABEL_22:
    uint64_t result = sub_27E390();
    __break(1u);
    return result;
  }
  unsigned __int8 v51 = a5;
  if (a6 >= 3)
  {
    *(void *)&long long v52 = a6;
    goto LABEL_22;
  }
  unsigned __int8 v50 = a6;
  if (a8) {
    uint64_t v14 = [a8 intValue];
  }
  else {
    uint64_t v14 = 0;
  }
  sub_AA874(a3, a4, &v49);
  if (a9 >= 3)
  {
    *(void *)&long long v52 = a9;
    goto LABEL_22;
  }
  unsigned __int8 v48 = a9;
  LOBYTE(v52) = a8 == 0;
  sub_102DC0(a3, a4, &v51, &v50, a7, v14 | ((unint64_t)(a8 == 0) << 32), &v49, &v48, (uint64_t)&v52);
  uint64_t v15 = *((void *)&v52 + 1);
  uint64_t v44 = v52;
  uint64_t v17 = *((void *)&v53 + 1);
  uint64_t v16 = v54;
  uint64_t v19 = v55;
  uint64_t v18 = v56;
  char v20 = v57;
  char v42 = v58;
  char v43 = v53;
  int v21 = v59;
  int v40 = v61;
  char v41 = v60;
  char v39 = v62;
  v22.i32[0] = v63;
  int16x8_t v38 = (int16x8_t)vmovl_u8(v22);
  char v46 = v64;
  uint64_t v23 = v66;
  uint64_t v45 = v65;
  [a10 floatValue];
  if (v24 == 0.2)
  {
    char v25 = 1;
  }
  else
  {
    [a10 floatValue];
    if (v26 == 0.4)
    {
      char v25 = 2;
    }
    else
    {
      [a10 floatValue];
      if (v27 == 0.6)
      {
        char v25 = 3;
      }
      else
      {
        [a10 floatValue];
        if (v28 == 0.8)
        {
          char v25 = 4;
        }
        else
        {
          [a10 floatValue];
          if (v29 == 1.0) {
            char v25 = 5;
          }
          else {
            char v25 = 0;
          }
        }
      }
    }
  }
  char v47 = v25;
  *(void *)&long long v52 = v44;
  *((void *)&v52 + 1) = v15;
  LOBYTE(v53) = v43;
  *((void *)&v53 + 1) = v17;
  uint64_t v54 = v16;
  uint64_t v55 = v19;
  uint64_t v56 = v18;
  char v57 = v20;
  char v58 = v42;
  int v59 = v21;
  char v60 = v41;
  int v61 = v40;
  char v62 = v39;
  __int32 v63 = vmovn_s16(v38).u32[0];
  char v64 = v46;
  uint64_t v65 = v45;
  uint64_t v66 = v23;
  sub_4E04(&qword_319FE0);
  uint64_t v30 = sub_27D380();
  uint64_t v31 = *(void *)(v30 - 8);
  unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_285930;
  uint64_t v34 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v35 = *(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 104);
  v35(v33 + v32, enum case for DataEventTrait.onlyOnce(_:), v30);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v52) = v47;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_285930;
  v35(v36 + v32, v34, v30);
  sub_ADD54();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for RatingEvent(0);
  sub_AE0C8(&qword_31A018, (void (*)(uint64_t))type metadata accessor for RatingEvent);
  long long v52 = 0u;
  long long v53 = 0u;
  sub_27D2F0();
  return sub_ADCF8((uint64_t)&v52, (uint64_t *)&unk_320320);
}

id sub_AC3F4(void *a1, uint64_t a2)
{
  char v3 = v2;
  unint64_t v6 = a1;
  if (a1 || (result = sub_103814(), (unint64_t v6 = result) != 0))
  {
    id v8 = a1;
    id v9 = v6;
    uint64_t v10 = sub_27D7A0();
    swift_beginAccess();
    swift_unknownObjectWeakLoadStrong();
    uint64_t v11 = (objc_class *)type metadata accessor for BATracker();
    long long v12 = (char *)objc_allocWithZone(v11);
    uint64_t v13 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
    sub_4E04(&qword_319FA0);
    uint64_t v14 = swift_allocObject();
    *(_DWORD *)(v14 + 24) = 0;
    *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
    *(void *)&v12[v13] = v14;
    swift_unknownObjectWeakInit();
    *(void *)&v12[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = v10;
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
    v20.receiver = v12;
    v20.super_class = v11;
    swift_retain();
    [super init];

    swift_release();
    swift_unknownObjectRelease();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v3;
    v16[3] = a2;
    v16[4] = v15;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_AD724;
    *(void *)(v17 + 24) = v16;
    id v18 = v15;
    id v19 = v3;
    swift_unknownObjectRetain();
    swift_retain();
    sub_27D730();
    swift_release();

    return (id)swift_release();
  }
  return result;
}

uint64_t sub_AC630(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_103170(a3, a4, (uint64_t)v9);
  sub_4E04(&qword_319FE0);
  uint64_t v4 = sub_27D380();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, enum case for DataEventTrait.onlyOnce(_:), v4);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ShareEvent(0);
  sub_AE0C8(&qword_31A008, (void (*)(uint64_t))type metadata accessor for ShareEvent);
  memset(v9, 0, sizeof(v9));
  sub_27D2F0();
  return sub_ADCF8((uint64_t)v9, (uint64_t *)&unk_320320);
}

uint64_t sub_AC900(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_AD730;
  *(void *)(v4 + 24) = v3;
  id v5 = a2;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_AC9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + OBJC_IVAR___BAWidgetData_widgetFamily + 8);
  char v3 = *(unsigned char *)(a2 + OBJC_IVAR___BAWidgetData_isContentExposed);
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR___BAWidgetData_displayMode);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR___BAWidgetData_displayMode + 8);
  char v6 = *(unsigned char *)(a2 + OBJC_IVAR___BAWidgetData_isStreakExposed);
  *(void *)&long long v12 = *(void *)(a2 + OBJC_IVAR___BAWidgetData_widgetFamily);
  *((void *)&v12 + 1) = v2;
  *(void *)&long long v13 = v4;
  *((void *)&v13 + 1) = v5;
  char v14 = v3;
  char v15 = v6;
  sub_4E04(&qword_319FE0);
  uint64_t v7 = sub_27D380();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v7);
  sub_ADCA4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetEngagementEvent(0);
  sub_AE0C8((unint64_t *)&unk_319FF0, (void (*)(uint64_t))type metadata accessor for WidgetEngagementEvent);
  long long v12 = 0u;
  long long v13 = 0u;
  sub_27D2F0();
  return sub_ADCF8((uint64_t)&v12, (uint64_t *)&unk_320320);
}

id EventReporter.init()()
{
  uint64_t v1 = OBJC_IVAR___BAEventReporter_dataProviders;
  sub_4E04(&qword_319FA8);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v0[v1] = v2;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for EventReporter();
  return [super init];
}

id EventReporter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventReporter();
  return [super dealloc];
}

void *sub_ACE04(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_E3438(0, v1, 0);
    swift_beginAccess();
    char v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      swift_bridgeObjectRetain();
      if (Strong
        && (NSString v7 = sub_27DDA0(),
            id v8 = [Strong contentPrivateIDForContentID:v7],
            v7,
            swift_unknownObjectRelease(),
            v8))
      {
        uint64_t v9 = sub_27DDB0();
        unint64_t v22 = v10;
        uint64_t v23 = v9;
      }
      else
      {
        unint64_t v22 = 0xE000000000000000;
        uint64_t v23 = 0;
      }
      uint64_t v11 = swift_unknownObjectWeakLoadStrong();
      if (v11
        && (long long v12 = (void *)v11,
            NSString v13 = sub_27DDA0(),
            id v14 = [v12 contentUserIDForContentID:v13],
            v13,
            swift_unknownObjectRelease(),
            v14))
      {
        uint64_t v15 = sub_27DDB0();
        unint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      unint64_t v19 = _swiftEmptyArrayStorage[2];
      unint64_t v18 = _swiftEmptyArrayStorage[3];
      if (v19 >= v18 >> 1) {
        sub_E3438(v18 > 1, v19 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v19 + 1;
      objc_super v20 = &_swiftEmptyArrayStorage[6 * v19];
      v20[4] = v23;
      v20[5] = v22;
      v20[6] = v15;
      v20[7] = v17;
      v20[8] = v5;
      v20[9] = v4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_AD004(uint64_t a1, uint64_t a2)
{
  if (qword_315758 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (!qword_319F80) {
    return 0;
  }
  sub_AE110((uint64_t)&xmmword_319F68, (uint64_t)v8 + 1);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  sub_5900((void *)((char *)v8 + 1), v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v8, a1, a2, v4, v5);
  uint64_t v6 = SLOBYTE(v8[0]);
  sub_5E94((uint64_t)v8 + 1);
  return qword_289B88[v6];
}

uint64_t sub_AD0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 1) {
    char v3 = 2;
  }
  else {
    char v3 = a2 == 2;
  }
  switch(a3)
  {
    case 'f':
      uint64_t v6 = swift_allocObject();
      *(unsigned char *)(v6 + 16) = 2;
      *(unsigned char *)(v6 + 17) = v3;
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = sub_AE000;
      *(void *)(v7 + 24) = v6;
      swift_retain();
      sub_27D730();
      swift_release();
      swift_release();
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 1;
      *(unsigned char *)(v8 + 17) = v3;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_AE1D8;
      *(void *)(v9 + 24) = v8;
      swift_retain();
      break;
    case 'e':
      uint64_t v10 = swift_allocObject();
      *(unsigned char *)(v10 + 16) = 2;
      *(unsigned char *)(v10 + 17) = v3;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_AE1D8;
      *(void *)(v11 + 24) = v10;
      swift_retain();
      break;
    case 'd':
      uint64_t v4 = swift_allocObject();
      *(unsigned char *)(v4 + 16) = 1;
      *(unsigned char *)(v4 + 17) = v3;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_AE1D8;
      *(void *)(v5 + 24) = v4;
      swift_retain();
      break;
    default:
      return result;
  }
  sub_27D730();
  swift_release();

  return swift_release();
}

void sub_AD36C(uint64_t a1)
{
  id v2 = sub_103814();
  if (v2)
  {
    char v3 = v2;
    sub_4E04(&qword_319620);
    sub_ADEF8();
    if (sub_27DF60())
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = a1;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_ADF94;
      *(void *)(v5 + 24) = v4;
      swift_bridgeObjectRetain();
      id v6 = v3;
      swift_retain();
      sub_27D730();

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_AD480()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_AD4B8()
{
  return sub_AAE98();
}

uint64_t sub_AD4CC()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_AD598(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_27D0A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_ABA24(a1, v1 + v4, v5);
}

uint64_t sub_AD64C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_AD6A4(int a1)
{
  return sub_ABE50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(id *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_AD6DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_AD724(uint64_t a1)
{
  return sub_AC630(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_AD730(uint64_t a1)
{
  return sub_AC9C4(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for EventReporter()
{
  return self;
}

uint64_t dispatch thunk of EventReporterDataProviding.eventReporter(_:pageCountFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EventReporterDataProviding.eventReporterUserEmbeddingData(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_AD880;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_AD880()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t method lookup function for EventReporter(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EventReporter);
}

uint64_t dispatch thunk of EventReporter.add(dataProvider:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_20.maxprot + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EventReporter.seriesType(for:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of EventReporter.emitAccountDidChangeEvent(using:with:for:)()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of EventReporter.emitDragDropEvent(with:)()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of EventReporter.emitHideBookEvent(using:contentData:)()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of EventReporter.emitInBookSearchEvent(using:readingSessionData:contentData:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EventReporter.emitInitialAppStateQueryEvent(using:from:libraryData:collectionSummaryData:readingNowData:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EventReporter.emitRatingEvent(using:with:for:contentAcquisitionType:contentType:supplementalContentCount:productionType:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EventReporter.emitShareEvent(using:using:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EventReporter.emitWidgetEngagementEvent(using:with:)()
{
  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t sub_ADC00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_ADC50(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_AB5C4(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

unint64_t sub_ADCA4()
{
  unint64_t result = qword_319FE8;
  if (!qword_319FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_319FE8);
  }
  return result;
}

uint64_t sub_ADCF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_4E04(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_ADD54()
{
  unint64_t result = qword_31A010;
  if (!qword_31A010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A010);
  }
  return result;
}

unint64_t sub_ADDA8()
{
  unint64_t result = qword_31ADC0;
  if (!qword_31ADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ADC0);
  }
  return result;
}

unint64_t sub_ADDFC()
{
  unint64_t result = qword_31A030;
  if (!qword_31A030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A030);
  }
  return result;
}

unint64_t sub_ADE50()
{
  unint64_t result = qword_31A038;
  if (!qword_31A038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A038);
  }
  return result;
}

unint64_t sub_ADEA4()
{
  unint64_t result = qword_31A040;
  if (!qword_31A040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A040);
  }
  return result;
}

unint64_t sub_ADEF8()
{
  unint64_t result = qword_31A060;
  if (!qword_31A060)
  {
    sub_82930(&qword_319620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A060);
  }
  return result;
}

uint64_t sub_ADF54()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_ADF94(uint64_t a1)
{
  return sub_AABA4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_ADF9C()
{
  unint64_t result = qword_31A068;
  if (!qword_31A068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A068);
  }
  return result;
}

uint64_t sub_ADFF0()
{
  return _swift_deallocObject(v0, 18, 7);
}

uint64_t sub_AE000(uint64_t a1)
{
  return sub_AA9F8(a1, *(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 17));
}

uint64_t sub_AE00C()
{
  return _swift_deallocObject(v0, 18, 7);
}

uint64_t sub_AE01C()
{
  return _swift_deallocObject(v0, 18, 7);
}

uint64_t sub_AE02C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_AE064()
{
  return _swift_deallocObject(v0, 18, 7);
}

unint64_t sub_AE074()
{
  unint64_t result = qword_31A078;
  if (!qword_31A078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A078);
  }
  return result;
}

uint64_t sub_AE0C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_AE110(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_AE174(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

float SkipData.startTime.getter()
{
  return *(float *)v0;
}

void SkipData.startTime.setter(float a1)
{
  *uint64_t v1 = a1;
}

BookAnalytics::MaxScrollDepthData __swiftcall MaxScrollDepthData.init(maxScrollPosition:)(BookAnalytics::MaxScrollDepthData maxScrollPosition)
{
  v1->maxScrollPosition = maxScrollPosition.maxScrollPosition;
  return maxScrollPosition;
}

BOOL static MaxScrollDepthData.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2;
}

unint64_t sub_AE208()
{
  return 0xD000000000000011;
}

uint64_t sub_AE224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AE85C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_AE250(uint64_t a1)
{
  unint64_t v2 = sub_AE3FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AE28C(uint64_t a1)
{
  unint64_t v2 = sub_AE3FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MaxScrollDepthData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31A0F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_AE3FC();
  sub_27E440();
  sub_27E320();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_AE3FC()
{
  unint64_t result = qword_31A0F8;
  if (!qword_31A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A0F8);
  }
  return result;
}

uint64_t MaxScrollDepthData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A100);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_AE3FC();
  sub_27E430();
  if (!v2)
  {
    sub_27E250();
    int v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_AE5AC()
{
  unint64_t result = qword_31A108;
  if (!qword_31A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A108);
  }
  return result;
}

unint64_t sub_AE604()
{
  unint64_t result = qword_31A110;
  if (!qword_31A110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A110);
  }
  return result;
}

uint64_t sub_AE658@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return MaxScrollDepthData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for MaxScrollDepthData()
{
  return &type metadata for MaxScrollDepthData;
}

unsigned char *storeEnumTagSinglePayload for MaxScrollDepthData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xAE71CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MaxScrollDepthData.CodingKeys()
{
  return &type metadata for MaxScrollDepthData.CodingKeys;
}

unint64_t sub_AE758()
{
  unint64_t result = qword_31A118;
  if (!qword_31A118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A118);
  }
  return result;
}

unint64_t sub_AE7B0()
{
  unint64_t result = qword_31A120;
  if (!qword_31A120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A120);
  }
  return result;
}

unint64_t sub_AE808()
{
  unint64_t result = qword_31A128;
  if (!qword_31A128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A128);
  }
  return result;
}

uint64_t sub_AE85C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AEB70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BookAnalytics::AccountType_optional __swiftcall AccountType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  char v3 = v1;
  v4._rawValue = &off_2F7E10;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t AccountType.rawValue.getter()
{
  uint64_t v1 = 0x64756F6C4369;
  if (*v0 != 1) {
    uint64_t v1 = 0x73656E755469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_AE994(char *a1, unsigned __int8 *a2)
{
  return sub_332A8(*a1, *a2);
}

unint64_t sub_AE9A4()
{
  unint64_t result = qword_31A130;
  if (!qword_31A130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A130);
  }
  return result;
}

Swift::Int sub_AE9F8()
{
  return sub_27E420();
}

uint64_t sub_AEA94()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_AEB1C()
{
  return sub_27E420();
}

BookAnalytics::AccountType_optional sub_AEBB4(Swift::String *a1)
{
  return AccountType.init(rawValue:)(*a1);
}

void sub_AEBC0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x64756F6C4369;
  if (v2 != 1) {
    uint64_t v4 = 0x73656E755469;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_AEC18()
{
  return sub_27DED0();
}

uint64_t sub_AEC78()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for AccountType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAED94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountType()
{
  return &type metadata for AccountType;
}

unint64_t sub_AEDCC()
{
  unint64_t result = qword_31A138;
  if (!qword_31A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A138);
  }
  return result;
}

BookAnalytics::LibraryEditData __swiftcall LibraryEditData.init(editSummary:editActionType:editActionResult:)(Swift::OpaquePointer editSummary, BookAnalytics::EditActionType editActionType, BookAnalytics::EditActionResult editActionResult)
{
  char v4 = *(unsigned char *)editActionType;
  char v5 = *(unsigned char *)editActionResult;
  *(Swift::OpaquePointer *)uint64_t v3 = editSummary;
  *(unsigned char *)(v3 + 8) = v4;
  *(unsigned char *)(v3 + 9) = v5;
  result.editSummary = editSummary;
  result.editActionType = editActionType;
  return result;
}

unsigned char *LibraryEditData.editActionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

void LibraryViewEvent.Model.librarySortData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

unsigned char *LibraryEditData.editActionResult.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 9) = *result;
  return result;
}

uint64_t (*LibraryEditData.editActionResult.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t sub_AEE80()
{
  unint64_t v1 = 0x6974634174696465;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6D755374696465;
  }
}

uint64_t sub_AEEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AFC98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AEF1C(uint64_t a1)
{
  unint64_t v2 = sub_AF598();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AEF58(uint64_t a1)
{
  unint64_t v2 = sub_AF598();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryEditData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31A140);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v9 = *((unsigned __int8 *)v1 + 8);
  int v12 = *((unsigned __int8 *)v1 + 9);
  int v13 = v9;
  sub_5900(a1, a1[3]);
  sub_AF598();
  sub_27E440();
  uint64_t v19 = v8;
  char v18 = 0;
  sub_4E04(&qword_31A150);
  sub_AF6E8(&qword_31A158, (void (*)(void))sub_AF5EC);
  sub_27E330();
  if (!v2)
  {
    char v10 = v12;
    char v17 = v13;
    char v16 = 1;
    sub_AF640();
    sub_27E330();
    char v15 = v10;
    char v14 = 2;
    sub_AF694();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LibraryEditData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A178);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_AF598();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  sub_4E04(&qword_31A150);
  v13[15] = 0;
  sub_AF6E8(&qword_31A180, (void (*)(void))sub_AF758);
  sub_27E260();
  uint64_t v9 = v14;
  v13[13] = 1;
  sub_AF7AC();
  swift_bridgeObjectRetain();
  sub_27E260();
  char v10 = v13[14];
  v13[11] = 2;
  sub_AF800();
  sub_27E260();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v13[12];
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 9) = v12;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_AF444@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryEditData.init(from:)(a1, a2);
}

uint64_t sub_AF45C(void *a1)
{
  return LibraryEditData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics15LibraryEditDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 9);
  char v4 = *(unsigned char *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 9);
  if (sub_81CB8(*(void *)a1, *(void *)a2) & 1) != 0 && (sub_312C0(v2, v4))
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v7 = 0x73736563637573;
    if (v3 != 1)
    {
      uint64_t v7 = 0x6C65636E6163;
      unint64_t v6 = 0xE600000000000000;
    }
    if (v3) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0x6E776F6E6B6E75;
    }
    if (v3) {
      unint64_t v9 = v6;
    }
    else {
      unint64_t v9 = 0xE700000000000000;
    }
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x73736563637573;
    if (v5 != 1)
    {
      uint64_t v11 = 0x6C65636E6163;
      unint64_t v10 = 0xE600000000000000;
    }
    if (v5) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0x6E776F6E6B6E75;
    }
    if (v5) {
      unint64_t v13 = v10;
    }
    else {
      unint64_t v13 = 0xE700000000000000;
    }
    if (v8 == v12 && v9 == v13) {
      char v14 = 1;
    }
    else {
      char v14 = sub_27E370();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_AF598()
{
  unint64_t result = qword_31A148;
  if (!qword_31A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A148);
  }
  return result;
}

unint64_t sub_AF5EC()
{
  unint64_t result = qword_31A160;
  if (!qword_31A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A160);
  }
  return result;
}

unint64_t sub_AF640()
{
  unint64_t result = qword_31A168;
  if (!qword_31A168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A168);
  }
  return result;
}

unint64_t sub_AF694()
{
  unint64_t result = qword_31A170;
  if (!qword_31A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A170);
  }
  return result;
}

uint64_t sub_AF6E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_31A150);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_AF758()
{
  unint64_t result = qword_31A188;
  if (!qword_31A188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A188);
  }
  return result;
}

unint64_t sub_AF7AC()
{
  unint64_t result = qword_31A190;
  if (!qword_31A190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A190);
  }
  return result;
}

unint64_t sub_AF800()
{
  unint64_t result = qword_31A198;
  if (!qword_31A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A198);
  }
  return result;
}

unint64_t sub_AF858()
{
  unint64_t result = qword_31A1A0;
  if (!qword_31A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A1A0);
  }
  return result;
}

unint64_t sub_AF8B0()
{
  unint64_t result = qword_31A1A8;
  if (!qword_31A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A1A8);
  }
  return result;
}

uint64_t destroy for LibraryEditData()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13BookAnalytics15LibraryEditDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryEditData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for LibraryEditData(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for LibraryEditData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEditData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEditData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEditData()
{
  return &type metadata for LibraryEditData;
}

unsigned char *storeEnumTagSinglePayload for LibraryEditData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAFB58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEditData.CodingKeys()
{
  return &type metadata for LibraryEditData.CodingKeys;
}

unint64_t sub_AFB94()
{
  unint64_t result = qword_31A1B0;
  if (!qword_31A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A1B0);
  }
  return result;
}

unint64_t sub_AFBEC()
{
  unint64_t result = qword_31A1B8;
  if (!qword_31A1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A1B8);
  }
  return result;
}

unint64_t sub_AFC44()
{
  unint64_t result = qword_31A1C0;
  if (!qword_31A1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A1C0);
  }
  return result;
}

uint64_t sub_AFC98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6D755374696465 && a2 == 0xEB00000000797261;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974634174696465 && a2 == 0xEE00657079546E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AEB90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_AFE28(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31A1C8, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchResultSelectEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315760, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A1C8, a1);
}

uint64_t sub_AFE88(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31A1E0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchResultSelectEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315768, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A1E0, a1);
}

uint64_t SearchSuggestionsReturnedEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SearchSuggestionsReturnedEvent.searchData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SearchResultSelectEvent.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31A200);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultSelectEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31A2C8);
}

uint64_t SearchResultSelectEvent.searchSelectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31A200);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchSelectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchResultsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.genreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.genreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultSelectEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultSelectEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SearchResultSelectEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = enum case for EventProperty.optional<A>(_:);
  uint64_t v11 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_315DE0);
  char v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v2, v17);
}

uint64_t SearchSuggestionsReturnedEvent.Model.searchData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  __int16 v3 = *(_WORD *)(v1 + 48);
  int v4 = *(_DWORD *)(v1 + 52);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.searchResultsData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[16];
  uint64_t v9 = v1[17];
  uint64_t v10 = v1[18];
  uint64_t v11 = v1[19];
  uint64_t v12 = v1[20];
  uint64_t v13 = v1[21];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t SearchResultSelectEvent.Model.genreData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[28];
  uint64_t v3 = v1[29];
  uint64_t v4 = v1[30];
  uint64_t v5 = v1[31];
  uint64_t v6 = v1[32];
  uint64_t v7 = v1[33];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_B0AC8(v2, v3);
}

uint64_t sub_B0AC8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t SearchResultSelectEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 40);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultSelectEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31A390);
}

uint64_t SearchResultSelectEvent.Model.init(searchData:searchSelectionData:searchResultsData:contentData:seriesData:genreData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X3>, _OWORD *a5@<X4>, long long *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  __int16 v14 = *((_WORD *)a2 + 8);
  int v15 = *((_DWORD *)a2 + 5);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  uint64_t v18 = *a3;
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(void *)(a8 + 16) = v10;
  *(void *)(a8 + 24) = v11;
  *(void *)(a8 + 32) = v12;
  *(void *)(a8 + 40) = v13;
  *(_WORD *)(a8 + 48) = v14;
  *(_DWORD *)(a8 + 52) = v15;
  *(void *)(a8 + 56) = v16;
  *(void *)(a8 + 64) = v17;
  *(void *)(a8 + 72) = v18;
  long long v19 = a4[1];
  *(_OWORD *)(a8 + 80) = *a4;
  *(_OWORD *)(a8 + 96) = v19;
  long long v20 = a4[3];
  *(_OWORD *)(a8 + 112) = a4[2];
  *(_OWORD *)(a8 + 128) = v20;
  long long v21 = a4[5];
  *(_OWORD *)(a8 + 144) = a4[4];
  *(_OWORD *)(a8 + 160) = v21;
  long long v22 = a5[1];
  *(_OWORD *)(a8 + 176) = *a5;
  *(_OWORD *)(a8 + 192) = v22;
  long long v23 = *a6;
  long long v24 = a6[1];
  *(_OWORD *)(a8 + 208) = a5[2];
  *(_OWORD *)(a8 + 224) = v23;
  long long v25 = a6[2];
  *(_OWORD *)(a8 + 240) = v24;
  *(_OWORD *)(a8 + 256) = v25;
  uint64_t v26 = a8 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 40);
  uint64_t v27 = sub_27D7C0();
  float v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a7, v27);
}

uint64_t sub_B0C98(char a1)
{
  uint64_t result = 0x6144686372616573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 0xD000000000000011;
      break;
    case 3:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 4:
      uint64_t result = 0x6144736569726573;
      break;
    case 5:
      uint64_t v3 = 0x4465726E6567;
      goto LABEL_8;
    case 6:
      uint64_t v3 = 0x44746E657665;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B0D90()
{
  return sub_B0C98(*v0);
}

uint64_t sub_B0D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B47D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B0DC0(uint64_t a1)
{
  unint64_t v2 = sub_B1174();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B0DFC(uint64_t a1)
{
  unint64_t v2 = sub_B1174();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchResultSelectEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31A218);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B1174();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  long long v22 = *v3;
  *(void *)&long long v23 = v9;
  *((void *)&v23 + 1) = v10;
  char v28 = 0;
  sub_B11C8();
  sub_27E330();
  if (!v2)
  {
    uint64_t v11 = *((void *)v3 + 5);
    __int16 v12 = *((_WORD *)v3 + 24);
    int v13 = *((_DWORD *)v3 + 13);
    uint64_t v14 = *((void *)v3 + 7);
    uint64_t v15 = *((void *)v3 + 8);
    *(void *)&long long v22 = *((void *)v3 + 4);
    *((void *)&v22 + 1) = v11;
    LOWORD(v23) = v12;
    DWORD1(v23) = v13;
    *((void *)&v23 + 1) = v14;
    *(void *)&long long v24 = v15;
    char v28 = 1;
    sub_B121C();
    sub_27E330();
    *(void *)&long long v22 = *((void *)v3 + 9);
    char v28 = 2;
    sub_B1270();
    sub_27E330();
    long long v16 = v3[6];
    long long v22 = v3[5];
    long long v23 = v16;
    long long v17 = v3[8];
    long long v24 = v3[7];
    long long v25 = v17;
    long long v18 = v3[10];
    long long v26 = v3[9];
    long long v27 = v18;
    char v28 = 3;
    sub_1A1D4();
    sub_27E2C0();
    long long v19 = v3[12];
    long long v22 = v3[11];
    long long v23 = v19;
    long long v24 = v3[13];
    char v28 = 4;
    sub_11514();
    sub_27E2C0();
    long long v20 = v3[15];
    long long v22 = v3[14];
    long long v23 = v20;
    long long v24 = v3[16];
    char v28 = 5;
    sub_B12C4();
    sub_27E2C0();
    type metadata accessor for SearchResultSelectEvent.Model(0);
    LOBYTE(v22) = 6;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_B1174()
{
  unint64_t result = qword_31A220;
  if (!qword_31A220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A220);
  }
  return result;
}

unint64_t sub_B11C8()
{
  unint64_t result = qword_31A228;
  if (!qword_31A228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A228);
  }
  return result;
}

unint64_t sub_B121C()
{
  unint64_t result = qword_31A230;
  if (!qword_31A230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A230);
  }
  return result;
}

unint64_t sub_B1270()
{
  unint64_t result = qword_31A238;
  if (!qword_31A238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A238);
  }
  return result;
}

unint64_t sub_B12C4()
{
  unint64_t result = qword_31A240;
  if (!qword_31A240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A240);
  }
  return result;
}

uint64_t SearchResultSelectEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_4E04(&qword_31A248);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchResultSelectEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B1174();
  uint64_t v30 = v7;
  uint64_t v11 = (uint64_t)v31;
  sub_27E430();
  if (v11) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v24 = v8;
  long long v25 = v5;
  uint64_t v31 = a1;
  uint64_t v12 = v27;
  uint64_t v13 = v28;
  char v38 = 0;
  sub_B1968();
  uint64_t v14 = v29;
  sub_27E260();
  long long v15 = v33;
  *(_OWORD *)uint64_t v10 = v32;
  *((_OWORD *)v10 + 1) = v15;
  char v38 = 1;
  sub_B19BC();
  sub_27E260();
  uint64_t v16 = *((void *)&v32 + 1);
  __int16 v17 = v33;
  int v18 = DWORD1(v33);
  uint64_t v19 = *((void *)&v33 + 1);
  uint64_t v20 = v34;
  *((void *)v10 + 4) = v32;
  *((void *)v10 + 5) = v16;
  *((_WORD *)v10 + 24) = v17;
  *((_DWORD *)v10 + 13) = v18;
  *((void *)v10 + 7) = v19;
  *((void *)v10 + 8) = v20;
  char v38 = 2;
  sub_B1A10();
  sub_27E260();
  *((void *)v10 + 9) = v32;
  char v38 = 3;
  sub_1A98C();
  sub_27E1F0();
  *(_OWORD *)&stru_20.filesize = v32;
  *(_OWORD *)&stru_20.nsects = v33;
  *(_OWORD *)&stru_68.sectname[8] = v34;
  *(_OWORD *)&stru_68.segname[8] = v35;
  *(_OWORD *)&stru_68.size = v36;
  *(_OWORD *)&stru_68.reloff = v37;
  char v38 = 4;
  sub_11A3C();
  sub_27E1F0();
  *(_OWORD *)&stru_68.reserved2 = v32;
  *(_OWORD *)&stru_B8.sectname[8] = v33;
  *(_OWORD *)&stru_B8.segname[8] = v34;
  char v38 = 5;
  sub_B1A64();
  sub_27E1F0();
  v23[1] = 0;
  *(_OWORD *)&stru_B8.size = v32;
  *(_OWORD *)&stru_B8.reloff = v33;
  *(_OWORD *)&stru_B8.reserved2 = v34;
  LOBYTE(v32) = 6;
  sub_1AB30(&qword_315E28);
  long long v21 = v25;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v14);
  (*(void (**)(void, char *, uint64_t))(v26 + 32))(*(int *)(v24 + 40), v21, v3);
  sub_B1AB8(0, v13);
  sub_5E94((uint64_t)v31);
  return sub_B1B1C(0);
}

unint64_t sub_B1968()
{
  unint64_t result = qword_31A250;
  if (!qword_31A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A250);
  }
  return result;
}

unint64_t sub_B19BC()
{
  unint64_t result = qword_31A258;
  if (!qword_31A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A258);
  }
  return result;
}

unint64_t sub_B1A10()
{
  unint64_t result = qword_31A260;
  if (!qword_31A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A260);
  }
  return result;
}

unint64_t sub_B1A64()
{
  unint64_t result = qword_31A268;
  if (!qword_31A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A268);
  }
  return result;
}

uint64_t sub_B1AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B1B1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B1B78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultSelectEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_B1B90(void *a1)
{
  return SearchResultSelectEvent.Model.encode(to:)(a1);
}

uint64_t sub_B1BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315760, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A1C8, a1);
}

uint64_t sub_B1BE0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315768, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A1E0, a1);
}

uint64_t sub_B1C18@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.optional<A>(_:);
  uint64_t v12 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31A200);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31A208);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_31A210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B2C24);
}

uint64_t sub_B2C24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31A200);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = sub_4E04(&qword_31A208);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  uint64_t v15 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B2ED0);
}

uint64_t sub_B2ED0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31A200);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_4E04(&qword_31A208);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  uint64_t v17 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  uint64_t v18 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  uint64_t v19 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v21 = sub_4E04(&qword_315DE0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_B3174()
{
  sub_B34B8(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
  if (v0 <= 0x3F)
  {
    sub_B34B8(319, &qword_31A2E0, (void (*)(void))sub_B19BC, (void (*)(void))sub_B121C);
    if (v1 <= 0x3F)
    {
      sub_B34B8(319, &qword_31A2E8, (void (*)(void))sub_B1A10, (void (*)(void))sub_B1270);
      if (v2 <= 0x3F)
      {
        sub_B34B8(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
        if (v3 <= 0x3F)
        {
          sub_B34B8(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
          if (v4 <= 0x3F)
          {
            sub_B34B8(319, (unint64_t *)&unk_31A2F0, (void (*)(void))sub_B1A64, (void (*)(void))sub_B12C4);
            if (v5 <= 0x3F)
            {
              sub_6DA0();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_B34B8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SearchResultSelectEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_DWORD *)(a1 + 52) = *((_DWORD *)a2 + 13);
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v11 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v11;
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      uint64_t v12 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v12;
      uint64_t v13 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v13;
      *(_WORD *)(a1 + 136) = *((_WORD *)a2 + 68);
      *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_DWORD *)(a1 + 153) = *(_DWORD *)((char *)a2 + 153);
      *(unsigned char *)(a1 + 157) = *((unsigned char *)a2 + 157);
      uint64_t v14 = a2[21];
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      long long v17 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v17;
      long long v18 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v18;
    }
    uint64_t v19 = a2[27];
    if (v19 == 1)
    {
      long long v20 = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 192) = v20;
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      uint64_t v21 = a2[29];
      if (v21)
      {
LABEL_8:
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v21;
        uint64_t v22 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v22;
        uint64_t v23 = a2[33];
        *(void *)(a1 + 256) = a2[32];
        *(void *)(a1 + 264) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        uint64_t v25 = *(int *)(a3 + 40);
        uint64_t v26 = a1 + v25;
        uint64_t v27 = (uint64_t)a2 + v25;
        uint64_t v28 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        return a1;
      }
    }
    else
    {
      *(void *)(a1 + 176) = a2[22];
      *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
      *(void *)(a1 + 192) = a2[24];
      *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
      *(_WORD *)(a1 + 201) = *(_WORD *)((char *)a2 + 201);
      *(void *)(a1 + 208) = a2[26];
      *(void *)(a1 + 216) = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = a2[29];
      if (v21) {
        goto LABEL_8;
      }
    }
    long long v24 = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    goto LABEL_11;
  }
  uint64_t v15 = *a2;
  *(void *)a1 = *a2;
  a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for SearchResultSelectEvent.Model(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[27] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[29])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v10;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    uint64_t v11 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v12;
    *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_DWORD *)(a1 + 153) = *(_DWORD *)(a2 + 153);
    *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
    uint64_t v13 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    long long v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    long long v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v16;
  }
  uint64_t v17 = *(void *)(a2 + 216);
  if (v17 != 1)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = *(void *)(a2 + 232);
    if (v19) {
      goto LABEL_6;
    }
LABEL_8:
    long long v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_9;
  }
  long long v18 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v18;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v19 = *(void *)(a2 + 232);
  if (!v19) {
    goto LABEL_8;
  }
LABEL_6:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  uint64_t v20 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v20;
  uint64_t v21 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v23 = *(int *)(a3 + 40);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 80);
  uint64_t v7 = (_OWORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v8)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
      int v9 = *(_DWORD *)(a2 + 140);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_DWORD *)(a1 + 140) = v9;
      int v10 = *(_DWORD *)(a2 + 148);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_DWORD *)(a1 + 148) = v10;
      *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
      *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
      *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
      *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
      *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 80);
      long long v13 = *(_OWORD *)(a2 + 96);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 96) = v13;
      long long v14 = *(_OWORD *)(a2 + 160);
      long long v16 = *(_OWORD *)(a2 + 112);
      long long v15 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 112) = v16;
      *(_OWORD *)(a1 + 128) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
    int v11 = *(_DWORD *)(a2 + 140);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 140) = v11;
    int v12 = *(_DWORD *)(a2 + 148);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_DWORD *)(a1 + 148) = v12;
    *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
    *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
    *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
    *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
    *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 96);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 96) = v17;
    long long v18 = *(_OWORD *)(a2 + 112);
    long long v19 = *(_OWORD *)(a2 + 128);
    long long v20 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v20;
    *(_OWORD *)(a1 + 112) = v18;
    *(_OWORD *)(a1 + 128) = v19;
  }
  uint64_t v21 = (long long *)(a1 + 176);
  long long v22 = (long long *)(a2 + 176);
  uint64_t v23 = *(void *)(a2 + 216);
  if (*(void *)(a1 + 216) == 1)
  {
    if (v23 == 1)
    {
      long long v24 = *v22;
      long long v25 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v25;
      *uint64_t v21 = v24;
    }
    else
    {
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
      *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
    }
  }
  else if (v23 == 1)
  {
    sub_1CDD8(a1 + 176);
    long long v27 = *(_OWORD *)(a2 + 192);
    long long v26 = *(_OWORD *)(a2 + 208);
    *uint64_t v21 = *v22;
    *(_OWORD *)(a1 + 192) = v27;
    *(_OWORD *)(a1 + 208) = v26;
  }
  else
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
    *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = (_OWORD *)(a1 + 224);
  uint64_t v29 = (_OWORD *)(a2 + 224);
  uint64_t v30 = *(void *)(a2 + 232);
  if (*(void *)(a1 + 232))
  {
    if (v30)
    {
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B3FFC(a1 + 224);
      long long v32 = *(_OWORD *)(a2 + 240);
      long long v31 = *(_OWORD *)(a2 + 256);
      *uint64_t v28 = *v29;
      *(_OWORD *)(a1 + 240) = v32;
      *(_OWORD *)(a1 + 256) = v31;
    }
  }
  else if (v30)
  {
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *v29;
    long long v34 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v34;
    *uint64_t v28 = v33;
  }
  uint64_t v35 = *(int *)(a3 + 40);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t sub_B3FFC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  long long v11 = *(_OWORD *)(a2 + 208);
  long long v12 = *(_OWORD *)(a2 + 224);
  long long v13 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v13;
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 224) = v12;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    uint64_t v10 = *(void *)(a2 + 88);
    if (v10)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v11 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v12;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
      *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_DWORD *)(a1 + 153) = *(_DWORD *)(a2 + 153);
      *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
      uint64_t v13 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_62898(a1 + 80);
  }
  long long v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  long long v15 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v15;
  long long v16 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v16;
LABEL_6:
  if (*(void *)(a1 + 216) == 1)
  {
LABEL_9:
    long long v18 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v18;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    goto LABEL_11;
  }
  uint64_t v17 = *(void *)(a2 + 216);
  if (v17 == 1)
  {
    sub_1CDD8(a1 + 176);
    goto LABEL_9;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  swift_bridgeObjectRelease();
LABEL_11:
  if (!*(void *)(a1 + 232))
  {
LABEL_15:
    long long v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_16;
  }
  uint64_t v19 = *(void *)(a2 + 232);
  if (!v19)
  {
    sub_B3FFC(a1 + 224);
    goto LABEL_15;
  }
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v21;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v23 = *(int *)(a3 + 40);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B438C);
}

uint64_t sub_B438C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B4450);
}

uint64_t sub_B4450(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_B44F8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchResultSelectEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB4690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultSelectEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultSelectEvent.Model.CodingKeys;
}

unint64_t sub_B46CC()
{
  unint64_t result = qword_31A3E0;
  if (!qword_31A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A3E0);
  }
  return result;
}

unint64_t sub_B4724()
{
  unint64_t result = qword_31A3E8;
  if (!qword_31A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A3E8);
  }
  return result;
}

unint64_t sub_B477C()
{
  unint64_t result = qword_31A3F0;
  if (!qword_31A3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A3F0);
  }
  return result;
}

uint64_t sub_B47D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AEBB0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AEBD0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614465726E6567 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BookAnalytics::SkipActionType_optional __swiftcall SkipActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7E78;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SkipActionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61546E6F74747562;
      break;
    case 2:
      uint64_t result = 0x6E69626275726373;
      break;
    case 3:
      uint64_t result = 0x6172447265766F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B4BD4(unsigned __int8 *a1, char *a2)
{
  return sub_2C758(*a1, *a2);
}

unint64_t sub_B4BE4()
{
  unint64_t result = qword_31A3F8;
  if (!qword_31A3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A3F8);
  }
  return result;
}

Swift::Int sub_B4C38()
{
  return sub_27E420();
}

uint64_t sub_B4D1C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_B4DE8()
{
  return sub_27E420();
}

BookAnalytics::SkipActionType_optional sub_B4EC8(Swift::String *a1)
{
  return SkipActionType.init(rawValue:)(*a1);
}

void sub_B4ED4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000070;
      uint64_t v3 = 0x61546E6F74747562;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x6E69626275726373;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x6172447265766F63;
LABEL_6:
      *a1 = v4;
      a1[1] = 0xE900000000000067;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_B4F74()
{
  return sub_27DED0();
}

uint64_t sub_B4FD4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SkipActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB50F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkipActionType()
{
  return &type metadata for SkipActionType;
}

unint64_t sub_B5128()
{
  unint64_t result = qword_31A400;
  if (!qword_31A400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A400);
  }
  return result;
}

uint64_t ContentType.init(assetType:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0x30102u >> (8 * result);
  return result;
}

uint64_t ReadingGoalsDurationData.currentGoalDuration.getter()
{
  return *(void *)v0;
}

uint64_t ReadingGoalsDurationData.currentGoalDuration.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

BookAnalytics::SessionReadingData __swiftcall SessionReadingData.init(timeSpentReading:uniqueBooksRead:)(Swift::Int64 timeSpentReading, Swift::Int32 uniqueBooksRead)
{
  *(void *)uint64_t v2 = timeSpentReading;
  *(_DWORD *)(v2 + 8) = uniqueBooksRead;
  result.timeSpentReading = timeSpentReading;
  result.uniqueBooksRead = uniqueBooksRead;
  return result;
}

BOOL static SessionReadingData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t sub_B51D4()
{
  if (*v0) {
    return 0x6F42657571696E75;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_B5220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B5930(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B5248(uint64_t a1)
{
  unint64_t v2 = sub_B542C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B5284(uint64_t a1)
{
  unint64_t v2 = sub_B542C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionReadingData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31A408);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_B542C();
  sub_27E440();
  char v12 = 0;
  sub_27E350();
  if (!v2)
  {
    char v11 = 1;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_B542C()
{
  unint64_t result = qword_31A410;
  if (!qword_31A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A410);
  }
  return result;
}

uint64_t SessionReadingData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A418);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B542C();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_27E280();
    char v13 = 1;
    int v10 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_B5624()
{
  unint64_t result = qword_31A420;
  if (!qword_31A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A420);
  }
  return result;
}

unint64_t sub_B567C()
{
  unint64_t result = qword_31A428;
  if (!qword_31A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A428);
  }
  return result;
}

uint64_t sub_B56D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionReadingData.init(from:)(a1, a2);
}

uint64_t sub_B56E8(void *a1)
{
  return SessionReadingData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionReadingData(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for SessionReadingData()
{
  return &type metadata for SessionReadingData;
}

unsigned char *storeEnumTagSinglePayload for SessionReadingData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB57F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionReadingData.CodingKeys()
{
  return &type metadata for SessionReadingData.CodingKeys;
}

unint64_t sub_B582C()
{
  unint64_t result = qword_31A430;
  if (!qword_31A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A430);
  }
  return result;
}

unint64_t sub_B5884()
{
  unint64_t result = qword_31A438;
  if (!qword_31A438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A438);
  }
  return result;
}

unint64_t sub_B58DC()
{
  unint64_t result = qword_31A440;
  if (!qword_31A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A440);
  }
  return result;
}

uint64_t sub_B5930(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002AEBF0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F42657571696E75 && a2 == 0xEF64616552736B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_B5A48()
{
  if (*v0) {
    return 0x6553686372616573;
  }
  else {
    return 0x7453686372616573;
  }
}

uint64_t sub_B5A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B6288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B5AC0(uint64_t a1)
{
  unint64_t v2 = sub_B5F88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B5AFC(uint64_t a1)
{
  unint64_t v2 = sub_B5F88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31A448);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_B5F88();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A458);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B5F88();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  long long v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_B5EB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchData.init(from:)(a1, a2);
}

uint64_t sub_B5ECC(void *a1)
{
  return SearchData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics9ErrorDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_27E370(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_27E370();
    }
  }
  return result;
}

unint64_t sub_B5F88()
{
  unint64_t result = qword_31A450;
  if (!qword_31A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A450);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ErrorData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchData()
{
  return &type metadata for SearchData;
}

unsigned char *storeEnumTagSinglePayload for SearchData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB6148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchData.CodingKeys()
{
  return &type metadata for SearchData.CodingKeys;
}

unint64_t sub_B6184()
{
  unint64_t result = qword_31A460;
  if (!qword_31A460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A460);
  }
  return result;
}

unint64_t sub_B61DC()
{
  unint64_t result = qword_31A468;
  if (!qword_31A468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A468);
  }
  return result;
}

unint64_t sub_B6234()
{
  unint64_t result = qword_31A470;
  if (!qword_31A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A470);
  }
  return result;
}

uint64_t sub_B6288(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7453686372616573 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553686372616573 && a2 == 0xEF44496E6F697373)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::SelectionType_optional __swiftcall SelectionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7EF8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SelectionType.rawValue.getter()
{
  uint64_t v1 = 1802465122;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6F626F69647561;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_B646C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2FB50(*a1, *a2);
}

unint64_t sub_B647C()
{
  unint64_t result = qword_31A478;
  if (!qword_31A478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A478);
  }
  return result;
}

Swift::Int sub_B64D0()
{
  return sub_27E420();
}

uint64_t sub_B6570()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_B65FC()
{
  return sub_27E420();
}

BookAnalytics::SelectionType_optional sub_B6698(Swift::String *a1)
{
  return SelectionType.init(rawValue:)(*a1);
}

void sub_B66A4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1802465122;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F6F626F69647561;
    unint64_t v4 = 0xE90000000000006BLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_B6700()
{
  return sub_27DED0();
}

uint64_t sub_B6760()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SelectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB687CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectionType()
{
  return &type metadata for SelectionType;
}

unint64_t sub_B68B4()
{
  unint64_t result = qword_31A480;
  if (!qword_31A480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A480);
  }
  return result;
}

BookAnalytics::UpSellData __swiftcall UpSellData.init(upSellLocation:upSellVariant:upSellVariantVersion:)(BookAnalytics::UpSellLocation upSellLocation, BookAnalytics::UpSellVariant upSellVariant, Swift::String upSellVariantVersion)
{
  char v4 = *(unsigned char *)upSellVariant;
  *(unsigned char *)uint64_t v3 = *(unsigned char *)upSellLocation;
  *(unsigned char *)(v3 + 1) = v4;
  *(Swift::String *)(v3 + 8) = upSellVariantVersion;
  result.upSellVariantVersion._object = (void *)upSellVariantVersion._countAndFlagsBits;
  LOBYTE(result.upSellVariantVersion._countAndFlagsBits) = upSellVariant;
  result.upSellLocation = upSellLocation;
  return result;
}

uint64_t sub_B6924()
{
  unint64_t v1 = 0x61566C6C65537075;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F4C6C6C65537075;
  }
}

uint64_t sub_B699C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B7514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B69C4(uint64_t a1)
{
  unint64_t v2 = sub_B6FDC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B6A00(uint64_t a1)
{
  unint64_t v2 = sub_B6FDC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UpSellData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31A488);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v12 = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  v11[1] = *((void *)v1 + 2);
  _OWORD v11[2] = v9;
  sub_5900(a1, a1[3]);
  sub_B6FDC();
  sub_27E440();
  char v17 = v8;
  char v16 = 0;
  sub_B7030();
  sub_27E330();
  if (!v2)
  {
    char v15 = v12;
    char v14 = 1;
    sub_B7084();
    sub_27E330();
    char v13 = 2;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UpSellData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A4A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B6FDC();
  sub_27E430();
  if (!v2)
  {
    char v19 = 0;
    sub_B70D8();
    sub_27E260();
    char v9 = v20;
    char v17 = 1;
    sub_B712C();
    sub_27E260();
    int v15 = v18;
    char v16 = 2;
    uint64_t v11 = sub_27E220();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(unsigned char *)(a2 + 1) = v15;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_B6E20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UpSellData.init(from:)(a1, a2);
}

uint64_t sub_B6E38(void *a1)
{
  return UpSellData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics10UpSellDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  if ((sub_3156C(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = 0x6E6F43664F646E65;
  unint64_t v9 = 0xEC000000746E6574;
  if (v2 != 1)
  {
    uint64_t v8 = 0x6F6F42664F646E65;
    unint64_t v9 = 0xE90000000000006BLL;
  }
  if (v2) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = 0xE700000000000000;
  }
  uint64_t v12 = 0x6E6F43664F646E65;
  unint64_t v13 = 0xEC000000746E6574;
  if (v5 != 1)
  {
    uint64_t v12 = 0x6F6F42664F646E65;
    unint64_t v13 = 0xE90000000000006BLL;
  }
  if (v5) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 0x6E776F6E6B6E75;
  }
  if (v5) {
    unint64_t v15 = v13;
  }
  else {
    unint64_t v15 = 0xE700000000000000;
  }
  if (v10 == v14 && v11 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_27E370();
}

unint64_t sub_B6FDC()
{
  unint64_t result = qword_31A490;
  if (!qword_31A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A490);
  }
  return result;
}

unint64_t sub_B7030()
{
  unint64_t result = qword_31A498;
  if (!qword_31A498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A498);
  }
  return result;
}

unint64_t sub_B7084()
{
  unint64_t result = qword_31A4A0;
  if (!qword_31A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4A0);
  }
  return result;
}

unint64_t sub_B70D8()
{
  unint64_t result = qword_31A4B0;
  if (!qword_31A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4B0);
  }
  return result;
}

unint64_t sub_B712C()
{
  unint64_t result = qword_31A4B8;
  if (!qword_31A4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4B8);
  }
  return result;
}

uint64_t destroy for UpSellData()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13BookAnalytics10UpSellDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpSellData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for UpSellData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UpSellData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpSellData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpSellData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpSellData()
{
  return &type metadata for UpSellData;
}

unsigned char *storeEnumTagSinglePayload for UpSellData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB73D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpSellData.CodingKeys()
{
  return &type metadata for UpSellData.CodingKeys;
}

unint64_t sub_B7410()
{
  unint64_t result = qword_31A4C0;
  if (!qword_31A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4C0);
  }
  return result;
}

unint64_t sub_B7468()
{
  unint64_t result = qword_31A4C8;
  if (!qword_31A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4C8);
  }
  return result;
}

unint64_t sub_B74C0()
{
  unint64_t result = qword_31A4D0;
  if (!qword_31A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4D0);
  }
  return result;
}

uint64_t sub_B7514(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4C6C6C65537075 && a2 == 0xEE006E6F69746163;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61566C6C65537075 && a2 == 0xED0000746E616972 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AEC10)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::PurchaseMethod_optional __swiftcall PurchaseMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7F60;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t PurchaseMethod.rawValue.getter()
{
  uint64_t v1 = 0x6143746964657263;
  if (*v0 != 1) {
    uint64_t v1 = 0x6974706D65646572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_B7778(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_31FC8(*a1, *a2);
}

unint64_t sub_B7788()
{
  unint64_t result = qword_31A4D8;
  if (!qword_31A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4D8);
  }
  return result;
}

Swift::Int sub_B77DC()
{
  return sub_27E420();
}

uint64_t sub_B7890()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_B7930()
{
  return sub_27E420();
}

BookAnalytics::PurchaseMethod_optional sub_B79E0(Swift::String *a1)
{
  return PurchaseMethod.init(rawValue:)(*a1);
}

void sub_B79EC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEA00000000006472;
  uint64_t v5 = 0x6143746964657263;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6974706D65646572;
    unint64_t v4 = 0xEE0065646F436E6FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_B7A5C()
{
  return sub_27DED0();
}

uint64_t sub_B7ABC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for PurchaseMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB7BD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseMethod()
{
  return &type metadata for PurchaseMethod;
}

unint64_t sub_B7C10()
{
  unint64_t result = qword_31A4E0;
  if (!qword_31A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4E0);
  }
  return result;
}

BookAnalytics::MarkedData __swiftcall MarkedData.init(isFinishedDateSet:)(BookAnalytics::MarkedData isFinishedDateSet)
{
  v1->isFinishedDateSet.value = isFinishedDateSet.isFinishedDateSet.value;
  return isFinishedDateSet;
}

uint64_t OnDevicePersonalizationPropertyData.isEligible.getter()
{
  return *v0;
}

uint64_t OnDevicePersonalizationPropertyData.isEligible.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t static MarkedData.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2)
  {
    if (v3 == 2) {
      return 1;
    }
  }
  else
  {
    BOOL v5 = (v2 & 1) == 0;
    if (v3 != 2 && ((v5 ^ v3) & 1) != 0) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_B7CC4()
{
  return 0xD000000000000011;
}

uint64_t sub_B7CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B84F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_B7D0C(uint64_t a1)
{
  unint64_t v2 = sub_B7EB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B7D48(uint64_t a1)
{
  unint64_t v2 = sub_B7EB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MarkedData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31A4E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B7EB8();
  sub_27E440();
  sub_27E2A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_B7EB8()
{
  unint64_t result = qword_31A4F0;
  if (!qword_31A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A4F0);
  }
  return result;
}

uint64_t MarkedData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A4F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B7EB8();
  sub_27E430();
  if (!v2)
  {
    char v9 = sub_27E1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_B8060()
{
  unint64_t result = qword_31A500;
  if (!qword_31A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A500);
  }
  return result;
}

unint64_t sub_B80B8()
{
  unint64_t result = qword_31A508;
  if (!qword_31A508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A508);
  }
  return result;
}

BOOL sub_B810C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 != 2)
  {
    BOOL v4 = (v2 & 1) == 0;
    return v3 != 2 && ((v4 ^ v3) & 1) != 0;
  }
  return v3 == 2;
}

uint64_t sub_B8150@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MarkedData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for MarkedData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *storeEnumTagSinglePayload for MarkedData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB82E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkedData()
{
  return &type metadata for MarkedData;
}

unsigned char *storeEnumTagSinglePayload for MarkedData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xB83B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkedData.CodingKeys()
{
  return &type metadata for MarkedData.CodingKeys;
}

unint64_t sub_B83F0()
{
  unint64_t result = qword_31A510;
  if (!qword_31A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A510);
  }
  return result;
}

unint64_t sub_B8448()
{
  unint64_t result = qword_31A518;
  if (!qword_31A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A518);
  }
  return result;
}

unint64_t sub_B84A0()
{
  unint64_t result = qword_31A520;
  if (!qword_31A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A520);
  }
  return result;
}

uint64_t sub_B84F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AEC30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_B857C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31A528, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315770, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A528, a1);
}

uint64_t sub_B85DC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31A540, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315778, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A540, a1);
}

uint64_t SearchEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31A5C8);
}

uint64_t SearchEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

uint64_t SearchResultsReturnedEvent.Model.searchData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_409E0(v2, v3);
}

uint64_t SearchEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31A658);
}

uint64_t SearchEvent.Model.init(searchData:eventData:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  uint64_t v5 = (char *)a3 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20);
  uint64_t v6 = sub_27D7C0();
  int v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_B89A0()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x6144686372616573;
  }
}

uint64_t sub_B89E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_BA288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B8A0C(uint64_t a1)
{
  unint64_t v2 = sub_B8C40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B8A48(uint64_t a1)
{
  unint64_t v2 = sub_B8C40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31A558);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_B8C40();
  sub_27E440();
  long long v9 = v3[1];
  long long v12 = *v3;
  long long v13 = v9;
  v11[15] = 0;
  sub_B11C8();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for SearchEvent.Model(0);
    LOBYTE(v12) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_B8C40()
{
  unint64_t result = qword_31A560;
  if (!qword_31A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A560);
  }
  return result;
}

uint64_t SearchEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_31A568);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_B8C40();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = v8;
  uint64_t v12 = v20;
  uint64_t v11 = v21;
  long long v13 = v10;
  char v25 = 0;
  sub_B1968();
  uint64_t v14 = v22;
  sub_27E1F0();
  long long v15 = v24;
  *(_OWORD *)long long v13 = v23;
  *((_OWORD *)v13 + 1) = v15;
  LOBYTE(v23) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v13[*(int *)(v17 + 20)], v5, v11);
  sub_B8FA4((uint64_t)v13, v19);
  sub_5E94((uint64_t)a1);
  return sub_B9008((uint64_t)v13);
}

uint64_t sub_B8FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B9008(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B9064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_B907C(void *a1)
{
  return SearchEvent.Model.encode(to:)(a1);
}

uint64_t sub_B9094@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315770, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A528, a1);
}

uint64_t sub_B90CC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315778, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A540, a1);
}

uint64_t sub_B9104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SearchEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B96B0);
}

uint64_t sub_B96B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B97C4);
}

uint64_t sub_B97C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_B98D0()
{
  sub_B9998();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_B9998()
{
  if (!qword_31A2D8)
  {
    sub_B1968();
    sub_B11C8();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31A2D8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SearchEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v10;
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_27D7C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for SearchEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for SearchEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void *assignWithCopy for SearchEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B9D48((uint64_t)a1);
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_B9D48(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_B9D48(a1);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B9E6C);
}

uint64_t sub_B9E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B9F3C);
}

uint64_t sub_B9F3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_B9FE4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBA148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEvent.Model.CodingKeys()
{
  return &type metadata for SearchEvent.Model.CodingKeys;
}

unint64_t sub_BA184()
{
  unint64_t result = qword_31A690;
  if (!qword_31A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A690);
  }
  return result;
}

unint64_t sub_BA1DC()
{
  unint64_t result = qword_31A698;
  if (!qword_31A698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A698);
  }
  return result;
}

unint64_t sub_BA234()
{
  unint64_t result = qword_31A6A0;
  if (!qword_31A6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6A0);
  }
  return result;
}

uint64_t sub_BA288(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::PrevAltContentExposureData __swiftcall PrevAltContentExposureData.init(prevExposureType:prevExposureTypeView:)(BookAnalytics::ExposureType prevExposureType, BookAnalytics::ExposureTypeView prevExposureTypeView)
{
  char v3 = *(unsigned char *)prevExposureTypeView;
  *BOOL v2 = *(unsigned char *)prevExposureType;
  v2[1] = v3;
  result.prevExposureType = prevExposureType;
  return result;
}

uint64_t static ListeningActionSourceData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  unsigned __int8 v2 = a1[1];
  char v3 = a2[1];
  if ((sub_2EB24(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2EDA0(v2, v3);
}

unint64_t sub_BA404()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_BA444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_BADD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_BA46C(uint64_t a1)
{
  unint64_t v2 = sub_BA67C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA4A8(uint64_t a1)
{
  unint64_t v2 = sub_BA67C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListeningActionSourceData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31A6A8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_BA67C();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_BA6D0();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_BA724();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_BA67C()
{
  unint64_t result = qword_31A6B0;
  if (!qword_31A6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6B0);
  }
  return result;
}

unint64_t sub_BA6D0()
{
  unint64_t result = qword_31A6B8;
  if (!qword_31A6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6B8);
  }
  return result;
}

unint64_t sub_BA724()
{
  unint64_t result = qword_31A6C0;
  if (!qword_31A6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6C0);
  }
  return result;
}

uint64_t ListeningActionSourceData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31A6C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_BA67C();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_BA948();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_BA99C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_BA948()
{
  unint64_t result = qword_31A6D0;
  if (!qword_31A6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6D0);
  }
  return result;
}

unint64_t sub_BA99C()
{
  unint64_t result = qword_31A6D8;
  if (!qword_31A6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6D8);
  }
  return result;
}

uint64_t sub_BA9F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ListeningActionSourceData.init(from:)(a1, a2);
}

uint64_t sub_BAA10(void *a1)
{
  return ListeningActionSourceData.encode(to:)(a1);
}

_WORD *initializeBufferWithCopyOfBuffer for ListeningActionSourceData(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ListeningActionSourceData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 65287 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65287 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65287;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65287;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65287;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ListeningActionSourceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65287 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65287 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 249;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBAB94);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningActionSourceData()
{
  return &type metadata for ListeningActionSourceData;
}

unsigned char *storeEnumTagSinglePayload for ListeningActionSourceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBAC98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningActionSourceData.CodingKeys()
{
  return &type metadata for ListeningActionSourceData.CodingKeys;
}

unint64_t sub_BACD4()
{
  unint64_t result = qword_31A6E0;
  if (!qword_31A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6E0);
  }
  return result;
}

unint64_t sub_BAD2C()
{
  unint64_t result = qword_31A6E8;
  if (!qword_31A6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6E8);
  }
  return result;
}

unint64_t sub_BAD84()
{
  unint64_t result = qword_31A6F0;
  if (!qword_31A6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A6F0);
  }
  return result;
}

uint64_t sub_BADD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000000002AEC50 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AEC70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_BAEC4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31A6F8, &enum case for SessionGroup.default(_:));
}

uint64_t static ResetThemeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315780, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A6F8, a1);
}

uint64_t sub_BAF24(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31A710, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ResetThemeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315788, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A710, a1);
}

uint64_t ResetThemeEvent.textData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316020);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ResetThemeEvent.textData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316020);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ResetThemeEvent.layoutOptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResetThemeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316028);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ResetThemeEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31A798);
}

uint64_t ResetThemeEvent.layoutOptionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResetThemeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316028);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ResetThemeEvent.layoutOptionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ResetThemeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResetThemeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ResetThemeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResetThemeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ResetThemeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ResetThemeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ResetThemeEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = enum case for EventProperty.required<A>(_:);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v7, v8, v9);
}

uint64_t ResetThemeEvent.Model.textData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

__n128 ResetThemeEvent.Model.layoutOptionData.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 36);
  unsigned __int16 v3 = *(_WORD *)(v1 + 44);
  __n128 result = *(__n128 *)(v1 + 20);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u16[4] = v3;
  return result;
}

uint64_t ResetThemeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResetThemeEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ResetThemeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31A830);
}

uint64_t ResetThemeEvent.Model.init(textData:layoutOptionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *(unsigned char *)(a1 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  __int16 v8 = *(_WORD *)(a2 + 24);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 20) = *(_OWORD *)a2;
  *(void *)(a4 + 36) = v7;
  *(_WORD *)(a4 + 44) = v8;
  uint64_t v9 = a4 + *(int *)(type metadata accessor for ResetThemeEvent.Model(0) + 24);
  uint64_t v10 = sub_27D7C0();
  int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a3, v10);
}

uint64_t sub_BB590()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6174614474786574;
  }
}

uint64_t sub_BB5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_BD2D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_BB61C(uint64_t a1)
{
  unint64_t v2 = sub_BB8A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BB658(uint64_t a1)
{
  unint64_t v2 = sub_BB8A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ResetThemeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31A728);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __int16 v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_BB8A8();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 16);
  long long v13 = *v3;
  LOBYTE(v14) = v9;
  char v16 = 0;
  sub_9948();
  sub_27E2C0();
  if (!v2)
  {
    uint64_t v10 = *(void *)((char *)v3 + 36);
    __int16 v11 = *((_WORD *)v3 + 22);
    long long v13 = *(long long *)((char *)v3 + 20);
    uint64_t v14 = v10;
    __int16 v15 = v11;
    char v16 = 1;
    sub_999C();
    sub_27E2C0();
    type metadata accessor for ResetThemeEvent.Model(0);
    LOBYTE(v13) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_BB8A8()
{
  unint64_t result = qword_31A730;
  if (!qword_31A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A730);
  }
  return result;
}

uint64_t ResetThemeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_31A738);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ResetThemeEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_BB8A8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v20 = v8;
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  char v29 = 0;
  sub_9FF8();
  sub_27E1F0();
  char v13 = v27;
  *(_OWORD *)uint64_t v10 = v26;
  v10[16] = v13;
  char v29 = 1;
  sub_A04C();
  sub_27E1F0();
  uint64_t v14 = v27;
  __int16 v15 = v28;
  *(_OWORD *)(v10 + 20) = v26;
  *(void *)(v10 + 36) = v14;
  *((_WORD *)v10 + 22) = v15;
  LOBYTE(v26) = 2;
  sub_1AB30(&qword_315E28);
  uint64_t v19 = v5;
  uint64_t v16 = v25;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v10[*(int *)(v20 + 24)], v19, v11);
  sub_BBC88((uint64_t)v10, v22);
  sub_5E94((uint64_t)a1);
  return sub_BBCEC((uint64_t)v10);
}

uint64_t sub_BBC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResetThemeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BBCEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResetThemeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BBD48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResetThemeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_BBD60(void *a1)
{
  return ResetThemeEvent.Model.encode(to:)(a1);
}

uint64_t sub_BBD78@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315780, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A6F8, a1);
}

uint64_t sub_BBDB0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315788, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A710, a1);
}

uint64_t sub_BBDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = enum case for EventProperty.required<A>(_:);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v8, v9, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ResetThemeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316020);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316028);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    char v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ResetThemeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BC5CC);
}

uint64_t sub_BC5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316020);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316028);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ResetThemeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BC738);
}

uint64_t sub_BC738(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316020);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316028);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_BC89C()
{
  sub_BCA10(319, &qword_3160E8, (void (*)(void))sub_9FF8, (void (*)(void))sub_9948);
  if (v0 <= 0x3F)
  {
    sub_BCA10(319, (unint64_t *)&unk_3160F0, (void (*)(void))sub_A04C, (void (*)(void))sub_999C);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_BCA10(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ResetThemeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 20) = *(_OWORD *)((char *)a2 + 20);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ResetThemeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(a1 + 20) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BCEB4);
}

uint64_t sub_BCEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ResetThemeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BCF84);
}

uint64_t sub_BCF84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_BD02C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResetThemeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBD198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetThemeEvent.Model.CodingKeys()
{
  return &type metadata for ResetThemeEvent.Model.CodingKeys;
}

unint64_t sub_BD1D4()
{
  unint64_t result = qword_31A870;
  if (!qword_31A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A870);
  }
  return result;
}

unint64_t sub_BD22C()
{
  unint64_t result = qword_31A878;
  if (!qword_31A878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A878);
  }
  return result;
}

unint64_t sub_BD284()
{
  unint64_t result = qword_31A880;
  if (!qword_31A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A880);
  }
  return result;
}

uint64_t sub_BD2D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614474786574 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADD90 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_BD434(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31A888, &enum case for SessionGroup.default(_:));
}

uint64_t static InBookSearchEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315790, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A888, a1);
}

uint64_t sub_BD494(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31A8A0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static InBookSearchEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315798, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A8A0, a1);
}

uint64_t InBookSearchEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for InBookSearchEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31A928);
}

uint64_t InBookSearchEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InBookSearchEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InBookSearchEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InBookSearchEvent.searchData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InBookSearchEvent.searchData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InBookSearchEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InBookSearchEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InBookSearchEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InBookSearchEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InBookSearchEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InBookSearchEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t InBookSearchEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for InBookSearchEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t InBookSearchEvent.Model.searchData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[14];
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  uint64_t v5 = v1[17];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_409E0(v2, v3);
}

uint64_t InBookSearchEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[18];
  uint64_t v3 = v1[19];
  uint64_t v4 = v1[20];
  uint64_t v5 = v1[21];
  uint64_t v6 = v1[22];
  uint64_t v7 = v1[23];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t InBookSearchEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InBookSearchEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for InBookSearchEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31A9C8);
}

uint64_t InBookSearchEvent.Model.init(readingSessionData:contentData:searchData:seriesData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v8 = *a1;
  char v9 = *((unsigned char *)a1 + 4);
  int v10 = a1[2];
  char v11 = *((unsigned char *)a1 + 12);
  char v12 = *((unsigned char *)a1 + 13);
  char v13 = *((unsigned char *)a1 + 14);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  char v16 = *((unsigned char *)a2 + 16);
  long long v17 = *(_OWORD *)(a2 + 3);
  uint64_t v19 = a2[5];
  uint64_t v18 = a2[6];
  __int16 v20 = *((_WORD *)a2 + 28);
  int v21 = *((_DWORD *)a2 + 15);
  char v22 = *((unsigned char *)a2 + 64);
  int v23 = *((_DWORD *)a2 + 17);
  char v24 = *((unsigned char *)a2 + 72);
  char v25 = *((unsigned char *)a2 + 77);
  *(_DWORD *)a6 = v8;
  *(unsigned char *)(a6 + 4) = v9;
  *(_DWORD *)(a6 + 8) = v10;
  *(unsigned char *)(a6 + 12) = v11;
  *(unsigned char *)(a6 + 13) = v12;
  *(unsigned char *)(a6 + 14) = v13;
  *(void *)(a6 + 16) = v14;
  *(void *)(a6 + 24) = v15;
  *(unsigned char *)(a6 + 32) = v16;
  *(_OWORD *)(a6 + 40) = v17;
  *(void *)(a6 + 56) = v19;
  *(void *)(a6 + 64) = v18;
  *(_WORD *)(a6 + 72) = v20;
  *(_DWORD *)(a6 + 76) = v21;
  *(unsigned char *)(a6 + 80) = v22;
  *(_DWORD *)(a6 + 84) = v23;
  *(unsigned char *)(a6 + 88) = v24;
  *(_DWORD *)(a6 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a6 + 93) = v25;
  long long v26 = *a3;
  long long v27 = a3[1];
  *(_OWORD *)(a6 + 96) = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a6 + 112) = v26;
  long long v28 = *a4;
  long long v29 = a4[1];
  *(_OWORD *)(a6 + 128) = v27;
  *(_OWORD *)(a6 + 144) = v28;
  long long v30 = a4[2];
  *(_OWORD *)(a6 + 160) = v29;
  *(_OWORD *)(a6 + 176) = v30;
  uint64_t v31 = a6 + *(int *)(type metadata accessor for InBookSearchEvent.Model(0) + 32);
  uint64_t v32 = sub_27D7C0();
  long long v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);

  return v33(v31, a5, v32);
}

uint64_t sub_BDDC4()
{
  uint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t v2 = 0x686372616573;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x736569726573;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 4:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_BDE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C0A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_BDEA4(uint64_t a1)
{
  unint64_t v2 = sub_BE220();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BDEE0(uint64_t a1)
{
  unint64_t v2 = sub_BE220();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t InBookSearchEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31A8B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_BE220();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v28) = *(_DWORD *)v3;
  BYTE4(v28) = v9;
  DWORD2(v28) = v10;
  BYTE12(v28) = v11;
  BYTE13(v28) = v12;
  BYTE14(v28) = v13;
  char v39 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    *(void *)&long long v28 = *(void *)(v3 + 16);
    *((void *)&v28 + 1) = v14;
    v29[0] = v15;
    *(_OWORD *)&v29[8] = v16;
    *(void *)&v29[24] = v17;
    uint64_t v30 = v18;
    __int16 v31 = v19;
    int v32 = v20;
    char v33 = v21;
    int v34 = v22;
    char v35 = v23;
    int v36 = *(_DWORD *)(v3 + 89);
    char v37 = v24;
    long long v38 = *(_OWORD *)(v3 + 96);
    char v39 = 1;
    sub_1A1D4();
    sub_27E330();
    long long v25 = *(_OWORD *)(v3 + 128);
    long long v28 = *(_OWORD *)(v3 + 112);
    *(_OWORD *)long long v29 = v25;
    char v39 = 2;
    sub_B11C8();
    sub_27E2C0();
    long long v26 = *(_OWORD *)(v3 + 160);
    long long v28 = *(_OWORD *)(v3 + 144);
    *(_OWORD *)long long v29 = v26;
    *(_OWORD *)&v29[16] = *(_OWORD *)(v3 + 176);
    char v39 = 3;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for InBookSearchEvent.Model(0);
    LOBYTE(v28) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_BE220()
{
  unint64_t result = qword_31A8C0;
  if (!qword_31A8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31A8C0);
  }
  return result;
}

uint64_t InBookSearchEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v38 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_4E04(&qword_31A8C8);
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for InBookSearchEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v43 = a1;
  sub_5900(a1, v12);
  sub_BE220();
  char v41 = v8;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v43);
  }
  char v37 = v6;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v39;
  uint64_t v14 = v40;
  char v55 = 0;
  sub_8EBD0();
  sub_27E260();
  char v16 = BYTE4(v44);
  int v17 = DWORD2(v44);
  char v18 = BYTE12(v44);
  char v19 = BYTE13(v44);
  char v20 = BYTE14(v44);
  *(_DWORD *)uint64_t v13 = v44;
  *(unsigned char *)(v13 + 4) = v16;
  *(_DWORD *)(v13 + 8) = v17;
  *(unsigned char *)(v13 + 12) = v18;
  *(unsigned char *)(v13 + 13) = v19;
  *(unsigned char *)(v13 + 14) = v20;
  char v55 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v21 = *((void *)&v44 + 1);
  char v22 = v45[0];
  long long v23 = *(_OWORD *)&v45[8];
  uint64_t v24 = *(void *)&v45[24];
  uint64_t v25 = v46;
  __int16 v26 = v47;
  int v27 = v48;
  char v28 = v49;
  int v29 = v50;
  char v30 = v51;
  char v31 = v53;
  *(void *)(v13 + 16) = v44;
  *(void *)(v13 + 24) = v21;
  *(unsigned char *)(v13 + 32) = v22;
  *(_OWORD *)(v13 + 40) = v23;
  *(void *)(v13 + 56) = v24;
  *(void *)(v13 + 64) = v25;
  *(_WORD *)(v13 + 72) = v26;
  *(_DWORD *)(v13 + 76) = v27;
  *(unsigned char *)(v13 + 80) = v28;
  *(_DWORD *)(v13 + 84) = v29;
  *(unsigned char *)(v13 + 88) = v30;
  *(_DWORD *)(v13 + 89) = v52;
  *(unsigned char *)(v13 + 93) = v31;
  *(_OWORD *)(v13 + 96) = v54;
  char v55 = 2;
  sub_B1968();
  sub_27E1F0();
  long long v32 = *(_OWORD *)v45;
  *(_OWORD *)(v13 + 112) = v44;
  *(_OWORD *)(v13 + 128) = v32;
  char v55 = 3;
  sub_11A3C();
  uint64_t v36 = 0;
  sub_27E1F0();
  long long v33 = *(_OWORD *)v45;
  *(_OWORD *)(v13 + 144) = v44;
  *(_OWORD *)(v13 + 160) = v33;
  *(_OWORD *)(v13 + 176) = *(_OWORD *)&v45[16];
  LOBYTE(v44) = 4;
  sub_1AB30(&qword_315E28);
  int v34 = v37;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v13 + *(int *)(v9 + 32), v34, v4);
  sub_BE780(v13, v14);
  sub_5E94((uint64_t)v43);
  return sub_BE7E4(v13);
}

uint64_t sub_BE780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InBookSearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BE7E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InBookSearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BE840@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InBookSearchEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_BE858(void *a1)
{
  return InBookSearchEvent.Model.encode(to:)(a1);
}

uint64_t sub_BE870@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315790, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31A888, a1);
}

uint64_t sub_BE8A8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315798, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31A8A0, a1);
}

uint64_t sub_BE8E0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for InBookSearchEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31A1F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    int v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for InBookSearchEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for InBookSearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for InBookSearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for InBookSearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for InBookSearchEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for InBookSearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BF4DC);
}

uint64_t sub_BF4DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_31A1F8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for InBookSearchEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BF6E8);
}

uint64_t sub_BF6E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_31A1F8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_BF8EC()
{
  sub_BFB48(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_BFB48(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_BFB48(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
      if (v2 <= 0x3F)
      {
        sub_BFB48(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_BFB48(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for InBookSearchEvent.Model(void *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    *(void *)((char *)a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v7 = a2[3];
    v4[2] = a2[2];
    v4[3] = v7;
    *((unsigned char *)v4 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = a2[8];
    v4[7] = a2[7];
    v4[8] = v9;
    *((_WORD *)v4 + 36) = *((_WORD *)a2 + 36);
    *((_DWORD *)v4 + 19) = *((_DWORD *)a2 + 19);
    *((unsigned char *)v4 + 80) = *((unsigned char *)a2 + 80);
    *((_DWORD *)v4 + 21) = *((_DWORD *)a2 + 21);
    *((unsigned char *)v4 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)((char *)v4 + 89) = *(_DWORD *)((char *)a2 + 89);
    *((unsigned char *)v4 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v10 = a2[13];
    v4[12] = a2[12];
    v4[13] = v10;
    uint64_t v11 = a2[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11)
    {
      v4[14] = a2[14];
      v4[15] = v11;
      uint64_t v12 = a2[17];
      v4[16] = a2[16];
      v4[17] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)a2 + 8);
      *((_OWORD *)v4 + 7) = *((_OWORD *)a2 + 7);
      *((_OWORD *)v4 + 8) = v14;
    }
    uint64_t v15 = a2[23];
    if (v15 == 1)
    {
      long long v16 = *((_OWORD *)a2 + 10);
      *((_OWORD *)v4 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)v4 + 10) = v16;
      *((_OWORD *)v4 + 11) = *((_OWORD *)a2 + 11);
    }
    else
    {
      v4[18] = a2[18];
      *((unsigned char *)v4 + 152) = *((unsigned char *)a2 + 152);
      v4[20] = a2[20];
      *((unsigned char *)v4 + 168) = *((unsigned char *)a2 + 168);
      *(_WORD *)((char *)v4 + 169) = *(_WORD *)((char *)a2 + 169);
      v4[22] = a2[22];
      v4[23] = v15;
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = *(int *)(a3 + 32);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t destroy for InBookSearchEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 184) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for InBookSearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v10;
    uint64_t v11 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v12;
  }
  uint64_t v13 = *(void *)(a2 + 184);
  if (v13 == 1)
  {
    long long v14 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v14;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  else
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(_WORD *)(a1 + 169) = *(_WORD *)(a2 + 169);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v13;
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for InBookSearchEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(a1 + 112);
  uint64_t v11 = a2 + 28;
  uint64_t v12 = *((void *)a2 + 15);
  if (*(void *)(a1 + 120))
  {
    if (v12)
    {
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B9D48(a1 + 112);
      long long v13 = *((_OWORD *)a2 + 8);
      _OWORD *v10 = *v11;
      *(_OWORD *)(a1 + 128) = v13;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *((_OWORD *)a2 + 8);
    _OWORD *v10 = *v11;
    *(_OWORD *)(a1 + 128) = v14;
  }
  uint64_t v15 = (long long *)(a1 + 144);
  uint64_t v16 = (long long *)(a2 + 36);
  uint64_t v17 = *((void *)a2 + 23);
  if (*(void *)(a1 + 184) == 1)
  {
    if (v17 == 1)
    {
      long long v18 = *v16;
      long long v19 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v19;
      *uint64_t v15 = v18;
    }
    else
    {
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
      *(unsigned char *)(a1 + 169) = *((unsigned char *)a2 + 169);
      *(unsigned char *)(a1 + 170) = *((unsigned char *)a2 + 170);
      *(void *)(a1 + 176) = *((void *)a2 + 22);
      *(void *)(a1 + 184) = *((void *)a2 + 23);
      swift_bridgeObjectRetain();
    }
  }
  else if (v17 == 1)
  {
    sub_1CDD8(a1 + 144);
    long long v21 = *((_OWORD *)a2 + 10);
    long long v20 = *((_OWORD *)a2 + 11);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v20;
  }
  else
  {
    *(void *)(a1 + 144) = *((void *)a2 + 18);
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
    *(unsigned char *)(a1 + 169) = *((unsigned char *)a2 + 169);
    *(unsigned char *)(a1 + 170) = *((unsigned char *)a2 + 170);
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *(int *)(a3 + 32);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t)a2 + v22;
  uint64_t v25 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t initializeWithTake for InBookSearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 144);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for InBookSearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120))
  {
    uint64_t v10 = *(void *)(a2 + 120);
    if (v10)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_B9D48(a1 + 112);
  }
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
LABEL_6:
  if (*(void *)(a1 + 184) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 184);
    if (v13 != 1)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(_WORD *)(a1 + 169) = *(_WORD *)(a2 + 169);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1CDD8(a1 + 144);
  }
  long long v14 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v14;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_11:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for InBookSearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C0604);
}

uint64_t sub_C0604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for InBookSearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C06C8);
}

uint64_t sub_C06C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_C0770()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InBookSearchEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC08F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InBookSearchEvent.Model.CodingKeys()
{
  return &type metadata for InBookSearchEvent.Model.CodingKeys;
}

unint64_t sub_C092C()
{
  unint64_t result = qword_31AA10;
  if (!qword_31AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA10);
  }
  return result;
}

unint64_t sub_C0984()
{
  unint64_t result = qword_31AA18;
  if (!qword_31AA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA18);
  }
  return result;
}

unint64_t sub_C09DC()
{
  unint64_t result = qword_31AA20;
  if (!qword_31AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA20);
  }
  return result;
}

uint64_t sub_C0A30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t ContentStoreData.ratingsCount.getter()
{
  return *(unsigned int *)(v0 + 64) | ((unint64_t)*(unsigned __int8 *)(v0 + 68) << 32);
}

uint64_t ContentStoreData.ratingsCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  *(unsigned char *)(v1 + 68) = BYTE4(result) & 1;
  return result;
}

void __swiftcall ContentStoreData.init(currency:version:pricePoint:rating:ratingsCount:)(BookAnalytics::ContentStoreData *__return_ptr retstr, Swift::String_optional currency, Swift::String_optional version, Swift::String pricePoint, Swift::String_optional rating, Swift::Int32_optional ratingsCount)
{
  retstr->currency = currency;
  retstr->version = version;
  retstr->pricePoint = pricePoint;
  retstr->rating = rating;
  retstr->ratingsCount.value = ratingsCount.value;
  retstr->ratingsCount.is_nil = ratingsCount.is_nil;
}

uint64_t sub_C0CE0()
{
  uint64_t result = 0x79636E6572727563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      uint64_t result = 0x696F506563697270;
      break;
    case 3:
      uint64_t result = 0x676E69746172;
      break;
    case 4:
      uint64_t result = 0x4373676E69746172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C0D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C1B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C0DBC(uint64_t a1)
{
  unint64_t v2 = sub_C164C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0DF8(uint64_t a1)
{
  unint64_t v2 = sub_C164C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentStoreData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31AA28);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v17 = *(void *)(v1 + 40);
  uint64_t v18 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v15 = *(void *)(v1 + 56);
  uint64_t v16 = v9;
  uint64_t v14 = *(unsigned int *)(v1 + 64);
  int v13 = *(unsigned __int8 *)(v1 + 68);
  sub_5900(a1, a1[3]);
  sub_C164C();
  sub_27E440();
  char v27 = 0;
  uint64_t v10 = v21;
  sub_27E290();
  if (!v10)
  {
    char v26 = 1;
    sub_27E290();
    char v25 = 2;
    sub_27E2F0();
    char v24 = 3;
    sub_27E290();
    char v23 = 4;
    char v22 = v13;
    sub_27E2D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ContentStoreData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31AA38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_C164C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v33 = 0;
    uint64_t v9 = sub_27E1C0();
    uint64_t v12 = v11;
    uint64_t v27 = v9;
    char v32 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v26 = v13;
    char v31 = 2;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_27E220();
    char v25 = a2;
    char v30 = 3;
    uint64_t v28 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_27E1C0();
    uint64_t v19 = v18;
    uint64_t v23 = v17;
    char v29 = 4;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_27E200();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v25;
    uint64_t v22 = v28;
    *char v25 = v27;
    v21[1] = v12;
    void v21[2] = v26;
    v21[3] = v15;
    v21[4] = v24;
    v21[5] = v22;
    v21[6] = v23;
    v21[7] = v19;
    *((_DWORD *)v21 + 16) = v20;
    *((unsigned char *)v21 + 68) = BYTE4(v20) & 1;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_C1408@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ContentStoreData.init(from:)(a1, a2);
}

uint64_t sub_C1420(void *a1)
{
  return ContentStoreData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics16ContentStoreDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  char v10 = *(unsigned char *)(a1 + 68);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  int v18 = *(_DWORD *)(a2 + 64);
  char v19 = *(unsigned char *)(a2 + 68);
  if (!v3)
  {
    int v47 = *(_DWORD *)(a1 + 64);
    if (v11) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v11) {
    return 0;
  }
  int v47 = *(_DWORD *)(a1 + 64);
  if (*(void *)a1 == *(void *)a2 && v3 == v11) {
    goto LABEL_8;
  }
  uint64_t v44 = *(void *)(a2 + 56);
  uint64_t v45 = *(void *)(a2 + 48);
  uint64_t v42 = *(void *)(a1 + 48);
  uint64_t v43 = *(void *)(a1 + 56);
  int v41 = *(_DWORD *)(a2 + 64);
  char v20 = *(unsigned char *)(a2 + 68);
  char v21 = *(unsigned char *)(a1 + 68);
  uint64_t v22 = *(void *)(a1 + 32);
  uint64_t v23 = *(void *)(a2 + 32);
  uint64_t v24 = *(void *)(a2 + 40);
  uint64_t v25 = *(void *)(a1 + 16);
  char v26 = sub_27E370();
  uint64_t v4 = v25;
  uint64_t v15 = v24;
  uint64_t v13 = v23;
  uint64_t v5 = v22;
  char v10 = v21;
  char v19 = v20;
  int v18 = v41;
  uint64_t v7 = v42;
  uint64_t v9 = v43;
  uint64_t v17 = v44;
  uint64_t v16 = v45;
  char v27 = v26;
  uint64_t result = 0;
  if (v27)
  {
LABEL_8:
    if (v6)
    {
      if (!v14) {
        return 0;
      }
      if (v4 != v12 || v6 != v14)
      {
        char v29 = v10;
        uint64_t v30 = v5;
        uint64_t v31 = v13;
        uint64_t v46 = v15;
        char v32 = sub_27E370();
        uint64_t v15 = v46;
        uint64_t v13 = v31;
        uint64_t v5 = v30;
        char v10 = v29;
        char v33 = v32;
        uint64_t result = 0;
        if ((v33 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v14)
    {
      return 0;
    }
    if (v5 != v13 || v8 != v15)
    {
      char v34 = v10;
      char v35 = sub_27E370();
      char v10 = v34;
      char v36 = v35;
      uint64_t result = 0;
      if ((v36 & 1) == 0) {
        return result;
      }
    }
    if (v9)
    {
      if (!v17) {
        return 0;
      }
      if (v7 != v16 || v9 != v17)
      {
        char v37 = v10;
        char v38 = sub_27E370();
        char v10 = v37;
        char v39 = v38;
        uint64_t result = 0;
        if ((v39 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (v19) {
        return 1;
      }
    }
    else
    {
      if (v47 == v18) {
        char v40 = v19;
      }
      else {
        char v40 = 1;
      }
      if ((v40 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_C164C()
{
  unint64_t result = qword_31AA30;
  if (!qword_31AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA30);
  }
  return result;
}

uint64_t destroy for ExposureData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentStoreData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  int v7 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentStoreData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v4;
  return a1;
}

__n128 initializeWithTake for ContentStoreData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ContentStoreData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentStoreData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 69)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentStoreData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 69) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStoreData()
{
  return &type metadata for ContentStoreData;
}

unsigned char *storeEnumTagSinglePayload for ContentStoreData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC1A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStoreData.CodingKeys()
{
  return &type metadata for ContentStoreData.CodingKeys;
}

unint64_t sub_C1A80()
{
  unint64_t result = qword_31AA40;
  if (!qword_31AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA40);
  }
  return result;
}

unint64_t sub_C1AD8()
{
  unint64_t result = qword_31AA48;
  if (!qword_31AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA48);
  }
  return result;
}

unint64_t sub_C1B30()
{
  unint64_t result = qword_31AA50;
  if (!qword_31AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA50);
  }
  return result;
}

uint64_t sub_C1B84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E6572727563 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696F506563697270 && a2 == 0xEA0000000000746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69746172 && a2 == 0xE600000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4373676E69746172 && a2 == 0xEC000000746E756FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::RoomType_optional __swiftcall RoomType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F7FC8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t RoomType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F6F527265707573;
      break;
    case 2:
      unint64_t result = 0x6F52656C706D6973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x4C6465726564726FLL;
      break;
    case 5:
      unint64_t result = 0x676E6970756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C1F04(unsigned __int8 *a1, char *a2)
{
  return sub_2C8E0(*a1, *a2);
}

unint64_t sub_C1F14()
{
  unint64_t result = qword_31AA58;
  if (!qword_31AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA58);
  }
  return result;
}

Swift::Int sub_C1F68()
{
  return sub_20B8AC();
}

uint64_t sub_C1F70()
{
  return sub_27B6C0();
}

Swift::Int sub_C1F78()
{
  return sub_25DA30();
}

BookAnalytics::RoomType_optional sub_C1F80(Swift::String *a1)
{
  return RoomType.init(rawValue:)(*a1);
}

void sub_C1F8C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006DLL;
      uint64_t v3 = 0x6F6F527265707573;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6F52656C706D6973;
      *(void *)(a1 + 8) = 0xEA00000000006D6FLL;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000010;
      *(void *)(a1 + 8) = 0x80000000002ACFF0;
      break;
    case 4:
      *(void *)a1 = 0x4C6465726564726FLL;
      *(void *)(a1 + 8) = 0xEF6D6F6F52747369;
      break;
    case 5:
      strcpy((char *)a1, "groupingPage");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_C2088()
{
  return sub_27DED0();
}

uint64_t sub_C20E8()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for RoomType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC2204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomType()
{
  return &type metadata for RoomType;
}

unint64_t sub_C223C()
{
  unint64_t result = qword_31AA60;
  if (!qword_31AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA60);
  }
  return result;
}

BookAnalytics::SeriesUserStatus_optional __swiftcall SeriesUserStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8078;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SeriesUserStatus.rawValue.getter()
{
  uint64_t result = 7824750;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 2:
      uint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C237C(unsigned __int8 *a1, char *a2)
{
  return sub_33638(*a1, *a2);
}

unint64_t sub_C238C()
{
  unint64_t result = qword_31AA68;
  if (!qword_31AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA68);
  }
  return result;
}

Swift::Int sub_C23E0()
{
  return sub_27E420();
}

uint64_t sub_C24BC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_C2580()
{
  return sub_27E420();
}

BookAnalytics::SeriesUserStatus_optional sub_C2658(Swift::String *a1)
{
  return SeriesUserStatus.init(rawValue:)(*a1);
}

void sub_C2664(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7824750;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      uint64_t v3 = 0x6574656C706D6F63;
      goto LABEL_3;
    case 2:
      *a1 = 0x6572676F72506E69;
      a1[1] = 0xEA00000000007373;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_C2700()
{
  return sub_27DED0();
}

uint64_t sub_C2760()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SeriesUserStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC287CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesUserStatus()
{
  return &type metadata for SeriesUserStatus;
}

unint64_t sub_C28B4()
{
  unint64_t result = qword_31AA70;
  if (!qword_31AA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA70);
  }
  return result;
}

unint64_t sub_C2908()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_C2944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C30B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C296C(uint64_t a1)
{
  unint64_t v2 = sub_C2D94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C29A8(uint64_t a1)
{
  unint64_t v2 = sub_C2D94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReferralData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31AA78);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_C2D94();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E290();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReferralData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31AA88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_C2D94();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v20 = 0;
    uint64_t v9 = sub_27E1C0();
    uint64_t v11 = v10;
    char v19 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v12;
    v16(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v18;
    a2[3] = v15;
    swift_bridgeObjectRetain();
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_C2D64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferralData.init(from:)(a1, a2);
}

uint64_t sub_C2D7C(void *a1)
{
  return ReferralData.encode(to:)(a1);
}

unint64_t sub_C2D94()
{
  unint64_t result = qword_31AA80;
  if (!qword_31AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA80);
  }
  return result;
}

unint64_t sub_C2DEC()
{
  unint64_t result = qword_31AA90;
  if (!qword_31AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA90);
  }
  return result;
}

unint64_t sub_C2E44()
{
  unint64_t result = qword_31AA98;
  if (!qword_31AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AA98);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData()
{
  return &type metadata for ReferralData;
}

unsigned char *storeEnumTagSinglePayload for ReferralData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC2F74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData.CodingKeys()
{
  return &type metadata for ReferralData.CodingKeys;
}

unint64_t sub_C2FB0()
{
  unint64_t result = qword_31AAA0;
  if (!qword_31AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AAA0);
  }
  return result;
}

unint64_t sub_C3008()
{
  unint64_t result = qword_31AAA8;
  if (!qword_31AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AAA8);
  }
  return result;
}

unint64_t sub_C3060()
{
  unint64_t result = qword_31AAB0;
  if (!qword_31AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AAB0);
  }
  return result;
}

uint64_t sub_C30B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AEC90 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AECB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t EventReporter.emitReadEvent(using:readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:doNotDisturbData:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  _OWORD v8[2] = a1;
  void v8[3] = a2;
  return _swift_task_switch(sub_C31D0, 0, 0);
}

uint64_t sub_C31D0()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  long long v6 = *(_OWORD *)(v0 + 24);
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v9;
  *(void *)(v5 + 64) = v3;
  *(void *)(v5 + 72) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  void *v7 = v0;
  v7[1] = sub_C32EC;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_C32EC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C3404, 0, 0);
}

uint64_t sub_C3404()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C3418(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  char v51 = a7;
  int v52 = a8;
  int v47 = a4;
  int v48 = a5;
  uint64_t v53 = a2;
  char v49 = a9;
  int v50 = a6;
  uint64_t v11 = sub_4E04(&qword_31AB40);
  uint64_t v45 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_27D0A0();
  uint64_t v14 = *(void *)(v44 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v44);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v16, a3);
  uint64_t v42 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + v22 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v17, v16, v44);
  uint64_t v25 = v46;
  char v26 = v47;
  *(void *)(v24 + v18) = v47;
  char v27 = v48;
  *(void *)(v24 + v19) = v48;
  unint64_t v28 = v24 + v23;
  char v29 = v50;
  uint64_t v30 = v51;
  uint64_t v31 = v42;
  *(void *)(v24 + v43) = v50;
  *(void *)(v24 + v20) = v30;
  char v32 = v52;
  *(void *)(v24 + v21) = v52;
  char v33 = v49;
  *(void *)(v24 + v22) = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v28, v25, v45);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_C7DD0;
  *(void *)(v34 + 24) = v24;
  id v35 = v32;
  id v36 = v33;
  swift_retain();
  id v37 = v26;
  id v38 = v27;
  id v39 = v29;
  id v40 = v30;
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_C371C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char *a7, uint64_t a8)
{
  type metadata accessor for ReadEvent(0);
  sub_C7F0C(&qword_31AB48, (void (*)(uint64_t))type metadata accessor for ReadEvent);
  sub_27D2D0();
  sub_E1AD0((uint64_t)v37);
  sub_4E04(&qword_319FE0);
  uint64_t v36 = sub_27D380();
  uint64_t v8 = *(void *)(v36 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_285930;
  unsigned int v35 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v11 = *(void (**)(unint64_t))(v8 + 104);
  v11(v10 + v9);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  sub_DF4A4((uint64_t)v37);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v11)(v12 + v9, v35, v36);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_E1EAC((uint64_t)v37);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  uint64_t v14 = v11;
  ((void (*)(unint64_t, void, uint64_t))v11)(v13 + v9, v35, v36);
  sub_C7F54();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a6)
  {
    id v15 = a6;
    sub_E2B38((uint64_t)v37);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_285930;
    ((void (*)(unint64_t, void, uint64_t))v14)(v16 + v9, v35, v36);
    sub_C8050();
    sub_27D2E0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  if (a7)
  {
    unint64_t v17 = *(void **)&a7[OBJC_IVAR___BAContentSettingsData_bookmarkCount];
    unint64_t v18 = a7;
    id v19 = [v17 integerValue];
    id v20 = [*(id *)&v18[OBJC_IVAR___BAContentSettingsData_noteCount] integerValue];
    id v21 = [*(id *)&v18[OBJC_IVAR___BAContentSettingsData_highlightCount] integerValue];
    uint64_t v22 = BARoundIntegerToSignificantFigures((uint64_t)v19, 2);
    unint64_t v23 = 0xFFFFFFFF80000000;
    if (v22 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else
    {
      unsigned int v24 = v22;
      unint64_t v23 = 0x7FFFFFFFLL;
      if (v22 <= 0x7FFFFFFF)
      {
        uint64_t v25 = BARoundIntegerToSignificantFigures((uint64_t)v20, 2);
        unint64_t v23 = 0xFFFFFFFF80000000;
        if (v25 >= (uint64_t)0xFFFFFFFF80000000)
        {
          unsigned int v26 = v25;
          unint64_t v23 = 0x7FFFFFFFLL;
          if (v25 <= 0x7FFFFFFF)
          {
            uint64_t v27 = BARoundIntegerToSignificantFigures((uint64_t)v21, 2);
            unint64_t v23 = 0xFFFFFFFF80000000;
            if (v27 >= (uint64_t)0xFFFFFFFF80000000)
            {
              unint64_t v23 = 0x7FFFFFFFLL;
              if (v27 <= 0x7FFFFFFF)
              {
                *(void *)&v37[0] = __PAIR64__(v26, v24);
                DWORD2(v37[0]) = v27;
                uint64_t v28 = swift_allocObject();
                *(_OWORD *)(v28 + 16) = xmmword_285930;
                ((void (*)(unint64_t, void, uint64_t))v14)(v28 + v9, v35, v36);
                sub_C7FFC();
                sub_27D2E0();
                swift_bridgeObjectRelease();

                goto LABEL_11;
              }
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  unint64_t v23 = *(void *)(a8 + OBJC_IVAR___BADoNotDisturbData_startStatus);
  if (v23 >= 3)
  {
LABEL_20:
    *(void *)&v37[0] = v23;
    goto LABEL_22;
  }
  unint64_t v29 = *(void *)(a8 + OBJC_IVAR___BADoNotDisturbData_endStatus);
  if (v29 < 3)
  {
    LOBYTE(v37[0]) = *(void *)(a8 + OBJC_IVAR___BADoNotDisturbData_startStatus);
    BYTE1(v37[0]) = v29;
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_285930;
    ((void (*)(unint64_t, void, uint64_t))v14)(v30 + v9, v35, v36);
    sub_C7FA8();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    memset(v37, 0, sizeof(v37));
    sub_27D2F0();
    sub_6991C((uint64_t)v37);
    sub_4E04(&qword_31AB40);
    return sub_27DF10();
  }
  *(void *)&v37[0] = *(void *)(a8 + OBJC_IVAR___BADoNotDisturbData_endStatus);
LABEL_22:
  uint64_t result = sub_27E390();
  __break(1u);
  return result;
}

uint64_t sub_C4030(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  v7[8] = a7;
  v7[9] = v27;
  v7[6] = a5;
  v7[7] = a6;
  v7[4] = a3;
  v7[5] = a4;
  long long v7[2] = a1;
  v7[3] = a2;
  uint64_t v14 = sub_27D0A0();
  v7[10] = v14;
  v7[11] = *(void *)(v14 - 8);
  v7[12] = swift_task_alloc();
  v7[13] = _Block_copy(v26);
  sub_27D070();
  id v15 = a6;
  id v16 = a7;
  id v17 = v27;
  id v18 = a1;
  id v19 = a2;
  id v20 = a3;
  id v21 = a4;
  id v22 = a5;
  return _swift_task_switch(sub_C4184, 0, 0);
}

uint64_t sub_C4184()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  long long v9 = *(_OWORD *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  long long v6 = *(_OWORD *)(v0 + 24);
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v9;
  *(void *)(v5 + 64) = v3;
  *(void *)(v5 + 72) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v7;
  void *v7 = v0;
  v7[1] = sub_C42A0;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_C42A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C43B8, 0, 0);
}

uint64_t sub_C43B8()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void (***)(void))(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void **)(v0 + 64);
  uint64_t v5 = *(void **)(v0 + 56);
  uint64_t v12 = *(void **)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v7 = *(void **)(v0 + 32);
  long long v6 = *(void **)(v0 + 40);
  long long v9 = *(void **)(v0 + 16);
  uint64_t v8 = *(void **)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  v1[2](v1);
  _Block_release(v1);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

id EventReporter.emitReadingAutoNightSettingChangeEvent(using:readingSessionData:contentData:isOn:)(void *a1, int *a2, _OWORD *a3, char a4)
{
  int v7 = *a2;
  char v8 = *((unsigned char *)a2 + 4);
  int v9 = a2[2];
  char v10 = *((unsigned char *)a2 + 12);
  char v11 = *((unsigned char *)a2 + 13);
  char v12 = *((unsigned char *)a2 + 14);
  long long v13 = a3[3];
  v26[2] = a3[2];
  v26[3] = v13;
  long long v14 = a3[5];
  v26[4] = a3[4];
  v26[5] = v14;
  long long v15 = a3[1];
  id v16 = a1;
  v26[0] = *a3;
  v26[1] = v15;
  if (a1 || (result = sub_103814(), (id v16 = result) != 0))
  {
    uint64_t v18 = swift_allocObject();
    char v19 = a4;
    uint64_t v20 = v18;
    *(_DWORD *)(v18 + 16) = v7;
    *(unsigned char *)(v18 + 20) = v8;
    *(_DWORD *)(v18 + 24) = v9;
    *(unsigned char *)(v18 + 28) = v10;
    *(unsigned char *)(v18 + 29) = v11;
    *(unsigned char *)(v18 + 30) = v12;
    long long v21 = a3[3];
    *(_OWORD *)(v18 + 64) = a3[2];
    *(_OWORD *)(v18 + 80) = v21;
    long long v22 = a3[5];
    *(_OWORD *)(v18 + 96) = a3[4];
    *(_OWORD *)(v18 + 112) = v22;
    long long v23 = a3[1];
    *(_OWORD *)(v18 + 32) = *a3;
    *(_OWORD *)(v18 + 48) = v23;
    *(unsigned char *)(v18 + 128) = v19 & 1;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_C6AF0;
    *(void *)(v24 + 24) = v20;
    id v25 = a1;
    sub_68EB8((uint64_t)v26);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C46AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v16[0]) = a2;
  BYTE4(v16[0]) = BYTE4(a2) & 1;
  DWORD2(v16[0]) = a3;
  BYTE12(v16[0]) = BYTE4(a3) & 1;
  BYTE13(v16[0]) = BYTE5(a3) & 1;
  BYTE14(v16[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  char v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v16[2] = a4[2];
  v16[3] = v11;
  long long v12 = a4[5];
  v16[4] = a4[4];
  v16[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  v10(v14 + v7, v9, v5);
  sub_C7AB4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingAutoNightSettingChangeEvent(0);
  sub_C7F0C(&qword_31AB38, (void (*)(uint64_t))type metadata accessor for ReadingAutoNightSettingChangeEvent);
  memset(v16, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v16);
}

id EventReporter.emitReadingBackgroundColorChangeEvent(using:readingSessionData:contentData:backgroundColorData:)(void *a1, int *a2, _OWORD *a3, char *a4)
{
  int v6 = *a2;
  char v7 = *((unsigned char *)a2 + 4);
  int v8 = a2[2];
  char v9 = *((unsigned char *)a2 + 12);
  char v10 = *((unsigned char *)a2 + 13);
  char v11 = *((unsigned char *)a2 + 14);
  long long v12 = a3[3];
  v26[2] = a3[2];
  v26[3] = v12;
  long long v13 = a3[5];
  v26[4] = a3[4];
  v26[5] = v13;
  long long v14 = a3[1];
  v26[0] = *a3;
  v26[1] = v14;
  long long v15 = a1;
  char v16 = *a4;
  if (a1 || (result = sub_103814(), (long long v15 = result) != 0))
  {
    uint64_t v18 = swift_allocObject();
    int v19 = v6;
    uint64_t v20 = v18;
    *(_DWORD *)(v18 + 16) = v19;
    *(unsigned char *)(v18 + 20) = v7;
    *(_DWORD *)(v18 + 24) = v8;
    *(unsigned char *)(v18 + 28) = v9;
    *(unsigned char *)(v18 + 29) = v10;
    *(unsigned char *)(v18 + 30) = v11;
    long long v21 = a3[3];
    *(_OWORD *)(v18 + 64) = a3[2];
    *(_OWORD *)(v18 + 80) = v21;
    long long v22 = a3[5];
    *(_OWORD *)(v18 + 96) = a3[4];
    *(_OWORD *)(v18 + 112) = v22;
    long long v23 = a3[1];
    *(_OWORD *)(v18 + 32) = *a3;
    *(_OWORD *)(v18 + 48) = v23;
    *(unsigned char *)(v18 + 128) = v16;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_C6CAC;
    *(void *)(v24 + 24) = v20;
    id v25 = a1;
    sub_68EB8((uint64_t)v26);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C4BAC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v16[0]) = a2;
  BYTE4(v16[0]) = BYTE4(a2) & 1;
  DWORD2(v16[0]) = a3;
  BYTE12(v16[0]) = BYTE4(a3) & 1;
  BYTE13(v16[0]) = BYTE5(a3) & 1;
  BYTE14(v16[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  char v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v16[2] = a4[2];
  v16[3] = v11;
  long long v12 = a4[5];
  v16[4] = a4[4];
  v16[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  v10(v14 + v7, v9, v5);
  sub_C7A00();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingBackgroundColorChangeEvent(0);
  sub_C7F0C(&qword_31AB28, (void (*)(uint64_t))type metadata accessor for ReadingBackgroundColorChangeEvent);
  memset(v16, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v16);
}

id EventReporter.emitReadingBrightnessChangeEvent(using:readingSessionData:contentData:brightness:)(void *a1, void *a2, void *a3, int a4)
{
  uint64_t v8 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v8 = result) != 0))
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    *(_DWORD *)(v10 + 32) = a4;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_C6CF0;
    *(void *)(v11 + 24) = v10;
    id v12 = a1;
    id v13 = a2;
    id v14 = a3;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C4FAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  sub_E1AD0((uint64_t)v14);
  sub_4E04(&qword_319FE0);
  uint64_t v12 = sub_27D380();
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  unsigned int v11 = enum case for DataEventTrait.onlyOnce(_:);
  unint64_t v7 = *(void (**)(unint64_t))(v4 + 104);
  v7(v6 + v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  sub_DF4A4((uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v7)(v8 + v5, v11, v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v14[0]) = a4;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v7)(v9 + v5, v11, v12);
  sub_C79AC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingBrightnessChangeEvent(0);
  sub_C7F0C(&qword_31AB18, (void (*)(uint64_t))type metadata accessor for ReadingBrightnessChangeEvent);
  memset(v14, 0, sizeof(v14));
  sub_27D2F0();
  return sub_6991C((uint64_t)v14);
}

id EventReporter.emitReadingFontChangeEvent(using:readingSessionData:contentData:fontName:)(void *a1, int *a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  int v9 = *a2;
  char v10 = *((unsigned char *)a2 + 4);
  int v11 = a2[2];
  char v12 = *((unsigned char *)a2 + 12);
  char v13 = *((unsigned char *)a2 + 13);
  char v28 = *((unsigned char *)a2 + 14);
  long long v14 = a3[3];
  v29[2] = a3[2];
  v29[3] = v14;
  long long v15 = a3[5];
  v29[4] = a3[4];
  v29[5] = v15;
  long long v16 = a3[1];
  id v17 = a1;
  v29[0] = *a3;
  v29[1] = v16;
  if (a1 || (id result = sub_103814(), (v17 = result) != 0))
  {
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = a4;
    uint64_t v21 = a5;
    uint64_t v22 = v19;
    *(_DWORD *)(v19 + 16) = v9;
    *(unsigned char *)(v19 + 20) = v10;
    *(_DWORD *)(v19 + 24) = v11;
    *(unsigned char *)(v19 + 28) = v12;
    *(unsigned char *)(v19 + 29) = v13;
    *(unsigned char *)(v19 + 30) = v28;
    long long v23 = a3[3];
    *(_OWORD *)(v19 + 64) = a3[2];
    *(_OWORD *)(v19 + 80) = v23;
    long long v24 = a3[5];
    *(_OWORD *)(v19 + 96) = a3[4];
    *(_OWORD *)(v19 + 112) = v24;
    long long v25 = a3[1];
    *(_OWORD *)(v19 + 32) = *a3;
    *(_OWORD *)(v19 + 48) = v25;
    *(void *)(v19 + 128) = v20;
    *(void *)(v19 + 136) = v21;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_C6E80;
    *(void *)(v26 + 24) = v22;
    id v27 = a1;
    sub_68EB8((uint64_t)v29);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C56D8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v16[0]) = a2;
  BYTE4(v16[0]) = BYTE4(a2) & 1;
  DWORD2(v16[0]) = a3;
  BYTE12(v16[0]) = BYTE4(a3) & 1;
  BYTE13(v16[0]) = BYTE5(a3) & 1;
  BYTE14(v16[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  unsigned int v15 = enum case for DataEventTrait.onlyOnce(_:);
  int v9 = *(void (**)(unint64_t))(v6 + 104);
  v9(v8 + v7);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v10 = a4[3];
  v16[2] = a4[2];
  v16[3] = v10;
  long long v11 = a4[5];
  v16[4] = a4[4];
  v16[5] = v11;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v9)(v12 + v7, v15, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v9)(v13 + v7, v15, v5);
  sub_C78A4();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingFontChangeEvent(0);
  sub_C7F0C(&qword_31AB08, (void (*)(uint64_t))type metadata accessor for ReadingFontChangeEvent);
  memset(v16, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v16);
}

uint64_t EventReporter.emitReadingOrientationChangeEvent(using:readingSessionData:contentData:)(void *a1)
{
  sub_E1AD0((uint64_t)&v39);
  int v33 = v39;
  char v34 = v40;
  int v35 = v41;
  char v36 = v42;
  char v37 = v43;
  char v38 = v44;
  sub_DF4A4((uint64_t)&v18);
  long long v3 = v18;
  char v4 = v19;
  uint64_t v5 = v20;
  uint64_t v6 = v21;
  uint64_t v7 = v22;
  uint64_t v8 = v23;
  __int16 v9 = v24;
  int v10 = v25;
  char v11 = v26;
  int v12 = v27;
  char v13 = v28;
  int v14 = v29;
  char v15 = v30;
  uint64_t v16 = v31;
  uint64_t v17 = v32;
  _s13BookAnalytics13EventReporterC028emitReadingOrientationChangeC05using18readingSessionData07contentL0yAA9BATrackerCSg_AA0fkL0VAA07ContentL0VtF_0(a1, &v33, &v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_C5C6C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v15[0]) = a2;
  BYTE4(v15[0]) = BYTE4(a2) & 1;
  DWORD2(v15[0]) = a3;
  BYTE12(v15[0]) = BYTE4(a3) & 1;
  BYTE13(v15[0]) = BYTE5(a3) & 1;
  BYTE14(v15[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  int v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v15[2] = a4[2];
  v15[3] = v11;
  long long v12 = a4[5];
  v15[4] = a4[4];
  v15[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingOrientationChangeEvent(0);
  sub_C7F0C(&qword_31AAF8, (void (*)(uint64_t))type metadata accessor for ReadingOrientationChangeEvent);
  memset(v15, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v15);
}

id EventReporter.emitReadingFontSizeChangeEvent(using:readingSessionData:contentData:fontSize:)(void *a1, int *a2, _OWORD *a3, float a4)
{
  int v7 = *a2;
  char v8 = *((unsigned char *)a2 + 4);
  int v9 = a2[2];
  char v10 = *((unsigned char *)a2 + 12);
  char v11 = *((unsigned char *)a2 + 13);
  char v12 = *((unsigned char *)a2 + 14);
  long long v13 = a3[3];
  v24[2] = a3[2];
  v24[3] = v13;
  long long v14 = a3[5];
  v24[4] = a3[4];
  v24[5] = v14;
  long long v15 = a3[1];
  uint64_t v16 = a1;
  v24[0] = *a3;
  v24[1] = v15;
  if (a1 || (result = sub_103814(), (uint64_t v16 = result) != 0))
  {
    uint64_t v18 = swift_allocObject();
    *(_DWORD *)(v18 + 16) = v7;
    *(unsigned char *)(v18 + 20) = v8;
    *(_DWORD *)(v18 + 24) = v9;
    *(unsigned char *)(v18 + 28) = v10;
    *(unsigned char *)(v18 + 29) = v11;
    *(unsigned char *)(v18 + 30) = v12;
    long long v19 = a3[3];
    *(_OWORD *)(v18 + 64) = a3[2];
    *(_OWORD *)(v18 + 80) = v19;
    long long v20 = a3[5];
    *(_OWORD *)(v18 + 96) = a3[4];
    *(_OWORD *)(v18 + 112) = v20;
    long long v21 = a3[1];
    *(_OWORD *)(v18 + 32) = *a3;
    *(_OWORD *)(v18 + 48) = v21;
    *(float *)(v18 + 128) = a4;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_C71D0;
    *(void *)(v22 + 24) = v18;
    id v23 = a1;
    sub_68EB8((uint64_t)v24);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C60E0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v16[0]) = a2;
  BYTE4(v16[0]) = BYTE4(a2) & 1;
  DWORD2(v16[0]) = a3;
  BYTE12(v16[0]) = BYTE4(a3) & 1;
  BYTE13(v16[0]) = BYTE5(a3) & 1;
  BYTE14(v16[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  char v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v16[2] = a4[2];
  v16[3] = v11;
  long long v12 = a4[5];
  v16[4] = a4[4];
  v16[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  v10(v14 + v7, v9, v5);
  sub_C76DC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingFontSizeChangeEvent(0);
  sub_C7F0C(&qword_31AAF0, (void (*)(uint64_t))type metadata accessor for ReadingFontSizeChangeEvent);
  memset(v16, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v16);
}

id EventReporter.emitReadingScrollViewSettingChangeEvent(using:readingSessionData:contentData:fontSize:isOn:)(void *a1, int *a2, _OWORD *a3, char a4, float a5)
{
  int v9 = *a2;
  char v10 = *((unsigned char *)a2 + 4);
  int v11 = a2[2];
  char v12 = *((unsigned char *)a2 + 12);
  char v13 = *((unsigned char *)a2 + 13);
  char v14 = *((unsigned char *)a2 + 14);
  long long v15 = a3[3];
  v28[2] = a3[2];
  v28[3] = v15;
  long long v16 = a3[5];
  v28[4] = a3[4];
  v28[5] = v16;
  long long v17 = a3[1];
  uint64_t v18 = a1;
  v28[0] = *a3;
  v28[1] = v17;
  if (a1 || (result = sub_103814(), (uint64_t v18 = result) != 0))
  {
    uint64_t v20 = swift_allocObject();
    char v21 = a4;
    uint64_t v22 = v20;
    *(_DWORD *)(v20 + 16) = v9;
    *(unsigned char *)(v20 + 20) = v10;
    *(_DWORD *)(v20 + 24) = v11;
    *(unsigned char *)(v20 + 28) = v12;
    *(unsigned char *)(v20 + 29) = v13;
    *(unsigned char *)(v20 + 30) = v14;
    long long v23 = a3[3];
    *(_OWORD *)(v20 + 64) = a3[2];
    *(_OWORD *)(v20 + 80) = v23;
    long long v24 = a3[5];
    *(_OWORD *)(v20 + 96) = a3[4];
    *(_OWORD *)(v20 + 112) = v24;
    long long v25 = a3[1];
    *(_OWORD *)(v20 + 32) = *a3;
    *(_OWORD *)(v20 + 48) = v25;
    *(float *)(v20 + 128) = a5;
    *(unsigned char *)(v20 + 132) = v21 & 1;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_C7358;
    *(void *)(v26 + 24) = v22;
    id v27 = a1;
    sub_68EB8((uint64_t)v28);
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_C65F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  LODWORD(v17[0]) = a2;
  BYTE4(v17[0]) = BYTE4(a2) & 1;
  DWORD2(v17[0]) = a3;
  BYTE12(v17[0]) = BYTE4(a3) & 1;
  BYTE13(v17[0]) = BYTE5(a3) & 1;
  BYTE14(v17[0]) = BYTE6(a3);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  char v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_ADEA4();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v11 = a4[3];
  v17[2] = a4[2];
  v17[3] = v11;
  long long v12 = a4[5];
  v17[4] = a4[4];
  v17[5] = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  v10(v13 + v7, v9, v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  v10(v14 + v7, v9, v5);
  sub_C76DC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_285930;
  v10(v15 + v7, v9, v5);
  sub_C7730();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingFontSizeChangeEvent(0);
  sub_C7F0C(&qword_31AAF0, (void (*)(uint64_t))type metadata accessor for ReadingFontSizeChangeEvent);
  memset(v17, 0, 32);
  sub_27D2F0();
  return sub_6991C((uint64_t)v17);
}

uint64_t _s13BookAnalytics13EventReporterC033emitReadingAutoNightSettingChangeC05using18readingSessionData07contentN04isOnyAA9BATrackerCSg_AA07BridgedfmN0CAA0s7ContentN0CSbtF_0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_E1AD0((uint64_t)&v22);
  int v6 = v22;
  char v7 = v23;
  int v8 = v24;
  char v9 = v25;
  char v10 = v26;
  char v11 = v27;
  sub_DF4A4((uint64_t)v28);
  id v12 = a1;
  if (a1 || (id v12 = sub_103814()) != 0)
  {
    uint64_t v13 = swift_allocObject();
    char v14 = a4;
    uint64_t v15 = v13;
    *(_DWORD *)(v13 + 16) = v6;
    *(unsigned char *)(v13 + 20) = v7;
    *(_DWORD *)(v13 + 24) = v8;
    *(unsigned char *)(v13 + 28) = v9;
    *(unsigned char *)(v13 + 29) = v10;
    *(unsigned char *)(v13 + 30) = v11;
    long long v16 = v28[3];
    *(_OWORD *)(v13 + 64) = v28[2];
    *(_OWORD *)(v13 + 80) = v16;
    long long v17 = v28[5];
    *(_OWORD *)(v13 + 96) = v28[4];
    *(_OWORD *)(v13 + 112) = v17;
    long long v18 = v28[1];
    *(_OWORD *)(v13 + 32) = v28[0];
    *(_OWORD *)(v13 + 48) = v18;
    *(unsigned char *)(v13 + 128) = v14 & 1;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_C6AF0;
    *(void *)(v19 + 24) = v15;
    id v20 = a1;
    sub_68EB8((uint64_t)v28);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v28);
}

uint64_t sub_C6AE8()
{
  return sub_C7B10(129);
}

uint64_t _s13BookAnalytics13EventReporterC032emitReadingBackgroundColorChangeC05using18readingSessionData07contentM0010backgroundhM0yAA9BATrackerCSg_AA07BridgedflM0CAA0q7ContentM0CAA0qghM0CtF_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_E1AD0((uint64_t)&v21);
  int v6 = v21;
  char v7 = v22;
  int v8 = v23;
  char v9 = v24;
  char v10 = v25;
  char v11 = v26;
  sub_DF4A4((uint64_t)v27);
  unint64_t v12 = *(void *)(a4 + OBJC_IVAR___BABackgroundColorData_backgroundColor);
  if (v12 >= 5)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    id v13 = a1;
    if (a1 || (id v13 = sub_103814()) != 0)
    {
      uint64_t v14 = swift_allocObject();
      *(_DWORD *)(v14 + 16) = v6;
      *(unsigned char *)(v14 + 20) = v7;
      *(_DWORD *)(v14 + 24) = v8;
      *(unsigned char *)(v14 + 28) = v9;
      *(unsigned char *)(v14 + 29) = v10;
      *(unsigned char *)(v14 + 30) = v11;
      long long v15 = v27[3];
      *(_OWORD *)(v14 + 64) = v27[2];
      *(_OWORD *)(v14 + 80) = v15;
      long long v16 = v27[5];
      *(_OWORD *)(v14 + 96) = v27[4];
      *(_OWORD *)(v14 + 112) = v16;
      long long v17 = v27[1];
      *(_OWORD *)(v14 + 32) = v27[0];
      *(_OWORD *)(v14 + 48) = v17;
      *(unsigned char *)(v14 + 128) = 0x4030201uLL >> (8 * v12);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_C6CAC;
      *(void *)(v18 + 24) = v14;
      id v19 = a1;
      sub_68EB8((uint64_t)v27);
      swift_retain();
      sub_27D730();

      swift_release();
      swift_release();
    }
    return sub_6957C((uint64_t)v27);
  }
  return result;
}

uint64_t sub_C6CA4()
{
  return sub_C7B10(129);
}

uint64_t sub_C6CB0()
{
  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_C6CF0(uint64_t a1)
{
  return sub_C4FAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t _s13BookAnalytics13EventReporterC021emitReadingFontChangeC05using18readingSessionData07contentL08fontNameyAA9BATrackerCSg_AA07BridgedfkL0CAA0q7ContentL0CSStF_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_E1AD0((uint64_t)&v25);
  int v8 = v25;
  char v9 = v26;
  int v10 = v27;
  char v11 = v28;
  char v12 = v29;
  char v24 = v30;
  sub_DF4A4((uint64_t)v31);
  id v13 = a1;
  if (a1 || (id v13 = sub_103814()) != 0)
  {
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = a4;
    uint64_t v16 = a5;
    uint64_t v17 = v14;
    *(_DWORD *)(v14 + 16) = v8;
    *(unsigned char *)(v14 + 20) = v9;
    *(_DWORD *)(v14 + 24) = v10;
    *(unsigned char *)(v14 + 28) = v11;
    *(unsigned char *)(v14 + 29) = v12;
    *(unsigned char *)(v14 + 30) = v24;
    long long v18 = v31[3];
    *(_OWORD *)(v14 + 64) = v31[2];
    *(_OWORD *)(v14 + 80) = v18;
    long long v19 = v31[5];
    *(_OWORD *)(v14 + 96) = v31[4];
    *(_OWORD *)(v14 + 112) = v19;
    long long v20 = v31[1];
    *(_OWORD *)(v14 + 32) = v31[0];
    *(_OWORD *)(v14 + 48) = v20;
    *(void *)(v14 + 128) = v15;
    *(void *)(v14 + 136) = v16;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_C6E80;
    *(void *)(v21 + 24) = v17;
    id v22 = a1;
    sub_68EB8((uint64_t)v31);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v31);
}

void _s13BookAnalytics13EventReporterC028emitReadingOrientationChangeC05using18readingSessionData07contentL0yAA9BATrackerCSg_AA0fkL0VAA07ContentL0VtF_0(id a1, int *a2, _OWORD *a3)
{
  char v4 = a1;
  int v5 = *a2;
  char v6 = *((unsigned char *)a2 + 4);
  int v7 = a2[2];
  char v8 = *((unsigned char *)a2 + 12);
  char v9 = *((unsigned char *)a2 + 13);
  char v10 = *((unsigned char *)a2 + 14);
  long long v11 = a3[3];
  v25[2] = a3[2];
  v25[3] = v11;
  long long v12 = a3[5];
  v25[4] = a3[4];
  v25[5] = v12;
  long long v13 = a3[1];
  v25[0] = *a3;
  v25[1] = v13;
  if (a1 || (a1 = sub_103814()) != 0)
  {
    id v24 = a1;
    uint64_t v14 = self;
    id v15 = v4;
    id v16 = [v14 sharedConnection];
    if (v16)
    {
      uint64_t v17 = v16;
      unsigned int v18 = [v16 isDiagnosticSubmissionAllowed];

      if (v18)
      {
        uint64_t v19 = swift_allocObject();
        *(_DWORD *)(v19 + 16) = v5;
        *(unsigned char *)(v19 + 20) = v6;
        *(_DWORD *)(v19 + 24) = v7;
        *(unsigned char *)(v19 + 28) = v8;
        *(unsigned char *)(v19 + 29) = v9;
        *(unsigned char *)(v19 + 30) = v10;
        long long v20 = a3[5];
        *(_OWORD *)(v19 + 96) = a3[4];
        *(_OWORD *)(v19 + 112) = v20;
        long long v21 = a3[3];
        *(_OWORD *)(v19 + 64) = a3[2];
        *(_OWORD *)(v19 + 80) = v21;
        long long v22 = a3[1];
        *(_OWORD *)(v19 + 32) = *a3;
        *(_OWORD *)(v19 + 48) = v22;
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = sub_C7850;
        *(void *)(v23 + 24) = v19;
        sub_68EB8((uint64_t)v25);
        swift_retain();
        sub_27D730();

        swift_release();
        swift_release();
      }
      else
      {
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t _s13BookAnalytics13EventReporterC025emitReadingFontSizeChangeC05using18readingSessionData07contentM004fontH0yAA9BATrackerCSg_AA07BridgedflM0CAA0q7ContentM0CSftF_0(void *a1, float a2)
{
  sub_E1AD0((uint64_t)&v18);
  int v4 = v18;
  char v5 = v19;
  int v6 = v20;
  char v7 = v21;
  char v8 = v22;
  char v9 = v23;
  sub_DF4A4((uint64_t)v24);
  id v10 = a1;
  if (a1 || (id v10 = sub_103814()) != 0)
  {
    uint64_t v11 = swift_allocObject();
    *(_DWORD *)(v11 + 16) = v4;
    *(unsigned char *)(v11 + 20) = v5;
    *(_DWORD *)(v11 + 24) = v6;
    *(unsigned char *)(v11 + 28) = v7;
    *(unsigned char *)(v11 + 29) = v8;
    *(unsigned char *)(v11 + 30) = v9;
    long long v12 = v24[3];
    *(_OWORD *)(v11 + 64) = v24[2];
    *(_OWORD *)(v11 + 80) = v12;
    long long v13 = v24[5];
    *(_OWORD *)(v11 + 96) = v24[4];
    *(_OWORD *)(v11 + 112) = v13;
    long long v14 = v24[1];
    *(_OWORD *)(v11 + 32) = v24[0];
    *(_OWORD *)(v11 + 48) = v14;
    *(float *)(v11 + 128) = a2;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_C71D0;
    *(void *)(v15 + 24) = v11;
    id v16 = a1;
    sub_68EB8((uint64_t)v24);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v24);
}

uint64_t sub_C71C8()
{
  return sub_C7B10(132);
}

uint64_t _s13BookAnalytics13EventReporterC034emitReadingScrollViewSettingChangeC05using18readingSessionData07contentN08fontSize4isOnyAA9BATrackerCSg_AA07BridgedfmN0CAA0u7ContentN0CSfSbtF_0(void *a1, float a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_E1AD0((uint64_t)&v24);
  int v8 = v24;
  char v9 = v25;
  int v10 = v26;
  char v11 = v27;
  char v12 = v28;
  char v13 = v29;
  sub_DF4A4((uint64_t)v30);
  id v14 = a1;
  if (a1 || (id v14 = sub_103814()) != 0)
  {
    uint64_t v15 = swift_allocObject();
    char v16 = a5;
    uint64_t v17 = v15;
    *(_DWORD *)(v15 + 16) = v8;
    *(unsigned char *)(v15 + 20) = v9;
    *(_DWORD *)(v15 + 24) = v10;
    *(unsigned char *)(v15 + 28) = v11;
    *(unsigned char *)(v15 + 29) = v12;
    *(unsigned char *)(v15 + 30) = v13;
    long long v18 = v30[3];
    *(_OWORD *)(v15 + 64) = v30[2];
    *(_OWORD *)(v15 + 80) = v18;
    long long v19 = v30[5];
    *(_OWORD *)(v15 + 96) = v30[4];
    *(_OWORD *)(v15 + 112) = v19;
    long long v20 = v30[1];
    *(_OWORD *)(v15 + 32) = v30[0];
    *(_OWORD *)(v15 + 48) = v20;
    *(float *)(v15 + 128) = a2;
    *(unsigned char *)(v15 + 132) = v16 & 1;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_C7358;
    *(void *)(v21 + 24) = v17;
    id v22 = a1;
    sub_68EB8((uint64_t)v30);
    swift_retain();
    sub_27D730();

    swift_release();
    swift_release();
  }
  return sub_6957C((uint64_t)v30);
}

uint64_t sub_C7350()
{
  return sub_C7B10(133);
}

uint64_t sub_C735C()
{
  _Block_release(*(const void **)(v0 + 80));

  return _swift_deallocObject(v0, 96, 7);
}

void sub_C73DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_AD880;
  uint64_t v2 = (char *)&dword_31AAC0 + dword_31AAC0;
  __asm { BR              X8; sub_C4030 }
}

uint64_t sub_C74D8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  int v4 = (int *)v0[4];
  char v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_C80E0;
  int v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_31D508 + dword_31D508);
  return v6(v2, v3, v4);
}

uint64_t sub_C759C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C75DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  int v6 = (int *)v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_C80E0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_31D510 + dword_31D510);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_C76A8(uint64_t a1)
{
  return sub_C3418(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void **)(v1 + 72));
}

unint64_t sub_C76DC()
{
  unint64_t result = qword_31AAE0;
  if (!qword_31AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AAE0);
  }
  return result;
}

unint64_t sub_C7730()
{
  unint64_t result = qword_31AAE8;
  if (!qword_31AAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AAE8);
  }
  return result;
}

uint64_t sub_C7784()
{
  return sub_C7B10(133);
}

uint64_t sub_C778C(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C65F0(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

uint64_t sub_C77E8()
{
  return sub_C7B10(132);
}

uint64_t sub_C77F0(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C60E0(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

uint64_t sub_C7848()
{
  return sub_C7B10(128);
}

uint64_t sub_C7850(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C5C6C(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

unint64_t sub_C78A4()
{
  unint64_t result = qword_31AB00;
  if (!qword_31AB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB00);
  }
  return result;
}

uint64_t sub_C78FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_C7954(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C56D8(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

unint64_t sub_C79AC()
{
  unint64_t result = qword_31AB10;
  if (!qword_31AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB10);
  }
  return result;
}

unint64_t sub_C7A00()
{
  unint64_t result = qword_31AB20;
  if (!qword_31AB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB20);
  }
  return result;
}

uint64_t sub_C7A54()
{
  return sub_C7B10(129);
}

uint64_t sub_C7A5C(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C4BAC(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

unint64_t sub_C7AB4()
{
  unint64_t result = qword_31AB30;
  if (!qword_31AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB30);
  }
  return result;
}

uint64_t sub_C7B08()
{
  return sub_C7B10(129);
}

uint64_t sub_C7B10(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_C7B6C(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 29)) {
    uint64_t v2 = 0;
  }
  return sub_C46AC(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), v2 | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | *(unsigned int *)(v1 + 24), (_OWORD *)(v1 + 32));
}

uint64_t sub_C7BC4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C7BFC()
{
  uint64_t v13 = sub_27D0A0();
  uint64_t v1 = *(void *)(v13 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = sub_4E04(&qword_31AB40);
  uint64_t v8 = *(void *)(v16 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (v9 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9;
  unint64_t v14 = v10 + *(void *)(v8 + 64);
  uint64_t v11 = v2 | v9 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v13);

  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v10, v16);

  return _swift_deallocObject(v0, v14, v11);
}

uint64_t sub_C7DD0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_27D0A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_4E04(&qword_31AB40);
  return sub_C371C(a1, v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v7), *(void **)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(char **)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_C7F0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_C7F54()
{
  unint64_t result = qword_31AB50;
  if (!qword_31AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB50);
  }
  return result;
}

unint64_t sub_C7FA8()
{
  unint64_t result = qword_31AB58;
  if (!qword_31AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB58);
  }
  return result;
}

unint64_t sub_C7FFC()
{
  unint64_t result = qword_31AB60;
  if (!qword_31AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB60);
  }
  return result;
}

unint64_t sub_C8050()
{
  unint64_t result = qword_31AB68;
  if (!qword_31AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AB68);
  }
  return result;
}

uint64_t sub_C80E4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31AB70, &enum case for SessionGroup.default(_:));
}

uint64_t static PreorderFailEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AB70, a1);
}

uint64_t sub_C8144(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31AB88, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PreorderFailEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AB88, a1);
}

uint64_t PreorderFailEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderFailEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31AC10);
}

uint64_t PreorderFailEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderFailEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderFailEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderFailEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderFailEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderFailEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderFailEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderFailEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderFailEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PreorderFailEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t PreorderFailEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderFailEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderFailEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31ACA8);
}

uint64_t PreorderFailEvent.Model.init(contentData:contentStoreData:sectionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(unsigned char *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 24) = v9;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 56) = v12;
  *(_DWORD *)(a5 + 60) = v13;
  *(unsigned char *)(a5 + 64) = v14;
  *(_DWORD *)(a5 + 68) = v15;
  *(unsigned char *)(a5 + 72) = v16;
  int v17 = *(_DWORD *)(a1 + 73);
  long long v18 = *a2;
  long long v19 = a2[1];
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v18;
  long long v20 = a2[2];
  long long v21 = a2[3];
  *(_OWORD *)(a5 + 112) = v19;
  *(_OWORD *)(a5 + 128) = v20;
  *(_OWORD *)(a5 + 144) = v21;
  long long v22 = a3[1];
  *(_OWORD *)(a5 + 168) = *a3;
  *(_OWORD *)(a5 + 184) = v22;
  long long v23 = a3[3];
  *(_OWORD *)(a5 + 200) = a3[2];
  *(_OWORD *)(a5 + 216) = v23;
  long long v24 = a3[5];
  *(_OWORD *)(a5 + 232) = a3[4];
  char v25 = *(unsigned char *)(a1 + 77);
  LODWORD(v10) = *((_DWORD *)a2 + 16);
  LOBYTE(v11) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a5 + 73) = v17;
  *(unsigned char *)(a5 + 77) = v25;
  *(unsigned char *)(a5 + 164) = v11;
  *(_DWORD *)(a5 + 160) = v10;
  *(_OWORD *)(a5 + 248) = v24;
  *(_OWORD *)(a5 + 264) = a3[6];
  uint64_t v26 = a5 + *(int *)(type metadata accessor for PreorderFailEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_C88C0()
{
  unint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C895C(uint64_t a1)
{
  unint64_t v2 = sub_C8C9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C8998(uint64_t a1)
{
  unint64_t v2 = sub_C8C9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PreorderFailEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31ABA0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_C8C9C();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)int v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)int v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    type metadata accessor for PreorderFailEvent.Model(0);
    LOBYTE(v32) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_C8C9C()
{
  unint64_t result = qword_31ABA8;
  if (!qword_31ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ABA8);
  }
  return result;
}

uint64_t PreorderFailEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4E04(&qword_31ABB0);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreorderFailEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  char v44 = a1;
  sub_5900(a1, v11);
  sub_C8C9C();
  long long v12 = v7;
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v14 = v10;
  __int16 v15 = v5;
  uint64_t v17 = v41;
  uint64_t v16 = v42;
  char v52 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v46 + 1);
  char v19 = v47[0];
  long long v20 = *(_OWORD *)&v47[8];
  uint64_t v21 = *(void *)&v47[24];
  uint64_t v22 = v48;
  __int16 v23 = WORD4(v48);
  int v24 = HIDWORD(v48);
  char v25 = v49;
  int v26 = DWORD1(v49);
  char v27 = BYTE8(v49);
  char v28 = BYTE13(v49);
  *(void *)uint64_t v14 = v46;
  *((void *)v14 + 1) = v18;
  v14[16] = v19;
  *(_OWORD *)(v14 + 24) = v20;
  *((void *)v14 + 5) = v21;
  *((void *)v14 + 6) = v22;
  *((_WORD *)v14 + 28) = v23;
  *((_DWORD *)v14 + 15) = v24;
  v14[64] = v25;
  *((_DWORD *)v14 + 17) = v26;
  v14[72] = v27;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v49 + 9);
  v14[77] = v28;
  *((_OWORD *)v14 + 5) = v50;
  char v52 = 1;
  sub_6D068();
  sub_27E1F0();
  int v29 = v49;
  char v30 = BYTE4(v49);
  long long v31 = *(_OWORD *)v47;
  *((_OWORD *)v14 + 6) = v46;
  *((_OWORD *)v14 + 7) = v31;
  long long v32 = v48;
  *((_OWORD *)v14 + 8) = *(_OWORD *)&v47[16];
  *((_OWORD *)v14 + 9) = v32;
  v14[164] = v30;
  *((_DWORD *)v14 + 40) = v29;
  char v52 = 2;
  sub_20898();
  sub_27E1F0();
  long long v33 = *(_OWORD *)v47;
  *(_OWORD *)(v14 + 168) = v46;
  long long v34 = *(_OWORD *)&v47[16];
  long long v35 = v48;
  *(_OWORD *)(v14 + 184) = v33;
  *(_OWORD *)(v14 + 200) = v34;
  long long v36 = v49;
  long long v37 = v50;
  *(_OWORD *)(v14 + 216) = v35;
  *(_OWORD *)(v14 + 232) = v36;
  long long v38 = v51;
  *(_OWORD *)(v14 + 248) = v37;
  *(_OWORD *)(v14 + 264) = v38;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v43);
  (*(void (**)(void, char *, uint64_t))(v16 + 32))(*(int *)(v8 + 28), v15, v3);
  sub_C91F0(0, v40);
  sub_5E94((uint64_t)v44);
  return sub_C9254(0);
}

uint64_t sub_C91F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreorderFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C9254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreorderFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C92B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PreorderFailEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_C92C8(void *a1)
{
  return PreorderFailEvent.Model.encode(to:)(a1);
}

uint64_t sub_C92E0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157A0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AB70, a1);
}

uint64_t sub_C9318@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157A8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AB88, a1);
}

uint64_t getEnumTagSinglePayload for PreorderFailEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C9364);
}

uint64_t sub_C9364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for PreorderFailEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C9520);
}

uint64_t sub_C9520(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t getEnumTagSinglePayload for PreorderFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C96E8);
}

uint64_t sub_C96E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PreorderFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C97AC);
}

uint64_t sub_C97AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_C9854()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreorderFailEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC99CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreorderFailEvent.Model.CodingKeys()
{
  return &type metadata for PreorderFailEvent.Model.CodingKeys;
}

unint64_t sub_C9A08()
{
  unint64_t result = qword_31ACE8;
  if (!qword_31ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ACE8);
  }
  return result;
}

unint64_t sub_C9A60()
{
  unint64_t result = qword_31ACF0;
  if (!qword_31ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ACF0);
  }
  return result;
}

unint64_t sub_C9AB8()
{
  unint64_t result = qword_31ACF8;
  if (!qword_31ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ACF8);
  }
  return result;
}

BookAnalytics::ActionType_optional __swiftcall ActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F80F8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ActionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x546567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x6F74747542797562;
      break;
    case 3:
      uint64_t result = 0x7473694C746E6177;
      break;
    case 4:
      uint64_t result = 0x74536E4977656976;
      break;
    case 5:
      uint64_t result = 0x6165527472617473;
      break;
    case 6:
      uint64_t result = 0x73694C7472617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C9C7C(unsigned __int8 *a1, char *a2)
{
  return sub_2E528(*a1, *a2);
}

unint64_t sub_C9C8C()
{
  unint64_t result = qword_31AD00;
  if (!qword_31AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AD00);
  }
  return result;
}

Swift::Int sub_C9CE0()
{
  return sub_25C054();
}

uint64_t sub_C9CEC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_C9E34()
{
  return sub_25C054();
}

BookAnalytics::ActionType_optional sub_C9E3C(Swift::String *a1)
{
  return ActionType.init(rawValue:)(*a1);
}

void sub_C9E48(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007061;
      uint64_t v3 = 0x546567617373656DLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "buyButtonTap");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x7473694C746E6177;
      *(void *)(a1 + 8) = 0xEB00000000646441;
      break;
    case 4:
      *(void *)a1 = 0x74536E4977656976;
      *(void *)(a1 + 8) = 0xEB0000000065726FLL;
      break;
    case 5:
      strcpy((char *)a1, "startReading");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 6:
      strcpy((char *)a1, "startListening");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_C9F74()
{
  return sub_27DED0();
}

uint64_t sub_C9FD4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCA0F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionType()
{
  return &type metadata for ActionType;
}

unint64_t sub_CA128()
{
  unint64_t result = qword_31AD08;
  if (!qword_31AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AD08);
  }
  return result;
}

uint64_t EventReporter.emitAllInSeriesViewEvent(using:for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = (void *)swift_allocObject();
  long long v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_CA478;
  *(void *)(v8 + 24) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_CA258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t result = BARoundIntegerToSignificantFigures(a2, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *(void *)&long long v12 = a3;
    *((void *)&v12 + 1) = a4;
    LODWORD(v13) = result;
    sub_4E04(&qword_319FE0);
    uint64_t v8 = sub_27D380();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, enum case for DataEventTrait.onlyOnce(_:), v8);
    sub_69BCC();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for AllInSeriesViewEvent(0);
    sub_CE3E8((unint64_t *)&unk_31AE10, (void (*)(uint64_t))type metadata accessor for AllInSeriesViewEvent);
    long long v12 = 0u;
    long long v13 = 0u;
    sub_27D2F0();
    return sub_6991C((uint64_t)&v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_CA440()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_CA478(uint64_t a1)
{
  return sub_CA258(a1, v1[2], v1[3], v1[4]);
}

uint64_t EventReporter.emitBrowseCollectionScreenViewEvent(using:for:with:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_27D0A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v9 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_CD974;
  *(void *)(v10 + 24) = v9;
  id v11 = a3;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CA728()
{
  type metadata accessor for BrowseCollectionScreenViewEvent(0);
  sub_CE3E8((unint64_t *)&unk_31AE00, (void (*)(uint64_t))type metadata accessor for BrowseCollectionScreenViewEvent);
  sub_27D2D0();
  sub_DEF60(v5);
  uint64_t v6 = *(void *)&v5[0];
  sub_4E04(&qword_319FE0);
  uint64_t v0 = sub_27D380();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_ADDFC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memset(v5, 0, sizeof(v5));
  sub_27D2F0();
  return sub_6991C((uint64_t)v5);
}

uint64_t EventReporter.emitCollectionScreenViewEvent(using:from:for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_27D0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a5;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12], (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_CD97C;
  *(void *)(v14 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CACD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t result = BARoundIntegerToSignificantFigures(a2, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    int v8 = result;
    if (result <= 0x7FFFFFFF)
    {
      type metadata accessor for CollectionScreenViewEvent(0);
      sub_CE3E8((unint64_t *)&unk_31ADF0, (void (*)(uint64_t))type metadata accessor for CollectionScreenViewEvent);
      sub_27D2D0();
      *(void *)&long long v13 = a3;
      *((void *)&v13 + 1) = a4;
      LODWORD(v14) = v8;
      sub_4E04(&qword_319FE0);
      uint64_t v9 = sub_27D380();
      uint64_t v10 = *(void *)(v9 - 8);
      unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_285930;
      (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, enum case for DataEventTrait.onlyOnce(_:), v9);
      sub_69BCC();
      sub_27D2E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v13 = 0u;
      long long v14 = 0u;
      sub_27D2F0();
      return sub_6991C((uint64_t)&v13);
    }
  }
  __break(1u);
  return result;
}

uint64_t EventReporter.emitContextualActionSheetExposureEvent(using:from:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_27D0A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v3;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v11[v10], (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_CD998;
  *(void *)(v12 + 24) = v11;
  id v13 = v3;
  swift_unknownObjectRetain();
  id v14 = a1;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CB2B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_103170(a3, a4, (uint64_t)&v46);
  unint64_t v5 = v47;
  uint64_t v33 = v46;
  char v32 = v48;
  uint64_t v6 = v50;
  uint64_t v31 = v49;
  uint64_t v8 = *((void *)&v50 + 1);
  uint64_t v7 = *(void *)&v51[0];
  char v29 = BYTE9(v51[0]);
  char v30 = BYTE8(v51[0]);
  char v27 = v51[1];
  int v28 = HIDWORD(v51[0]);
  char v25 = BYTE8(v51[1]);
  int v26 = DWORD1(v51[1]);
  v9.i32[0] = *(_DWORD *)((char *)&v51[1] + 9);
  int16x8_t v24 = (int16x8_t)vmovl_u8(v9);
  char v35 = BYTE13(v51[1]);
  uint64_t v10 = *((void *)&v51[2] + 1);
  uint64_t v34 = *(void *)&v51[2];
  type metadata accessor for ContextualActionSheetExposureEvent(0);
  sub_CE3E8(&qword_31ADE0, (void (*)(uint64_t))type metadata accessor for ContextualActionSheetExposureEvent);
  sub_27D2D0();
  id v11 = [a3 assetID];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_27DDB0();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  *(void *)&long long v50 = v13;
  *((void *)&v50 + 1) = v15;
  LOBYTE(v51[0]) = 2;
  memset((char *)v51 + 8, 0, 96);
  *(void *)&long long v36 = v33;
  *((void *)&v36 + 1) = v5;
  LOBYTE(v37) = v32;
  *((void *)&v37 + 1) = v31;
  *(void *)&long long v38 = v6;
  *((void *)&v38 + 1) = v8;
  *(void *)&long long v39 = v7;
  BYTE8(v39) = v30;
  BYTE9(v39) = v29;
  HIDWORD(v39) = v28;
  LOBYTE(v40) = v27;
  DWORD1(v40) = v26;
  BYTE8(v40) = v25;
  *(_DWORD *)((char *)&v40 + 9) = vmovn_s16(v24).u32[0];
  BYTE13(v40) = v35;
  *(void *)&long long v41 = v34;
  *((void *)&v41 + 1) = v10;
  sub_4E04(&qword_319FE0);
  uint64_t v16 = sub_27D380();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_285930;
  uint64_t v20 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 104);
  v21(v19 + v18, enum case for DataEventTrait.onlyOnce(_:), v16);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v42 = v51[3];
  long long v43 = v51[4];
  long long v44 = v51[5];
  uint64_t v45 = *(void *)&v51[6];
  long long v38 = v50;
  long long v39 = v51[0];
  long long v40 = v51[1];
  long long v41 = v51[2];
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_285930;
  v21(v22 + v18, v20, v16);
  sub_CE394();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  sub_37644((uint64_t)&v46);
  long long v36 = 0u;
  long long v37 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v36);
}

uint64_t EventReporter.emitGetStartedViewEvent(using:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_27D0A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_CD9B4;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t EventReporter.emitLibraryViewEvent(using:from:with:displayedIn:sortedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_27D0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a3;
  *((void *)v13 + 3) = a4;
  *((void *)v13 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12], (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_CDA00;
  *(void *)(v14 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CBDE4(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6 = a2;
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
LABEL_3:
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v31 = a4;
  if (!v7) {
    goto LABEL_15;
  }
  *(void *)&v39[0] = _swiftEmptyArrayStorage;
  sub_E3488(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_21:
    unint64_t v40 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
LABEL_22:
      sub_27E390();
      __break(1u);
LABEL_23:
      *(void *)&v39[0] = a3;
    }
  }
  uint64_t v9 = 0;
  uint64_t v8 = *(void **)&v39[0];
  unint64_t v33 = v6 & 0xC000000000000001;
  uint64_t v35 = v7;
  unint64_t v36 = v6;
  do
  {
    if (v7 == v9)
    {
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_27E150();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    uint64_t v10 = v8;
    if (v33) {
      uint64_t v11 = (char *)sub_27E100();
    }
    else {
      uint64_t v11 = (char *)*(id *)(v6 + 8 * v9 + 32);
    }
    unint64_t v12 = v11;
    a4 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentPrivateID + 8];
    uint64_t v13 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentUserID + 8];
    unint64_t v4 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentType];
    if (v4 >= 7) {
      goto LABEL_21;
    }
    uint64_t v14 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentPrivateID];
    uint64_t v38 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentUserID];
    uint64_t v15 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentID + 8];
    uint64_t v37 = *(void *)&v11[OBJC_IVAR___BALibraryItemTypeData_contentID];
    uint64_t v16 = *(void **)&v11[OBJC_IVAR___BALibraryItemTypeData_isSample];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v17 = [v16 BOOLValue];

    uint64_t v8 = v10;
    *(void *)&v39[0] = v10;
    unint64_t v18 = v10[2];
    unint64_t v19 = v8[3];
    if (v18 >= v19 >> 1)
    {
      sub_E3488(v19 > 1, v18 + 1, 1);
      uint64_t v8 = *(void **)&v39[0];
    }
    ++v9;
    _OWORD v8[2] = v18 + 1;
    uint64_t v20 = &v8[8 * v18];
    v20[4] = v14;
    v20[5] = a4;
    v20[6] = v38;
    v20[7] = v13;
    *((unsigned char *)v20 + 64) = v4;
    unint64_t v6 = v36;
    v20[9] = v37;
    v20[10] = v15;
    *((unsigned char *)v20 + 88) = v17;
    uint64_t v7 = v35;
  }
  while (v35 != v9);
  a4 = v31;
LABEL_15:
  if (a3 >= 3) {
    goto LABEL_23;
  }
  if (a4 >= 5)
  {
    *(void *)&v39[0] = v31;
    goto LABEL_22;
  }
  uint64_t v21 = v8;
  type metadata accessor for LibraryViewEvent(0);
  sub_CE3E8(&qword_31ADB8, (void (*)(uint64_t))type metadata accessor for LibraryViewEvent);
  sub_27D2D0();
  *(void *)&v39[0] = v21;
  sub_4E04(&qword_319FE0);
  uint64_t v34 = sub_27D380();
  uint64_t v22 = *(void *)(v34 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_285930;
  uint64_t v25 = enum case for DataEventTrait.onlyOnce(_:);
  int v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 104);
  unsigned int v30 = enum case for DataEventTrait.onlyOnce(_:);
  v26(v24 + v23, enum case for DataEventTrait.onlyOnce(_:), v34);
  sub_ADDA8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_285930;
  v26(v27 + v23, v25, v34);
  sub_CE2EC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_285930;
  v26(v28 + v23, v30, v34);
  sub_CE340();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  memset(v39, 0, sizeof(v39));
  sub_27D2F0();
  return sub_6991C((uint64_t)v39);
}

uint64_t EventReporter.emitShareSheetExposureEvent(using:from:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_27D0A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v3;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v11[v10], (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_CDA1C;
  *(void *)(v12 + 24) = v11;
  id v13 = v3;
  swift_unknownObjectRetain();
  id v14 = a1;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CC708(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_103170(a3, a4, (uint64_t)&v24);
  long long v4 = v24;
  char v21 = v25;
  uint64_t v5 = v26;
  uint64_t v6 = v28;
  uint64_t v19 = v27;
  uint64_t v20 = *((void *)&v25 + 1);
  int v17 = v30;
  __int16 v18 = v29;
  int v7 = v32;
  char v15 = v33;
  char v16 = v31;
  char v23 = v35;
  uint64_t v8 = v37;
  uint64_t v22 = v36;
  type metadata accessor for ShareSheetExposureEvent(0);
  sub_CE3E8((unint64_t *)&unk_31ADA8, (void (*)(uint64_t))type metadata accessor for ShareSheetExposureEvent);
  int v9 = v34;
  sub_27D2D0();
  long long v24 = v4;
  LOBYTE(v25) = v21;
  *((void *)&v25 + 1) = v20;
  uint64_t v26 = v5;
  uint64_t v27 = v19;
  uint64_t v28 = v6;
  __int16 v29 = v18;
  int v30 = v17;
  char v31 = v16;
  int v32 = v7;
  char v33 = v15;
  int v34 = v9;
  char v35 = v23;
  uint64_t v36 = v22;
  uint64_t v37 = v8;
  sub_4E04(&qword_319FE0);
  uint64_t v10 = sub_27D380();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for DataEventTrait.onlyOnce(_:), v10);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v24 = 0u;
  long long v25 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v24);
}

uint64_t EventReporter.emitTabViewEvent(using:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_27D0A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_CDA38;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CCD48(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  a3(0);
  sub_CE3E8(a4, a5);
  sub_27D2D0();
  memset(v8, 0, sizeof(v8));
  sub_27D2F0();
  return sub_6991C((uint64_t)v8);
}

uint64_t EventReporter.emitUnifiedMessageExposureEvent(using:from:messageType:messageIdentifier:hasActionable:actionIdentifier:placementName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  int v22 = a6;
  uint64_t v25 = a1;
  uint64_t v13 = sub_27D0A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(&v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  *(void *)(v17 + 32) = a5;
  *(unsigned char *)(v17 + 40) = v22;
  uint64_t v18 = v24;
  *(void *)(v17 + 48) = v23;
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = a9;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v14 + 32))(v17 + v16, &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], v13);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_CDA84;
  *(void *)(v19 + 24) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_CD1C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 >= 7)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    type metadata accessor for UnifiedMessageExposureEvent(0);
    sub_CE3E8(&qword_31AD90, (void (*)(uint64_t))type metadata accessor for UnifiedMessageExposureEvent);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_27D2D0();
    uint64_t v13 = a6;
    uint64_t v14 = a7;
    uint64_t v15 = a8;
    sub_CE298();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memset(v12, 0, sizeof(v12));
    sub_27D2F0();
    return sub_6991C((uint64_t)v12);
  }
  return result;
}

uint64_t EventReporter.emitRemoveSuggestionCardEvent(using:suggestionType:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(void *a1, char *a2, uint64_t a3, uint64_t a4, char *a5, char *a6, uint64_t a7, char *a8, char *a9)
{
  char v23 = *a2;
  char v14 = *a5;
  char v15 = *a6;
  char v16 = *a8;
  char v17 = *a9;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v9;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  *(unsigned char *)(v18 + 40) = v15;
  *(unsigned char *)(v18 + 41) = v14;
  *(void *)(v18 + 48) = a1;
  *(_DWORD *)(v18 + 56) = a7;
  *(unsigned char *)(v18 + 60) = BYTE4(a7) & 1;
  *(unsigned char *)(v18 + 61) = v16;
  *(unsigned char *)(v18 + 62) = v17;
  *(unsigned char *)(v18 + 63) = v23;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_CDAD0;
  *(void *)(v19 + 24) = v18;
  id v20 = v9;
  swift_bridgeObjectRetain();
  id v21 = a1;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_CD760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6, uint64_t a7, unint64_t a8, unsigned __int8 a9, unsigned __int8 a10, char a11)
{
  unsigned __int8 v15 = a5;
  unsigned __int8 v14 = a6;
  unsigned __int8 v13 = a9;
  unsigned __int8 v12 = a10;
  sub_102DC0(a3, a4, &v15, &v14, a7, a8 | ((HIDWORD(a8) & 1) << 32), &v13, &v12, (uint64_t)v16);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v16[0]) = a11;
  sub_CE244();
  sub_27D2E0();
  type metadata accessor for RemoveSuggestionCardEvent(0);
  sub_CE3E8((unint64_t *)&unk_31AD80, (void (*)(uint64_t))type metadata accessor for RemoveSuggestionCardEvent);
  memset(v16, 0, sizeof(v16));
  sub_27D2F0();
  return sub_6991C((uint64_t)v16);
}

uint64_t sub_CD97C(uint64_t a1)
{
  return sub_CE074(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_CACD0);
}

uint64_t sub_CD998(uint64_t a1)
{
  return sub_CE074(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_CB2B4);
}

uint64_t sub_CD9B4(uint64_t a1)
{
  return sub_CDDF8(a1, (void (*)(void))type metadata accessor for GetStartedViewEvent, &qword_31ADD8, (void (*)(uint64_t))type metadata accessor for GetStartedViewEvent);
}

uint64_t sub_CDA00(uint64_t a1)
{
  return sub_CE074(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_CBDE4);
}

uint64_t sub_CDA1C(uint64_t a1)
{
  return sub_CE074(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_CC708);
}

uint64_t sub_CDA38(uint64_t a1)
{
  return sub_CDDF8(a1, (void (*)(void))type metadata accessor for TabViewEvent, &qword_31ADA0, (void (*)(uint64_t))type metadata accessor for TabViewEvent);
}

uint64_t sub_CDA88()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_CDAD0(uint64_t a1)
{
  return sub_CD760(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(unsigned char *)(v1 + 41), *(void *)(v1 + 48), *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32), *(_WORD *)(v1 + 61), HIBYTE(*(_WORD *)(v1 + 61)), *(unsigned char *)(v1 + 63));
}

uint64_t sub_CDB2C()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CDC08(uint64_t a1)
{
  sub_27D0A0();
  return sub_CD1C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_CDC98()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CDD68()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CDDF8(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v9 = *(void *)(sub_27D0A0() - 8);
  return sub_CCD48(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t sub_CDE8C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CDEC8()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CDFA8()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CE074(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v4 = *(void *)(sub_27D0A0() - 8);
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (char *)v2 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7, v8);
}

uint64_t sub_CE104()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_CE1A8()
{
  sub_27D0A0();

  return sub_CA728();
}

unint64_t sub_CE244()
{
  unint64_t result = qword_31AD78;
  if (!qword_31AD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AD78);
  }
  return result;
}

unint64_t sub_CE298()
{
  unint64_t result = qword_31AD98;
  if (!qword_31AD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AD98);
  }
  return result;
}

unint64_t sub_CE2EC()
{
  unint64_t result = qword_31ADC8;
  if (!qword_31ADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ADC8);
  }
  return result;
}

unint64_t sub_CE340()
{
  unint64_t result = qword_31ADD0;
  if (!qword_31ADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ADD0);
  }
  return result;
}

unint64_t sub_CE394()
{
  unint64_t result = qword_31ADE8;
  if (!qword_31ADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ADE8);
  }
  return result;
}

uint64_t sub_CE3E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_CE480(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31AE20, &enum case for SessionGroup.default(_:));
}

uint64_t static GoalAdjustViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AE20, a1);
}

uint64_t sub_CE4E0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31AE38, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GoalAdjustViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AE38, a1);
}

uint64_t GoalAdjustViewEvent.goalAdjustTypeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31AE50);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GoalAdjustViewEvent.goalAdjustTypeData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31AE50);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t GoalAdjustViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalAdjustViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GoalAdjustViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31AED8);
}

uint64_t GoalAdjustViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalAdjustViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GoalAdjustViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GoalAdjustViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for GoalAdjustViewEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t GoalAdjustViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalAdjustViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GoalAdjustViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31AF70);
}

uint64_t GoalAdjustViewEvent.Model.init(goalAdjustTypeData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for GoalAdjustViewEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_CE95C()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_CE9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_CFDFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_CE9C8(uint64_t a1)
{
  unint64_t v2 = sub_CEBFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_CEA04(uint64_t a1)
{
  unint64_t v2 = sub_CEBFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GoalAdjustViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31AE58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_CEBFC();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_CEC50();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for GoalAdjustViewEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_CEBFC()
{
  unint64_t result = qword_31AE60;
  if (!qword_31AE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AE60);
  }
  return result;
}

unint64_t sub_CEC50()
{
  unint64_t result = qword_31AE68;
  if (!qword_31AE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AE68);
  }
  return result;
}

uint64_t GoalAdjustViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_31AE70);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GoalAdjustViewEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_CEBFC();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    uint64_t v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_CEF9C();
    uint64_t v14 = v25;
    sub_27E260();
    uint64_t v19 = v11;
    unsigned char *v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_CEFF0(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_CEF9C()
{
  unint64_t result = qword_31AE78;
  if (!qword_31AE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AE78);
  }
  return result;
}

uint64_t sub_CEFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GoalAdjustViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_CF054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GoalAdjustViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_CF06C(void *a1)
{
  return GoalAdjustViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_CF084@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157B0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AE20, a1);
}

uint64_t sub_CF0BC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157B8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AE38, a1);
}

uint64_t sub_CF0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for GoalAdjustViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31AE50);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for GoalAdjustViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31AE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CF694);
}

uint64_t sub_CF694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31AE50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for GoalAdjustViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CF7A8);
}

uint64_t sub_CF7A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31AE50);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_CF8B4()
{
  sub_CF97C();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_CF97C()
{
  if (!qword_31AEE8)
  {
    sub_CEF9C();
    sub_CEC50();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31AEE8);
    }
  }
}

uint64_t getEnumTagSinglePayload for GoalAdjustViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CF9F8);
}

uint64_t sub_CF9F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GoalAdjustViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CFAB4);
}

unsigned char *sub_CFAB4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_CFB58()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GoalAdjustViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCFCBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalAdjustViewEvent.Model.CodingKeys()
{
  return &type metadata for GoalAdjustViewEvent.Model.CodingKeys;
}

unint64_t sub_CFCF8()
{
  unint64_t result = qword_31AFA8;
  if (!qword_31AFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AFA8);
  }
  return result;
}

unint64_t sub_CFD50()
{
  unint64_t result = qword_31AFB0;
  if (!qword_31AFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AFB0);
  }
  return result;
}

unint64_t sub_CFDA8()
{
  unint64_t result = qword_31AFB8;
  if (!qword_31AFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31AFB8);
  }
  return result;
}

uint64_t sub_CFDFC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AF020 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_CFEF8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31AFC0, &enum case for SessionGroup.default(_:));
}

uint64_t static AudioSnoozeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AFC0, a1);
}

uint64_t sub_CFF58(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31AFD8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AudioSnoozeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AFD8, a1);
}

uint64_t AudioSnoozeEvent.audioSnoozeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSnoozeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31AFF0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioSnoozeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31B078);
}

uint64_t AudioSnoozeEvent.audioSnoozeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSnoozeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31AFF0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSnoozeEvent.audioSnoozeData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSnoozeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSnoozeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioSnoozeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSnoozeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioSnoozeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioSnoozeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for AudioSnoozeEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t AudioSnoozeEvent.Model.audioSnoozeData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  uint64_t v4 = v1[15];
  *a1 = v1[12];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioSnoozeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioSnoozeEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioSnoozeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31B118);
}

uint64_t AudioSnoozeEvent.Model.init(contentData:audioSnoozeData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  long long v16 = *a2;
  uint64_t v18 = *((void *)a2 + 2);
  uint64_t v17 = *((void *)a2 + 3);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 96) = v16;
  *(void *)(a4 + 112) = v18;
  *(void *)(a4 + 120) = v17;
  uint64_t v19 = a4 + *(int *)(type metadata accessor for AudioSnoozeEvent.Model(0) + 24);
  uint64_t v20 = sub_27D7C0();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);

  return v21(v19, a3, v20);
}

uint64_t sub_D0538()
{
  uint64_t v1 = 0x6F6E536F69647561;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_D05AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_D269C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D05D4(uint64_t a1)
{
  unint64_t v2 = sub_D08A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D0610(uint64_t a1)
{
  unint64_t v2 = sub_D08A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioSnoozeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31AFF8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_D08A8();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v26 = *(void *)v4;
  *((void *)&v26 + 1) = v10;
  LOBYTE(v27) = v11;
  long long v28 = v12;
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  __int16 v31 = v15;
  int v32 = v16;
  char v33 = v17;
  int v34 = v18;
  char v35 = v19;
  int v36 = *(_DWORD *)(v4 + 73);
  char v37 = v20;
  long long v38 = *(_OWORD *)(v4 + 80);
  char v25 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    uint64_t v21 = *(void *)(v4 + 112);
    uint64_t v22 = *(void *)(v4 + 120);
    long long v26 = *(_OWORD *)(v4 + 96);
    uint64_t v27 = v21;
    *(void *)&long long v28 = v22;
    char v25 = 1;
    sub_D08FC();
    sub_27E330();
    type metadata accessor for AudioSnoozeEvent.Model(0);
    LOBYTE(v26) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_D08A8()
{
  unint64_t result = qword_31B000;
  if (!qword_31B000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B000);
  }
  return result;
}

unint64_t sub_D08FC()
{
  unint64_t result = qword_31B008;
  if (!qword_31B008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B008);
  }
  return result;
}

uint64_t AudioSnoozeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_31B010);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AudioSnoozeEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v36 = a1;
  sub_5900(a1, v13);
  sub_D08A8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v36);
  }
  uint64_t v14 = v34;
  __int16 v15 = v6;
  char v50 = 0;
  sub_1A98C();
  uint64_t v16 = v35;
  sub_27E260();
  uint64_t v17 = *((void *)&v37 + 1);
  char v18 = v38;
  long long v19 = v39;
  uint64_t v20 = v40;
  uint64_t v21 = v41;
  __int16 v22 = v42;
  int v23 = v43;
  char v24 = v44;
  int v25 = v45;
  char v26 = v46;
  char v27 = v48;
  *(void *)long long v12 = v37;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v47;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v49;
  char v50 = 1;
  sub_D0D78();
  sub_27E260();
  uint64_t v28 = v38;
  uint64_t v29 = v39;
  *((_OWORD *)v12 + 6) = v37;
  *((void *)v12 + 14) = v28;
  *((void *)v12 + 15) = v29;
  LOBYTE(v37) = 2;
  sub_1AB30(&qword_315E28);
  uint64_t v31 = 0;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_D0DCC((uint64_t)v12, v33);
  sub_5E94((uint64_t)v36);
  return sub_D0E30((uint64_t)v12);
}

unint64_t sub_D0D78()
{
  unint64_t result = qword_31B018;
  if (!qword_31B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B018);
  }
  return result;
}

uint64_t sub_D0DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioSnoozeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D0E30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioSnoozeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D0E8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioSnoozeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_D0EA4(void *a1)
{
  return AudioSnoozeEvent.Model.encode(to:)(a1);
}

uint64_t sub_D0EBC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157C0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31AFC0, a1);
}

uint64_t sub_D0EF4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157C8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31AFD8, a1);
}

uint64_t sub_D0F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioSnoozeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31AFF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AudioSnoozeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D1704);
}

uint64_t sub_D1704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31AFF0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AudioSnoozeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D1870);
}

uint64_t sub_D1870(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31AFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_D19D4()
{
  sub_D1B48(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_D1B48(319, (unint64_t *)&unk_31B088, (void (*)(void))sub_D0D78, (void (*)(void))sub_D08FC);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_D1B48(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AudioSnoozeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = a2[15];
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v17 = a1 + v12;
    uint64_t v18 = (uint64_t)a2 + v12;
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v11;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v17, v18, v13);
  }
  return v3;
}

uint64_t destroy for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v11;
  uint64_t v16 = a2 + v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v16, v12);
  return a1;
}

uint64_t assignWithCopy for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for AudioSnoozeEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D2284);
}

uint64_t sub_D2284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AudioSnoozeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D2348);
}

uint64_t sub_D2348(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_D23F0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioSnoozeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD255CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSnoozeEvent.Model.CodingKeys()
{
  return &type metadata for AudioSnoozeEvent.Model.CodingKeys;
}

unint64_t sub_D2598()
{
  unint64_t result = qword_31B158;
  if (!qword_31B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B158);
  }
  return result;
}

unint64_t sub_D25F0()
{
  unint64_t result = qword_31B160;
  if (!qword_31B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B160);
  }
  return result;
}

unint64_t sub_D2648()
{
  unint64_t result = qword_31B168;
  if (!qword_31B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B168);
  }
  return result;
}

uint64_t sub_D269C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6E536F69647561 && a2 == 0xEF61746144657A6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_D283C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31B170, &enum case for SessionGroup.default(_:));
}

uint64_t static ContentExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31B170, a1);
}

uint64_t sub_D289C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31B188, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ContentExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31B188, a1);
}

uint64_t ContentExposureEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31B210);
}

uint64_t ContentExposureEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.flowcaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.flowcaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.flowcaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.mediaData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.onDevicePersonalizationPropertyData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.onDevicePersonalizationPropertyData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.onDevicePersonalizationPropertyData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 64);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.genreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 64);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.genreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.dealsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 68);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.dealsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 68);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.dealsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 72);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 72);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 76);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent(0) + 76);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ContentExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v8, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v8, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v8, v25);
  uint64_t v26 = a1 + v4[15];
  uint64_t v27 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v8, v27);
  uint64_t v28 = a1 + v4[16];
  uint64_t v29 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v8, v29);
  uint64_t v30 = a1 + v4[17];
  uint64_t v31 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v30, v8, v31);
  uint64_t v32 = a1 + v4[18];
  uint64_t v33 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v32, v2, v33);
  uint64_t v34 = a1 + v4[19];
  uint64_t v35 = sub_4E04(&qword_315DE8);
  int v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104);

  return v36(v34, v2, v35);
}

uint64_t ContentExposureEvent.Model.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  char v3 = *(unsigned char *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  __int16 v8 = *(_WORD *)(v1 + 168);
  int v9 = *(_DWORD *)(v1 + 172);
  char v10 = *(unsigned char *)(v1 + 176);
  int v11 = *(_DWORD *)(v1 + 180);
  char v12 = *(unsigned char *)(v1 + 184);
  char v13 = *(unsigned char *)(v1 + 189);
  uint64_t v15 = *(void *)(v1 + 192);
  uint64_t v14 = *(void *)(v1 + 200);
  *(void *)a1 = *(void *)(v1 + 112);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 68) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(v1 + 185);
  *(unsigned char *)(a1 + 77) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ContentExposureEvent.Model.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 208);
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = v1 + 208;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(void *)(v4 + 40);
  uint64_t v9 = *(void *)(v4 + 48);
  uint64_t v10 = *(void *)(v4 + 56);
  uint64_t v11 = *(void *)(v4 + 64);
  uint64_t v12 = *(void *)(v4 + 72);
  uint64_t v13 = *(void *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 88);
  uint64_t v15 = *(void *)(v4 + 96);
  uint64_t v16 = *(void *)(v4 + 104);
  __int16 v17 = *(_WORD *)(v4 + 116);
  int v18 = *(_DWORD *)(v4 + 112);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  *(_WORD *)(a1 + 116) = v17;
  *(_DWORD *)(a1 + 112) = v18;
  return sub_6B874(v2, v3);
}

uint64_t ContentExposureEvent.Model.flowcaseData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[41];
  uint64_t v3 = v1[42];
  uint64_t v4 = v1[43];
  uint64_t v5 = v1[44];
  uint64_t v6 = v1[45];
  uint64_t v7 = v1[46];
  uint64_t v8 = v1[47];
  uint64_t v9 = v1[48];
  uint64_t v10 = v1[49];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_D4230(v2, v3);
}

uint64_t sub_D4230(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ContentExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 512);
  long long v3 = *(_OWORD *)(v1 + 480);
  long long v19 = *(_OWORD *)(v1 + 496);
  long long v20 = v2;
  long long v4 = *(_OWORD *)(v1 + 512);
  long long v21 = *(_OWORD *)(v1 + 528);
  long long v5 = *(_OWORD *)(v1 + 448);
  long long v7 = *(_OWORD *)(v1 + 416);
  long long v15 = *(_OWORD *)(v1 + 432);
  long long v6 = v15;
  long long v16 = v5;
  long long v8 = *(_OWORD *)(v1 + 448);
  long long v9 = *(_OWORD *)(v1 + 480);
  long long v17 = *(_OWORD *)(v1 + 464);
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = *(_OWORD *)(v1 + 416);
  v14[0] = *(_OWORD *)(v1 + 400);
  long long v12 = v14[0];
  v14[1] = v11;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 528);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v3;
  uint64_t v22 = *(void *)(v1 + 544);
  *(void *)(a1 + 144) = *(void *)(v1 + 544);
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v7;
  return sub_35DC8((uint64_t)v14);
}

uint64_t ContentExposureEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 576);
  *(void *)a1 = *(void *)(v1 + 552);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 560);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ContentExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *(void *)(v1 + 592);
  uint64_t v4 = *(void *)(v1 + 600);
  uint64_t v5 = *(void *)(v1 + 608);
  int v6 = *(_DWORD *)(v1 + 616);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = v6;
  return sub_409E0(v2, v3);
}

uint64_t ContentExposureEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 640);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 624);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

__n128 ContentExposureEvent.Model.onDevicePersonalizationPropertyData.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 664);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 672);
  __n128 result = *(__n128 *)(v1 + 648);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t ContentExposureEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[85];
  uint64_t v3 = v1[86];
  uint64_t v4 = v1[87];
  uint64_t v5 = v1[88];
  uint64_t v6 = v1[89];
  uint64_t v7 = v1[90];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void ContentExposureEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 728);
}

uint64_t ContentExposureEvent.Model.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 736);
  uint64_t v3 = *(void *)(v1 + 744);
  uint64_t v4 = *(void *)(v1 + 752);
  uint64_t v5 = *(void *)(v1 + 760);
  uint64_t v6 = *(void *)(v1 + 768);
  uint64_t v7 = *(void *)(v1 + 776);
  uint64_t v8 = *(void *)(v1 + 784);
  uint64_t v9 = *(void *)(v1 + 792);
  char v10 = *(unsigned char *)(v1 + 804);
  int v11 = *(_DWORD *)(v1 + 800);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 68) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  return sub_6B78C(v2, v3, v4, v5, v6, v7);
}

uint64_t ContentExposureEvent.Model.genreData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[101];
  uint64_t v3 = v1[102];
  uint64_t v4 = v1[103];
  uint64_t v5 = v1[104];
  uint64_t v6 = v1[105];
  uint64_t v7 = v1[106];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_B0AC8(v2, v3);
}

uint64_t ContentExposureEvent.Model.dealsData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[107];
  uint64_t v3 = v1[108];
  uint64_t v4 = v1[109];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_40A5C(v2, v3, v4);
}

uint64_t ContentExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent.Model(0) + 72);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31B2D8);
}

uint64_t ContentExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentExposureEvent.Model(0) + 76);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentExposureEvent.Model.init(sectionData:contentData:contentExposureData:flowcaseData:linkData:pageData:mediaData:upSellData:onDevicePersonalizationPropertyData:seriesData:suggestionData:contentStoreData:genreData:dealsData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, long long *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, long long *a10, long long *a11, unsigned char *a12, long long *a13, long long *a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v18 = *(_DWORD *)(a1 + 4);
  *(unsigned char *)a9 = *(unsigned char *)a1;
  *(_DWORD *)(a9 + 4) = v18;
  uint64_t v19 = *(void *)(a1 + 48);
  *(void *)(a9 + 40) = *(void *)(a1 + 40);
  *(void *)(a9 + 48) = v19;
  long long v20 = *(_OWORD *)(a1 + 8);
  long long v21 = *(_OWORD *)(a1 + 24);
  *(_DWORD *)(a9 + 88) = *(_DWORD *)(a1 + 88);
  long long v22 = *(_OWORD *)(a1 + 56);
  long long v23 = *(_OWORD *)(a1 + 72);
  *(unsigned char *)(a9 + 92) = *(unsigned char *)(a1 + 92);
  uint64_t v24 = *(void *)(a1 + 104);
  *(void *)(a9 + 96) = *(void *)(a1 + 96);
  *(void *)(a9 + 104) = v24;
  uint64_t v25 = *(void *)(a2 + 8);
  *(void *)(a9 + 112) = *(void *)a2;
  *(void *)(a9 + 120) = v25;
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(a2 + 16);
  uint64_t v26 = *(void *)(a2 + 48);
  *(void *)(a9 + 152) = *(void *)(a2 + 40);
  *(void *)(a9 + 160) = v26;
  long long v27 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a9 + 168) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a9 + 172) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a9 + 176) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a9 + 180) = *(_DWORD *)(a2 + 68);
  char v28 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a9 + 8) = v20;
  *(_OWORD *)(a9 + 24) = v21;
  *(_OWORD *)(a9 + 56) = v22;
  *(_OWORD *)(a9 + 72) = v23;
  *(_OWORD *)(a9 + 136) = v27;
  *(unsigned char *)(a9 + 184) = v28;
  *(_DWORD *)(a9 + 185) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a9 + 189) = *(unsigned char *)(a2 + 77);
  long long v29 = *(_OWORD *)(a2 + 80);
  *(_WORD *)(a9 + 324) = *((_WORD *)a3 + 58);
  long long v31 = *a3;
  long long v30 = a3[1];
  long long v32 = a3[2];
  long long v33 = a3[3];
  long long v34 = a3[4];
  long long v35 = a3[5];
  long long v36 = a3[6];
  *(_DWORD *)(a9 + 320) = *((_DWORD *)a3 + 28);
  long long v37 = *a4;
  long long v38 = a4[1];
  long long v39 = a4[2];
  long long v40 = a4[3];
  *(void *)(a9 + 392) = *((void *)a4 + 8);
  *(void *)(a9 + 544) = *((void *)a5 + 18);
  long long v42 = *a5;
  long long v41 = a5[1];
  long long v44 = a5[4];
  long long v43 = a5[5];
  long long v46 = a5[2];
  long long v45 = a5[3];
  long long v48 = a5[7];
  long long v47 = a5[8];
  long long v49 = a5[6];
  *(_OWORD *)(a9 + 328) = v37;
  *(_OWORD *)(a9 + 344) = v38;
  *(_OWORD *)(a9 + 360) = v39;
  *(_OWORD *)(a9 + 376) = v40;
  *(_OWORD *)(a9 + 552) = *(_OWORD *)a6;
  long long v50 = *a11;
  long long v51 = a11[1];
  long long v52 = a11[2];
  long long v53 = *a14;
  long long v54 = a14[1];
  long long v55 = a14[2];
  uint64_t v56 = *(void *)(a6 + 24);
  *(void *)(a9 + 568) = *(void *)(a6 + 16);
  *(void *)(a9 + 576) = v56;
  long long v58 = *a7;
  long long v57 = a7[1];
  *(_DWORD *)(a9 + 616) = *((_DWORD *)a7 + 8);
  long long v59 = *a8;
  *(void *)(a9 + 640) = *((void *)a8 + 2);
  *(void *)(a9 + 664) = *((void *)a10 + 2);
  long long v60 = *a10;
  *(unsigned char *)(a9 + 672) = *((unsigned char *)a10 + 24);
  *(unsigned char *)(a9 + 728) = *a12;
  *(unsigned char *)(a9 + 804) = *((unsigned char *)a13 + 68);
  *(_OWORD *)(a9 + 584) = v58;
  *(_OWORD *)(a9 + 600) = v57;
  *(_OWORD *)(a9 + 648) = v60;
  *(_OWORD *)(a9 + 680) = v50;
  *(_OWORD *)(a9 + 696) = v51;
  *(_OWORD *)(a9 + 712) = v52;
  *(_OWORD *)(a9 + 808) = v53;
  *(_OWORD *)(a9 + 824) = v54;
  *(_OWORD *)(a9 + 840) = v55;
  *(_OWORD *)(a9 + 856) = *(_OWORD *)a15;
  long long v61 = *a13;
  long long v62 = a13[1];
  long long v63 = a13[2];
  long long v64 = a13[3];
  *(_DWORD *)(a9 + 800) = *((_DWORD *)a13 + 16);
  *(void *)(a9 + 872) = *(void *)(a15 + 16);
  *(_OWORD *)(a9 + 192) = v29;
  *(_OWORD *)(a9 + 208) = v31;
  *(_OWORD *)(a9 + 224) = v30;
  *(_OWORD *)(a9 + 240) = v32;
  *(_OWORD *)(a9 + 256) = v33;
  *(_OWORD *)(a9 + 272) = v34;
  *(_OWORD *)(a9 + 288) = v35;
  *(_OWORD *)(a9 + 304) = v36;
  *(_OWORD *)(a9 + 400) = v42;
  *(_OWORD *)(a9 + 416) = v41;
  *(_OWORD *)(a9 + 464) = v44;
  *(_OWORD *)(a9 + 480) = v43;
  *(_OWORD *)(a9 + 432) = v46;
  *(_OWORD *)(a9 + 448) = v45;
  *(_OWORD *)(a9 + 512) = v48;
  *(_OWORD *)(a9 + 528) = v47;
  *(_OWORD *)(a9 + 496) = v49;
  *(_OWORD *)(a9 + 624) = v59;
  *(_OWORD *)(a9 + 736) = v61;
  *(_OWORD *)(a9 + 752) = v62;
  *(_OWORD *)(a9 + 768) = v63;
  *(_OWORD *)(a9 + 784) = v64;
  uint64_t v65 = type metadata accessor for ContentExposureEvent.Model(0);
  uint64_t v66 = a9 + *(int *)(v65 + 72);
  uint64_t v67 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32))(v66, a16, v67);
  uint64_t v68 = a9 + *(int *)(v65 + 76);
  uint64_t v69 = sub_27D7F0();
  v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);

  return v70(v68, a17, v69);
}

uint64_t sub_D4864(char a1)
{
  uint64_t result = 0x446E6F6974636573;
  switch(a1)
  {
    case 1:
      return 0x44746E65746E6F63;
    case 2:
      return 0xD000000000000013;
    case 3:
      return 0x65736163776F6C66;
    case 4:
      unsigned int v3 = 1802398060;
      return v3 | 0x6174614400000000;
    case 5:
      unsigned int v3 = 1701273968;
      return v3 | 0x6174614400000000;
    case 6:
      uint64_t v4 = 0x44616964656DLL;
      goto LABEL_20;
    case 7:
      uint64_t v5 = 0x6C6C65537075;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 8:
      return 0xD000000000000023;
    case 9:
      uint64_t v5 = 0x736569726573;
      return v5 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 10:
      return 0x6974736567677573;
    case 11:
      return 0xD000000000000010;
    case 12:
      uint64_t v4 = 0x4465726E6567;
      goto LABEL_20;
    case 13:
      uint64_t v4 = 0x44736C616564;
      goto LABEL_20;
    case 14:
      uint64_t v4 = 0x44746E657665;
      goto LABEL_20;
    case 15:
      uint64_t v4 = 0x4464656D6974;
LABEL_20:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_D4A44()
{
  return sub_D4864(*v0);
}

uint64_t sub_D4A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_DC618(a1, a2);
  *a3 = result;
  return result;
}

void sub_D4A74(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_D4A80(uint64_t a1)
{
  unint64_t v2 = sub_D5320();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D4ABC(uint64_t a1)
{
  unint64_t v2 = sub_D5320();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31B1A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_D5320();
  sub_27E440();
  int v9 = *(_DWORD *)(v3 + 4);
  long long v10 = *(_OWORD *)(v3 + 8);
  long long v11 = *(_OWORD *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 40);
  uint64_t v13 = *(void *)(v3 + 48);
  int v14 = *(_DWORD *)(v3 + 88);
  char v15 = *(unsigned char *)(v3 + 92);
  uint64_t v16 = *(void *)(v3 + 96);
  uint64_t v17 = *(void *)(v3 + 104);
  LOBYTE(v58[0]) = *(unsigned char *)v3;
  DWORD1(v58[0]) = v9;
  *(_OWORD *)((char *)v58 + 8) = v10;
  *(_OWORD *)((char *)&v58[1] + 8) = v11;
  *((void *)&v58[2] + 1) = v12;
  *(void *)long long v59 = v13;
  *(_OWORD *)&v59[8] = *(_OWORD *)(v3 + 56);
  *(_OWORD *)&v59[24] = *(_OWORD *)(v3 + 72);
  *(_DWORD *)&v59[40] = v14;
  v59[44] = v15;
  *(void *)&long long v60 = v16;
  *((void *)&v60 + 1) = v17;
  LOBYTE(v65) = 0;
  sub_1FE58();
  sub_27E330();
  if (!v2)
  {
    uint64_t v18 = *(void *)(v3 + 120);
    char v19 = *(unsigned char *)(v3 + 128);
    long long v20 = *(_OWORD *)(v3 + 136);
    uint64_t v21 = *(void *)(v3 + 152);
    uint64_t v22 = *(void *)(v3 + 160);
    __int16 v23 = *(_WORD *)(v3 + 168);
    int v24 = *(_DWORD *)(v3 + 172);
    char v25 = *(unsigned char *)(v3 + 176);
    int v26 = *(_DWORD *)(v3 + 180);
    char v27 = *(unsigned char *)(v3 + 184);
    uint64_t v28 = *(unsigned __int8 *)(v3 + 189);
    *(void *)&v58[0] = *(void *)(v3 + 112);
    *((void *)&v58[0] + 1) = v18;
    LOBYTE(v58[1]) = v19;
    *(_OWORD *)((char *)&v58[1] + 8) = v20;
    *((void *)&v58[2] + 1) = v21;
    *(void *)long long v59 = v22;
    *(_WORD *)&v59[8] = v23;
    *(_DWORD *)&v59[12] = v24;
    v59[16] = v25;
    *(_DWORD *)&v59[20] = v26;
    v59[24] = v27;
    *(_DWORD *)&v59[25] = *(_DWORD *)(v3 + 185);
    v59[29] = v28;
    *(_OWORD *)&v59[32] = *(_OWORD *)(v3 + 192);
    LOBYTE(v65) = 1;
    sub_1A1D4();
    sub_27E330();
    int v29 = *(_DWORD *)(v3 + 320);
    __int16 v30 = *(_WORD *)(v3 + 324);
    long long v31 = *(_OWORD *)(v3 + 224);
    v58[0] = *(_OWORD *)(v3 + 208);
    v58[1] = v31;
    long long v32 = *(_OWORD *)(v3 + 256);
    v58[2] = *(_OWORD *)(v3 + 240);
    *(_OWORD *)long long v59 = v32;
    long long v33 = *(_OWORD *)(v3 + 288);
    *(_OWORD *)&v59[16] = *(_OWORD *)(v3 + 272);
    *(_OWORD *)&v59[32] = v33;
    long long v60 = *(_OWORD *)(v3 + 304);
    WORD2(v61) = v30;
    LODWORD(v61) = v29;
    LOBYTE(v65) = 2;
    sub_6C454();
    sub_27E2C0();
    uint64_t v34 = *(void *)(v3 + 392);
    long long v35 = *(_OWORD *)(v3 + 344);
    long long v65 = *(_OWORD *)(v3 + 328);
    long long v66 = v35;
    long long v36 = *(_OWORD *)(v3 + 376);
    long long v67 = *(_OWORD *)(v3 + 360);
    long long v68 = v36;
    uint64_t v69 = v34;
    char v64 = 3;
    sub_26F98();
    sub_27E2C0();
    long long v37 = *(_OWORD *)(v3 + 512);
    long long v60 = *(_OWORD *)(v3 + 496);
    long long v61 = v37;
    long long v62 = *(_OWORD *)(v3 + 528);
    uint64_t v63 = *(void *)(v3 + 544);
    long long v38 = *(_OWORD *)(v3 + 448);
    v58[2] = *(_OWORD *)(v3 + 432);
    *(_OWORD *)long long v59 = v38;
    long long v39 = *(_OWORD *)(v3 + 480);
    *(_OWORD *)&v59[16] = *(_OWORD *)(v3 + 464);
    *(_OWORD *)&v59[32] = v39;
    long long v40 = *(_OWORD *)(v3 + 416);
    v58[0] = *(_OWORD *)(v3 + 400);
    v58[1] = v40;
    char v57 = 4;
    sub_1FF00();
    sub_27E330();
    uint64_t v41 = *(void *)(v3 + 568);
    uint64_t v42 = *(void *)(v3 + 576);
    v58[0] = *(_OWORD *)(v3 + 552);
    *(void *)&v58[1] = v41;
    *((void *)&v58[1] + 1) = v42;
    char v57 = 5;
    sub_1FEAC();
    sub_27E330();
    int v43 = *(_DWORD *)(v3 + 616);
    long long v44 = *(_OWORD *)(v3 + 600);
    v58[0] = *(_OWORD *)(v3 + 584);
    v58[1] = v44;
    LODWORD(v58[2]) = v43;
    char v57 = 6;
    sub_1DF40();
    sub_27E2C0();
    uint64_t v45 = *(void *)(v3 + 640);
    v58[0] = *(_OWORD *)(v3 + 624);
    *(void *)&v58[1] = v45;
    char v57 = 7;
    sub_36A74();
    sub_27E2C0();
    uint64_t v46 = *(void *)(v3 + 664);
    char v47 = *(unsigned char *)(v3 + 672);
    v58[0] = *(_OWORD *)(v3 + 648);
    *(void *)&v58[1] = v46;
    BYTE8(v58[1]) = v47;
    char v57 = 8;
    sub_36AC8();
    sub_27E2C0();
    long long v48 = *(_OWORD *)(v3 + 696);
    v58[0] = *(_OWORD *)(v3 + 680);
    v58[1] = v48;
    v58[2] = *(_OWORD *)(v3 + 712);
    char v57 = 9;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v58[0]) = *(unsigned char *)(v3 + 728);
    char v57 = 10;
    sub_36B1C();
    sub_27E2C0();
    int v49 = *(_DWORD *)(v3 + 800);
    char v50 = *(unsigned char *)(v3 + 804);
    long long v51 = *(_OWORD *)(v3 + 752);
    v58[0] = *(_OWORD *)(v3 + 736);
    v58[1] = v51;
    long long v52 = *(_OWORD *)(v3 + 784);
    v58[2] = *(_OWORD *)(v3 + 768);
    *(_OWORD *)long long v59 = v52;
    v59[20] = v50;
    *(_DWORD *)&v59[16] = v49;
    char v57 = 11;
    sub_6C400();
    sub_27E2C0();
    long long v53 = *(_OWORD *)(v3 + 824);
    v58[0] = *(_OWORD *)(v3 + 808);
    v58[1] = v53;
    v58[2] = *(_OWORD *)(v3 + 840);
    char v57 = 12;
    sub_B12C4();
    sub_27E2C0();
    uint64_t v54 = *(void *)(v3 + 872);
    v58[0] = *(_OWORD *)(v3 + 856);
    *(void *)&v58[1] = v54;
    char v57 = 13;
    sub_41530();
    sub_27E2C0();
    type metadata accessor for ContentExposureEvent.Model(0);
    LOBYTE(v58[0]) = 14;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v58[0]) = 15;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_D5320()
{
  unint64_t result = qword_31B1A8;
  if (!qword_31B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B1A8);
  }
  return result;
}

uint64_t ContentExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v93 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v83[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v89 = sub_27D7C0();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v7 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = sub_4E04(&qword_31B1B0);
  uint64_t v8 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  long long v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = type metadata accessor for ContentExposureEvent.Model(0);
  __chkstk_darwin(v87);
  uint64_t v12 = &v83[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = v12 + 584;
  v91 = v12 + 320;
  uint64_t v13 = a1[3];
  uint64_t v97 = (uint64_t)a1;
  sub_5900(a1, v13);
  sub_D5320();
  v95 = v10;
  uint64_t v14 = v113;
  sub_27E430();
  if (v14)
  {
    uint64_t v113 = v14;
    int v15 = 0;
    unsigned int v16 = 0;
LABEL_4:
    uint64_t result = sub_5E94(v97);
    int v18 = (v16 >> 2) & 1;
    LODWORD(v96) = (v16 >> 7) & 1;
    LODWORD(v95) = (v16 >> 6) & 1;
    LODWORD(v94) = (v16 >> 5) & 1;
    LODWORD(v93) = (v16 >> 4) & 1;
    LODWORD(v92) = (v16 >> 3) & 1;
    if ((v16 & 1) == 0)
    {
      int v19 = 0;
      int v20 = 0;
      int v21 = 0;
      LODWORD(v97) = 0;
      if ((v16 & 2) == 0) {
        goto LABEL_6;
      }
      goto LABEL_21;
    }
    LODWORD(v97) = 0;
    int v21 = 0;
    LODWORD(v85) = 0;
    LODWORD(v86) = 0;
    int v26 = (v16 >> 1) & 1;
    char v27 = &v107[20];
    goto LABEL_19;
  }
  v92 = v7;
  v85 = v5;
  uint64_t v86 = v3;
  LOBYTE(v98) = 0;
  sub_20898();
  sub_27E260();
  int v28 = *(_DWORD *)&v106[4];
  long long v29 = *(_OWORD *)&v106[8];
  long long v30 = *(_OWORD *)&v106[24];
  uint64_t v31 = *(void *)&v106[40];
  uint64_t v32 = *(void *)v107;
  int v33 = *(_DWORD *)&v107[40];
  char v34 = v107[44];
  long long v35 = v108;
  *uint64_t v12 = v106[0];
  *((_DWORD *)v12 + 1) = v28;
  *(_OWORD *)(v12 + 8) = v29;
  *(_OWORD *)(v12 + 24) = v30;
  *((void *)v12 + 5) = v31;
  *((void *)v12 + 6) = v32;
  *(_OWORD *)(v12 + 56) = *(_OWORD *)&v107[8];
  *(_OWORD *)(v12 + 72) = *(_OWORD *)&v107[24];
  *((_DWORD *)v12 + 22) = v33;
  v12[92] = v34;
  *((_OWORD *)v12 + 6) = v35;
  LOBYTE(v98) = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v36 = *(void *)&v106[8];
  char v37 = v106[16];
  long long v38 = *(_OWORD *)&v106[24];
  uint64_t v39 = *(void *)&v106[40];
  uint64_t v40 = *(void *)v107;
  __int16 v41 = *(_WORD *)&v107[8];
  int v42 = *(_DWORD *)&v107[12];
  char v43 = v107[16];
  int v44 = *(_DWORD *)&v107[20];
  char v45 = v107[24];
  char v46 = v107[29];
  *((void *)v12 + 14) = *(void *)v106;
  *((void *)v12 + 15) = v36;
  v12[128] = v37;
  *(_OWORD *)(v12 + 136) = v38;
  *((void *)v12 + 19) = v39;
  *((void *)v12 + 20) = v40;
  *((_WORD *)v12 + 84) = v41;
  *((_DWORD *)v12 + 43) = v42;
  v12[176] = v43;
  *((_DWORD *)v12 + 45) = v44;
  v12[184] = v45;
  *(_DWORD *)(v12 + 185) = *(_DWORD *)&v107[25];
  v12[189] = v46;
  *((_OWORD *)v12 + 12) = *(_OWORD *)&v107[32];
  LOBYTE(v98) = 2;
  sub_6D0BC();
  sub_27E1F0();
  int v47 = v109;
  __int16 v48 = WORD2(v109);
  long long v49 = *(_OWORD *)&v106[16];
  *((_OWORD *)v12 + 13) = *(_OWORD *)v106;
  *((_OWORD *)v12 + 14) = v49;
  long long v50 = *(_OWORD *)v107;
  *((_OWORD *)v12 + 15) = *(_OWORD *)&v106[32];
  *((_OWORD *)v12 + 16) = v50;
  long long v51 = *(_OWORD *)&v107[32];
  *((_OWORD *)v12 + 17) = *(_OWORD *)&v107[16];
  *((_OWORD *)v12 + 18) = v51;
  *((_OWORD *)v12 + 19) = v108;
  long long v52 = v91;
  *((_WORD *)v91 + 2) = v48;
  *(_DWORD *)long long v52 = v47;
  LOBYTE(v98) = 3;
  sub_26F40();
  sub_27E1F0();
  uint64_t v53 = *(void *)&v107[16];
  long long v54 = *(_OWORD *)&v106[16];
  *(_OWORD *)(v52 + 8) = *(_OWORD *)v106;
  *(_OWORD *)(v52 + 24) = v54;
  long long v55 = *(_OWORD *)v107;
  *(_OWORD *)(v52 + 40) = *(_OWORD *)&v106[32];
  *(_OWORD *)(v52 + 56) = v55;
  *((void *)v12 + 49) = v53;
  char v105 = 4;
  sub_20940();
  sub_27E260();
  long long v56 = v109;
  *((_OWORD *)v12 + 31) = v108;
  *((_OWORD *)v12 + 32) = v56;
  *((_OWORD *)v12 + 33) = v110;
  *((void *)v12 + 68) = v111;
  long long v57 = *(_OWORD *)v107;
  *((_OWORD *)v12 + 27) = *(_OWORD *)&v106[32];
  *((_OWORD *)v12 + 28) = v57;
  long long v58 = *(_OWORD *)&v107[32];
  *((_OWORD *)v12 + 29) = *(_OWORD *)&v107[16];
  *((_OWORD *)v12 + 30) = v58;
  long long v59 = *(_OWORD *)&v106[16];
  *((_OWORD *)v12 + 25) = *(_OWORD *)v106;
  *((_OWORD *)v12 + 26) = v59;
  char v104 = 5;
  sub_208EC();
  sub_27E260();
  long long v60 = v99;
  *(_OWORD *)(v52 + 232) = v98;
  *(_OWORD *)(v12 + 568) = v60;
  char v104 = 6;
  sub_1DEE8();
  sub_27E1F0();
  int v61 = v100;
  long long v62 = v99;
  uint64_t v63 = v90;
  *(_OWORD *)v90 = v98;
  *((_OWORD *)v63 + 1) = v62;
  *((_DWORD *)v12 + 154) = v61;
  char v104 = 7;
  sub_37744();
  sub_27E1F0();
  uint64_t v64 = v99;
  *((_OWORD *)v12 + 39) = v98;
  *((void *)v12 + 80) = v64;
  char v104 = 8;
  sub_37798();
  sub_27E1F0();
  uint64_t v65 = v99;
  char v66 = BYTE8(v99);
  *((_OWORD *)v90 + 4) = v98;
  *((void *)v12 + 83) = v65;
  v12[672] = v66;
  char v104 = 9;
  sub_11A3C();
  sub_27E1F0();
  uint64_t v113 = 0;
  long long v67 = v99;
  long long v68 = v90;
  *((_OWORD *)v90 + 6) = v98;
  *((_OWORD *)v68 + 7) = v67;
  *((_OWORD *)v68 + 8) = v100;
  char v104 = 10;
  sub_377EC();
  uint64_t v69 = v113;
  sub_27E1F0();
  uint64_t v113 = v69;
  if (v69 || (v12[728] = v98, v104 = 11, sub_6D068(), uint64_t v70 = v113, sub_27E1F0(), (v113 = v70) != 0))
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
    unsigned int v16 = 767;
    int v15 = 1;
    goto LABEL_4;
  }
  int v71 = v102;
  char v72 = v103;
  long long v73 = v99;
  *((_OWORD *)v12 + 46) = v98;
  *((_OWORD *)v12 + 47) = v73;
  long long v74 = v101;
  *((_OWORD *)v12 + 48) = v100;
  *((_OWORD *)v12 + 49) = v74;
  v75 = v90;
  v90[220] = v72;
  *((_DWORD *)v75 + 54) = v71;
  char v104 = 12;
  sub_B1A64();
  uint64_t v76 = v113;
  sub_27E1F0();
  uint64_t v113 = v76;
  if (v76)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
    sub_5E94(v97);
    int v21 = 0;
    LODWORD(v85) = 0;
    LODWORD(v86) = 0;
    int v26 = 1;
    int v84 = 1;
    int v18 = 1;
    LODWORD(v92) = 1;
    LODWORD(v93) = 1;
    LODWORD(v94) = 1;
    LODWORD(v95) = 1;
    LODWORD(v96) = 1;
    int v15 = 1;
    char v27 = &v112;
LABEL_19:
    *((_DWORD *)v27 - 64) = v26;
    goto LABEL_20;
  }
  long long v77 = v99;
  v78 = v90;
  *((_OWORD *)v90 + 14) = v98;
  *((_OWORD *)v78 + 15) = v77;
  *((_OWORD *)v78 + 16) = v100;
  char v104 = 13;
  sub_420DC();
  uint64_t v79 = v113;
  sub_27E1F0();
  uint64_t v113 = v79;
  if (!v79)
  {
    uint64_t v80 = v99;
    *(_OWORD *)(v12 + 856) = v98;
    *((void *)v12 + 109) = v80;
    LOBYTE(v98) = 14;
    sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
    uint64_t v81 = v113;
    sub_27E260();
    uint64_t v113 = v81;
    if (v81)
    {
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
      sub_5E94(v97);
      LODWORD(v86) = 0;
      int v26 = 1;
      int v84 = 1;
      int v18 = 1;
      LODWORD(v92) = 1;
      LODWORD(v93) = 1;
      LODWORD(v94) = 1;
      LODWORD(v95) = 1;
      LODWORD(v96) = 1;
      int v15 = 1;
      LODWORD(v97) = 1;
      int v21 = 1;
      char v27 = &v107[24];
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 32))(&v12[*(int *)(v87 + 72)], v92, v89);
      LOBYTE(v98) = 15;
      sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
      uint64_t v82 = v113;
      sub_27E260();
      uint64_t v113 = v82;
      if (!v82)
      {
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v93 + 32))(&v12[*(int *)(v87 + 76)], v85, v86);
        sub_D6570((uint64_t)v12, v94);
        sub_5E94(v97);
        return sub_D65D4((uint64_t)v12);
      }
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
      sub_5E94(v97);
      int v26 = 1;
      int v84 = 1;
      int v18 = 1;
      LODWORD(v92) = 1;
      LODWORD(v93) = 1;
      LODWORD(v94) = 1;
      LODWORD(v95) = 1;
      LODWORD(v96) = 1;
      int v15 = 1;
      LODWORD(v97) = 1;
      int v21 = 1;
      LODWORD(v85) = 1;
      char v27 = &v107[32];
    }
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v95, v96);
  sub_5E94(v97);
  LODWORD(v85) = 0;
  LODWORD(v86) = 0;
  int v84 = 1;
  int v18 = 1;
  LODWORD(v92) = 1;
  LODWORD(v93) = 1;
  LODWORD(v94) = 1;
  LODWORD(v95) = 1;
  LODWORD(v96) = 1;
  int v15 = 1;
  LODWORD(v97) = 1;
  int v21 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v19 = v86;
  int v20 = (int)v85;
  if ((v84 & 1) == 0)
  {
LABEL_6:
    if (v18) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_7:
    uint64_t result = sub_6CEDC(*((void *)v12 + 26), *((void *)v12 + 27));
    if ((v92 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  if (!v92)
  {
LABEL_8:
    if (v93) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = sub_D6520(*((void *)v12 + 41), *((void *)v12 + 42));
  if (v93)
  {
LABEL_9:
    long long v22 = *((_OWORD *)v12 + 32);
    long long v108 = *((_OWORD *)v12 + 31);
    long long v109 = v22;
    long long v110 = *((_OWORD *)v12 + 33);
    uint64_t v111 = *((void *)v12 + 68);
    long long v23 = *((_OWORD *)v12 + 28);
    *(_OWORD *)&v106[32] = *((_OWORD *)v12 + 27);
    *(_OWORD *)v107 = v23;
    long long v24 = *((_OWORD *)v12 + 30);
    *(_OWORD *)&v107[16] = *((_OWORD *)v12 + 29);
    *(_OWORD *)&v107[32] = v24;
    long long v25 = *((_OWORD *)v12 + 26);
    *(_OWORD *)v106 = *((_OWORD *)v12 + 25);
    *(_OWORD *)&v106[16] = v25;
    uint64_t result = sub_37644((uint64_t)v106);
    if ((v94 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v94)
  {
LABEL_10:
    if (v95) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v95)
  {
LABEL_11:
    uint64_t result = sub_42098(*((void *)v12 + 73), *((void *)v12 + 74));
    if ((v96 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  if (!v96)
  {
LABEL_12:
    if (v15) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_13:
    uint64_t result = sub_1A978(*((void *)v12 + 85), *((void *)v12 + 86), *((void *)v12 + 87), *((void *)v12 + 88), *((void *)v12 + 89), *((void *)v12 + 90));
    if ((v97 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  if (!v97)
  {
LABEL_14:
    if (v21) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = sub_6CF60(*((void *)v12 + 92), *((void *)v12 + 93), *((void *)v12 + 94), *((void *)v12 + 95), *((void *)v12 + 96), *((void *)v12 + 97));
  if (v21)
  {
LABEL_15:
    uint64_t result = sub_6CE8C(*((void *)v12 + 101), *((void *)v12 + 102));
    if ((v20 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_31:
    uint64_t result = sub_42084(*((void *)v12 + 107), *((void *)v12 + 108), *((void *)v12 + 109));
    if ((v19 & 1) == 0) {
      return result;
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v88 + 8))(&v12[*(int *)(v87 + 72)], v89);
  }
LABEL_30:
  if (v20) {
    goto LABEL_31;
  }
LABEL_16:
  if (!v19) {
    return result;
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v88 + 8))(&v12[*(int *)(v87 + 72)], v89);
}

uint64_t sub_D6520(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_D6570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D65D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D6630@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContentExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_D6648(void *a1)
{
  return ContentExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_D6660@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31B170, a1);
}

uint64_t sub_D6698@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31B188, a1);
}

uint64_t sub_D66D0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v9, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v9, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v9, v26);
  uint64_t v27 = a2 + a1[15];
  uint64_t v28 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v9, v28);
  uint64_t v29 = a2 + a1[16];
  uint64_t v30 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v9, v30);
  uint64_t v31 = a2 + a1[17];
  uint64_t v32 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v31, v9, v32);
  uint64_t v33 = a2 + a1[18];
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v33, v4, v34);
  uint64_t v35 = a2 + a1[19];
  uint64_t v36 = sub_4E04(&qword_315DE8);
  char v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104);

  return v37(v35, v4, v36);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v68 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A10);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_317418);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316A00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_316F80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    __int16 v41 = (char *)a1 + v40;
    int v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    long long v50 = (char *)a2 + v48;
    uint64_t v51 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    uint64_t v53 = (char *)a1 + v52;
    long long v54 = (char *)a2 + v52;
    uint64_t v55 = sub_4E04(&qword_31A210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    long long v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    uint64_t v59 = sub_4E04(&qword_317420);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = a3[18];
    int v61 = (char *)a1 + v60;
    long long v62 = (char *)a2 + v60;
    uint64_t v63 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    uint64_t v64 = a3[19];
    uint64_t v65 = (char *)a1 + v64;
    char v66 = (char *)a2 + v64;
    uint64_t v67 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  return a1;
}

uint64_t destroy for ContentExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  uint64_t v26 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  uint64_t v28 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  uint64_t v30 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = a1 + a2[18];
  uint64_t v32 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  uint64_t v33 = a1 + a2[19];
  uint64_t v34 = sub_4E04(&qword_315DE8);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);

  return v35(v33, v34);
}

uint64_t initializeWithCopy for ContentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

uint64_t assignWithCopy for ContentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for ContentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  return a1;
}

uint64_t assignWithTake for ContentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D8924);
}

uint64_t sub_D8924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_32:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_31:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_32;
  }
  uint64_t v14 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_31;
  }
  uint64_t v15 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_31;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_31;
  }
  uint64_t v17 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_31;
  }
  uint64_t v18 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_31;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_31;
  }
  uint64_t v20 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_31;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_31;
  }
  uint64_t v22 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_31;
  }
  uint64_t v23 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_31;
  }
  uint64_t v24 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_31;
  }
  uint64_t v25 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a2)
  {
    uint64_t v8 = v25;
    uint64_t v12 = *(void *)(v25 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_31;
  }
  uint64_t v26 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a2)
  {
    uint64_t v8 = v26;
    uint64_t v12 = *(void *)(v26 - 8);
    uint64_t v13 = a3[18];
    goto LABEL_31;
  }
  uint64_t v28 = sub_4E04(&qword_315DE8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a3[19];

  return v29(v31, a2, v30);
}

uint64_t storeEnumTagSinglePayload for ContentExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D8EA0);
}

uint64_t sub_D8EA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A10);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_32:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_31:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_32;
  }
  uint64_t v16 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_31;
  }
  uint64_t v17 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_31;
  }
  uint64_t v18 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_31;
  }
  uint64_t v19 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_31;
  }
  uint64_t v20 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_31;
  }
  uint64_t v21 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_31;
  }
  uint64_t v22 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_31;
  }
  uint64_t v23 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_31;
  }
  uint64_t v24 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_31;
  }
  uint64_t v25 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_31;
  }
  uint64_t v26 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_31;
  }
  uint64_t v27 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v27 - 8) + 84) == a3)
  {
    uint64_t v10 = v27;
    uint64_t v14 = *(void *)(v27 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_31;
  }
  uint64_t v28 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v28 - 8) + 84) == a3)
  {
    uint64_t v10 = v28;
    uint64_t v14 = *(void *)(v28 - 8);
    uint64_t v15 = a4[18];
    goto LABEL_31;
  }
  uint64_t v30 = sub_4E04(&qword_315DE8);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v32 = v30;
  uint64_t v33 = a1 + a4[19];

  return v31(v33, a2, a2, v32);
}

void sub_D9414()
{
  sub_D9B34(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
  if (v0 <= 0x3F)
  {
    sub_D9B34(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_D9B34(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
      if (v2 <= 0x3F)
      {
        sub_D9B34(319, &qword_3174B8, (void (*)(void))sub_26F40, (void (*)(void))sub_26F98);
        if (v3 <= 0x3F)
        {
          sub_D9B34(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
          if (v4 <= 0x3F)
          {
            sub_D9B34(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
            if (v5 <= 0x3F)
            {
              sub_D9B34(319, &qword_316AF8, (void (*)(void))sub_1DEE8, (void (*)(void))sub_1DF40);
              if (v6 <= 0x3F)
              {
                sub_D9B34(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
                if (v7 <= 0x3F)
                {
                  sub_D9B34(319, &qword_317068, (void (*)(void))sub_37798, (void (*)(void))sub_36AC8);
                  if (v8 <= 0x3F)
                  {
                    sub_D9B34(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                    if (v9 <= 0x3F)
                    {
                      sub_D9B34(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
                      if (v10 <= 0x3F)
                      {
                        sub_D9B34(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
                        if (v11 <= 0x3F)
                        {
                          sub_D9B34(319, (unint64_t *)&unk_31A2F0, (void (*)(void))sub_B1A64, (void (*)(void))sub_B12C4);
                          if (v12 <= 0x3F)
                          {
                            sub_D9B34(319, (unint64_t *)&unk_3174C0, (void (*)(void))sub_420DC, (void (*)(void))sub_41530);
                            if (v13 <= 0x3F)
                            {
                              sub_6DA0();
                              if (v14 <= 0x3F)
                              {
                                sub_6E6C();
                                if (v15 <= 0x3F) {
                                  swift_initStructMetadata();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_D9B34(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ContentExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v24 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return v4;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
  uint64_t v6 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(v4 + 24) = a2[3];
  *(void *)(v4 + 32) = v7;
  uint64_t v8 = a2[6];
  *(void *)(v4 + 40) = a2[5];
  *(void *)(v4 + 48) = v8;
  uint64_t v9 = a2[8];
  *(void *)(v4 + 56) = a2[7];
  *(void *)(v4 + 64) = v9;
  uint64_t v10 = a2[10];
  *(void *)(v4 + 72) = a2[9];
  *(void *)(v4 + 80) = v10;
  *(_DWORD *)(v4 + 88) = *((_DWORD *)a2 + 22);
  *(unsigned char *)(v4 + 92) = *((unsigned char *)a2 + 92);
  uint64_t v11 = a2[13];
  *(void *)(v4 + 96) = a2[12];
  *(void *)(v4 + 104) = v11;
  uint64_t v12 = a2[15];
  *(void *)(v4 + 112) = a2[14];
  *(void *)(v4 + 120) = v12;
  *(unsigned char *)(v4 + 128) = *((unsigned char *)a2 + 128);
  uint64_t v13 = a2[18];
  *(void *)(v4 + 136) = a2[17];
  *(void *)(v4 + 144) = v13;
  uint64_t v14 = a2[20];
  *(void *)(v4 + 152) = a2[19];
  *(void *)(v4 + 160) = v14;
  *(_WORD *)(v4 + 168) = *((_WORD *)a2 + 84);
  *(unsigned char *)(v4 + 176) = *((unsigned char *)a2 + 176);
  *(_DWORD *)(v4 + 172) = *((_DWORD *)a2 + 43);
  *(unsigned char *)(v4 + 184) = *((unsigned char *)a2 + 184);
  *(_DWORD *)(v4 + 180) = *((_DWORD *)a2 + 45);
  *(_DWORD *)(v4 + 185) = *(_DWORD *)((char *)a2 + 185);
  *(unsigned char *)(v4 + 189) = *((unsigned char *)a2 + 189);
  uint64_t v15 = a2[25];
  *(void *)(v4 + 192) = a2[24];
  *(void *)(v4 + 200) = v15;
  uint64_t v56 = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v56)
  {
    long long v25 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(v4 + 272) = *((_OWORD *)a2 + 17);
    *(_OWORD *)(v4 + 288) = v25;
    *(_OWORD *)(v4 + 304) = *((_OWORD *)a2 + 19);
    *(void *)(v4 + 318) = *(uint64_t *)((char *)a2 + 318);
    long long v26 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(v4 + 208) = *((_OWORD *)a2 + 13);
    *(_OWORD *)(v4 + 224) = v26;
    long long v27 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(v4 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(v4 + 256) = v27;
    uint64_t v21 = a2[42];
    if (v21) {
      goto LABEL_4;
    }
LABEL_7:
    long long v28 = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(v4 + 360) = *(_OWORD *)(a2 + 45);
    *(_OWORD *)(v4 + 376) = v28;
    *(void *)(v4 + 392) = a2[49];
    long long v29 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(v4 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(v4 + 344) = v29;
    goto LABEL_8;
  }
  *(void *)(v4 + 208) = a2[26];
  *(void *)(v4 + 216) = v56;
  uint64_t v16 = a2[29];
  *(void *)(v4 + 224) = a2[28];
  *(void *)(v4 + 232) = v16;
  uint64_t v17 = a2[31];
  *(void *)(v4 + 240) = a2[30];
  *(void *)(v4 + 248) = v17;
  uint64_t v18 = a2[33];
  *(void *)(v4 + 256) = a2[32];
  *(void *)(v4 + 264) = v18;
  uint64_t v19 = a2[35];
  *(void *)(v4 + 272) = a2[34];
  *(void *)(v4 + 280) = v19;
  *(_DWORD *)(v4 + 288) = *((_DWORD *)a2 + 72);
  *(unsigned char *)(v4 + 292) = *((unsigned char *)a2 + 292);
  *(_DWORD *)(v4 + 296) = *((_DWORD *)a2 + 74);
  *(unsigned char *)(v4 + 300) = *((unsigned char *)a2 + 300);
  uint64_t v20 = a2[39];
  *(void *)(v4 + 304) = a2[38];
  *(void *)(v4 + 312) = v20;
  *(_DWORD *)(v4 + 320) = *((_DWORD *)a2 + 80);
  *(_WORD *)(v4 + 324) = *((_WORD *)a2 + 162);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = a2[42];
  if (!v21) {
    goto LABEL_7;
  }
LABEL_4:
  *(void *)(v4 + 328) = a2[41];
  *(void *)(v4 + 336) = v21;
  *(_DWORD *)(v4 + 344) = *((_DWORD *)a2 + 86);
  uint64_t v22 = a2[45];
  *(void *)(v4 + 352) = a2[44];
  *(void *)(v4 + 360) = v22;
  *(void *)(v4 + 368) = a2[46];
  *(unsigned char *)(v4 + 376) = *((unsigned char *)a2 + 376);
  uint64_t v23 = a2[49];
  *(void *)(v4 + 384) = a2[48];
  *(void *)(v4 + 392) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v30 = a2[51];
  *(void *)(v4 + 400) = a2[50];
  *(void *)(v4 + 408) = v30;
  uint64_t v31 = a2[53];
  *(void *)(v4 + 416) = a2[52];
  *(void *)(v4 + 424) = v31;
  uint64_t v32 = a2[55];
  *(void *)(v4 + 432) = a2[54];
  *(void *)(v4 + 440) = v32;
  *(unsigned char *)(v4 + 448) = *((unsigned char *)a2 + 448);
  uint64_t v33 = a2[58];
  *(void *)(v4 + 456) = a2[57];
  *(void *)(v4 + 464) = v33;
  uint64_t v34 = a2[60];
  *(void *)(v4 + 472) = a2[59];
  *(void *)(v4 + 480) = v34;
  uint64_t v35 = a2[62];
  *(void *)(v4 + 488) = a2[61];
  *(void *)(v4 + 496) = v35;
  uint64_t v36 = a2[64];
  *(void *)(v4 + 504) = a2[63];
  *(void *)(v4 + 512) = v36;
  *(void *)(v4 + 520) = a2[65];
  *(void *)(v4 + 528) = a2[66];
  *(void *)(v4 + 536) = a2[67];
  *(void *)(v4 + 544) = a2[68];
  *(void *)(v4 + 552) = a2[69];
  *(void *)(v4 + 560) = a2[70];
  *(void *)(v4 + 568) = a2[71];
  *(void *)(v4 + 576) = a2[72];
  uint64_t v55 = a2[74];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55)
  {
    *(void *)(v4 + 584) = a2[73];
    *(void *)(v4 + 592) = v55;
    *(void *)(v4 + 600) = a2[75];
    *(void *)(v4 + 608) = a2[76];
    *(_DWORD *)(v4 + 616) = *((_DWORD *)a2 + 154);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *(_OWORD *)(a2 + 75);
    *(_OWORD *)(v4 + 584) = *(_OWORD *)(a2 + 73);
    *(_OWORD *)(v4 + 600) = v37;
    *(_DWORD *)(v4 + 616) = *((_DWORD *)a2 + 154);
  }
  *(_WORD *)(v4 + 624) = *((_WORD *)a2 + 312);
  *(void *)(v4 + 632) = a2[79];
  *(void *)(v4 + 640) = a2[80];
  *(_OWORD *)(v4 + 648) = *(_OWORD *)(a2 + 81);
  *(_OWORD *)(v4 + 657) = *(_OWORD *)((char *)a2 + 657);
  uint64_t v38 = a2[90];
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    long long v39 = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(v4 + 680) = *(_OWORD *)(a2 + 85);
    *(_OWORD *)(v4 + 696) = v39;
    *(_OWORD *)(v4 + 712) = *(_OWORD *)(a2 + 89);
  }
  else
  {
    *(void *)(v4 + 680) = a2[85];
    *(unsigned char *)(v4 + 688) = *((unsigned char *)a2 + 688);
    *(void *)(v4 + 696) = a2[87];
    *(unsigned char *)(v4 + 704) = *((unsigned char *)a2 + 704);
    *(_WORD *)(v4 + 705) = *(_WORD *)((char *)a2 + 705);
    *(void *)(v4 + 712) = a2[89];
    *(void *)(v4 + 720) = v38;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v4 + 728) = *((unsigned char *)a2 + 728);
  uint64_t v40 = a2[97];
  if (v40)
  {
    *(void *)(v4 + 736) = a2[92];
    *(void *)(v4 + 744) = a2[93];
    *(void *)(v4 + 752) = a2[94];
    *(void *)(v4 + 760) = a2[95];
    *(void *)(v4 + 768) = a2[96];
    *(void *)(v4 + 776) = v40;
    *(void *)(v4 + 784) = a2[98];
    *(void *)(v4 + 792) = a2[99];
    *(_DWORD *)(v4 + 800) = *((_DWORD *)a2 + 200);
    *(unsigned char *)(v4 + 804) = *((unsigned char *)a2 + 804);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *((_OWORD *)a2 + 49);
    *(_OWORD *)(v4 + 768) = *((_OWORD *)a2 + 48);
    *(_OWORD *)(v4 + 784) = v41;
    *(void *)(v4 + 797) = *(uint64_t *)((char *)a2 + 797);
    long long v42 = *((_OWORD *)a2 + 47);
    *(_OWORD *)(v4 + 736) = *((_OWORD *)a2 + 46);
    *(_OWORD *)(v4 + 752) = v42;
  }
  uint64_t v43 = a2[102];
  if (v43)
  {
    *(void *)(v4 + 808) = a2[101];
    *(void *)(v4 + 816) = v43;
    *(void *)(v4 + 824) = a2[103];
    *(void *)(v4 + 832) = a2[104];
    *(void *)(v4 + 840) = a2[105];
    *(void *)(v4 + 848) = a2[106];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *(_OWORD *)(a2 + 103);
    *(_OWORD *)(v4 + 808) = *(_OWORD *)(a2 + 101);
    *(_OWORD *)(v4 + 824) = v44;
    *(_OWORD *)(v4 + 840) = *(_OWORD *)(a2 + 105);
  }
  uint64_t v45 = a2[109];
  if (v45 == 1)
  {
    *(_OWORD *)(v4 + 856) = *(_OWORD *)(a2 + 107);
    *(void *)(v4 + 872) = a2[109];
  }
  else
  {
    *(unsigned char *)(v4 + 856) = *((unsigned char *)a2 + 856);
    *(void *)(v4 + 864) = a2[108];
    *(void *)(v4 + 872) = v45;
    swift_bridgeObjectRetain();
  }
  uint64_t v46 = *(int *)(a3 + 72);
  uint64_t v47 = v4 + v46;
  uint64_t v48 = (uint64_t)a2 + v46;
  uint64_t v49 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  uint64_t v50 = *(int *)(a3 + 76);
  uint64_t v51 = v4 + v50;
  uint64_t v52 = (uint64_t)a2 + v50;
  uint64_t v53 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  return v4;
}

uint64_t destroy for ContentExposureEvent.Model(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[42])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[74])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[90] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[97])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[102])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[109] != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 72);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 76);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 185) = *(_DWORD *)(a2 + 185);
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  uint64_t v14 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v14;
  uint64_t v54 = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v54;
    uint64_t v15 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v15;
    uint64_t v16 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v16;
    uint64_t v17 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v17;
    uint64_t v18 = *(void *)(a2 + 280);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = v18;
    *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
    *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
    uint64_t v19 = *(void *)(a2 + 312);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v19;
    *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
    *(_WORD *)(a1 + 324) = *(_WORD *)(a2 + 324);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = *(void *)(a2 + 336);
    if (v20)
    {
LABEL_3:
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v20;
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      uint64_t v21 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v21;
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      uint64_t v22 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v23;
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(void *)(a1 + 318) = *(void *)(a2 + 318);
    long long v24 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v24;
    long long v25 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v25;
    uint64_t v20 = *(void *)(a2 + 336);
    if (v20) {
      goto LABEL_3;
    }
  }
  long long v26 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v26;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v27 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v27;
LABEL_6:
  uint64_t v28 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v28;
  uint64_t v29 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v29;
  uint64_t v30 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v30;
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  uint64_t v31 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v31;
  uint64_t v32 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v32;
  uint64_t v33 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v33;
  uint64_t v34 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v34;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  uint64_t v53 = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53)
  {
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = v53;
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v35 = *(_OWORD *)(a2 + 600);
    *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 600) = v35;
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  }
  *(_WORD *)(a1 + 624) = *(_WORD *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 657) = *(_OWORD *)(a2 + 657);
  uint64_t v36 = *(void *)(a2 + 720);
  swift_bridgeObjectRetain();
  if (v36 == 1)
  {
    long long v37 = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
    *(_OWORD *)(a1 + 696) = v37;
    *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  }
  else
  {
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
    *(_WORD *)(a1 + 705) = *(_WORD *)(a2 + 705);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = v36;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  uint64_t v38 = *(void *)(a2 + 776);
  if (v38)
  {
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = v38;
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    *(_DWORD *)(a1 + 800) = *(_DWORD *)(a2 + 800);
    *(unsigned char *)(a1 + 804) = *(unsigned char *)(a2 + 804);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = *(void *)(a2 + 816);
    if (v39)
    {
LABEL_14:
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = v39;
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    }
  }
  else
  {
    long long v40 = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 784) = v40;
    *(void *)(a1 + 797) = *(void *)(a2 + 797);
    long long v41 = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 752) = v41;
    uint64_t v39 = *(void *)(a2 + 816);
    if (v39) {
      goto LABEL_14;
    }
  }
  long long v42 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v42;
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
LABEL_17:
  uint64_t v43 = *(void *)(a2 + 872);
  if (v43 == 1)
  {
    *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
    *(void *)(a1 + 872) = *(void *)(a2 + 872);
  }
  else
  {
    *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    *(void *)(a1 + 872) = v43;
    swift_bridgeObjectRetain();
  }
  uint64_t v44 = *(int *)(a3 + 72);
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = *(int *)(a3 + 76);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  return a1;
}

uint64_t assignWithCopy for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  int v7 = *(_DWORD *)(a2 + 172);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_DWORD *)(a1 + 172) = v7;
  int v8 = *(_DWORD *)(a2 + 180);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_DWORD *)(a1 + 180) = v8;
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(unsigned char *)(a1 + 187) = *(unsigned char *)(a2 + 187);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(a1 + 208);
  uint64_t v10 = (long long *)(a2 + 208);
  uint64_t v11 = *(void *)(a2 + 216);
  if (*(void *)(a1 + 216))
  {
    if (v11)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v12 = *(_DWORD *)(a2 + 288);
      *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
      *(_DWORD *)(a1 + 288) = v12;
      int v13 = *(_DWORD *)(a2 + 296);
      *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
      *(_DWORD *)(a1 + 296) = v13;
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v14 = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      *(_DWORD *)(a1 + 320) = v14;
      *(unsigned char *)(a1 + 325) = *(unsigned char *)(a2 + 325);
    }
    else
    {
      sub_70B34(a1 + 208);
      long long v18 = *(_OWORD *)(a2 + 256);
      long long v20 = *v10;
      long long v19 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v18;
      *uint64_t v9 = v20;
      *(_OWORD *)(a1 + 224) = v19;
      long long v22 = *(_OWORD *)(a2 + 288);
      long long v21 = *(_OWORD *)(a2 + 304);
      long long v23 = *(_OWORD *)(a2 + 272);
      *(void *)(a1 + 318) = *(void *)(a2 + 318);
      *(_OWORD *)(a1 + 288) = v22;
      *(_OWORD *)(a1 + 304) = v21;
      *(_OWORD *)(a1 + 272) = v23;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    int v15 = *(_DWORD *)(a2 + 288);
    *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
    *(_DWORD *)(a1 + 288) = v15;
    int v16 = *(_DWORD *)(a2 + 296);
    *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
    *(_DWORD *)(a1 + 296) = v16;
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    int v17 = *(_DWORD *)(a2 + 320);
    *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
    *(_DWORD *)(a1 + 320) = v17;
    *(unsigned char *)(a1 + 325) = *(unsigned char *)(a2 + 325);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *v10;
    long long v25 = *(_OWORD *)(a2 + 224);
    long long v26 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v26;
    *uint64_t v9 = v24;
    *(_OWORD *)(a1 + 224) = v25;
    long long v27 = *(_OWORD *)(a2 + 272);
    long long v28 = *(_OWORD *)(a2 + 288);
    long long v29 = *(_OWORD *)(a2 + 304);
    *(void *)(a1 + 318) = *(void *)(a2 + 318);
    *(_OWORD *)(a1 + 288) = v28;
    *(_OWORD *)(a1 + 304) = v29;
    *(_OWORD *)(a1 + 272) = v27;
  }
  uint64_t v30 = (_OWORD *)(a1 + 328);
  uint64_t v31 = (_OWORD *)(a2 + 328);
  uint64_t v32 = *(void *)(a2 + 336);
  if (*(void *)(a1 + 336))
  {
    if (v32)
    {
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 368);
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      *(void *)(a1 + 368) = v33;
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_DB718(a1 + 328);
      *uint64_t v30 = *v31;
      long long v36 = *(_OWORD *)(a2 + 360);
      long long v35 = *(_OWORD *)(a2 + 376);
      long long v37 = *(_OWORD *)(a2 + 344);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(_OWORD *)(a1 + 360) = v36;
      *(_OWORD *)(a1 + 376) = v35;
      *(_OWORD *)(a1 + 344) = v37;
    }
  }
  else if (v32)
  {
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    uint64_t v34 = *(void *)(a2 + 368);
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    *(void *)(a1 + 368) = v34;
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v30 = *v31;
    long long v38 = *(_OWORD *)(a2 + 344);
    long long v39 = *(_OWORD *)(a2 + 360);
    long long v40 = *(_OWORD *)(a2 + 376);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(_OWORD *)(a1 + 360) = v39;
    *(_OWORD *)(a1 + 376) = v40;
    *(_OWORD *)(a1 + 344) = v38;
  }
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v41 = (_OWORD *)(a1 + 584);
  long long v42 = (_OWORD *)(a2 + 584);
  uint64_t v43 = *(void *)(a2 + 592);
  if (*(void *)(a1 + 592))
  {
    if (v43)
    {
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
    }
    else
    {
      sub_4523C(a1 + 584);
      int v44 = *(_DWORD *)(a2 + 616);
      long long v45 = *(_OWORD *)(a2 + 600);
      *long long v41 = *v42;
      *(_OWORD *)(a1 + 600) = v45;
      *(_DWORD *)(a1 + 616) = v44;
    }
  }
  else if (v43)
  {
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *v42;
    long long v47 = *(_OWORD *)(a2 + 600);
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
    *long long v41 = v46;
    *(_OWORD *)(a1 + 600) = v47;
  }
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(unsigned char *)(a1 + 625) = *(unsigned char *)(a2 + 625);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v48 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 657) = *(_OWORD *)(a2 + 657);
  *(_OWORD *)(a1 + 648) = v48;
  uint64_t v49 = (long long *)(a1 + 680);
  uint64_t v50 = (long long *)(a2 + 680);
  uint64_t v51 = *(void *)(a2 + 720);
  if (*(void *)(a1 + 720) == 1)
  {
    if (v51 == 1)
    {
      long long v52 = *v50;
      long long v53 = *(_OWORD *)(a2 + 712);
      *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
      *(_OWORD *)(a1 + 712) = v53;
      *uint64_t v49 = v52;
    }
    else
    {
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
      *(unsigned char *)(a1 + 705) = *(unsigned char *)(a2 + 705);
      *(unsigned char *)(a1 + 706) = *(unsigned char *)(a2 + 706);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      swift_bridgeObjectRetain();
    }
  }
  else if (v51 == 1)
  {
    sub_1CDD8(a1 + 680);
    long long v55 = *(_OWORD *)(a2 + 696);
    long long v54 = *(_OWORD *)(a2 + 712);
    *uint64_t v49 = *v50;
    *(_OWORD *)(a1 + 696) = v55;
    *(_OWORD *)(a1 + 712) = v54;
  }
  else
  {
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
    *(unsigned char *)(a1 + 705) = *(unsigned char *)(a2 + 705);
    *(unsigned char *)(a1 + 706) = *(unsigned char *)(a2 + 706);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  uint64_t v56 = (_OWORD *)(a1 + 736);
  uint64_t v57 = (_OWORD *)(a2 + 736);
  uint64_t v58 = *(void *)(a2 + 776);
  if (*(void *)(a1 + 776))
  {
    if (v58)
    {
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v59 = *(_DWORD *)(a2 + 800);
      *(unsigned char *)(a1 + 804) = *(unsigned char *)(a2 + 804);
      *(_DWORD *)(a1 + 800) = v59;
    }
    else
    {
      sub_70AE0(a1 + 736);
      *uint64_t v56 = *v57;
      long long v62 = *(_OWORD *)(a2 + 768);
      long long v61 = *(_OWORD *)(a2 + 784);
      long long v63 = *(_OWORD *)(a2 + 752);
      *(void *)(a1 + 797) = *(void *)(a2 + 797);
      *(_OWORD *)(a1 + 768) = v62;
      *(_OWORD *)(a1 + 784) = v61;
      *(_OWORD *)(a1 + 752) = v63;
    }
  }
  else if (v58)
  {
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    int v60 = *(_DWORD *)(a2 + 800);
    *(unsigned char *)(a1 + 804) = *(unsigned char *)(a2 + 804);
    *(_DWORD *)(a1 + 800) = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v56 = *v57;
    long long v64 = *(_OWORD *)(a2 + 752);
    long long v65 = *(_OWORD *)(a2 + 768);
    long long v66 = *(_OWORD *)(a2 + 784);
    *(void *)(a1 + 797) = *(void *)(a2 + 797);
    *(_OWORD *)(a1 + 768) = v65;
    *(_OWORD *)(a1 + 784) = v66;
    *(_OWORD *)(a1 + 752) = v64;
  }
  uint64_t v67 = (_OWORD *)(a1 + 808);
  uint64_t v68 = (_OWORD *)(a2 + 808);
  uint64_t v69 = *(void *)(a2 + 816);
  if (*(void *)(a1 + 816))
  {
    if (v69)
    {
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B3FFC(a1 + 808);
      long long v71 = *(_OWORD *)(a2 + 824);
      long long v70 = *(_OWORD *)(a2 + 840);
      *uint64_t v67 = *v68;
      *(_OWORD *)(a1 + 824) = v71;
      *(_OWORD *)(a1 + 840) = v70;
    }
  }
  else if (v69)
  {
    *(void *)(a1 + 808) = *(void *)(a2 + 808);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    *(void *)(a1 + 824) = *(void *)(a2 + 824);
    *(void *)(a1 + 832) = *(void *)(a2 + 832);
    *(void *)(a1 + 840) = *(void *)(a2 + 840);
    *(void *)(a1 + 848) = *(void *)(a2 + 848);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v72 = *v68;
    long long v73 = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 840) = v73;
    *uint64_t v67 = v72;
  }
  long long v74 = (long long *)(a1 + 856);
  v75 = (long long *)(a2 + 856);
  uint64_t v76 = *(void *)(a2 + 872);
  if (*(void *)(a1 + 872) == 1)
  {
    if (v76 == 1)
    {
      long long v77 = *v75;
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      *long long v74 = v77;
    }
    else
    {
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      swift_bridgeObjectRetain();
    }
  }
  else if (v76 == 1)
  {
    sub_45290(a1 + 856);
    uint64_t v78 = *(void *)(a2 + 872);
    *long long v74 = *v75;
    *(void *)(a1 + 872) = v78;
  }
  else
  {
    *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    *(void *)(a1 + 872) = *(void *)(a2 + 872);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v79 = *(int *)(a3 + 72);
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  uint64_t v82 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = *(int *)(a3 + 76);
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  uint64_t v86 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

uint64_t sub_DB718(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  *(void *)(a1 + 318) = *(void *)(a2 + 318);
  long long v13 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v13;
  long long v14 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v14;
  long long v15 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v15;
  long long v16 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v16;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v17 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v17;
  long long v18 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v18;
  long long v19 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v19;
  long long v20 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v20;
  long long v21 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v21;
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  long long v22 = *(_OWORD *)(a2 + 528);
  long long v23 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v22;
  *(_OWORD *)(a1 + 496) = v23;
  long long v24 = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = v24;
  long long v25 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v25;
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 657) = *(_OWORD *)(a2 + 657);
  long long v26 = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 696) = v26;
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  long long v27 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v27;
  *(void *)(a1 + 797) = *(void *)(a2 + 797);
  long long v28 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v28;
  long long v29 = *(_OWORD *)(a2 + 840);
  long long v30 = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 840) = v29;
  *(_OWORD *)(a1 + 808) = v30;
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  uint64_t v31 = *(int *)(a3 + 72);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  uint64_t v34 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 76);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_DWORD *)(a1 + 185) = *(_DWORD *)(a2 + 185);
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 216))
  {
    uint64_t v16 = *(void *)(a2 + 216);
    if (v16)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v20;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
      *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
      *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
      *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
      uint64_t v21 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v21;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
      *(_WORD *)(a1 + 324) = *(_WORD *)(a2 + 324);
      goto LABEL_6;
    }
    sub_70B34(a1 + 208);
  }
  long long v22 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v22;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(void *)(a1 + 318) = *(void *)(a2 + 318);
  long long v23 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v23;
  long long v24 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v24;
LABEL_6:
  if (*(void *)(a1 + 336))
  {
    uint64_t v25 = *(void *)(a2 + 336);
    if (v25)
    {
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v25;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      uint64_t v26 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v26;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      uint64_t v27 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_DB718(a1 + 328);
  }
  long long v28 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v28;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v29 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v29;
LABEL_11:
  uint64_t v30 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  uint64_t v33 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 592))
  {
    uint64_t v37 = *(void *)(a2 + 592);
    if (v37)
    {
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = v37;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
      goto LABEL_16;
    }
    sub_4523C(a1 + 584);
  }
  long long v38 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v38;
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
LABEL_16:
  *(_WORD *)(a1 + 624) = *(_WORD *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 657) = *(_OWORD *)(a2 + 657);
  if (*(void *)(a1 + 720) == 1)
  {
LABEL_19:
    long long v40 = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
    *(_OWORD *)(a1 + 696) = v40;
    *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
    goto LABEL_21;
  }
  uint64_t v39 = *(void *)(a2 + 720);
  if (v39 == 1)
  {
    sub_1CDD8(a1 + 680);
    goto LABEL_19;
  }
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  *(_WORD *)(a1 + 705) = *(_WORD *)(a2 + 705);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = v39;
  swift_bridgeObjectRelease();
LABEL_21:
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  if (*(void *)(a1 + 776))
  {
    if (*(void *)(a2 + 776))
    {
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 800) = *(_DWORD *)(a2 + 800);
      *(unsigned char *)(a1 + 804) = *(unsigned char *)(a2 + 804);
      goto LABEL_26;
    }
    sub_70AE0(a1 + 736);
  }
  long long v41 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v41;
  *(void *)(a1 + 797) = *(void *)(a2 + 797);
  long long v42 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v42;
LABEL_26:
  if (*(void *)(a1 + 816))
  {
    uint64_t v43 = *(void *)(a2 + 816);
    if (v43)
    {
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = v43;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_B3FFC(a1 + 808);
  }
  long long v44 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v44;
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
LABEL_31:
  if (*(void *)(a1 + 872) != 1)
  {
    uint64_t v45 = *(void *)(a2 + 872);
    if (v45 != 1)
    {
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(void *)(a1 + 872) = v45;
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_45290(a1 + 856);
  }
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
LABEL_36:
  uint64_t v46 = *(int *)(a3 + 72);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  uint64_t v50 = *(int *)(a3 + 76);
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  uint64_t v53 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DC04C);
}

uint64_t sub_DC04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 72);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 76);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DC18C);
}

uint64_t sub_DC18C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 72);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 76);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_DC2B8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xDC4D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentExposureEvent.Model.CodingKeys()
{
  return &type metadata for ContentExposureEvent.Model.CodingKeys;
}

unint64_t sub_DC514()
{
  unint64_t result = qword_31B348;
  if (!qword_31B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B348);
  }
  return result;
}

unint64_t sub_DC56C()
{
  unint64_t result = qword_31B350;
  if (!qword_31B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B350);
  }
  return result;
}

unint64_t sub_DC5C4()
{
  unint64_t result = qword_31B358;
  if (!qword_31B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B358);
  }
  return result;
}

uint64_t sub_DC618(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000000002AE110 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x74614465726E6567 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x746144736C616564 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_DCD14(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31B360, &enum case for SessionGroup.default(_:));
}

uint64_t static CellularToggleEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31B360, a1);
}

uint64_t sub_DCD74(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31B378, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CellularToggleEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31B378, a1);
}

uint64_t CellularToggleEvent.cellularData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31B390);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CellularToggleEvent.cellularData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31B390);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t CellularToggleEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CellularToggleEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CellularToggleEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31B418);
}

uint64_t CellularToggleEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CellularToggleEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CellularToggleEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CellularToggleEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CellularToggleEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t CellularToggleEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CellularToggleEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CellularToggleEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31B4B0);
}

uint64_t CellularToggleEvent.Model.init(cellularData:eventData:)@<X0>(_WORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for CellularToggleEvent.Model(0) + 20);
  uint64_t v5 = sub_27D7C0();
  char v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_DD1F0()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x72616C756C6C6563;
  }
}

uint64_t sub_DD238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_DE694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_DD260(uint64_t a1)
{
  unint64_t v2 = sub_DD494();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_DD29C(uint64_t a1)
{
  unint64_t v2 = sub_DD494();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CellularToggleEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31B398);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_DD494();
  sub_27E440();
  __int16 v11 = *v3;
  v10[13] = 0;
  sub_DD4E8();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for CellularToggleEvent.Model(0);
    v10[12] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_DD494()
{
  unint64_t result = qword_31B3A0;
  if (!qword_31B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B3A0);
  }
  return result;
}

unint64_t sub_DD4E8()
{
  unint64_t result = qword_31B3A8;
  if (!qword_31B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B3A8);
  }
  return result;
}

uint64_t CellularToggleEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_31B3B0);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CellularToggleEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_DD494();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    __int16 v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_DD834();
    uint64_t v14 = v25;
    sub_27E260();
    uint64_t v19 = v11;
    *(_WORD *)__int16 v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_DD888(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_DD834()
{
  unint64_t result = qword_31B3B8;
  if (!qword_31B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B3B8);
  }
  return result;
}

uint64_t sub_DD888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CellularToggleEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_DD8EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CellularToggleEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_DD904(void *a1)
{
  return CellularToggleEvent.Model.encode(to:)(a1);
}

uint64_t sub_DD91C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157E0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31B360, a1);
}

uint64_t sub_DD954@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157E8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31B378, a1);
}

uint64_t sub_DD98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for CellularToggleEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31B390);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for CellularToggleEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31B390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DDF2C);
}

uint64_t sub_DDF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31B390);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CellularToggleEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DE040);
}

uint64_t sub_DE040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31B390);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_DE14C()
{
  sub_DE214();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_DE214()
{
  if (!qword_31B428)
  {
    sub_DD834();
    sub_DD4E8();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31B428);
    }
  }
}

uint64_t getEnumTagSinglePayload for CellularToggleEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DE290);
}

uint64_t sub_DE290(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 240)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x10) {
      return v4 - 15;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CellularToggleEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DE34C);
}

unsigned char *sub_DE34C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 240)
  {
    *unint64_t result = a2 + 15;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_DE3F0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CellularToggleEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xDE554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularToggleEvent.Model.CodingKeys()
{
  return &type metadata for CellularToggleEvent.Model.CodingKeys;
}

unint64_t sub_DE590()
{
  unint64_t result = qword_31B4E8;
  if (!qword_31B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B4E8);
  }
  return result;
}

unint64_t sub_DE5E8()
{
  unint64_t result = qword_31B4F0;
  if (!qword_31B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B4F0);
  }
  return result;
}

unint64_t sub_DE640()
{
  unint64_t result = qword_31B4F8;
  if (!qword_31B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B4F8);
  }
  return result;
}

uint64_t sub_DE694(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C756C6C6563 && a2 == 0xEC00000061746144;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t BridgedDisplayType.swiftType.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  return sub_DFECC(result, a2);
}

id BridgedBackgroundColorData.__allocating_init(backgroundColor:)(uint64_t a1)
{
  return sub_DEE48(a1, &OBJC_IVAR___BABackgroundColorData_backgroundColor);
}

id BridgedBackgroundColorData.init(backgroundColor:)(uint64_t a1)
{
  return sub_DEEC0(a1, &OBJC_IVAR___BABackgroundColorData_backgroundColor, type metadata accessor for BridgedBackgroundColorData);
}

void BridgedBackgroundColorData.init()()
{
}

id BridgedBackgroundColorData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedBackgroundColorData);
}

id BridgedBooksTreatmentData.__allocating_init(remoteConfigNamespaceData:)(uint64_t a1)
{
  return sub_DEE48(a1, &OBJC_IVAR___BABooksTreatmentData_remoteConfigNamespaceData);
}

id BridgedBooksTreatmentData.init(remoteConfigNamespaceData:)(uint64_t a1)
{
  return sub_DEEC0(a1, &OBJC_IVAR___BABooksTreatmentData_remoteConfigNamespaceData, type metadata accessor for BridgedBooksTreatmentData);
}

uint64_t sub_DE8DC@<X0>(void *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BABooksTreatmentData_remoteConfigNamespaceData);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_17:
    *a1 = _swiftEmptyArrayStorage;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_27E150();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t result = sub_E34A8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    long long v29 = a1;
    uint64_t v30 = v4;
    unint64_t v31 = v3;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = sub_27E100();
        uint64_t v8 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_name + 8);
        uint64_t v34 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_name);
        uint64_t v9 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_treatmentIDs);
        uint64_t v10 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentIDs);
        uint64_t v11 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentSetIDs);
        uint64_t v12 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_previousTreatmentIDs);
        uint64_t v13 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentIDs);
        uint64_t v14 = *(void *)(v7 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentSetIDs);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v32 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        unint64_t v16 = _swiftEmptyArrayStorage[2];
        unint64_t v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1) {
          sub_E34A8(v15 > 1, v16 + 1, 1);
        }
        ++v6;
        _swiftEmptyArrayStorage[2] = v16 + 1;
        uint64_t v17 = &_swiftEmptyArrayStorage[8 * v16];
        v17[4] = v34;
        v17[5] = v8;
        v17[6] = v32;
        _OWORD v17[7] = v10;
        v17[8] = v11;
        v17[9] = v12;
        v17[10] = v13;
        v17[11] = v14;
      }
      while (v30 != v6);
    }
    else
    {
      uint64_t v18 = 0;
      do
      {
        uint64_t v19 = *(void *)(v3 + 8 * v18 + 32);
        uint64_t v33 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_name);
        uint64_t v20 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_treatmentIDs);
        uint64_t v21 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentIDs);
        uint64_t v22 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentSetIDs);
        uint64_t v23 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_previousTreatmentIDs);
        uint64_t v24 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentIDs);
        uint64_t v25 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentSetIDs);
        unint64_t v27 = _swiftEmptyArrayStorage[2];
        unint64_t v26 = _swiftEmptyArrayStorage[3];
        int64_t v36 = v27 + 1;
        uint64_t v35 = *(void *)(v19 + OBJC_IVAR___BARemoteConfigNamespaceData_name + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1) {
          sub_E34A8(v26 > 1, v36, 1);
        }
        ++v18;
        _swiftEmptyArrayStorage[2] = v36;
        __int16 v28 = &_swiftEmptyArrayStorage[8 * v27];
        v28[4] = v33;
        v28[5] = v35;
        _OWORD v28[6] = v20;
        v28[7] = v21;
        v28[8] = v22;
        v28[9] = v23;
        v28[10] = v24;
        v28[11] = v25;
        unint64_t v3 = v31;
      }
      while (v30 != v18);
    }
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v29;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void BridgedBooksTreatmentData.init()()
{
}

id BridgedBooksTreatmentData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedBooksTreatmentData);
}

id BridgedCollectionIDData.__allocating_init(collectionID:collectionMemberCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR___BACollectionIDData_collectionID];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___BACollectionIDData_collectionMemberCount] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return [super init];
}

id BridgedCollectionIDData.init(collectionID:collectionMemberCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = &v3[OBJC_IVAR___BACollectionIDData_collectionID];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = a2;
  *(void *)&v3[OBJC_IVAR___BACollectionIDData_collectionMemberCount] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for BridgedCollectionIDData();
  return [super init];
}

void BridgedCollectionIDData.init()()
{
}

id BridgedCollectionIDData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedCollectionIDData);
}

id BridgedCollectionSummaryData.__allocating_init(collectionSummary:)(uint64_t a1)
{
  return sub_DEE48(a1, &OBJC_IVAR___BACollectionSummaryData_collectionSummary);
}

id sub_DEE48(uint64_t a1, void *a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[*a2] = a1;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

id BridgedCollectionSummaryData.init(collectionSummary:)(uint64_t a1)
{
  return sub_DEEC0(a1, &OBJC_IVAR___BACollectionSummaryData_collectionSummary, type metadata accessor for BridgedCollectionSummaryData);
}

id sub_DEEC0(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  *(void *)&v3[*a2] = a1;
  v5.receiver = v3;
  v5.super_class = (Class)a3();
  return [super init];
}

uint64_t sub_DEF60@<X0>(void *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BACollectionSummaryData_collectionSummary);
  if (v3 >> 62) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      uint64_t result = sub_E3468(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0) {
        break;
      }
      uint64_t v24 = a1;
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = 0;
        while (1)
        {
          uint64_t v7 = sub_27E100();
          uint64_t v8 = *(void *)(v7 + OBJC_IVAR___BACollectionIDData_collectionMemberCount);
          if (v8 < 0) {
            break;
          }
          a1 = *(void **)(v7 + OBJC_IVAR___BACollectionIDData_collectionID);
          uint64_t v9 = *(void *)(v7 + OBJC_IVAR___BACollectionIDData_collectionID + 8);
          swift_bridgeObjectRetain();
          uint64_t v10 = BARoundIntegerToSignificantFigures(v8, 2);
          swift_unknownObjectRelease();
          if (v10 < (uint64_t)0xFFFFFFFF80000000) {
            goto LABEL_22;
          }
          if (v10 > 0x7FFFFFFF) {
            goto LABEL_23;
          }
          unint64_t v12 = _swiftEmptyArrayStorage[2];
          unint64_t v11 = _swiftEmptyArrayStorage[3];
          if (v12 >= v11 >> 1) {
            sub_E3468(v11 > 1, v12 + 1, 1);
          }
          ++v6;
          _swiftEmptyArrayStorage[2] = v12 + 1;
          uint64_t v13 = &_swiftEmptyArrayStorage[3 * v12];
          v13[4] = a1;
          v13[5] = v9;
          *((_DWORD *)v13 + 12) = v10;
          if (v4 == v6) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      else
      {
        a1 = 0;
        while (1)
        {
          uint64_t v14 = *(void *)(v3 + 8 * (void)a1 + 32);
          uint64_t v15 = *(void *)(v14 + OBJC_IVAR___BACollectionIDData_collectionMemberCount);
          if (v15 < 0) {
            break;
          }
          unint64_t v16 = (uint64_t *)(v14 + OBJC_IVAR___BACollectionIDData_collectionID);
          uint64_t v18 = *v16;
          uint64_t v17 = v16[1];
          swift_bridgeObjectRetain();
          uint64_t v19 = BARoundIntegerToSignificantFigures(v15, 2);
          if (v19 < (uint64_t)0xFFFFFFFF80000000) {
            goto LABEL_25;
          }
          int v20 = v19;
          if (v19 > 0x7FFFFFFF) {
            goto LABEL_26;
          }
          unint64_t v22 = _swiftEmptyArrayStorage[2];
          unint64_t v21 = _swiftEmptyArrayStorage[3];
          if (v22 >= v21 >> 1) {
            sub_E3468(v21 > 1, v22 + 1, 1);
          }
          a1 = (void *)((char *)a1 + 1);
          _swiftEmptyArrayStorage[2] = v22 + 1;
          uint64_t v23 = &_swiftEmptyArrayStorage[3 * v22];
          v23[4] = v18;
          v23[5] = v17;
          *((_DWORD *)v23 + 12) = v20;
          if ((void *)v4 == a1)
          {
LABEL_20:
            uint64_t result = swift_bridgeObjectRelease();
            a1 = v24;
            goto LABEL_29;
          }
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_27E150();
      if (!v4) {
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_29:
    *a1 = _swiftEmptyArrayStorage;
  }
  return result;
}

void BridgedCollectionSummaryData.init()()
{
}

id BridgedCollectionSummaryData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedCollectionSummaryData);
}

id BridgedContentData.__allocating_init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:isUnified:contentKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16)
{
  id v18 = objc_allocWithZone(v16);
  id v19 = sub_E3B34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);

  return v19;
}

id BridgedContentData.init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:isUnified:contentKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16)
{
  id v16 = sub_E3B34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);

  return v16;
}

uint64_t sub_DF4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentID + 8);
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentType);
  if (v4 >= 7)
  {
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentPrivateID + 8);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentUserID + 8);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentAcquisitionType);
  uint64_t v26 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentPrivateID);
  uint64_t v27 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentID);
  uint64_t v25 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentUserID);
  if (v7)
  {
    if (v7 == 2)
    {
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentSubType);
      char v9 = 2;
      if (!v8)
      {
        char v10 = 2;
LABEL_12:
        char v24 = v10;
        goto LABEL_13;
      }
      goto LABEL_10;
    }
    if (v7 == 1)
    {
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentSubType);
      char v9 = 1;
      if (!v8)
      {
        char v10 = 1;
        goto LABEL_12;
      }
LABEL_10:
      char v24 = v9;
      char v11 = *(unsigned char *)(v8 + OBJC_IVAR___BAContentSubType_subTypeEnum);
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_29:
    uint64_t result = sub_27E390();
    __break(1u);
    return result;
  }
  char v9 = 0;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentSubType);
  if (v8) {
    goto LABEL_10;
  }
  char v24 = 0;
LABEL_13:
  char v11 = 4;
LABEL_14:
  char v23 = v11;
  unint64_t v12 = *(void **)(v1 + OBJC_IVAR___BAContentData_contentLength);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12) {
    unsigned int v13 = [v12 intValue];
  }
  else {
    unsigned int v13 = 0;
  }
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR___BAContentData_supplementalContentCount);
  if (v14) {
    unsigned int v15 = [*(id *)(v1 + OBJC_IVAR___BAContentData_supplementalContentCount) intValue];
  }
  else {
    unsigned int v15 = 0;
  }
  unint64_t v16 = *(void *)(v1 + OBJC_IVAR___BAContentData_seriesType);
  if (v16 >= 4) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v1 + OBJC_IVAR___BAContentData_productionType);
  if (v17 >= 3) {
    goto LABEL_29;
  }
  char v18 = *(unsigned char *)(v1 + OBJC_IVAR___BAContentData_isUnified);
  char v19 = 8 * v16;
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentKind);
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR___BAContentData_contentKind + 8);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v26;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v25;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v24;
  *(unsigned char *)(a1 + 57) = v23;
  *(_DWORD *)(a1 + 60) = v13;
  *(unsigned char *)(a1 + 64) = v12 == 0;
  *(_DWORD *)(a1 + 68) = v15;
  *(unsigned char *)(a1 + 72) = v14 == 0;
  *(unsigned char *)(a1 + 73) = 0x2010004u >> v19;
  *(unsigned char *)(a1 + 74) = v17;
  *(unsigned char *)(a1 + 75) = 3;
  *(unsigned char *)(a1 + 76) = v18;
  *(unsigned char *)(a1 + 77) = 2;
  *(void *)(a1 + 80) = v21;
  *(void *)(a1 + 88) = v20;

  return swift_bridgeObjectRetain();
}

void BridgedContentData.init()()
{
}

id BridgedContentData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedContentData);
}

id BridgedContentSettingsData.__allocating_init(bookmarkCount:noteCount:highlightCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E2C84(a1, a2, a3, &OBJC_IVAR___BAContentSettingsData_bookmarkCount, &OBJC_IVAR___BAContentSettingsData_noteCount, &OBJC_IVAR___BAContentSettingsData_highlightCount);
}

id BridgedContentSettingsData.init(bookmarkCount:noteCount:highlightCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E2D3C(a1, a2, a3, &OBJC_IVAR___BAContentSettingsData_bookmarkCount, &OBJC_IVAR___BAContentSettingsData_noteCount, &OBJC_IVAR___BAContentSettingsData_highlightCount, type metadata accessor for BridgedContentSettingsData);
}

void BridgedContentSettingsData.init()()
{
}

id BridgedContentSettingsData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedContentSettingsData);
}

id sub_DFABC()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedContentSubType();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___BAContentSubType_subTypeEnum] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

id sub_DFB70()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedContentSubType();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___BAContentSubType_subTypeEnum] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

id sub_DFC28()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedContentSubType();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___BAContentSubType_subTypeEnum] = 2;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

id sub_DFCE0()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedContentSubType();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___BAContentSubType_subTypeEnum] = 3;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

void BridgedContentSubType.init()()
{
}

id BridgedContentSubType.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedContentSubType);
}

unint64_t BridgedDeviceOrientation.swiftType.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  return sub_DFECC(result, a2);
}

id BridgedDoNotDisturbData.__allocating_init(startStatus:endStatus:)(uint64_t a1, uint64_t a2)
{
  return sub_E2688(a1, a2, &OBJC_IVAR___BADoNotDisturbData_startStatus, &OBJC_IVAR___BADoNotDisturbData_endStatus);
}

id BridgedDoNotDisturbData.init(startStatus:endStatus:)(uint64_t a1, uint64_t a2)
{
  return sub_E2720(a1, a2, &OBJC_IVAR___BADoNotDisturbData_startStatus, &OBJC_IVAR___BADoNotDisturbData_endStatus, type metadata accessor for BridgedDoNotDisturbData);
}

void BridgedDoNotDisturbData.init()()
{
}

id BridgedDoNotDisturbData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedDoNotDisturbData);
}

unint64_t BridgedGoalType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_DFEA4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

unint64_t BridgedLaunchType.swiftType.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  return sub_DFECC(result, a2);
}

unint64_t sub_DFECC@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 3)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

id BridgedLibraryItemTypeData.__allocating_init(contentPrivateID:contentUserID:contentType:contentID:isSample:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v17 = (char *)objc_allocWithZone(v8);
  char v18 = &v17[OBJC_IVAR___BALibraryItemTypeData_contentPrivateID];
  *(void *)char v18 = a1;
  *((void *)v18 + 1) = a2;
  char v19 = &v17[OBJC_IVAR___BALibraryItemTypeData_contentUserID];
  *(void *)char v19 = a3;
  *((void *)v19 + 1) = a4;
  *(void *)&v17[OBJC_IVAR___BALibraryItemTypeData_contentType] = a5;
  uint64_t v20 = &v17[OBJC_IVAR___BALibraryItemTypeData_contentID];
  *(void *)uint64_t v20 = a6;
  *((void *)v20 + 1) = a7;
  *(void *)&v17[OBJC_IVAR___BALibraryItemTypeData_isSample] = a8;
  v22.receiver = v17;
  v22.super_class = v8;
  return [super init];
}

id BridgedLibraryItemTypeData.init(contentPrivateID:contentUserID:contentType:contentID:isSample:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9 = &v8[OBJC_IVAR___BALibraryItemTypeData_contentPrivateID];
  *(void *)char v9 = a1;
  *((void *)v9 + 1) = a2;
  char v10 = &v8[OBJC_IVAR___BALibraryItemTypeData_contentUserID];
  *(void *)char v10 = a3;
  *((void *)v10 + 1) = a4;
  *(void *)&v8[OBJC_IVAR___BALibraryItemTypeData_contentType] = a5;
  char v11 = &v8[OBJC_IVAR___BALibraryItemTypeData_contentID];
  *(void *)char v11 = a6;
  *((void *)v11 + 1) = a7;
  *(void *)&v8[OBJC_IVAR___BALibraryItemTypeData_isSample] = a8;
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for BridgedLibraryItemTypeData();
  return [super init];
}

void BridgedLibraryItemTypeData.init()()
{
}

id BridgedLibraryItemTypeData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedLibraryItemTypeData);
}

unint64_t BridgedLinkActionType.init(rawValue:)(unint64_t a1)
{
  return sub_E3D40(a1);
}

unint64_t sub_E0244@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_E3D40(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id BridgedLinkData.__allocating_init(previousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, uint64_t a14)
{
  id v23 = objc_allocWithZone(v14);
  return BridgedLinkData.init(previousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, *((uint64_t *)&a10 + 1), a11, *((uint64_t *)&a11 + 1), a12, *((uint64_t *)&a12 + 1), a13, *((uint64_t *)&a13 + 1), a14);
}

id BridgedLinkData.init(previousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20 = &v19[OBJC_IVAR___BALinkData_previousSectionID];
  *(void *)uint64_t v20 = a1;
  *((void *)v20 + 1) = a2;
  uint64_t v21 = &v19[OBJC_IVAR___BALinkData_previousSectionName];
  *(void *)uint64_t v21 = a3;
  *((void *)v21 + 1) = a4;
  objc_super v22 = &v19[OBJC_IVAR___BALinkData_previousContentID];
  *(void *)objc_super v22 = a5;
  *((void *)v22 + 1) = a6;
  *(void *)&v19[OBJC_IVAR___BALinkData_linkActionType] = a7;
  id v23 = &v19[OBJC_IVAR___BALinkData_previousSeriesID];
  *(void *)id v23 = a8;
  *((void *)v23 + 1) = a9;
  char v24 = &v19[OBJC_IVAR___BALinkData_previousGenreID];
  *(void *)char v24 = a10;
  *((void *)v24 + 1) = a11;
  uint64_t v25 = &v19[OBJC_IVAR___BALinkData_previousCollectionID];
  *(void *)uint64_t v25 = a12;
  *((void *)v25 + 1) = a13;
  uint64_t v26 = &v19[OBJC_IVAR___BALinkData_previousAuthorID];
  *(void *)uint64_t v26 = a14;
  *((void *)v26 + 1) = a15;
  uint64_t v27 = &v19[OBJC_IVAR___BALinkData_previousFlowcaseID];
  *(void *)uint64_t v27 = a16;
  *((void *)v27 + 1) = a17;
  __int16 v28 = &v19[OBJC_IVAR___BALinkData_previousBrickID];
  *(void *)__int16 v28 = a18;
  *((void *)v28 + 1) = a19;
  v30.receiver = v19;
  v30.super_class = (Class)type metadata accessor for BridgedLinkData();
  return [super init];
}

uint64_t sub_E0628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSectionID + 8);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSectionName + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousContentID + 8);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR___BALinkData_linkActionType);
  if (v5 >= 6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousContentID);
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSectionName);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSeriesID);
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSeriesID + 8);
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousGenreID);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousGenreID + 8);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousCollectionID);
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousCollectionID + 8);
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousAuthorID);
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousAuthorID + 8);
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousFlowcaseID);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousFlowcaseID + 8);
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousBrickID);
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousBrickID + 8);
    *(void *)a1 = *(void *)(v1 + OBJC_IVAR___BALinkData_previousSectionID);
    *(void *)(a1 + 8) = v2;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v4;
    *(unsigned char *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    *(void *)(a1 + 96) = v13;
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = v16;
    *(void *)(a1 + 128) = v17;
    *(void *)(a1 + 136) = v19;
    *(void *)(a1 + 144) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void BridgedLinkData.init()()
{
}

id BridgedLinkData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedLinkData);
}

id BridgedMarkedData.__allocating_init(isFinishedDateSet:)(char a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR___BAMarkedData_isFinishedDateSet] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return [super init];
}

id BridgedMarkedData.init(isFinishedDateSet:)(char a1)
{
  v1[OBJC_IVAR___BAMarkedData_isFinishedDateSet] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for BridgedMarkedData();
  return [super init];
}

void sub_E0A04(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR___BAMarkedData_isFinishedDateSet);
}

void BridgedMarkedData.init()()
{
}

id BridgedMarkedData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedMarkedData);
}

id BridgedNotificationData.__allocating_init(notificationContentID:notificationID:notificationType:recoType:goalType:titleCode:title:messageCode:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  objc_super v22 = (char *)objc_allocWithZone(v14);
  *(void *)&v22[OBJC_IVAR___BANotificationData_notificationContentID] = a1;
  id v23 = &v22[OBJC_IVAR___BANotificationData_notificationID];
  *(void *)id v23 = a2;
  *((void *)v23 + 1) = a3;
  *(void *)&v22[OBJC_IVAR___BANotificationData_notificationType] = a4;
  *(void *)&v22[OBJC_IVAR___BANotificationData_recoType] = a5;
  *(void *)&v22[OBJC_IVAR___BANotificationData_goalType] = a6;
  char v24 = &v22[OBJC_IVAR___BANotificationData_titleCode];
  *(void *)char v24 = a7;
  *((void *)v24 + 1) = a8;
  uint64_t v25 = &v22[OBJC_IVAR___BANotificationData_title];
  *(void *)uint64_t v25 = a9;
  *((void *)v25 + 1) = a10;
  uint64_t v26 = &v22[OBJC_IVAR___BANotificationData_messageCode];
  *(void *)uint64_t v26 = a11;
  *((void *)v26 + 1) = a12;
  uint64_t v27 = &v22[OBJC_IVAR___BANotificationData_message];
  *(void *)uint64_t v27 = a13;
  *((void *)v27 + 1) = a14;
  v30.receiver = v22;
  v30.super_class = v14;
  return [super init];
}

id BridgedNotificationData.init(notificationContentID:notificationID:notificationType:recoType:goalType:titleCode:title:messageCode:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)&v14[OBJC_IVAR___BANotificationData_notificationContentID] = a1;
  uint64_t v15 = &v14[OBJC_IVAR___BANotificationData_notificationID];
  *(void *)uint64_t v15 = a2;
  *((void *)v15 + 1) = a3;
  *(void *)&v14[OBJC_IVAR___BANotificationData_notificationType] = a4;
  *(void *)&v14[OBJC_IVAR___BANotificationData_recoType] = a5;
  *(void *)&v14[OBJC_IVAR___BANotificationData_goalType] = a6;
  uint64_t v16 = &v14[OBJC_IVAR___BANotificationData_titleCode];
  *(void *)uint64_t v16 = a7;
  *((void *)v16 + 1) = a8;
  uint64_t v17 = &v14[OBJC_IVAR___BANotificationData_title];
  *(void *)uint64_t v17 = a9;
  *((void *)v17 + 1) = a10;
  uint64_t v18 = &v14[OBJC_IVAR___BANotificationData_messageCode];
  *(void *)uint64_t v18 = a11;
  *((void *)v18 + 1) = a12;
  uint64_t v19 = &v14[OBJC_IVAR___BANotificationData_message];
  *(void *)uint64_t v19 = a13;
  *((void *)v19 + 1) = a14;
  v21.receiver = v14;
  v21.super_class = (Class)type metadata accessor for BridgedNotificationData();
  return [super init];
}

uint64_t sub_E0DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BANotificationData_notificationID + 8);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BANotificationData_notificationType);
  if (v3 >= 4
    || (unint64_t v4 = *(void *)(v1 + OBJC_IVAR___BANotificationData_recoType), v4 >= 5)
    || (unint64_t v5 = *(void *)(v1 + OBJC_IVAR___BANotificationData_goalType), v5 >= 3))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR___BANotificationData_notificationID);
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BANotificationData_titleCode);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BANotificationData_titleCode + 8);
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR___BANotificationData_title);
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR___BANotificationData_title + 8);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR___BANotificationData_messageCode);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR___BANotificationData_messageCode + 8);
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR___BANotificationData_message);
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR___BANotificationData_message + 8);
    *(void *)a1 = *(void *)(v1 + OBJC_IVAR___BANotificationData_notificationContentID);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v2;
    *(unsigned char *)(a1 + 24) = v3;
    *(unsigned char *)(a1 + 25) = v4;
    *(unsigned char *)(a1 + 26) = v5;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void BridgedNotificationData.init()()
{
}

id BridgedNotificationData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedNotificationData);
}

id BridgedNotificationEngagementData.__allocating_init(actionType:actionUrl:targetID:targetType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR___BANotificationEngagementData_actionType] = a1;
  uint64_t v12 = &v11[OBJC_IVAR___BANotificationEngagementData_actionUrl];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  *(void *)&v11[OBJC_IVAR___BANotificationEngagementData_targetID] = a4;
  *(void *)&v11[OBJC_IVAR___BANotificationEngagementData_targetType] = a5;
  v14.receiver = v11;
  v14.super_class = v5;
  return [super init];
}

id BridgedNotificationEngagementData.init(actionType:actionUrl:targetID:targetType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&v5[OBJC_IVAR___BANotificationEngagementData_actionType] = a1;
  uint64_t v6 = &v5[OBJC_IVAR___BANotificationEngagementData_actionUrl];
  *(void *)uint64_t v6 = a2;
  *((void *)v6 + 1) = a3;
  *(void *)&v5[OBJC_IVAR___BANotificationEngagementData_targetID] = a4;
  *(void *)&v5[OBJC_IVAR___BANotificationEngagementData_targetType] = a5;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for BridgedNotificationEngagementData();
  return [super init];
}

uint64_t sub_E121C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR___BANotificationEngagementData_actionType);
  if (v2 >= 7) {
    goto LABEL_8;
  }
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BANotificationEngagementData_targetID);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___BANotificationEngagementData_actionUrl + 8);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR___BANotificationEngagementData_targetType);
  if (v5 >= 3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t result = sub_27E390();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___BANotificationEngagementData_actionUrl);
  *(unsigned char *)a1 = v2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void BridgedNotificationEngagementData.init()()
{
}

id BridgedNotificationEngagementData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedNotificationEngagementData);
}

id BridgedPurchaseData.__allocating_init(purchaseAttemptID:purchaseMethod:isPreorder:pricingParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = objc_allocWithZone(v6);
  objc_super v14 = &v13[OBJC_IVAR___BAPurchaseData_purchaseAttemptID];
  *objc_super v14 = a1;
  v14[1] = a2;
  *(void *)&v13[OBJC_IVAR___BAPurchaseData_purchaseMethod] = a3;
  v13[OBJC_IVAR___BAPurchaseData_isPreorder] = a4;
  uint64_t v15 = &v13[OBJC_IVAR___BAPurchaseData_pricingParameters];
  *uint64_t v15 = a5;
  v15[1] = a6;
  v17.receiver = v13;
  v17.super_class = v6;
  return [super init];
}

id BridgedPurchaseData.init(purchaseAttemptID:purchaseMethod:isPreorder:pricingParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = &v6[OBJC_IVAR___BAPurchaseData_purchaseAttemptID];
  void *v7 = a1;
  v7[1] = a2;
  *(void *)&v6[OBJC_IVAR___BAPurchaseData_purchaseMethod] = a3;
  v6[OBJC_IVAR___BAPurchaseData_isPreorder] = a4;
  objc_super v8 = &v6[OBJC_IVAR___BAPurchaseData_pricingParameters];
  *objc_super v8 = a5;
  v8[1] = a6;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for BridgedPurchaseData();
  return [super init];
}

void BridgedPurchaseData.init()()
{
}

id BridgedPurchaseData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedPurchaseData);
}

id BridgedPurchaseFailData.__allocating_init(purchaseFailureReason:errorCode:errorDescription:errorDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  *(void *)&v13[OBJC_IVAR___BAPurchaseFailData_purchaseFailureReason] = a1;
  *(void *)&v13[OBJC_IVAR___BAPurchaseFailData_errorCode] = a2;
  objc_super v14 = &v13[OBJC_IVAR___BAPurchaseFailData_errorDescription];
  *(void *)objc_super v14 = a3;
  *((void *)v14 + 1) = a4;
  uint64_t v15 = &v13[OBJC_IVAR___BAPurchaseFailData_errorDomain];
  *(void *)uint64_t v15 = a5;
  *((void *)v15 + 1) = a6;
  v17.receiver = v13;
  v17.super_class = v6;
  return [super init];
}

id BridgedPurchaseFailData.init(purchaseFailureReason:errorCode:errorDescription:errorDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR___BAPurchaseFailData_purchaseFailureReason] = a1;
  *(void *)&v6[OBJC_IVAR___BAPurchaseFailData_errorCode] = a2;
  uint64_t v7 = &v6[OBJC_IVAR___BAPurchaseFailData_errorDescription];
  *(void *)uint64_t v7 = a3;
  *((void *)v7 + 1) = a4;
  objc_super v8 = &v6[OBJC_IVAR___BAPurchaseFailData_errorDomain];
  *(void *)objc_super v8 = a5;
  *((void *)v8 + 1) = a6;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for BridgedPurchaseFailData();
  return [super init];
}

void BridgedPurchaseFailData.init()()
{
}

id BridgedPurchaseFailData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedPurchaseFailData);
}

void *BridgedReadingSessionData.percentCompletionStart.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___BAReadingSessionData_percentCompletionStart);
  id v2 = v1;
  return v1;
}

void *BridgedReadingSessionData.percentCompletionEnd.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___BAReadingSessionData_percentCompletionEnd);
  id v2 = v1;
  return v1;
}

id BridgedReadingSessionData.__allocating_init(percentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___BAReadingSessionData_percentCompletionStart] = a1;
  *(void *)&v9[OBJC_IVAR___BAReadingSessionData_percentCompletionEnd] = a2;
  *(void *)&v9[OBJC_IVAR___BAReadingSessionData_isFreeSample] = a3;
  *(void *)&v9[OBJC_IVAR___BAReadingSessionData_deviceOrientation] = a4;
  v11.receiver = v9;
  v11.super_class = v4;
  return [super init];
}

id BridgedReadingSessionData.init(percentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___BAReadingSessionData_percentCompletionStart] = a1;
  *(void *)&v4[OBJC_IVAR___BAReadingSessionData_percentCompletionEnd] = a2;
  *(void *)&v4[OBJC_IVAR___BAReadingSessionData_isFreeSample] = a3;
  *(void *)&v4[OBJC_IVAR___BAReadingSessionData_deviceOrientation] = a4;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for BridgedReadingSessionData();
  return [super init];
}

id sub_E1AD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAReadingSessionData_percentCompletionStart);
  int v4 = 0;
  int v5 = 0;
  if (v3)
  {
    [*(id *)(v1 + OBJC_IVAR___BAReadingSessionData_percentCompletionStart) floatValue];
    int v5 = v6;
  }
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BAReadingSessionData_percentCompletionEnd);
  if (v7)
  {
    [*(id *)(v1 + OBJC_IVAR___BAReadingSessionData_percentCompletionEnd) floatValue];
    int v4 = v8;
  }
  id result = [*(id *)(v1 + OBJC_IVAR___BAReadingSessionData_isFreeSample) BOOLValue];
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR___BAReadingSessionData_deviceOrientation);
  if (v10 >= 3)
  {
    id result = (id)sub_27E390();
    __break(1u);
  }
  else
  {
    *(_DWORD *)a1 = v5;
    *(unsigned char *)(a1 + 4) = v3 == 0;
    *(_DWORD *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 12) = v7 == 0;
    *(unsigned char *)(a1 + 13) = (_BYTE)result;
    *(unsigned char *)(a1 + 14) = v10;
  }
  return result;
}

void BridgedReadingSessionData.init()()
{
}

id BridgedReadingSessionData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedReadingSessionData);
}

id BridgedReadingSettingsData.__allocating_init(scrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (char *)objc_allocWithZone(v7);
  *(void *)&v15[OBJC_IVAR___BAReadingSettingsData_scrollViewStatus] = a1;
  *(void *)&v15[OBJC_IVAR___BAReadingSettingsData_autoNightThemeStatus] = a2;
  *(void *)&v15[OBJC_IVAR___BAReadingSettingsData_backgroundColor] = a3;
  uint64_t v16 = &v15[OBJC_IVAR___BAReadingSettingsData_font];
  *(void *)uint64_t v16 = a4;
  *((void *)v16 + 1) = a5;
  *(void *)&v15[OBJC_IVAR___BAReadingSettingsData_fontSize] = a6;
  *(void *)&v15[OBJC_IVAR___BAReadingSettingsData_brightnessLevel] = a7;
  v18.receiver = v15;
  v18.super_class = v7;
  return [super init];
}

id BridgedReadingSettingsData.init(scrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)&v7[OBJC_IVAR___BAReadingSettingsData_scrollViewStatus] = a1;
  *(void *)&v7[OBJC_IVAR___BAReadingSettingsData_autoNightThemeStatus] = a2;
  *(void *)&v7[OBJC_IVAR___BAReadingSettingsData_backgroundColor] = a3;
  int v8 = &v7[OBJC_IVAR___BAReadingSettingsData_font];
  *(void *)int v8 = a4;
  *((void *)v8 + 1) = a5;
  *(void *)&v7[OBJC_IVAR___BAReadingSettingsData_fontSize] = a6;
  *(void *)&v7[OBJC_IVAR___BAReadingSettingsData_brightnessLevel] = a7;
  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for BridgedReadingSettingsData();
  return [super init];
}

id sub_E1EAC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAReadingSettingsData_scrollViewStatus);
  if (v3 >= 3
    || (unint64_t v4 = *(void *)(v1 + OBJC_IVAR___BAReadingSettingsData_autoNightThemeStatus), v4 >= 3)
    || (unint64_t v5 = *(void *)(v1 + OBJC_IVAR___BAReadingSettingsData_backgroundColor), v5 >= 5))
  {
    id result = (id)sub_27E390();
    __break(1u);
  }
  else
  {
    unint64_t v6 = 0x4030201uLL >> (8 * v5);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BAReadingSettingsData_font);
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BAReadingSettingsData_font + 8);
    uint64_t v9 = *(void **)(v1 + OBJC_IVAR___BAReadingSettingsData_fontSize);
    swift_bridgeObjectRetain();
    [v9 floatValue];
    int v11 = v10;
    id result = [*(id *)(v1 + OBJC_IVAR___BAReadingSettingsData_brightnessLevel) floatValue];
    *(unsigned char *)a1 = v3;
    *(unsigned char *)(a1 + 1) = v4;
    *(unsigned char *)(a1 + 2) = v6;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
    *(_DWORD *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 28) = v13;
  }
  return result;
}

void BridgedReadingSettingsData.init()()
{
}

id BridgedReadingSettingsData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedReadingSettingsData);
}

unint64_t BridgedRecoType.init(rawValue:)(unint64_t a1)
{
  return sub_E3E70(a1);
}

unint64_t sub_E20E0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_E3E70(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t BridgedRemoteConfigNamespaceData.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BARemoteConfigNamespaceData_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedRemoteConfigNamespaceData.treatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BridgedRemoteConfigNamespaceData.segmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BridgedRemoteConfigNamespaceData.segmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BridgedRemoteConfigNamespaceData.previousTreatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BridgedRemoteConfigNamespaceData.previousSegmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BridgedRemoteConfigNamespaceData.previousSegmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

id BridgedRemoteConfigNamespaceData.__allocating_init(name:treatmentIDs:segmentIDs:segmentSetIDs:previousTreatmentIDs:previousSegmentIDs:previousSegmentSetIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_super v17 = (char *)objc_allocWithZone(v8);
  objc_super v18 = &v17[OBJC_IVAR___BARemoteConfigNamespaceData_name];
  *(void *)objc_super v18 = a1;
  *((void *)v18 + 1) = a2;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_treatmentIDs] = a3;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_segmentIDs] = a4;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_segmentSetIDs] = a5;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_previousTreatmentIDs] = a6;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentIDs] = a7;
  *(void *)&v17[OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentSetIDs] = a8;
  v20.receiver = v17;
  v20.super_class = v8;
  return [super init];
}

id BridgedRemoteConfigNamespaceData.init(name:treatmentIDs:segmentIDs:segmentSetIDs:previousTreatmentIDs:previousSegmentIDs:previousSegmentSetIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = &v8[OBJC_IVAR___BARemoteConfigNamespaceData_name];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_treatmentIDs] = a3;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_segmentIDs] = a4;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_segmentSetIDs] = a5;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_previousTreatmentIDs] = a6;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentIDs] = a7;
  *(void *)&v8[OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentSetIDs] = a8;
  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for BridgedRemoteConfigNamespaceData();
  return [super init];
}

uint64_t sub_E2314@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_name + 8);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_treatmentIDs);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentIDs);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_segmentSetIDs);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_previousTreatmentIDs);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentIDs);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_previousSegmentSetIDs);
  *a1 = *(void *)(v1 + OBJC_IVAR___BARemoteConfigNamespaceData_name);
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void BridgedRemoteConfigNamespaceData.init()()
{
}

id BridgedRemoteConfigNamespaceData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedRemoteConfigNamespaceData);
}

unint64_t BridgedSeriesType.init(rawValue:)(unint64_t a1)
{
  return sub_E3EA4(a1);
}

unint64_t sub_E2524@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_E3EA4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t BridgedSessionListeningData.timeSpentListening.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BASessionListeningData_timeSpentListening);
}

uint64_t BridgedSessionListeningData.uniqueAudiobooksListened.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BASessionListeningData_uniqueAudiobooksListened);
}

id BridgedSessionListeningData.__allocating_init(timeSpentListening:uniqueAudiobooksListened:)(uint64_t a1, uint64_t a2)
{
  return sub_E2688(a1, a2, &OBJC_IVAR___BASessionListeningData_timeSpentListening, &OBJC_IVAR___BASessionListeningData_uniqueAudiobooksListened);
}

id BridgedSessionListeningData.init(timeSpentListening:uniqueAudiobooksListened:)(uint64_t a1, uint64_t a2)
{
  return sub_E2720(a1, a2, &OBJC_IVAR___BASessionListeningData_timeSpentListening, &OBJC_IVAR___BASessionListeningData_uniqueAudiobooksListened, type metadata accessor for BridgedSessionListeningData);
}

void BridgedSessionListeningData.init()()
{
}

id BridgedSessionListeningData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedSessionListeningData);
}

uint64_t BridgedSessionReadingData.timeSpentReading.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BASessionReadingData_timeSpentReading);
}

uint64_t BridgedSessionReadingData.uniqueBooksRead.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BASessionReadingData_uniqueBooksRead);
}

id BridgedSessionReadingData.__allocating_init(timeSpentReading:uniqueBooksRead:)(uint64_t a1, uint64_t a2)
{
  return sub_E2688(a1, a2, &OBJC_IVAR___BASessionReadingData_timeSpentReading, &OBJC_IVAR___BASessionReadingData_uniqueBooksRead);
}

id sub_E2688(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[*a3] = a1;
  *(void *)&v9[*a4] = a2;
  v11.receiver = v9;
  v11.super_class = v4;
  return [super init];
}

id BridgedSessionReadingData.init(timeSpentReading:uniqueBooksRead:)(uint64_t a1, uint64_t a2)
{
  return sub_E2720(a1, a2, &OBJC_IVAR___BASessionReadingData_timeSpentReading, &OBJC_IVAR___BASessionReadingData_uniqueBooksRead, type metadata accessor for BridgedSessionReadingData);
}

id sub_E2720(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(void))
{
  *(void *)&v5[*a3] = a1;
  *(void *)&v5[*a4] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)a5();
  return [super init];
}

id sub_E2790(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(void))
{
  *(void *)&a1[*a5] = a3;
  *(void *)&a1[*a6] = a4;
  v8.receiver = a1;
  v8.super_class = (Class)a7();
  return [super init];
}

void BridgedSessionReadingData.init()()
{
}

id BridgedSessionReadingData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedSessionReadingData);
}

unint64_t BridgedTabType.init(rawValue:)(unint64_t a1)
{
  return sub_E3EFC(a1);
}

BOOL sub_E2878(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_E288C()
{
  sub_27E410(*v0);
}

unint64_t sub_E28B8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_E3EFC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_E28EC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t BridgedUpSellData.location.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BAUpSellData_location);
}

uint64_t BridgedUpSellData.variant.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BAUpSellData_variant);
}

uint64_t BridgedUpSellData.variantVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BAUpSellData_variantVersion);
  swift_bridgeObjectRetain();
  return v1;
}

id BridgedUpSellData.__allocating_init(location:variant:variantVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___BAUpSellData_location] = a1;
  *(void *)&v9[OBJC_IVAR___BAUpSellData_variant] = a2;
  int v10 = &v9[OBJC_IVAR___BAUpSellData_variantVersion];
  *(void *)int v10 = a3;
  *((void *)v10 + 1) = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return [super init];
}

id BridgedUpSellData.init(location:variant:variantVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___BAUpSellData_location] = a1;
  *(void *)&v4[OBJC_IVAR___BAUpSellData_variant] = a2;
  uint64_t v5 = &v4[OBJC_IVAR___BAUpSellData_variantVersion];
  *(void *)uint64_t v5 = a3;
  *((void *)v5 + 1) = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for BridgedUpSellData();
  return [super init];
}

uint64_t sub_E2B38@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR___BAUpSellData_location);
  if (v2 >= 4 || (unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAUpSellData_variant), v3 >= 3))
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR___BAUpSellData_variantVersion);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR___BAUpSellData_variantVersion + 8);
    *(unsigned char *)a1 = v2;
    *(unsigned char *)(a1 + 1) = v3;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void BridgedUpSellData.init()()
{
}

id BridgedUpSellData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedUpSellData);
}

id BridgedViewData.__allocating_init(type:action:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E2C84(a1, a2, a3, &OBJC_IVAR___BAViewData_type, &OBJC_IVAR___BAViewData_action, &OBJC_IVAR___BAViewData_location);
}

id sub_E2C84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  int v13 = (char *)objc_allocWithZone(v6);
  *(void *)&v13[*a4] = a1;
  *(void *)&v13[*a5] = a2;
  *(void *)&v13[*a6] = a3;
  v15.receiver = v13;
  v15.super_class = v6;
  return [super init];
}

id BridgedViewData.init(type:action:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E2D3C(a1, a2, a3, &OBJC_IVAR___BAViewData_type, &OBJC_IVAR___BAViewData_action, &OBJC_IVAR___BAViewData_location, type metadata accessor for BridgedViewData);
}

id sub_E2D3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t (*a7)(void))
{
  *(void *)&v7[*a4] = a1;
  *(void *)&v7[*a5] = a2;
  *(void *)&v7[*a6] = a3;
  v9.receiver = v7;
  v9.super_class = (Class)a7();
  return [super init];
}

uint64_t sub_E2DF0@<X0>(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR___BAViewData_type);
  if (v2 >= 5
    || (unint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAViewData_action), v3 >= 7)
    || (unint64_t v4 = *(void *)(v1 + OBJC_IVAR___BAViewData_location), v4 >= 3))
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    *a1 = v2;
    a1[1] = v3;
    a1[2] = v4;
  }
  return result;
}

void BridgedViewData.init()()
{
}

id BridgedViewData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedViewData);
}

Swift::Int sub_E2F10()
{
  Swift::UInt v1 = *v0;
  sub_27E400();
  sub_27E410(v1);
  return sub_27E420();
}

Swift::Int sub_E2F58()
{
  Swift::UInt v1 = *v0;
  sub_27E400();
  sub_27E410(v1);
  return sub_27E420();
}

uint64_t BridgedWidgetData.widgetFamily.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BAWidgetData_widgetFamily);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedWidgetData.displayMode.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BAWidgetData_displayMode);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedWidgetData.isContentExposed.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BAWidgetData_isContentExposed);
}

uint64_t BridgedWidgetData.isStreakExposed.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BAWidgetData_isStreakExposed);
}

id BridgedWidgetData.__allocating_init(widgetFamily:displayMode:isContentExposed:isStreakExposed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  int v13 = objc_allocWithZone(v6);
  objc_super v14 = &v13[OBJC_IVAR___BAWidgetData_widgetFamily];
  *objc_super v14 = a1;
  v14[1] = a2;
  objc_super v15 = &v13[OBJC_IVAR___BAWidgetData_displayMode];
  *objc_super v15 = a3;
  v15[1] = a4;
  v13[OBJC_IVAR___BAWidgetData_isContentExposed] = a5;
  v13[OBJC_IVAR___BAWidgetData_isStreakExposed] = a6;
  v17.receiver = v13;
  v17.super_class = v6;
  return [super init];
}

id BridgedWidgetData.init(widgetFamily:displayMode:isContentExposed:isStreakExposed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  objc_super v7 = &v6[OBJC_IVAR___BAWidgetData_widgetFamily];
  void *v7 = a1;
  v7[1] = a2;
  objc_super v8 = &v6[OBJC_IVAR___BAWidgetData_displayMode];
  *objc_super v8 = a3;
  v8[1] = a4;
  v6[OBJC_IVAR___BAWidgetData_isContentExposed] = a5;
  v6[OBJC_IVAR___BAWidgetData_isStreakExposed] = a6;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for BridgedWidgetData();
  return [super init];
}

void BridgedWidgetData.init()()
{
}

id BridgedWidgetData.__deallocating_deinit()
{
  return sub_E326C(type metadata accessor for BridgedWidgetData);
}

id sub_E326C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_E32B8()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id ContentSubType.bridgeType.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = (objc_class *)type metadata accessor for BridgedContentSubType();
      uint64_t v6 = objc_allocWithZone(v1);
      v6[OBJC_IVAR___BAContentSubType_subTypeEnum] = 1;
      v9.receiver = v6;
      objc_super v3 = &v9;
      break;
    case 2:
      uint64_t v1 = (objc_class *)type metadata accessor for BridgedContentSubType();
      unint64_t v4 = objc_allocWithZone(v1);
      v4[OBJC_IVAR___BAContentSubType_subTypeEnum] = 2;
      objc_super v10 = v4;
      objc_super v3 = (objc_super *)&v10;
      break;
    case 3:
      uint64_t v1 = (objc_class *)type metadata accessor for BridgedContentSubType();
      uint64_t v5 = objc_allocWithZone(v1);
      v5[OBJC_IVAR___BAContentSubType_subTypeEnum] = 3;
      objc_super v11 = v5;
      objc_super v3 = (objc_super *)&v11;
      break;
    default:
      uint64_t v1 = (objc_class *)type metadata accessor for BridgedContentSubType();
      unint64_t v2 = objc_allocWithZone(v1);
      v2[OBJC_IVAR___BAContentSubType_subTypeEnum] = 0;
      objc_super v8 = v2;
      objc_super v3 = (objc_super *)&v8;
      break;
  }
  v3->super_class = v1;
  return [(objc_super *)v3 init];
}

uint64_t sub_E3408(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_E34C8(a1, a2, a3, *v3, &qword_31BC90);
  objc_super *v3 = (char *)result;
  return result;
}

uint64_t sub_E3438(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_E34C8(a1, a2, a3, *v3, &qword_31BC88);
  objc_super *v3 = (char *)result;
  return result;
}

uint64_t sub_E3468(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_E3654(a1, a2, a3, *v3);
  objc_super *v3 = (char *)result;
  return result;
}

uint64_t sub_E3488(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_E37D0(a1, a2, a3, *v3);
  objc_super *v3 = (char *)result;
  return result;
}

uint64_t sub_E34A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_E3938(a1, a2, a3, *v3);
  objc_super *v3 = (char *)result;
  return result;
}

uint64_t sub_E34C8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_4E04(a5);
    objc_super v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    objc_super v11 = (char *)&_swiftEmptyArrayStorage;
  }
  int v13 = v11 + 32;
  objc_super v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[48 * v9]) {
      memmove(v13, v14, 48 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v9] || v13 >= &v14[48 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_E3654(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4E04(&qword_31BC70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v12 = v10 + 32;
  int v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_E37D0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4E04(&qword_31BC80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_E3938(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_4E04(&qword_31BC78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BridgedBackgroundColorData()
{
  return self;
}

uint64_t type metadata accessor for BridgedBooksTreatmentData()
{
  return self;
}

uint64_t type metadata accessor for BridgedCollectionIDData()
{
  return self;
}

uint64_t type metadata accessor for BridgedCollectionSummaryData()
{
  return self;
}

id sub_E3B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16)
{
  objc_super v17 = &v16[OBJC_IVAR___BAContentData_contentID];
  *(void *)objc_super v17 = a1;
  *((void *)v17 + 1) = a2;
  *(void *)&v16[OBJC_IVAR___BAContentData_contentType] = a3;
  objc_super v18 = &v16[OBJC_IVAR___BAContentData_contentPrivateID];
  *(void *)objc_super v18 = a4;
  *((void *)v18 + 1) = a5;
  uint64_t v19 = &v16[OBJC_IVAR___BAContentData_contentUserID];
  *(void *)uint64_t v19 = a6;
  *((void *)v19 + 1) = a7;
  *(void *)&v16[OBJC_IVAR___BAContentData_contentAcquisitionType] = a8;
  *(void *)&v16[OBJC_IVAR___BAContentData_contentSubType] = a9;
  *(void *)&v16[OBJC_IVAR___BAContentData_contentLength] = a10;
  *(void *)&v16[OBJC_IVAR___BAContentData_supplementalContentCount] = a11;
  *(void *)&v16[OBJC_IVAR___BAContentData_seriesType] = a12;
  *(void *)&v16[OBJC_IVAR___BAContentData_productionType] = a13;
  id v20 = a11;
  objc_super v21 = v16;
  id v22 = a9;
  id v23 = a10;
  if (a14) {
    unsigned __int8 v24 = [a14 BOOLValue];
  }
  else {
    unsigned __int8 v24 = 2;
  }
  v16[OBJC_IVAR___BAContentData_isUnified] = v24;
  v16[OBJC_IVAR___BAContentData_isAccoladedContent] = 2;
  uint64_t v25 = &v16[OBJC_IVAR___BAContentData_contentKind];
  *(void *)uint64_t v25 = a15;
  *((void *)v25 + 1) = a16;

  v27.receiver = v16;
  v27.super_class = (Class)type metadata accessor for BridgedContentData();
  return [super init];
}

uint64_t type metadata accessor for BridgedContentData()
{
  return self;
}

uint64_t type metadata accessor for BridgedContentSettingsData()
{
  return self;
}

uint64_t type metadata accessor for BridgedContentSubType()
{
  return self;
}

uint64_t type metadata accessor for BridgedDoNotDisturbData()
{
  return self;
}

uint64_t type metadata accessor for BridgedLibraryItemTypeData()
{
  return self;
}

unint64_t sub_E3D40(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BridgedLinkData()
{
  return self;
}

uint64_t type metadata accessor for BridgedMarkedData()
{
  return self;
}

uint64_t type metadata accessor for BridgedNotificationData()
{
  return self;
}

uint64_t type metadata accessor for BridgedNotificationEngagementData()
{
  return self;
}

uint64_t type metadata accessor for BridgedPurchaseData()
{
  return self;
}

uint64_t type metadata accessor for BridgedPurchaseFailData()
{
  return self;
}

uint64_t type metadata accessor for BridgedReadingSessionData()
{
  return self;
}

uint64_t type metadata accessor for BridgedReadingSettingsData()
{
  return self;
}

unint64_t sub_E3E70(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BridgedRemoteConfigNamespaceData()
{
  return self;
}

unint64_t sub_E3EA4(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BridgedSessionListeningData()
{
  return self;
}

uint64_t type metadata accessor for BridgedSessionReadingData()
{
  return self;
}

unint64_t sub_E3EFC(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BridgedUpSellData()
{
  return self;
}

uint64_t type metadata accessor for BridgedViewData()
{
  return self;
}

uint64_t type metadata accessor for BridgedWidgetData()
{
  return self;
}

unint64_t sub_E3F7C()
{
  unint64_t result = qword_31B7D8;
  if (!qword_31B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B7D8);
  }
  return result;
}

unint64_t sub_E3FD4()
{
  unint64_t result = qword_31B7E0;
  if (!qword_31B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B7E0);
  }
  return result;
}

unint64_t sub_E402C()
{
  unint64_t result = qword_31B7E8;
  if (!qword_31B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B7E8);
  }
  return result;
}

unint64_t sub_E4084()
{
  unint64_t result = qword_31B7F0;
  if (!qword_31B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B7F0);
  }
  return result;
}

unint64_t sub_E40DC()
{
  unint64_t result = qword_31B7F8;
  if (!qword_31B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B7F8);
  }
  return result;
}

unint64_t sub_E4134()
{
  unint64_t result = qword_31B800;
  if (!qword_31B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B800);
  }
  return result;
}

unint64_t sub_E418C()
{
  unint64_t result = qword_31B808;
  if (!qword_31B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B808);
  }
  return result;
}

unint64_t sub_E41E4()
{
  unint64_t result = qword_31B810;
  if (!qword_31B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B810);
  }
  return result;
}

unint64_t sub_E423C()
{
  unint64_t result = qword_31B818;
  if (!qword_31B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B818);
  }
  return result;
}

unint64_t sub_E4294()
{
  unint64_t result = qword_31B820;
  if (!qword_31B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B820);
  }
  return result;
}

unint64_t sub_E42EC()
{
  unint64_t result = qword_31B828;
  if (!qword_31B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B828);
  }
  return result;
}

unint64_t sub_E4344()
{
  unint64_t result = qword_31B830;
  if (!qword_31B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B830);
  }
  return result;
}

unint64_t sub_E439C()
{
  unint64_t result = qword_31B838;
  if (!qword_31B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B838);
  }
  return result;
}

unint64_t sub_E43F4()
{
  unint64_t result = qword_31B840;
  if (!qword_31B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B840);
  }
  return result;
}

unint64_t sub_E444C()
{
  unint64_t result = qword_31B848;
  if (!qword_31B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B848);
  }
  return result;
}

unint64_t sub_E44A4()
{
  unint64_t result = qword_31B850;
  if (!qword_31B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B850);
  }
  return result;
}

unint64_t sub_E44FC()
{
  unint64_t result = qword_31B858;
  if (!qword_31B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B858);
  }
  return result;
}

unint64_t sub_E4554()
{
  unint64_t result = qword_31B860;
  if (!qword_31B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B860);
  }
  return result;
}

unint64_t sub_E45AC()
{
  unint64_t result = qword_31B868;
  if (!qword_31B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B868);
  }
  return result;
}

unint64_t sub_E4604()
{
  unint64_t result = qword_31B870;
  if (!qword_31B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B870);
  }
  return result;
}

unint64_t sub_E465C()
{
  unint64_t result = qword_31B878;
  if (!qword_31B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B878);
  }
  return result;
}

unint64_t sub_E46B4()
{
  unint64_t result = qword_31B880;
  if (!qword_31B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B880);
  }
  return result;
}

unint64_t sub_E470C()
{
  unint64_t result = qword_31B888;
  if (!qword_31B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B888);
  }
  return result;
}

unint64_t sub_E4764()
{
  unint64_t result = qword_31B890;
  if (!qword_31B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B890);
  }
  return result;
}

unint64_t sub_E47BC()
{
  unint64_t result = qword_31B898;
  if (!qword_31B898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B898);
  }
  return result;
}

unint64_t sub_E4814()
{
  unint64_t result = qword_31B8A0;
  if (!qword_31B8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B8A0);
  }
  return result;
}

unint64_t sub_E486C()
{
  unint64_t result = qword_31B8A8;
  if (!qword_31B8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B8A8);
  }
  return result;
}

unint64_t sub_E48C4()
{
  unint64_t result = qword_31B8B0;
  if (!qword_31B8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B8B0);
  }
  return result;
}

unint64_t sub_E491C()
{
  unint64_t result = qword_31B8B8;
  if (!qword_31B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B8B8);
  }
  return result;
}

unint64_t sub_E4974()
{
  unint64_t result = qword_31B8C0;
  if (!qword_31B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31B8C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedActionType()
{
  return &type metadata for BridgedActionType;
}

ValueMetadata *type metadata accessor for BridgedAutoNightThemeStatus()
{
  return &type metadata for BridgedAutoNightThemeStatus;
}

ValueMetadata *type metadata accessor for BridgedBackgroundColor()
{
  return &type metadata for BridgedBackgroundColor;
}

uint64_t method lookup function for BridgedBackgroundColorData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedBackgroundColorData);
}

uint64_t dispatch thunk of BridgedBackgroundColorData.__allocating_init(backgroundColor:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for BridgedBooksTreatmentData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedBooksTreatmentData);
}

uint64_t dispatch thunk of BridgedBooksTreatmentData.__allocating_init(remoteConfigNamespaceData:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for BridgedCollectionIDData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedCollectionIDData);
}

uint64_t dispatch thunk of BridgedCollectionIDData.__allocating_init(collectionID:collectionMemberCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for BridgedCollectionSummaryData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedCollectionSummaryData);
}

uint64_t dispatch thunk of BridgedCollectionSummaryData.__allocating_init(collectionSummary:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for BridgedContentAcquisitionType()
{
  return &type metadata for BridgedContentAcquisitionType;
}

uint64_t method lookup function for BridgedContentData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedContentData);
}

uint64_t dispatch thunk of BridgedContentData.__allocating_init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:isUnified:contentKind:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of BridgedContentData.swiftType.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t method lookup function for BridgedContentSettingsData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedContentSettingsData);
}

uint64_t dispatch thunk of BridgedContentSettingsData.__allocating_init(bookmarkCount:noteCount:highlightCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for BridgedContentSubType(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedContentSubType);
}

uint64_t dispatch thunk of static BridgedContentSubType.unknown.getter()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static BridgedContentSubType.rmt.getter()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of static BridgedContentSubType.fixedLayout.getter()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of static BridgedContentSubType.traditional.getter()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for BridgedContentType()
{
  return &type metadata for BridgedContentType;
}

ValueMetadata *type metadata accessor for BridgedDeviceOrientation()
{
  return &type metadata for BridgedDeviceOrientation;
}

ValueMetadata *type metadata accessor for BridgedDisplayType()
{
  return &type metadata for BridgedDisplayType;
}

uint64_t method lookup function for BridgedDoNotDisturbData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedDoNotDisturbData);
}

uint64_t dispatch thunk of BridgedDoNotDisturbData.__allocating_init(startStatus:endStatus:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for BridgedDoNotDisturbStatus()
{
  return &type metadata for BridgedDoNotDisturbStatus;
}

ValueMetadata *type metadata accessor for BridgedEditActionType()
{
  return &type metadata for BridgedEditActionType;
}

ValueMetadata *type metadata accessor for BridgedEndReasonType()
{
  return &type metadata for BridgedEndReasonType;
}

ValueMetadata *type metadata accessor for BridgedGetStartedActionType()
{
  return &type metadata for BridgedGetStartedActionType;
}

ValueMetadata *type metadata accessor for BridgedGoalType()
{
  return &type metadata for BridgedGoalType;
}

ValueMetadata *type metadata accessor for BridgedLaunchType()
{
  return &type metadata for BridgedLaunchType;
}

uint64_t method lookup function for BridgedLibraryItemTypeData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedLibraryItemTypeData);
}

uint64_t dispatch thunk of BridgedLibraryItemTypeData.__allocating_init(contentPrivateID:contentUserID:contentType:contentID:isSample:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for BridgedLinkActionType()
{
  return &type metadata for BridgedLinkActionType;
}

uint64_t method lookup function for BridgedLinkData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedLinkData);
}

uint64_t dispatch thunk of BridgedLinkData.__allocating_init(previousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for BridgedMarkedData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedMarkedData);
}

uint64_t dispatch thunk of BridgedMarkedData.__allocating_init(isFinishedDateSet:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BridgedMarkedData.swiftType.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

ValueMetadata *type metadata accessor for BridgedMessageType()
{
  return &type metadata for BridgedMessageType;
}

uint64_t method lookup function for BridgedNotificationData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedNotificationData);
}

uint64_t dispatch thunk of BridgedNotificationData.__allocating_init(notificationContentID:notificationID:notificationType:recoType:goalType:titleCode:title:messageCode:message:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for BridgedNotificationEngagementData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedNotificationEngagementData);
}

uint64_t dispatch thunk of BridgedNotificationEngagementData.__allocating_init(actionType:actionUrl:targetID:targetType:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for BridgedNotificationType()
{
  return &type metadata for BridgedNotificationType;
}

ValueMetadata *type metadata accessor for BridgedProductionType()
{
  return &type metadata for BridgedProductionType;
}

uint64_t method lookup function for BridgedPurchaseData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedPurchaseData);
}

uint64_t dispatch thunk of BridgedPurchaseData.__allocating_init(purchaseAttemptID:purchaseMethod:isPreorder:pricingParameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for BridgedPurchaseFailData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedPurchaseFailData);
}

uint64_t dispatch thunk of BridgedPurchaseFailData.__allocating_init(purchaseFailureReason:errorCode:errorDescription:errorDomain:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for BridgedPurchaseFailureReason()
{
  return &type metadata for BridgedPurchaseFailureReason;
}

ValueMetadata *type metadata accessor for BridgedPurchaseMethod()
{
  return &type metadata for BridgedPurchaseMethod;
}

uint64_t method lookup function for BridgedReadingSessionData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedReadingSessionData);
}

uint64_t dispatch thunk of BridgedReadingSessionData.__allocating_init(percentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for BridgedReadingSettingsData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedReadingSettingsData);
}

uint64_t dispatch thunk of BridgedReadingSettingsData.__allocating_init(scrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for BridgedRecoType()
{
  return &type metadata for BridgedRecoType;
}

uint64_t method lookup function for BridgedRemoteConfigNamespaceData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedRemoteConfigNamespaceData);
}

uint64_t dispatch thunk of BridgedRemoteConfigNamespaceData.__allocating_init(name:treatmentIDs:segmentIDs:segmentSetIDs:previousTreatmentIDs:previousSegmentIDs:previousSegmentSetIDs:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BridgedRemoteConfigNamespaceData.swiftType.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

ValueMetadata *type metadata accessor for BridgedScrollViewStatus()
{
  return &type metadata for BridgedScrollViewStatus;
}

ValueMetadata *type metadata accessor for BridgedSeriesType()
{
  return &type metadata for BridgedSeriesType;
}

uint64_t method lookup function for BridgedSessionListeningData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedSessionListeningData);
}

uint64_t dispatch thunk of BridgedSessionListeningData.__allocating_init(timeSpentListening:uniqueAudiobooksListened:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for BridgedSessionReadingData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedSessionReadingData);
}

uint64_t dispatch thunk of BridgedSessionReadingData.__allocating_init(timeSpentReading:uniqueBooksRead:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for BridgedSortType()
{
  return &type metadata for BridgedSortType;
}

ValueMetadata *type metadata accessor for BridgedTabType()
{
  return &type metadata for BridgedTabType;
}

ValueMetadata *type metadata accessor for BridgedTargetType()
{
  return &type metadata for BridgedTargetType;
}

uint64_t method lookup function for BridgedUpSellData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedUpSellData);
}

uint64_t dispatch thunk of BridgedUpSellData.__allocating_init(location:variant:variantVersion:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of BridgedUpSellData.swiftType.getter()
{
  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

ValueMetadata *type metadata accessor for BridgedUpSellLocation()
{
  return &type metadata for BridgedUpSellLocation;
}

ValueMetadata *type metadata accessor for BridgedUpSellVariant()
{
  return &type metadata for BridgedUpSellVariant;
}

ValueMetadata *type metadata accessor for BridgedViewAction()
{
  return &type metadata for BridgedViewAction;
}

uint64_t method lookup function for BridgedViewData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedViewData);
}

uint64_t dispatch thunk of BridgedViewData.__allocating_init(type:action:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for BridgedViewLocation()
{
  return &type metadata for BridgedViewLocation;
}

ValueMetadata *type metadata accessor for BridgedViewType()
{
  return &type metadata for BridgedViewType;
}

uint64_t method lookup function for BridgedWidgetData(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BridgedWidgetData);
}

uint64_t dispatch thunk of BridgedWidgetData.__allocating_init(widgetFamily:displayMode:isContentExposed:isStreakExposed:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for BridgedContentSubType.BridgedContentSubTypeEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE51F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedContentSubType.BridgedContentSubTypeEnum()
{
  return &type metadata for BridgedContentSubType.BridgedContentSubTypeEnum;
}

unint64_t sub_E5230()
{
  unint64_t result = qword_31BC68;
  if (!qword_31BC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BC68);
  }
  return result;
}

double sub_E52B8()
{
  qword_31BCB8 = 0;
  double result = 0.0;
  xmmword_31BC98 = 0u;
  unk_31BCA8 = 0u;
  return result;
}

uint64_t sub_E52D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_3157F0 != -1) {
    swift_once();
  }

  return sub_E54D0((uint64_t)&xmmword_31BC98, a1);
}

uint64_t EnvironmentValues._sizeProvider.getter()
{
  sub_E5388();

  return sub_27DB00();
}

unint64_t sub_E5388()
{
  unint64_t result = qword_31BCC0;
  if (!qword_31BCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCC0);
  }
  return result;
}

uint64_t sub_E53DC()
{
  return sub_27DB00();
}

uint64_t sub_E541C(uint64_t a1)
{
  sub_E54D0(a1, (uint64_t)v3);
  sub_E54D0((uint64_t)v3, (uint64_t)&v2);
  sub_E5388();
  sub_27DB10();
  return sub_E5538((uint64_t)v3);
}

uint64_t EnvironmentValues._sizeProvider.setter(uint64_t a1)
{
  sub_E54D0(a1, (uint64_t)v3);
  sub_E5388();
  sub_27DB10();
  return sub_E5538(a1);
}

uint64_t sub_E54D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E5538(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_316210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*EnvironmentValues._sizeProvider.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v3[16] = sub_E5388();
  sub_27DB00();
  return sub_E5610;
}

void sub_E5610(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_E54D0(*a1, v3);
    sub_E54D0(v3, (uint64_t)v2 + 80);
    sub_27DB10();
    sub_E5538(v3);
  }
  else
  {
    sub_E54D0(*a1, v3);
    sub_27DB10();
  }
  sub_E5538((uint64_t)v2);

  free(v2);
}

uint64_t View.appAnalyticsSizeProvider(_:)(uint64_t a1)
{
  swift_getKeyPath();
  sub_AE110(a1, (uint64_t)v3);
  sub_27DB60();
  swift_release();
  return sub_E5538((uint64_t)v3);
}

uint64_t sub_E5758()
{
  return sub_27DB00();
}

uint64_t ContentExposureData.updating(for:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[3];
  uint64_t v17 = *v3;
  uint64_t v18 = v3[2];
  uint64_t v8 = v3[5];
  uint64_t v9 = v3[7];
  uint64_t v19 = v3[4];
  uint64_t v20 = v3[6];
  uint64_t v16 = v3[8];
  uint64_t v25 = v3[9];
  int v21 = *((_DWORD *)v3 + 20);
  char v22 = *((unsigned char *)v3 + 84);
  int v23 = *((_DWORD *)v3 + 22);
  char v24 = *((unsigned char *)v3 + 92);
  uint64_t v10 = v3[13];
  uint64_t v29 = v3[12];
  char v27 = *((unsigned char *)v3 + 116);
  int v28 = *((_DWORD *)v3 + 28);
  char v26 = *((unsigned char *)v3 + 117);
  uint64_t v12 = a2[3];
  uint64_t v11 = a2[4];
  sub_5900(a2, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v12, v11);
  if (v13)
  {
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + 16) = v18;
    *(void *)(a3 + 24) = v7;
    *(void *)(a3 + 32) = v19;
    *(void *)(a3 + 40) = v8;
    *(void *)(a3 + 48) = v20;
    *(void *)(a3 + 56) = v9;
    *(void *)(a3 + 64) = v16;
    *(void *)(a3 + 72) = v25;
    *(_DWORD *)(a3 + 80) = v21;
    *(unsigned char *)(a3 + 84) = v22;
    *(_DWORD *)(a3 + 88) = v23;
    *(unsigned char *)(a3 + 92) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_27DF40();
    uint64_t v31 = v14;
    v32._countAndFlagsBits = 44;
    v32._object = (void *)0xE100000000000000;
    sub_27DE00(v32);
    v33._countAndFlagsBits = sub_27DF40();
    sub_27DE00(v33);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + 16) = v18;
    *(void *)(a3 + 24) = v7;
    *(void *)(a3 + 32) = v19;
    *(void *)(a3 + 40) = v8;
    *(void *)(a3 + 48) = v20;
    *(void *)(a3 + 56) = v9;
    *(void *)(a3 + 64) = v30;
    *(void *)(a3 + 72) = v31;
    *(_DWORD *)(a3 + 80) = v21;
    *(unsigned char *)(a3 + 84) = v22;
    *(_DWORD *)(a3 + 88) = v23;
    *(unsigned char *)(a3 + 92) = v24;
  }
  *(void *)(a3 + 96) = v29;
  *(void *)(a3 + 104) = v10;
  *(_DWORD *)(a3 + 112) = v28;
  *(unsigned char *)(a3 + 116) = v27;
  *(unsigned char *)(a3 + 117) = v26;
  return result;
}

uint64_t SectionData.updating(for:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v17 = *v3;
  int v18 = *((_DWORD *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t v7 = *((void *)v3 + 4);
  uint64_t v16 = *((void *)v3 + 3);
  uint64_t v8 = *((void *)v3 + 6);
  uint64_t v19 = *((void *)v3 + 1);
  uint64_t v20 = *((void *)v3 + 5);
  uint64_t v21 = *((void *)v3 + 7);
  uint64_t v22 = *((void *)v3 + 8);
  uint64_t v9 = *((void *)v3 + 10);
  uint64_t v26 = *((void *)v3 + 9);
  char v24 = v3[92];
  int v25 = *((_DWORD *)v3 + 22);
  uint64_t v10 = *((void *)v3 + 13);
  uint64_t v23 = *((void *)v3 + 12);
  uint64_t v12 = a2[3];
  uint64_t v11 = a2[4];
  sub_5900(a2, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v12, v11);
  if (v13)
  {
    *(unsigned char *)a3 = v17;
    *(_DWORD *)(a3 + 4) = v18;
    *(void *)(a3 + 8) = v19;
    *(void *)(a3 + 16) = v6;
    *(void *)(a3 + 24) = v16;
    *(void *)(a3 + 32) = v7;
    *(void *)(a3 + 40) = v20;
    *(void *)(a3 + 48) = v8;
    *(void *)(a3 + 56) = v21;
    *(void *)(a3 + 64) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_27DF40();
    uint64_t v28 = v14;
    v29._countAndFlagsBits = 44;
    v29._object = (void *)0xE100000000000000;
    sub_27DE00(v29);
    v30._countAndFlagsBits = sub_27DF40();
    sub_27DE00(v30);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)a3 = v17;
    *(_DWORD *)(a3 + 4) = v18;
    *(void *)(a3 + 8) = v19;
    *(void *)(a3 + 16) = v6;
    *(void *)(a3 + 24) = v27;
    *(void *)(a3 + 32) = v28;
    *(void *)(a3 + 40) = v20;
    *(void *)(a3 + 48) = v8;
    *(void *)(a3 + 56) = v21;
    *(void *)(a3 + 64) = v22;
  }
  *(void *)(a3 + 72) = v26;
  *(void *)(a3 + 80) = v9;
  *(_DWORD *)(a3 + 88) = v25;
  *(unsigned char *)(a3 + 92) = v24;
  *(void *)(a3 + 96) = v23;
  *(void *)(a3 + 104) = v10;
  return result;
}

uint64_t sub_E5C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E5D04(a1, a2, a3, (uint64_t (*)(void))sub_E5C2C, (uint64_t (*)(void))sub_E5C80);
}

unint64_t sub_E5C2C()
{
  unint64_t result = qword_31BCC8;
  if (!qword_31BCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCC8);
  }
  return result;
}

unint64_t sub_E5C80()
{
  unint64_t result = qword_31BCD0;
  if (!qword_31BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCD0);
  }
  return result;
}

uint64_t sub_E5CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E5D04(a1, a2, a3, (uint64_t (*)(void))sub_E5D40, (uint64_t (*)(void))sub_E5D94);
}

uint64_t sub_E5D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_E5D40()
{
  unint64_t result = qword_31BCD8;
  if (!qword_31BCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCD8);
  }
  return result;
}

unint64_t sub_E5D94()
{
  unint64_t result = qword_31BCE0;
  if (!qword_31BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCE0);
  }
  return result;
}

uint64_t dispatch thunk of SizeProviding.size(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SizeNeedingData.updating(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_E5E30()
{
  return swift_getWitnessTable();
}

unint64_t sub_E5EA0()
{
  unint64_t result = qword_31BCF0;
  if (!qword_31BCF0)
  {
    sub_82930(&qword_31BCE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BCF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SizeProviderKey()
{
  return &type metadata for SizeProviderKey;
}

uint64_t UserData.userExperience.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserData.userExperience.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t UserData.init(userStorefrontID:userID:userExperience:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

unint64_t sub_E5F54()
{
  uint64_t v1 = 0x444972657375;
  if (*v0 != 1) {
    uint64_t v1 = 0x6570784572657375;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_E5FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_E6ACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E5FE4(uint64_t a1)
{
  unint64_t v2 = sub_E6630();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E6020(uint64_t a1)
{
  unint64_t v2 = sub_E6630();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31BCF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v7;
  uint64_t v12 = v1[4];
  sub_5900(a1, a1[3]);
  sub_E6630();
  sub_27E440();
  char v19 = 0;
  uint64_t v8 = v15;
  sub_27E2F0();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v18 = 1;
    sub_27E2F0();
    uint64_t v16 = v9;
    char v17 = 2;
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319628);
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t UserData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31BD08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_E6630();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v24 = 0;
    uint64_t v9 = sub_27E220();
    uint64_t v12 = v11;
    uint64_t v20 = v9;
    char v23 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v18 = v13;
    sub_4E04(&qword_319620);
    char v22 = 2;
    sub_97C90(&qword_319650);
    uint64_t v19 = v15;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = v19;
    *a2 = v20;
    a2[1] = v12;
    a2[2] = v18;
    a2[3] = v17;
    a2[4] = v16;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_E653C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserData.init(from:)(a1, a2);
}

uint64_t sub_E6554(void *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8UserDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = (void *)a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = (void *)a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (char v9 = sub_27E370(), result = 0, (v9 & 1) != 0))
  {
    BOOL v11 = v2 == v5 && v4 == v6;
    if (v11 || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
    {
      if (v3)
      {
        if (v7 && (sub_80FC4(v3, v7) & 1) != 0) {
          return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_E6630()
{
  unint64_t result = qword_31BD00;
  if (!qword_31BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD00);
  }
  return result;
}

unint64_t sub_E6688()
{
  unint64_t result = qword_31BD10;
  if (!qword_31BD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD10);
  }
  return result;
}

unint64_t sub_E66E0()
{
  unint64_t result = qword_31BD18;
  if (!qword_31BD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD18);
  }
  return result;
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UserData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

unsigned char *storeEnumTagSinglePayload for UserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE698CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_E69C8()
{
  unint64_t result = qword_31BD20;
  if (!qword_31BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD20);
  }
  return result;
}

unint64_t sub_E6A20()
{
  unint64_t result = qword_31BD28;
  if (!qword_31BD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD28);
  }
  return result;
}

unint64_t sub_E6A78()
{
  unint64_t result = qword_31BD30;
  if (!qword_31BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD30);
  }
  return result;
}

uint64_t sub_E6ACC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFF30 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570784572657375 && a2 == 0xEE0065636E656972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::FrameName_optional __swiftcall FrameName.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F81C0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 16;
  if (v5 < 0x10) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t FrameName.rawValue.getter()
{
  unint64_t result = 0x6165526C61746F74;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6461655274736F6DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x64656873696E6966;
      break;
    case 7:
      unint64_t result = 0x6E6946736B6F6F62;
      break;
    case 8:
      unint64_t result = 0x6D6D755372616579;
      break;
    case 9:
      unint64_t result = 0x626967696C656E69;
      break;
    case 0xA:
    case 0xD:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xC:
      unint64_t result = 0x7472617453746567;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_E6EBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_319A4(*a1, *a2);
}

unint64_t sub_E6ECC()
{
  unint64_t result = qword_31BD38;
  if (!qword_31BD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD38);
  }
  return result;
}

Swift::Int sub_E6F20()
{
  return sub_27E420();
}

uint64_t sub_E6F88()
{
  FrameName.rawValue.getter();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_E6FEC()
{
  return sub_27E420();
}

BookAnalytics::FrameName_optional sub_E7050(Swift::String *a1)
{
  return FrameName.init(rawValue:)(*a1);
}

unint64_t sub_E705C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FrameName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_E7084()
{
  return sub_27DED0();
}

uint64_t sub_E70E4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for FrameName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE7200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FrameName()
{
  return &type metadata for FrameName;
}

unint64_t sub_E7238()
{
  unint64_t result = qword_31BD40;
  if (!qword_31BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD40);
  }
  return result;
}

BookAnalytics::WelcomeScreenType_optional __swiftcall WelcomeScreenType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8360;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t WelcomeScreenType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D6F636C6577;
      break;
    case 2:
      uint64_t result = 0x7265766F63736964;
      break;
    case 3:
      uint64_t result = 0x657061637365;
      break;
    case 4:
      uint64_t result = 2003792487;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_E7384(unsigned __int8 *a1, char *a2)
{
  return sub_303C4(*a1, *a2);
}

unint64_t sub_E7394()
{
  unint64_t result = qword_31BD48;
  if (!qword_31BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD48);
  }
  return result;
}

Swift::Int sub_E73E8()
{
  return sub_27E420();
}

uint64_t sub_E74D0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_E75A0()
{
  return sub_27E420();
}

BookAnalytics::WelcomeScreenType_optional sub_E7684(Swift::String *a1)
{
  return WelcomeScreenType.init(rawValue:)(*a1);
}

void sub_E7690(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x656D6F636C6577;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265766F63736964;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x657061637365;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 2003792487;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_E773C()
{
  return sub_27DED0();
}

uint64_t sub_E779C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for WelcomeScreenType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE78B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeScreenType()
{
  return &type metadata for WelcomeScreenType;
}

unint64_t sub_E78F0()
{
  unint64_t result = qword_31BD50;
  if (!qword_31BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD50);
  }
  return result;
}

uint64_t static SearchMethodData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_308DC(*a1, *a2);
}

uint64_t sub_E7950()
{
  return 0x654D686372616573;
}

uint64_t sub_E7970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x654D686372616573 && a2 == 0xEC000000646F6874)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_E7A20(uint64_t a1)
{
  unint64_t v2 = sub_E7BE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E7A5C(uint64_t a1)
{
  unint64_t v2 = sub_E7BE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchMethodData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31BD58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_E7BE0();
  sub_27E440();
  char v10 = v7;
  sub_E7C34();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_E7BE0()
{
  unint64_t result = qword_31BD60;
  if (!qword_31BD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD60);
  }
  return result;
}

unint64_t sub_E7C34()
{
  unint64_t result = qword_31BD68;
  if (!qword_31BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD68);
  }
  return result;
}

uint64_t SearchMethodData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31BD70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_E7BE0();
  sub_27E430();
  if (!v2)
  {
    sub_E7DF0();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_E7DF0()
{
  unint64_t result = qword_31BD78;
  if (!qword_31BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD78);
  }
  return result;
}

unint64_t sub_E7E48()
{
  unint64_t result = qword_31BD80;
  if (!qword_31BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD80);
  }
  return result;
}

unint64_t sub_E7EA0()
{
  unint64_t result = qword_31BD88;
  if (!qword_31BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD88);
  }
  return result;
}

uint64_t sub_E7EF4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SearchMethodData.init(from:)(a1, a2);
}

uint64_t sub_E7F0C(void *a1)
{
  return SearchMethodData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ListeningActionSourceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchMethodData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE8080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMethodData()
{
  return &type metadata for SearchMethodData;
}

unsigned char *storeEnumTagSinglePayload for SearchMethodData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xE8154);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMethodData.CodingKeys()
{
  return &type metadata for SearchMethodData.CodingKeys;
}

unint64_t sub_E8190()
{
  unint64_t result = qword_31BD90;
  if (!qword_31BD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD90);
  }
  return result;
}

unint64_t sub_E81E8()
{
  unint64_t result = qword_31BD98;
  if (!qword_31BD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BD98);
  }
  return result;
}

unint64_t sub_E8240()
{
  unint64_t result = qword_31BDA0;
  if (!qword_31BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BDA0);
  }
  return result;
}

uint64_t sub_E8294(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31BDA8, &enum case for SessionGroup.default(_:));
}

uint64_t static ContextualActionSheetExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3157F8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31BDA8, a1);
}

uint64_t sub_E82F4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31BDC0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ContextualActionSheetExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315800, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31BDC0, a1);
}

uint64_t ContextualActionSheetExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContextualActionSheetExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31BE48);
}

uint64_t ContextualActionSheetExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContextualActionSheetExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContextualActionSheetExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContextualActionSheetExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContextualActionSheetExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContextualActionSheetExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContextualActionSheetExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContextualActionSheetExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContextualActionSheetExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ContextualActionSheetExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ContextualActionSheetExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 208);
  long long v3 = *(_OWORD *)(v1 + 176);
  long long v19 = *(_OWORD *)(v1 + 192);
  long long v20 = v2;
  long long v4 = *(_OWORD *)(v1 + 208);
  long long v21 = *(_OWORD *)(v1 + 224);
  long long v5 = *(_OWORD *)(v1 + 144);
  long long v7 = *(_OWORD *)(v1 + 112);
  long long v15 = *(_OWORD *)(v1 + 128);
  long long v6 = v15;
  long long v16 = v5;
  long long v8 = *(_OWORD *)(v1 + 144);
  long long v9 = *(_OWORD *)(v1 + 176);
  long long v17 = *(_OWORD *)(v1 + 160);
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = *(_OWORD *)(v1 + 112);
  v14[0] = *(_OWORD *)(v1 + 96);
  long long v12 = v14[0];
  v14[1] = v11;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 224);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v3;
  uint64_t v22 = *(void *)(v1 + 240);
  *(void *)(a1 + 144) = *(void *)(v1 + 240);
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v7;
  return sub_35DC8((uint64_t)v14);
}

uint64_t ContextualActionSheetExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContextualActionSheetExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31BEE0);
}

uint64_t ContextualActionSheetExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContextualActionSheetExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7F0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContextualActionSheetExposureEvent.Model.init(contentData:linkData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  long long v10 = *(_OWORD *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  __int16 v13 = *(_WORD *)(a1 + 56);
  int v14 = *(_DWORD *)(a1 + 60);
  char v15 = *(unsigned char *)(a1 + 64);
  int v16 = *(_DWORD *)(a1 + 68);
  char v17 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v8;
  *(unsigned char *)(a5 + 16) = v9;
  *(_OWORD *)(a5 + 24) = v10;
  *(void *)(a5 + 40) = v11;
  *(void *)(a5 + 48) = v12;
  *(_WORD *)(a5 + 56) = v13;
  *(_DWORD *)(a5 + 60) = v14;
  *(unsigned char *)(a5 + 64) = v15;
  *(_DWORD *)(a5 + 68) = v16;
  *(unsigned char *)(a5 + 72) = v17;
  int v18 = *(_DWORD *)(a1 + 73);
  long long v19 = a2[6];
  long long v20 = a2[8];
  *(_OWORD *)(a5 + 208) = a2[7];
  *(_OWORD *)(a5 + 224) = v20;
  long long v21 = a2[2];
  long long v22 = a2[4];
  long long v23 = a2[5];
  *(_OWORD *)(a5 + 144) = a2[3];
  *(_OWORD *)(a5 + 160) = v22;
  long long v24 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 176) = v23;
  *(_OWORD *)(a5 + 192) = v19;
  long long v25 = *a2;
  long long v26 = a2[1];
  *(_OWORD *)(a5 + 80) = v24;
  *(_OWORD *)(a5 + 96) = v25;
  LOBYTE(v8) = *(unsigned char *)(a1 + 77);
  *(_DWORD *)(a5 + 73) = v18;
  *(unsigned char *)(a5 + 77) = v8;
  *(void *)(a5 + 240) = *((void *)a2 + 18);
  *(_OWORD *)(a5 + 112) = v26;
  *(_OWORD *)(a5 + 128) = v21;
  uint64_t v27 = type metadata accessor for ContextualActionSheetExposureEvent.Model(0);
  uint64_t v28 = a5 + *(int *)(v27 + 24);
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a3, v29);
  uint64_t v30 = a5 + *(int *)(v27 + 28);
  uint64_t v31 = sub_27D7F0();
  Swift::String v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);

  return v32(v30, a4, v31);
}

uint64_t sub_E8B90()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 2:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x4464656D6974;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_E8C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_EB8B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E8C4C(uint64_t a1)
{
  unint64_t v2 = sub_E9004();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E8C88(uint64_t a1)
{
  unint64_t v2 = sub_E9004();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContextualActionSheetExposureEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_31BDD8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_E9004();
  uint64_t v8 = v4;
  sub_27E440();
  uint64_t v9 = v2[1];
  char v10 = *((unsigned char *)v2 + 16);
  long long v11 = *(_OWORD *)(v2 + 3);
  uint64_t v12 = v2[5];
  uint64_t v13 = v2[6];
  __int16 v14 = *((_WORD *)v2 + 28);
  int v15 = *((_DWORD *)v2 + 15);
  char v16 = *((unsigned char *)v2 + 64);
  int v17 = *((_DWORD *)v2 + 17);
  char v18 = *((unsigned char *)v2 + 72);
  char v19 = *((unsigned char *)v2 + 77);
  uint64_t v38 = *v2;
  uint64_t v39 = v9;
  char v40 = v10;
  long long v41 = v11;
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  __int16 v44 = v14;
  int v45 = v15;
  char v46 = v16;
  int v47 = v17;
  char v48 = v18;
  int v49 = *(_DWORD *)((char *)v2 + 73);
  char v50 = v19;
  long long v51 = *((_OWORD *)v2 + 5);
  char v37 = 0;
  sub_1A1D4();
  uint64_t v20 = v52;
  sub_27E330();
  if (!v20)
  {
    long long v21 = *((_OWORD *)v2 + 13);
    long long v33 = *((_OWORD *)v2 + 12);
    long long v34 = v21;
    long long v35 = *((_OWORD *)v2 + 14);
    uint64_t v36 = v2[30];
    long long v22 = *((_OWORD *)v2 + 9);
    long long v29 = *((_OWORD *)v2 + 8);
    long long v30 = v22;
    long long v23 = *((_OWORD *)v2 + 11);
    long long v31 = *((_OWORD *)v2 + 10);
    long long v32 = v23;
    long long v24 = *((_OWORD *)v2 + 7);
    long long v27 = *((_OWORD *)v2 + 6);
    long long v28 = v24;
    v26[15] = 1;
    sub_1FF00();
    sub_27E330();
    type metadata accessor for ContextualActionSheetExposureEvent.Model(0);
    LOBYTE(v27) = 2;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    uint64_t v52 = v4;
    sub_27E330();
    LOBYTE(v27) = 3;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    uint64_t v8 = v52;
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v8);
}

unint64_t sub_E9004()
{
  unint64_t result = qword_31BDE0;
  if (!qword_31BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BDE0);
  }
  return result;
}

uint64_t ContextualActionSheetExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v41 = sub_27D7F0();
  uint64_t v37 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_4E04(&qword_31BDE8);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContextualActionSheetExposureEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  __int16 v44 = a1;
  sub_5900(a1, v13);
  sub_E9004();
  uint64_t v43 = v9;
  uint64_t v14 = v56;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v36 = v7;
  uint64_t v15 = v40;
  uint64_t v16 = v41;
  uint64_t v56 = v10;
  char v55 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v17 = *((void *)&v46 + 1);
  char v18 = v47[0];
  long long v19 = *(_OWORD *)&v47[8];
  uint64_t v20 = *(void *)&v47[24];
  uint64_t v21 = v48;
  __int16 v22 = WORD4(v48);
  int v23 = HIDWORD(v48);
  char v24 = v49;
  int v25 = DWORD1(v49);
  char v26 = BYTE8(v49);
  char v27 = BYTE13(v49);
  uint64_t v28 = (uint64_t)v12;
  *(void *)uint64_t v12 = v46;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = *(_DWORD *)((char *)&v49 + 9);
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v50;
  char v55 = 1;
  sub_20940();
  sub_27E260();
  v35[1] = v5;
  long long v29 = v52;
  *((_OWORD *)v12 + 12) = v51;
  *((_OWORD *)v12 + 13) = v29;
  *((_OWORD *)v12 + 14) = v53;
  *((void *)v12 + 30) = v54;
  long long v30 = v48;
  *((_OWORD *)v12 + 8) = *(_OWORD *)&v47[16];
  *((_OWORD *)v12 + 9) = v30;
  long long v31 = v50;
  *((_OWORD *)v12 + 10) = v49;
  *((_OWORD *)v12 + 11) = v31;
  long long v32 = *(_OWORD *)v47;
  *((_OWORD *)v12 + 6) = v46;
  *((_OWORD *)v12 + 7) = v32;
  char v45 = 2;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v33 = v36;
  v35[0] = 0;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v28 + *(int *)(v56 + 24), v33, v5);
  char v45 = 3;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v28 + *(int *)(v56 + 28), v4, v16);
  sub_E96FC(v28, v38);
  sub_5E94((uint64_t)v44);
  return sub_E9760(v28);
}

uint64_t sub_E96FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextualActionSheetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E9760(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextualActionSheetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E97BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContextualActionSheetExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_E97D4(void *a1)
{
  return ContextualActionSheetExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_E97EC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3157F8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31BDA8, a1);
}

uint64_t sub_E9824@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315800, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31BDC0, a1);
}

uint64_t sub_E985C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextualActionSheetExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ContextualActionSheetExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EA23C);
}

uint64_t sub_EA23C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ContextualActionSheetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EA3F8);
}

uint64_t sub_EA3F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_EA5AC()
{
  sub_EA75C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_EA75C(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F)
      {
        sub_6E6C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_EA75C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v12;
    uint64_t v13 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v13;
    uint64_t v14 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v14;
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    uint64_t v15 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v15;
    uint64_t v16 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v16;
    uint64_t v17 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v17;
    uint64_t v18 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v18;
    uint64_t v19 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v19;
    uint64_t v20 = a2[30];
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v30 = (uint64_t)a2 + v21;
    uint64_t v31 = a1 + v21;
    *(void *)(a1 + 232) = a2[29];
    *(void *)(a1 + 240) = v20;
    uint64_t v22 = sub_27D7C0();
    long long v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v31, v30, v22);
    uint64_t v23 = *(int *)(a3 + 28);
    char v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return v4;
}

uint64_t destroy for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v29 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v29;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  uint64_t v17 = *(void *)(a2 + 240);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v26 = a2 + v18;
  uint64_t v27 = a1 + v18;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  uint64_t v19 = sub_27D7C0();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v27, v26, v19);
  uint64_t v20 = *(int *)(a3 + 28);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t initializeWithTake for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  long long v9 = *(_OWORD *)(a2 + 224);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v9;
  long long v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v11;
  long long v13 = *(_OWORD *)(a2 + 112);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 128) = v12;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 28);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EB364);
}

uint64_t sub_EB364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContextualActionSheetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EB4A4);
}

uint64_t sub_EB4A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_EB5D0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContextualActionSheetExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xEB778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextualActionSheetExposureEvent.Model.CodingKeys()
{
  return &type metadata for ContextualActionSheetExposureEvent.Model.CodingKeys;
}

unint64_t sub_EB7B4()
{
  unint64_t result = qword_31BF20;
  if (!qword_31BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BF20);
  }
  return result;
}

unint64_t sub_EB80C()
{
  unint64_t result = qword_31BF28;
  if (!qword_31BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BF28);
  }
  return result;
}

unint64_t sub_EB864()
{
  unint64_t result = qword_31BF30;
  if (!qword_31BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BF30);
  }
  return result;
}

uint64_t sub_EB8B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_EBAA4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31BF38, &enum case for SessionGroup.default(_:));
}

uint64_t static CollectionRemoveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315808, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31BF38, a1);
}

uint64_t sub_EBB04(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31BF50, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CollectionRemoveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315810, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31BF50, a1);
}

uint64_t CollectionRemoveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionRemoveEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionRemoveEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31BFD8);
}

uint64_t CollectionRemoveEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionRemoveEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionRemoveEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionRemoveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CollectionRemoveEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t CollectionRemoveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionRemoveEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionRemoveEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31C068);
}

uint64_t CollectionRemoveEvent.Model.init(singleCollectionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 16);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v4;
  *(_DWORD *)(a3 + 16) = v5;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for CollectionRemoveEvent.Model(0) + 20);
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_EBEB0()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_EBEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_ED60C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_EBF1C(uint64_t a1)
{
  unint64_t v2 = sub_EC158();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EBF58(uint64_t a1)
{
  unint64_t v2 = sub_EC158();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionRemoveEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31BF68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_EC158();
  sub_27E440();
  uint64_t v9 = v3[1];
  int v10 = *((_DWORD *)v3 + 4);
  uint64_t v13 = *v3;
  uint64_t v14 = v9;
  int v15 = v10;
  v12[7] = 0;
  sub_18340();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for CollectionRemoveEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_EC158()
{
  unint64_t result = qword_31BF70;
  if (!qword_31BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31BF70);
  }
  return result;
}

uint64_t CollectionRemoveEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_27D7C0();
  uint64_t v20 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4E04(&qword_31BF78);
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CollectionRemoveEvent.Model(0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_EC158();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v19 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v22;
  uint64_t v12 = v23;
  char v28 = 0;
  sub_182E8();
  uint64_t v14 = v24;
  sub_27E260();
  uint64_t v15 = v26;
  int v16 = v27;
  *(void *)uint64_t v11 = v25;
  *(void *)(v11 + 8) = v15;
  *(_DWORD *)(v11 + 16) = v16;
  LOBYTE(v25) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v11 + *(int *)(v19 + 20), v5, v12);
  sub_EC4C0(v11, v21);
  sub_5E94((uint64_t)a1);
  return sub_EC524(v11);
}

uint64_t sub_EC4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionRemoveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EC524(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionRemoveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_EC580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionRemoveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_EC598(void *a1)
{
  return CollectionRemoveEvent.Model.encode(to:)(a1);
}

uint64_t sub_EC5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315808, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31BF38, a1);
}

uint64_t sub_EC5E8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315810, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31BF50, a1);
}

uint64_t sub_EC620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionRemoveEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3194A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for CollectionRemoveEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ECBC0);
}

uint64_t sub_ECBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionRemoveEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ECCD4);
}

uint64_t sub_ECCD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3194A0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_ECDE0()
{
  sub_95EDC();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CollectionRemoveEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ED1FC);
}

uint64_t sub_ED1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionRemoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ED2C0);
}

uint64_t sub_ED2C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_ED368()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionRemoveEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xED4CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRemoveEvent.Model.CodingKeys()
{
  return &type metadata for CollectionRemoveEvent.Model.CodingKeys;
}

unint64_t sub_ED508()
{
  unint64_t result = qword_31C0A0;
  if (!qword_31C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0A0);
  }
  return result;
}

unint64_t sub_ED560()
{
  unint64_t result = qword_31C0A8;
  if (!qword_31C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0A8);
  }
  return result;
}

unint64_t sub_ED5B8()
{
  unint64_t result = qword_31C0B0;
  if (!qword_31C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0B0);
  }
  return result;
}

uint64_t sub_ED60C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE9B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t ScrubData.startPosition.getter()
{
  return *v0;
}

uint64_t ScrubData.startPosition.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double BooksGoalsData.lastAudioBookCompletedDate.getter()
{
  return *(double *)(v0 + 24);
}

void BooksGoalsData.lastAudioBookCompletedDate.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

BookAnalytics::BooksGoalsData __swiftcall BooksGoalsData.init(booksCompletedCnt:lastBookCompletedDate:audioBooksCompletedCnt:lastAudioBookCompletedDate:)(Swift::Int32 booksCompletedCnt, Swift::Double lastBookCompletedDate, Swift::Int32 audioBooksCompletedCnt, Swift::Double lastAudioBookCompletedDate)
{
  *(_DWORD *)uint64_t v4 = booksCompletedCnt;
  *(Swift::Double *)(v4 + 8) = lastBookCompletedDate;
  *(_DWORD *)(v4 + 16) = audioBooksCompletedCnt;
  *(Swift::Double *)(v4 + 24) = lastAudioBookCompletedDate;
  result.lastAudioBookCompletedDate = lastAudioBookCompletedDate;
  result.lastBookCompletedDate = lastBookCompletedDate;
  result.audioBooksCompletedCnt = audioBooksCompletedCnt;
  result.booksCompletedCnt = booksCompletedCnt;
  return result;
}

unint64_t sub_ED740(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_ED7C8()
{
  return sub_ED740(*v0);
}

uint64_t sub_ED7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_EDF78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_ED7F8(uint64_t a1)
{
  unint64_t v2 = sub_EDCB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_ED834(uint64_t a1)
{
  unint64_t v2 = sub_EDCB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BooksGoalsData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31C0B8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_EDCB4();
  sub_27E440();
  char v14 = 0;
  sub_27E340();
  if (!v2)
  {
    char v13 = 1;
    sub_27E310();
    char v12 = 2;
    sub_27E340();
    char v11 = 3;
    sub_27E310();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BooksGoalsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31C0C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_EDCB4();
  sub_27E430();
  if (!v2)
  {
    char v20 = 0;
    int v9 = sub_27E270();
    char v19 = 1;
    sub_27E240();
    uint64_t v11 = v10;
    char v18 = 2;
    int v13 = sub_27E270();
    char v17 = 3;
    sub_27E240();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v15;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_EDC40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BooksGoalsData.init(from:)(a1, a2);
}

uint64_t sub_EDC58(void *a1)
{
  return BooksGoalsData.encode(to:)(a1);
}

BOOL _s13BookAnalytics14BooksGoalsDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

unint64_t sub_EDCB4()
{
  unint64_t result = qword_31C0C0;
  if (!qword_31C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BooksGoalsData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BooksGoalsData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BooksGoalsData()
{
  return &type metadata for BooksGoalsData;
}

unsigned char *storeEnumTagSinglePayload for BooksGoalsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xEDE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksGoalsData.CodingKeys()
{
  return &type metadata for BooksGoalsData.CodingKeys;
}

unint64_t sub_EDE74()
{
  unint64_t result = qword_31C0D0;
  if (!qword_31C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0D0);
  }
  return result;
}

unint64_t sub_EDECC()
{
  unint64_t result = qword_31C0D8;
  if (!qword_31C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0D8);
  }
  return result;
}

unint64_t sub_EDF24()
{
  unint64_t result = qword_31C0E0;
  if (!qword_31C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C0E0);
  }
  return result;
}

uint64_t sub_EDF78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AFF50 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002AFF70 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AFF90 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AFFB0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_EE114(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31C0E8, &enum case for SessionGroup.default(_:));
}

uint64_t static AudioPlaybackSpeedChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315818, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C0E8, a1);
}

uint64_t sub_EE174(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31C100, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AudioPlaybackSpeedChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315820, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C100, a1);
}

uint64_t AudioPlaybackSpeedChangeEvent.audioPlaybackSpeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C118);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioPlaybackSpeedChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31C1A0);
}

uint64_t AudioPlaybackSpeedChangeEvent.audioPlaybackSpeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C118);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.audioPlaybackSpeedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.listeningSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.listeningSessionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.listeningActionSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.listeningActionSourceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.listeningActionSourceData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.bitRateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.bitRateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.bitRateData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.errorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioPlaybackSpeedChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioPlaybackSpeedChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AudioPlaybackSpeedChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioPlaybackSpeedChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  uint64_t v16 = enum case for EventProperty.optional<A>(_:);
  uint64_t v17 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_315DE0);
  char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v2, v19);
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 108);
  int v3 = *(_DWORD *)(v1 + 112);
  char v4 = *(unsigned char *)(v1 + 116);
  int v5 = *(_DWORD *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v6 = *(void *)(v1 + 136);
  char v8 = *(unsigned char *)(v1 + 144);
  char v9 = *(unsigned char *)(v1 + 145);
  int v10 = *(_DWORD *)(v1 + 148);
  char v11 = *(unsigned char *)(v1 + 152);
  char v12 = *(unsigned char *)(v1 + 153);
  int v13 = *(_DWORD *)(v1 + 156);
  char v14 = *(unsigned char *)(v1 + 160);
  char v15 = *(unsigned char *)(v1 + 161);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 104);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 41) = v9;
  *(_DWORD *)(a1 + 44) = v10;
  *(unsigned char *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 49) = v12;
  *(_DWORD *)(a1 + 52) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 57) = v15;
  return swift_bridgeObjectRetain();
}

void AudioPlaybackSpeedChangeEvent.Model.listeningActionSourceData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 162);
}

void AudioPlaybackSpeedChangeEvent.Model.bitRateData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 168);
  int v3 = *(_DWORD *)(v1 + 172);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 164);
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.errorData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[23];
  uint64_t v3 = v1[24];
  uint64_t v4 = v1[25];
  *a1 = v1[22];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0) + 44);
  uint64_t v4 = sub_27D7C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31C250);
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.init(contentData:audioPlaybackSpeedData:listeningSessionData:listeningActionSourceData:bitRateData:errorData:seriesData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X4>, long long *a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11 = *(void *)(a1 + 8);
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v11;
  *(unsigned char *)(a9 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 48);
  *(void *)(a9 + 40) = *(void *)(a1 + 40);
  *(void *)(a9 + 48) = v12;
  long long v13 = *(_OWORD *)(a1 + 24);
  *(_WORD *)(a9 + 56) = *(_WORD *)(a1 + 56);
  *(_DWORD *)(a9 + 60) = *(_DWORD *)(a1 + 60);
  *(unsigned char *)(a9 + 64) = *(unsigned char *)(a1 + 64);
  *(_DWORD *)(a9 + 68) = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  *(_OWORD *)(a9 + 24) = v13;
  *(unsigned char *)(a9 + 72) = v14;
  *(_DWORD *)(a9 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a9 + 77) = *(unsigned char *)(a1 + 77);
  long long v15 = *(_OWORD *)(a1 + 80);
  uint64_t v16 = *a2;
  *(_DWORD *)(a9 + 104) = *(_DWORD *)a3;
  *(unsigned char *)(a9 + 108) = *(unsigned char *)(a3 + 4);
  *(_DWORD *)(a9 + 112) = *(_DWORD *)(a3 + 8);
  *(unsigned char *)(a9 + 116) = *(unsigned char *)(a3 + 12);
  *(unsigned char *)(a9 + 144) = *(unsigned char *)(a3 + 40);
  *(unsigned char *)(a9 + 145) = *(unsigned char *)(a3 + 41);
  *(_DWORD *)(a9 + 148) = *(_DWORD *)(a3 + 44);
  *(unsigned char *)(a9 + 152) = *(unsigned char *)(a3 + 48);
  *(unsigned char *)(a9 + 153) = *(unsigned char *)(a3 + 49);
  *(_DWORD *)(a9 + 156) = *(_DWORD *)(a3 + 52);
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(a3 + 56);
  int v17 = *(_DWORD *)(a3 + 16);
  long long v18 = *(_OWORD *)(a3 + 24);
  *(unsigned char *)(a9 + 161) = *(unsigned char *)(a3 + 57);
  *(_WORD *)(a9 + 162) = *a4;
  *(_DWORD *)(a9 + 164) = *(_DWORD *)a5;
  *(unsigned char *)(a9 + 168) = *(unsigned char *)(a5 + 4);
  long long v19 = *a6;
  *(_DWORD *)(a9 + 172) = *(_DWORD *)(a5 + 8);
  uint64_t v20 = *((void *)a6 + 3);
  *(void *)(a9 + 192) = *((void *)a6 + 2);
  *(void *)(a9 + 200) = v20;
  long long v21 = *a7;
  long long v22 = a7[1];
  long long v23 = a7[2];
  *(_OWORD *)(a9 + 80) = v15;
  *(void *)(a9 + 96) = v16;
  *(_DWORD *)(a9 + 120) = v17;
  *(_OWORD *)(a9 + 128) = v18;
  *(_OWORD *)(a9 + 176) = v19;
  *(_OWORD *)(a9 + 208) = v21;
  *(_OWORD *)(a9 + 224) = v22;
  *(_OWORD *)(a9 + 240) = v23;
  uint64_t v24 = a9 + *(int *)(type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0) + 44);
  uint64_t v25 = sub_27D7C0();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);

  return v26(v24, a8, v25);
}

uint64_t sub_EF058(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000016;
      break;
    case 2:
      uint64_t result = 0xD000000000000014;
      break;
    case 3:
      uint64_t result = 0xD000000000000019;
      break;
    case 4:
      uint64_t result = 0x4465746152746962;
      break;
    case 5:
      uint64_t v3 = 0x44726F727265;
      goto LABEL_10;
    case 6:
      uint64_t result = 0x6144736569726573;
      break;
    case 7:
      uint64_t v3 = 0x44746E657665;
LABEL_10:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_EF16C()
{
  return sub_EF058(*v0);
}

uint64_t sub_EF174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F2B14(a1, a2);
  *a3 = result;
  return result;
}

void sub_EF19C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_EF1A8(uint64_t a1)
{
  unint64_t v2 = sub_EF63C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_EF1E4(uint64_t a1)
{
  unint64_t v2 = sub_EF63C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31C120);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_EF63C();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v41 = *(void *)v4;
  *((void *)&v41 + 1) = v10;
  v42[0] = v11;
  *(_OWORD *)&v42[8] = v12;
  *(void *)&v42[24] = v13;
  uint64_t v43 = v14;
  __int16 v44 = v15;
  int v45 = v16;
  char v46 = v17;
  int v47 = v18;
  char v48 = v19;
  int v49 = *(_DWORD *)(v4 + 73);
  char v50 = v20;
  long long v51 = *(_OWORD *)(v4 + 80);
  char v40 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    *(void *)&long long v41 = *(void *)(v4 + 96);
    char v40 = 1;
    sub_EF690();
    sub_27E330();
    char v21 = *(unsigned char *)(v4 + 108);
    int v22 = *(_DWORD *)(v4 + 112);
    char v23 = *(unsigned char *)(v4 + 116);
    int v24 = *(_DWORD *)(v4 + 120);
    char v25 = *(unsigned char *)(v4 + 144);
    char v26 = *(unsigned char *)(v4 + 145);
    int v27 = *(_DWORD *)(v4 + 148);
    char v28 = *(unsigned char *)(v4 + 152);
    char v29 = *(unsigned char *)(v4 + 153);
    int v30 = *(_DWORD *)(v4 + 156);
    char v31 = *(unsigned char *)(v4 + 160);
    char v32 = *(unsigned char *)(v4 + 161);
    LODWORD(v41) = *(_DWORD *)(v4 + 104);
    BYTE4(v41) = v21;
    DWORD2(v41) = v22;
    BYTE12(v41) = v23;
    *(_DWORD *)uint64_t v42 = v24;
    *(_OWORD *)&v42[8] = *(_OWORD *)(v4 + 128);
    v42[24] = v25;
    v42[25] = v26;
    *(_DWORD *)&v42[28] = v27;
    LOBYTE(v43) = v28;
    BYTE1(v43) = v29;
    HIDWORD(v43) = v30;
    LOBYTE(v44) = v31;
    HIBYTE(v44) = v32;
    char v40 = 2;
    sub_57500();
    sub_27E330();
    LOWORD(v41) = *(_WORD *)(v4 + 162);
    char v40 = 3;
    sub_1A27C();
    sub_27E330();
    char v33 = *(unsigned char *)(v4 + 168);
    int v34 = *(_DWORD *)(v4 + 172);
    LODWORD(v41) = *(_DWORD *)(v4 + 164);
    BYTE4(v41) = v33;
    DWORD2(v41) = v34;
    char v40 = 4;
    sub_1A2D0();
    sub_27E330();
    uint64_t v35 = *(void *)(v4 + 192);
    uint64_t v36 = *(void *)(v4 + 200);
    long long v41 = *(_OWORD *)(v4 + 176);
    *(void *)uint64_t v42 = v35;
    *(void *)&v42[8] = v36;
    char v40 = 5;
    sub_1A324();
    sub_27E330();
    long long v37 = *(_OWORD *)(v4 + 224);
    long long v41 = *(_OWORD *)(v4 + 208);
    *(_OWORD *)uint64_t v42 = v37;
    *(_OWORD *)&v42[16] = *(_OWORD *)(v4 + 240);
    char v40 = 6;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0);
    LOBYTE(v41) = 7;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_EF63C()
{
  unint64_t result = qword_31C128;
  if (!qword_31C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C128);
  }
  return result;
}

unint64_t sub_EF690()
{
  unint64_t result = qword_31C130;
  if (!qword_31C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C130);
  }
  return result;
}

uint64_t AudioPlaybackSpeedChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v48 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_4E04(&qword_31C138);
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  long long v52 = a1;
  sub_5900(a1, v11);
  sub_EF63C();
  long long v12 = v53;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)v52);
  }
  uint64_t v47 = v8;
  long long v53 = v5;
  uint64_t v13 = (uint64_t)v10;
  uint64_t v15 = v49;
  uint64_t v14 = v50;
  char v65 = 0;
  sub_1A98C();
  uint64_t v16 = v51;
  sub_27E260();
  uint64_t v17 = *((void *)&v54 + 1);
  char v18 = v55[0];
  long long v19 = *(_OWORD *)&v55[8];
  uint64_t v20 = *(void *)&v55[24];
  uint64_t v21 = v56;
  __int16 v22 = v57;
  int v23 = v58;
  char v24 = v59;
  int v25 = v60;
  char v26 = v61;
  char v27 = v63;
  *(void *)uint64_t v13 = v54;
  *(void *)(v13 + 8) = v17;
  *(unsigned char *)(v13 + 16) = v18;
  *(_OWORD *)(v13 + 24) = v19;
  *(void *)(v13 + 40) = v20;
  *(void *)(v13 + 48) = v21;
  *(_WORD *)(v13 + 56) = v22;
  *(_DWORD *)(v13 + 60) = v23;
  *(unsigned char *)(v13 + 64) = v24;
  *(_DWORD *)(v13 + 68) = v25;
  *(unsigned char *)(v13 + 72) = v26;
  *(_DWORD *)(v13 + 73) = v62;
  *(unsigned char *)(v13 + 77) = v27;
  *(_OWORD *)(v13 + 80) = v64;
  char v65 = 1;
  sub_EFD60();
  sub_27E260();
  *(void *)(v13 + 96) = v54;
  char v65 = 2;
  sub_57F90();
  sub_27E260();
  char v28 = BYTE4(v54);
  int v29 = DWORD2(v54);
  char v30 = BYTE12(v54);
  int v31 = *(_DWORD *)v55;
  char v32 = v55[24];
  char v33 = v55[25];
  int v34 = *(_DWORD *)&v55[28];
  char v35 = v56;
  char v36 = BYTE1(v56);
  int v37 = HIDWORD(v56);
  char v38 = v57;
  char v39 = HIBYTE(v57);
  *(_DWORD *)(v13 + 104) = v54;
  *(unsigned char *)(v13 + 108) = v28;
  *(_DWORD *)(v13 + 112) = v29;
  *(unsigned char *)(v13 + 116) = v30;
  *(_DWORD *)(v13 + 120) = v31;
  *(_OWORD *)(v13 + 128) = *(_OWORD *)&v55[8];
  *(unsigned char *)(v13 + 144) = v32;
  *(unsigned char *)(v13 + 145) = v33;
  *(_DWORD *)(v13 + 148) = v34;
  *(unsigned char *)(v13 + 152) = v35;
  *(unsigned char *)(v13 + 153) = v36;
  *(_DWORD *)(v13 + 156) = v37;
  *(unsigned char *)(v13 + 160) = v38;
  *(unsigned char *)(v13 + 161) = v39;
  char v65 = 3;
  sub_1AA34();
  sub_27E260();
  *(_WORD *)(v13 + 162) = v54;
  char v65 = 4;
  sub_1AA88();
  sub_27E260();
  char v40 = BYTE4(v54);
  int v41 = DWORD2(v54);
  *(_DWORD *)(v13 + 164) = v54;
  *(unsigned char *)(v13 + 168) = v40;
  *(_DWORD *)(v13 + 172) = v41;
  char v65 = 5;
  sub_1AADC();
  sub_27E260();
  long long v42 = *(_OWORD *)v55;
  *(_OWORD *)(v13 + 176) = v54;
  *(_OWORD *)(v13 + 192) = v42;
  char v65 = 6;
  sub_11A3C();
  sub_27E1F0();
  long long v43 = *(_OWORD *)v55;
  *(_OWORD *)(v13 + 208) = v54;
  *(_OWORD *)(v13 + 224) = v43;
  *(_OWORD *)(v13 + 240) = *(_OWORD *)&v55[16];
  LOBYTE(v54) = 7;
  sub_1AB30(&qword_315E28);
  __int16 v44 = v53;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v13 + *(int *)(v47 + 44), v44, v3);
  sub_EFDB4(v13, v14);
  sub_5E94((uint64_t)v52);
  return sub_EFE18(v13);
}

unint64_t sub_EFD60()
{
  unint64_t result = qword_31C140;
  if (!qword_31C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C140);
  }
  return result;
}

uint64_t sub_EFDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EFE18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioPlaybackSpeedChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_EFE74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioPlaybackSpeedChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_EFE8C(void *a1)
{
  return AudioPlaybackSpeedChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_EFEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315818, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C0E8, a1);
}

uint64_t sub_EFEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315820, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C100, a1);
}

uint64_t sub_EFF14@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  uint64_t v17 = enum case for EventProperty.optional<A>(_:);
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioPlaybackSpeedChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31C118);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_317DF8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316780);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316788);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316790);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    int v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    int v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for AudioPlaybackSpeedChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F1128);
}

uint64_t sub_F1128(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31C118);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  uint64_t v14 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  uint64_t v15 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  uint64_t v16 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  uint64_t v17 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  uint64_t v18 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for AudioPlaybackSpeedChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F1424);
}

uint64_t sub_F1424(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31C118);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  uint64_t v16 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  uint64_t v17 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  uint64_t v18 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  uint64_t v19 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  uint64_t v20 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_F1718()
{
  sub_F1AD0(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_F1AD0(319, (unint64_t *)&unk_31C1B0, (void (*)(void))sub_EFD60, (void (*)(void))sub_EF690);
    if (v1 <= 0x3F)
    {
      sub_F1AD0(319, &qword_317EC0, (void (*)(void))sub_57F90, (void (*)(void))sub_57500);
      if (v2 <= 0x3F)
      {
        sub_F1AD0(319, &qword_316878, (void (*)(void))sub_1AA34, (void (*)(void))sub_1A27C);
        if (v3 <= 0x3F)
        {
          sub_F1AD0(319, &qword_316880, (void (*)(void))sub_1AA88, (void (*)(void))sub_1A2D0);
          if (v4 <= 0x3F)
          {
            sub_F1AD0(319, (unint64_t *)&unk_316888, (void (*)(void))sub_1AADC, (void (*)(void))sub_1A324);
            if (v5 <= 0x3F)
            {
              sub_F1AD0(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
              if (v6 <= 0x3F)
              {
                sub_6DA0();
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_F1AD0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = a2[12];
    int v12 = *((_DWORD *)a2 + 26);
    *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
    *(_DWORD *)(a1 + 104) = v12;
    *(unsigned char *)(a1 + 116) = *((unsigned char *)a2 + 116);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    uint64_t v13 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v13;
    *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
    *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(unsigned char *)(a1 + 153) = *((unsigned char *)a2 + 153);
    int v14 = *((_DWORD *)a2 + 40);
    *(_DWORD *)(a1 + 156) = *((_DWORD *)a2 + 39);
    *(_DWORD *)(a1 + 160) = v14;
    *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
    *(void *)(a1 + 164) = *(uint64_t *)((char *)a2 + 164);
    uint64_t v15 = a2[23];
    *(void *)(a1 + 176) = a2[22];
    *(void *)(a1 + 184) = v15;
    uint64_t v16 = a2[25];
    *(void *)(a1 + 192) = a2[24];
    *(void *)(a1 + 200) = v16;
    uint64_t v17 = a2[31];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v18 = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 224) = v18;
      *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    }
    else
    {
      *(void *)(a1 + 208) = a2[26];
      *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
      *(void *)(a1 + 224) = a2[28];
      *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
      *(_WORD *)(a1 + 233) = *(_WORD *)((char *)a2 + 233);
      *(void *)(a1 + 240) = a2[30];
      *(void *)(a1 + 248) = v17;
      swift_bridgeObjectRetain();
    }
    uint64_t v20 = *(int *)(a3 + 44);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 248) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  int v11 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  int v13 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 160) = v13;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  uint64_t v16 = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    long long v17 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v17;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  }
  else
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v16;
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = *(int *)(a3 + 44);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  int v8 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v8;
  int v9 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v9;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  int v10 = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v10;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  int v11 = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = v11;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  int v12 = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = v12;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v13 = (long long *)(a1 + 208);
  uint64_t v14 = (long long *)(a2 + 208);
  uint64_t v15 = *(void *)(a2 + 248);
  if (*(void *)(a1 + 248) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v17;
      *int v13 = v16;
    }
    else
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
      *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1CDD8(a1 + 208);
    long long v19 = *(_OWORD *)(a2 + 224);
    long long v18 = *(_OWORD *)(a2 + 240);
    *int v13 = *v14;
    *(_OWORD *)(a1 + 224) = v19;
    *(_OWORD *)(a1 + 240) = v18;
  }
  else
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
    *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(int *)(a3 + 44);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t initializeWithTake for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 104);
  long long v8 = *(_OWORD *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 146) = *(_OWORD *)(a2 + 146);
  *(_OWORD *)(a1 + 136) = v9;
  *(_OWORD *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 104) = v7;
  *(_WORD *)(a1 + 162) = *(_WORD *)(a2 + 162);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  long long v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v11;
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(void *)(a1 + 156) = *(void *)(a2 + 156);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 248) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 248);
    if (v13 != 1)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 208);
  }
  long long v14 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v14;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_6:
  uint64_t v15 = *(int *)(a3 + 44);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F26C8);
}

uint64_t sub_F26C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AudioPlaybackSpeedChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F278C);
}

uint64_t sub_F278C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_F2834()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioPlaybackSpeedChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF29D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioPlaybackSpeedChangeEvent.Model.CodingKeys()
{
  return &type metadata for AudioPlaybackSpeedChangeEvent.Model.CodingKeys;
}

unint64_t sub_F2A10()
{
  unint64_t result = qword_31C2A0;
  if (!qword_31C2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C2A0);
  }
  return result;
}

unint64_t sub_F2A68()
{
  unint64_t result = qword_31C2A8;
  if (!qword_31C2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C2A8);
  }
  return result;
}

unint64_t sub_F2AC0()
{
  unint64_t result = qword_31C2B0;
  if (!qword_31C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C2B0);
  }
  return result;
}

uint64_t sub_F2B14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AFFD0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE2F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002ADEE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4465746152746962 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_F2E84(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31C2B8, &enum case for SessionGroup.default(_:));
}

uint64_t static ClickEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315828, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C2B8, a1);
}

uint64_t sub_F2EE4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31C2D0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ClickEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315830, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C2D0, a1);
}

uint64_t ClickEvent.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31C2E8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ClickEvent.clickData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31C2E8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ClickEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClickEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31C3A0);
}

uint64_t ClickEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.flowcaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.flowcaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.flowcaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.brickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_31C2F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.brickData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_31C2F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.brickData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_31C2F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.locationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_31C2F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.locationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClickEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClickEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClickEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ClickEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = enum case for EventProperty.optional<A>(_:);
  uint64_t v11 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_315DE0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t ClickEvent.Model.clickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ClickEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 64);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 72);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ClickEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 100);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 176);
  int v11 = *(_DWORD *)(v1 + 184);
  char v12 = *(unsigned char *)(v1 + 188);
  uint64_t v13 = *(void *)(v1 + 192);
  uint64_t v14 = *(void *)(v1 + 200);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 96);
  *(_DWORD *)(a1 + 4) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 160);
  *(void *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 92) = v12;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ClickEvent.Model.flowcaseData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[26];
  uint64_t v3 = v1[27];
  uint64_t v4 = v1[28];
  uint64_t v5 = v1[29];
  uint64_t v6 = v1[30];
  uint64_t v7 = v1[31];
  uint64_t v8 = v1[32];
  uint64_t v9 = v1[33];
  uint64_t v10 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_D4230(v2, v3);
}

uint64_t ClickEvent.Model.brickData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[35];
  uint64_t v3 = v1[36];
  uint64_t v4 = v1[37];
  uint64_t v5 = v1[38];
  uint64_t v6 = v1[39];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_F4088(v2, v3);
}

uint64_t sub_F4088(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ClickEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[40];
  uint64_t v3 = v1[41];
  uint64_t v4 = v1[42];
  uint64_t v5 = v1[43];
  uint64_t v6 = v1[44];
  uint64_t v7 = v1[45];
  uint64_t v8 = v1[46];
  uint64_t v9 = v1[47];
  uint64_t v10 = v1[48];
  uint64_t v11 = v1[49];
  uint64_t v12 = v1[50];
  uint64_t v13 = v1[51];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t ClickEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[55];
  uint64_t v3 = v1[56];
  uint64_t v4 = v1[57];
  uint64_t v5 = v1[58];
  uint64_t v6 = v1[59];
  uint64_t v7 = v1[60];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void ClickEvent.Model.locationData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 488);
}

uint64_t ClickEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClickEvent.Model(0) + 52);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClickEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31C468);
}

uint64_t ClickEvent.Model.init(clickData:pageData:sectionData:flowcaseData:brickData:contentData:upSellData:seriesData:locationData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v12 = *(unsigned char *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = (_OWORD *)(a9 + 280);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 24);
  char v19 = *a3;
  int v20 = *((_DWORD *)a3 + 1);
  long long v21 = *(_OWORD *)(a3 + 8);
  long long v22 = *(_OWORD *)(a3 + 24);
  uint64_t v23 = *((void *)a3 + 5);
  uint64_t v24 = *((void *)a3 + 6);
  int v25 = *((_DWORD *)a3 + 22);
  char v26 = a3[92];
  uint64_t v27 = *((void *)a3 + 12);
  uint64_t v28 = *((void *)a3 + 13);
  uint64_t v29 = *(void *)(a4 + 64);
  uint64_t v30 = *(void *)(a5 + 32);
  uint64_t v31 = *(void *)(a7 + 16);
  char v32 = *a10;
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(unsigned char *)(a9 + 16) = v12;
  *(void *)(a9 + 24) = v13;
  *(void *)(a9 + 32) = v14;
  *(_OWORD *)(a9 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a9 + 56) = v16;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a2;
  *(void *)(a9 + 80) = v17;
  *(void *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 96) = v19;
  *(_DWORD *)(a9 + 100) = v20;
  *(_OWORD *)(a9 + 104) = v21;
  *(_OWORD *)(a9 + 120) = v22;
  *(void *)(a9 + 136) = v23;
  *(void *)(a9 + 144) = v24;
  *(_OWORD *)(a9 + 152) = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(a9 + 168) = *(_OWORD *)(a3 + 72);
  *(_DWORD *)(a9 + 184) = v25;
  *(unsigned char *)(a9 + 188) = v26;
  *(void *)(a9 + 192) = v27;
  *(void *)(a9 + 200) = v28;
  long long v33 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 208) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 224) = v33;
  long long v34 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a9 + 240) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a9 + 256) = v34;
  *(void *)(a9 + 272) = v29;
  long long v35 = *(_OWORD *)(a5 + 16);
  *uint64_t v15 = *(_OWORD *)a5;
  v15[1] = v35;
  *(void *)(a9 + 312) = v30;
  long long v36 = a6[1];
  *(_OWORD *)(a9 + 320) = *a6;
  *(_OWORD *)(a9 + 336) = v36;
  long long v37 = a6[3];
  *(_OWORD *)(a9 + 352) = a6[2];
  *(_OWORD *)(a9 + 368) = v37;
  long long v38 = a6[5];
  *(_OWORD *)(a9 + 384) = a6[4];
  *(_OWORD *)(a9 + 400) = v38;
  *(_OWORD *)(a9 + 416) = *(_OWORD *)a7;
  *(void *)(a9 + 432) = v31;
  long long v39 = a8[1];
  v15[10] = *a8;
  v15[11] = v39;
  v15[12] = a8[2];
  *(unsigned char *)(a9 + 488) = v32;
  uint64_t v40 = a9 + *(int *)(type metadata accessor for ClickEvent.Model(0) + 52);
  uint64_t v41 = sub_27D7C0();
  long long v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);

  return v42(v40, a11, v41);
}

uint64_t sub_F4374(char a1)
{
  uint64_t result = 0x7461446B63696C63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6174614465676170;
      break;
    case 2:
      uint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      uint64_t result = 0x65736163776F6C66;
      break;
    case 4:
      uint64_t result = 0x7461446B63697262;
      break;
    case 5:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 6:
      uint64_t v3 = 0x6C6C65537075;
      goto LABEL_10;
    case 7:
      uint64_t v3 = 0x736569726573;
LABEL_10:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 8:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 9:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_F44A4()
{
  return sub_F4374(*v0);
}

uint64_t sub_F44AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F91DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F44D4(uint64_t a1)
{
  unint64_t v2 = sub_F49B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F4510(uint64_t a1)
{
  unint64_t v2 = sub_F49B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClickEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31C300);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_F49B4();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 56);
  *(_OWORD *)long long v35 = *(_OWORD *)v3;
  v35[16] = v9;
  *(void *)&v35[24] = v10;
  *(void *)&v35[32] = v11;
  *(_OWORD *)&v35[40] = *(_OWORD *)(v3 + 40);
  *(void *)&v35[56] = v12;
  char v38 = 0;
  sub_F4A08();
  sub_27E330();
  if (!v2)
  {
    uint64_t v13 = *(void *)(v3 + 80);
    uint64_t v14 = *(void *)(v3 + 88);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 64);
    *(void *)&v35[16] = v13;
    *(void *)&v35[24] = v14;
    char v38 = 1;
    sub_1FEAC();
    sub_27E330();
    int v15 = *(_DWORD *)(v3 + 100);
    long long v16 = *(_OWORD *)(v3 + 104);
    long long v17 = *(_OWORD *)(v3 + 120);
    uint64_t v18 = *(void *)(v3 + 136);
    uint64_t v19 = *(void *)(v3 + 144);
    int v20 = *(_DWORD *)(v3 + 184);
    char v21 = *(unsigned char *)(v3 + 188);
    uint64_t v22 = *(void *)(v3 + 192);
    uint64_t v23 = *(void *)(v3 + 200);
    v35[0] = *(unsigned char *)(v3 + 96);
    *(_DWORD *)&v35[4] = v15;
    *(_OWORD *)&v35[8] = v16;
    *(_OWORD *)&v35[24] = v17;
    *(void *)&v35[40] = v18;
    *(void *)&v35[48] = v19;
    *(_OWORD *)&v35[56] = *(_OWORD *)(v3 + 152);
    *(_OWORD *)&v35[72] = *(_OWORD *)(v3 + 168);
    *(_DWORD *)&v35[88] = v20;
    v35[92] = v21;
    uint64_t v36 = v22;
    uint64_t v37 = v23;
    char v38 = 2;
    sub_1FE58();
    sub_27E330();
    uint64_t v24 = *(void *)(v3 + 272);
    long long v25 = *(_OWORD *)(v3 + 224);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 208);
    *(_OWORD *)&v35[16] = v25;
    long long v26 = *(_OWORD *)(v3 + 256);
    *(_OWORD *)&v35[32] = *(_OWORD *)(v3 + 240);
    *(_OWORD *)&v35[48] = v26;
    *(void *)&v35[64] = v24;
    char v38 = 3;
    sub_26F98();
    sub_27E2C0();
    uint64_t v27 = *(void *)(v3 + 312);
    long long v28 = *(_OWORD *)(v3 + 296);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 280);
    *(_OWORD *)&v35[16] = v28;
    *(void *)&v35[32] = v27;
    char v38 = 4;
    sub_F4A5C();
    sub_27E2C0();
    long long v29 = *(_OWORD *)(v3 + 336);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 320);
    *(_OWORD *)&v35[16] = v29;
    long long v30 = *(_OWORD *)(v3 + 368);
    *(_OWORD *)&v35[32] = *(_OWORD *)(v3 + 352);
    *(_OWORD *)&v35[48] = v30;
    long long v31 = *(_OWORD *)(v3 + 400);
    *(_OWORD *)&v35[64] = *(_OWORD *)(v3 + 384);
    *(_OWORD *)&v35[80] = v31;
    char v38 = 5;
    sub_1A1D4();
    sub_27E2C0();
    uint64_t v32 = *(void *)(v3 + 432);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 416);
    *(void *)&v35[16] = v32;
    char v38 = 6;
    sub_36A74();
    sub_27E2C0();
    long long v33 = *(_OWORD *)(v3 + 456);
    *(_OWORD *)long long v35 = *(_OWORD *)(v3 + 440);
    *(_OWORD *)&v35[16] = v33;
    *(_OWORD *)&v35[32] = *(_OWORD *)(v3 + 472);
    char v38 = 7;
    sub_11514();
    sub_27E2C0();
    v35[0] = *(unsigned char *)(v3 + 488);
    char v38 = 8;
    sub_F4AB0();
    sub_27E2C0();
    type metadata accessor for ClickEvent.Model(0);
    v35[0] = 9;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_F49B4()
{
  unint64_t result = qword_31C308;
  if (!qword_31C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C308);
  }
  return result;
}

unint64_t sub_F4A08()
{
  unint64_t result = qword_31C310;
  if (!qword_31C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C310);
  }
  return result;
}

unint64_t sub_F4A5C()
{
  unint64_t result = qword_31C318;
  if (!qword_31C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C318);
  }
  return result;
}

unint64_t sub_F4AB0()
{
  unint64_t result = qword_31C320;
  if (!qword_31C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C320);
  }
  return result;
}

uint64_t ClickEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_4E04(&qword_31C328);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ClickEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v48 = a1;
  sub_5900(a1, v12);
  sub_F49B4();
  int v45 = v8;
  sub_27E430();
  if (v2)
  {
    uint64_t v47 = v2;
    uint64_t result = sub_5E94((uint64_t)v48);
    LODWORD(v48) = 0;
  }
  else
  {
    uint64_t v40 = v6;
    uint64_t v41 = v4;
    uint64_t v13 = v44;
    char v52 = 0;
    sub_F53FC();
    sub_27E260();
    char v15 = v49[16];
    uint64_t v16 = *(void *)&v49[24];
    uint64_t v17 = *(void *)&v49[32];
    uint64_t v18 = *(void *)&v49[56];
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v49;
    unsigned char v11[16] = v15;
    *((void *)v11 + 3) = v16;
    *((void *)v11 + 4) = v17;
    *(_OWORD *)(v11 + 40) = *(_OWORD *)&v49[40];
    *((void *)v11 + 7) = v18;
    char v52 = 1;
    sub_208EC();
    sub_27E260();
    long long v19 = *(_OWORD *)&v49[16];
    *((_OWORD *)v11 + 4) = *(_OWORD *)v49;
    *((_OWORD *)v11 + 5) = v19;
    char v52 = 2;
    sub_20898();
    sub_27E260();
    int v20 = *(_DWORD *)&v49[4];
    long long v21 = *(_OWORD *)&v49[8];
    long long v22 = *(_OWORD *)&v49[24];
    uint64_t v23 = *(void *)&v49[40];
    uint64_t v24 = *(void *)&v49[48];
    int v25 = *(_DWORD *)&v49[88];
    char v26 = v49[92];
    uint64_t v27 = v50;
    uint64_t v28 = v51;
    v11[96] = v49[0];
    *((_DWORD *)v11 + 25) = v20;
    *(_OWORD *)(v11 + 104) = v21;
    *(_OWORD *)(v11 + 120) = v22;
    *((void *)v11 + 17) = v23;
    *((void *)v11 + 18) = v24;
    *(_OWORD *)(v11 + 152) = *(_OWORD *)&v49[56];
    *(_OWORD *)(v11 + 168) = *(_OWORD *)&v49[72];
    *((_DWORD *)v11 + 46) = v25;
    v11[188] = v26;
    *((void *)v11 + 24) = v27;
    *((void *)v11 + 25) = v28;
    char v52 = 3;
    sub_26F40();
    sub_27E1F0();
    uint64_t v29 = *(void *)&v49[64];
    long long v30 = *(_OWORD *)&v49[16];
    *((_OWORD *)v11 + 13) = *(_OWORD *)v49;
    *((_OWORD *)v11 + 14) = v30;
    long long v31 = *(_OWORD *)&v49[48];
    *((_OWORD *)v11 + 15) = *(_OWORD *)&v49[32];
    *((_OWORD *)v11 + 16) = v31;
    *((void *)v11 + 34) = v29;
    char v52 = 4;
    sub_F5450();
    sub_27E1F0();
    uint64_t v32 = *(void *)&v49[32];
    long long v33 = *(_OWORD *)&v49[16];
    *(_OWORD *)(v11 + 280) = *(_OWORD *)v49;
    *(_OWORD *)(v11 + 296) = v33;
    *((void *)v11 + 39) = v32;
    char v52 = 5;
    sub_1A98C();
    sub_27E1F0();
    long long v34 = *(_OWORD *)&v49[16];
    *((_OWORD *)v11 + 20) = *(_OWORD *)v49;
    *((_OWORD *)v11 + 21) = v34;
    long long v35 = *(_OWORD *)&v49[48];
    *((_OWORD *)v11 + 22) = *(_OWORD *)&v49[32];
    *((_OWORD *)v11 + 23) = v35;
    long long v36 = *(_OWORD *)&v49[80];
    *((_OWORD *)v11 + 24) = *(_OWORD *)&v49[64];
    *((_OWORD *)v11 + 25) = v36;
    char v52 = 6;
    sub_37744();
    sub_27E1F0();
    uint64_t v37 = *(void *)&v49[16];
    *((_OWORD *)v11 + 26) = *(_OWORD *)v49;
    *((void *)v11 + 54) = v37;
    char v52 = 7;
    sub_11A3C();
    sub_27E1F0();
    long long v38 = *(_OWORD *)&v49[16];
    *(_OWORD *)(v11 + 440) = *(_OWORD *)v49;
    *(_OWORD *)(v11 + 456) = v38;
    *(_OWORD *)(v11 + 472) = *(_OWORD *)&v49[32];
    char v52 = 8;
    sub_F54A4();
    sub_27E1F0();
    v11[488] = v49[0];
    v49[0] = 9;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    uint64_t v47 = 0;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v45, v46);
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v11[*(int *)(v9 + 52)], v40, v41);
    sub_F54F8((uint64_t)v11, v43);
    sub_5E94((uint64_t)v48);
    return sub_F555C((uint64_t)v11);
  }
  return result;
}

uint64_t sub_F53B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_F53FC()
{
  unint64_t result = qword_31C330;
  if (!qword_31C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C330);
  }
  return result;
}

unint64_t sub_F5450()
{
  unint64_t result = qword_31C338;
  if (!qword_31C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C338);
  }
  return result;
}

unint64_t sub_F54A4()
{
  unint64_t result = qword_31C340;
  if (!qword_31C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C340);
  }
  return result;
}

uint64_t sub_F54F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClickEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F555C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClickEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F55B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClickEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_F55D0(void *a1)
{
  return ClickEvent.Model.encode(to:)(a1);
}

uint64_t sub_F55E8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315828, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C2B8, a1);
}

uint64_t sub_F5620@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315830, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C2D0, a1);
}

uint64_t sub_F5658@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = enum case for EventProperty.optional<A>(_:);
  uint64_t v12 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_315DE0);
  int v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClickEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31C2E8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_317418);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_31C2F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_31C2F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ClickEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for ClickEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ClickEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ClickEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ClickEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F6C7C);
}

uint64_t sub_F6C7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  uint64_t v15 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  uint64_t v16 = sub_4E04(&qword_31C2F0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_31C2F8);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for ClickEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F7018);
}

uint64_t sub_F7018(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31C2E8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_31C2F0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_31C2F8);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  uint64_t v24 = sub_4E04(&qword_315DE0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_F73AC()
{
  sub_F784C(319, &qword_31C3B0, (void (*)(void))sub_F53FC, (void (*)(void))sub_F4A08);
  if (v0 <= 0x3F)
  {
    sub_F784C(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
    if (v1 <= 0x3F)
    {
      sub_F784C(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
      if (v2 <= 0x3F)
      {
        sub_F784C(319, &qword_3174B8, (void (*)(void))sub_26F40, (void (*)(void))sub_26F98);
        if (v3 <= 0x3F)
        {
          sub_F784C(319, &qword_31C3B8, (void (*)(void))sub_F5450, (void (*)(void))sub_F4A5C);
          if (v4 <= 0x3F)
          {
            sub_F784C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
            if (v5 <= 0x3F)
            {
              sub_F784C(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
              if (v6 <= 0x3F)
              {
                sub_F784C(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_F784C(319, (unint64_t *)&qword_31C3C0, (void (*)(void))sub_F54A4, (void (*)(void))sub_F4AB0);
                  if (v8 <= 0x3F)
                  {
                    sub_6DA0();
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_F784C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ClickEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  uint64_t v8 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = a2[11];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
  uint64_t v10 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = a2[16];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = a2[18];
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = a2[20];
  *(void *)(a1 + 152) = a2[19];
  *(void *)(a1 + 160) = v13;
  uint64_t v14 = a2[22];
  *(void *)(a1 + 168) = a2[21];
  *(void *)(a1 + 176) = v14;
  *(unsigned char *)(a1 + 188) = *((unsigned char *)a2 + 188);
  *(_DWORD *)(a1 + 184) = *((_DWORD *)a2 + 46);
  uint64_t v15 = a2[25];
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = v15;
  uint64_t v40 = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v40)
  {
    long long v21 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v21;
    *(void *)(a1 + 272) = a2[34];
    long long v22 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
    *(_OWORD *)(a1 + 224) = v22;
    uint64_t v18 = a2[36];
    if (v18) {
      goto LABEL_4;
    }
LABEL_7:
    long long v23 = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 296) = v23;
    *(void *)(a1 + 312) = a2[39];
    goto LABEL_8;
  }
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = v40;
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  uint64_t v16 = a2[30];
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = v16;
  *(void *)(a1 + 248) = a2[31];
  *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
  uint64_t v17 = a2[34];
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = a2[36];
  if (!v18) {
    goto LABEL_7;
  }
LABEL_4:
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = v18;
  *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
  uint64_t v19 = a2[39];
  *(void *)(a1 + 304) = a2[38];
  *(void *)(a1 + 312) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v24 = a2[41];
  if (v24)
  {
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = v24;
    *(unsigned char *)(a1 + 336) = *((unsigned char *)a2 + 336);
    uint64_t v25 = a2[44];
    *(void *)(a1 + 344) = a2[43];
    *(void *)(a1 + 352) = v25;
    uint64_t v26 = a2[46];
    *(void *)(a1 + 360) = a2[45];
    *(void *)(a1 + 368) = v26;
    *(_WORD *)(a1 + 376) = *((_WORD *)a2 + 188);
    *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
    *(_DWORD *)(a1 + 380) = *((_DWORD *)a2 + 95);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(unsigned char *)(a1 + 392) = *((unsigned char *)a2 + 392);
    *(_DWORD *)(a1 + 393) = *(_DWORD *)((char *)a2 + 393);
    *(unsigned char *)(a1 + 397) = *((unsigned char *)a2 + 397);
    uint64_t v27 = a2[51];
    *(void *)(a1 + 400) = a2[50];
    *(void *)(a1 + 408) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *((_OWORD *)a2 + 23);
    *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 368) = v28;
    long long v29 = *((_OWORD *)a2 + 25);
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    *(_OWORD *)(a1 + 400) = v29;
    long long v30 = *((_OWORD *)a2 + 21);
    *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 336) = v30;
  }
  *(_WORD *)(a1 + 416) = *((_WORD *)a2 + 208);
  uint64_t v31 = a2[54];
  *(void *)(a1 + 424) = a2[53];
  *(void *)(a1 + 432) = v31;
  uint64_t v32 = a2[60];
  swift_bridgeObjectRetain();
  if (v32 == 1)
  {
    long long v33 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v33;
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 59);
  }
  else
  {
    *(void *)(a1 + 440) = a2[55];
    *(unsigned char *)(a1 + 448) = *((unsigned char *)a2 + 448);
    *(void *)(a1 + 456) = a2[57];
    *(unsigned char *)(a1 + 464) = *((unsigned char *)a2 + 464);
    *(_WORD *)(a1 + 465) = *(_WORD *)((char *)a2 + 465);
    *(void *)(a1 + 472) = a2[59];
    *(void *)(a1 + 480) = v32;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 488) = *((unsigned char *)a2 + 488);
  uint64_t v34 = *(int *)(a3 + 52);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t)a2 + v34;
  uint64_t v37 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

uint64_t destroy for ClickEvent.Model(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[36])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[60] != 1) {
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  uint64_t v14 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v14;
  uint64_t v38 = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v38;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    uint64_t v15 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v15;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    uint64_t v16 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = *(void *)(a2 + 288);
    if (v17)
    {
LABEL_3:
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v17;
      *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
      uint64_t v18 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v19;
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    long long v20 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v20;
    uint64_t v17 = *(void *)(a2 + 288);
    if (v17) {
      goto LABEL_3;
    }
  }
  long long v21 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v21;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
LABEL_6:
  uint64_t v22 = *(void *)(a2 + 328);
  if (v22)
  {
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v22;
    *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
    uint64_t v23 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v23;
    uint64_t v24 = *(void *)(a2 + 368);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = v24;
    *(_WORD *)(a1 + 376) = *(_WORD *)(a2 + 376);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
    *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
    *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
    *(_DWORD *)(a1 + 393) = *(_DWORD *)(a2 + 393);
    *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
    uint64_t v25 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v26;
    long long v27 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v27;
    long long v28 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v28;
  }
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  uint64_t v29 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v29;
  uint64_t v30 = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  if (v30 == 1)
  {
    long long v31 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v31;
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  }
  else
  {
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
    *(_WORD *)(a1 + 465) = *(_WORD *)(a2 + 465);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = v30;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v32 = *(int *)(a3 + 52);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

uint64_t assignWithCopy for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 208);
  uint64_t v8 = (_OWORD *)(a2 + 208);
  uint64_t v9 = *(void *)(a2 + 216);
  if (*(void *)(a1 + 216))
  {
    if (v9)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(void *)(a1 + 248) = v10;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_DB718(a1 + 208);
      _OWORD *v7 = *v8;
      long long v13 = *(_OWORD *)(a2 + 240);
      long long v12 = *(_OWORD *)(a2 + 256);
      long long v14 = *(_OWORD *)(a2 + 224);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(_OWORD *)(a1 + 240) = v13;
      *(_OWORD *)(a1 + 256) = v12;
      *(_OWORD *)(a1 + 224) = v14;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    uint64_t v11 = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(void *)(a1 + 248) = v11;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v7 = *v8;
    long long v15 = *(_OWORD *)(a2 + 224);
    long long v16 = *(_OWORD *)(a2 + 240);
    long long v17 = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(_OWORD *)(a1 + 240) = v16;
    *(_OWORD *)(a1 + 256) = v17;
    *(_OWORD *)(a1 + 224) = v15;
  }
  uint64_t v18 = (_OWORD *)(a1 + 280);
  long long v19 = (_OWORD *)(a2 + 280);
  uint64_t v20 = *(void *)(a2 + 288);
  if (*(void *)(a1 + 288))
  {
    if (v20)
    {
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_F885C(a1 + 280);
      uint64_t v21 = *(void *)(a2 + 312);
      long long v22 = *(_OWORD *)(a2 + 296);
      *uint64_t v18 = *v19;
      *(_OWORD *)(a1 + 296) = v22;
      *(void *)(a1 + 312) = v21;
    }
  }
  else if (v20)
  {
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v19;
    long long v24 = *(_OWORD *)(a2 + 296);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *uint64_t v18 = v23;
    *(_OWORD *)(a1 + 296) = v24;
  }
  uint64_t v25 = (_OWORD *)(a1 + 320);
  long long v26 = (_OWORD *)(a2 + 320);
  uint64_t v27 = *(void *)(a2 + 328);
  if (*(void *)(a1 + 328))
  {
    if (v27)
    {
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
      int v28 = *(_DWORD *)(a2 + 380);
      *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
      *(_DWORD *)(a1 + 380) = v28;
      int v29 = *(_DWORD *)(a2 + 388);
      *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
      *(_DWORD *)(a1 + 388) = v29;
      *(unsigned char *)(a1 + 393) = *(unsigned char *)(a2 + 393);
      *(unsigned char *)(a1 + 394) = *(unsigned char *)(a2 + 394);
      *(unsigned char *)(a1 + 395) = *(unsigned char *)(a2 + 395);
      *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
      *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 320);
      long long v32 = *(_OWORD *)(a2 + 336);
      *uint64_t v25 = *v26;
      *(_OWORD *)(a1 + 336) = v32;
      long long v33 = *(_OWORD *)(a2 + 400);
      long long v35 = *(_OWORD *)(a2 + 352);
      long long v34 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v33;
      *(_OWORD *)(a1 + 352) = v35;
      *(_OWORD *)(a1 + 368) = v34;
    }
  }
  else if (v27)
  {
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
    int v30 = *(_DWORD *)(a2 + 380);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    *(_DWORD *)(a1 + 380) = v30;
    int v31 = *(_DWORD *)(a2 + 388);
    *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
    *(_DWORD *)(a1 + 388) = v31;
    *(unsigned char *)(a1 + 393) = *(unsigned char *)(a2 + 393);
    *(unsigned char *)(a1 + 394) = *(unsigned char *)(a2 + 394);
    *(unsigned char *)(a1 + 395) = *(unsigned char *)(a2 + 395);
    *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
    *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *(_OWORD *)(a2 + 336);
    *uint64_t v25 = *v26;
    *(_OWORD *)(a1 + 336) = v36;
    long long v37 = *(_OWORD *)(a2 + 352);
    long long v38 = *(_OWORD *)(a2 + 368);
    long long v39 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v39;
    *(_OWORD *)(a1 + 352) = v37;
    *(_OWORD *)(a1 + 368) = v38;
  }
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(unsigned char *)(a1 + 417) = *(unsigned char *)(a2 + 417);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = (long long *)(a1 + 440);
  uint64_t v41 = (long long *)(a2 + 440);
  uint64_t v42 = *(void *)(a2 + 480);
  if (*(void *)(a1 + 480) == 1)
  {
    if (v42 == 1)
    {
      long long v43 = *v41;
      long long v44 = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 472) = v44;
      *uint64_t v40 = v43;
    }
    else
    {
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
      *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
      *(unsigned char *)(a1 + 466) = *(unsigned char *)(a2 + 466);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1CDD8(a1 + 440);
    long long v46 = *(_OWORD *)(a2 + 456);
    long long v45 = *(_OWORD *)(a2 + 472);
    *uint64_t v40 = *v41;
    *(_OWORD *)(a1 + 456) = v46;
    *(_OWORD *)(a1 + 472) = v45;
  }
  else
  {
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
    *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
    *(unsigned char *)(a1 + 466) = *(unsigned char *)(a2 + 466);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v47 = *(int *)(a3 + 52);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t sub_F885C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  long long v11 = *(_OWORD *)(a2 + 256);
  long long v12 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v11;
  *(_OWORD *)(a1 + 224) = v12;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  long long v13 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v13;
  long long v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  long long v15 = *(_OWORD *)(a2 + 352);
  long long v16 = *(_OWORD *)(a2 + 368);
  long long v17 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v17;
  *(_OWORD *)(a1 + 352) = v15;
  *(_OWORD *)(a1 + 368) = v16;
  long long v18 = *(_OWORD *)(a2 + 416);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = v18;
  long long v19 = *(_OWORD *)(a2 + 440);
  long long v20 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v20;
  *(_OWORD *)(a1 + 440) = v19;
  uint64_t v21 = *(int *)(a3 + 52);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 216))
  {
    uint64_t v16 = *(void *)(a2 + 216);
    if (v16)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v16;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      uint64_t v17 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v17;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      uint64_t v18 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_DB718(a1 + 208);
  }
  long long v19 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v19;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  long long v20 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v20;
LABEL_6:
  if (*(void *)(a1 + 288))
  {
    uint64_t v21 = *(void *)(a2 + 288);
    if (v21)
    {
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v21;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
      uint64_t v22 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v22;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_F885C(a1 + 280);
  }
  long long v23 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v23;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
LABEL_11:
  if (*(void *)(a1 + 328))
  {
    uint64_t v24 = *(void *)(a2 + 328);
    if (v24)
    {
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v24;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
      uint64_t v25 = *(void *)(a2 + 352);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 368);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = v26;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 376) = *(_WORD *)(a2 + 376);
      *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
      *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
      *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
      *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
      *(_DWORD *)(a1 + 393) = *(_DWORD *)(a2 + 393);
      *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
      uint64_t v27 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_62898(a1 + 320);
  }
  long long v28 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v28;
  long long v29 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v29;
  long long v30 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v30;
LABEL_16:
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  uint64_t v31 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v31;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 480) != 1)
  {
    uint64_t v32 = *(void *)(a2 + 480);
    if (v32 != 1)
    {
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
      *(_WORD *)(a1 + 465) = *(_WORD *)(a2 + 465);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(void *)(a1 + 480) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1CDD8(a1 + 440);
  }
  long long v33 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v33;
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
LABEL_21:
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v34 = *(int *)(a3 + 52);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F8D7C);
}

uint64_t sub_F8D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ClickEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F8E40);
}

uint64_t sub_F8E40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_F8EE8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClickEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF909CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickEvent.Model.CodingKeys()
{
  return &type metadata for ClickEvent.Model.CodingKeys;
}

unint64_t sub_F90D8()
{
  unint64_t result = qword_31C4C0;
  if (!qword_31C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C4C0);
  }
  return result;
}

unint64_t sub_F9130()
{
  unint64_t result = qword_31C4C8;
  if (!qword_31C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C4C8);
  }
  return result;
}

unint64_t sub_F9188()
{
  unint64_t result = qword_31C4D0;
  if (!qword_31C4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C4D0);
  }
  return result;
}

uint64_t sub_F91DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446B63696C63 && a2 == 0xE900000000000061;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461446B63697262 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_F9650(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31C4D8, &enum case for SessionGroup.default(_:));
}

uint64_t static DialogActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315838, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C4D8, a1);
}

uint64_t sub_F96B0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31C4F0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static DialogActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315840, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C4F0, a1);
}

uint64_t DialogActionEvent.dialogData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31C508);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DialogActionEvent.dialogData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31C508);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t DialogActionEvent.dialogActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C510);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DialogActionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31C598);
}

uint64_t DialogActionEvent.dialogActionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C510);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DialogActionEvent.dialogActionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DialogActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DialogActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DialogActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DialogActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for DialogActionEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t DialogActionEvent.Model.dialogActionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DialogActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogActionEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DialogActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31C640);
}

uint64_t DialogActionEvent.Model.init(dialogData:dialogActionData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *(unsigned char *)a4 = *a1;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v6;
  uint64_t v7 = a4 + *(int *)(type metadata accessor for DialogActionEvent.Model(0) + 24);
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a3, v8);
}

uint64_t sub_F9CD4()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144676F6C616964;
  }
}

uint64_t sub_F9D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_FBA10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F9D64(uint64_t a1)
{
  unint64_t v2 = sub_F9FD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F9DA0(uint64_t a1)
{
  unint64_t v2 = sub_F9FD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DialogActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31C518);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_F9FD8();
  sub_27E440();
  LOBYTE(v12) = *(unsigned char *)v3;
  char v14 = 0;
  sub_5C568();
  sub_27E330();
  if (!v2)
  {
    uint64_t v9 = *(void *)(v3 + 16);
    uint64_t v12 = *(void *)(v3 + 8);
    uint64_t v13 = v9;
    char v14 = 1;
    sub_FA02C();
    sub_27E330();
    type metadata accessor for DialogActionEvent.Model(0);
    LOBYTE(v12) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_F9FD8()
{
  unint64_t result = qword_31C520;
  if (!qword_31C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C520);
  }
  return result;
}

unint64_t sub_FA02C()
{
  unint64_t result = qword_31C528;
  if (!qword_31C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C528);
  }
  return result;
}

uint64_t DialogActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_31C530);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DialogActionEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_F9FD8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v25 = 0;
  sub_5C510();
  uint64_t v14 = v22;
  sub_27E260();
  *(unsigned char *)uint64_t v11 = v23;
  char v25 = 1;
  sub_FA3D4();
  sub_27E260();
  uint64_t v15 = v24;
  *(void *)(v11 + 8) = v23;
  *(void *)(v11 + 16) = v15;
  LOBYTE(v23) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v11 + *(int *)(v8 + 24), v5, v12);
  sub_FA428(v11, v19);
  sub_5E94((uint64_t)v17);
  return sub_FA48C(v11);
}

unint64_t sub_FA3D4()
{
  unint64_t result = qword_31C538;
  if (!qword_31C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C538);
  }
  return result;
}

uint64_t sub_FA428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DialogActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FA48C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DialogActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_FA4E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DialogActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_FA500(void *a1)
{
  return DialogActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_FA518@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315838, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C4D8, a1);
}

uint64_t sub_FA550@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315840, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C4F0, a1);
}

uint64_t sub_FA588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for DialogActionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31C508);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31C510);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for DialogActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FAD60);
}

uint64_t sub_FAD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31C510);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for DialogActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FAECC);
}

uint64_t sub_FAECC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31C508);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31C510);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_FB030()
{
  sub_FB1A4(319, &qword_31C5A8, (void (*)(void))sub_5C510, (void (*)(void))sub_5C568);
  if (v0 <= 0x3F)
  {
    sub_FB1A4(319, (unint64_t *)&unk_31C5B0, (void (*)(void))sub_FA3D4, (void (*)(void))sub_FA02C);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_FB1A4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DialogActionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for DialogActionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FB5F8);
}

uint64_t sub_FB5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DialogActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FB6BC);
}

uint64_t sub_FB6BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_FB764()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DialogActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFB8D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogActionEvent.Model.CodingKeys()
{
  return &type metadata for DialogActionEvent.Model.CodingKeys;
}

unint64_t sub_FB90C()
{
  unint64_t result = qword_31C680;
  if (!qword_31C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C680);
  }
  return result;
}

unint64_t sub_FB964()
{
  unint64_t result = qword_31C688;
  if (!qword_31C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C688);
  }
  return result;
}

unint64_t sub_FB9BC()
{
  unint64_t result = qword_31C690;
  if (!qword_31C690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C690);
  }
  return result;
}

uint64_t sub_FBA10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144676F6C616964 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFFF0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::SessionListeningData __swiftcall SessionListeningData.init(timeSpentListening:uniqueAudiobooksListened:)(Swift::Int64 timeSpentListening, Swift::Int32_optional uniqueAudiobooksListened)
{
  *(void *)uint64_t v2 = timeSpentListening;
  *(_DWORD *)(v2 + 8) = uniqueAudiobooksListened.value;
  *(unsigned char *)(v2 + 12) = uniqueAudiobooksListened.is_nil;
  result.timeSpentListening = timeSpentListening;
  result.uniqueAudiobooksListened = uniqueAudiobooksListened;
  return result;
}

unint64_t SkipData.skipInterval.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t SkipData.skipInterval.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t static SessionListeningData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(a1 + 12))
  {
    if ((*(unsigned char *)(a2 + 12) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_FBC00()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_FBC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_FC408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_FBC68(uint64_t a1)
{
  unint64_t v2 = sub_FBE68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_FBCA4(uint64_t a1)
{
  unint64_t v2 = sub_FBE68();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionListeningData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31C698);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(unsigned int *)(v1 + 8);
  int v10 = *(unsigned __int8 *)(v1 + 12);
  sub_5900(a1, a1[3]);
  sub_FBE68();
  sub_27E440();
  char v13 = 0;
  sub_27E350();
  if (!v2)
  {
    char v12 = 1;
    char v11 = v10;
    sub_27E2D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_FBE68()
{
  unint64_t result = qword_31C6A0;
  if (!qword_31C6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6A0);
  }
  return result;
}

uint64_t SessionListeningData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31C6A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_FBE68();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_27E280();
    char v13 = 1;
    uint64_t v11 = sub_27E200();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 12) = BYTE4(v11) & 1;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_FC068()
{
  unint64_t result = qword_31C6B0;
  if (!qword_31C6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6B0);
  }
  return result;
}

unint64_t sub_FC0C0()
{
  unint64_t result = qword_31C6B8;
  if (!qword_31C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6B8);
  }
  return result;
}

uint64_t sub_FC114(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 12);
    if (*(unsigned char *)(a1 + 12))
    {
      if (*(unsigned char *)(a2 + 12)) {
        return 1;
      }
    }
    else
    {
      if (*(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_FC158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionListeningData.init(from:)(a1, a2);
}

uint64_t sub_FC170(void *a1)
{
  return SessionListeningData.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for SessionListeningData(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionListeningData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 13)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SessionListeningData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 13) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SessionListeningData()
{
  return &type metadata for SessionListeningData;
}

unsigned char *storeEnumTagSinglePayload for SessionListeningData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFC2C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionListeningData.CodingKeys()
{
  return &type metadata for SessionListeningData.CodingKeys;
}

unint64_t sub_FC304()
{
  unint64_t result = qword_31C6C0;
  if (!qword_31C6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6C0);
  }
  return result;
}

unint64_t sub_FC35C()
{
  unint64_t result = qword_31C6C8;
  if (!qword_31C6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6C8);
  }
  return result;
}

unint64_t sub_FC3B4()
{
  unint64_t result = qword_31C6D0;
  if (!qword_31C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C6D0);
  }
  return result;
}

uint64_t sub_FC408(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AFD40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002AFD60)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_FC4F4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31C6D8, &enum case for SessionGroup.default(_:));
}

uint64_t static ReportAnIssueViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315848, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C6D8, a1);
}

uint64_t sub_FC554(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31C6F0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReportAnIssueViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315850, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C6F0, a1);
}

uint64_t ReportAnIssueViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31C778);
}

uint64_t ReportAnIssueViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReportAnIssueViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReportAnIssueViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReportAnIssueViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReportAnIssueViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReportAnIssueViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ReportAnIssueViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t ReportAnIssueViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31C810);
}

uint64_t ReportAnIssueViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReportAnIssueViewEvent.Model.init(contentData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 77);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = v8;
  *(_OWORD *)(a4 + 24) = v9;
  *(void *)(a4 + 40) = v10;
  *(void *)(a4 + 48) = v11;
  *(_WORD *)(a4 + 56) = v12;
  *(_DWORD *)(a4 + 60) = v13;
  *(unsigned char *)(a4 + 64) = v14;
  *(_DWORD *)(a4 + 68) = v15;
  *(unsigned char *)(a4 + 72) = v16;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v17;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  uint64_t v18 = type metadata accessor for ReportAnIssueViewEvent.Model(0);
  uint64_t v19 = a4 + *(int *)(v18 + 20);
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  uint64_t v21 = a4 + *(int *)(v18 + 24);
  uint64_t v22 = sub_27D7F0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);

  return v23(v21, a3, v22);
}

uint64_t sub_FCBB8(uint64_t a1)
{
  unint64_t v2 = sub_FCED4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_FCBF4(uint64_t a1)
{
  unint64_t v2 = sub_FCED4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReportAnIssueViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31C708);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_FCED4();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v23 = *v4;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)((char *)v4 + 73);
  char v35 = v20;
  long long v36 = *((_OWORD *)v4 + 5);
  v22[15] = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    type metadata accessor for ReportAnIssueViewEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v23) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_FCED4()
{
  unint64_t result = qword_31C710;
  if (!qword_31C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C710);
  }
  return result;
}

uint64_t ReportAnIssueViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_27D7F0();
  uint64_t v34 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_4E04(&qword_31C718);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ReportAnIssueViewEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v41 = a1;
  sub_5900(a1, v13);
  sub_FCED4();
  uint64_t v40 = v9;
  uint64_t v14 = v42;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v41);
  }
  __int16 v15 = v7;
  uint64_t v16 = v37;
  uint64_t v42 = v12;
  uint64_t v33 = v10;
  int v32 = v4;
  uint64_t v17 = v38;
  char v57 = 0;
  sub_1A98C();
  uint64_t v18 = v39;
  sub_27E260();
  uint64_t v19 = v44;
  char v20 = v45;
  long long v21 = v46;
  uint64_t v22 = v47;
  uint64_t v23 = v48;
  __int16 v24 = v49;
  int v25 = v50;
  char v26 = v51;
  int v27 = v52;
  char v28 = v53;
  char v29 = v55;
  uint64_t v30 = (uint64_t)v42;
  *uint64_t v42 = v43;
  *(void *)(v30 + 8) = v19;
  *(unsigned char *)(v30 + 16) = v20;
  *(_OWORD *)(v30 + 24) = v21;
  *(void *)(v30 + 40) = v22;
  *(void *)(v30 + 48) = v23;
  *(_WORD *)(v30 + 56) = v24;
  *(_DWORD *)(v30 + 60) = v25;
  *(unsigned char *)(v30 + 64) = v26;
  *(_DWORD *)(v30 + 68) = v27;
  *(unsigned char *)(v30 + 72) = v28;
  *(_DWORD *)(v30 + 73) = v54;
  *(unsigned char *)(v30 + 77) = v29;
  *(_OWORD *)(v30 + 80) = v56;
  LOBYTE(v43) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v30 + *(int *)(v33 + 20), v15, v5);
  LOBYTE(v43) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v40, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v30 + *(int *)(v33 + 24), v32, v17);
  sub_FD478(v30, v35);
  sub_5E94((uint64_t)v41);
  return sub_FD4DC(v30);
}

uint64_t sub_FD478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportAnIssueViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FD4DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportAnIssueViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_FD538@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReportAnIssueViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_FD550(void *a1)
{
  return ReportAnIssueViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_FD568@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315848, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C6D8, a1);
}

uint64_t sub_FD5A0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315850, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C6F0, a1);
}

uint64_t getEnumTagSinglePayload for ReportAnIssueViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FD5EC);
}

uint64_t sub_FD5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  __int16 v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FD758);
}

uint64_t sub_FD758(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t getEnumTagSinglePayload for ReportAnIssueViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FD8D0);
}

uint64_t sub_FD8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FDA10);
}

uint64_t sub_FDA10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_FDB3C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReportAnIssueViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFDCDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportAnIssueViewEvent.Model.CodingKeys()
{
  return &type metadata for ReportAnIssueViewEvent.Model.CodingKeys;
}

unint64_t sub_FDD18()
{
  unint64_t result = qword_31C850;
  if (!qword_31C850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C850);
  }
  return result;
}

unint64_t sub_FDD70()
{
  unint64_t result = qword_31C858;
  if (!qword_31C858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C858);
  }
  return result;
}

unint64_t sub_FDDC8()
{
  unint64_t result = qword_31C860;
  if (!qword_31C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C860);
  }
  return result;
}

id EventReporter.emitReportAnIssueEvent(using:contentID:supplementalContentCount:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a1;
  if (a1 || (result = sub_103814(), (uint64_t v9 = result) != 0))
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    *(void *)(v11 + 24) = a2;
    *(void *)(v11 + 32) = a3;
    *(void *)(v11 + 40) = v9;
    *(_DWORD *)(v11 + 48) = a4;
    *(unsigned char *)(v11 + 52) = BYTE4(a4) & 1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_FE6C0;
    *(void *)(v12 + 24) = v11;
    id v13 = a1;
    id v14 = v4;
    swift_bridgeObjectRetain();
    id v15 = v9;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_FDF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned __int8 v14 = 2;
  unsigned __int8 v13 = 1;
  unsigned __int8 v12 = 4;
  unsigned __int8 v11 = 1;
  sub_102DC0(a3, a4, &v14, &v13, a5, a6 | ((HIDWORD(a6) & 1) << 32), &v12, &v11, (uint64_t)v15);
  sub_4E04(&qword_319FE0);
  uint64_t v6 = sub_27D380();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9 + v8, enum case for DataEventTrait.onlyOnce(_:), v6);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ReportAnIssueEvent(0);
  sub_FE804(&qword_31C878, (void (*)(uint64_t))type metadata accessor for ReportAnIssueEvent);
  memset(v15, 0, sizeof(v15));
  sub_27D2F0();
  return sub_6991C((uint64_t)v15);
}

id EventReporter.emitReportAnIssueCompletionEvent(using:contentID:supplementalContentCount:issueOptions:issueSelected:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = a1;
  if (a1 || (result = sub_103814(), (id v15 = result) != 0))
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v7;
    *(void *)(v17 + 24) = a2;
    *(void *)(v17 + 32) = a3;
    *(void *)(v17 + 40) = v15;
    *(_DWORD *)(v17 + 48) = a4;
    *(void *)(v17 + 56) = a5;
    *(void *)(v17 + 64) = a6;
    *(void *)(v17 + 72) = a7;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_FE778;
    *(void *)(v18 + 24) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v19 = a1;
    id v20 = v7;
    swift_bridgeObjectRetain();
    id v21 = v15;
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_FE330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 v22 = 2;
  unsigned __int8 v21 = 1;
  unsigned __int8 v20 = 4;
  unsigned __int8 v19 = 1;
  LOBYTE(v23) = 0;
  sub_102DC0(a3, a4, &v22, &v21, a5, a6, &v20, &v19, (uint64_t)&v23);
  sub_4E04(&qword_319FE0);
  uint64_t v10 = sub_27D380();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_285930;
  uint64_t v14 = enum case for DataEventTrait.onlyOnce(_:);
  id v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 104);
  v15(v13 + v12, enum case for DataEventTrait.onlyOnce(_:), v10);
  sub_698C8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v23 = a7;
  *((void *)&v23 + 1) = a8;
  *(void *)&long long v24 = a9;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_285930;
  v15(v16 + v12, v14, v10);
  sub_FE7B0();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ReportAnIssueCompletionEvent(0);
  sub_FE804(&qword_31C870, (void (*)(uint64_t))type metadata accessor for ReportAnIssueCompletionEvent);
  long long v23 = 0u;
  long long v24 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v23);
}

uint64_t sub_FE678()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 53, 7);
}

uint64_t sub_FE6C0(uint64_t a1)
{
  return sub_FDF50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned int *)(v1 + 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 52) << 32));
}

uint64_t sub_FE6E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_FE720()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_FE778(uint64_t a1)
{
  return sub_FE330(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(_DWORD *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

unint64_t sub_FE7B0()
{
  unint64_t result = qword_31C868;
  if (!qword_31C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C868);
  }
  return result;
}

uint64_t sub_FE804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall AltSeriesContentTypeExposureData.init(altType:altContentType:altContentID:altPricePoint:altPriceCurrency:)(BookAnalytics::AltSeriesContentTypeExposureData *__return_ptr retstr, BookAnalytics::AltType altType, BookAnalytics::ContentType altContentType, Swift::String_optional altContentID, Swift::String_optional altPricePoint, Swift::String_optional altPriceCurrency)
{
  BookAnalytics::ContentType v6 = *(unsigned char *)altContentType;
  retstr->altType = *(unsigned char *)altType;
  retstr->altContentType = v6;
  retstr->altContentID = altContentID;
  retstr->altPricePoint = altPricePoint;
  retstr->altPriceCurrency = altPriceCurrency;
}

unint64_t sub_FE874()
{
  unint64_t result = 0x65707954746C61;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0x65746E6F43746C61;
      break;
    case 3:
      unint64_t result = 0x6563697250746C61;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_FE934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_FF7E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_FE95C(uint64_t a1)
{
  unint64_t v2 = sub_FF1BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_FE998(uint64_t a1)
{
  unint64_t v2 = sub_FF1BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AltSeriesContentTypeExposureData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31C880);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v14 = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  v13[5] = *((void *)v1 + 2);
  v13[6] = v9;
  uint64_t v10 = *((void *)v1 + 3);
  v13[3] = *((void *)v1 + 4);
  v13[4] = v10;
  uint64_t v11 = *((void *)v1 + 6);
  v13[1] = *((void *)v1 + 5);
  _OWORD v13[2] = v11;
  sub_5900(a1, a1[3]);
  sub_FF1BC();
  sub_27E440();
  char v21 = v8;
  char v20 = 0;
  sub_FF210();
  sub_27E330();
  if (!v2)
  {
    char v19 = v14;
    char v18 = 1;
    sub_101E4();
    sub_27E330();
    char v17 = 2;
    sub_27E290();
    char v16 = 3;
    sub_27E290();
    char v15 = 4;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AltSeriesContentTypeExposureData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31C898);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_FF1BC();
  sub_27E430();
  if (!v2)
  {
    char v31 = 0;
    sub_FF264();
    sub_27E260();
    int v9 = v32;
    char v29 = 1;
    sub_10238();
    sub_27E260();
    int v25 = v30;
    char v28 = 2;
    uint64_t v10 = sub_27E1C0();
    uint64_t v13 = v12;
    uint64_t v23 = v10;
    int v24 = v9;
    char v27 = 3;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_27E1C0();
    uint64_t v16 = v15;
    uint64_t v22 = v14;
    char v26 = 4;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_27E1C0();
    uint64_t v19 = v18;
    char v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v17;
    v20(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v24;
    *(unsigned char *)(a2 + 1) = v25;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v22;
    *(void *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v21;
    *(void *)(a2 + 48) = v19;
  }
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_FEF38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AltSeriesContentTypeExposureData.init(from:)(a1, a2);
}

uint64_t sub_FEF50(void *a1)
{
  return AltSeriesContentTypeExposureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics32AltSeriesContentTypeExposureDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  unsigned __int8 v3 = a1[1];
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v27 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v29 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 6);
  char v8 = *(unsigned char *)(a2 + 1);
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v26 = *(void *)(a2 + 24);
  uint64_t v28 = *(void *)(a2 + 32);
  uint64_t v11 = 0x65536E4965726F6DLL;
  unint64_t v12 = 0xE700000000000000;
  if (v2 == 1) {
    unint64_t v12 = 0xEC00000073656972;
  }
  else {
    uint64_t v11 = 0x6E776F6E6B6E75;
  }
  if (*a1) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = 0x65536E497478656ELL;
  }
  if (v2) {
    unint64_t v14 = v12;
  }
  else {
    unint64_t v14 = 0xEC00000073656972;
  }
  uint64_t v15 = 0x65536E4965726F6DLL;
  unint64_t v16 = 0xE700000000000000;
  if (*(unsigned char *)a2 == 1) {
    unint64_t v16 = 0xEC00000073656972;
  }
  else {
    uint64_t v15 = 0x6E776F6E6B6E75;
  }
  if (*(unsigned char *)a2) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 0x65536E497478656ELL;
  }
  if (*(unsigned char *)a2) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xEC00000073656972;
  }
  uint64_t v24 = v6;
  uint64_t v25 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 40);
  if (v13 == v17 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v19 & 1) == 0) {
      return result;
    }
  }
  if ((sub_2DAE4(v3, v8) & 1) == 0) {
    return 0;
  }
  if (!v5)
  {
    if (v9) {
      return 0;
    }
    goto LABEL_31;
  }
  if (!v9) {
    return 0;
  }
  if (v4 == v10 && v5 == v9 || (char v21 = sub_27E370(), result = 0, (v21 & 1) != 0))
  {
LABEL_31:
    if (v29)
    {
      if (!v28) {
        return 0;
      }
      if (v27 != v26 || v29 != v28)
      {
        char v22 = sub_27E370();
        uint64_t result = 0;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v28)
    {
      return 0;
    }
    if (v7)
    {
      if (v25 && (v24 == v23 && v7 == v25 || (sub_27E370() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v25)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_FF1BC()
{
  unint64_t result = qword_31C888;
  if (!qword_31C888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C888);
  }
  return result;
}

unint64_t sub_FF210()
{
  unint64_t result = qword_31C890;
  if (!qword_31C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C890);
  }
  return result;
}

unint64_t sub_FF264()
{
  unint64_t result = qword_31C8A0;
  if (!qword_31C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8A0);
  }
  return result;
}

unint64_t sub_FF2BC()
{
  unint64_t result = qword_31C8A8;
  if (!qword_31C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8A8);
  }
  return result;
}

unint64_t sub_FF314()
{
  unint64_t result = qword_31C8B0;
  if (!qword_31C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8B0);
  }
  return result;
}

uint64_t destroy for AltSeriesContentTypeExposureData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AltSeriesContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AltSeriesContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AltSeriesContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AltSeriesContentTypeExposureData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AltSeriesContentTypeExposureData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AltSeriesContentTypeExposureData()
{
  return &type metadata for AltSeriesContentTypeExposureData;
}

unsigned char *storeEnumTagSinglePayload for AltSeriesContentTypeExposureData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFF6A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AltSeriesContentTypeExposureData.CodingKeys()
{
  return &type metadata for AltSeriesContentTypeExposureData.CodingKeys;
}

unint64_t sub_FF6E0()
{
  unint64_t result = qword_31C8B8;
  if (!qword_31C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8B8);
  }
  return result;
}

unint64_t sub_FF738()
{
  unint64_t result = qword_31C8C0;
  if (!qword_31C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8C0);
  }
  return result;
}

unint64_t sub_FF790()
{
  unint64_t result = qword_31C8C8;
  if (!qword_31C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8C8);
  }
  return result;
}

uint64_t sub_FF7E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65707954746C61 && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E6F43746C61 && a2 == 0xEE0065707954746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746E6F43746C61 && a2 == 0xEC0000004449746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6563697250746C61 && a2 == 0xED0000746E696F50 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0080)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::SelectedSuggestionType_optional __swiftcall SelectedSuggestionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F83F8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t SelectedSuggestionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65636572;
      break;
    case 2:
      uint64_t result = 0x676E69646E657274;
      break;
    case 3:
      uint64_t result = 0x64656863746566;
      break;
    case 4:
      uint64_t v2 = 0x736567677573;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x636572726F63;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      break;
    case 6:
      uint64_t result = 7368564;
      break;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_FFBAC(unsigned __int8 *a1, char *a2)
{
  return sub_2DD10(*a1, *a2);
}

unint64_t sub_FFBBC()
{
  unint64_t result = qword_31C8D0;
  if (!qword_31C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8D0);
  }
  return result;
}

Swift::Int sub_FFC10()
{
  return sub_25D260();
}

uint64_t sub_FFC1C()
{
  return sub_27B910();
}

Swift::Int sub_FFC24()
{
  return sub_25D260();
}

BookAnalytics::SelectedSuggestionType_optional sub_FFC2C(Swift::String *a1)
{
  return SelectedSuggestionType.init(rawValue:)(*a1);
}

uint64_t sub_FFC38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SelectedSuggestionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_FFC60()
{
  return sub_27DED0();
}

uint64_t sub_FFCC0()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SelectedSuggestionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFFDDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedSuggestionType()
{
  return &type metadata for SelectedSuggestionType;
}

unint64_t sub_FFE14()
{
  unint64_t result = qword_31C8D8;
  if (!qword_31C8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8D8);
  }
  return result;
}

BookAnalytics::LinkActionType_optional __swiftcall LinkActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F84D8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

unint64_t LinkActionType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x696C43656C746974;
      break;
    case 2:
      unint64_t result = 0x6B63696C63;
      break;
    case 3:
      unint64_t result = 0x6570697773;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x776F6C6C6F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_FFF88(unsigned __int8 *a1, char *a2)
{
  return sub_2B944(*a1, *a2);
}

unint64_t sub_FFF98()
{
  unint64_t result = qword_31C8E0;
  if (!qword_31C8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8E0);
  }
  return result;
}

Swift::Int sub_FFFEC()
{
  return sub_20B9E0();
}

uint64_t sub_FFFF4()
{
  return sub_27C000();
}

Swift::Int sub_FFFFC()
{
  return sub_25CBC4();
}

BookAnalytics::LinkActionType_optional sub_100004(Swift::String *a1)
{
  return LinkActionType.init(rawValue:)(*a1);
}

void sub_100010(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006B63;
      uint64_t v3 = 0x696C43656C746974;
      goto LABEL_3;
    case 2:
      *a1 = 0x6B63696C63;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6570697773;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0xD000000000000015;
      a1[1] = 0x80000000002ACE00;
      break;
    case 5:
      *a1 = 0x776F6C6C6F66;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1000E8()
{
  return sub_27DED0();
}

uint64_t sub_100148()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for LinkActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkActionType()
{
  return &type metadata for LinkActionType;
}

unint64_t sub_10029C()
{
  unint64_t result = qword_31C8E8;
  if (!qword_31C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C8E8);
  }
  return result;
}

uint64_t sub_1002F0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31C8F0, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingGoalReachedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315858, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C8F0, a1);
}

uint64_t sub_100350(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31C908, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingGoalReachedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315860, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C908, a1);
}

uint64_t ReadingGoalReachedEvent.dailyGoalsReachedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31C920);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ReadingGoalReachedEvent.dailyGoalsReachedData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31C920);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ReadingGoalReachedEvent.yearlyGoalsReachedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalReachedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C928);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingGoalReachedEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31C9B0);
}

uint64_t ReadingGoalReachedEvent.yearlyGoalsReachedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalReachedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31C928);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingGoalReachedEvent.yearlyGoalsReachedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingGoalReachedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalReachedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingGoalReachedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalReachedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingGoalReachedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingGoalReachedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ReadingGoalReachedEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

void ReadingGoalReachedEvent.Model.dailyGoalsReachedData.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
}

void ReadingGoalReachedEvent.Model.yearlyGoalsReachedData.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
}

uint64_t ReadingGoalReachedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalReachedEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingGoalReachedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31CA58);
}

uint64_t ReadingGoalReachedEvent.Model.init(dailyGoalsReachedData:yearlyGoalsReachedData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  *(unsigned char *)a4 = *(unsigned char *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(void *)(a4 + 24) = v7;
  uint64_t v8 = a4 + *(int *)(type metadata accessor for ReadingGoalReachedEvent.Model(0) + 24);
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v10(v8, a3, v9);
}

unint64_t sub_1009A0()
{
  unint64_t v1 = 0x746144746E657665;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000016;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_100A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1025EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A28(uint64_t a1)
{
  unint64_t v2 = sub_100CAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A64(uint64_t a1)
{
  unint64_t v2 = sub_100CAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingGoalReachedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31C930);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_100CAC();
  sub_27E440();
  uint64_t v9 = *(void *)(v3 + 8);
  char v14 = *(unsigned char *)v3;
  uint64_t v15 = v9;
  char v13 = 0;
  sub_100D00();
  sub_27E330();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + 24);
    char v14 = *(unsigned char *)(v3 + 16);
    uint64_t v15 = v10;
    char v13 = 1;
    sub_63A58();
    sub_27E330();
    type metadata accessor for ReadingGoalReachedEvent.Model(0);
    char v14 = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100CAC()
{
  unint64_t result = qword_31C938;
  if (!qword_31C938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C938);
  }
  return result;
}

unint64_t sub_100D00()
{
  unint64_t result = qword_31C940;
  if (!qword_31C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C940);
  }
  return result;
}

uint64_t ReadingGoalReachedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31C948);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingGoalReachedEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_100CAC();
  sub_27E430();
  if (!v2)
  {
    uint64_t v12 = (uint64_t)v11;
    uint64_t v13 = v24;
    char v28 = 0;
    sub_101090();
    uint64_t v14 = v25;
    sub_27E260();
    uint64_t v15 = v27;
    *(unsigned char *)uint64_t v12 = v26;
    *(void *)(v12 + 8) = v15;
    char v28 = 1;
    sub_63A00();
    sub_27E260();
    uint64_t v17 = v27;
    *(unsigned char *)(v12 + 16) = v26;
    *(void *)(v12 + 24) = v17;
    char v26 = 2;
    sub_1AB30(&qword_315E28);
    char v20 = v5;
    uint64_t v18 = v21;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
    uint64_t v19 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v12 + *(int *)(v9 + 24), v20, v18);
    sub_1010E4(v12, v19);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_101090()
{
  unint64_t result = qword_31C950;
  if (!qword_31C950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31C950);
  }
  return result;
}

uint64_t sub_1010E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingGoalReachedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_101148@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingGoalReachedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_101160(void *a1)
{
  return ReadingGoalReachedEvent.Model.encode(to:)(a1);
}

uint64_t sub_101178@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315858, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31C8F0, a1);
}

uint64_t sub_1011B0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315860, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31C908, a1);
}

uint64_t sub_1011E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingGoalReachedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31C920);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31C928);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1019C0);
}

uint64_t sub_1019C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C920);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31C928);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ReadingGoalReachedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_101B2C);
}

uint64_t sub_101B2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31C920);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31C928);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_101C90()
{
  sub_101E04(319, &qword_31C9C0, (void (*)(void))sub_101090, (void (*)(void))sub_100D00);
  if (v0 <= 0x3F)
  {
    sub_101E04(319, (unint64_t *)&unk_31C9C8, (void (*)(void))sub_63A00, (void (*)(void))sub_63A58);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_101E04(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingGoalReachedEvent.Model(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ReadingGoalReachedEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_27D7C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *initializeWithCopy for ReadingGoalReachedEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ReadingGoalReachedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for ReadingGoalReachedEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ReadingGoalReachedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingGoalReachedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1021E8);
}

uint64_t sub_1021E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 24)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingGoalReachedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1022A4);
}

unsigned char *sub_1022A4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_102348()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoalReachedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1024ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalReachedEvent.Model.CodingKeys()
{
  return &type metadata for ReadingGoalReachedEvent.Model.CodingKeys;
}

unint64_t sub_1024E8()
{
  unint64_t result = qword_31CA98;
  if (!qword_31CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CA98);
  }
  return result;
}

unint64_t sub_102540()
{
  unint64_t result = qword_31CAA0;
  if (!qword_31CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CAA0);
  }
  return result;
}

unint64_t sub_102598()
{
  unint64_t result = qword_31CAA8;
  if (!qword_31CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CAA8);
  }
  return result;
}

uint64_t sub_1025EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000002B00A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002B00C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::DailyReadingGoalStatus_optional __swiftcall DailyReadingGoalStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8588;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t DailyReadingGoalStatus.rawValue.getter()
{
  uint64_t result = 16718;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656863616572;
      break;
    case 2:
      uint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      uint64_t result = 0x7472617453746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_102834(char *a1, char *a2)
{
  return sub_2F3EC(*a1, *a2);
}

unint64_t sub_102844()
{
  unint64_t result = qword_31CAB0;
  if (!qword_31CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CAB0);
  }
  return result;
}

Swift::Int sub_102898()
{
  return sub_27E420();
}

uint64_t sub_102974()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_102A38()
{
  return sub_27E420();
}

BookAnalytics::DailyReadingGoalStatus_optional sub_102B10(Swift::String *a1)
{
  return DailyReadingGoalStatus.init(rawValue:)(*a1);
}

void sub_102B1C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 16718;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64656863616572;
      goto LABEL_3;
    case 2:
      *a1 = 0x6572676F72506E69;
      a1[1] = 0xEA00000000007373;
      break;
    case 3:
      *a1 = 0x7472617453746F6ELL;
      a1[1] = 0xEA00000000006465;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_102BB8()
{
  return sub_27DED0();
}

uint64_t sub_102C18()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DailyReadingGoalStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x102D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyReadingGoalStatus()
{
  return &type metadata for DailyReadingGoalStatus;
}

unint64_t sub_102D6C()
{
  unint64_t result = qword_31CAB8;
  if (!qword_31CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CAB8);
  }
  return result;
}

uint64_t sub_102DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v48 = a6;
  uint64_t v49 = a2;
  uint64_t v44 = a5;
  uint64_t v17 = sub_27DCA0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  char v20 = (uint64_t *)((char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v19) = *a4;
  int v45 = *a3;
  int v46 = v19;
  int v21 = *a7;
  int v47 = *a8;
  sub_1037D4();
  *char v20 = sub_27E000();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.notOnQueue(_:), v17);
  LOBYTE(a8) = sub_27DCC0();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if (a8)
  {
    int v43 = v21;
    sub_4E04(&qword_31CAC8);
    sub_27D980();
    uint64_t v23 = *(void *)(v50[0] + 16);
    if (v23)
    {
      uint64_t v24 = v50[0] + 32;
      while (1)
      {
        sub_AE110(v24, (uint64_t)v50);
        uint64_t v25 = v51;
        uint64_t v26 = v52;
        sub_5900(v50, v51);
        uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(v10, a1, v49, v25, v26);
        if (v27) {
          break;
        }
        sub_5E94((uint64_t)v50);
        v24 += 40;
        if (!--v23) {
          goto LABEL_6;
        }
      }
      uint64_t v29 = (void *)v27;
      swift_bridgeObjectRelease();
      LODWORD(v23) = [v29 intValue];

      sub_5E94((uint64_t)v50);
      char v28 = 0;
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
    swift_beginAccess();
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v31 = sub_27DDA0();
      id v32 = [Strong contentPrivateIDForContentID:v31];

      swift_unknownObjectRelease();
      if (v32)
      {
        Strong = (void *)sub_27DDB0();
        unint64_t v34 = v33;

        goto LABEL_13;
      }
      Strong = 0;
    }
    unint64_t v34 = 0xE000000000000000;
LABEL_13:
    uint64_t v35 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v35)
    {
      NSString v36 = sub_27DDA0();
      id v37 = [v35 contentUserIDForContentID:v36];

      swift_unknownObjectRelease();
      if (v37)
      {
        uint64_t v35 = (void *)sub_27DDB0();
        unint64_t v39 = v38;

LABEL_18:
        uint64_t v40 = v49;
        *(void *)a9 = a1;
        *(void *)(a9 + 8) = v40;
        *(unsigned char *)(a9 + 16) = v45;
        *(void *)(a9 + 24) = Strong;
        *(void *)(a9 + 32) = v34;
        *(void *)(a9 + 40) = v35;
        *(void *)(a9 + 48) = v39;
        *(unsigned char *)(a9 + 56) = v46;
        *(unsigned char *)(a9 + 57) = 4;
        *(_DWORD *)(a9 + 60) = v23;
        *(unsigned char *)(a9 + 64) = v28;
        char v41 = BYTE4(v48);
        *(_DWORD *)(a9 + 68) = v48;
        *(unsigned char *)(a9 + 72) = v41 & 1;
        *(unsigned char *)(a9 + 73) = v43;
        *(unsigned char *)(a9 + 74) = v47;
        *(_WORD *)(a9 + 75) = 515;
        *(unsigned char *)(a9 + 77) = 2;
        *(void *)(a9 + 80) = 0;
        *(void *)(a9 + 88) = 0;
        return swift_bridgeObjectRetain();
      }
      uint64_t v35 = 0;
    }
    unint64_t v39 = 0xE000000000000000;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_103170@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ([a1 isOwned])
  {
    if ([a1 isStoreAsset]) {
      char v6 = 1;
    }
    else {
      char v6 = 2;
    }
  }
  else
  {
    char v6 = 0;
  }
  id result = [a1 assetID];
  if (result)
  {
    Swift::String v8 = result;
    uint64_t v9 = sub_27DDB0();
    uint64_t v11 = v10;

    id v12 = [a1 assetType];
    unint64_t v13 = 0x2000503040100uLL >> (8 * v12);
    if ((unint64_t)v12 >= 7) {
      LOBYTE(v13) = 0;
    }
    unsigned __int8 v17 = v13;
    char v16 = v6;
    unsigned __int8 v15 = 4;
    unsigned __int8 v14 = 0;
    sub_102DC0(v9, v11, &v17, (unsigned __int8 *)&v16, a2, 0x100000000, &v15, &v14, a3);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EventReporter.userEmbeddingData()(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = v1;
  return _swift_task_switch(sub_1032CC, 0, 0);
}

uint64_t sub_1032CC()
{
  sub_4E04(&qword_31CAC8);
  sub_27D980();
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 96) = v2;
  if (v2)
  {
    *(void *)(v0 + 104) = 0;
    sub_AE110(v1 + 32, v0 + 16);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    sub_5900((void *)(v0 + 16), v3);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v5;
    void *v5 = v0;
    v5[1] = sub_103488;
    uint64_t v6 = *(void *)(v0 + 80);
    return v9(v0 + 64, v6, v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    **(void **)(v0 + 72) = 0;
    Swift::String v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_103488()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_103770;
  }
  else
  {
    uint64_t v2 = sub_1035A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1035A4()
{
  uint64_t v1 = v0[8];
  if (v1)
  {
    uint64_t v2 = (void *)v0[9];
    swift_bridgeObjectRelease();
    *uint64_t v2 = v1;
    sub_5E94((uint64_t)(v0 + 2));
LABEL_5:
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13] + 1;
  sub_5E94((uint64_t)(v0 + 2));
  if (v4 == v3)
  {
    swift_bridgeObjectRelease();
    *(void *)v0[9] = 0;
    goto LABEL_5;
  }
  uint64_t v7 = v0[13] + 1;
  v0[13] = v7;
  sub_AE110(v0[11] + 40 * v7 + 32, (uint64_t)(v0 + 2));
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  sub_5900(v0 + 2, v8);
  id v12 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 16) + **(int **)(v9 + 16));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[14] = v10;
  void *v10 = v0;
  v10[1] = sub_103488;
  uint64_t v11 = v0[10];
  return v12(v0 + 8, v11, v8, v9);
}

uint64_t sub_103770()
{
  sub_5E94(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1037D4()
{
  unint64_t result = qword_31CAD0;
  if (!qword_31CAD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_31CAD0);
  }
  return result;
}

id sub_103814()
{
  if (qword_315670 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_27D9B0();
  sub_4BD4(v0, (uint64_t)qword_3187A8);
  uint64_t v1 = sub_27D990();
  os_log_type_t v2 = sub_27DFB0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "Fallback tracker should only be computed on main thread for thread-safety", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self _applicationKeyWindow];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 rootViewController];

    if (v6)
    {
      uint64_t v7 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v7)
      {
        id v5 = [v7 ba_deepestVisibleChildViewControllerIncludePresented:1];
        if (!v5)
        {
LABEL_11:

          return v5;
        }
        uint64_t v8 = swift_dynamicCastObjCProtocolConditional();
        if (v8)
        {
          uint64_t v9 = (void *)v8;
          id v10 = v5;
          id v5 = [v9 ba_effectiveAnalyticsTracker:&OBJC_PROTOCOL___BAAnalyticsTracking:&OBJC_PROTOCOL___BAAnalyticsTracking];

          goto LABEL_11;
        }
      }
      else
      {
      }
    }
    return 0;
  }
  return v5;
}

unint64_t sub_1039F0()
{
  return 0xD000000000000010;
}

uint64_t sub_103A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1042FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_103A38(uint64_t a1)
{
  unint64_t v2 = sub_103E70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_103A74(uint64_t a1)
{
  unint64_t v2 = sub_103E70();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScrollViewSettingData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31CB40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_103E70();
  sub_27E440();
  char v10 = v7;
  sub_103EC4();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScrollViewSettingData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31CB58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_103E70();
  sub_27E430();
  if (!v2)
  {
    sub_103F18();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_103D60@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ScrollViewSettingData.init(from:)(a1, a2);
}

uint64_t sub_103D78(void *a1)
{
  return ScrollViewSettingData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics21ScrollViewSettingDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 28271;
  if (v2 != 1)
  {
    uint64_t v4 = 6710895;
    unint64_t v3 = 0xE300000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  unint64_t v7 = 0xE200000000000000;
  uint64_t v8 = 28271;
  if (*a2 != 1)
  {
    uint64_t v8 = 6710895;
    unint64_t v7 = 0xE300000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_103E70()
{
  unint64_t result = qword_31CB48;
  if (!qword_31CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB48);
  }
  return result;
}

unint64_t sub_103EC4()
{
  unint64_t result = qword_31CB50;
  if (!qword_31CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB50);
  }
  return result;
}

unint64_t sub_103F18()
{
  unint64_t result = qword_31CB60;
  if (!qword_31CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB60);
  }
  return result;
}

unint64_t sub_103F70()
{
  unint64_t result = qword_31CB68;
  if (!qword_31CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB68);
  }
  return result;
}

unint64_t sub_103FC8()
{
  unint64_t result = qword_31CB70;
  if (!qword_31CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScrollViewSettingData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1040E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewSettingData()
{
  return &type metadata for ScrollViewSettingData;
}

unsigned char *storeEnumTagSinglePayload for ScrollViewSettingData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1041BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewSettingData.CodingKeys()
{
  return &type metadata for ScrollViewSettingData.CodingKeys;
}

unint64_t sub_1041F8()
{
  unint64_t result = qword_31CB78;
  if (!qword_31CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB78);
  }
  return result;
}

unint64_t sub_104250()
{
  unint64_t result = qword_31CB80;
  if (!qword_31CB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB80);
  }
  return result;
}

unint64_t sub_1042A8()
{
  unint64_t result = qword_31CB88;
  if (!qword_31CB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CB88);
  }
  return result;
}

uint64_t sub_1042FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFC10)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_104384(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31CB90, &enum case for SessionGroup.default(_:));
}

uint64_t static GenreExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315868, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CB90, a1);
}

uint64_t sub_1043E4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31CBA8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GenreExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315870, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CBA8, a1);
}

uint64_t GenreExposureEvent.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31A210);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GenreExposureEvent.genreData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31A210);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t GenreExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GenreExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31CC30);
}

uint64_t GenreExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GenreExposureEvent.exposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GenreExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GenreExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GenreExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GenreExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GenreExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GenreExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GenreExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GenreExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GenreExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GenreExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for GenreExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  unsigned __int8 v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t GenreExposureEvent.Model.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SeriesExposureEvent.Model.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_4EC48(v2, v3);
}

void *SeriesExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_4ED08(v1 + 112, (uint64_t)v4);
  sub_4ED08((uint64_t)v4, a1);
  return sub_4FB64(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1F4E8);
}

uint64_t GenreExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GenreExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31CCD0);
}

uint64_t GenreExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenreExposureEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GenreExposureEvent.Model.init(genreData:exposureData:linkData:eventData:timedData:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v22 = a1[1];
  long long v23 = *a1;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v10 = *((void *)a1 + 5);
  long long v20 = a2[1];
  long long v21 = *a2;
  long long v19 = a2[2];
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  sub_4ED08(a3, (uint64_t)v24);
  *(_OWORD *)a6 = v23;
  *(_OWORD *)(a6 + 16) = v22;
  *(void *)(a6 + 32) = v9;
  *(void *)(a6 + 40) = v10;
  *(_OWORD *)(a6 + 48) = v21;
  *(_OWORD *)(a6 + 64) = v20;
  *(_OWORD *)(a6 + 80) = v19;
  *(void *)(a6 + 96) = v11;
  *(void *)(a6 + 104) = v12;
  sub_4ED08((uint64_t)v24, a6 + 112);
  uint64_t v13 = type metadata accessor for GenreExposureEvent.Model(0);
  uint64_t v14 = a6 + *(int *)(v13 + 28);
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a4, v15);
  uint64_t v16 = a6 + *(int *)(v13 + 32);
  uint64_t v17 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a5, v17);
}

uint64_t sub_104F30()
{
  uint64_t result = 0x74614465726E6567;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 3:
      uint64_t result = 0x746144746E657665;
      break;
    case 4:
      uint64_t result = 0x74614464656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_104FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_108264(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_105008(uint64_t a1)
{
  unint64_t v2 = sub_1053C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_105044(uint64_t a1)
{
  unint64_t v2 = sub_1053C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GenreExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_31CBC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1053C8();
  sub_27E440();
  uint64_t v8 = *(void *)(v2 + 8);
  v18[0] = *(void *)v2;
  v18[1] = v8;
  long long v9 = *(_OWORD *)(v2 + 32);
  long long v19 = *(_OWORD *)(v2 + 16);
  long long v20 = v9;
  v17[0] = 0;
  sub_B12C4();
  uint64_t v10 = v26;
  sub_27E330();
  if (v10) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v12 = v5;
  long long v13 = *(_OWORD *)(v2 + 64);
  long long v22 = *(_OWORD *)(v2 + 48);
  long long v23 = v13;
  long long v14 = *(_OWORD *)(v2 + 96);
  long long v24 = *(_OWORD *)(v2 + 80);
  long long v25 = v14;
  char v21 = 1;
  sub_4F4B0();
  sub_27E2C0();
  sub_4ED08(v2 + 112, (uint64_t)v18);
  sub_4ED08((uint64_t)v18, (uint64_t)v17);
  _OWORD v16[7] = 2;
  sub_1FF00();
  sub_27E2C0();
  type metadata accessor for GenreExposureEvent.Model(0);
  v17[0] = 3;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v26 = v4;
  sub_27E330();
  v17[0] = 4;
  sub_27D7F0();
  sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v15 = v26;
  sub_27E330();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v15);
}

unint64_t sub_1053C8()
{
  unint64_t result = qword_31CBC8;
  if (!qword_31CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CBC8);
  }
  return result;
}

uint64_t GenreExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = sub_27D7F0();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  char v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_27D7C0();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4E04(&qword_31CBD0);
  uint64_t v30 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GenreExposureEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1053C8();
  id v32 = v7;
  uint64_t v11 = (uint64_t)v40;
  sub_27E430();
  if (v11) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v12 = v5;
  uint64_t v24 = v8;
  uint64_t v40 = a1;
  uint64_t v13 = (uint64_t)v10;
  uint64_t v14 = v31;
  v35[0] = 0;
  sub_B1A64();
  sub_27E260();
  uint64_t v15 = *((void *)&v36 + 1);
  *(void *)uint64_t v10 = v36;
  *((void *)v10 + 1) = v15;
  long long v16 = v38;
  *((_OWORD *)v10 + 1) = v37;
  *((_OWORD *)v10 + 2) = v16;
  v35[0] = 1;
  sub_4FB10();
  sub_27E1F0();
  long long v17 = v37;
  *((_OWORD *)v10 + 3) = v36;
  *((_OWORD *)v10 + 4) = v17;
  long long v18 = v39;
  *((_OWORD *)v10 + 5) = v38;
  *((_OWORD *)v10 + 6) = v18;
  v35[159] = 2;
  sub_20940();
  sub_27E1F0();
  uint64_t v23 = 0;
  sub_4ED08((uint64_t)&v36, (uint64_t)v35);
  sub_4ED08((uint64_t)v35, (uint64_t)(v10 + 112));
  char v34 = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  uint64_t v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v10[*(int *)(v24 + 28)], v12, v14);
  char v34 = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v21 = v27;
  long long v20 = v28;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v13 + *(int *)(v19 + 32), v20, v21);
  sub_105A38(v13, v26);
  sub_5E94((uint64_t)v40);
  return sub_105A9C(v13);
}

uint64_t sub_105A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenreExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_105A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenreExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_105AF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenreExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_105B10(void *a1)
{
  return GenreExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_105B28@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315868, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CB90, a1);
}

uint64_t sub_105B60@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315870, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CBA8, a1);
}

uint64_t sub_105B98@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenreExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A210);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317A38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GenreExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for GenreExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GenreExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GenreExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GenreExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenreExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_106794);
}

uint64_t sub_106794(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A210);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for GenreExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1069A0);
}

uint64_t sub_1069A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31A210);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_106BA4()
{
  sub_106DC8(319, (unint64_t *)&unk_31A2F0, (void (*)(void))sub_B1A64, (void (*)(void))sub_B12C4);
  if (v0 <= 0x3F)
  {
    sub_106DC8(319, (unint64_t *)&unk_317AD0, (void (*)(void))sub_4FB10, (void (*)(void))sub_4F4B0);
    if (v1 <= 0x3F)
    {
      sub_106DC8(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_106DC8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for GenreExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      uint64_t v11 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      uint64_t v12 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v12;
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = a2[15];
      if (v14)
      {
LABEL_4:
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v14;
        uint64_t v15 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v15;
        uint64_t v16 = a2[19];
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v16;
        *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
        uint64_t v17 = a2[22];
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v17;
        uint64_t v18 = a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v18;
        uint64_t v39 = v6;
        uint64_t v19 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v19;
        uint64_t v20 = a2[28];
        *(void *)(a1 + 216) = a2[27];
        *(void *)(a1 + 224) = v20;
        uint64_t v21 = a2[30];
        *(void *)(a1 + 232) = a2[29];
        *(void *)(a1 + 240) = v21;
        uint64_t v22 = a2[32];
        *(void *)(a1 + 248) = a2[31];
        *(void *)(a1 + 256) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v30 = *(int *)(v6 + 28);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = (uint64_t)a2 + v30;
        uint64_t v33 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        uint64_t v34 = *(int *)(v6 + 32);
        uint64_t v35 = a1 + v34;
        uint64_t v36 = (uint64_t)a2 + v34;
        uint64_t v37 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        return a1;
      }
    }
    else
    {
      long long v24 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v24;
      long long v25 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v25;
      uint64_t v14 = a2[15];
      if (v14) {
        goto LABEL_4;
      }
    }
    long long v26 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
    *(_OWORD *)(a1 + 224) = v26;
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(void *)(a1 + 256) = a2[32];
    long long v27 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v27;
    long long v28 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 192) = v28;
    long long v29 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v29;
    goto LABEL_8;
  }
  uint64_t v23 = *a2;
  *(void *)a1 = *a2;
  a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for GenreExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9)
  {
    long long v22 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v22;
    long long v23 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v23;
    uint64_t v13 = *(void *)(a2 + 120);
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    long long v24 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v24;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    long long v25 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v25;
    long long v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    long long v27 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v27;
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = *(void *)(a2 + 120);
  if (!v13) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  uint64_t v37 = a3;
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  uint64_t v21 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v28 = *(int *)(a3 + 28);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = *(int *)(a3 + 32);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

uint64_t assignWithCopy for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 48);
  uint64_t v7 = (long long *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_51BEC(a1 + 48);
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v11 = *v7;
      long long v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *uint64_t v6 = v11;
      *(_OWORD *)(a1 + 64) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  uint64_t v15 = (_OWORD *)(a1 + 112);
  uint64_t v16 = (_OWORD *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v17)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 112);
      long long v18 = *(_OWORD *)(a2 + 128);
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 128) = v18;
      long long v19 = *(_OWORD *)(a2 + 192);
      long long v21 = *(_OWORD *)(a2 + 144);
      long long v20 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v19;
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v20;
      long long v23 = *(_OWORD *)(a2 + 224);
      long long v22 = *(_OWORD *)(a2 + 240);
      long long v24 = *(_OWORD *)(a2 + 208);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(_OWORD *)(a1 + 224) = v23;
      *(_OWORD *)(a1 + 240) = v22;
      *(_OWORD *)(a1 + 208) = v24;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 128);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 128) = v25;
    long long v26 = *(_OWORD *)(a2 + 144);
    long long v27 = *(_OWORD *)(a2 + 160);
    long long v28 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v28;
    *(_OWORD *)(a1 + 144) = v26;
    *(_OWORD *)(a1 + 160) = v27;
    long long v29 = *(_OWORD *)(a2 + 208);
    long long v30 = *(_OWORD *)(a2 + 224);
    long long v31 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v30;
    *(_OWORD *)(a1 + 240) = v31;
    *(_OWORD *)(a1 + 208) = v29;
  }
  uint64_t v32 = *(int *)(a3 + 28);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = *(int *)(a3 + 32);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t initializeWithTake for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  long long v13 = *(_OWORD *)(a2 + 192);
  long long v14 = *(_OWORD *)(a2 + 208);
  long long v15 = *(_OWORD *)(a2 + 224);
  long long v16 = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 208) = v14;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v9 = *(void *)(a2 + 56);
    if (v9)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_51BEC(a1 + 48);
  }
  long long v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  long long v14 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v14;
LABEL_6:
  if (!*(void *)(a1 + 120))
  {
LABEL_10:
    long long v24 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v24;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    long long v25 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v25;
    long long v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    long long v27 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v27;
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(a2 + 120);
  if (!v15)
  {
    sub_23648(a1 + 112);
    goto LABEL_10;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v18 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v23;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v28 = *(int *)(a3 + 28);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = *(int *)(a3 + 32);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_107D04);
}

uint64_t sub_107D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for GenreExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_107E44);
}

uint64_t sub_107E44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_107F70()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GenreExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x108124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreExposureEvent.Model.CodingKeys()
{
  return &type metadata for GenreExposureEvent.Model.CodingKeys;
}

unint64_t sub_108160()
{
  unint64_t result = qword_31CD18;
  if (!qword_31CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD18);
  }
  return result;
}

unint64_t sub_1081B8()
{
  unint64_t result = qword_31CD20;
  if (!qword_31CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD20);
  }
  return result;
}

unint64_t sub_108210()
{
  unint64_t result = qword_31CD28;
  if (!qword_31CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD28);
  }
  return result;
}

uint64_t sub_108264(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74614465726E6567 && a2 == 0xE900000000000061;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void __swiftcall ReadingSessionData.init(percentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:)(BookAnalytics::ReadingSessionData *__return_ptr retstr, Swift::Float_optional *percentCompletionStart, Swift::Float_optional *percentCompletionEnd, Swift::Bool isFreeSample, BookAnalytics::DeviceOrientation_optional deviceOrientation)
{
  BookAnalytics::DeviceOrientation v5 = *(unsigned char *)deviceOrientation.value;
  LODWORD(retstr->percentCompletionStart.value) = percentCompletionStart;
  retstr->percentCompletionStart.is_nil = BYTE4(percentCompletionStart) & 1;
  LODWORD(retstr->percentCompletionEnd.value) = percentCompletionEnd;
  retstr->percentCompletionEnd.is_nil = BYTE4(percentCompletionEnd) & 1;
  retstr->isFreeSample = isFreeSample;
  retstr->deviceOrientation.value = v5;
}

uint64_t ReadingSessionData.isFreeSample.getter()
{
  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t ReadingSessionData.isFreeSample.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 13) = result;
  return result;
}

uint64_t (*SkipData.skipDirection.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void SkipData.skipActionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 14);
}

unsigned char *SkipData.skipActionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 14) = *result;
  return result;
}

uint64_t (*SkipData.skipActionType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t sub_10854C(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x6153656572467369;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1085F4()
{
  return sub_10854C(*v0);
}

uint64_t sub_1085FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_109080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_108624(uint64_t a1)
{
  unint64_t v2 = sub_108CAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_108660(uint64_t a1)
{
  unint64_t v2 = sub_108CAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingSessionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31CD30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(unsigned char *)(v1 + 4);
  uint64_t v15 = *(unsigned int *)(v1 + 8);
  int v8 = *(unsigned __int8 *)(v1 + 12);
  int v13 = *(unsigned __int8 *)(v1 + 13);
  int v14 = v8;
  HIDWORD(v12) = *(unsigned __int8 *)(v1 + 14);
  sub_5900(a1, a1[3]);
  sub_108CAC();
  sub_27E440();
  char v23 = 0;
  char v20 = v7;
  uint64_t v9 = v16;
  sub_27E2B0();
  if (!v9)
  {
    char v10 = BYTE4(v12);
    char v22 = 1;
    char v17 = v14;
    sub_27E2B0();
    char v21 = 2;
    sub_27E300();
    char v19 = v10;
    char v18 = 3;
    sub_108D00();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingSessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31CD48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_108CAC();
  sub_27E430();
  if (!v2)
  {
    char v19 = 0;
    uint64_t v9 = sub_27E1E0();
    char v18 = 1;
    uint64_t v10 = sub_27E1E0();
    char v17 = 2;
    int v14 = sub_27E230();
    char v15 = 3;
    sub_108D54();
    sub_27E1F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v16;
    *(_DWORD *)a2 = v9;
    *(unsigned char *)(a2 + 4) = BYTE4(v9) & 1;
    *(_DWORD *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 12) = BYTE4(v10) & 1;
    *(unsigned char *)(a2 + 13) = v14 & 1;
    *(unsigned char *)(a2 + 14) = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_108AD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingSessionData.init(from:)(a1, a2);
}

uint64_t sub_108AE8(void *a1)
{
  return ReadingSessionData.encode(to:)(a1);
}

BOOL _s13BookAnalytics18ReadingSessionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 13);
  int v4 = *(unsigned __int8 *)(a1 + 14);
  char v5 = *(unsigned char *)(a2 + 4);
  int v6 = *(unsigned __int8 *)(a2 + 14);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)a1 != *(float *)a2) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 12) & 1) == 0)
  {
    if (*(unsigned char *)(a2 + 12)) {
      return 0;
    }
    BOOL result = 0;
    if (v2 != *(float *)(a2 + 8)) {
      return result;
    }
LABEL_12:
    if ((v3 ^ *(unsigned __int8 *)(a2 + 13))) {
      return result;
    }
    if (v4 == 3) {
      return v6 == 3;
    }
    if (v6 != 3)
    {
      uint64_t v8 = 0x6E776F6E6B6E75;
      if (v4)
      {
        if (v4 == 1)
        {
          unint64_t v9 = 0xE800000000000000;
          uint64_t v10 = 0x7469617274726F70;
        }
        else
        {
          uint64_t v10 = 0x70616373646E616CLL;
          unint64_t v9 = 0xE900000000000065;
        }
      }
      else
      {
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E776F6E6B6E75;
      }
      if (*(unsigned char *)(a2 + 14))
      {
        if (v6 == 1)
        {
          unint64_t v11 = 0xE800000000000000;
          uint64_t v8 = 0x7469617274726F70;
        }
        else
        {
          uint64_t v8 = 0x70616373646E616CLL;
          unint64_t v11 = 0xE900000000000065;
        }
      }
      else
      {
        unint64_t v11 = 0xE700000000000000;
      }
      if (v10 == v8 && v9 == v11)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v12 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        return 1;
      }
    }
    return 0;
  }
  BOOL result = 0;
  if (*(unsigned char *)(a2 + 12)) {
    goto LABEL_12;
  }
  return result;
}

unint64_t sub_108CAC()
{
  unint64_t result = qword_31CD38;
  if (!qword_31CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD38);
  }
  return result;
}

unint64_t sub_108D00()
{
  unint64_t result = qword_31CD40;
  if (!qword_31CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD40);
  }
  return result;
}

unint64_t sub_108D54()
{
  unint64_t result = qword_31CD50;
  if (!qword_31CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD50);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ReadingSessionData(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 7) = *(uint64_t *)((char *)a2 + 7);
  *unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingSessionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 15)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 13);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingSessionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 14) = 0;
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 15) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 15) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 13) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSessionData()
{
  return &type metadata for ReadingSessionData;
}

unsigned char *storeEnumTagSinglePayload for ReadingSessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x108F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSessionData.CodingKeys()
{
  return &type metadata for ReadingSessionData.CodingKeys;
}

unint64_t sub_108F7C()
{
  unint64_t result = qword_31CD58;
  if (!qword_31CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD58);
  }
  return result;
}

unint64_t sub_108FD4()
{
  unint64_t result = qword_31CD60;
  if (!qword_31CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD60);
  }
  return result;
}

unint64_t sub_10902C()
{
  unint64_t result = qword_31CD68;
  if (!qword_31CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CD68);
  }
  return result;
}

uint64_t sub_109080(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000000002AFB00 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AFB20 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6153656572467369 && a2 == 0xEC000000656C706DLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AFB50)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_109244(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31CD70, &enum case for SessionGroup.default(_:));
}

uint64_t static CollectionAddEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315878, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CD70, a1);
}

uint64_t sub_1092A4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31CD88, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static CollectionAddEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315880, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CD88, a1);
}

uint64_t CollectionAddEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionAddEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionAddEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31CE10);
}

uint64_t CollectionAddEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionAddEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CollectionAddEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t CollectionAddEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CollectionAddEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t CollectionAddEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CollectionAddEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CollectionAddEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31CEA0);
}

uint64_t CollectionAddEvent.Model.init(singleCollectionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 16);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v4;
  *(_DWORD *)(a3 + 16) = v5;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for CollectionAddEvent.Model(0) + 20);
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_109650(uint64_t a1)
{
  unint64_t v2 = sub_10988C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10968C(uint64_t a1)
{
  unint64_t v2 = sub_10988C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionAddEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31CDA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_10988C();
  sub_27E440();
  uint64_t v9 = v3[1];
  int v10 = *((_DWORD *)v3 + 4);
  uint64_t v13 = *v3;
  uint64_t v14 = v9;
  int v15 = v10;
  v12[7] = 0;
  sub_18340();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for CollectionAddEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10988C()
{
  unint64_t result = qword_31CDA8;
  if (!qword_31CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CDA8);
  }
  return result;
}

uint64_t CollectionAddEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_27D7C0();
  uint64_t v20 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_4E04(&qword_31CDB0);
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CollectionAddEvent.Model(0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_10988C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v19 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v22;
  uint64_t v12 = v23;
  char v28 = 0;
  sub_182E8();
  uint64_t v14 = v24;
  sub_27E260();
  uint64_t v15 = v26;
  int v16 = v27;
  *(void *)uint64_t v11 = v25;
  *(void *)(v11 + 8) = v15;
  *(_DWORD *)(v11 + 16) = v16;
  LOBYTE(v25) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v11 + *(int *)(v19 + 20), v5, v12);
  sub_109BF4(v11, v21);
  sub_5E94((uint64_t)a1);
  return sub_109C58(v11);
}

uint64_t sub_109BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionAddEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_109C58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionAddEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_109CB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionAddEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_109CCC(void *a1)
{
  return CollectionAddEvent.Model.encode(to:)(a1);
}

uint64_t sub_109CE4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315878, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CD70, a1);
}

uint64_t sub_109D1C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315880, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CD88, a1);
}

uint64_t getEnumTagSinglePayload for CollectionAddEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_109D68);
}

uint64_t sub_109D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionAddEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_109E7C);
}

uint64_t sub_109E7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3194A0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for CollectionAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_109F9C);
}

uint64_t sub_109F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CollectionAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10A060);
}

uint64_t sub_10A060(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10A108()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionAddEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10A26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionAddEvent.Model.CodingKeys()
{
  return &type metadata for CollectionAddEvent.Model.CodingKeys;
}

unint64_t sub_10A2A8()
{
  unint64_t result = qword_31CED8;
  if (!qword_31CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CED8);
  }
  return result;
}

unint64_t sub_10A300()
{
  unint64_t result = qword_31CEE0;
  if (!qword_31CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CEE0);
  }
  return result;
}

unint64_t sub_10A358()
{
  unint64_t result = qword_31CEE8;
  if (!qword_31CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CEE8);
  }
  return result;
}

BookAnalytics::PageTurnType_optional __swiftcall PageTurnType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8608;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t PageTurnType.rawValue.getter()
{
  uint64_t v1 = 1819440483;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564696C73;
  }
}

uint64_t sub_10A450(char *a1, unsigned __int8 *a2)
{
  return sub_2FF50(*a1, *a2);
}

unint64_t sub_10A460()
{
  unint64_t result = qword_31CEF0;
  if (!qword_31CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CEF0);
  }
  return result;
}

Swift::Int sub_10A4B4()
{
  return sub_27E420();
}

uint64_t sub_10A544()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10A5C0()
{
  return sub_27E420();
}

BookAnalytics::PageTurnType_optional sub_10A64C(Swift::String *a1)
{
  return PageTurnType.init(rawValue:)(*a1);
}

void sub_10A658(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 1819440483;
  if (v2 != 1) {
    uint64_t v4 = 1701736302;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6564696C73;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_10A6A4()
{
  return sub_27DED0();
}

uint64_t sub_10A704()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for PageTurnType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10A820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageTurnType()
{
  return &type metadata for PageTurnType;
}

unint64_t sub_10A858()
{
  unint64_t result = qword_31CEF8;
  if (!qword_31CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CEF8);
  }
  return result;
}

uint64_t sub_10A8AC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31CF00, &enum case for SessionGroup.default(_:));
}

uint64_t static WantListAddEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315888, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CF00, a1);
}

uint64_t sub_10A90C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31CF18, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WantListAddEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315890, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CF18, a1);
}

uint64_t WantListAddEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WantListAddEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31CFA8);
}

uint64_t WantListAddEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31CF30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31CF30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.notificationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WantListAddEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WantListAddEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WantListAddEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WantListAddEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v6, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v6, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v6, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v2, v19);
}

uint64_t GiftEvent.Model.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 176);
  uint64_t v4 = v1 + 168;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(void *)(v4 + 40);
  uint64_t v9 = *(void *)(v4 + 48);
  uint64_t v10 = *(void *)(v4 + 56);
  uint64_t v11 = *(void *)(v4 + 64);
  uint64_t v12 = *(void *)(v4 + 72);
  uint64_t v13 = *(void *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 88);
  uint64_t v15 = *(void *)(v4 + 96);
  uint64_t v16 = *(void *)(v4 + 104);
  __int16 v17 = *(_WORD *)(v4 + 116);
  int v18 = *(_DWORD *)(v4 + 112);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  *(_WORD *)(a1 + 116) = v17;
  *(_DWORD *)(a1 + 112) = v18;
  return sub_6B874(v2, v3);
}

uint64_t WantListAddEvent.Model.notificationData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[36];
  uint64_t v3 = v1[37];
  uint64_t v4 = v1[38];
  uint64_t v5 = v1[39];
  uint64_t v6 = v1[40];
  uint64_t v7 = v1[41];
  uint64_t v8 = v1[42];
  uint64_t v9 = v1[43];
  uint64_t v10 = v1[44];
  uint64_t v11 = v1[45];
  uint64_t v12 = v1[46];
  uint64_t v13 = v1[47];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_10B5C0(v2, v3, v4);
}

uint64_t sub_10B5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t WantListAddEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 400);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 384);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WantListAddEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[51];
  uint64_t v3 = v1[52];
  uint64_t v4 = v1[53];
  uint64_t v5 = v1[54];
  uint64_t v6 = v1[55];
  uint64_t v7 = v1[56];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void WantListAddEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 456);
}

uint64_t WantListAddEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WantListAddEvent.Model(0) + 44);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WantListAddEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31D058);
}

uint64_t WantListAddEvent.Model.init(contentData:contentStoreData:contentExposureData:notificationData:upSellData:seriesData:suggestionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 16);
  long long v13 = *(_OWORD *)(a1 + 24);
  uint64_t v14 = (_OWORD *)(a9 + 264);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  __int16 v17 = *(_WORD *)(a1 + 56);
  int v18 = *(_DWORD *)(a1 + 60);
  char v19 = *(unsigned char *)(a1 + 64);
  int v20 = *(_DWORD *)(a1 + 68);
  char v21 = *(unsigned char *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 77);
  int v23 = *((_DWORD *)a2 + 16);
  char v24 = *((unsigned char *)a2 + 68);
  int v25 = *(_DWORD *)(a3 + 112);
  __int16 v26 = *(_WORD *)(a3 + 116);
  uint64_t v27 = *(void *)(a5 + 16);
  char v28 = *a7;
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v11;
  *(unsigned char *)(a9 + 16) = v12;
  *(_OWORD *)(a9 + 24) = v13;
  *(void *)(a9 + 40) = v15;
  *(void *)(a9 + 48) = v16;
  *(_WORD *)(a9 + 56) = v17;
  *(_DWORD *)(a9 + 60) = v18;
  *(unsigned char *)(a9 + 64) = v19;
  *(_DWORD *)(a9 + 68) = v20;
  *(unsigned char *)(a9 + 72) = v21;
  *(_DWORD *)(a9 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a9 + 77) = v22;
  long long v29 = *a2;
  long long v30 = a2[1];
  *(_OWORD *)(a9 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a9 + 96) = v29;
  long long v31 = a2[2];
  long long v32 = a2[3];
  *(_OWORD *)(a9 + 112) = v30;
  *(_OWORD *)(a9 + 128) = v31;
  *(_OWORD *)(a9 + 144) = v32;
  *(unsigned char *)(a9 + 164) = v24;
  *(_DWORD *)(a9 + 160) = v23;
  long long v33 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 168) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 184) = v33;
  long long v34 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a9 + 216) = v34;
  long long v35 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a9 + 232) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a9 + 248) = v35;
  *uint64_t v14 = *(_OWORD *)(a3 + 96);
  *(_WORD *)(a9 + 284) = v26;
  *(_DWORD *)(a9 + 280) = v25;
  long long v36 = a4[1];
  *(_OWORD *)(a9 + 288) = *a4;
  *(_OWORD *)(a9 + 304) = v36;
  long long v37 = a4[3];
  *(_OWORD *)(a9 + 320) = a4[2];
  *(_OWORD *)(a9 + 336) = v37;
  long long v38 = a4[5];
  *(_OWORD *)(a9 + 352) = a4[4];
  *(_OWORD *)(a9 + 368) = v38;
  *(_OWORD *)(a9 + 384) = *(_OWORD *)a5;
  *(void *)(a9 + 400) = v27;
  long long v39 = a6[1];
  v14[9] = *a6;
  v14[10] = v39;
  v14[11] = a6[2];
  *(unsigned char *)(a9 + 456) = v28;
  uint64_t v40 = a9 + *(int *)(type metadata accessor for WantListAddEvent.Model(0) + 44);
  uint64_t v41 = sub_27D7C0();
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);

  return v42(v40, a8, v41);
}

uint64_t sub_10B8B4(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      uint64_t v3 = 0x6C6C65537075;
      goto LABEL_6;
    case 5:
      uint64_t v3 = 0x736569726573;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 6:
      uint64_t result = 0x6974736567677573;
      break;
    case 7:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10B9CC()
{
  return sub_10B8B4(*v0);
}

uint64_t sub_10B9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10FE38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10B9FC(uint64_t a1)
{
  unint64_t v2 = sub_10BE78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10BA38(uint64_t a1)
{
  unint64_t v2 = sub_10BE78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WantListAddEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31CF38);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_10BE78();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v36 = *(void *)v4;
  *((void *)&v36 + 1) = v10;
  v37[0] = v11;
  *(_OWORD *)&v37[8] = v12;
  *(void *)&v37[24] = v13;
  *(void *)&long long v38 = v14;
  WORD4(v38) = v15;
  HIDWORD(v38) = v16;
  LOBYTE(v39) = v17;
  DWORD1(v39) = v18;
  BYTE8(v39) = v19;
  *(_DWORD *)((char *)&v39 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v39) = v20;
  long long v40 = *(_OWORD *)(v4 + 80);
  char v44 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v36 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)long long v37 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v37[16] = *(_OWORD *)(v4 + 128);
    long long v38 = v24;
    BYTE4(v39) = v22;
    LODWORD(v39) = v21;
    char v44 = 1;
    sub_6C400();
    sub_27E2C0();
    int v25 = *(_DWORD *)(v4 + 280);
    __int16 v26 = *(_WORD *)(v4 + 284);
    long long v27 = *(_OWORD *)(v4 + 184);
    long long v36 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)long long v37 = v27;
    long long v28 = *(_OWORD *)(v4 + 216);
    *(_OWORD *)&v37[16] = *(_OWORD *)(v4 + 200);
    long long v38 = v28;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v39 = *(_OWORD *)(v4 + 232);
    long long v40 = v29;
    long long v41 = *(_OWORD *)(v4 + 264);
    __int16 v43 = v26;
    int v42 = v25;
    char v44 = 2;
    sub_6C454();
    sub_27E2C0();
    long long v30 = *(_OWORD *)(v4 + 304);
    long long v36 = *(_OWORD *)(v4 + 288);
    *(_OWORD *)long long v37 = v30;
    long long v31 = *(_OWORD *)(v4 + 336);
    *(_OWORD *)&v37[16] = *(_OWORD *)(v4 + 320);
    long long v38 = v31;
    long long v32 = *(_OWORD *)(v4 + 368);
    long long v39 = *(_OWORD *)(v4 + 352);
    long long v40 = v32;
    char v44 = 3;
    sub_97E4C();
    sub_27E2C0();
    uint64_t v33 = *(void *)(v4 + 400);
    long long v36 = *(_OWORD *)(v4 + 384);
    *(void *)long long v37 = v33;
    char v44 = 4;
    sub_36A74();
    sub_27E2C0();
    long long v34 = *(_OWORD *)(v4 + 424);
    long long v36 = *(_OWORD *)(v4 + 408);
    *(_OWORD *)long long v37 = v34;
    *(_OWORD *)&v37[16] = *(_OWORD *)(v4 + 440);
    char v44 = 5;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v36) = *(unsigned char *)(v4 + 456);
    char v44 = 6;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for WantListAddEvent.Model(0);
    LOBYTE(v36) = 7;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_10BE78()
{
  unint64_t result = qword_31CF40;
  if (!qword_31CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31CF40);
  }
  return result;
}

uint64_t WantListAddEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v46 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31CF48);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WantListAddEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v50 = v11 + 264;
  uint64_t v51 = a1;
  sub_5900(a1, a1[3]);
  sub_10BE78();
  long long v12 = v8;
  uint64_t v13 = v52;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v51);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v5;
  uint64_t v15 = v48;
  char v61 = 0;
  sub_1A98C();
  uint64_t v16 = v49;
  sub_27E260();
  uint64_t v17 = *((void *)&v53 + 1);
  char v18 = v54[0];
  long long v19 = *(_OWORD *)&v54[8];
  uint64_t v20 = *(void *)&v54[24];
  uint64_t v21 = v55;
  __int16 v22 = WORD4(v55);
  int v23 = HIDWORD(v55);
  char v24 = v56;
  int v25 = DWORD1(v56);
  char v26 = BYTE8(v56);
  char v27 = BYTE13(v56);
  *(void *)char v11 = v53;
  *((void *)v11 + 1) = v17;
  unsigned char v11[16] = v18;
  *(_OWORD *)(v11 + 24) = v19;
  *((void *)v11 + 5) = v20;
  *((void *)v11 + 6) = v21;
  *((_WORD *)v11 + 28) = v22;
  *((_DWORD *)v11 + 15) = v23;
  v11[64] = v24;
  *((_DWORD *)v11 + 17) = v25;
  v11[72] = v26;
  *(_DWORD *)(v11 + 73) = *(_DWORD *)((char *)&v56 + 9);
  v11[77] = v27;
  *((_OWORD *)v11 + 5) = v57;
  char v61 = 1;
  sub_6D068();
  sub_27E1F0();
  int v28 = v56;
  char v29 = BYTE4(v56);
  long long v30 = *(_OWORD *)v54;
  *((_OWORD *)v11 + 6) = v53;
  *((_OWORD *)v11 + 7) = v30;
  long long v31 = v55;
  *((_OWORD *)v11 + 8) = *(_OWORD *)&v54[16];
  *((_OWORD *)v11 + 9) = v31;
  v11[164] = v29;
  *((_DWORD *)v11 + 40) = v28;
  char v61 = 2;
  sub_6D0BC();
  sub_27E1F0();
  long long v32 = *(_OWORD *)v54;
  *(_OWORD *)(v11 + 168) = v53;
  *(_OWORD *)(v11 + 184) = v32;
  long long v33 = v55;
  *(_OWORD *)(v11 + 200) = *(_OWORD *)&v54[16];
  *(_OWORD *)(v11 + 216) = v33;
  long long v34 = v57;
  *(_OWORD *)(v11 + 232) = v56;
  int v35 = v59;
  __int16 v36 = v60;
  *(_OWORD *)(v11 + 248) = v34;
  long long v37 = v50;
  *int v50 = v58;
  *((_WORD *)v37 + 10) = v36;
  *((_DWORD *)v37 + 4) = v35;
  char v61 = 3;
  sub_97DF4();
  sub_27E1F0();
  long long v38 = *(_OWORD *)v54;
  *((_OWORD *)v11 + 18) = v53;
  *((_OWORD *)v11 + 19) = v38;
  long long v39 = v55;
  *((_OWORD *)v11 + 20) = *(_OWORD *)&v54[16];
  *((_OWORD *)v11 + 21) = v39;
  long long v40 = v57;
  *((_OWORD *)v11 + 22) = v56;
  *((_OWORD *)v11 + 23) = v40;
  char v61 = 4;
  sub_37744();
  sub_27E1F0();
  LODWORD(v52) = 1;
  uint64_t v41 = *(void *)v54;
  *((_OWORD *)v11 + 24) = v53;
  *((void *)v11 + 50) = v41;
  char v61 = 5;
  sub_11A3C();
  sub_27E1F0();
  long long v42 = *(_OWORD *)v54;
  __int16 v43 = v50;
  v50[9] = v53;
  v43[10] = v42;
  v43[11] = *(_OWORD *)&v54[16];
  char v61 = 6;
  sub_377EC();
  sub_27E1F0();
  v11[456] = v53;
  LOBYTE(v53) = 7;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v16);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v11[*(int *)(v45 + 44)], v14, v3);
  sub_10C6B4((uint64_t)v11, v47);
  sub_5E94((uint64_t)v51);
  return sub_10C718((uint64_t)v11);
}

uint64_t sub_10C630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10C6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WantListAddEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10C718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WantListAddEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10C774@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WantListAddEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_10C78C(void *a1)
{
  return WantListAddEvent.Model.encode(to:)(a1);
}

uint64_t sub_10C7A4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315888, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31CF00, a1);
}

uint64_t sub_10C7DC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315890, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31CF18, a1);
}

uint64_t sub_10C814@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v7, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v7, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v7, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for WantListAddEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31CF30);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for WantListAddEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for WantListAddEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for WantListAddEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for WantListAddEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for WantListAddEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for WantListAddEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10DA28);
}

uint64_t sub_10DA28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  uint64_t v14 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  uint64_t v15 = sub_4E04(&qword_31CF30);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  uint64_t v16 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  uint64_t v17 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  uint64_t v18 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for WantListAddEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10DD24);
}

uint64_t sub_10DD24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  uint64_t v16 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  uint64_t v17 = sub_4E04(&qword_31CF30);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  uint64_t v18 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_10E018()
{
  sub_10E3D0(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_10E3D0(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_10E3D0(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
      if (v2 <= 0x3F)
      {
        sub_10E3D0(319, (unint64_t *)&unk_31CFB8, (void (*)(void))sub_97DF4, (void (*)(void))sub_97E4C);
        if (v3 <= 0x3F)
        {
          sub_10E3D0(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
          if (v4 <= 0x3F)
          {
            sub_10E3D0(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
            if (v5 <= 0x3F)
            {
              sub_10E3D0(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
              if (v6 <= 0x3F)
              {
                sub_6DA0();
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10E3D0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for WantListAddEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v9;
  *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
  int v10 = *((_DWORD *)a2 + 15);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(_DWORD *)(a1 + 60) = v10;
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
  uint64_t v11 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v12)
  {
    long long v23 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v23;
    *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
    long long v24 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v24;
    uint64_t v16 = a2[22];
    if (v16) {
      goto LABEL_4;
    }
LABEL_7:
    long long v25 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v25;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(void *)(a1 + 278) = *(uint64_t *)((char *)a2 + 278);
    long long v26 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v26;
    long long v27 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v27;
    goto LABEL_8;
  }
  uint64_t v13 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v13;
  uint64_t v14 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v14;
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v12;
  uint64_t v15 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v15;
  *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
  *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = a2[22];
  if (!v16) {
    goto LABEL_7;
  }
LABEL_4:
  *(void *)(a1 + 168) = a2[21];
  *(void *)(a1 + 176) = v16;
  uint64_t v17 = a2[24];
  *(void *)(a1 + 184) = a2[23];
  *(void *)(a1 + 192) = v17;
  uint64_t v18 = a2[26];
  *(void *)(a1 + 200) = a2[25];
  *(void *)(a1 + 208) = v18;
  uint64_t v19 = a2[28];
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = v19;
  uint64_t v20 = a2[30];
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = v20;
  *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
  *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
  *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
  *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
  uint64_t v21 = a2[34];
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v21;
  *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
  *(_WORD *)(a1 + 284) = *((_WORD *)a2 + 142);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v28 = a2[38];
  if (v28)
  {
    uint64_t v29 = a2[37];
    *(void *)(a1 + 288) = a2[36];
    *(void *)(a1 + 296) = v29;
    *(void *)(a1 + 304) = v28;
    *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
    *(_WORD *)(a1 + 313) = *(_WORD *)((char *)a2 + 313);
    uint64_t v30 = a2[41];
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = v30;
    uint64_t v31 = a2[43];
    *(void *)(a1 + 336) = a2[42];
    *(void *)(a1 + 344) = v31;
    uint64_t v32 = a2[45];
    *(void *)(a1 + 352) = a2[44];
    *(void *)(a1 + 360) = v32;
    uint64_t v33 = a2[47];
    *(void *)(a1 + 368) = a2[46];
    *(void *)(a1 + 376) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *((_OWORD *)a2 + 21);
    *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 336) = v34;
    long long v35 = *((_OWORD *)a2 + 23);
    *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 368) = v35;
    long long v36 = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 288) = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 304) = v36;
  }
  *(_WORD *)(a1 + 384) = *((_WORD *)a2 + 192);
  uint64_t v37 = a2[50];
  *(void *)(a1 + 392) = a2[49];
  *(void *)(a1 + 400) = v37;
  uint64_t v38 = a2[56];
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    long long v39 = *(_OWORD *)(a2 + 53);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 51);
    *(_OWORD *)(a1 + 424) = v39;
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
  }
  else
  {
    *(void *)(a1 + 408) = a2[51];
    *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
    *(void *)(a1 + 424) = a2[53];
    *(unsigned char *)(a1 + 432) = *((unsigned char *)a2 + 432);
    *(_WORD *)(a1 + 433) = *(_WORD *)((char *)a2 + 433);
    *(void *)(a1 + 440) = a2[55];
    *(void *)(a1 + 448) = v38;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 456) = *((unsigned char *)a2 + 456);
  uint64_t v40 = *(int *)(a3 + 44);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t)a2 + v40;
  uint64_t v43 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  return a1;
}

uint64_t destroy for WantListAddEvent.Model(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[22])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[56] != 1) {
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v12;
    uint64_t v13 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v11;
    uint64_t v14 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v14;
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = *(void *)(a2 + 176);
    if (v15)
    {
LABEL_3:
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v15;
      uint64_t v16 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v16;
      uint64_t v17 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;
      uint64_t v18 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v18;
      uint64_t v19 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v19;
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      uint64_t v20 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v20;
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    uint64_t v15 = *(void *)(a2 + 176);
    if (v15) {
      goto LABEL_3;
    }
  }
  long long v23 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v23;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  long long v24 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v24;
  long long v25 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v25;
LABEL_6:
  uint64_t v26 = *(void *)(a2 + 304);
  if (v26)
  {
    uint64_t v27 = *(void *)(a2 + 296);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = v27;
    *(void *)(a1 + 304) = v26;
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
    uint64_t v28 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v28;
    uint64_t v29 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v29;
    uint64_t v30 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v30;
    uint64_t v31 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v32;
    long long v33 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v33;
    long long v34 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v34;
  }
  *(_WORD *)(a1 + 384) = *(_WORD *)(a2 + 384);
  uint64_t v35 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v35;
  uint64_t v36 = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  if (v36 == 1)
  {
    long long v37 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v37;
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  }
  else
  {
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
    *(_WORD *)(a1 + 433) = *(_WORD *)(a2 + 433);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = v36;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  uint64_t v38 = *(int *)(a3 + 44);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

uint64_t assignWithCopy for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 96);
  int v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v11;
    }
    else
    {
      sub_70AE0(a1 + 96);
      *uint64_t v8 = *v9;
      long long v14 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v14;
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 112) = v15;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v12 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v8 = *v9;
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 168);
  uint64_t v20 = (long long *)(a2 + 168);
  uint64_t v21 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v21)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 248) = v22;
      int v23 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v23;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v24 = *(_DWORD *)(a2 + 280);
      *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
      *(_DWORD *)(a1 + 280) = v24;
      *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    }
    else
    {
      sub_70B34(a1 + 168);
      long long v28 = *(_OWORD *)(a2 + 216);
      long long v30 = *v20;
      long long v29 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v28;
      _OWORD *v19 = v30;
      *(_OWORD *)(a1 + 184) = v29;
      long long v32 = *(_OWORD *)(a2 + 248);
      long long v31 = *(_OWORD *)(a2 + 264);
      long long v33 = *(_OWORD *)(a2 + 232);
      *(void *)(a1 + 278) = *(void *)(a2 + 278);
      *(_OWORD *)(a1 + 248) = v32;
      *(_OWORD *)(a1 + 264) = v31;
      *(_OWORD *)(a1 + 232) = v33;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    int v25 = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(_DWORD *)(a1 + 248) = v25;
    int v26 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v26;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    int v27 = *(_DWORD *)(a2 + 280);
    *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
    *(_DWORD *)(a1 + 280) = v27;
    *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *v20;
    long long v35 = *(_OWORD *)(a2 + 184);
    long long v36 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v36;
    _OWORD *v19 = v34;
    *(_OWORD *)(a1 + 184) = v35;
    long long v37 = *(_OWORD *)(a2 + 232);
    long long v38 = *(_OWORD *)(a2 + 248);
    long long v39 = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 278) = *(void *)(a2 + 278);
    *(_OWORD *)(a1 + 248) = v38;
    *(_OWORD *)(a1 + 264) = v39;
    *(_OWORD *)(a1 + 232) = v37;
  }
  uint64_t v40 = (_OWORD *)(a1 + 288);
  uint64_t v41 = (_OWORD *)(a2 + 288);
  uint64_t v42 = *(void *)(a2 + 304);
  if (*(void *)(a1 + 304))
  {
    if (v42)
    {
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
      *(unsigned char *)(a1 + 314) = *(unsigned char *)(a2 + 314);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10F49C(a1 + 288);
      long long v43 = *(_OWORD *)(a2 + 304);
      *uint64_t v40 = *v41;
      *(_OWORD *)(a1 + 304) = v43;
      long long v44 = *(_OWORD *)(a2 + 368);
      long long v46 = *(_OWORD *)(a2 + 320);
      long long v45 = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v44;
      *(_OWORD *)(a1 + 320) = v46;
      *(_OWORD *)(a1 + 336) = v45;
    }
  }
  else if (v42)
  {
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
    *(unsigned char *)(a1 + 314) = *(unsigned char *)(a2 + 314);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v47 = *(_OWORD *)(a2 + 304);
    *uint64_t v40 = *v41;
    *(_OWORD *)(a1 + 304) = v47;
    long long v48 = *(_OWORD *)(a2 + 320);
    long long v49 = *(_OWORD *)(a2 + 336);
    long long v50 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v50;
    *(_OWORD *)(a1 + 320) = v48;
    *(_OWORD *)(a1 + 336) = v49;
  }
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(unsigned char *)(a1 + 385) = *(unsigned char *)(a2 + 385);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = (long long *)(a1 + 408);
  uint64_t v52 = (long long *)(a2 + 408);
  uint64_t v53 = *(void *)(a2 + 448);
  if (*(void *)(a1 + 448) == 1)
  {
    if (v53 == 1)
    {
      long long v54 = *v52;
      long long v55 = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
      *(_OWORD *)(a1 + 440) = v55;
      *uint64_t v51 = v54;
    }
    else
    {
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
      *(unsigned char *)(a1 + 433) = *(unsigned char *)(a2 + 433);
      *(unsigned char *)(a1 + 434) = *(unsigned char *)(a2 + 434);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      swift_bridgeObjectRetain();
    }
  }
  else if (v53 == 1)
  {
    sub_1CDD8(a1 + 408);
    long long v57 = *(_OWORD *)(a2 + 424);
    long long v56 = *(_OWORD *)(a2 + 440);
    *uint64_t v51 = *v52;
    *(_OWORD *)(a1 + 424) = v57;
    *(_OWORD *)(a1 + 440) = v56;
  }
  else
  {
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
    *(unsigned char *)(a1 + 433) = *(unsigned char *)(a2 + 433);
    *(unsigned char *)(a1 + 434) = *(unsigned char *)(a2 + 434);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  uint64_t v58 = *(int *)(a3 + 44);
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  return a1;
}

uint64_t sub_10F49C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  long long v9 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v9;
  long long v10 = *(_OWORD *)(a2 + 320);
  long long v11 = *(_OWORD *)(a2 + 336);
  long long v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v12;
  *(_OWORD *)(a1 + 320) = v10;
  *(_OWORD *)(a1 + 336) = v11;
  long long v13 = *(_OWORD *)(a2 + 384);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = v13;
  long long v14 = *(_OWORD *)(a2 + 408);
  long long v15 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v15;
  *(_OWORD *)(a1 + 408) = v14;
  uint64_t v16 = *(int *)(a3 + 44);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    if (*(void *)(a2 + 136))
    {
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_6;
    }
    sub_70AE0(a1 + 96);
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
LABEL_6:
  if (*(void *)(a1 + 176))
  {
    uint64_t v16 = *(void *)(a2 + 176);
    if (v16)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v20;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      uint64_t v21 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v21;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
      goto LABEL_11;
    }
    sub_70B34(a1 + 168);
  }
  long long v22 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v22;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  long long v23 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v23;
  long long v24 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v24;
LABEL_11:
  if (*(void *)(a1 + 304))
  {
    if (*(void *)(a2 + 304))
    {
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v25;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
      uint64_t v26 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_10F49C(a1 + 288);
  }
  long long v30 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v30;
  long long v31 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v31;
  long long v32 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v32;
LABEL_16:
  *(_WORD *)(a1 + 384) = *(_WORD *)(a2 + 384);
  uint64_t v33 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v33;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 448) != 1)
  {
    uint64_t v34 = *(void *)(a2 + 448);
    if (v34 != 1)
    {
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
      *(_WORD *)(a1 + 433) = *(_WORD *)(a2 + 433);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = v34;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1CDD8(a1 + 408);
  }
  long long v35 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v35;
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
LABEL_21:
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  uint64_t v36 = *(int *)(a3 + 44);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10F9EC);
}

uint64_t sub_10F9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WantListAddEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10FAB0);
}

uint64_t sub_10FAB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10FB58()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WantListAddEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10FCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListAddEvent.Model.CodingKeys()
{
  return &type metadata for WantListAddEvent.Model.CodingKeys;
}

unint64_t sub_10FD34()
{
  unint64_t result = qword_31D0A8;
  if (!qword_31D0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0A8);
  }
  return result;
}

unint64_t sub_10FD8C()
{
  unint64_t result = qword_31D0B0;
  if (!qword_31D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0B0);
  }
  return result;
}

unint64_t sub_10FDE4()
{
  unint64_t result = qword_31D0B8;
  if (!qword_31D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0B8);
  }
  return result;
}

uint64_t sub_10FE38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B00E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

BookAnalytics::MessageType_optional __swiftcall MessageType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8670;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t MessageType.rawValue.getter()
{
  uint64_t result = 0x7542656E694C6E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C62627562;
      break;
    case 2:
      uint64_t result = 0x6142656E694C6E69;
      break;
    case 3:
      uint64_t result = 0x72656E6E6162;
      break;
    case 4:
      uint64_t result = 0x7473616F74;
      break;
    case 5:
      uint64_t result = 0x4279616C7265766FLL;
      break;
    case 6:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_110310(unsigned __int8 *a1, char *a2)
{
  return sub_32AC8(*a1, *a2);
}

unint64_t sub_110320()
{
  unint64_t result = qword_31D0C0;
  if (!qword_31D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0C0);
  }
  return result;
}

Swift::Int sub_110374()
{
  return sub_25C5C0();
}

uint64_t sub_110380()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1104A8()
{
  return sub_25C5C0();
}

BookAnalytics::MessageType_optional sub_1104B0(Swift::String *a1)
{
  return MessageType.init(rawValue:)(*a1);
}

void sub_1104BC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEC000000656C6262;
  uint64_t v3 = 0x7542656E694C6E69;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x656C62627562;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "inLineBanner");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x72656E6E6162;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x7473616F74;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 5:
      strcpy((char *)a1, "overlayBubble");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 6:
      *(void *)a1 = 0x6E776F6E6B6E75;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1105C8()
{
  return sub_27DED0();
}

uint64_t sub_110628()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x110744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageType()
{
  return &type metadata for MessageType;
}

unint64_t sub_11077C()
{
  unint64_t result = qword_31D0C8;
  if (!qword_31D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0C8);
  }
  return result;
}

uint64_t EventReporter.emitGoalStateEvent(using:readingGoalsData:booksGoalsData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1F78C(a2, (uint64_t)v7, &qword_31D0D0);
  sub_1F78C(a3, (uint64_t)v8, &qword_31D0D8);
  uint64_t v4 = swift_allocObject();
  sub_1F78C((uint64_t)v7, v4 + 16, &qword_31D0D0);
  sub_1F78C((uint64_t)v8, v4 + 96, &qword_31D0D8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_110BD4;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_1108DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1F78C(a2, (uint64_t)v19, &qword_31D0D0);
  if (LOBYTE(v19[0]) != 3)
  {
    long long v15 = v19[2];
    v16[0] = v20[0];
    *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v20 + 9);
    long long v13 = v19[0];
    long long v14 = v19[1];
    sub_4E04(&qword_319FE0);
    uint64_t v4 = sub_27D380();
    uint64_t v5 = *(void *)(v4 - 8);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, enum case for DataEventTrait.onlyOnce(_:), v4);
    sub_111474();
    sub_27D2E0();
    swift_bridgeObjectRelease();
  }
  sub_1F78C(a3, (uint64_t)&v13, &qword_31D0D8);
  if ((v15 & 1) == 0)
  {
    long long v17 = v13;
    long long v18 = v14;
    sub_4E04(&qword_319FE0);
    uint64_t v8 = sub_27D380();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, enum case for DataEventTrait.onlyOnce(_:), v8);
    sub_111420();
    sub_27D2E0();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for GoalStateEvent(0);
  sub_1113D8(&qword_31D110, (void (*)(uint64_t))type metadata accessor for GoalStateEvent);
  long long v17 = 0u;
  long long v18 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v17);
}

uint64_t sub_110BC4()
{
  return _swift_deallocObject(v0, 129, 7);
}

uint64_t sub_110BD4(uint64_t a1)
{
  return sub_1108DC(a1, v1 + 16, v1 + 96);
}

uint64_t EventReporter.emitReadingGoalReachedEvent(using:dailyGoalsReachedData:yearlyGoalsReachedData:)(uint64_t a1, char *a2, char *a3)
{
  char v3 = *a2;
  uint64_t v4 = *((void *)a2 + 1);
  char v5 = *a3;
  uint64_t v6 = *((void *)a3 + 1);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v4;
  *(unsigned char *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_111220;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_110CC0(uint64_t a1, char a2, uint64_t a3)
{
  LOBYTE(v11[0]) = a2;
  *((void *)&v11[0] + 1) = a3;
  sub_4E04(&qword_319FE0);
  uint64_t v3 = sub_27D380();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  uint64_t v7 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 104);
  v8(v6 + v5, enum case for DataEventTrait.onlyOnce(_:), v3);
  sub_111330();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  v8(v9 + v5, v7, v3);
  sub_111384();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingGoalReachedEvent(0);
  sub_1113D8(&qword_31D108, (void (*)(uint64_t))type metadata accessor for ReadingGoalReachedEvent);
  memset(v11, 0, sizeof(v11));
  sub_27D2F0();
  return sub_6991C((uint64_t)v11);
}

uint64_t EventReporter.emitReadingGoalChangedEvent(using:durationData:yearlyData:)(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  uint64_t v7 = (void *)swift_allocObject();
  long long v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_111244;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_110FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v11[0] = a2;
  *((void *)&v11[0] + 1) = a3;
  sub_4E04(&qword_319FE0);
  uint64_t v3 = sub_27D380();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  uint64_t v7 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 104);
  v8(v6 + v5, enum case for DataEventTrait.onlyOnce(_:), v3);
  sub_111288();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  v8(v9 + v5, v7, v3);
  sub_1112DC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ReadingGoalChangedEvent(0);
  sub_1113D8(&qword_31D0F0, (void (*)(uint64_t))type metadata accessor for ReadingGoalChangedEvent);
  memset(v11, 0, sizeof(v11));
  sub_27D2F0();
  return sub_6991C((uint64_t)v11);
}

uint64_t sub_111210()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_111220(uint64_t a1)
{
  return sub_110CC0(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_111234()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_111244(uint64_t a1)
{
  return sub_110FD8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_111250()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_111288()
{
  unint64_t result = qword_31D0E0;
  if (!qword_31D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0E0);
  }
  return result;
}

unint64_t sub_1112DC()
{
  unint64_t result = qword_31D0E8;
  if (!qword_31D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0E8);
  }
  return result;
}

unint64_t sub_111330()
{
  unint64_t result = qword_31D0F8;
  if (!qword_31D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D0F8);
  }
  return result;
}

unint64_t sub_111384()
{
  unint64_t result = qword_31D100;
  if (!qword_31D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D100);
  }
  return result;
}

uint64_t sub_1113D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_111420()
{
  unint64_t result = qword_31D118;
  if (!qword_31D118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D118);
  }
  return result;
}

unint64_t sub_111474()
{
  unint64_t result = qword_31D120;
  if (!qword_31D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D120);
  }
  return result;
}

uint64_t static ContentSettingsData.data(bookmarkCount:noteCount:highlightCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result = BARoundIntegerToSignificantFigures(a1, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v8 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = BARoundIntegerToSignificantFigures(a2, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  int v9 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = BARoundIntegerToSignificantFigures(a3, 2);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (result <= 0x7FFFFFFF)
  {
    *a4 = v8;
    a4[1] = v9;
    a4[2] = result;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_111590(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31D128, &enum case for SessionGroup.default(_:));
}

uint64_t static GiftFailEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315898, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D128, a1);
}

uint64_t sub_1115F0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31D140, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GiftFailEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158A0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D140, a1);
}

uint64_t GiftFailEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GiftFailEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31D1E0);
}

uint64_t GiftFailEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftFailEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftFailEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftFailEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftFailEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftFailEvent.giftFailData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31D158);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftFailEvent.giftFailData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31D158);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftFailEvent.giftFailData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftFailEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftFailEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftFailEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftFailEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for GiftFailEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

void GiftEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 286);
}

uint64_t GiftFailEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftFailEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GiftFailEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31D288);
}

uint64_t GiftFailEvent.Model.init(contentData:contentStoreData:contentExposureData:giftFailData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  long long v10 = *(_OWORD *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  __int16 v13 = *(_WORD *)(a1 + 56);
  int v14 = *(_DWORD *)(a1 + 60);
  char v15 = *(unsigned char *)(a1 + 64);
  int v16 = *(_DWORD *)(a1 + 68);
  char v17 = *(unsigned char *)(a1 + 72);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v8;
  *(unsigned char *)(a6 + 16) = v9;
  *(_OWORD *)(a6 + 24) = v10;
  *(void *)(a6 + 40) = v11;
  *(void *)(a6 + 48) = v12;
  *(_WORD *)(a6 + 56) = v13;
  *(_DWORD *)(a6 + 60) = v14;
  *(unsigned char *)(a6 + 64) = v15;
  *(_DWORD *)(a6 + 68) = v16;
  *(unsigned char *)(a6 + 72) = v17;
  int v18 = *(_DWORD *)(a1 + 73);
  long long v19 = *a2;
  long long v20 = a2[1];
  *(_OWORD *)(a6 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a6 + 96) = v19;
  long long v21 = a2[2];
  long long v22 = a2[3];
  *(_OWORD *)(a6 + 112) = v20;
  *(_OWORD *)(a6 + 128) = v21;
  *(_OWORD *)(a6 + 144) = v22;
  long long v23 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a6 + 168) = *(_OWORD *)a3;
  *(_OWORD *)(a6 + 184) = v23;
  long long v24 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a6 + 200) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a6 + 216) = v24;
  long long v25 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a6 + 232) = *(_OWORD *)(a3 + 64);
  char v26 = *(unsigned char *)(a1 + 77);
  LODWORD(v11) = *((_DWORD *)a2 + 16);
  LOBYTE(v12) = *((unsigned char *)a2 + 68);
  int v27 = *(_DWORD *)(a3 + 112);
  LOWORD(v14) = *(_WORD *)(a3 + 116);
  char v28 = *a4;
  *(_DWORD *)(a6 + 73) = v18;
  *(unsigned char *)(a6 + 77) = v26;
  *(unsigned char *)(a6 + 164) = v12;
  *(_DWORD *)(a6 + 160) = v11;
  *(_OWORD *)(a6 + 248) = v25;
  *(_OWORD *)(a6 + 264) = *(_OWORD *)(a3 + 96);
  *(_WORD *)(a6 + 284) = v14;
  *(_DWORD *)(a6 + 280) = v27;
  *(unsigned char *)(a6 + 286) = v28;
  uint64_t v29 = a6 + *(int *)(type metadata accessor for GiftFailEvent.Model(0) + 32);
  uint64_t v30 = sub_27D7C0();
  long long v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32);

  return v31(v29, a5, v30);
}

unint64_t sub_111F18(char a1)
{
  unint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6C69614674666967;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_111FE8()
{
  return sub_111F18(*v0);
}

uint64_t sub_111FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_11515C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_112018(uint64_t a1)
{
  unint64_t v2 = sub_1123B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_112054(uint64_t a1)
{
  unint64_t v2 = sub_1123B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GiftFailEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31D160);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_1123B4();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v31 = *(void *)v4;
  *((void *)&v31 + 1) = v10;
  v32[0] = v11;
  *(_OWORD *)&v32[8] = v12;
  *(void *)&v32[24] = v13;
  *(void *)&long long v33 = v14;
  WORD4(v33) = v15;
  HIDWORD(v33) = v16;
  LOBYTE(v34) = v17;
  DWORD1(v34) = v18;
  BYTE8(v34) = v19;
  *(_DWORD *)((char *)&v34 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v34) = v20;
  long long v35 = *(_OWORD *)(v4 + 80);
  char v39 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v31 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)long long v32 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v32[16] = *(_OWORD *)(v4 + 128);
    long long v33 = v24;
    BYTE4(v34) = v22;
    LODWORD(v34) = v21;
    char v39 = 1;
    sub_6C400();
    sub_27E2C0();
    int v25 = *(_DWORD *)(v4 + 280);
    __int16 v26 = *(_WORD *)(v4 + 284);
    long long v27 = *(_OWORD *)(v4 + 184);
    long long v31 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)long long v32 = v27;
    long long v28 = *(_OWORD *)(v4 + 216);
    *(_OWORD *)&v32[16] = *(_OWORD *)(v4 + 200);
    long long v33 = v28;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v34 = *(_OWORD *)(v4 + 232);
    long long v35 = v29;
    long long v36 = *(_OWORD *)(v4 + 264);
    __int16 v38 = v26;
    int v37 = v25;
    char v39 = 2;
    sub_6C454();
    sub_27E2C0();
    LOBYTE(v31) = *(unsigned char *)(v4 + 286);
    char v39 = 3;
    sub_112408();
    sub_27E330();
    type metadata accessor for GiftFailEvent.Model(0);
    LOBYTE(v31) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1123B4()
{
  unint64_t result = qword_31D168;
  if (!qword_31D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D168);
  }
  return result;
}

unint64_t sub_112408()
{
  unint64_t result = qword_31D170;
  if (!qword_31D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D170);
  }
  return result;
}

uint64_t GiftFailEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v41 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_31D178);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GiftFailEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v46 = a1;
  sub_5900(a1, v13);
  sub_1123B4();
  long long v45 = v9;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v46);
  }
  uint64_t v14 = (uint64_t)v12;
  uint64_t v15 = v43;
  char v55 = 0;
  sub_1A98C();
  uint64_t v16 = v44;
  sub_27E260();
  uint64_t v40 = (_OWORD *)(v14 + 264);
  uint64_t v17 = *((void *)&v47 + 1);
  char v18 = v48[0];
  long long v19 = *(_OWORD *)&v48[8];
  uint64_t v20 = *(void *)&v48[24];
  uint64_t v21 = v49;
  __int16 v22 = WORD4(v49);
  int v23 = HIDWORD(v49);
  char v24 = v50;
  int v25 = DWORD1(v50);
  char v26 = BYTE8(v50);
  char v27 = BYTE13(v50);
  *(void *)uint64_t v14 = v47;
  *(void *)(v14 + 8) = v17;
  *(unsigned char *)(v14 + 16) = v18;
  *(_OWORD *)(v14 + 24) = v19;
  *(void *)(v14 + 40) = v20;
  *(void *)(v14 + 48) = v21;
  *(_WORD *)(v14 + 56) = v22;
  *(_DWORD *)(v14 + 60) = v23;
  *(unsigned char *)(v14 + 64) = v24;
  *(_DWORD *)(v14 + 68) = v25;
  *(unsigned char *)(v14 + 72) = v26;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v50 + 9);
  *(unsigned char *)(v14 + 77) = v27;
  *(_OWORD *)(v14 + 80) = v51;
  char v55 = 1;
  sub_6D068();
  sub_27E1F0();
  int v28 = v50;
  char v29 = BYTE4(v50);
  long long v30 = *(_OWORD *)v48;
  *(_OWORD *)(v14 + 96) = v47;
  *(_OWORD *)(v14 + 112) = v30;
  long long v31 = v49;
  *(_OWORD *)(v14 + 128) = *(_OWORD *)&v48[16];
  *(_OWORD *)(v14 + 144) = v31;
  *(unsigned char *)(v14 + 164) = v29;
  *(_DWORD *)(v14 + 160) = v28;
  char v55 = 2;
  sub_6D0BC();
  uint64_t v39 = 0;
  sub_27E1F0();
  long long v32 = *(_OWORD *)v48;
  *(_OWORD *)(v14 + 168) = v47;
  *(_OWORD *)(v14 + 184) = v32;
  long long v33 = v49;
  *(_OWORD *)(v14 + 200) = *(_OWORD *)&v48[16];
  *(_OWORD *)(v14 + 216) = v33;
  long long v34 = v51;
  *(_OWORD *)(v14 + 232) = v50;
  int v35 = v53;
  __int16 v36 = v54;
  *(_OWORD *)(v14 + 248) = v34;
  int v37 = v40;
  *uint64_t v40 = v52;
  *((_WORD *)v37 + 10) = v36;
  *((_DWORD *)v37 + 4) = v35;
  char v55 = 3;
  sub_112A18();
  sub_27E260();
  *(unsigned char *)(v14 + 286) = v47;
  LOBYTE(v47) = 4;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v14 + *(int *)(v10 + 32), v6, v4);
  sub_112A6C(v14, v42);
  sub_5E94((uint64_t)v46);
  return sub_112AD0(v14);
}

unint64_t sub_112A18()
{
  unint64_t result = qword_31D180;
  if (!qword_31D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D180);
  }
  return result;
}

uint64_t sub_112A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GiftFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_112AD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GiftFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_112B2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GiftFailEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_112B44(void *a1)
{
  return GiftFailEvent.Model.encode(to:)(a1);
}

uint64_t sub_112B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315898, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D128, a1);
}

uint64_t sub_112B94@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158A0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D140, a1);
}

uint64_t sub_112BCC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for GiftFailEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31D158);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GiftFailEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for GiftFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GiftFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GiftFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GiftFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GiftFailEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1137C8);
}

uint64_t sub_1137C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_31D158);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for GiftFailEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1139D4);
}

uint64_t sub_1139D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_31D158);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_113BD8()
{
  sub_113E34(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_113E34(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_113E34(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
      if (v2 <= 0x3F)
      {
        sub_113E34(319, (unint64_t *)&unk_31D1F0, (void (*)(void))sub_112A18, (void (*)(void))sub_112408);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_113E34(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for GiftFailEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      uint64_t v14 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      uint64_t v15 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v15;
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2[22];
      if (v16)
      {
LABEL_4:
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v16;
        uint64_t v17 = a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v17;
        uint64_t v18 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v18;
        uint64_t v19 = a2[28];
        *(void *)(a1 + 216) = a2[27];
        *(void *)(a1 + 224) = v19;
        uint64_t v20 = a2[30];
        *(void *)(a1 + 232) = a2[29];
        *(void *)(a1 + 240) = v20;
        *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
        *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
        *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
        *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
        uint64_t v21 = a2[34];
        *(void *)(a1 + 264) = a2[33];
        *(void *)(a1 + 272) = v21;
        *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
        *(_WORD *)(a1 + 284) = *((_WORD *)a2 + 142);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        *(unsigned char *)(a1 + 286) = *((unsigned char *)a2 + 286);
        uint64_t v28 = *(int *)(a3 + 32);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        return a1;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v23;
      *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      uint64_t v16 = a2[22];
      if (v16) {
        goto LABEL_4;
      }
    }
    long long v25 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v25;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(void *)(a1 + 278) = *(uint64_t *)((char *)a2 + 278);
    long long v26 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v26;
    long long v27 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v27;
    goto LABEL_8;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for GiftFailEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v11)
  {
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    uint64_t v15 = *(void *)(a2 + 176);
    if (v15) {
      goto LABEL_3;
    }
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v23;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 278) = *(void *)(a2 + 278);
    long long v24 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v24;
    long long v25 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v25;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = *(void *)(a2 + 176);
  if (!v15) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(unsigned char *)(a1 + 286) = *(unsigned char *)(a2 + 286);
  uint64_t v26 = *(int *)(a3 + 32);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t assignWithCopy for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 96);
  int v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v11;
    }
    else
    {
      sub_70AE0(a1 + 96);
      *uint64_t v8 = *v9;
      long long v14 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v14;
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 112) = v15;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v12 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v8 = *v9;
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 168);
  uint64_t v20 = (long long *)(a2 + 168);
  uint64_t v21 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v21)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 248) = v22;
      int v23 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v23;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v24 = *(_DWORD *)(a2 + 280);
      *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
      *(_DWORD *)(a1 + 280) = v24;
      *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    }
    else
    {
      sub_70B34(a1 + 168);
      long long v28 = *(_OWORD *)(a2 + 216);
      long long v30 = *v20;
      long long v29 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v28;
      _OWORD *v19 = v30;
      *(_OWORD *)(a1 + 184) = v29;
      long long v32 = *(_OWORD *)(a2 + 248);
      long long v31 = *(_OWORD *)(a2 + 264);
      long long v33 = *(_OWORD *)(a2 + 232);
      *(void *)(a1 + 278) = *(void *)(a2 + 278);
      *(_OWORD *)(a1 + 248) = v32;
      *(_OWORD *)(a1 + 264) = v31;
      *(_OWORD *)(a1 + 232) = v33;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    int v25 = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(_DWORD *)(a1 + 248) = v25;
    int v26 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v26;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    int v27 = *(_DWORD *)(a2 + 280);
    *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
    *(_DWORD *)(a1 + 280) = v27;
    *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *v20;
    long long v35 = *(_OWORD *)(a2 + 184);
    long long v36 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v36;
    _OWORD *v19 = v34;
    *(_OWORD *)(a1 + 184) = v35;
    long long v37 = *(_OWORD *)(a2 + 232);
    long long v38 = *(_OWORD *)(a2 + 248);
    long long v39 = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 278) = *(void *)(a2 + 278);
    *(_OWORD *)(a1 + 248) = v38;
    *(_OWORD *)(a1 + 264) = v39;
    *(_OWORD *)(a1 + 232) = v37;
  }
  *(unsigned char *)(a1 + 286) = *(unsigned char *)(a2 + 286);
  uint64_t v40 = *(int *)(a3 + 32);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

uint64_t initializeWithTake for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)(a1 + 286) = *(unsigned char *)(a2 + 286);
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    if (*(void *)(a2 + 136))
    {
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_6;
    }
    sub_70AE0(a1 + 96);
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
LABEL_6:
  if (!*(void *)(a1 + 176))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v22;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 278) = *(void *)(a2 + 278);
    long long v23 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v23;
    long long v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 176);
  if (!v16)
  {
    sub_70B34(a1 + 168);
    goto LABEL_10;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
LABEL_11:
  *(unsigned char *)(a1 + 286) = *(unsigned char *)(a2 + 286);
  uint64_t v25 = *(int *)(a3 + 32);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_114D30);
}

uint64_t sub_114D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GiftFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_114DF4);
}

uint64_t sub_114DF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_114E9C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GiftFailEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11501CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GiftFailEvent.Model.CodingKeys()
{
  return &type metadata for GiftFailEvent.Model.CodingKeys;
}

unint64_t sub_115058()
{
  unint64_t result = qword_31D2D0;
  if (!qword_31D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D2D0);
  }
  return result;
}

unint64_t sub_1150B0()
{
  unint64_t result = qword_31D2D8;
  if (!qword_31D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D2D8);
  }
  return result;
}

unint64_t sub_115108()
{
  unint64_t result = qword_31D2E0;
  if (!qword_31D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D2E0);
  }
  return result;
}

uint64_t sub_11515C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C69614674666967 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::AltType_optional __swiftcall AltType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8738;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t AltType.rawValue.getter()
{
  uint64_t v1 = 0x65536E4965726F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65536E497478656ELL;
  }
}

uint64_t sub_115468(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2D278(*a1, *a2);
}

unint64_t sub_115478()
{
  unint64_t result = qword_31D2E8;
  if (!qword_31D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D2E8);
  }
  return result;
}

Swift::Int sub_1154CC()
{
  return sub_27E420();
}

uint64_t sub_115574()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_115608()
{
  return sub_27E420();
}

BookAnalytics::AltType_optional sub_1156AC(Swift::String *a1)
{
  return AltType.init(rawValue:)(*a1);
}

void sub_1156B8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC00000073656972;
  int v3 = *v1;
  uint64_t v4 = 0x65536E4965726F6DLL;
  unint64_t v5 = 0xE700000000000000;
  if (v3 == 1) {
    unint64_t v5 = 0xEC00000073656972;
  }
  else {
    uint64_t v4 = 0x6E776F6E6B6E75;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x65536E497478656ELL;
  }
  if (!v6) {
    unint64_t v2 = v5;
  }
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_11571C()
{
  return sub_27DED0();
}

uint64_t sub_11577C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for AltType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x115898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AltType()
{
  return &type metadata for AltType;
}

unint64_t sub_1158D0()
{
  unint64_t result = qword_31D2F0;
  if (!qword_31D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D2F0);
  }
  return result;
}

uint64_t sub_115924(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31D2F8, &enum case for SessionGroup.default(_:));
}

uint64_t static ToolTipEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158A8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D2F8, a1);
}

uint64_t sub_115984(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31D310, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ToolTipEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158B0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D310, a1);
}

uint64_t ToolTipEvent.toolTipData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31D328);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ToolTipEvent.toolTipData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31D328);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ToolTipEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolTipEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ToolTipEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31D3B0);
}

uint64_t ToolTipEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolTipEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ToolTipEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ToolTipEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolTipEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ToolTipEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolTipEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ToolTipEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ToolTipEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ToolTipEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t ToolTipEvent.Model.pageData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1F298(v2, v3, v4, v5);
}

uint64_t ToolTipEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToolTipEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ToolTipEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31D450);
}

uint64_t ToolTipEvent.Model.init(toolTipData:pageData:eventData:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v6;
  *(void *)(a4 + 24) = v7;
  long long v8 = a2[1];
  *(_OWORD *)(a4 + 32) = *a2;
  *(_OWORD *)(a4 + 48) = v8;
  uint64_t v9 = a4 + *(int *)(type metadata accessor for ToolTipEvent.Model(0) + 24);
  uint64_t v10 = sub_27D7C0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a3, v10);
}

uint64_t sub_115FCC()
{
  uint64_t v1 = 0x6174614465676170;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x447069546C6F6F74;
  }
}

uint64_t sub_116034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_117F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_11605C(uint64_t a1)
{
  unint64_t v2 = sub_1162D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_116098(uint64_t a1)
{
  unint64_t v2 = sub_1162D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ToolTipEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31D330);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1162D8();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  long long v15 = *v3;
  *(void *)&long long v16 = v9;
  *((void *)&v16 + 1) = v10;
  char v14 = 0;
  sub_11632C();
  sub_27E330();
  if (!v2)
  {
    long long v11 = v3[3];
    long long v15 = v3[2];
    long long v16 = v11;
    char v14 = 1;
    sub_1FEAC();
    sub_27E2C0();
    type metadata accessor for ToolTipEvent.Model(0);
    LOBYTE(v15) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1162D8()
{
  unint64_t result = qword_31D338;
  if (!qword_31D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D338);
  }
  return result;
}

unint64_t sub_11632C()
{
  unint64_t result = qword_31D340;
  if (!qword_31D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D340);
  }
  return result;
}

uint64_t ToolTipEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_31D348);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolTipEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  sub_5900(a1, v13);
  sub_1162D8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v25);
  }
  uint64_t v14 = v23;
  long long v15 = v12;
  uint64_t v20 = v6;
  char v28 = 0;
  sub_116714();
  uint64_t v16 = v24;
  sub_27E260();
  long long v17 = v27;
  *(_OWORD *)long long v15 = v26;
  *((_OWORD *)v15 + 1) = v17;
  char v28 = 1;
  sub_208EC();
  sub_27E1F0();
  long long v18 = v27;
  *((_OWORD *)v15 + 2) = v26;
  *((_OWORD *)v15 + 3) = v18;
  LOBYTE(v26) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v15[*(int *)(v10 + 24)], v20, v4);
  sub_116768((uint64_t)v15, v22);
  sub_5E94((uint64_t)v25);
  return sub_1167CC((uint64_t)v15);
}

unint64_t sub_116714()
{
  unint64_t result = qword_31D350;
  if (!qword_31D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D350);
  }
  return result;
}

uint64_t sub_116768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolTipEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1167CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolTipEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_116828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolTipEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_116840(void *a1)
{
  return ToolTipEvent.Model.encode(to:)(a1);
}

uint64_t sub_116858@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158A8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D2F8, a1);
}

uint64_t sub_116890@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158B0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D310, a1);
}

uint64_t sub_1168C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v4, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolTipEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31D328);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ToolTipEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1170B4);
}

uint64_t sub_1170B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D328);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A18);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ToolTipEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_117220);
}

uint64_t sub_117220(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31D328);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A18);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_117384()
{
  sub_1174F8(319, (unint64_t *)&unk_31D3C0, (void (*)(void))sub_116714, (void (*)(void))sub_11632C);
  if (v0 <= 0x3F)
  {
    sub_1174F8(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1174F8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ToolTipEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v10 = a2[5];
      a1[4] = a2[4];
      a1[5] = v10;
      a1[6] = a2[6];
      a1[7] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v12;
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_27D7C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t destroy for ToolTipEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ToolTipEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    a1[6] = a2[6];
    a1[7] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v10;
  }
  uint64_t v11 = *(int *)(a3 + 24);
  long long v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *assignWithCopy for ToolTipEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + 4;
  uint64_t v7 = a2 + 4;
  uint64_t v8 = a2[7];
  if (a1[7])
  {
    if (v8)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235F4((uint64_t)(a1 + 4));
      long long v9 = *((_OWORD *)a2 + 3);
      *uint64_t v6 = *v7;
      *((_OWORD *)a1 + 3) = v9;
    }
  }
  else if (v8)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *uint64_t v6 = *v7;
    *((_OWORD *)a1 + 3) = v10;
  }
  uint64_t v11 = *(int *)(a3 + 24);
  long long v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *initializeWithTake for ToolTipEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for ToolTipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 56);
  if (!v8)
  {
    sub_235F4(a1 + 32);
LABEL_5:
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolTipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_117B0C);
}

uint64_t sub_117B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ToolTipEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_117BD0);
}

uint64_t sub_117BD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_117C78()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ToolTipEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x117DE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolTipEvent.Model.CodingKeys()
{
  return &type metadata for ToolTipEvent.Model.CodingKeys;
}

unint64_t sub_117E20()
{
  unint64_t result = qword_31D490;
  if (!qword_31D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D490);
  }
  return result;
}

unint64_t sub_117E78()
{
  unint64_t result = qword_31D498;
  if (!qword_31D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D498);
  }
  return result;
}

unint64_t sub_117ED0()
{
  unint64_t result = qword_31D4A0;
  if (!qword_31D4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4A0);
  }
  return result;
}

uint64_t sub_117F24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x447069546C6F6F74 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1180A4()
{
  return 0xD000000000000011;
}

uint64_t sub_1180C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_118958(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1180EC(uint64_t a1)
{
  unint64_t v2 = sub_1184E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_118128(uint64_t a1)
{
  unint64_t v2 = sub_1184E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SuggestionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31D4A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1184E4();
  sub_27E440();
  char v10 = v7;
  sub_118538();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SuggestionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31D4C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1184E4();
  sub_27E430();
  if (!v2)
  {
    sub_11858C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_118414@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SuggestionData.init(from:)(a1, a2);
}

uint64_t sub_11842C(void *a1)
{
  return SuggestionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics14SuggestionDataV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = OdpSuggestionType.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == OdpSuggestionType.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1184E4()
{
  unint64_t result = qword_31D4B0;
  if (!qword_31D4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4B0);
  }
  return result;
}

unint64_t sub_118538()
{
  unint64_t result = qword_31D4B8;
  if (!qword_31D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4B8);
  }
  return result;
}

unint64_t sub_11858C()
{
  unint64_t result = qword_31D4C8;
  if (!qword_31D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OdpSuggestionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SuggestionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x118744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionData()
{
  return &type metadata for SuggestionData;
}

unsigned char *storeEnumTagSinglePayload for SuggestionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x118818);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionData.CodingKeys()
{
  return &type metadata for SuggestionData.CodingKeys;
}

unint64_t sub_118854()
{
  unint64_t result = qword_31D4D0;
  if (!qword_31D4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4D0);
  }
  return result;
}

unint64_t sub_1188AC()
{
  unint64_t result = qword_31D4D8;
  if (!qword_31D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4D8);
  }
  return result;
}

unint64_t sub_118904()
{
  unint64_t result = qword_31D4E0;
  if (!qword_31D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D4E0);
  }
  return result;
}

uint64_t sub_118958(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B0170)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t EventReporter.emitPurchaseAttemptEvent(using:contentData:purchaseData:upSellData:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  BOOL v7 = (void *)swift_allocObject();
  long long v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_118F14;
  *(void *)(v8 + 24) = v7;
  id v9 = a4;
  swift_retain();
  id v10 = a2;
  id v11 = a3;
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_118AC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_DF4A4((uint64_t)&v21);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  unsigned int v20 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v19 = *(void (**)(unint64_t))(v6 + 104);
  v19(v8 + v7);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID + 8);
  unint64_t v10 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
  if (v10 >= 3)
  {
    *(void *)&long long v21 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
    swift_bridgeObjectRetain();
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    char v11 = *(unsigned char *)(a3 + OBJC_IVAR___BAPurchaseData_isPreorder);
    uint64_t v12 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters);
    uint64_t v13 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters + 8);
    *(void *)&long long v21 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID);
    *((void *)&v21 + 1) = v9;
    LOBYTE(v22) = v10;
    BYTE1(v22) = v11;
    *((void *)&v22 + 1) = v12;
    uint64_t v23 = v13;
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_285930;
    ((void (*)(unint64_t, void, uint64_t))v19)(v14 + v7, v20, v5);
    sub_11B71C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a4)
    {
      id v15 = a4;
      sub_E2B38((uint64_t)&v21);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_285930;
      ((void (*)(unint64_t, void, uint64_t))v19)(v16 + v7, v20, v5);
      sub_C8050();
      sub_27D2E0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    type metadata accessor for PurchaseAttemptEvent(0);
    sub_11B920(&qword_31D568, (void (*)(uint64_t))type metadata accessor for PurchaseAttemptEvent);
    long long v21 = 0u;
    long long v22 = 0u;
    sub_27D2F0();
    return sub_ADCF8((uint64_t)&v21, (uint64_t *)&unk_320320);
  }
  return result;
}

uint64_t sub_118F14(uint64_t a1)
{
  return sub_118AC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t EventReporter.emitPurchaseSuccessEvent(using:contentData:purchaseData:upSellData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_119078, 0, 0);
}

uint64_t sub_119078()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_119174;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_119174()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C3404, 0, 0);
}

uint64_t sub_11928C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9 = sub_4E04(&qword_31AB40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a3;
  *((void *)v13 + 3) = a4;
  *((void *)v13 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12], (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_11B8A4;
  *(void *)(v14 + 24) = v13;
  id v15 = a5;
  swift_retain();
  id v16 = a3;
  id v17 = a4;
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_11943C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_DF4A4((uint64_t)&v22);
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  unint64_t v18 = v7;
  unsigned int v21 = enum case for DataEventTrait.onlyOnce(_:);
  unsigned int v20 = *(void (**)(unint64_t))(v6 + 104);
  v20(v8 + v7);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID + 8);
  unint64_t v10 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
  if (v10 >= 3)
  {
    *(void *)&long long v22 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
    swift_bridgeObjectRetain();
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    char v11 = *(unsigned char *)(a3 + OBJC_IVAR___BAPurchaseData_isPreorder);
    uint64_t v12 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters);
    uint64_t v13 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters + 8);
    *(void *)&long long v22 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID);
    *((void *)&v22 + 1) = v9;
    LOBYTE(v23) = v10;
    BYTE1(v23) = v11;
    *((void *)&v23 + 1) = v12;
    uint64_t v24 = v13;
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_285930;
    ((void (*)(unint64_t, void, uint64_t))v20)(v14 + v18, v21, v5);
    sub_11B71C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a4)
    {
      id v15 = a4;
      sub_E2B38((uint64_t)&v22);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_285930;
      ((void (*)(unint64_t, void, uint64_t))v20)(v16 + v18, v21, v5);
      sub_C8050();
      sub_27D2E0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    type metadata accessor for PurchaseSuccessEvent(0);
    sub_11B920(&qword_31D560, (void (*)(uint64_t))type metadata accessor for PurchaseSuccessEvent);
    long long v22 = 0u;
    long long v23 = 0u;
    sub_27D2F0();
    sub_ADCF8((uint64_t)&v22, (uint64_t *)&unk_320320);
    sub_4E04(&qword_31AB40);
    return sub_27DF10();
  }
  return result;
}

uint64_t sub_119A48(void *a1, void *a2, void *a3, void *a4, void *aBlock, void *a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v6[7] = _Block_copy(aBlock);
  id v12 = a4;
  id v13 = a6;
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  return _swift_task_switch(sub_119AFC, 0, 0);
}

uint64_t sub_119AFC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_119BF8;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_119BF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_119D10, 0, 0);
}

uint64_t sub_119D10()
{
  uint64_t v1 = *(void (***)(void))(v0 + 56);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 16);
  unsigned int v4 = *(void **)(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t EventReporter.emitPurchaseFailEvent(using:contentData:purchaseData:upSellData:failData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  return _swift_task_switch(sub_119DD8, 0, 0);
}

uint64_t sub_119DD8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  void *v5 = v0;
  v5[1] = sub_119EDC;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_119EDC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C3404, 0, 0);
}

uint64_t sub_119FF4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  v22[1] = a2;
  uint64_t v11 = sub_4E04(&qword_31AB40);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = a4;
  *((void *)v15 + 4) = a5;
  *((void *)v15 + 5) = a6;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_11B6A0;
  *(void *)(v16 + 24) = v15;
  id v17 = a6;
  swift_retain();
  id v18 = a3;
  id v19 = a4;
  id v20 = a5;
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_11A1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_DF4A4((uint64_t)&v34);
  sub_4E04(&qword_319FE0);
  uint64_t v6 = sub_27D380();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_285930;
  unsigned int v29 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v32 = v6;
  long long v33 = *(void (**)(unint64_t))(v7 + 104);
  v33(v9 + v8);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID + 8);
  unint64_t v11 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
  if (v11 >= 3)
  {
    *(void *)&long long v34 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseMethod);
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t result = sub_27E390();
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_purchaseAttemptID);
  char v13 = *(unsigned char *)(a3 + OBJC_IVAR___BAPurchaseData_isPreorder);
  uint64_t v14 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters);
  uint64_t v15 = *(void *)(a3 + OBJC_IVAR___BAPurchaseData_pricingParameters + 8);
  *(void *)&long long v34 = v12;
  *((void *)&v34 + 1) = v10;
  LOBYTE(v35) = v11;
  BYTE1(v35) = v13;
  *((void *)&v35 + 1) = v14;
  uint64_t v36 = v15;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_285930;
  uint64_t v17 = v6;
  ((void (*)(unint64_t, void, uint64_t))v33)(v16 + v8, v29, v6);
  sub_11B71C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_purchaseFailureReason);
  if (v18 >= 3)
  {
    *(void *)&long long v34 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_purchaseFailureReason);
    goto LABEL_11;
  }
  uint64_t v19 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorCode);
  if (v19) {
    unsigned int v20 = [*(id *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorCode) intValue];
  }
  else {
    unsigned int v20 = 0;
  }
  uint64_t v21 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorDescription);
  uint64_t v22 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorDescription + 8);
  uint64_t v23 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorDomain);
  uint64_t v24 = *(void *)(a4 + OBJC_IVAR___BAPurchaseFailData_errorDomain + 8);
  LOBYTE(v34) = v18;
  DWORD1(v34) = v20;
  BYTE8(v34) = v19 == 0;
  *(void *)&long long v35 = v21;
  *((void *)&v35 + 1) = v22;
  uint64_t v36 = v23;
  uint64_t v37 = v24;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_285930;
  ((void (*)(unint64_t, void, uint64_t))v33)(v25 + v8, v29, v17);
  sub_11B770();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a5)
  {
    id v26 = a5;
    sub_E2B38((uint64_t)&v34);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_285930;
    ((void (*)(unint64_t, void, uint64_t))v33)(v27 + v8, v29, v32);
    sub_C8050();
    sub_27D2E0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  type metadata accessor for PurchaseFailEvent(0);
  sub_11B920(&qword_31D558, (void (*)(uint64_t))type metadata accessor for PurchaseFailEvent);
  long long v34 = 0u;
  long long v35 = 0u;
  sub_27D2F0();
  sub_ADCF8((uint64_t)&v34, (uint64_t *)&unk_320320);
  sub_4E04(&qword_31AB40);
  return sub_27DF10();
}

uint64_t sub_11A934(void *a1, void *a2, void *a3, void *a4, void *a5, void *aBlock, void *a7)
{
  v7[6] = a5;
  v7[7] = a7;
  v7[4] = a3;
  v7[5] = a4;
  long long v7[2] = a1;
  v7[3] = a2;
  v7[8] = _Block_copy(aBlock);
  id v14 = a4;
  id v15 = a5;
  id v16 = a7;
  id v17 = a1;
  id v18 = a2;
  id v19 = a3;
  return _swift_task_switch(sub_11A9F8, 0, 0);
}

uint64_t sub_11A9F8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  void *v5 = v0;
  v5[1] = sub_11AAFC;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_11AAFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_11AC14, 0, 0);
}

uint64_t sub_11AC14()
{
  uint64_t v1 = *(void (***)(void))(v0 + 64);
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 16);

  v1[2](v1);
  _Block_release(v1);
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_11ACBC(uint64_t a1)
{
  return sub_11928C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_11ACCC()
{
  _Block_release(*(const void **)(v0 + 56));

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_11AD34()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)v0[7];
  unint64_t v8 = (void *)v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_AD880;
  uint64_t v10 = (uint64_t (*)(void *, void *, void *, void *, void *, void *, void *))((char *)&dword_31D4F8
                                                                                       + dword_31D4F8);
  return v10(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_11AE10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_C80E0;
  return v6();
}

uint64_t sub_11AEE0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_C80E0;
  return v7();
}

uint64_t sub_11AFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DF30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_27DF20();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_ADCF8(a1, &qword_320350);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_27DF00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_11B15C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_11B238;
  return v6(a1);
}

uint64_t sub_11B238()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_11B330()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_11B368(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_AD880;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_31D518 + dword_31D518);
  return v6(a1, v4);
}

uint64_t sub_11B420(uint64_t a1)
{
  return sub_119FF4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_11B430()
{
  _Block_release(*(const void **)(v0 + 48));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_11B490()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v7 = (void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_C80E0;
  uint64_t v9 = (uint64_t (*)(void *, void *, void *, void *, void *, void *))((char *)&dword_31D528 + dword_31D528);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_11B570()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_11B5B8()
{
  uint64_t v1 = sub_4E04(&qword_31AB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_11B6A0(uint64_t a1)
{
  sub_4E04(&qword_31AB40);
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = (void *)v1[5];

  return sub_11A1B4(a1, v3, v4, v5, v6);
}

unint64_t sub_11B71C()
{
  unint64_t result = qword_31D548;
  if (!qword_31D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D548);
  }
  return result;
}

unint64_t sub_11B770()
{
  unint64_t result = qword_31D550;
  if (!qword_31D550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D550);
  }
  return result;
}

uint64_t sub_11B7C4()
{
  uint64_t v1 = sub_4E04(&qword_31AB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_11B8A4(uint64_t a1)
{
  sub_4E04(&qword_31AB40);
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (void *)v1[4];

  return sub_11943C(a1, v3, v4, v5);
}

uint64_t sub_11B920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall CampaignData.init(campaignId:fCampaignToken:fAffiliateId:fItsCampaignToken:fItsCampaignGroup:)(BookAnalytics::CampaignData *__return_ptr retstr, Swift::String_optional campaignId, Swift::String_optional fCampaignToken, Swift::String_optional fAffiliateId, Swift::String_optional fItsCampaignToken, Swift::String_optional fItsCampaignGroup)
{
  retstr->campaignId = campaignId;
  retstr->fCampaignToken = fCampaignToken;
  retstr->fAffiliateId = fAffiliateId;
  retstr->fItsCampaignToken = fItsCampaignToken;
  retstr->fItsCampaignGroup = fItsCampaignGroup;
}

unint64_t sub_11B9A0(char a1)
{
  unint64_t result = 0x6E676961706D6163;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676961706D614366;
      break;
    case 2:
      unint64_t result = 0x61696C6966664166;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_11BA60()
{
  return sub_11B9A0(*v0);
}

uint64_t sub_11BA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_11C99C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_11BA90(uint64_t a1)
{
  unint64_t v2 = sub_11C380();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11BACC(uint64_t a1)
{
  unint64_t v2 = sub_11C380();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CampaignData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31D570);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  void v13[7] = v1[3];
  v13[8] = v7;
  uint64_t v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  uint64_t v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  uint64_t v10 = v1[8];
  v13[1] = v1[9];
  _OWORD v13[2] = v10;
  sub_5900(a1, a1[3]);
  sub_11C380();
  sub_27E440();
  char v18 = 0;
  uint64_t v11 = v13[9];
  sub_27E290();
  if (!v11)
  {
    char v17 = 1;
    sub_27E290();
    char v16 = 2;
    sub_27E290();
    char v15 = 3;
    sub_27E290();
    char v14 = 4;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CampaignData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31D580);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_11C380();
  sub_27E430();
  if (!v2)
  {
    char v40 = 0;
    uint64_t v10 = sub_27E1C0();
    uint64_t v12 = v11;
    char v39 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v33 = v13;
    uint64_t v34 = v10;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v35 = v15;
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    uint64_t v31 = v16;
    uint64_t v32 = a2;
    char v37 = 3;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_27E1C0();
    uint64_t v21 = v20;
    uint64_t v30 = v19;
    char v36 = 4;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_27E1C0();
    uint64_t v24 = v23;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v26 = v32;
    uint64_t v27 = v35;
    *uint64_t v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    _OWORD v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_11C0FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CampaignData.init(from:)(a1, a2);
}

uint64_t sub_11C114(void *a1)
{
  return CampaignData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12CampaignDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v15 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v16 = a2[6];
  uint64_t v18 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v20 = a2[9];
  if (!v3)
  {
    if (v12) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v12) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v12) {
    goto LABEL_8;
  }
  uint64_t v49 = a1[7];
  uint64_t v51 = a2[7];
  uint64_t v47 = a2[8];
  uint64_t v48 = a1[6];
  uint64_t v45 = a1[9];
  uint64_t v46 = a2[9];
  uint64_t v21 = a1[8];
  uint64_t v22 = a2[6];
  uint64_t v23 = a1[4];
  uint64_t v24 = a1[5];
  uint64_t v25 = a2[5];
  uint64_t v26 = a2[4];
  uint64_t v27 = a2[2];
  char v28 = sub_27E370();
  uint64_t v13 = v27;
  uint64_t v14 = v26;
  uint64_t v17 = v25;
  uint64_t v7 = v24;
  uint64_t v5 = v23;
  uint64_t v16 = v22;
  uint64_t v9 = v21;
  uint64_t v11 = v45;
  uint64_t v20 = v46;
  uint64_t v19 = v47;
  uint64_t v8 = v48;
  uint64_t v10 = v49;
  uint64_t v18 = v51;
  char v29 = v28;
  uint64_t result = 0;
  if (v29)
  {
LABEL_8:
    if (v6)
    {
      if (!v15) {
        return 0;
      }
      if (v4 != v13 || v6 != v15)
      {
        uint64_t v50 = v9;
        uint64_t v52 = v17;
        uint64_t v31 = v16;
        uint64_t v32 = v5;
        uint64_t v33 = v7;
        uint64_t v34 = v14;
        char v35 = sub_27E370();
        uint64_t v14 = v34;
        uint64_t v9 = v50;
        uint64_t v17 = v52;
        uint64_t v7 = v33;
        uint64_t v5 = v32;
        uint64_t v16 = v31;
        char v36 = v35;
        uint64_t result = 0;
        if ((v36 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v7)
    {
      if (!v17) {
        return 0;
      }
      if (v5 != v14 || v7 != v17)
      {
        uint64_t v37 = v18;
        uint64_t v38 = v9;
        uint64_t v39 = v16;
        char v40 = sub_27E370();
        uint64_t v16 = v39;
        uint64_t v9 = v38;
        uint64_t v18 = v37;
        char v41 = v40;
        uint64_t result = 0;
        if ((v41 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (!v18) {
        return 0;
      }
      if (v8 != v16 || v10 != v18)
      {
        uint64_t v42 = v9;
        char v43 = sub_27E370();
        uint64_t v9 = v42;
        char v44 = v43;
        uint64_t result = 0;
        if ((v44 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v11)
    {
      if (v20 && (v9 == v19 && v11 == v20 || (sub_27E370() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v20)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_11C380()
{
  unint64_t result = qword_31D578;
  if (!qword_31D578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D578);
  }
  return result;
}

unint64_t sub_11C3D8()
{
  unint64_t result = qword_31D588;
  if (!qword_31D588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D588);
  }
  return result;
}

unint64_t sub_11C430()
{
  unint64_t result = qword_31D590;
  if (!qword_31D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D590);
  }
  return result;
}

uint64_t destroy for CampaignData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CampaignData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CampaignData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CampaignData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for CampaignData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CampaignData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CampaignData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignData()
{
  return &type metadata for CampaignData;
}

unsigned char *storeEnumTagSinglePayload for CampaignData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11C85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignData.CodingKeys()
{
  return &type metadata for CampaignData.CodingKeys;
}

unint64_t sub_11C898()
{
  unint64_t result = qword_31D598;
  if (!qword_31D598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D598);
  }
  return result;
}

unint64_t sub_11C8F0()
{
  unint64_t result = qword_31D5A0;
  if (!qword_31D5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D5A0);
  }
  return result;
}

unint64_t sub_11C948()
{
  unint64_t result = qword_31D5A8;
  if (!qword_31D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D5A8);
  }
  return result;
}

uint64_t sub_11C99C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E676961706D6163 && a2 == 0xEA00000000006449;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676961706D614366 && a2 == 0xEE006E656B6F546ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61696C6966664166 && a2 == 0xEC00000064496574 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B03A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B03C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_11CBF8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31D5B0, &enum case for SessionGroup.default(_:));
}

uint64_t static PredictiveSearchSuggestionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158B8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D5B0, a1);
}

uint64_t sub_11CC58(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31D5C8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PredictiveSearchSuggestionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158C0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D5C8, a1);
}

uint64_t PredictiveSearchSuggestionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_315DE0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t PredictiveSearchSuggestionEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_11CD9C()
{
  return 0x746144746E657665;
}

uint64_t sub_11CDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_11CE5C(uint64_t a1)
{
  unint64_t v2 = sub_11D034();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11CE98(uint64_t a1)
{
  unint64_t v2 = sub_11D034();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PredictiveSearchSuggestionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31D5E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_11D034();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_11D034()
{
  unint64_t result = qword_31D5E8;
  if (!qword_31D5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D5E8);
  }
  return result;
}

uint64_t PredictiveSearchSuggestionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31D5F0);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PredictiveSearchSuggestionEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_11D034();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_11D314((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for PredictiveSearchSuggestionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31D6E0);
}

uint64_t sub_11D314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PredictiveSearchSuggestionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_11D378@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PredictiveSearchSuggestionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_11D390@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158B8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D5B0, a1);
}

uint64_t sub_11D3C8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158C0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D5C8, a1);
}

uint64_t initializeBufferWithCopyOfBuffer for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PredictiveSearchSuggestionEvent(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_315DE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11D68C);
}

uint64_t sub_11D68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PredictiveSearchSuggestionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11D710);
}

uint64_t sub_11D710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PredictiveSearchSuggestionEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31D650);
}

uint64_t sub_11D7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_11DB38(a1, a2, a3, (uint64_t (*)(uint64_t))sub_6DA0);
}

uint64_t initializeBufferWithCopyOfBuffer for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PredictiveSearchSuggestionEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_27D7C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11DA30);
}

uint64_t sub_11DA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PredictiveSearchSuggestionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11DAB0);
}

uint64_t sub_11DAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_11DB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_11DB38(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for EventData);
}

uint64_t sub_11DB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PredictiveSearchSuggestionEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x11DC64);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PredictiveSearchSuggestionEvent.Model.CodingKeys()
{
  return &type metadata for PredictiveSearchSuggestionEvent.Model.CodingKeys;
}

unint64_t sub_11DCA0()
{
  unint64_t result = qword_31D718;
  if (!qword_31D718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D718);
  }
  return result;
}

unint64_t sub_11DCF8()
{
  unint64_t result = qword_31D720;
  if (!qword_31D720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D720);
  }
  return result;
}

unint64_t sub_11DD50()
{
  unint64_t result = qword_31D728;
  if (!qword_31D728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D728);
  }
  return result;
}

uint64_t sub_11DDA4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31D730, &enum case for SessionGroup.default(_:));
}

uint64_t static ContentDetailsViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158C8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D730, a1);
}

uint64_t sub_11DE04(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31D748, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ContentDetailsViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158D0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D748, a1);
}

uint64_t ContentDetailsViewEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentDetailsViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31D7D8);
}

uint64_t ContentDetailsViewEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.maxScrollDepthData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31D760);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.maxScrollDepthData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31D760);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.maxScrollDepthData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.altContentTypeExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184C8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.altContentTypeExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184C8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.altContentTypeExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.prevAltContentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.prevAltContentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.prevAltContentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.flowcaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.flowcaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_317418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.flowcaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.onDevicePersonalizationPropertyData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.onDevicePersonalizationPropertyData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_316F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.onDevicePersonalizationPropertyData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 64);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.uppParentContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 64);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.uppParentContentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.dealsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 68);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.dealsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 68);
  uint64_t v4 = sub_4E04(&qword_317420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.dealsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 72);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 72);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 76);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent(0) + 76);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ContentDetailsViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentDetailsViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ContentDetailsViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  uint64_t v16 = enum case for EventProperty.required<A>(_:);
  uint64_t v17 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  uint64_t v27 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  uint64_t v29 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v2, v29);
  uint64_t v30 = a1 + v4[17];
  uint64_t v31 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v30, v2, v31);
  uint64_t v32 = a1 + v4[18];
  uint64_t v33 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v32, v16, v33);
  uint64_t v34 = a1 + v4[19];
  uint64_t v35 = sub_4E04(&qword_315DE8);
  char v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104);

  return v36(v34, v16, v35);
}

uint64_t ReadingSettingsContextualViewEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = v1[10];
  uint64_t v13 = v1[11];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

void ContentDetailsViewEvent.Model.maxScrollDepthData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 292);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 288);
  *(unsigned char *)(a1 + 4) = v2;
}

uint64_t ContentDetailsViewEvent.Model.altContentTypeExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 304);
  uint64_t v4 = *(void *)(v1 + 312);
  uint64_t v5 = *(void *)(v1 + 320);
  uint64_t v6 = *(void *)(v1 + 328);
  uint64_t v7 = *(void *)(v1 + 336);
  uint64_t v8 = *(void *)(v1 + 344);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(v1 + 352);
  return sub_6B638(v2, v3);
}

void ContentDetailsViewEvent.Model.prevAltContentExposureData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 353);
}

uint64_t ContentDetailsViewEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 472);
  long long v3 = *(_OWORD *)(v1 + 440);
  long long v19 = *(_OWORD *)(v1 + 456);
  long long v20 = v2;
  long long v4 = *(_OWORD *)(v1 + 472);
  long long v21 = *(_OWORD *)(v1 + 488);
  long long v5 = *(_OWORD *)(v1 + 408);
  long long v7 = *(_OWORD *)(v1 + 376);
  long long v15 = *(_OWORD *)(v1 + 392);
  long long v6 = v15;
  long long v16 = v5;
  long long v8 = *(_OWORD *)(v1 + 408);
  long long v9 = *(_OWORD *)(v1 + 440);
  long long v17 = *(_OWORD *)(v1 + 424);
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = *(_OWORD *)(v1 + 376);
  v14[0] = *(_OWORD *)(v1 + 360);
  long long v12 = v14[0];
  v14[1] = v11;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 488);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v3;
  uint64_t v22 = *(void *)(v1 + 504);
  *(void *)(a1 + 144) = *(void *)(v1 + 504);
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v7;
  return sub_35DC8((uint64_t)v14);
}

uint64_t ContentDetailsViewEvent.Model.flowcaseData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[64];
  uint64_t v3 = v1[65];
  uint64_t v4 = v1[66];
  uint64_t v5 = v1[67];
  uint64_t v6 = v1[68];
  uint64_t v7 = v1[69];
  uint64_t v8 = v1[70];
  uint64_t v9 = v1[71];
  uint64_t v10 = v1[72];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_D4230(v2, v3);
}

uint64_t ContentDetailsViewEvent.Model.pageData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[73];
  uint64_t v3 = v1[74];
  uint64_t v4 = v1[75];
  uint64_t v5 = v1[76];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1F298(v2, v3, v4, v5);
}

uint64_t ContentDetailsViewEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 632);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 616);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

__n128 ContentDetailsViewEvent.Model.onDevicePersonalizationPropertyData.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[41].n128_u64[0];
  unsigned __int8 v3 = v1[41].n128_u8[8];
  __n128 result = v1[40];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

void ContentDetailsViewEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 665);
}

uint64_t ContentDetailsViewEvent.Model.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 672);
  uint64_t v3 = *(void *)(v1 + 680);
  uint64_t v4 = *(void *)(v1 + 688);
  uint64_t v5 = *(void *)(v1 + 696);
  uint64_t v6 = *(void *)(v1 + 704);
  uint64_t v7 = *(void *)(v1 + 712);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v1 + 720);
  return sub_6B9C0(v2, v3);
}

uint64_t ContentDetailsViewEvent.Model.dealsData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[91];
  uint64_t v3 = v1[92];
  uint64_t v4 = v1[93];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_40A5C(v2, v3, v4);
}

uint64_t ContentDetailsViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent.Model(0) + 72);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ContentDetailsViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31D8A8);
}

uint64_t ContentDetailsViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContentDetailsViewEvent.Model(0) + 76);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContentDetailsViewEvent.Model.init(contentData:contentStoreData:contentExposureData:maxScrollDepthData:altContentTypeExposureData:prevAltContentExposureData:linkData:flowcaseData:pageData:upSellData:onDevicePersonalizationPropertyData:suggestionData:uppParentContentData:dealsData:eventData:timedData:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, _WORD *a6@<X5>, long long *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, long long *a10, long long *a11, long long *a12, unsigned char *a13, long long *a14, long long *a15, uint64_t a16, uint64_t a17)
{
  long long v18 = *a1;
  long long v19 = a1[1];
  long long v20 = a1[2];
  long long v21 = a1[3];
  long long v22 = a1[4];
  long long v23 = a1[5];
  *(unsigned char *)(a9 + 164) = *((unsigned char *)a2 + 68);
  long long v24 = *a2;
  long long v25 = a2[1];
  long long v26 = a2[2];
  long long v27 = a2[3];
  *(_DWORD *)(a9 + 160) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a9 + 280) = *((_DWORD *)a3 + 28);
  long long v29 = *a3;
  long long v28 = a3[1];
  long long v30 = a3[2];
  long long v31 = a3[3];
  long long v32 = a3[4];
  long long v33 = a3[5];
  long long v34 = a3[6];
  *(_WORD *)(a9 + 284) = *((_WORD *)a3 + 58);
  *(_DWORD *)(a9 + 288) = *(_DWORD *)a4;
  *(unsigned char *)(a9 + 292) = *(unsigned char *)(a4 + 4);
  *(void *)(a9 + 344) = *((void *)a5 + 6);
  long long v35 = *a5;
  long long v36 = a5[1];
  long long v37 = a5[2];
  *(unsigned char *)(a9 + 352) = *((unsigned char *)a5 + 56);
  *(_WORD *)(a9 + 353) = *a6;
  long long v38 = *a7;
  long long v39 = a7[1];
  long long v40 = a7[2];
  long long v41 = a7[3];
  long long v42 = a7[4];
  long long v43 = a7[5];
  long long v44 = a7[6];
  long long v45 = a7[7];
  long long v46 = a7[8];
  *(void *)(a9 + 504) = *((void *)a7 + 18);
  *(_OWORD *)(a9 + 360) = v38;
  *(_OWORD *)(a9 + 376) = v39;
  *(_OWORD *)(a9 + 424) = v42;
  *(_OWORD *)(a9 + 440) = v43;
  *(_OWORD *)(a9 + 392) = v40;
  *(_OWORD *)(a9 + 408) = v41;
  *(_OWORD *)(a9 + 472) = v45;
  *(_OWORD *)(a9 + 488) = v46;
  *(_OWORD *)(a9 + 456) = v44;
  long long v47 = *a10;
  long long v48 = a10[1];
  long long v49 = *a8;
  long long v50 = a8[1];
  long long v51 = a8[2];
  long long v52 = a8[3];
  *(void *)(a9 + 576) = *((void *)a8 + 8);
  *(_OWORD *)(a9 + 264) = v34;
  *(_OWORD *)(a9 + 296) = v35;
  *(_OWORD *)(a9 + 312) = v36;
  *(_OWORD *)(a9 + 328) = v37;
  *(_OWORD *)(a9 + 584) = v47;
  *(_OWORD *)(a9 + 600) = v48;
  long long v53 = *a11;
  *(void *)(a9 + 632) = *((void *)a11 + 2);
  *(void *)(a9 + 656) = *((void *)a12 + 2);
  long long v54 = *a12;
  *(unsigned char *)(a9 + 664) = *((unsigned char *)a12 + 24);
  *(unsigned char *)(a9 + 665) = *a13;
  long long v55 = *a15;
  *(_OWORD *)(a9 + 616) = v53;
  *(_OWORD *)(a9 + 728) = v55;
  long long v56 = *a14;
  long long v57 = a14[1];
  long long v58 = a14[2];
  *(unsigned char *)(a9 + 720) = *((unsigned char *)a14 + 48);
  *(void *)(a9 + 744) = *((void *)a15 + 2);
  *(_OWORD *)a9 = v18;
  *(_OWORD *)(a9 + 16) = v19;
  *(_OWORD *)(a9 + 32) = v20;
  *(_OWORD *)(a9 + 48) = v21;
  *(_OWORD *)(a9 + 64) = v22;
  *(_OWORD *)(a9 + 80) = v23;
  *(_OWORD *)(a9 + 96) = v24;
  *(_OWORD *)(a9 + 112) = v25;
  *(_OWORD *)(a9 + 128) = v26;
  *(_OWORD *)(a9 + 144) = v27;
  *(_OWORD *)(a9 + 168) = v29;
  *(_OWORD *)(a9 + 184) = v28;
  *(_OWORD *)(a9 + 200) = v30;
  *(_OWORD *)(a9 + 216) = v31;
  *(_OWORD *)(a9 + 232) = v32;
  *(_OWORD *)(a9 + 248) = v33;
  *(_OWORD *)(a9 + 512) = v49;
  *(_OWORD *)(a9 + 528) = v50;
  *(_OWORD *)(a9 + 544) = v51;
  *(_OWORD *)(a9 + 560) = v52;
  *(_OWORD *)(a9 + 640) = v54;
  *(_OWORD *)(a9 + 672) = v56;
  *(_OWORD *)(a9 + 688) = v57;
  *(_OWORD *)(a9 + 704) = v58;
  uint64_t v59 = type metadata accessor for ContentDetailsViewEvent.Model(0);
  uint64_t v60 = a9 + *(int *)(v59 + 72);
  uint64_t v61 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v60, a16, v61);
  uint64_t v62 = a9 + *(int *)(v59 + 76);
  uint64_t v63 = sub_27D7F0();
  long long v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32);

  return v64(v62, a17, v63);
}

uint64_t sub_11FBB8(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      return 0xD000000000000010;
    case 2:
      return 0xD000000000000013;
    case 3:
      return 0xD000000000000012;
    case 4:
    case 5:
      return 0xD00000000000001ALL;
    case 6:
      unsigned int v3 = 1802398060;
      return v3 | 0x6174614400000000;
    case 7:
      return 0x65736163776F6C66;
    case 8:
      unsigned int v3 = 1701273968;
      return v3 | 0x6174614400000000;
    case 9:
      return 0x61446C6C65537075;
    case 10:
      return 0xD000000000000023;
    case 11:
      return 0x6974736567677573;
    case 12:
      return 0xD000000000000014;
    case 13:
      uint64_t v4 = 0x44736C616564;
      goto LABEL_18;
    case 14:
      uint64_t v4 = 0x44746E657665;
      goto LABEL_18;
    case 15:
      uint64_t v4 = 0x4464656D6974;
LABEL_18:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_11FDA8()
{
  return sub_11FBB8(*v0);
}

uint64_t sub_11FDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_12737C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_11FDD8(uint64_t a1)
{
  unint64_t v2 = sub_1204D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_11FE14(uint64_t a1)
{
  unint64_t v2 = sub_1204D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentDetailsViewEvent.Model.encode(to:)(void *a1)
{
  unsigned int v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31D768);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1204D0();
  sub_27E440();
  long long v9 = v3[1];
  long long v42 = *v3;
  long long v43 = v9;
  long long v10 = v3[3];
  long long v44 = v3[2];
  long long v45 = v10;
  long long v11 = v3[5];
  long long v46 = v3[4];
  long long v47 = v11;
  LOBYTE(v53) = 0;
  sub_1A1D4();
  sub_27E2C0();
  if (!v2)
  {
    int v12 = *((_DWORD *)v3 + 40);
    char v13 = *((unsigned char *)v3 + 164);
    long long v14 = v3[7];
    long long v42 = v3[6];
    long long v43 = v14;
    long long v15 = v3[9];
    long long v44 = v3[8];
    long long v45 = v15;
    BYTE4(v46) = v13;
    LODWORD(v46) = v12;
    LOBYTE(v53) = 1;
    sub_6C400();
    sub_27E2C0();
    int v16 = *((_DWORD *)v3 + 70);
    __int16 v17 = *((_WORD *)v3 + 142);
    long long v18 = *(long long *)((char *)v3 + 184);
    long long v42 = *(long long *)((char *)v3 + 168);
    long long v43 = v18;
    long long v19 = *(long long *)((char *)v3 + 216);
    long long v44 = *(long long *)((char *)v3 + 200);
    long long v45 = v19;
    long long v20 = *(long long *)((char *)v3 + 248);
    long long v46 = *(long long *)((char *)v3 + 232);
    long long v47 = v20;
    long long v48 = *(long long *)((char *)v3 + 264);
    WORD2(v49) = v17;
    LODWORD(v49) = v16;
    LOBYTE(v53) = 2;
    sub_6C454();
    sub_27E2C0();
    char v21 = *((unsigned char *)v3 + 292);
    LODWORD(v42) = *((_DWORD *)v3 + 72);
    BYTE4(v42) = v21;
    LOBYTE(v53) = 3;
    sub_AE604();
    sub_27E2C0();
    uint64_t v22 = *((void *)v3 + 43);
    char v23 = *((unsigned char *)v3 + 352);
    long long v24 = *(long long *)((char *)v3 + 312);
    long long v42 = *(long long *)((char *)v3 + 296);
    long long v43 = v24;
    long long v44 = *(long long *)((char *)v3 + 328);
    *(void *)&long long v45 = v22;
    BYTE8(v45) = v23;
    LOBYTE(v53) = 4;
    sub_6C3AC();
    sub_27E2C0();
    __int16 v53 = *(_WORD *)((char *)v3 + 353);
    char v52 = 5;
    sub_6C4A8();
    sub_27E2C0();
    uint64_t v51 = *((void *)v3 + 63);
    long long v25 = *(long long *)((char *)v3 + 472);
    long long v48 = *(long long *)((char *)v3 + 456);
    long long v49 = v25;
    long long v50 = *(long long *)((char *)v3 + 488);
    long long v26 = *(long long *)((char *)v3 + 408);
    long long v44 = *(long long *)((char *)v3 + 392);
    long long v45 = v26;
    long long v27 = *(long long *)((char *)v3 + 440);
    long long v46 = *(long long *)((char *)v3 + 424);
    long long v47 = v27;
    long long v28 = *(long long *)((char *)v3 + 376);
    long long v42 = *(long long *)((char *)v3 + 360);
    long long v43 = v28;
    char v41 = 6;
    sub_1FF00();
    sub_27E330();
    uint64_t v29 = *((void *)v3 + 72);
    long long v30 = v3[33];
    long long v42 = v3[32];
    long long v43 = v30;
    long long v31 = v3[35];
    long long v44 = v3[34];
    long long v45 = v31;
    *(void *)&long long v46 = v29;
    char v41 = 7;
    sub_26F98();
    sub_27E2C0();
    long long v32 = *(long long *)((char *)v3 + 600);
    long long v42 = *(long long *)((char *)v3 + 584);
    long long v43 = v32;
    char v41 = 8;
    sub_1FEAC();
    sub_27E2C0();
    uint64_t v33 = *((void *)v3 + 79);
    long long v42 = *(long long *)((char *)v3 + 616);
    *(void *)&long long v43 = v33;
    char v41 = 9;
    sub_36A74();
    sub_27E2C0();
    uint64_t v34 = *((void *)v3 + 82);
    char v35 = *((unsigned char *)v3 + 664);
    long long v42 = v3[40];
    *(void *)&long long v43 = v34;
    BYTE8(v43) = v35;
    char v41 = 10;
    sub_36AC8();
    sub_27E2C0();
    LOBYTE(v42) = *((unsigned char *)v3 + 665);
    char v41 = 11;
    sub_36B1C();
    sub_27E2C0();
    char v36 = *((unsigned char *)v3 + 720);
    long long v37 = v3[43];
    long long v42 = v3[42];
    long long v43 = v37;
    long long v44 = v3[44];
    LOBYTE(v45) = v36;
    char v41 = 12;
    sub_6C4FC();
    sub_27E2C0();
    uint64_t v38 = *((void *)v3 + 93);
    long long v42 = *(long long *)((char *)v3 + 728);
    *(void *)&long long v43 = v38;
    char v41 = 13;
    sub_41530();
    sub_27E2C0();
    type metadata accessor for ContentDetailsViewEvent.Model(0);
    LOBYTE(v42) = 14;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v42) = 15;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1204D0()
{
  unint64_t result = qword_31D770;
  if (!qword_31D770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D770);
  }
  return result;
}

uint64_t ContentDetailsViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v77 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_27D7C0();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_4E04(&qword_31D778);
  uint64_t v8 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  long long v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ContentDetailsViewEvent.Model(0);
  __chkstk_darwin(v80);
  int v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v12 + 264;
  uint64_t v13 = a1[3];
  uint64_t v85 = (uint64_t)a1;
  sub_5900(a1, v13);
  sub_1204D0();
  uint64_t v79 = v10;
  uint64_t v14 = v103;
  sub_27E430();
  if (v14)
  {
    uint64_t v103 = v14;
    LODWORD(v84) = 0;
    unsigned int v16 = 0;
  }
  else
  {
    uint64_t v76 = v7;
    long long v74 = v5;
    uint64_t v75 = v3;
    uint64_t v15 = v8;
    LOBYTE(v87) = 0;
    sub_1A98C();
    sub_27E1F0();
    long long v32 = v94;
    *(_OWORD *)int v12 = v93;
    *((_OWORD *)v12 + 1) = v32;
    long long v33 = v96;
    long long v34 = v97;
    *((_OWORD *)v12 + 2) = v95;
    *((_OWORD *)v12 + 3) = v33;
    long long v35 = v98;
    *((_OWORD *)v12 + 4) = v34;
    *((_OWORD *)v12 + 5) = v35;
    LOBYTE(v87) = 1;
    sub_6D068();
    sub_27E1F0();
    int v36 = v97;
    char v37 = BYTE4(v97);
    long long v38 = v94;
    *((_OWORD *)v12 + 6) = v93;
    *((_OWORD *)v12 + 7) = v38;
    long long v39 = v96;
    *((_OWORD *)v12 + 8) = v95;
    *((_OWORD *)v12 + 9) = v39;
    v12[164] = v37;
    *((_DWORD *)v12 + 40) = v36;
    LOBYTE(v87) = 2;
    sub_6D0BC();
    sub_27E1F0();
    long long v40 = v94;
    *(_OWORD *)(v12 + 168) = v93;
    *(_OWORD *)(v12 + 184) = v40;
    *(_OWORD *)(v12 + 200) = v95;
    long long v41 = v97;
    *(_OWORD *)(v12 + 216) = v96;
    *(_OWORD *)(v12 + 232) = v41;
    long long v42 = v99;
    *(_OWORD *)(v12 + 248) = v98;
    int v43 = v100;
    __int16 v44 = WORD2(v100);
    long long v45 = v83;
    *uint64_t v83 = v42;
    *((_WORD *)v45 + 10) = v44;
    *((_DWORD *)v45 + 4) = v43;
    LOBYTE(v87) = 3;
    sub_AE5AC();
    sub_27E1F0();
    char v46 = BYTE4(v93);
    *((_DWORD *)v12 + 72) = v93;
    *((unsigned char *)v45 + 28) = v46;
    LOBYTE(v87) = 4;
    sub_6D014();
    sub_27E1F0();
    uint64_t v47 = v96;
    char v48 = BYTE8(v96);
    long long v49 = v94;
    v45[2] = v93;
    v45[3] = v49;
    v45[4] = v95;
    *((void *)v12 + 43) = v47;
    v12[352] = v48;
    LOBYTE(v87) = 5;
    sub_6D110();
    sub_27E1F0();
    *(_WORD *)((char *)v45 + 89) = v93;
    char v92 = 6;
    sub_20940();
    sub_27E260();
    long long v50 = v100;
    long long v51 = v101;
    long long v52 = v98;
    *(_OWORD *)(v12 + 456) = v99;
    *(_OWORD *)(v12 + 472) = v50;
    *(_OWORD *)(v12 + 488) = v51;
    long long v53 = v96;
    long long v54 = v97;
    *(_OWORD *)(v12 + 392) = v95;
    *(_OWORD *)(v12 + 408) = v53;
    *((void *)v12 + 63) = v102;
    *(_OWORD *)(v12 + 424) = v54;
    *(_OWORD *)(v12 + 440) = v52;
    long long v55 = v94;
    *(_OWORD *)(v12 + 360) = v93;
    *(_OWORD *)(v12 + 376) = v55;
    char v86 = 7;
    sub_26F40();
    sub_27E1F0();
    uint64_t v56 = v91;
    long long v57 = v88;
    *((_OWORD *)v12 + 32) = v87;
    *((_OWORD *)v12 + 33) = v57;
    long long v58 = v90;
    *((_OWORD *)v12 + 34) = v89;
    *((_OWORD *)v12 + 35) = v58;
    *((void *)v12 + 72) = v56;
    char v86 = 8;
    sub_208EC();
    sub_27E1F0();
    long long v59 = v88;
    uint64_t v60 = v83;
    v83[20] = v87;
    v60[21] = v59;
    char v86 = 9;
    sub_37744();
    sub_27E1F0();
    uint64_t v103 = 0;
    uint64_t v61 = v88;
    *(_OWORD *)(v12 + 616) = v87;
    *((void *)v12 + 79) = v61;
    char v86 = 10;
    sub_37798();
    uint64_t v62 = v103;
    sub_27E1F0();
    uint64_t v103 = v62;
    if (!v62)
    {
      uint64_t v63 = v88;
      char v64 = BYTE8(v88);
      *((_OWORD *)v12 + 40) = v87;
      *((void *)v12 + 82) = v63;
      v12[664] = v64;
      char v86 = 11;
      sub_377EC();
      uint64_t v65 = v103;
      sub_27E1F0();
      uint64_t v103 = v65;
      if (!v65)
      {
        v12[665] = v87;
        char v86 = 12;
        sub_6D164();
        uint64_t v66 = v103;
        sub_27E1F0();
        uint64_t v103 = v66;
        if (v66)
        {
          (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
          sub_5E94(v85);
          int v24 = 0;
          int v23 = 0;
          LODWORD(v85) = 0;
          LOBYTE(v31) = 1;
          int v18 = 1;
          int v19 = 1;
          int v20 = 1;
          int v21 = 1;
          int v22 = 1;
          LODWORD(v84) = 1;
        }
        else
        {
          char v67 = v90;
          long long v68 = v88;
          *((_OWORD *)v12 + 42) = v87;
          *((_OWORD *)v12 + 43) = v68;
          *((_OWORD *)v12 + 44) = v89;
          v12[720] = v67;
          char v86 = 13;
          sub_420DC();
          uint64_t v69 = v103;
          sub_27E1F0();
          uint64_t v103 = v69;
          if (v69)
          {
            (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
            sub_5E94(v85);
            int v23 = 0;
            LODWORD(v85) = 0;
            LOBYTE(v31) = 1;
            int v18 = 1;
            int v19 = 1;
            int v20 = 1;
            int v21 = 1;
            int v22 = 1;
            LODWORD(v84) = 1;
            int v24 = 1;
          }
          else
          {
            uint64_t v70 = v88;
            *(_OWORD *)(v12 + 728) = v87;
            *((void *)v12 + 93) = v70;
            LOBYTE(v87) = 14;
            sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
            uint64_t v71 = v103;
            sub_27E260();
            uint64_t v103 = v71;
            if (v71)
            {
              (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
              sub_5E94(v85);
              LODWORD(v85) = 0;
              LOBYTE(v31) = 1;
              int v18 = 1;
              int v19 = 1;
              int v20 = 1;
              int v21 = 1;
              int v22 = 1;
              LODWORD(v84) = 1;
              int v24 = 1;
              int v23 = 1;
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v12[*(int *)(v80 + 72)], v76, v82);
              LOBYTE(v87) = 15;
              sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
              uint64_t v72 = v103;
              sub_27E260();
              uint64_t v103 = v72;
              if (!v72)
              {
                (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
                (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v12[*(int *)(v80 + 76)], v74, v75);
                sub_121464((uint64_t)v12, v78);
                sub_5E94(v85);
                return sub_1214C8((uint64_t)v12);
              }
              (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
              sub_5E94(v85);
              LOBYTE(v31) = 1;
              int v18 = 1;
              int v19 = 1;
              int v20 = 1;
              int v21 = 1;
              int v22 = 1;
              LODWORD(v84) = 1;
              int v24 = 1;
              int v23 = 1;
              LODWORD(v85) = 1;
            }
          }
        }
        goto LABEL_17;
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v79, v84);
    unsigned int v16 = 983;
    LODWORD(v84) = 1;
  }
  uint64_t result = sub_5E94(v85);
  int v18 = (v16 >> 2) & 1;
  int v19 = (v16 >> 4) & 1;
  int v20 = (v16 >> 6) & 1;
  int v21 = (v16 >> 7) & 1;
  int v22 = (v16 >> 8) & 1;
  if ((v16 & 1) == 0)
  {
    LODWORD(v85) = 0;
    int v23 = 0;
    int v24 = 0;
    if ((v16 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  int v24 = 0;
  int v23 = 0;
  LODWORD(v85) = 0;
  int v31 = (v16 >> 1) & 1;
LABEL_17:
  uint64_t result = sub_608BC(*(void *)v12, *((void *)v12 + 1));
  if ((v31 & 1) == 0)
  {
LABEL_6:
    if (v18) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = sub_6CF60(*((void *)v12 + 12), *((void *)v12 + 13), *((void *)v12 + 14), *((void *)v12 + 15), *((void *)v12 + 16), *((void *)v12 + 17));
  if (v18)
  {
LABEL_7:
    uint64_t result = sub_6CEDC(*((void *)v12 + 21), *((void *)v12 + 22));
    if ((v19 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  if (!v19)
  {
LABEL_8:
    if (v20) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_6CFC4(*((void *)v12 + 37), *((void *)v12 + 38));
  if (v20)
  {
LABEL_9:
    long long v25 = *(_OWORD *)(v12 + 456);
    long long v26 = *(_OWORD *)(v12 + 488);
    long long v100 = *(_OWORD *)(v12 + 472);
    long long v101 = v26;
    long long v27 = *(_OWORD *)(v12 + 392);
    long long v28 = *(_OWORD *)(v12 + 424);
    long long v29 = *(_OWORD *)(v12 + 440);
    long long v96 = *(_OWORD *)(v12 + 408);
    long long v97 = v28;
    uint64_t v102 = *((void *)v12 + 63);
    long long v98 = v29;
    long long v99 = v25;
    long long v30 = *(_OWORD *)(v12 + 376);
    long long v93 = *(_OWORD *)(v12 + 360);
    long long v94 = v30;
    long long v95 = v27;
    uint64_t result = sub_37644((uint64_t)&v93);
    if ((v21 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (!v21)
  {
LABEL_10:
    if (v22) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = sub_D6520(*((void *)v12 + 64), *((void *)v12 + 65));
  if (v22)
  {
LABEL_11:
    uint64_t result = sub_2077C(*((void *)v12 + 73), *((void *)v12 + 74), *((void *)v12 + 75), *((void *)v12 + 76));
    if ((v84 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  if (!v84)
  {
LABEL_12:
    if (v24) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_13:
    uint64_t result = sub_6CE8C(*((void *)v12 + 84), *((void *)v12 + 85));
    if ((v23 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_26:
    uint64_t result = sub_42084(*((void *)v12 + 91), *((void *)v12 + 92), *((void *)v12 + 93));
    if ((v85 & 1) == 0) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(&v12[*(int *)(v80 + 72)], v82);
  }
LABEL_25:
  if (v23) {
    goto LABEL_26;
  }
LABEL_14:
  if (!v85) {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(&v12[*(int *)(v80 + 72)], v82);
}

uint64_t sub_121464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1214C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_121524@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContentDetailsViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_12153C(void *a1)
{
  return ContentDetailsViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_121554@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158C8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D730, a1);
}

uint64_t sub_12158C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158D0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D748, a1);
}

uint64_t sub_1215C4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  uint64_t v17 = enum case for EventProperty.required<A>(_:);
  uint64_t v18 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  uint64_t v28 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  uint64_t v30 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v4, v30);
  uint64_t v31 = a2 + a1[17];
  uint64_t v32 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v31, v4, v32);
  uint64_t v33 = a2 + a1[18];
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v33, v17, v34);
  uint64_t v35 = a2 + a1[19];
  uint64_t v36 = sub_4E04(&qword_315DE8);
  char v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104);

  return v37(v35, v17, v36);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentDetailsViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v68 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31D760);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_3184C8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_3184E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_317418);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    long long v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    long long v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_316F80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    long long v50 = (char *)a2 + v48;
    uint64_t v51 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    long long v53 = (char *)a1 + v52;
    long long v54 = (char *)a2 + v52;
    uint64_t v55 = sub_4E04(&qword_3184F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    long long v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    uint64_t v59 = sub_4E04(&qword_317420);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = a3[18];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    uint64_t v63 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    uint64_t v64 = a3[19];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  return a1;
}

uint64_t destroy for ContentDetailsViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  uint64_t v26 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  uint64_t v28 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  uint64_t v30 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = a1 + a2[18];
  uint64_t v32 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  uint64_t v33 = a1 + a2[19];
  uint64_t v34 = sub_4E04(&qword_315DE8);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);

  return v35(v33, v34);
}

uint64_t initializeWithCopy for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

uint64_t assignWithCopy for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  return a1;
}

uint64_t assignWithTake for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31D760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_317418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_316F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_4E04(&qword_317420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_123818);
}

uint64_t sub_123818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_32:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_31:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_32;
  }
  uint64_t v14 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_31;
  }
  uint64_t v15 = sub_4E04(&qword_31D760);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_31;
  }
  uint64_t v16 = sub_4E04(&qword_3184C8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_31;
  }
  uint64_t v17 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_31;
  }
  uint64_t v18 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_31;
  }
  uint64_t v19 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_31;
  }
  uint64_t v20 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_31;
  }
  uint64_t v21 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_31;
  }
  uint64_t v22 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_31;
  }
  uint64_t v23 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_31;
  }
  uint64_t v24 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_31;
  }
  uint64_t v25 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a2)
  {
    uint64_t v8 = v25;
    uint64_t v12 = *(void *)(v25 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_31;
  }
  uint64_t v26 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a2)
  {
    uint64_t v8 = v26;
    uint64_t v12 = *(void *)(v26 - 8);
    uint64_t v13 = a3[18];
    goto LABEL_31;
  }
  uint64_t v28 = sub_4E04(&qword_315DE8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a3[19];

  return v29(v31, a2, v30);
}

uint64_t storeEnumTagSinglePayload for ContentDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_123D94);
}

uint64_t sub_123D94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_32:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_31:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_32;
  }
  uint64_t v16 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_31;
  }
  uint64_t v17 = sub_4E04(&qword_31D760);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_31;
  }
  uint64_t v18 = sub_4E04(&qword_3184C8);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_31;
  }
  uint64_t v19 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_31;
  }
  uint64_t v20 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_31;
  }
  uint64_t v21 = sub_4E04(&qword_317418);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_31;
  }
  uint64_t v22 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_31;
  }
  uint64_t v23 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_31;
  }
  uint64_t v24 = sub_4E04(&qword_316F80);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_31;
  }
  uint64_t v25 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_31;
  }
  uint64_t v26 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_31;
  }
  uint64_t v27 = sub_4E04(&qword_317420);
  if (*(_DWORD *)(*(void *)(v27 - 8) + 84) == a3)
  {
    uint64_t v10 = v27;
    uint64_t v14 = *(void *)(v27 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_31;
  }
  uint64_t v28 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v28 - 8) + 84) == a3)
  {
    uint64_t v10 = v28;
    uint64_t v14 = *(void *)(v28 - 8);
    uint64_t v15 = a4[18];
    goto LABEL_31;
  }
  uint64_t v30 = sub_4E04(&qword_315DE8);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v32 = v30;
  uint64_t v33 = a1 + a4[19];

  return v31(v33, a2, a2, v32);
}

void sub_124308()
{
  sub_124A28(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_124A28(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_124A28(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
      if (v2 <= 0x3F)
      {
        sub_124A28(319, (unint64_t *)&unk_31D7E8, (void (*)(void))sub_AE5AC, (void (*)(void))sub_AE604);
        if (v3 <= 0x3F)
        {
          sub_124A28(319, &qword_3185C8, (void (*)(void))sub_6D014, (void (*)(void))sub_6C3AC);
          if (v4 <= 0x3F)
          {
            sub_124A28(319, &qword_3185E0, (void (*)(void))sub_6D110, (void (*)(void))sub_6C4A8);
            if (v5 <= 0x3F)
            {
              sub_124A28(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
              if (v6 <= 0x3F)
              {
                sub_124A28(319, &qword_3174B8, (void (*)(void))sub_26F40, (void (*)(void))sub_26F98);
                if (v7 <= 0x3F)
                {
                  sub_124A28(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
                  if (v8 <= 0x3F)
                  {
                    sub_124A28(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
                    if (v9 <= 0x3F)
                    {
                      sub_124A28(319, &qword_317068, (void (*)(void))sub_37798, (void (*)(void))sub_36AC8);
                      if (v10 <= 0x3F)
                      {
                        sub_124A28(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
                        if (v11 <= 0x3F)
                        {
                          sub_124A28(319, (unint64_t *)&unk_3185F0, (void (*)(void))sub_6D164, (void (*)(void))sub_6C4FC);
                          if (v12 <= 0x3F)
                          {
                            sub_124A28(319, (unint64_t *)&unk_3174C0, (void (*)(void))sub_420DC, (void (*)(void))sub_41530);
                            if (v13 <= 0x3F)
                            {
                              sub_6DA0();
                              if (v14 <= 0x3F)
                              {
                                sub_6E6C();
                                if (v15 <= 0x3F) {
                                  swift_initStructMetadata();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_124A28(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v6 = a2[1];
  if (v6)
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = a2[17];
    if (v10) {
      goto LABEL_4;
    }
LABEL_8:
    long long v24 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v24;
    *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
    long long v25 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v25;
    uint64_t v14 = a2[22];
    if (v14) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  long long v21 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v21;
  long long v22 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 80) = v22;
  long long v23 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v23;
  uint64_t v10 = a2[17];
  if (!v10) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v10;
  uint64_t v13 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v13;
  *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
  *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = a2[22];
  if (v14)
  {
LABEL_5:
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v15;
    uint64_t v16 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v16;
    uint64_t v17 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v17;
    uint64_t v18 = a2[30];
    *(void *)(a1 + 232) = a2[29];
    *(void *)(a1 + 240) = v18;
    *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
    *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
    uint64_t v19 = a2[34];
    *(void *)(a1 + 264) = a2[33];
    *(void *)(a1 + 272) = v19;
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    *(_WORD *)(a1 + 284) = *((_WORD *)a2 + 142);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
LABEL_9:
  long long v26 = *(_OWORD *)(a2 + 31);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
  *(_OWORD *)(a1 + 248) = v26;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
  *(void *)(a1 + 278) = *(uint64_t *)((char *)a2 + 278);
  long long v27 = *(_OWORD *)(a2 + 23);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
  *(_OWORD *)(a1 + 184) = v27;
  long long v28 = *(_OWORD *)(a2 + 27);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 216) = v28;
LABEL_10:
  *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
  *(unsigned char *)(a1 + 292) = *((unsigned char *)a2 + 292);
  uint64_t v29 = a2[38];
  if (v29)
  {
    *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
    *(void *)(a1 + 304) = v29;
    *(_WORD *)(a1 + 312) = *((_WORD *)a2 + 156);
    uint64_t v30 = a2[41];
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = v30;
    uint64_t v31 = a2[43];
    *(void *)(a1 + 336) = a2[42];
    *(void *)(a1 + 344) = v31;
    *(unsigned char *)(a1 + 352) = *((unsigned char *)a2 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 312) = v32;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 337) = *(_OWORD *)((char *)a2 + 337);
  }
  *(_WORD *)(a1 + 353) = *(_WORD *)((char *)a2 + 353);
  uint64_t v33 = a2[46];
  *(void *)(a1 + 360) = a2[45];
  *(void *)(a1 + 368) = v33;
  uint64_t v34 = a2[48];
  *(void *)(a1 + 376) = a2[47];
  *(void *)(a1 + 384) = v34;
  uint64_t v35 = a2[50];
  *(void *)(a1 + 392) = a2[49];
  *(void *)(a1 + 400) = v35;
  *(unsigned char *)(a1 + 408) = *((unsigned char *)a2 + 408);
  uint64_t v36 = a2[53];
  *(void *)(a1 + 416) = a2[52];
  *(void *)(a1 + 424) = v36;
  uint64_t v37 = a2[55];
  *(void *)(a1 + 432) = a2[54];
  *(void *)(a1 + 440) = v37;
  uint64_t v38 = a2[57];
  *(void *)(a1 + 448) = a2[56];
  *(void *)(a1 + 456) = v38;
  uint64_t v39 = a2[59];
  *(void *)(a1 + 464) = a2[58];
  *(void *)(a1 + 472) = v39;
  uint64_t v40 = a2[61];
  *(void *)(a1 + 480) = a2[60];
  *(void *)(a1 + 488) = v40;
  uint64_t v41 = a2[63];
  *(void *)(a1 + 496) = a2[62];
  *(void *)(a1 + 504) = v41;
  uint64_t v58 = a2[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v58)
  {
    long long v43 = *((_OWORD *)a2 + 35);
    *(_OWORD *)(a1 + 544) = *((_OWORD *)a2 + 34);
    *(_OWORD *)(a1 + 560) = v43;
    *(void *)(a1 + 576) = a2[72];
    long long v44 = *((_OWORD *)a2 + 33);
    *(_OWORD *)(a1 + 512) = *((_OWORD *)a2 + 32);
    *(_OWORD *)(a1 + 528) = v44;
    uint64_t v42 = a2[76];
    if (v42) {
      goto LABEL_15;
    }
LABEL_17:
    long long v45 = *(_OWORD *)(a2 + 75);
    *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 73);
    *(_OWORD *)(a1 + 600) = v45;
    goto LABEL_18;
  }
  *(void *)(a1 + 512) = a2[64];
  *(void *)(a1 + 520) = v58;
  *(_DWORD *)(a1 + 528) = *((_DWORD *)a2 + 132);
  *(void *)(a1 + 536) = a2[67];
  *(void *)(a1 + 544) = a2[68];
  *(void *)(a1 + 552) = a2[69];
  *(unsigned char *)(a1 + 560) = *((unsigned char *)a2 + 560);
  *(void *)(a1 + 568) = a2[71];
  *(void *)(a1 + 576) = a2[72];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = a2[76];
  if (!v42) {
    goto LABEL_17;
  }
LABEL_15:
  *(void *)(a1 + 584) = a2[73];
  *(void *)(a1 + 592) = a2[74];
  *(void *)(a1 + 600) = a2[75];
  *(void *)(a1 + 608) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_18:
  *(_WORD *)(a1 + 616) = *((_WORD *)a2 + 308);
  *(void *)(a1 + 624) = a2[78];
  *(void *)(a1 + 632) = a2[79];
  *(_OWORD *)(a1 + 640) = *((_OWORD *)a2 + 40);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)((char *)a2 + 649);
  *(unsigned char *)(a1 + 665) = *((unsigned char *)a2 + 665);
  uint64_t v46 = a2[85];
  swift_bridgeObjectRetain();
  if (v46)
  {
    *(void *)(a1 + 672) = a2[84];
    *(void *)(a1 + 680) = v46;
    *(void *)(a1 + 688) = a2[86];
    *(void *)(a1 + 696) = a2[87];
    *(void *)(a1 + 704) = a2[88];
    *(void *)(a1 + 712) = a2[89];
    *(unsigned char *)(a1 + 720) = *((unsigned char *)a2 + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v47 = *((_OWORD *)a2 + 43);
    *(_OWORD *)(a1 + 672) = *((_OWORD *)a2 + 42);
    *(_OWORD *)(a1 + 688) = v47;
    *(_OWORD *)(a1 + 704) = *((_OWORD *)a2 + 44);
    *(unsigned char *)(a1 + 720) = *((unsigned char *)a2 + 720);
  }
  uint64_t v48 = a2[93];
  if (v48 == 1)
  {
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 91);
    *(void *)(a1 + 744) = a2[93];
  }
  else
  {
    *(unsigned char *)(a1 + 728) = *((unsigned char *)a2 + 728);
    *(void *)(a1 + 736) = a2[92];
    *(void *)(a1 + 744) = v48;
    swift_bridgeObjectRetain();
  }
  uint64_t v49 = *(int *)(a3 + 72);
  uint64_t v50 = a1 + v49;
  uint64_t v51 = (uint64_t)a2 + v49;
  uint64_t v52 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  uint64_t v53 = *(int *)(a3 + 76);
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (uint64_t)a2 + v53;
  uint64_t v56 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  return a1;
}

uint64_t destroy for ContentDetailsViewEvent.Model(void *a1, uint64_t a2)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[22])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[65])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[76])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[85])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[93] != 1) {
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 72);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 76);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    uint64_t v8 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = *(void *)(a2 + 136);
    if (v9) {
      goto LABEL_3;
    }
LABEL_6:
    long long v22 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v22;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v23 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v23;
    uint64_t v13 = *(void *)(a2 + 176);
    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  uint64_t v9 = *(void *)(a2 + 136);
  if (!v9) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = *(void *)(a2 + 176);
  if (v13)
  {
LABEL_4:
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v13;
    uint64_t v14 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v14;
    uint64_t v15 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v15;
    uint64_t v16 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v16;
    uint64_t v17 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v17;
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    uint64_t v18 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v18;
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
    *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
LABEL_7:
  long long v24 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v24;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  long long v25 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v25;
  long long v26 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v26;
LABEL_8:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  uint64_t v27 = *(void *)(a2 + 304);
  if (v27)
  {
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = v27;
    *(_WORD *)(a1 + 312) = *(_WORD *)(a2 + 312);
    uint64_t v28 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v28;
    uint64_t v29 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v29;
    *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v30;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 337) = *(_OWORD *)(a2 + 337);
  }
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  uint64_t v31 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v31;
  uint64_t v32 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v32;
  uint64_t v33 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v33;
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  uint64_t v34 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v34;
  uint64_t v35 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v35;
  uint64_t v36 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v36;
  uint64_t v37 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v37;
  uint64_t v38 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v38;
  uint64_t v39 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v39;
  uint64_t v56 = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56)
  {
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = v56;
    *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = *(void *)(a2 + 608);
    if (v40)
    {
LABEL_13:
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
  }
  else
  {
    long long v41 = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 560) = v41;
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    long long v42 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v42;
    uint64_t v40 = *(void *)(a2 + 608);
    if (v40) {
      goto LABEL_13;
    }
  }
  long long v43 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v43;
LABEL_16:
  *(_WORD *)(a1 + 616) = *(_WORD *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  uint64_t v44 = *(void *)(a2 + 680);
  swift_bridgeObjectRetain();
  if (v44)
  {
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = v44;
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v45 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = v45;
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  }
  uint64_t v46 = *(void *)(a2 + 744);
  if (v46 == 1)
  {
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
  }
  else
  {
    *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = v46;
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = *(int *)(a3 + 72);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = *(int *)(a3 + 76);
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      int v7 = *(_DWORD *)(a2 + 60);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_DWORD *)(a1 + 60) = v7;
      int v8 = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 68) = v8;
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1);
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      long long v12 = *(_OWORD *)(a2 + 80);
      long long v14 = *(_OWORD *)(a2 + 32);
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)(a1 + 48) = v13;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
    int v9 = *(_DWORD *)(a2 + 60);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = v9;
    int v10 = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 68) = v10;
    *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
    *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
    *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
    *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    long long v16 = *(_OWORD *)(a2 + 32);
    long long v17 = *(_OWORD *)(a2 + 48);
    long long v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)(a1 + 48) = v17;
  }
  long long v19 = (_OWORD *)(a1 + 96);
  long long v20 = (_OWORD *)(a2 + 96);
  uint64_t v21 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v21)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v22;
    }
    else
    {
      sub_70AE0(a1 + 96);
      _OWORD *v19 = *v20;
      long long v25 = *(_OWORD *)(a2 + 128);
      long long v24 = *(_OWORD *)(a2 + 144);
      long long v26 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 144) = v24;
      *(_OWORD *)(a1 + 112) = v26;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v23 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v19 = *v20;
    long long v27 = *(_OWORD *)(a2 + 112);
    long long v28 = *(_OWORD *)(a2 + 128);
    long long v29 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v28;
    *(_OWORD *)(a1 + 144) = v29;
    *(_OWORD *)(a1 + 112) = v27;
  }
  long long v30 = (_OWORD *)(a1 + 168);
  uint64_t v31 = (long long *)(a2 + 168);
  uint64_t v32 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v32)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v33 = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 248) = v33;
      int v34 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v34;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v35 = *(_DWORD *)(a2 + 280);
      *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
      *(_DWORD *)(a1 + 280) = v35;
      *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    }
    else
    {
      sub_70B34(a1 + 168);
      long long v39 = *(_OWORD *)(a2 + 216);
      long long v41 = *v31;
      long long v40 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v39;
      *long long v30 = v41;
      *(_OWORD *)(a1 + 184) = v40;
      long long v43 = *(_OWORD *)(a2 + 248);
      long long v42 = *(_OWORD *)(a2 + 264);
      long long v44 = *(_OWORD *)(a2 + 232);
      *(void *)(a1 + 278) = *(void *)(a2 + 278);
      *(_OWORD *)(a1 + 248) = v43;
      *(_OWORD *)(a1 + 264) = v42;
      *(_OWORD *)(a1 + 232) = v44;
    }
  }
  else if (v32)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    int v36 = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(_DWORD *)(a1 + 248) = v36;
    int v37 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v37;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    int v38 = *(_DWORD *)(a2 + 280);
    *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
    *(_DWORD *)(a1 + 280) = v38;
    *(unsigned char *)(a1 + 285) = *(unsigned char *)(a2 + 285);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v45 = *v31;
    long long v46 = *(_OWORD *)(a2 + 184);
    long long v47 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v47;
    *long long v30 = v45;
    *(_OWORD *)(a1 + 184) = v46;
    long long v48 = *(_OWORD *)(a2 + 232);
    long long v49 = *(_OWORD *)(a2 + 248);
    long long v50 = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 278) = *(void *)(a2 + 278);
    *(_OWORD *)(a1 + 248) = v49;
    *(_OWORD *)(a1 + 264) = v50;
    *(_OWORD *)(a1 + 232) = v48;
  }
  int v51 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v51;
  uint64_t v52 = (_OWORD *)(a1 + 296);
  uint64_t v53 = (long long *)(a2 + 296);
  uint64_t v54 = *(void *)(a2 + 304);
  if (*(void *)(a1 + 304))
  {
    if (v54)
    {
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    }
    else
    {
      sub_70A8C(a1 + 296);
      long long v56 = *(_OWORD *)(a2 + 312);
      long long v55 = *(_OWORD *)(a2 + 328);
      long long v57 = *v53;
      *(_OWORD *)(a1 + 337) = *(_OWORD *)(a2 + 337);
      *(_OWORD *)(a1 + 312) = v56;
      *(_OWORD *)(a1 + 328) = v55;
      *uint64_t v52 = v57;
    }
  }
  else if (v54)
  {
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v58 = *v53;
    long long v59 = *(_OWORD *)(a2 + 312);
    long long v60 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 337) = *(_OWORD *)(a2 + 337);
    *(_OWORD *)(a1 + 312) = v59;
    *(_OWORD *)(a1 + 328) = v60;
    *uint64_t v52 = v58;
  }
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = (_OWORD *)(a1 + 512);
  uint64_t v62 = (_OWORD *)(a2 + 512);
  uint64_t v63 = *(void *)(a2 + 520);
  if (*(void *)(a1 + 520))
  {
    if (v63)
    {
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v64 = *(void *)(a2 + 552);
      *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
      *(void *)(a1 + 552) = v64;
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_DB718(a1 + 512);
      *uint64_t v61 = *v62;
      long long v67 = *(_OWORD *)(a2 + 544);
      long long v66 = *(_OWORD *)(a2 + 560);
      long long v68 = *(_OWORD *)(a2 + 528);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(_OWORD *)(a1 + 544) = v67;
      *(_OWORD *)(a1 + 560) = v66;
      *(_OWORD *)(a1 + 528) = v68;
    }
  }
  else if (v63)
  {
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    uint64_t v65 = *(void *)(a2 + 552);
    *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
    *(void *)(a1 + 552) = v65;
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v61 = *v62;
    long long v69 = *(_OWORD *)(a2 + 528);
    long long v70 = *(_OWORD *)(a2 + 544);
    long long v71 = *(_OWORD *)(a2 + 560);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(_OWORD *)(a1 + 544) = v70;
    *(_OWORD *)(a1 + 560) = v71;
    *(_OWORD *)(a1 + 528) = v69;
  }
  uint64_t v72 = (_OWORD *)(a1 + 584);
  uint64_t v73 = (_OWORD *)(a2 + 584);
  uint64_t v74 = *(void *)(a2 + 608);
  if (*(void *)(a1 + 608))
  {
    if (v74)
    {
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235F4(a1 + 584);
      long long v75 = *(_OWORD *)(a2 + 600);
      *uint64_t v72 = *v73;
      *(_OWORD *)(a1 + 600) = v75;
    }
  }
  else if (v74)
  {
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v76 = *(_OWORD *)(a2 + 600);
    *uint64_t v72 = *v73;
    *(_OWORD *)(a1 + 600) = v76;
  }
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(unsigned char *)(a1 + 617) = *(unsigned char *)(a2 + 617);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v77 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
  *(_OWORD *)(a1 + 640) = v77;
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  uint64_t v78 = (_OWORD *)(a1 + 672);
  uint64_t v79 = (long long *)(a2 + 672);
  uint64_t v80 = *(void *)(a2 + 680);
  if (*(void *)(a1 + 680))
  {
    if (v80)
    {
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    }
    else
    {
      sub_70B88(a1 + 672);
      long long v82 = *(_OWORD *)(a2 + 688);
      long long v81 = *(_OWORD *)(a2 + 704);
      long long v83 = *v79;
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
      *(_OWORD *)(a1 + 688) = v82;
      *(_OWORD *)(a1 + 704) = v81;
      _OWORD *v78 = v83;
    }
  }
  else if (v80)
  {
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v84 = *v79;
    long long v85 = *(_OWORD *)(a2 + 688);
    long long v86 = *(_OWORD *)(a2 + 704);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    *(_OWORD *)(a1 + 688) = v85;
    *(_OWORD *)(a1 + 704) = v86;
    _OWORD *v78 = v84;
  }
  long long v87 = (long long *)(a1 + 728);
  long long v88 = (long long *)(a2 + 728);
  uint64_t v89 = *(void *)(a2 + 744);
  if (*(void *)(a1 + 744) == 1)
  {
    if (v89 == 1)
    {
      long long v90 = *v88;
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *long long v87 = v90;
    }
    else
    {
      *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      swift_bridgeObjectRetain();
    }
  }
  else if (v89 == 1)
  {
    sub_45290(a1 + 728);
    uint64_t v91 = *(void *)(a2 + 744);
    *long long v87 = *v88;
    *(void *)(a1 + 744) = v91;
  }
  else
  {
    *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v92 = *(int *)(a3 + 72);
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  uint64_t v95 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
  uint64_t v96 = *(int *)(a3 + 76);
  uint64_t v97 = a1 + v96;
  uint64_t v98 = a2 + v96;
  uint64_t v99 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 24))(v97, v98, v99);
  return a1;
}

uint64_t initializeWithTake for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  int v11 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v11;
  *(_OWORD *)(a1 + 337) = *(_OWORD *)(a2 + 337);
  long long v12 = *(_OWORD *)(a2 + 328);
  long long v13 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = v12;
  *(_OWORD *)(a1 + 296) = v13;
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  long long v14 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v14;
  long long v15 = *(_OWORD *)(a2 + 392);
  long long v16 = *(_OWORD *)(a2 + 408);
  long long v17 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v17;
  *(_OWORD *)(a1 + 392) = v15;
  *(_OWORD *)(a1 + 408) = v16;
  long long v18 = *(_OWORD *)(a2 + 456);
  long long v19 = *(_OWORD *)(a2 + 472);
  long long v20 = *(_OWORD *)(a2 + 488);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v19;
  *(_OWORD *)(a1 + 488) = v20;
  *(_OWORD *)(a1 + 456) = v18;
  long long v21 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v21;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  long long v22 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v22;
  long long v23 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v23;
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(_OWORD *)(a1 + 616) = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  long long v24 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v24;
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  uint64_t v25 = *(int *)(a3 + 72);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  uint64_t v29 = *(int *)(a3 + 76);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

uint64_t assignWithTake for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
      *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_62898(a1);
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
LABEL_6:
  if (*(void *)(a1 + 136))
  {
    if (*(void *)(a2 + 136))
    {
      uint64_t v13 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v16;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_11;
    }
    sub_70AE0(a1 + 96);
  }
  long long v17 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v17;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
LABEL_11:
  if (*(void *)(a1 + 176))
  {
    uint64_t v19 = *(void *)(a2 + 176);
    if (v19)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v23;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      uint64_t v24 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(_WORD *)(a1 + 284) = *(_WORD *)(a2 + 284);
      goto LABEL_16;
    }
    sub_70B34(a1 + 168);
  }
  long long v25 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v25;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 278) = *(void *)(a2 + 278);
  long long v26 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v26;
  long long v27 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v27;
LABEL_16:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  if (*(void *)(a1 + 304))
  {
    uint64_t v28 = *(void *)(a2 + 304);
    if (v28)
    {
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = v28;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 312) = *(_WORD *)(a2 + 312);
      uint64_t v29 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v30;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
      goto LABEL_21;
    }
    sub_70A8C(a1 + 296);
  }
  long long v31 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v31;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 337) = *(_OWORD *)(a2 + 337);
LABEL_21:
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  uint64_t v32 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  uint64_t v35 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v40;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 520))
  {
    uint64_t v41 = *(void *)(a2 + 520);
    if (v41)
    {
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = v41;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_DB718(a1 + 512);
  }
  long long v42 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v42;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  long long v43 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v43;
LABEL_26:
  if (*(void *)(a1 + 608))
  {
    if (*(void *)(a2 + 608))
    {
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_235F4(a1 + 584);
  }
  long long v44 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v44;
LABEL_31:
  *(_WORD *)(a1 + 616) = *(_WORD *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  if (*(void *)(a1 + 680))
  {
    uint64_t v45 = *(void *)(a2 + 680);
    if (v45)
    {
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      *(void *)(a1 + 680) = v45;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
      goto LABEL_36;
    }
    sub_70B88(a1 + 672);
  }
  long long v46 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v46;
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
LABEL_36:
  if (*(void *)(a1 + 744) != 1)
  {
    uint64_t v47 = *(void *)(a2 + 744);
    if (v47 != 1)
    {
      *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = v47;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_45290(a1 + 728);
  }
  *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
LABEL_41:
  uint64_t v48 = *(int *)(a3 + 72);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  uint64_t v52 = *(int *)(a3 + 76);
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_126DB0);
}

uint64_t sub_126DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 368);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 72);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 76);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContentDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_126EF0);
}

uint64_t sub_126EF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 368) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 72);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 76);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_12701C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentDetailsViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12723CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentDetailsViewEvent.Model.CodingKeys()
{
  return &type metadata for ContentDetailsViewEvent.Model.CodingKeys;
}

unint64_t sub_127278()
{
  unint64_t result = qword_31D918;
  if (!qword_31D918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D918);
  }
  return result;
}

unint64_t sub_1272D0()
{
  unint64_t result = qword_31D920;
  if (!qword_31D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D920);
  }
  return result;
}

unint64_t sub_127328()
{
  unint64_t result = qword_31D928;
  if (!qword_31D928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D928);
  }
  return result;
}

uint64_t sub_12737C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B03E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE480 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE4E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65736163776F6C66 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000000002AE110 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE500 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x746144736C616564 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

void __swiftcall AppData.init(appVersion:appBundleVersion:jsAppVersion:appBuildNumber:)(BookAnalytics::AppData *__return_ptr retstr, Swift::String appVersion, Swift::Int64 appBundleVersion, Swift::String jsAppVersion, Swift::String appBuildNumber)
{
  retstr->appVersion = appVersion;
  retstr->appBundleVersion = appBundleVersion;
  retstr->jsAppVersion = jsAppVersion;
  retstr->appBuildNumber = appBuildNumber;
}

unint64_t sub_127A28()
{
  unint64_t result = 0x6973726556707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x726556707041736ALL;
      break;
    case 3:
      unint64_t result = 0x646C697542707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_127AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_128644(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_127AFC(uint64_t a1)
{
  unint64_t v2 = sub_128188();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_127B38(uint64_t a1)
{
  unint64_t v2 = sub_128188();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31D930);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  v15[4] = v1[3];
  v15[5] = v8;
  uint64_t v9 = v1[4];
  _OWORD v15[2] = v1[5];
  v15[3] = v9;
  v15[1] = v1[6];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  sub_5900(v11, v10);
  sub_128188();
  sub_27E440();
  char v19 = 0;
  sub_27E2F0();
  if (!v2)
  {
    char v18 = 1;
    sub_27E350();
    char v17 = 2;
    sub_27E2F0();
    char v16 = 3;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t AppData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31D940);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_128188();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_27E280();
  char v26 = 2;
  uint64_t v22 = sub_27E220();
  uint64_t v23 = v13;
  char v25 = 3;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_27E220();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  uint64_t v18 = v23;
  uint64_t v19 = v22;
  a2[2] = v24;
  a2[3] = v19;
  uint64_t v20 = v21;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v16;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_128030@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppData.init(from:)(a1, a2);
}

uint64_t sub_128048(void *a1)
{
  return AppData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics7AppDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    if (v2 != v8) {
      return 0;
    }
  }
  else
  {
    char v13 = sub_27E370();
    uint64_t result = 0;
    if ((v13 & 1) == 0 || v2 != v8) {
      return result;
    }
  }
  if (v3 == v7 && v4 == v10 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
  {
    if (v5 == v9 && v6 == v11)
    {
      return 1;
    }
    else
    {
      return sub_27E370();
    }
  }
  return result;
}

unint64_t sub_128188()
{
  unint64_t result = qword_31D938;
  if (!qword_31D938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D938);
  }
  return result;
}

unint64_t sub_1281E0()
{
  unint64_t result = qword_31D948;
  if (!qword_31D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D948);
  }
  return result;
}

unint64_t sub_128238()
{
  unint64_t result = qword_31D950;
  if (!qword_31D950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D950);
  }
  return result;
}

uint64_t destroy for AltContentTypeExposureData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

unsigned char *storeEnumTagSinglePayload for AppData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x128504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_128540()
{
  unint64_t result = qword_31D958;
  if (!qword_31D958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D958);
  }
  return result;
}

unint64_t sub_128598()
{
  unint64_t result = qword_31D960;
  if (!qword_31D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D960);
  }
  return result;
}

unint64_t sub_1285F0()
{
  unint64_t result = qword_31D968;
  if (!qword_31D968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D968);
  }
  return result;
}

uint64_t sub_128644(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0400 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726556707041736ALL && a2 == 0xEC0000006E6F6973 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_128844()
{
  return 0x6974634172657375;
}

uint64_t sub_128860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_128904(uint64_t a1)
{
  unint64_t v2 = sub_128D54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_128940(uint64_t a1)
{
  unint64_t v2 = sub_128D54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationOptInActionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31D970);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_128D54();
  sub_27E440();
  char v10 = v7;
  sub_128DA8();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t NotificationOptInActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31D988);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_128D54();
  sub_27E430();
  if (!v2)
  {
    sub_128DFC();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_128C2C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return NotificationOptInActionData.init(from:)(a1, a2);
}

uint64_t sub_128C44(void *a1)
{
  return NotificationOptInActionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics27NotificationOptInActionDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 0x6E4974706FLL;
  if (v2 != 1)
  {
    uint64_t v4 = 0x74754F74706FLL;
    unint64_t v3 = 0xE600000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  unint64_t v7 = 0xE500000000000000;
  uint64_t v8 = 0x6E4974706FLL;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x74754F74706FLL;
    unint64_t v7 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_128D54()
{
  unint64_t result = qword_31D978;
  if (!qword_31D978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D978);
  }
  return result;
}

unint64_t sub_128DA8()
{
  unint64_t result = qword_31D980;
  if (!qword_31D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D980);
  }
  return result;
}

unint64_t sub_128DFC()
{
  unint64_t result = qword_31D990;
  if (!qword_31D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D990);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x128F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInActionData()
{
  return &type metadata for NotificationOptInActionData;
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x128FF8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInActionData.CodingKeys()
{
  return &type metadata for NotificationOptInActionData.CodingKeys;
}

unint64_t sub_129034()
{
  unint64_t result = qword_31D998;
  if (!qword_31D998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D998);
  }
  return result;
}

unint64_t sub_12908C()
{
  unint64_t result = qword_31D9A0;
  if (!qword_31D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D9A0);
  }
  return result;
}

unint64_t sub_1290E4()
{
  unint64_t result = qword_31D9A8;
  if (!qword_31D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D9A8);
  }
  return result;
}

BookAnalytics::RedownloadFailureReason_optional __swiftcall RedownloadFailureReason.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F87A0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t RedownloadFailureReason.rawValue.getter()
{
  uint64_t v1 = 0x436572756C696166;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F436572756C6166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_129200(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2F314(*a1, *a2);
}

unint64_t sub_129210()
{
  unint64_t result = qword_31D9B0;
  if (!qword_31D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D9B0);
  }
  return result;
}

Swift::Int sub_129264()
{
  return sub_27E420();
}

uint64_t sub_129318()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1293B8()
{
  return sub_27E420();
}

BookAnalytics::RedownloadFailureReason_optional sub_129468(Swift::String *a1)
{
  return RedownloadFailureReason.init(rawValue:)(*a1);
}

void sub_129474(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEC0000003165646FLL;
  uint64_t v5 = 0x436572756C696166;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F436572756C6166;
    unint64_t v4 = 0xEB00000000326564;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1294E4()
{
  return sub_27DED0();
}

uint64_t sub_129544()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for RedownloadFailureReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x129660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadFailureReason()
{
  return &type metadata for RedownloadFailureReason;
}

unint64_t sub_129698()
{
  unint64_t result = qword_31D9B8;
  if (!qword_31D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31D9B8);
  }
  return result;
}

uint64_t sub_1296EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31D9C0, &enum case for SessionGroup.default(_:));
}

uint64_t static DragDropEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158D8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D9C0, a1);
}

uint64_t sub_12974C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31D9D8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static DragDropEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158E0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D9D8, a1);
}

uint64_t DragDropEvent.dragDropData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31D9F0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DragDropEvent.dragDropData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31D9F0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t DragDropEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DragDropEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DragDropEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31DA78);
}

uint64_t DragDropEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DragDropEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DragDropEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DragDropEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for DragDropEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t DragDropEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DragDropEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DragDropEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31DB10);
}

uint64_t DragDropEvent.Model.init(dragDropData:eventData:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for DragDropEvent.Model(0) + 20);
  uint64_t v5 = sub_27D7C0();
  unsigned int v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_129BC8()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x706F724467617264;
  }
}

uint64_t sub_129C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_12B488(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_129C38(uint64_t a1)
{
  unint64_t v2 = sub_129E6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_129C74(uint64_t a1)
{
  unint64_t v2 = sub_129E6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DragDropEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31D9F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_129E6C();
  sub_27E440();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_129EC0();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for DragDropEvent.Model(0);
    v10[6] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_129E6C()
{
  unint64_t result = qword_31DA00;
  if (!qword_31DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DA00);
  }
  return result;
}

unint64_t sub_129EC0()
{
  unint64_t result = qword_31DA08;
  if (!qword_31DA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DA08);
  }
  return result;
}

uint64_t DragDropEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v22 = sub_27D7C0();
  uint64_t v19 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4E04(&qword_31DA10);
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DragDropEvent.Model(0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_129E6C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v18 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v21;
  uint64_t v12 = v22;
  char v25 = 0;
  sub_12A22C();
  uint64_t v14 = v23;
  sub_27E260();
  char v17 = v11;
  *(void *)uint64_t v11 = v26;
  char v24 = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  uint64_t v15 = (uint64_t)v17;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v17[*(int *)(v18 + 20)], v5, v12);
  sub_12A280(v15, v20);
  sub_5E94((uint64_t)a1);
  return sub_12A2E4(v15);
}

unint64_t sub_12A22C()
{
  unint64_t result = qword_31DA18;
  if (!qword_31DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DA18);
  }
  return result;
}

uint64_t sub_12A280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DragDropEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_12A2E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DragDropEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12A340@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DragDropEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_12A358(void *a1)
{
  return DragDropEvent.Model.encode(to:)(a1);
}

uint64_t sub_12A370@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158D8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31D9C0, a1);
}

uint64_t sub_12A3A8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158E0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31D9D8, a1);
}

uint64_t sub_12A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for DragDropEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31D9F0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DragDropEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12A980);
}

uint64_t sub_12A980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31D9F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DragDropEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12AA94);
}

uint64_t sub_12AA94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31D9F0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_12ABA0()
{
  sub_12AC68();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_12AC68()
{
  if (!qword_31DA88)
  {
    sub_12A22C();
    sub_129EC0();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31DA88);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DragDropEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for DragDropEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for DragDropEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for DragDropEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for DragDropEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for DragDropEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DragDropEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12B074);
}

uint64_t sub_12B074(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DragDropEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12B138);
}

void *sub_12B138(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_12B1E0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DragDropEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12B348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropEvent.Model.CodingKeys()
{
  return &type metadata for DragDropEvent.Model.CodingKeys;
}

unint64_t sub_12B384()
{
  unint64_t result = qword_31DB48;
  if (!qword_31DB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB48);
  }
  return result;
}

unint64_t sub_12B3DC()
{
  unint64_t result = qword_31DB50;
  if (!qword_31DB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB50);
  }
  return result;
}

unint64_t sub_12B434()
{
  unint64_t result = qword_31DB58;
  if (!qword_31DB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB58);
  }
  return result;
}

uint64_t sub_12B488(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x706F724467617264 && a2 == 0xEC00000061746144;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::ContentSubType_optional __swiftcall ContentSubType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8808;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t ContentSubType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7630194;
      break;
    case 2:
      uint64_t result = 0x79616C6465786966;
      break;
    case 3:
      uint64_t result = 0x6F69746964617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_12B694(unsigned __int8 *a1, char *a2)
{
  return sub_32E28(*a1, *a2);
}

unint64_t sub_12B6A4()
{
  unint64_t result = qword_31DB60;
  if (!qword_31DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB60);
  }
  return result;
}

Swift::Int sub_12B6F8()
{
  return sub_27E420();
}

uint64_t sub_12B7DC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_12B8A8()
{
  return sub_27E420();
}

BookAnalytics::ContentSubType_optional sub_12B988(Swift::String *a1)
{
  return ContentSubType.init(rawValue:)(*a1);
}

void sub_12B994(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7630194;
      goto LABEL_3;
    case 2:
      *a1 = 0x79616C6465786966;
      a1[1] = 0xEB0000000074756FLL;
      break;
    case 3:
      *a1 = 0x6F69746964617274;
      a1[1] = 0xEB000000006C616ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_12BA38()
{
  return sub_27DED0();
}

uint64_t sub_12BA98()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ContentSubType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12BBB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSubType()
{
  return &type metadata for ContentSubType;
}

unint64_t sub_12BBEC()
{
  unint64_t result = qword_31DB68;
  if (!qword_31DB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB68);
  }
  return result;
}

BookAnalytics::DefaultReadingGoal_optional __swiftcall DefaultReadingGoal.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8888;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t DefaultReadingGoal.rawValue.getter()
{
  uint64_t v1 = 89;
  if (*v0 != 1) {
    uint64_t v1 = 78;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 16718;
  }
}

uint64_t sub_12BCD4(char *a1, unsigned __int8 *a2)
{
  return sub_2F318(*a1, *a2);
}

unint64_t sub_12BCE4()
{
  unint64_t result = qword_31DB70;
  if (!qword_31DB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB70);
  }
  return result;
}

Swift::Int sub_12BD38()
{
  return sub_27E420();
}

uint64_t sub_12BDB8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_12BE24()
{
  return sub_27E420();
}

BookAnalytics::DefaultReadingGoal_optional sub_12BEA0(Swift::String *a1)
{
  return DefaultReadingGoal.init(rawValue:)(*a1);
}

void sub_12BEAC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 89;
  if (v2 != 1) {
    uint64_t v4 = 78;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 16718;
  }
  if (!v5) {
    unint64_t v3 = 0xE100000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_12BEE8()
{
  return sub_27DED0();
}

uint64_t sub_12BF48()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DefaultReadingGoal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12C064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultReadingGoal()
{
  return &type metadata for DefaultReadingGoal;
}

unint64_t sub_12C09C()
{
  unint64_t result = qword_31DB78;
  if (!qword_31DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DB78);
  }
  return result;
}

void sub_12C130(char *a1@<X8>)
{
  type metadata accessor for NetworkReachability();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  SCNetworkReachabilityRef v3 = SCNetworkReachabilityCreateWithAddress(0, &address);
  unsigned int v4 = *(void **)(inited + 16);
  *(void *)(inited + 16) = v3;

  sub_177D70(&v53);
  if (!v53)
  {
    swift_release();
    char v5 = 13;
    goto LABEL_21;
  }
  if (v53 != 1)
  {
    sub_1037D4();
    unsigned int v6 = (void *)sub_27E000();
    id v7 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v6];

    *(void *)&address.sa_len = 0;
    id v8 = [v7 getCurrentDataServiceDescriptorSync:&address];
    uint64_t v9 = *(void **)&address.sa_len;
    if (v8)
    {
      uint64_t v10 = v8;
      *(void *)&address.sa_len = 0;
      id v11 = v9;
      id v12 = [v7 getCurrentRat:v10 error:&address];
      uint64_t v13 = *(void **)&address.sa_len;
      if (v12)
      {
        uint64_t v14 = v12;
        uint64_t v15 = sub_27DDB0();
        uint64_t v17 = v16;
        id v18 = v13;

        if (sub_27DDB0() == v15 && v19 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          char v5 = 1;
          goto LABEL_21;
        }
        char v28 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v28)
        {
          swift_release();

          goto LABEL_20;
        }
        if (sub_27DDB0() == v15 && v29 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          char v5 = 2;
          goto LABEL_21;
        }
        char v30 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v30)
        {
          swift_release();

          goto LABEL_27;
        }
        if (sub_27DDB0() == v15 && v31 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_33:
          swift_bridgeObjectRelease();
          char v5 = 3;
          goto LABEL_21;
        }
        char v32 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v32)
        {
          swift_release();

          goto LABEL_33;
        }
        if (sub_27DDB0() == v15 && v33 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_39:
          swift_bridgeObjectRelease();
          char v5 = 4;
          goto LABEL_21;
        }
        char v34 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v34)
        {
          swift_release();

          goto LABEL_39;
        }
        if (sub_27DDB0() == v15 && v35 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_45:
          swift_bridgeObjectRelease();
          char v5 = 5;
          goto LABEL_21;
        }
        char v36 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v36)
        {
          swift_release();

          goto LABEL_45;
        }
        if (sub_27DDB0() == v15 && v37 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_51:
          swift_bridgeObjectRelease();
          char v5 = 6;
          goto LABEL_21;
        }
        char v38 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v38)
        {
          swift_release();

          goto LABEL_51;
        }
        if (sub_27DDB0() == v15 && v39 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_57:
          swift_bridgeObjectRelease();
          char v5 = 7;
          goto LABEL_21;
        }
        char v40 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v40)
        {
          swift_release();

          goto LABEL_57;
        }
        if (sub_27DDB0() == v15 && v41 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_63:
          swift_bridgeObjectRelease();
          char v5 = 8;
          goto LABEL_21;
        }
        char v42 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v42)
        {
          swift_release();

          goto LABEL_63;
        }
        if (sub_27DDB0() == v15 && v43 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_69:
          swift_bridgeObjectRelease();
          char v5 = 9;
          goto LABEL_21;
        }
        char v44 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v44)
        {
          swift_release();

          goto LABEL_69;
        }
        if (sub_27DDB0() == v15 && v45 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_75:
          swift_bridgeObjectRelease();
          char v5 = 10;
          goto LABEL_21;
        }
        char v46 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v46)
        {
          swift_release();

          goto LABEL_75;
        }
        if (sub_27DDB0() == v15 && v47 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_81:
          swift_bridgeObjectRelease();
          char v5 = 11;
          goto LABEL_21;
        }
        char v48 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v48)
        {
          swift_release();

          goto LABEL_81;
        }
        if (sub_27DDB0() == v15 && v49 == v17)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_87:
          swift_bridgeObjectRelease();
          char v5 = 14;
          goto LABEL_21;
        }
        char v50 = sub_27E370();
        swift_bridgeObjectRelease();
        if (v50)
        {
          swift_release();

          goto LABEL_87;
        }
        if (sub_27DDB0() == v15 && v51 == v17)
        {
          swift_bridgeObjectRelease_n();
          swift_release();

          char v5 = 15;
          goto LABEL_21;
        }
        char v52 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

        if (v52)
        {
          char v5 = 15;
          goto LABEL_21;
        }
LABEL_17:
        char v5 = 0;
        goto LABEL_21;
      }
      id v21 = *(id *)&address.sa_len;
      sub_27CF80();

      swift_willThrow();
    }
    else
    {
      id v20 = *(id *)&address.sa_len;
      sub_27CF80();

      swift_willThrow();
    }
    if (qword_315688 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_27D9B0();
    sub_4BD4(v22, (uint64_t)qword_3187F0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v23 = sub_27D990();
    os_log_type_t v24 = sub_27DFA0();
    if (os_log_type_enabled(v23, v24))
    {
      char v25 = (uint8_t *)swift_slowAlloc();
      *(void *)&address.sa_len = swift_slowAlloc();
      *(_DWORD *)char v25 = 136315138;
      swift_getErrorValue();
      uint64_t v26 = sub_27E3B0();
      sub_12D450(v26, v27, (uint64_t *)&address);
      sub_27E050();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v23, v24, "Could not get current data service descriptor: %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      swift_errorRelease();
    }
    else
    {

      swift_release();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_17;
  }
  swift_release();
  char v5 = 12;
LABEL_21:
  *a1 = v5;
}

unint64_t sub_12CBA0@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = 0x2000503040100uLL >> (8 * result);
  if (result >= 7) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_12CBC8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v32 = sub_27D8F0();
  uint64_t v28 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  char v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_27D800();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  char v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31DB80);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_27D820();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_27D920();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_AE110(a1, (uint64_t)v34);
  sub_4E04(&qword_31DB88);
  if (swift_dynamicCast())
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    char v18 = 2;
  }
  else
  {
    sub_AE110(a1, (uint64_t)v34);
    int v19 = swift_dynamicCast();
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    if (v19)
    {
      v20(v8, 0, 1, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_27D810();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v21 = v29;
      uint64_t v22 = v31;
      int v23 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v5, v31);
      int v24 = enum case for LibraryBookInfo.BookType.epub(_:);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v22);
      if (v23 == v24) {
        char v18 = 1;
      }
      else {
        char v18 = 5;
      }
    }
    else
    {
      v20(v8, 1, 1, v9);
      sub_12DC4C((uint64_t)v8);
      sub_AE110(a1, (uint64_t)v34);
      char v25 = v30;
      uint64_t v26 = v32;
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v25, v26);
        char v18 = 3;
      }
      else
      {
        char v18 = 0;
      }
    }
  }
  *uint64_t v33 = v18;
  return result;
}

uint64_t sub_12D008()
{
  id v0 = [self currentDevice];
  id v1 = [v0 orientation];

  if (sub_12DCAC((uint64_t)v1)) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_12D070(uint64_t a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 16718;
      break;
    case 2:
      uint64_t result = 0x6964616552626F65;
      break;
    case 3:
      uint64_t result = 0x4E676E6964616572;
      break;
    default:
      sub_27E390();
      __break(1u);
      JUMPOUT(0x12D128);
  }
  return result;
}

uint64_t sub_12D238(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6E776F6E6B6E75;
    case 2:
      return 0x6F6F42664F646E65;
    case 1:
      return 0x6E6F43664F646E65;
  }
  uint64_t result = sub_27E390();
  __break(1u);
  return result;
}

id Utilities.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Utilities();
  return [super init];
}

id Utilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Utilities();
  return [super dealloc];
}

uint64_t sub_12D450(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_12D524(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_46D80((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_46D80((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_5E94((uint64_t)v12);
  return v7;
}

uint64_t sub_12D524(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_27E060();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_12D6E0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_27E110();
  if (!v8)
  {
    sub_27E130();
    __break(1u);
LABEL_17:
    uint64_t result = sub_27E190();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_12D6E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_12D778(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12D8F0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_12D8F0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_12D778(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_184208(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_27E0F0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_27E130();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_27DE20();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_27E190();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_27E130();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_12D8F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_4E04(&qword_31DBB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_12DA40(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x50656D6568544D49 && a2 == 0xEF79617247656761 || (sub_27E370() & 1) != 0) {
    return 2;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0630 || (sub_27E370() & 1) != 0) {
    return 3;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0650) {
    return 0;
  }
  char v5 = sub_27E370();
  uint64_t result = 0;
  BOOL v7 = a1 == 0x50656D6568544D49 && a2 == 0xEB00000000656761;
  if ((v5 & 1) == 0 && !v7)
  {
    if (sub_27E370()) {
      return 0;
    }
    if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0670)
    {
      return 1;
    }
    else if (sub_27E370())
    {
      return 1;
    }
    else
    {
      return 4;
    }
  }
  return result;
}

uint64_t sub_12DC20(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4) {
    return 2 * (a1 == 6);
  }
  else {
    return qword_292E00[a1 - 1];
  }
}

uint64_t sub_12DC4C(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_31DB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_12DCAC(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t type metadata accessor for Utilities()
{
  return self;
}

uint64_t method lookup function for Utilities(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Utilities);
}

uint64_t dispatch thunk of static Utilities.backgroundColor(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static Utilities.cellularRadioAccessTechnology()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static Utilities.contentType(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of static Utilities.deviceOrientationFromCurrentOrientation()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static Utilities.stringFromUpSellLocation(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of static Utilities.stringFromUpSellVariant(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void EventReporter.emitAnnotationActionEvent(using:contentData:viewData:)(uint64_t a1, _OWORD *a2, char *a3)
{
  long long v4 = a2[3];
  long long v19 = a2[2];
  long long v20 = v4;
  long long v5 = a2[5];
  long long v21 = a2[4];
  long long v22 = v5;
  long long v6 = a2[1];
  v18[0] = *a2;
  v18[1] = v6;
  char v7 = *a3;
  char v8 = a3[1];
  char v9 = a3[2];
  id v10 = [self sharedConnection:v18[0] with:v6 with:v19 with:v20 with:v21 with:v22];
  if (v10)
  {
    size_t v11 = v10;
    unsigned int v12 = [v10 isDiagnosticSubmissionAllowed];

    if (v12)
    {
      uint64_t v13 = swift_allocObject();
      long long v14 = a2[3];
      *(_OWORD *)(v13 + 48) = a2[2];
      *(_OWORD *)(v13 + 64) = v14;
      long long v15 = a2[5];
      *(_OWORD *)(v13 + 80) = a2[4];
      *(_OWORD *)(v13 + 96) = v15;
      long long v16 = a2[1];
      *(_OWORD *)(v13 + 16) = *a2;
      *(_OWORD *)(v13 + 32) = v16;
      *(unsigned char *)(v13 + 112) = v7;
      *(unsigned char *)(v13 + 113) = v8;
      *(unsigned char *)(v13 + 114) = v9;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_12FB94;
      *(void *)(v17 + 24) = v13;
      sub_68EB8((uint64_t)v18);
      swift_retain();
      sub_27D730();
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_12DF80(uint64_t a1, long long *a2)
{
  long long v2 = a2[3];
  long long v15 = a2[2];
  long long v16 = v2;
  long long v3 = a2[5];
  long long v17 = a2[4];
  long long v18 = v3;
  long long v4 = a2[1];
  long long v13 = *a2;
  long long v14 = v4;
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  id v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_285930;
  v10(v11 + v7, v9, v5);
  sub_13024C();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for AnnotationActionEvent(0);
  sub_1302A0(&qword_31DC20, (void (*)(uint64_t))type metadata accessor for AnnotationActionEvent);
  long long v13 = 0u;
  long long v14 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v13);
}

uint64_t EventReporter.emitExitLinkTapEvent(using:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_27CFF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_12FB9C;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_27D730();
  swift_release();
  return swift_release();
}

uint64_t sub_12E36C()
{
  *(void *)&v6[0] = sub_27CFB0();
  *((void *)&v6[0] + 1) = v0;
  sub_4E04(&qword_319FE0);
  uint64_t v1 = sub_27D380();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_285930;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for DataEventTrait.onlyOnce(_:), v1);
  sub_1301F8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ExitLinkTapEvent(0);
  sub_1302A0(&qword_31DC10, (void (*)(uint64_t))type metadata accessor for ExitLinkTapEvent);
  memset(v6, 0, sizeof(v6));
  sub_27D2F0();
  return sub_6991C((uint64_t)v6);
}

uint64_t EventReporter.emitGetStartedActionEvent(using:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_12FBB0;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_12E7DC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    LOBYTE(v7[0]) = a2;
    sub_4E04(&qword_319FE0);
    uint64_t v2 = sub_27D380();
    uint64_t v3 = *(void *)(v2 - 8);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.onlyOnce(_:), v2);
    sub_1301A4();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    type metadata accessor for GetStartedActionEvent(0);
    sub_1302A0(&qword_31DC00, (void (*)(uint64_t))type metadata accessor for GetStartedActionEvent);
    memset(v7, 0, sizeof(v7));
    sub_27D2F0();
    return sub_6991C((uint64_t)v7);
  }
  return result;
}

uint64_t EventReporter.emitNotificationEngagementEvent(using:for:with:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_12FC30;
  *(void *)(v6 + 24) = v5;
  id v7 = a3;
  id v8 = a2;
  swift_retain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_12EB5C()
{
  sub_E0DA8((uint64_t)v8);
  sub_4E04(&qword_319FE0);
  uint64_t v0 = sub_27D380();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_285930;
  uint64_t v4 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 104);
  v5(v3 + v2, enum case for DataEventTrait.onlyOnce(_:), v0);
  sub_1300FC();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_E121C((uint64_t)v8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_285930;
  v5(v6 + v2, v4, v0);
  sub_130150();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for NotificationEngagementEvent(0);
  sub_1302A0(&qword_31DBF0, (void (*)(uint64_t))type metadata accessor for NotificationEngagementEvent);
  memset(v8, 0, sizeof(v8));
  sub_27D2F0();
  return sub_6991C((uint64_t)v8);
}

void EventReporter.emitScrubEvent(using:contentData:readingSettingsData:startPosition:endPosition:totalLength:)(uint64_t a1, long long *a2, _OWORD *a3, int a4, int a5, int a6)
{
  long long v11 = a2[3];
  long long v26 = a2[2];
  long long v27 = v11;
  long long v12 = a2[5];
  long long v28 = a2[4];
  long long v29 = v12;
  long long v13 = a2[1];
  long long v24 = *a2;
  long long v25 = v13;
  long long v14 = a3[1];
  id v15 = [self sharedConnection:v24 v25:v25 v26:v26 v27:v27 v28:v28 v29:v29 a3:a3 v14:v14];
  if (v15)
  {
    long long v16 = v15;
    unsigned int v17 = [v15 isDiagnosticSubmissionAllowed];

    if (v17)
    {
      uint64_t v18 = swift_allocObject();
      long long v19 = a2[3];
      *(_OWORD *)(v18 + 48) = a2[2];
      *(_OWORD *)(v18 + 64) = v19;
      long long v20 = a2[5];
      *(_OWORD *)(v18 + 80) = a2[4];
      *(_OWORD *)(v18 + 96) = v20;
      long long v21 = a2[1];
      *(_OWORD *)(v18 + 16) = *a2;
      *(_OWORD *)(v18 + 32) = v21;
      long long v22 = a3[1];
      *(_OWORD *)(v18 + 112) = *a3;
      *(_OWORD *)(v18 + 128) = v22;
      *(_DWORD *)(v18 + 144) = a4;
      *(_DWORD *)(v18 + 148) = a5;
      *(_DWORD *)(v18 + 152) = a6;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_12FDE0;
      *(void *)(v23 + 24) = v18;
      sub_68EB8((uint64_t)&v24);
      sub_12FDF4((uint64_t)&v30);
      swift_retain();
      sub_27D730();
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_12F1D0(uint64_t a1, long long *a2)
{
  long long v2 = a2[3];
  long long v16 = a2[2];
  long long v17 = v2;
  long long v3 = a2[5];
  long long v18 = a2[4];
  long long v19 = v3;
  long long v4 = a2[1];
  long long v14 = *a2;
  long long v15 = v4;
  sub_4E04(&qword_319FE0);
  uint64_t v5 = sub_27D380();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_285930;
  uint64_t v9 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 104);
  v10(v8 + v7, enum case for DataEventTrait.onlyOnce(_:), v5);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_285930;
  v10(v11 + v7, v9, v5);
  sub_C7F54();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_285930;
  v10(v12 + v7, v9, v5);
  sub_130020();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  type metadata accessor for ScrubEvent(0);
  sub_1302A0(&qword_31DBD8, (void (*)(uint64_t))type metadata accessor for ScrubEvent);
  long long v14 = 0u;
  long long v15 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v14);
}

uint64_t EventReporter.emitUnifiedMessageActionEvent(using:with:messageType:messageIdentifier:hasActionable:actionIdentifier:placementName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = a6;
  *(unsigned char *)(v16 + 56) = a7;
  *(void *)(v16 + 64) = a8;
  *(void *)(v16 + 72) = a9;
  *(void *)(v16 + 80) = a10;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_12FE24;
  *(void *)(v17 + 24) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27D730();
  swift_release();

  return swift_release();
}

uint64_t sub_12F5E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 >= 7)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    *(void *)&v16[0] = a3;
    *((void *)&v16[0] + 1) = a4;
    sub_4E04(&qword_319FE0);
    uint64_t v11 = sub_27D380();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_285930;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, enum case for DataEventTrait.onlyOnce(_:), v11);
    sub_12FFCC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = a8;
    uint64_t v18 = a9;
    uint64_t v19 = a10;
    sub_CE298();
    sub_27D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for UnifiedMessageActionEvent(0);
    sub_1302A0(&qword_31DBC8, (void (*)(uint64_t))type metadata accessor for UnifiedMessageActionEvent);
    memset(v16, 0, sizeof(v16));
    sub_27D2F0();
    return sub_6991C((uint64_t)v16);
  }
  return result;
}

id _s13BookAnalytics13EventReporterC020emitAnnotationActionC05using11contentData04viewJ0yAA9BATrackerC_AA014BridgedContentJ0CAA0m4ViewJ0CtF_0()
{
  sub_DF4A4((uint64_t)v12);
  sub_E2DF0(v11);
  char v0 = v11[0];
  char v1 = v11[1];
  char v2 = v11[2];
  id result = [self sharedConnection];
  if (result)
  {
    long long v4 = result;
    unsigned int v5 = [result isDiagnosticSubmissionAllowed];

    if (v5)
    {
      uint64_t v6 = swift_allocObject();
      long long v7 = v12[3];
      *(_OWORD *)(v6 + 48) = v12[2];
      *(_OWORD *)(v6 + 64) = v7;
      long long v8 = v12[5];
      *(_OWORD *)(v6 + 80) = v12[4];
      *(_OWORD *)(v6 + 96) = v8;
      long long v9 = v12[1];
      *(_OWORD *)(v6 + 16) = v12[0];
      *(_OWORD *)(v6 + 32) = v9;
      *(unsigned char *)(v6 + 112) = v0;
      *(unsigned char *)(v6 + 113) = v1;
      *(unsigned char *)(v6 + 114) = v2;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_12FB94;
      *(void *)(v10 + 24) = v6;
      sub_68EB8((uint64_t)v12);
      swift_retain();
      sub_27D730();
      swift_release();
      swift_release();
    }
    return (id)sub_6957C((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_12FBA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_12FBB0(uint64_t a1)
{
  return sub_12E7DC(a1, *(void *)(v1 + 16));
}

uint64_t sub_12FBB8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_12FBF0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_12FC30()
{
  return sub_12EB5C();
}

id _s13BookAnalytics13EventReporterC09emitScrubC05using11contentData015readingSettingsI013startPosition03endM011totalLengthyAA9BATrackerC_AA014BridgedContentI0CAA0r7ReadingkI0CSo8NSNumberCA2RtF_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  sub_DF4A4((uint64_t)v21);
  sub_E1EAC((uint64_t)v22);
  unsigned int v9 = [a4 intValue];
  unsigned int v10 = [a5 intValue];
  unsigned int v11 = [a6 intValue];
  id result = [self sharedConnection];
  if (result)
  {
    unint64_t v13 = result;
    unsigned int v14 = [result isDiagnosticSubmissionAllowed];

    if (v14)
    {
      uint64_t v15 = swift_allocObject();
      long long v16 = v21[3];
      *(_OWORD *)(v15 + 48) = v21[2];
      *(_OWORD *)(v15 + 64) = v16;
      long long v17 = v21[5];
      *(_OWORD *)(v15 + 80) = v21[4];
      *(_OWORD *)(v15 + 96) = v17;
      long long v18 = v21[1];
      *(_OWORD *)(v15 + 16) = v21[0];
      *(_OWORD *)(v15 + 32) = v18;
      long long v19 = v22[1];
      *(_OWORD *)(v15 + 112) = v22[0];
      *(_OWORD *)(v15 + 128) = v19;
      *(_DWORD *)(v15 + 144) = v9;
      *(_DWORD *)(v15 + 148) = v10;
      *(_DWORD *)(v15 + 152) = v11;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_130384;
      *(void *)(v20 + 24) = v15;
      sub_68EB8((uint64_t)v21);
      sub_12FDF4((uint64_t)v22);
      swift_retain();
      sub_27D730();
      swift_release();
      swift_release();
    }
    sub_130074((uint64_t)v22);
    return (id)sub_6957C((uint64_t)v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_12FDE0(uint64_t a1)
{
  return sub_12F1D0(a1, (long long *)(v1 + 16));
}

uint64_t sub_12FDF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_12FE2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_12FE7C(uint64_t a1)
{
  return sub_12F5E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_12FEB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_12FECC()
{
  uint64_t v1 = sub_27CFF0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_12FF5C()
{
  sub_27CFF0();

  return sub_12E36C();
}

unint64_t sub_12FFCC()
{
  unint64_t result = qword_31DBC0;
  if (!qword_31DBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DBC0);
  }
  return result;
}

unint64_t sub_130020()
{
  unint64_t result = qword_31DBD0;
  if (!qword_31DBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DBD0);
  }
  return result;
}

uint64_t sub_130074(uint64_t a1)
{
  return a1;
}

uint64_t sub_1300A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 156, 7);
}

unint64_t sub_1300FC()
{
  unint64_t result = qword_31DBE0;
  if (!qword_31DBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DBE0);
  }
  return result;
}

unint64_t sub_130150()
{
  unint64_t result = qword_31DBE8;
  if (!qword_31DBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DBE8);
  }
  return result;
}

unint64_t sub_1301A4()
{
  unint64_t result = qword_31DBF8;
  if (!qword_31DBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DBF8);
  }
  return result;
}

unint64_t sub_1301F8()
{
  unint64_t result = qword_31DC08;
  if (!qword_31DC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC08);
  }
  return result;
}

unint64_t sub_13024C()
{
  unint64_t result = qword_31DC18;
  if (!qword_31DC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC18);
  }
  return result;
}

uint64_t sub_1302A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1302EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 115, 7);
}

uint64_t sub_13033C(uint64_t a1)
{
  return sub_12DF80(a1, (long long *)(v1 + 16));
}

BookAnalytics::ClearType_optional __swiftcall ClearType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F88F0;
  v8._object = object;
  Swift::Int v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  char *v3 = v7;
  return result;
}

uint64_t ClearType.rawValue.getter()
{
  if (*v0) {
    return 0x796C746E65636572;
  }
  else {
    return 0x6553746E65636572;
  }
}

uint64_t sub_130444(char *a1, char *a2)
{
  return sub_2BEA4(*a1, *a2);
}

unint64_t sub_130454()
{
  unint64_t result = qword_31DC28;
  if (!qword_31DC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC28);
  }
  return result;
}

Swift::Int sub_1304A8()
{
  return sub_27E420();
}

uint64_t sub_130544()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1305CC()
{
  return sub_27E420();
}

BookAnalytics::ClearType_optional sub_130664(Swift::String *a1)
{
  return ClearType.init(rawValue:)(*a1);
}

void sub_130670(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6553746E65636572;
  if (*v1) {
    uint64_t v2 = 0x796C746E65636572;
  }
  unint64_t v3 = 0xEE00736568637261;
  if (*v1) {
    unint64_t v3 = 0xEE00646577656956;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1306C8()
{
  return sub_27DED0();
}

uint64_t sub_130728()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ClearType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x130844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClearType()
{
  return &type metadata for ClearType;
}

unint64_t sub_13087C()
{
  unint64_t result = qword_31DC30;
  if (!qword_31DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC30);
  }
  return result;
}

uint64_t static LibrarySortData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x746E65636572;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x726F68747561;
      break;
    case 4:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x6C61756E616DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746E65636572) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656C746974) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x726F68747561;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6C61756E616DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_130A80()
{
  return 0x6570795474726F73;
}

uint64_t sub_130A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6570795474726F73 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_130B30(uint64_t a1)
{
  unint64_t v2 = sub_130E94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_130B6C(uint64_t a1)
{
  unint64_t v2 = sub_130E94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibrarySortData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31DC38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_130E94();
  sub_27E440();
  char v10 = v7;
  sub_130EE8();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LibrarySortData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31DC50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_130E94();
  sub_27E430();
  if (!v2)
  {
    sub_130F3C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_130E58(unsigned __int8 *a1, char *a2)
{
  return sub_2C4A0(*a1, *a2);
}

uint64_t sub_130E64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LibrarySortData.init(from:)(a1, a2);
}

uint64_t sub_130E7C(void *a1)
{
  return LibrarySortData.encode(to:)(a1);
}

unint64_t sub_130E94()
{
  unint64_t result = qword_31DC40;
  if (!qword_31DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC40);
  }
  return result;
}

unint64_t sub_130EE8()
{
  unint64_t result = qword_31DC48;
  if (!qword_31DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC48);
  }
  return result;
}

unint64_t sub_130F3C()
{
  unint64_t result = qword_31DC58;
  if (!qword_31DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC58);
  }
  return result;
}

unint64_t sub_130F94()
{
  unint64_t result = qword_31DC60;
  if (!qword_31DC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC60);
  }
  return result;
}

unint64_t sub_130FEC()
{
  unint64_t result = qword_31DC68;
  if (!qword_31DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibrarySortData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x13110CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibrarySortData()
{
  return &type metadata for LibrarySortData;
}

unsigned char *storeEnumTagSinglePayload for LibrarySortData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1311E0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibrarySortData.CodingKeys()
{
  return &type metadata for LibrarySortData.CodingKeys;
}

unint64_t sub_13121C()
{
  unint64_t result = qword_31DC70;
  if (!qword_31DC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC70);
  }
  return result;
}

unint64_t sub_131274()
{
  unint64_t result = qword_31DC78;
  if (!qword_31DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC78);
  }
  return result;
}

unint64_t sub_1312CC()
{
  unint64_t result = qword_31DC80;
  if (!qword_31DC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC80);
  }
  return result;
}

BookAnalytics::DealType_optional __swiftcall DealType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8940;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t DealType.rawValue.getter()
{
  uint64_t v1 = 1701147238;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F72446563697270;
  }
}

uint64_t sub_1313D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2B838(*a1, *a2);
}

unint64_t sub_1313E4()
{
  unint64_t result = qword_31DC88;
  if (!qword_31DC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC88);
  }
  return result;
}

Swift::Int sub_131438()
{
  return sub_27E420();
}

uint64_t sub_1314D8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_131564()
{
  return sub_27E420();
}

BookAnalytics::DealType_optional sub_131600(Swift::String *a1)
{
  return DealType.init(rawValue:)(*a1);
}

void sub_13160C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000070;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1701147238;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E776F6E6B6E75;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F72446563697270;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_131668()
{
  return sub_27DED0();
}

uint64_t sub_1316C8()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DealType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1317E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DealType()
{
  return &type metadata for DealType;
}

unint64_t sub_13181C()
{
  unint64_t result = qword_31DC90;
  if (!qword_31DC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DC90);
  }
  return result;
}

uint64_t static FormatFilterData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xEB00000000736569;
  uint64_t v3 = 0x7265536E496C6C61;
  uint64_t v4 = *a1;
  unsigned __int8 v5 = a1[1];
  char v6 = a2[1];
  uint64_t v7 = 0x7265536E496C6C61;
  unint64_t v8 = 0xEB00000000736569;
  switch(v4)
  {
    case 1:
      uint64_t v7 = 0x6573616863727570;
      unint64_t v8 = 0xE900000000000064;
      break;
    case 2:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v7 = 0x646165726E75;
      break;
    case 3:
      unint64_t v8 = 0xE700000000000000;
      uint64_t v7 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      if (v7 == 0x6573616863727570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x646165726E75;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v7 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v7 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v8 == v2)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_14:
        char v9 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      return sub_2D394(v5, v6);
  }
}

uint64_t sub_131A58()
{
  if (*v0) {
    return 0x794274726F73;
  }
  else {
    return 0x79547265746C6966;
  }
}

uint64_t sub_131A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_132520(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_131ABC(uint64_t a1)
{
  unint64_t v2 = sub_131F28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_131AF8(uint64_t a1)
{
  unint64_t v2 = sub_131F28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FormatFilterData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31DC98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_131F28();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_131F7C();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_131FD0();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatFilterData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31DCB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_131F28();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_132024();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_132078();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_131E9C(unsigned __int8 *a1, char *a2)
{
  unsigned __int8 v2 = a1[1];
  char v3 = a2[1];
  if ((sub_30E3C(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2D394(v2, v3);
}

uint64_t sub_131EF8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatFilterData.init(from:)(a1, a2);
}

uint64_t sub_131F10(void *a1)
{
  return FormatFilterData.encode(to:)(a1);
}

unint64_t sub_131F28()
{
  unint64_t result = qword_31DCA0;
  if (!qword_31DCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCA0);
  }
  return result;
}

unint64_t sub_131F7C()
{
  unint64_t result = qword_31DCA8;
  if (!qword_31DCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCA8);
  }
  return result;
}

unint64_t sub_131FD0()
{
  unint64_t result = qword_31DCB0;
  if (!qword_31DCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCB0);
  }
  return result;
}

unint64_t sub_132024()
{
  unint64_t result = qword_31DCC0;
  if (!qword_31DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCC0);
  }
  return result;
}

unint64_t sub_132078()
{
  unint64_t result = qword_31DCC8;
  if (!qword_31DCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCC8);
  }
  return result;
}

unint64_t sub_1320D0()
{
  unint64_t result = qword_31DCD0;
  if (!qword_31DCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCD0);
  }
  return result;
}

unint64_t sub_132128()
{
  unint64_t result = qword_31DCD8;
  if (!qword_31DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCD8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFilterData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 65283 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65283 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65283;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFilterData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1322DCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFilterData()
{
  return &type metadata for FormatFilterData;
}

unsigned char *storeEnumTagSinglePayload for FormatFilterData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1323E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFilterData.CodingKeys()
{
  return &type metadata for FormatFilterData.CodingKeys;
}

unint64_t sub_13241C()
{
  unint64_t result = qword_31DCE0;
  if (!qword_31DCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCE0);
  }
  return result;
}

unint64_t sub_132474()
{
  unint64_t result = qword_31DCE8;
  if (!qword_31DCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCE8);
  }
  return result;
}

unint64_t sub_1324CC()
{
  unint64_t result = qword_31DCF0;
  if (!qword_31DCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DCF0);
  }
  return result;
}

uint64_t sub_132520(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79547265746C6966 && a2 == 0xEA00000000006570;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x794274726F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::ScrubData __swiftcall ScrubData.init(startPosition:endPosition:totalLength:)(Swift::Int32 startPosition, Swift::Int32 endPosition, Swift::Int32 totalLength)
{
  Swift::Int32 *v3 = startPosition;
  v3[1] = endPosition;
  v3[2] = totalLength;
  result.totalLength = endPosition;
  result.startPosition = startPosition;
  return result;
}

uint64_t ScrubData.endPosition.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t ScrubData.endPosition.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*ScrubData.endPosition.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

BOOL static ScrubData.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_132684()
{
  uint64_t v1 = 0x6E756F4365746F6ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6867696C68676968;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B72616D6B6F6F62;
  }
}

uint64_t sub_1326FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_132DAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_132724(uint64_t a1)
{
  unint64_t v2 = sub_13293C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_132760(uint64_t a1)
{
  unint64_t v2 = sub_13293C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentSettingsData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31DCF8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(_DWORD *)(v1 + 4);
  v9[3] = *(_DWORD *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_13293C();
  sub_27E440();
  char v12 = 0;
  sub_27E340();
  if (!v2)
  {
    char v11 = 1;
    sub_27E340();
    char v10 = 2;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_13293C()
{
  unint64_t result = qword_31DD00;
  if (!qword_31DD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DD00);
  }
  return result;
}

uint64_t ContentSettingsData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31DD08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_13293C();
  sub_27E430();
  if (!v2)
  {
    char v16 = 0;
    int v9 = sub_27E270();
    char v15 = 1;
    int v11 = sub_27E270();
    char v14 = 2;
    int v12 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_132B60@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ContentSettingsData.init(from:)(a1, a2);
}

uint64_t sub_132B78(void *a1)
{
  return ContentSettingsData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ContentSettingsData()
{
  return &type metadata for ContentSettingsData;
}

unsigned char *storeEnumTagSinglePayload for ContentSettingsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x132C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSettingsData.CodingKeys()
{
  return &type metadata for ContentSettingsData.CodingKeys;
}

unint64_t sub_132CA8()
{
  unint64_t result = qword_31DD10;
  if (!qword_31DD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DD10);
  }
  return result;
}

unint64_t sub_132D00()
{
  unint64_t result = qword_31DD18;
  if (!qword_31DD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DD18);
  }
  return result;
}

unint64_t sub_132D58()
{
  unint64_t result = qword_31DD20;
  if (!qword_31DD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DD20);
  }
  return result;
}

uint64_t sub_132DAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B72616D6B6F6F62 && a2 == 0xED0000746E756F43;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E756F4365746F6ELL && a2 == 0xE900000000000074 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6867696C68676968 && a2 == 0xEE00746E756F4374)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_132F58(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31DD28, &enum case for SessionGroup.default(_:));
}

uint64_t static LibraryDataEditEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158E8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31DD28, a1);
}

uint64_t sub_132FB8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31DD40, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static LibraryDataEditEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158F0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31DD40, a1);
}

uint64_t LibraryDataEditEvent.libraryEditData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31DD58);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t LibraryDataEditEvent.libraryEditData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31DD58);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t LibraryDataEditEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryDataEditEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LibraryDataEditEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31DDD0);
}

uint64_t LibraryDataEditEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryDataEditEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LibraryDataEditEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LibraryDataEditEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for LibraryDataEditEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t LibraryDataEditEvent.Model.libraryEditData.getter@<X0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryDataEditEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryDataEditEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LibraryDataEditEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31DE68);
}

uint64_t LibraryDataEditEvent.Model.init(libraryEditData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v4 = *(_WORD *)(a1 + 8);
  *(void *)a3 = *(void *)a1;
  *(_WORD *)(a3 + 8) = v4;
  uint64_t v5 = a3 + *(int *)(type metadata accessor for LibraryDataEditEvent.Model(0) + 20);
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_133450()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x457972617262696CLL;
  }
}

uint64_t sub_13349C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_134C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1334C4(uint64_t a1)
{
  unint64_t v2 = sub_133700();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_133500(uint64_t a1)
{
  unint64_t v2 = sub_133700();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryDataEditEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31DD60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_133700();
  sub_27E440();
  __int16 v9 = *((_WORD *)v3 + 4);
  uint64_t v12 = *v3;
  __int16 v13 = v9;
  v11[15] = 0;
  sub_AF8B0();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for LibraryDataEditEvent.Model(0);
    v11[14] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_133700()
{
  unint64_t result = qword_31DD68;
  if (!qword_31DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DD68);
  }
  return result;
}

uint64_t LibraryDataEditEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_31DD70);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LibraryDataEditEvent.Model(0);
  __chkstk_darwin(v8);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_133700();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v26 = 0;
  sub_AF858();
  uint64_t v14 = v22;
  sub_27E260();
  __int16 v15 = v24;
  *(void *)uint64_t v11 = v23;
  *(_WORD *)(v11 + 8) = v15;
  char v25 = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v11 + *(int *)(v17 + 20), v5, v12);
  sub_133A68(v11, v19);
  sub_5E94((uint64_t)a1);
  return sub_133ACC(v11);
}

uint64_t sub_133A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryDataEditEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_133ACC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryDataEditEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_133B28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryDataEditEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_133B40(void *a1)
{
  return LibraryDataEditEvent.Model.encode(to:)(a1);
}

uint64_t sub_133B58@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158E8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31DD28, a1);
}

uint64_t sub_133B90@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158F0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31DD40, a1);
}

uint64_t sub_133BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryDataEditEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31DD58);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for LibraryDataEditEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31DD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_134168);
}

uint64_t sub_134168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31DD58);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryDataEditEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13427C);
}

uint64_t sub_13427C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31DD58);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_134388()
{
  sub_134450();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_134450()
{
  if (!qword_31DDE0)
  {
    sub_AF858();
    sub_AF8B0();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31DDE0);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryDataEditEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t initializeWithCopy for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_134814);
}

uint64_t sub_134814(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryDataEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1348D8);
}

void *sub_1348D8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_134980()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryDataEditEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x134AE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryDataEditEvent.Model.CodingKeys()
{
  return &type metadata for LibraryDataEditEvent.Model.CodingKeys;
}

unint64_t sub_134B20()
{
  unint64_t result = qword_31DEA0;
  if (!qword_31DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DEA0);
  }
  return result;
}

unint64_t sub_134B78()
{
  unint64_t result = qword_31DEA8;
  if (!qword_31DEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DEA8);
  }
  return result;
}

unint64_t sub_134BD0()
{
  unint64_t result = qword_31DEB0;
  if (!qword_31DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DEB0);
  }
  return result;
}

uint64_t sub_134C24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x457972617262696CLL && a2 == 0xEF61746144746964;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_134D48(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31DEB8, &enum case for SessionGroup.default(_:));
}

uint64_t static PageViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3158F8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31DEB8, a1);
}

uint64_t sub_134DA8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31DED0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PageViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315900, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31DED0, a1);
}

uint64_t PageViewEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316A18);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PageViewEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316A18);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t PageViewEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PageViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31DF58);
}

uint64_t PageViewEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageViewEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageViewEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PageViewEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageViewEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageViewEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PageViewEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageViewEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageViewEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PageViewEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageViewEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PageViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PageViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v6, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE0);
  char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t PageViewEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *PageViewEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_4ED08(v1 + 32, (uint64_t)v4);
  sub_4ED08((uint64_t)v4, a1);
  return sub_4FB64(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1F4E8);
}

uint64_t PageViewEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[23];
  uint64_t v3 = v1[24];
  uint64_t v4 = v1[25];
  uint64_t v5 = v1[26];
  uint64_t v6 = v1[27];
  uint64_t v7 = v1[28];
  uint64_t v8 = v1[29];
  uint64_t v9 = v1[30];
  uint64_t v10 = v1[31];
  uint64_t v11 = v1[32];
  uint64_t v12 = v1[33];
  uint64_t v13 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t PageViewEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PageViewEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[38];
  uint64_t v3 = v1[39];
  uint64_t v4 = v1[40];
  uint64_t v5 = v1[41];
  uint64_t v6 = v1[42];
  uint64_t v7 = v1[43];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t PageViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PageViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31DFF8);
}

uint64_t PageViewEvent.Model.init(pageData:linkData:contentData:upSellData:seriesData:eventData:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v28 = *a1;
  uint64_t v12 = *((void *)a1 + 2);
  uint64_t v13 = *((void *)a1 + 3);
  sub_4ED08(a2, (uint64_t)v32);
  long long v26 = a3[1];
  long long v27 = *a3;
  long long v24 = a3[3];
  long long v25 = a3[2];
  long long v23 = a3[4];
  uint64_t v15 = *((void *)a3 + 10);
  uint64_t v14 = *((void *)a3 + 11);
  long long v16 = *a4;
  uint64_t v17 = *((void *)a4 + 2);
  long long v30 = *a5;
  long long v31 = v16;
  long long v29 = a5[1];
  uint64_t v19 = *((void *)a5 + 4);
  uint64_t v18 = *((void *)a5 + 5);
  *(_OWORD *)a7 = v28;
  *(void *)(a7 + 16) = v12;
  *(void *)(a7 + 24) = v13;
  sub_4ED08((uint64_t)v32, a7 + 32);
  *(_OWORD *)(a7 + 184) = v27;
  *(_OWORD *)(a7 + 200) = v26;
  *(_OWORD *)(a7 + 216) = v25;
  *(_OWORD *)(a7 + 232) = v24;
  *(_OWORD *)(a7 + 248) = v23;
  *(void *)(a7 + 264) = v15;
  *(void *)(a7 + 272) = v14;
  *(_OWORD *)(a7 + 280) = v31;
  *(void *)(a7 + 296) = v17;
  *(_OWORD *)(a7 + 304) = v30;
  *(_OWORD *)(a7 + 320) = v29;
  *(void *)(a7 + 336) = v19;
  *(void *)(a7 + 344) = v18;
  uint64_t v20 = a7 + *(int *)(type metadata accessor for PageViewEvent.Model(0) + 36);
  uint64_t v21 = sub_27D7C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a6, v21);
}

uint64_t sub_135A7C()
{
  uint64_t result = 0x6174614465676170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 2:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 3:
      uint64_t v2 = 0x6C6C65537075;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x736569726573;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 5:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_135B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_139250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_135B70(uint64_t a1)
{
  unint64_t v2 = sub_135F08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_135BAC(uint64_t a1)
{
  unint64_t v2 = sub_135F08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PageViewEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_31DEE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_135F08();
  sub_27E440();
  uint64_t v8 = *((void *)v2 + 2);
  uint64_t v9 = *((void *)v2 + 3);
  long long v26 = *v2;
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  v25[159] = 0;
  sub_1FEAC();
  uint64_t v10 = v29;
  sub_27E330();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_4ED08((uint64_t)(v2 + 2), (uint64_t)v25);
  sub_4ED08((uint64_t)v25, (uint64_t)&v19);
  char v18 = 1;
  sub_1FF00();
  sub_27E2C0();
  long long v11 = *(long long *)((char *)v2 + 200);
  long long v19 = *(long long *)((char *)v2 + 184);
  long long v20 = v11;
  long long v12 = *(long long *)((char *)v2 + 232);
  long long v21 = *(long long *)((char *)v2 + 216);
  long long v22 = v12;
  long long v13 = *(long long *)((char *)v2 + 264);
  long long v23 = *(long long *)((char *)v2 + 248);
  long long v24 = v13;
  char v18 = 2;
  sub_1A1D4();
  sub_27E2C0();
  uint64_t v14 = *((void *)v2 + 37);
  long long v19 = *(long long *)((char *)v2 + 280);
  *(void *)&long long v20 = v14;
  char v18 = 3;
  sub_36A74();
  sub_27E2C0();
  long long v16 = v2[20];
  long long v19 = v2[19];
  long long v20 = v16;
  long long v21 = v2[21];
  char v18 = 4;
  sub_11514();
  sub_27E2C0();
  type metadata accessor for PageViewEvent.Model(0);
  LOBYTE(v19) = 5;
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_135F08()
{
  unint64_t result = qword_31DEF0;
  if (!qword_31DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31DEF0);
  }
  return result;
}

uint64_t PageViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v30 = sub_27D7C0();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4E04(&qword_31DEF8);
  uint64_t v29 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PageViewEvent.Model(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_135F08();
  uint64_t v32 = v6;
  uint64_t v10 = v45;
  sub_27E430();
  if (v10) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v26 = v7;
  uint64_t v27 = v4;
  uint64_t v45 = a1;
  uint64_t v12 = v29;
  uint64_t v11 = v30;
  uint64_t v13 = (uint64_t)v9;
  uint64_t v14 = v31;
  v41[0] = 0;
  sub_208EC();
  sub_27E260();
  uint64_t v15 = v43;
  uint64_t v16 = v44;
  *(_OWORD *)uint64_t v13 = v42;
  *(void *)(v13 + 16) = v15;
  *(void *)(v13 + 24) = v16;
  v41[159] = 1;
  sub_20940();
  sub_27E1F0();
  sub_4ED08((uint64_t)&v42, (uint64_t)v41);
  sub_4ED08((uint64_t)v41, v13 + 32);
  char v34 = 2;
  sub_1A98C();
  sub_27E1F0();
  uint64_t v25 = 0;
  long long v17 = v36;
  *(_OWORD *)(v13 + 184) = v35;
  *(_OWORD *)(v13 + 200) = v17;
  long long v18 = v38;
  *(_OWORD *)(v13 + 216) = v37;
  *(_OWORD *)(v13 + 232) = v18;
  long long v19 = v40;
  *(_OWORD *)(v13 + 248) = v39;
  *(_OWORD *)(v13 + 264) = v19;
  char v34 = 3;
  sub_37744();
  sub_27E1F0();
  uint64_t v20 = v36;
  *(_OWORD *)(v13 + 280) = v35;
  *(void *)(v13 + 296) = v20;
  char v34 = 4;
  sub_11A3C();
  sub_27E1F0();
  long long v21 = v36;
  *(_OWORD *)(v13 + 304) = v35;
  *(_OWORD *)(v13 + 320) = v21;
  *(_OWORD *)(v13 + 336) = v37;
  LOBYTE(v35) = 5;
  sub_1AB30(&qword_315E28);
  long long v22 = v27;
  sub_27E260();
  uint64_t v23 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v13 + *(int *)(v26 + 36), v22, v11);
  sub_136554(v13, v14);
  sub_5E94(v23);
  return sub_1365B8(v13);
}