uint64_t sub_136554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1365B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_136614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PageViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_13662C(void *a1)
{
  return PageViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_136644@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3158F8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31DEB8, a1);
}

uint64_t sub_13667C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315900, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31DED0, a1);
}

uint64_t sub_1366B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v7, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE0);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for PageViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A18);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for PageViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for PageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for PageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for PageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for PageViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1374B8);
}

uint64_t sub_1374B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for PageViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_137714);
}

uint64_t sub_137714(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_137968()
{
  sub_137C38(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
  if (v0 <= 0x3F)
  {
    sub_137C38(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_137C38(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
      if (v2 <= 0x3F)
      {
        sub_137C38(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
        if (v3 <= 0x3F)
        {
          sub_137C38(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
          if (v4 <= 0x3F)
          {
            sub_6DA0();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_137C38(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PageViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v8)
  {
    long long v22 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v22;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(void *)(a1 + 176) = a2[22];
    long long v23 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v23;
    long long v24 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v24;
    long long v25 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v25;
    uint64_t v17 = a2[24];
    if (v17) {
      goto LABEL_4;
    }
LABEL_7:
    long long v26 = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 232) = v26;
    long long v27 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v27;
    long long v28 = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 200) = v28;
    goto LABEL_8;
  }
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  uint64_t v11 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = a2[16];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = v13;
  uint64_t v14 = a2[18];
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = v14;
  uint64_t v15 = a2[20];
  *(void *)(a1 + 152) = a2[19];
  *(void *)(a1 + 160) = v15;
  uint64_t v16 = a2[22];
  *(void *)(a1 + 168) = a2[21];
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = a2[24];
  if (!v17) {
    goto LABEL_7;
  }
LABEL_4:
  *(void *)(a1 + 184) = a2[23];
  *(void *)(a1 + 192) = v17;
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  uint64_t v18 = a2[27];
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = v18;
  uint64_t v19 = a2[29];
  *(void *)(a1 + 224) = a2[28];
  *(void *)(a1 + 232) = v19;
  *(_WORD *)(a1 + 240) = *((_WORD *)a2 + 120);
  *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
  *(_DWORD *)(a1 + 244) = *((_DWORD *)a2 + 61);
  *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
  *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
  *(_DWORD *)(a1 + 257) = *(_DWORD *)((char *)a2 + 257);
  *(unsigned char *)(a1 + 261) = *((unsigned char *)a2 + 261);
  uint64_t v20 = a2[34];
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_WORD *)(a1 + 280) = *((_WORD *)a2 + 140);
  uint64_t v29 = a2[37];
  *(void *)(a1 + 288) = a2[36];
  *(void *)(a1 + 296) = v29;
  uint64_t v30 = a2[43];
  swift_bridgeObjectRetain();
  if (v30 == 1)
  {
    long long v31 = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v31;
    *(_OWORD *)(a1 + 336) = *((_OWORD *)a2 + 21);
  }
  else
  {
    *(void *)(a1 + 304) = a2[38];
    *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
    *(void *)(a1 + 320) = a2[40];
    *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
    *(_WORD *)(a1 + 329) = *(_WORD *)((char *)a2 + 329);
    *(void *)(a1 + 336) = a2[42];
    *(void *)(a1 + 344) = v30;
    swift_bridgeObjectRetain();
  }
  uint64_t v32 = *(int *)(a3 + 36);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t)a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

uint64_t destroy for PageViewEvent.Model(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[24])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[43] != 1) {
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v9;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = *(void *)(a2 + 192);
    if (v16)
    {
LABEL_3:
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v16;
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      uint64_t v17 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v17;
      uint64_t v18 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v18;
      *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_DWORD *)(a1 + 257) = *(_DWORD *)(a2 + 257);
      *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
      uint64_t v19 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    long long v21 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v21;
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    long long v23 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v23;
    uint64_t v16 = *(void *)(a2 + 192);
    if (v16) {
      goto LABEL_3;
    }
  }
  long long v24 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v24;
  long long v25 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v25;
  long long v26 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v26;
LABEL_6:
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  uint64_t v27 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v27;
  uint64_t v28 = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    long long v29 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v29;
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  }
  else
  {
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
    *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v28;
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = *(int *)(a3 + 36);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 32);
      long long v9 = *(_OWORD *)(a2 + 48);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 48) = v9;
      long long v10 = *(_OWORD *)(a2 + 112);
      long long v12 = *(_OWORD *)(a2 + 64);
      long long v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 80) = v11;
      long long v14 = *(_OWORD *)(a2 + 144);
      long long v13 = *(_OWORD *)(a2 + 160);
      long long v15 = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 128) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 48);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 48) = v16;
    long long v17 = *(_OWORD *)(a2 + 64);
    long long v18 = *(_OWORD *)(a2 + 80);
    long long v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v19;
    *(_OWORD *)(a1 + 64) = v17;
    *(_OWORD *)(a1 + 80) = v18;
    long long v20 = *(_OWORD *)(a2 + 128);
    long long v21 = *(_OWORD *)(a2 + 144);
    long long v22 = *(_OWORD *)(a2 + 160);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 160) = v22;
    *(_OWORD *)(a1 + 128) = v20;
  }
  long long v23 = (_OWORD *)(a1 + 184);
  long long v24 = (_OWORD *)(a2 + 184);
  uint64_t v25 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192))
  {
    if (v25)
    {
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
      int v26 = *(_DWORD *)(a2 + 244);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(_DWORD *)(a1 + 244) = v26;
      int v27 = *(_DWORD *)(a2 + 252);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_DWORD *)(a1 + 252) = v27;
      *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
      *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
      *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 184);
      long long v30 = *(_OWORD *)(a2 + 200);
      *long long v23 = *v24;
      *(_OWORD *)(a1 + 200) = v30;
      long long v31 = *(_OWORD *)(a2 + 264);
      long long v33 = *(_OWORD *)(a2 + 216);
      long long v32 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v31;
      *(_OWORD *)(a1 + 216) = v33;
      *(_OWORD *)(a1 + 232) = v32;
    }
  }
  else if (v25)
  {
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
    int v28 = *(_DWORD *)(a2 + 244);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(_DWORD *)(a1 + 244) = v28;
    int v29 = *(_DWORD *)(a2 + 252);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(_DWORD *)(a1 + 252) = v29;
    *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
    *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
    *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *(_OWORD *)(a2 + 200);
    *long long v23 = *v24;
    *(_OWORD *)(a1 + 200) = v34;
    long long v35 = *(_OWORD *)(a2 + 216);
    long long v36 = *(_OWORD *)(a2 + 232);
    long long v37 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v37;
    *(_OWORD *)(a1 + 216) = v35;
    *(_OWORD *)(a1 + 232) = v36;
  }
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(unsigned char *)(a1 + 281) = *(unsigned char *)(a2 + 281);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = (long long *)(a1 + 304);
  v39 = (long long *)(a2 + 304);
  uint64_t v40 = *(void *)(a2 + 344);
  if (*(void *)(a1 + 344) == 1)
  {
    if (v40 == 1)
    {
      long long v41 = *v39;
      long long v42 = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 336) = v42;
      long long *v38 = v41;
    }
    else
    {
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
      *(unsigned char *)(a1 + 330) = *(unsigned char *)(a2 + 330);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
    }
  }
  else if (v40 == 1)
  {
    sub_1CDD8(a1 + 304);
    long long v44 = *(_OWORD *)(a2 + 320);
    long long v43 = *(_OWORD *)(a2 + 336);
    long long *v38 = *v39;
    *(_OWORD *)(a1 + 320) = v44;
    *(_OWORD *)(a1 + 336) = v43;
  }
  else
  {
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
    *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
    *(unsigned char *)(a1 + 330) = *(unsigned char *)(a2 + 330);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = *(int *)(a3 + 36);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

uint64_t initializeWithTake for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  long long v9 = *(_OWORD *)(a2 + 304);
  long long v10 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v10;
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 304) = v9;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    uint64_t v8 = *(void *)(a2 + 40);
    if (v8)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v11 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23648(a1 + 32);
  }
  long long v17 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v17;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  long long v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
LABEL_6:
  if (*(void *)(a1 + 192))
  {
    uint64_t v21 = *(void *)(a2 + 192);
    if (v21)
    {
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v21;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      uint64_t v22 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v23;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_DWORD *)(a1 + 257) = *(_DWORD *)(a2 + 257);
      *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
      uint64_t v24 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_62898(a1 + 184);
  }
  long long v25 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v25;
  long long v26 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v26;
  long long v27 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v27;
LABEL_11:
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  uint64_t v28 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v28;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 344) != 1)
  {
    uint64_t v29 = *(void *)(a2 + 344);
    if (v29 != 1)
    {
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1CDD8(a1 + 304);
  }
  long long v30 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v30;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
LABEL_16:
  uint64_t v31 = *(int *)(a3 + 36);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_138E18);
}

uint64_t sub_138E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PageViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_138EDC);
}

uint64_t sub_138EDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_138F84()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x139110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageViewEvent.Model.CodingKeys()
{
  return &type metadata for PageViewEvent.Model.CodingKeys;
}

unint64_t sub_13914C()
{
  unint64_t result = qword_31E040;
  if (!qword_31E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E040);
  }
  return result;
}

unint64_t sub_1391A4()
{
  unint64_t result = qword_31E048;
  if (!qword_31E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E048);
  }
  return result;
}

unint64_t sub_1391FC()
{
  unint64_t result = qword_31E050;
  if (!qword_31E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E050);
  }
  return result;
}

uint64_t sub_139250(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614465676170 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t RemoteConfigNamespaceData.treatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteConfigNamespaceData.treatmentIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t OptionListData.init(optionIdentifier:optionSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

BOOL static UserEmbedding.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_27E370() & 1) == 0) {
    return 0;
  }

  return sub_81A54(v2, v3);
}

uint64_t sub_1395C4()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1395F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_13A008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13961C(uint64_t a1)
{
  unint64_t v2 = sub_139854();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_139658(uint64_t a1)
{
  unint64_t v2 = sub_139854();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserFeature.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31E058);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_139854();
  sub_27E440();
  char v13 = 0;
  sub_27E2F0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_4E04(&qword_31E068);
    sub_139AF0(&qword_31E070);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_139854()
{
  unint64_t result = qword_31E060;
  if (!qword_31E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E060);
  }
  return result;
}

uint64_t UserFeature.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E078);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_139854();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  sub_4E04(&qword_31E068);
  char v15 = 1;
  sub_139AF0(&qword_31E080);
  swift_bridgeObjectRetain();
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_139AF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_31E068);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_139B58()
{
  unint64_t result = qword_31E088;
  if (!qword_31E088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E088);
  }
  return result;
}

unint64_t sub_139BB0()
{
  unint64_t result = qword_31E090;
  if (!qword_31E090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E090);
  }
  return result;
}

uint64_t sub_139C04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserFeature.init(from:)(a1, a2);
}

uint64_t sub_139C1C(void *a1)
{
  return UserFeature.encode(to:)(a1);
}

uint64_t destroy for UserFeature()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13BookAnalytics11UserFeatureVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserFeature(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserFeature(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserFeature(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserFeature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserFeature()
{
  return &type metadata for UserFeature;
}

unsigned char *storeEnumTagSinglePayload for UserFeature.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x139EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserFeature.CodingKeys()
{
  return &type metadata for UserFeature.CodingKeys;
}

unint64_t sub_139F04()
{
  unint64_t result = qword_31E098;
  if (!qword_31E098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E098);
  }
  return result;
}

unint64_t sub_139F5C()
{
  unint64_t result = qword_31E0A0;
  if (!qword_31E0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E0A0);
  }
  return result;
}

unint64_t sub_139FB4()
{
  unint64_t result = qword_31E0A8;
  if (!qword_31E0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E0A8);
  }
  return result;
}

uint64_t sub_13A008(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::ContentSource_optional __swiftcall ContentSource.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F89A8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ContentSource.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6573616863727570;
      break;
    case 2:
      uint64_t result = 0x64616F6C65646973;
      break;
    case 3:
      uint64_t result = 0x726564726F657270;
      break;
    case 4:
      uint64_t result = 0x656C706D6173;
      break;
    case 5:
      uint64_t result = 0x5364656E776F6E75;
      break;
    case 6:
      uint64_t result = 0x7550796C696D6166;
      break;
    case 7:
      uint64_t result = 0x646567616E616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_13A254(unsigned __int8 *a1, char *a2)
{
  return sub_31D14(*a1, *a2);
}

unint64_t sub_13A264()
{
  unint64_t result = qword_31E0B0;
  if (!qword_31E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E0B0);
  }
  return result;
}

Swift::Int sub_13A2B8()
{
  return sub_25C978();
}

uint64_t sub_13A2C4()
{
  return sub_27C0FC();
}

Swift::Int sub_13A2CC()
{
  return sub_25C978();
}

BookAnalytics::ContentSource_optional sub_13A2D4(Swift::String *a1)
{
  return ContentSource.init(rawValue:)(*a1);
}

void sub_13A2E0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      uint64_t v3 = 0x6573616863727570;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x64616F6C65646973;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    case 3:
      *(void *)a1 = 0x726564726F657270;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      *(void *)a1 = 0x656C706D6173;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 5:
      strcpy((char *)a1, "unownedStore");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 6:
      strcpy((char *)a1, "familyPurchase");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 7:
      *(void *)a1 = 0x646567616E616DLL;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_13A410()
{
  return sub_27DED0();
}

uint64_t sub_13A470()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ContentSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x13A58CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSource()
{
  return &type metadata for ContentSource;
}

unint64_t sub_13A5C4()
{
  unint64_t result = qword_31E0B8;
  if (!qword_31E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E0B8);
  }
  return result;
}

BookAnalytics::HostingControllerVisibilityStateManager::State_optional __swiftcall HostingControllerVisibilityStateManager.State.init(rawValue:)(Swift::String rawValue)
{
  return (BookAnalytics::HostingControllerVisibilityStateManager::State_optional)sub_13A950(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_2F8A88, v1);
}

uint64_t HostingControllerVisibilityStateManager.State.rawValue.getter()
{
  if (*v0) {
    return 0x6E6564646968;
  }
  else {
    return 0x656C6269736976;
  }
}

uint64_t sub_13A65C(char *a1, char *a2)
{
  return sub_2D8A0(*a1, *a2);
}

Swift::Int sub_13A668()
{
  return sub_27E420();
}

uint64_t sub_13A6E8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_13A754()
{
  return sub_27E420();
}

BookAnalytics::HostingControllerVisibilityStateManager::State_optional sub_13A7D0(Swift::String *a1)
{
  return HostingControllerVisibilityStateManager.State.init(rawValue:)(*a1);
}

void sub_13A7DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656C6269736976;
  if (*v1) {
    uint64_t v2 = 0x6E6564646968;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

BookAnalytics::HostingControllerVisibilityStateManager::HostingControllerLifeCycleEvent_optional __swiftcall HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent.init(rawValue:)(Swift::String rawValue)
{
  return (BookAnalytics::HostingControllerVisibilityStateManager::HostingControllerLifeCycleEvent_optional)sub_13A950(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_2F8AD8, v1);
}

unint64_t HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_13A864(char *a1, char *a2)
{
  return sub_2D7F4(*a1, *a2);
}

Swift::Int sub_13A870()
{
  return sub_20BAF0();
}

uint64_t sub_13A878()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_13A8EC()
{
  return sub_25D590();
}

BookAnalytics::HostingControllerVisibilityStateManager::HostingControllerLifeCycleEvent_optional sub_13A8F4(Swift::String *a1)
{
  return HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent.init(rawValue:)(*a1);
}

void sub_13A900(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000014;
  }
  else {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x80000000002AD330;
  if (*v1) {
    unint64_t v3 = 0x80000000002AD350;
  }
  *a1 = v2;
  a1[1] = v3;
}

BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent_optional __swiftcall HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.init(rawValue:)(Swift::String rawValue)
{
  return (BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent_optional)sub_13A950(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_2F8B28, v1);
}

uint64_t sub_13A950@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  Swift::Int v7 = sub_27E1B0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 == 1) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  if (!v7) {
    char v9 = 0;
  }
  *a4 = v9;
  return result;
}

uint64_t HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.rawValue.getter()
{
  if (*v0) {
    return 0x7070617369446E6FLL;
  }
  else {
    return 0x7261657070416E6FLL;
  }
}

uint64_t sub_13A9F4(char *a1, char *a2)
{
  return sub_2D744(*a1, *a2);
}

Swift::Int sub_13AA00()
{
  return sub_27E420();
}

uint64_t sub_13AA8C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_13AB04()
{
  return sub_27E420();
}

BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent_optional sub_13AB8C(Swift::String *a1)
{
  return HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.init(rawValue:)(*a1);
}

void sub_13AB98(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7261657070416E6FLL;
  if (*v1) {
    uint64_t v2 = 0x7070617369446E6FLL;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000726165;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t HostingControllerVisibilityStateManager.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t HostingControllerVisibilityStateManager.hostingControllerEventPublisher.getter()
{
  return sub_27D9E0();
}

uint64_t HostingControllerVisibilityStateManager.swiftUIEventPublisher.getter()
{
  return sub_27D9E0();
}

uint64_t HostingControllerVisibilityStateManager.statePublisher.getter()
{
  return sub_27D9E0();
}

uint64_t HostingControllerVisibilityStateManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_4E04(&qword_31E0C8);
  swift_allocObject();
  *(void *)(v0 + 24) = sub_27D9D0();
  sub_4E04(&qword_31E0D8);
  swift_allocObject();
  *(void *)(v0 + 32) = sub_27D9D0();
  sub_4E04(&qword_31E0E8);
  swift_allocObject();
  *(void *)(v0 + 40) = sub_27D9D0();
  *(_WORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  return v0;
}

uint64_t HostingControllerVisibilityStateManager.init()()
{
  sub_4E04(&qword_31E0C8);
  swift_allocObject();
  *(void *)(v0 + 24) = sub_27D9D0();
  sub_4E04(&qword_31E0D8);
  swift_allocObject();
  *(void *)(v0 + 32) = sub_27D9D0();
  sub_4E04(&qword_31E0E8);
  swift_allocObject();
  *(void *)(v0 + 40) = sub_27D9D0();
  *(_WORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  return v0;
}

Swift::Void __swiftcall HostingControllerVisibilityStateManager.signal(event:)(BookAnalytics::HostingControllerVisibilityStateManager::HostingControllerLifeCycleEvent event)
{
  int v2 = *(unsigned __int8 *)event;
  *(unsigned char *)(v1 + 49) = v2 ^ 1;
  sub_13B0A8();
  LOBYTE(v9) = v2;
  sub_27D9C0();
  if (qword_315680 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_27D9B0();
  sub_4BD4(v3, (uint64_t)qword_3187D8);
  unsigned int v4 = sub_27D990();
  os_log_type_t v5 = sub_27DFC0();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)unsigned int v6 = 136315138;
    if (v2) {
      uint64_t v7 = 0xD000000000000014;
    }
    else {
      uint64_t v7 = 0xD000000000000011;
    }
    if (v2) {
      unint64_t v8 = 0x80000000002AD350;
    }
    else {
      unint64_t v8 = 0x80000000002AD330;
    }
    sub_12D450(v7, v8, &v9);
    sub_27E050();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "Did signal HostingControllerLifeCycleEvent.%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_13B0A8()
{
  uint64_t v1 = v0;
  BOOL v2 = *(unsigned char *)(v0 + 48) != 1 || (*(unsigned char *)(v0 + 49) & 1) == 0;
  if (qword_315680 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_27D9B0();
  sub_4BD4(v3, (uint64_t)qword_3187D8);
  swift_retain_n();
  unsigned int v4 = sub_27D990();
  os_log_type_t v5 = sub_27DFC0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    if (v2) {
      uint64_t v7 = 0x6E6564646968;
    }
    else {
      uint64_t v7 = 0x656C6269736976;
    }
    if (v2) {
      unint64_t v8 = 0xE600000000000000;
    }
    else {
      unint64_t v8 = 0xE700000000000000;
    }
    sub_12D450(v7, v8, v13);
    sub_27E050();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 1024;
    swift_release();
    sub_27E050();
    swift_release();
    *(_WORD *)(v6 + 18) = 1024;
    swift_release();
    sub_27E050();
    swift_release();
    _os_log_impl(&dword_0, v4, v5, "Did recompute state: %s, swiftUIViewIsVisible: %{BOOL}d, hostingControllerViewIsVisible:%{BOOL}d", (uint8_t *)v6, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    if (v2) {
      uint64_t v7 = 0x6E6564646968;
    }
    else {
      uint64_t v7 = 0x656C6269736976;
    }
    if (v2) {
      unint64_t v8 = 0xE600000000000000;
    }
    else {
      unint64_t v8 = 0xE700000000000000;
    }
  }
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t v9 = 0x6E6564646968;
  }
  else {
    uint64_t v9 = 0x656C6269736976;
  }
  if (*(unsigned char *)(v1 + 16)) {
    unint64_t v10 = 0xE600000000000000;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v7 == v9 && v8 == v10) {
    return swift_bridgeObjectRelease_n();
  }
  char v12 = sub_27E370();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    *(unsigned char *)(v1 + 16) = v2;
    return sub_27D9C0();
  }
  return result;
}

Swift::Void __swiftcall HostingControllerVisibilityStateManager.signal(event:)(BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent event)
{
  int v2 = *(unsigned __int8 *)event;
  *(unsigned char *)(v1 + 48) = v2 ^ 1;
  sub_13B0A8();
  LOBYTE(v10) = v2;
  sub_27D9C0();
  if (qword_315680 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_27D9B0();
  sub_4BD4(v3, (uint64_t)qword_3187D8);
  unsigned int v4 = sub_27D990();
  os_log_type_t v5 = sub_27DFC0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v10 = v7;
    if (v2) {
      uint64_t v8 = 0x7070617369446E6FLL;
    }
    else {
      uint64_t v8 = 0x7261657070416E6FLL;
    }
    if (v2) {
      unint64_t v9 = 0xEB00000000726165;
    }
    else {
      unint64_t v9 = 0xE800000000000000;
    }
    sub_12D450(v8, v9, &v10);
    sub_27E050();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "Did signal SwiftUILifeCycleEvent.%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t HostingControllerVisibilityStateManager.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t HostingControllerVisibilityStateManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocClassInstance(v0, 50, 7);
}

uint64_t sub_13B600()
{
  type metadata accessor for HostingControllerVisibilityStateManager();
  uint64_t v0 = swift_allocObject();
  sub_4E04(&qword_31E0C8);
  swift_allocObject();
  *(void *)(v0 + 24) = sub_27D9D0();
  sub_4E04(&qword_31E0D8);
  swift_allocObject();
  *(void *)(v0 + 32) = sub_27D9D0();
  sub_4E04(&qword_31E0E8);
  swift_allocObject();
  uint64_t result = sub_27D9D0();
  *(void *)(v0 + 40) = result;
  *(_WORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  qword_31E0C0 = v0;
  return result;
}

uint64_t sub_13B6B0@<X0>(void *a1@<X8>)
{
  if (qword_315908 != -1) {
    swift_once();
  }
  *a1 = qword_31E0C0;

  return swift_retain();
}

uint64_t EnvironmentValues.analyticsVisibilityManager.getter()
{
  sub_13BE18();
  sub_27DB00();
  return v1;
}

uint64_t sub_13B758@<X0>(void *a1@<X8>)
{
  sub_13BE18();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_13B7A8()
{
  return sub_27DB10();
}

uint64_t EnvironmentValues.analyticsVisibilityManager.setter()
{
  return sub_27DB10();
}

uint64_t (*EnvironmentValues.analyticsVisibilityManager.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_13BE18();
  sub_27DB00();
  return sub_13B8A4;
}

uint64_t sub_13B8A4(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_27DB10();
  }
  swift_retain();
  sub_27DB10();

  return swift_release();
}

uint64_t View.observeAnalyticsVisibility()()
{
  return swift_release();
}

uint64_t View.analyticsVisibilityState(_:)()
{
  return swift_release();
}

uint64_t sub_13BA38(uint64_t a1, char a2, char a3)
{
  char v4 = a2 & 1;
  uint64_t v5 = swift_retain();
  sub_D340(v5, v4);
  swift_release();
  char v7 = a3;
  HostingControllerVisibilityStateManager.signal(event:)((BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent)&v7);

  return swift_release();
}

uint64_t sub_13BAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E1F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  char v10 = *((unsigned char *)v2 + 8);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(unsigned char *)(v11 + 24) = v10;
  uint64_t v12 = sub_4E04(&qword_31E1F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, a1, v12);
  char v13 = (uint64_t (**)())&v8[*(int *)(v6 + 44)];
  *char v13 = sub_13C60C;
  v13[1] = (uint64_t (*)())v11;
  v13[2] = 0;
  uint64_t v13[3] = 0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v9;
  *(unsigned char *)(v14 + 24) = v10;
  sub_13C654((uint64_t)v8, a2);
  char v15 = (void *)(a2 + *(int *)(sub_4E04(&qword_31E200) + 36));
  *char v15 = 0;
  v15[1] = 0;
  v15[2] = sub_13C630;
  v15[3] = v14;
  swift_retain_n();
  return sub_13C6BC((uint64_t)v8);
}

uint64_t sub_13BC34(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  char v6 = a4 & 1;
  swift_retain();
  sub_D340(a3, v6);
  swift_release();
  if ((a4 & 0x100) != 0) {
    char v7 = 1;
  }
  else {
    char v7 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  char v9 = v7 & 1;
  HostingControllerVisibilityStateManager.signal(event:)((BookAnalytics::HostingControllerVisibilityStateManager::SwiftUILifeCycleEvent)&v9);

  return swift_release();
}

uint64_t sub_13BCFC()
{
  return sub_27DA20();
}

uint64_t sub_13BD18()
{
  uint64_t v1 = *v0;
  char v2 = *((unsigned char *)v0 + 8);
  char v5 = *((unsigned char *)v0 + 9);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 25) = v5;
  swift_retain();
  sub_4E04(&qword_31E208);
  sub_13C89C(&qword_31E210, &qword_31E208);
  sub_13BEC4();
  sub_27DB90();
  return swift_release();
}

unint64_t sub_13BE18()
{
  unint64_t result = qword_31E0F8;
  if (!qword_31E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E0F8);
  }
  return result;
}

uint64_t sub_13BE6C@<X0>(void *a1@<X8>)
{
  sub_13BE18();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

unint64_t sub_13BEC4()
{
  unint64_t result = qword_31E100;
  if (!qword_31E100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E100);
  }
  return result;
}

unint64_t sub_13BF1C()
{
  unint64_t result = qword_31E108;
  if (!qword_31E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E108);
  }
  return result;
}

unint64_t sub_13BF74()
{
  unint64_t result = qword_31E110;
  if (!qword_31E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E110);
  }
  return result;
}

uint64_t type metadata accessor for HostingControllerVisibilityStateManager()
{
  return self;
}

uint64_t method lookup function for HostingControllerVisibilityStateManager(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HostingControllerVisibilityStateManager);
}

uint64_t dispatch thunk of HostingControllerVisibilityStateManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for HostingControllerVisibilityStateManager.State()
{
  return &type metadata for HostingControllerVisibilityStateManager.State;
}

ValueMetadata *type metadata accessor for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent()
{
  return &type metadata for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent;
}

unsigned char *_s13BookAnalytics39HostingControllerVisibilityStateManagerC5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x13C10CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent()
{
  return &type metadata for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent;
}

uint64_t sub_13C144(uint64_t a1)
{
  return sub_13C1D8(a1, (uint64_t)&type metadata for ObserveAnalyticsVisibilityViewModifier, (void (*)(void))sub_13C164);
}

unint64_t sub_13C164()
{
  unint64_t result = qword_31E1E0;
  if (!qword_31E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E1E0);
  }
  return result;
}

uint64_t sub_13C1B8(uint64_t a1)
{
  return sub_13C1D8(a1, (uint64_t)&type metadata for SetAnalyticsVisibilityStateViewModifier, (void (*)(void))sub_13C248);
}

uint64_t sub_13C1D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return swift_getWitnessTable();
}

unint64_t sub_13C248()
{
  unint64_t result = qword_31E1E8;
  if (!qword_31E1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E1E8);
  }
  return result;
}

uint64_t destroy for SetAnalyticsVisibilityStateViewModifier()
{
  return swift_release();
}

uint64_t _s13BookAnalytics39SetAnalyticsVisibilityStateViewModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SetAnalyticsVisibilityStateViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for SetAnalyticsVisibilityStateViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetAnalyticsVisibilityStateViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SetAnalyticsVisibilityStateViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetAnalyticsVisibilityStateViewModifier()
{
  return &type metadata for SetAnalyticsVisibilityStateViewModifier;
}

uint64_t initializeBufferWithCopyOfBuffer for ObserveAnalyticsVisibilityViewModifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ObserveAnalyticsVisibilityViewModifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ObserveAnalyticsVisibilityViewModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ObserveAnalyticsVisibilityViewModifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObserveAnalyticsVisibilityViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObserveAnalyticsVisibilityViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObserveAnalyticsVisibilityViewModifier()
{
  return &type metadata for ObserveAnalyticsVisibilityViewModifier;
}

ValueMetadata *type metadata accessor for HostingControllerVisibilityStateManagerKey()
{
  return &type metadata for HostingControllerVisibilityStateManagerKey;
}

uint64_t sub_13C59C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13C5B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13C5D4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_13C60C()
{
  return sub_13BA38(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), 0);
}

uint64_t sub_13C630()
{
  return sub_13BA38(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), 1);
}

uint64_t sub_13C654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31E1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_13C6BC(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_31E1F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13C71C()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

uint64_t sub_13C754(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 25)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_13BC34(a1, a2, *(void *)(v2 + 16), v3 | *(unsigned __int8 *)(v2 + 24));
}

unint64_t sub_13C780()
{
  unint64_t result = qword_31E218;
  if (!qword_31E218)
  {
    sub_82930(&qword_31E200);
    sub_13C7FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E218);
  }
  return result;
}

unint64_t sub_13C7FC()
{
  unint64_t result = qword_31E220;
  if (!qword_31E220)
  {
    sub_82930(&qword_31E1F0);
    sub_13C89C(&qword_31E228, &qword_31E1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E220);
  }
  return result;
}

uint64_t sub_13C89C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_13C8E0()
{
  return swift_getOpaqueTypeConformance2();
}

BookAnalytics::BrightnessData __swiftcall BrightnessData.init(brightnessLevel:)(BookAnalytics::BrightnessData brightnessLevel)
{
  v1->brightnessLevel = brightnessLevel.brightnessLevel;
  return brightnessLevel;
}

BOOL static BrightnessData.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_13C9A8()
{
  return 0x656E746867697262;
}

uint64_t sub_13C9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656E746867697262 && a2 == 0xEF6C6576654C7373)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_13CA88(uint64_t a1)
{
  unint64_t v2 = sub_13CC34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13CAC4(uint64_t a1)
{
  unint64_t v2 = sub_13CC34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BrightnessData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31E230);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_13CC34();
  sub_27E440();
  sub_27E340();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_13CC34()
{
  unint64_t result = qword_31E238;
  if (!qword_31E238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E238);
  }
  return result;
}

uint64_t BrightnessData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E240);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_13CC34();
  sub_27E430();
  if (!v2)
  {
    int v9 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_13CDDC()
{
  unint64_t result = qword_31E248;
  if (!qword_31E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E248);
  }
  return result;
}

unint64_t sub_13CE34()
{
  unint64_t result = qword_31E250;
  if (!qword_31E250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E250);
  }
  return result;
}

uint64_t sub_13CE88@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return BrightnessData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for BrightnessData()
{
  return &type metadata for BrightnessData;
}

unsigned char *storeEnumTagSinglePayload for BrightnessData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x13CF4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrightnessData.CodingKeys()
{
  return &type metadata for BrightnessData.CodingKeys;
}

unint64_t sub_13CF88()
{
  unint64_t result = qword_31E258;
  if (!qword_31E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E258);
  }
  return result;
}

unint64_t sub_13CFE0()
{
  unint64_t result = qword_31E260;
  if (!qword_31E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E260);
  }
  return result;
}

unint64_t sub_13D038()
{
  unint64_t result = qword_31E268;
  if (!qword_31E268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E268);
  }
  return result;
}

uint64_t sub_13D08C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31E270, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingFontChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315910, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E270, a1);
}

uint64_t sub_13D0EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31E288, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingFontChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315918, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E288, a1);
}

uint64_t ReadingFontChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingFontChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31E318);
}

uint64_t ReadingFontChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontChangeEvent.fontData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E2A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingFontChangeEvent.fontData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E2A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontChangeEvent.fontData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingFontChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingFontChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ReadingFontChangeEvent.Model.fontData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *a1 = *(void *)(v1 + 112);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ReadingFontChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingFontChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31E3B8);
}

uint64_t ReadingFontChangeEvent.Model.init(readingSessionData:contentData:fontData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  uint64_t v26 = *a3;
  uint64_t v25 = a3[1];
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(void *)(a5 + 112) = v26;
  *(void *)(a5 + 120) = v25;
  uint64_t v27 = a5 + *(int *)(type metadata accessor for ReadingFontChangeEvent.Model(0) + 28);
  uint64_t v28 = sub_27D7C0();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32);

  return v29(v27, a4, v28);
}

unint64_t sub_13D850()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x61746144746E6F66;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_13D8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_13FD54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13D918(uint64_t a1)
{
  unint64_t v2 = sub_13DC4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13D954(uint64_t a1)
{
  unint64_t v2 = sub_13DC4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingFontChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31E2A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_13DC4C();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v28) = *(_DWORD *)v3;
  BYTE4(v28) = v9;
  LODWORD(v29) = v10;
  BYTE4(v29) = v11;
  BYTE5(v29) = v12;
  BYTE6(v29) = v13;
  char v42 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v28 = *(void *)(v3 + 16);
    uint64_t v29 = v14;
    char v30 = v15;
    long long v31 = v16;
    uint64_t v32 = v17;
    uint64_t v33 = v18;
    __int16 v34 = v19;
    int v35 = v20;
    char v36 = v21;
    int v37 = v22;
    char v38 = v23;
    int v39 = *(_DWORD *)(v3 + 89);
    char v40 = v24;
    long long v41 = *(_OWORD *)(v3 + 96);
    char v42 = 1;
    sub_1A1D4();
    sub_27E330();
    uint64_t v25 = *(void *)(v3 + 120);
    uint64_t v28 = *(void *)(v3 + 112);
    uint64_t v29 = v25;
    char v42 = 2;
    sub_4E0F0();
    sub_27E330();
    type metadata accessor for ReadingFontChangeEvent.Model(0);
    LOBYTE(v28) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_13DC4C()
{
  unint64_t result = qword_31E2B0;
  if (!qword_31E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E2B0);
  }
  return result;
}

uint64_t ReadingFontChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31E2B8);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for ReadingFontChangeEvent.Model(0);
  __chkstk_darwin(v7);
  char v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  long long v44 = a1;
  sub_5900(a1, v10);
  sub_13DC4C();
  uint64_t v11 = v45;
  sub_27E430();
  if (v11) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v12 = v42;
  char v13 = v9;
  uint64_t v14 = v5;
  char v62 = 0;
  sub_8EBD0();
  sub_27E260();
  char v15 = BYTE4(v46);
  int v16 = v47;
  char v17 = BYTE4(v47);
  char v18 = BYTE5(v47);
  char v19 = BYTE6(v47);
  uint64_t v20 = (uint64_t)v13;
  *(_DWORD *)char v13 = v46;
  v13[4] = v15;
  *((_DWORD *)v13 + 2) = v16;
  v13[12] = v17;
  v13[13] = v18;
  v13[14] = v19;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v21 = v47;
  char v22 = v48;
  uint64_t v24 = v49;
  uint64_t v23 = v50;
  uint64_t v26 = v51;
  uint64_t v25 = v52;
  __int16 v27 = v53;
  int v28 = v54;
  char v29 = v55;
  int v30 = v56;
  char v31 = v57;
  char v32 = v59;
  uint64_t v34 = v60;
  uint64_t v33 = v61;
  *(void *)(v20 + 16) = v46;
  *(void *)(v20 + 24) = v21;
  *(unsigned char *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = v23;
  uint64_t v45 = v23;
  *(void *)(v20 + 56) = v26;
  *(void *)(v20 + 64) = v25;
  v39[1] = v25;
  v39[2] = v33;
  *(_WORD *)(v20 + 72) = v27;
  *(_DWORD *)(v20 + 76) = v28;
  *(unsigned char *)(v20 + 80) = v29;
  *(_DWORD *)(v20 + 84) = v30;
  *(unsigned char *)(v20 + 88) = v31;
  *(_DWORD *)(v20 + 89) = v58;
  *(unsigned char *)(v20 + 93) = v32;
  *(void *)(v20 + 96) = v34;
  *(void *)(v20 + 104) = v33;
  char v62 = 2;
  sub_4E098();
  sub_27E260();
  uint64_t v35 = v47;
  *(void *)(v20 + 112) = v46;
  *(void *)(v20 + 120) = v35;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  char v36 = v14;
  uint64_t v37 = v43;
  sub_27E260();
  (*(void (**)(void, uint64_t))(v12 + 8))(0, v37);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v20 + *(int *)(v7 + 28), v36, v3);
  sub_13E11C(v20, v41);
  sub_5E94((uint64_t)v44);
  return sub_13E180(v20);
}

uint64_t sub_13E11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingFontChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_13E180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingFontChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13E1DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingFontChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_13E1F4(void *a1)
{
  return ReadingFontChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_13E20C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315910, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E270, a1);
}

uint64_t sub_13E244@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315918, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E288, a1);
}

uint64_t sub_13E27C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingFontChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    char v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31E2A0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingFontChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13EC5C);
}

uint64_t sub_13EC5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_31E2A0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingFontChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13EE18);
}

uint64_t sub_13EE18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_31E2A0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_13EFCC()
{
  sub_13F1B4(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_13F1B4(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_13F1B4(319, (unint64_t *)&unk_31E328, (void (*)(void))sub_4E098, (void (*)(void))sub_4E0F0);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_13F1B4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v7;
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 76) = *((_DWORD *)a2 + 19);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)(a1 + 89) = *(_DWORD *)((char *)a2 + 89);
    *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v8 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v8;
    uint64_t v9 = a2[15];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v16 = (uint64_t)a2 + v10;
    uint64_t v11 = a1 + v10;
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v9;
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v16, v12);
  }
  return v3;
}

uint64_t destroy for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v14 = a2 + v9;
  uint64_t v10 = a1 + v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v14, v11);
  return a1;
}

uint64_t assignWithCopy for ReadingFontChangeEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13F930);
}

uint64_t sub_13F930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingFontChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13F9F4);
}

uint64_t sub_13F9F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_13FA9C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingFontChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x13FC14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingFontChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingFontChangeEvent.Model.CodingKeys;
}

unint64_t sub_13FC50()
{
  unint64_t result = qword_31E3F8;
  if (!qword_31E3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E3F8);
  }
  return result;
}

unint64_t sub_13FCA8()
{
  unint64_t result = qword_31E400;
  if (!qword_31E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E400);
  }
  return result;
}

unint64_t sub_13FD00()
{
  unint64_t result = qword_31E408;
  if (!qword_31E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E408);
  }
  return result;
}

uint64_t sub_13FD54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144746E6F66 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t RemoteConfigNamespaceData.init(name:treatmentIDs:segmentIDs:segmentSetIDs:previousTreatmentIDs:previousSegmentIDs:previousSegmentSetIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t RemoteConfigNamespaceData.previousTreatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteConfigNamespaceData.previousTreatmentIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t RemoteConfigNamespaceData.previousSegmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteConfigNamespaceData.previousSegmentIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t RemoteConfigNamespaceData.previousSegmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteConfigNamespaceData.previousSegmentSetIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

unint64_t sub_13FFE4(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D7461657274;
      break;
    case 2:
      unint64_t result = 0x49746E656D676573;
      break;
    case 3:
      unint64_t result = 0x53746E656D676573;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1400E8()
{
  return sub_13FFE4(*v0);
}

uint64_t sub_1400F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_141248(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_140118(uint64_t a1)
{
  unint64_t v2 = sub_140BF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_140154(uint64_t a1)
{
  unint64_t v2 = sub_140BF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoteConfigNamespaceData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31E410);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v18 = v1[3];
  uint64_t v19 = v7;
  uint64_t v8 = v1[4];
  uint64_t v16 = v1[5];
  uint64_t v17 = v8;
  uint64_t v9 = v1[6];
  uint64_t v14 = v1[7];
  uint64_t v15 = v9;
  sub_5900(a1, a1[3]);
  sub_140BF8();
  sub_27E440();
  LOBYTE(v22) = 0;
  uint64_t v10 = v20;
  sub_27E290();
  if (!v10)
  {
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    uint64_t v22 = v19;
    char v21 = 1;
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319628);
    sub_27E2C0();
    uint64_t v22 = v11;
    char v21 = 2;
    sub_27E2C0();
    uint64_t v22 = v12;
    char v21 = 3;
    sub_27E2C0();
    uint64_t v22 = v16;
    char v21 = 4;
    sub_27E2C0();
    uint64_t v22 = v15;
    char v21 = 5;
    sub_27E2C0();
    uint64_t v22 = v14;
    char v21 = 6;
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RemoteConfigNamespaceData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E420);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_140BF8();
  sub_27E430();
  if (!v2)
  {
    LOBYTE(v32) = 0;
    uint64_t v10 = sub_27E1C0();
    uint64_t v12 = v11;
    char v29 = a2;
    sub_4E04(&qword_319620);
    char v31 = 1;
    uint64_t v13 = sub_97C90(&qword_319650);
    swift_bridgeObjectRetain();
    uint64_t v30 = v13;
    sub_27E1F0();
    uint64_t v28 = v12;
    uint64_t v14 = v32;
    char v31 = 2;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    uint64_t v27 = v14;
    uint64_t v15 = v32;
    char v31 = 3;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    uint64_t v26 = v15;
    uint64_t v16 = v32;
    char v31 = 4;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    uint64_t v25 = v16;
    uint64_t v17 = v32;
    char v31 = 5;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    uint64_t v24 = v10;
    uint64_t v18 = v32;
    char v31 = 6;
    swift_bridgeObjectRetain();
    sub_27E1F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v19 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = v28;
    uint64_t v20 = v29;
    uint64_t v22 = v25;
    *char v29 = v24;
    v20[1] = v21;
    uint64_t v23 = v26;
    v20[2] = v27;
    v20[3] = v23;
    v20[4] = v22;
    v20[5] = v17;
    v20[6] = v18;
    v20[7] = v19;
  }
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_140A50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RemoteConfigNamespaceData.init(from:)(a1, a2);
}

uint64_t sub_140A68(void *a1)
{
  return RemoteConfigNamespaceData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics25RemoteConfigNamespaceDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v6 = (void *)a1[3];
  uint64_t v5 = (void *)a1[4];
  uint64_t v8 = (void *)a1[5];
  uint64_t v7 = (void *)a1[6];
  uint64_t v9 = a2[1];
  uint64_t v10 = (void *)a2[2];
  uint64_t v12 = (void *)a2[3];
  uint64_t v11 = (void *)a2[4];
  uint64_t v14 = (void *)a2[5];
  uint64_t v13 = (void *)a2[6];
  if (!v3)
  {
    uint64_t v17 = (void *)a2[7];
    uint64_t v18 = (void *)a1[7];
    if (v9) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v17 = (void *)a2[7];
  uint64_t v18 = (void *)a1[7];
  if (*a1 == *a2 && v3 == v9 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v4)
    {
      if (!v10 || (sub_80FC4(v4, v10) & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v6)
    {
      if (!v12 || (sub_80FC4(v6, v12) & 1) == 0) {
        return 0;
      }
    }
    else if (v12)
    {
      return 0;
    }
    if (v5)
    {
      if (!v11 || (sub_80FC4(v5, v11) & 1) == 0) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v8)
    {
      if (!v14 || (sub_80FC4(v8, v14) & 1) == 0) {
        return 0;
      }
    }
    else if (v14)
    {
      return 0;
    }
    if (v7)
    {
      if (!v13 || (sub_80FC4(v7, v13) & 1) == 0) {
        return 0;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (v18)
    {
      if (v17 && (sub_80FC4(v18, v17) & 1) != 0) {
        return 1;
      }
    }
    else if (!v17)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_140BF8()
{
  unint64_t result = qword_31E418;
  if (!qword_31E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E418);
  }
  return result;
}

unint64_t sub_140C50()
{
  unint64_t result = qword_31E428;
  if (!qword_31E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E428);
  }
  return result;
}

unint64_t sub_140CA8()
{
  unint64_t result = qword_31E430;
  if (!qword_31E430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E430);
  }
  return result;
}

uint64_t destroy for RemoteConfigNamespaceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RemoteConfigNamespaceData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RemoteConfigNamespaceData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ExposureData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RemoteConfigNamespaceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteConfigNamespaceData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteConfigNamespaceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteConfigNamespaceData()
{
  return &type metadata for RemoteConfigNamespaceData;
}

unsigned char *storeEnumTagSinglePayload for RemoteConfigNamespaceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x141108);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteConfigNamespaceData.CodingKeys()
{
  return &type metadata for RemoteConfigNamespaceData.CodingKeys;
}

unint64_t sub_141144()
{
  unint64_t result = qword_31E438;
  if (!qword_31E438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E438);
  }
  return result;
}

unint64_t sub_14119C()
{
  unint64_t result = qword_31E440;
  if (!qword_31E440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E440);
  }
  return result;
}

unint64_t sub_1411F4()
{
  unint64_t result = qword_31E448;
  if (!qword_31E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E448);
  }
  return result;
}

uint64_t sub_141248(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E656D676573 && a2 == 0xEA00000000007344 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53746E656D676573 && a2 == 0xED00007344497465 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AFCC0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AFCE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002AFD00)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void __swiftcall ContentData.init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:mangaFlag:isUnified:isAccoladedContent:contentKind:)(BookAnalytics::ContentData *__return_ptr retstr, Swift::String contentID, BookAnalytics::ContentType contentType, Swift::String contentPrivateID, Swift::String contentUserID, BookAnalytics::ContentAcquisitionType_optional contentAcquisitionType, BookAnalytics::ContentSubType_optional contentSubType, Swift::Int32_optional contentLength, Swift::Int32_optional supplementalContentCount, BookAnalytics::SeriesType_optional seriesType, BookAnalytics::ProductionType_optional productionType, BookAnalytics::MangaFlag_optional mangaFlag, Swift::Bool_optional isUnified, Swift::Bool_optional isAccoladedContent, Swift::String_optional contentKind)
{
  BookAnalytics::ContentType v15 = *(unsigned char *)contentType;
  BookAnalytics::ContentAcquisitionType v16 = *(unsigned char *)contentAcquisitionType.value;
  BookAnalytics::ContentSubType v17 = *(unsigned char *)contentSubType.value;
  BookAnalytics::SeriesType v18 = *(unsigned char *)seriesType.value;
  BookAnalytics::ProductionType v19 = *(unsigned char *)contentKind.value._countAndFlagsBits;
  BookAnalytics::MangaFlag v20 = *(unsigned char *)contentKind.value._object;
  retstr->contentID = contentID;
  retstr->contentType = v15;
  retstr->contentPrivateID = contentPrivateID;
  retstr->contentUserID = contentUserID;
  retstr->contentAcquisitionType.value = v16;
  retstr->contentSubType.value = v17;
  retstr->contentLength.value = contentLength.value;
  retstr->contentLength.is_nil = contentLength.is_nil;
  retstr->supplementalContentCount.value = supplementalContentCount.value;
  retstr->supplementalContentCount.is_nil = supplementalContentCount.is_nil;
  retstr->seriesType.value = v18;
  retstr->productionType.value = v19;
  retstr->mangaFlag.value = v20;
  *(_WORD *)&retstr->isUnified.value = v21;
  retstr->contentKind.value._countAndFlagsBits = v22;
  retstr->contentKind.value._object = v23;
}

void AltContentTypeExposureData.productionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *AltContentTypeExposureData.productionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

void ContentData.contentSubType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 57);
}

unsigned char *ContentData.contentSubType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 57) = *result;
  return result;
}

uint64_t (*ListeningSessionData.isSnoozeTimeReached.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t ContentData.contentLength.getter()
{
  return *(unsigned int *)(v0 + 60) | ((unint64_t)*(unsigned __int8 *)(v0 + 64) << 32);
}

uint64_t ContentData.contentLength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 60) = result;
  *(unsigned char *)(v1 + 64) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContentData.contentLength.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t ContentData.supplementalContentCount.getter()
{
  return *(unsigned int *)(v0 + 68) | ((unint64_t)*(unsigned __int8 *)(v0 + 72) << 32);
}

uint64_t ContentData.supplementalContentCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 68) = result;
  *(unsigned char *)(v1 + 72) = BYTE4(result) & 1;
  return result;
}

uint64_t (*SessionData.onDevicePersonalization.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void ContentData.seriesType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

unsigned char *ContentData.seriesType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 73) = *result;
  return result;
}

void ContentData.productionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 74);
}

unsigned char *ContentData.productionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 74) = *result;
  return result;
}

void ContentData.mangaFlag.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 75);
}

unsigned char *ContentData.mangaFlag.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 75) = *result;
  return result;
}

uint64_t (*ContentData.mangaFlag.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentData.isUnified.getter()
{
  return *(unsigned __int8 *)(v0 + 76);
}

uint64_t ContentData.isUnified.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 76) = result;
  return result;
}

uint64_t (*ContentData.isUnified.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ContentData.isAccoladedContent.getter()
{
  return *(unsigned __int8 *)(v0 + 77);
}

uint64_t ContentData.isAccoladedContent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 77) = result;
  return result;
}

uint64_t (*ContentData.isAccoladedContent.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t sub_141780(char a1)
{
  unint64_t result = 0x49746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x54746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x55746E65746E6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x53746E65746E6F63;
      break;
    case 6:
      unint64_t result = 0x4C746E65746E6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0x7954736569726573;
      break;
    case 9:
      unint64_t result = 0x69746375646F7270;
      break;
    case 10:
      unint64_t result = 0x616C4661676E616DLL;
      break;
    case 11:
      unint64_t result = 0x656966696E557369;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0x4B746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_141984()
{
  return sub_141780(*v0);
}

uint64_t sub_14198C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_143534(a1, a2);
  *a3 = result;
  return result;
}

void sub_1419B4(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1419C0(uint64_t a1)
{
  unint64_t v2 = sub_142C38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1419FC(uint64_t a1)
{
  unint64_t v2 = sub_142C38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContentData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31E450);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v29 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v26 = *(void *)(v1 + 32);
  uint64_t v27 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v24 = *(void *)(v1 + 48);
  uint64_t v25 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 56);
  int v22 = *(unsigned __int8 *)(v1 + 57);
  int v23 = v8;
  uint64_t v21 = *(unsigned int *)(v1 + 60);
  int v20 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v19 = *(unsigned int *)(v1 + 68);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 72);
  int v17 = *(unsigned __int8 *)(v1 + 73);
  int v18 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 74);
  int v15 = *(unsigned __int8 *)(v1 + 75);
  int v16 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 76);
  int v13 = *(unsigned __int8 *)(v1 + 77);
  int v14 = v8;
  uint64_t v9 = *(void *)(v1 + 80);
  v12[0] = *(void *)(v1 + 88);
  v12[1] = v9;
  sub_5900(a1, a1[3]);
  sub_142C38();
  sub_27E440();
  char v31 = 0;
  uint64_t v10 = v28;
  sub_27E2F0();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  char v31 = v29;
  char v30 = 1;
  sub_101E4();
  sub_27E330();
  char v31 = 2;
  sub_27E2F0();
  uint64_t v28 = v4;
  char v31 = 3;
  sub_27E2F0();
  char v31 = v23;
  char v30 = 4;
  sub_142C8C();
  sub_27E2C0();
  char v31 = v22;
  char v30 = 5;
  sub_142CE0();
  sub_27E2C0();
  char v31 = 6;
  char v30 = v20;
  sub_27E2D0();
  char v31 = 7;
  char v30 = v18;
  sub_27E2D0();
  char v31 = v17;
  char v30 = 8;
  sub_142D34();
  sub_27E2C0();
  char v31 = v16;
  char v30 = 9;
  sub_142D88();
  sub_27E2C0();
  char v31 = v15;
  char v30 = 10;
  sub_142DDC();
  sub_27E2C0();
  char v31 = 11;
  sub_27E2A0();
  char v31 = 12;
  sub_27E2A0();
  char v31 = 13;
  sub_27E290();
  return (*(uint64_t (**)(char *, void))(v4 + 8))(v6, 0);
}

uint64_t ContentData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E488);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_142C38();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    unsigned __int8 v41 = 0;
    uint64_t v10 = sub_27E220();
    uint64_t v12 = v11;
    char v40 = 1;
    sub_10238();
    swift_bridgeObjectRetain();
    sub_27E260();
    uint64_t v37 = v12;
    LODWORD(v12) = v41;
    unsigned __int8 v41 = 2;
    uint64_t v35 = sub_27E220();
    uint64_t v36 = v10;
    int v39 = v12;
    unsigned __int8 v41 = 3;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_27E220();
    uint64_t v38 = v14;
    uint64_t v34 = v15;
    char v40 = 4;
    uint64_t v17 = v16;
    sub_142E30();
    swift_bridgeObjectRetain();
    sub_27E1F0();
    int v33 = v41;
    char v40 = 5;
    sub_142E84();
    sub_27E1F0();
    int v32 = v41;
    unsigned __int8 v41 = 6;
    uint64_t v31 = sub_27E200();
    unsigned __int8 v41 = 7;
    uint64_t v30 = sub_27E200();
    char v40 = 8;
    sub_142ED8();
    sub_27E1F0();
    int v29 = v41;
    char v40 = 9;
    sub_142F2C();
    sub_27E1F0();
    int v28 = v41;
    char v40 = 10;
    sub_142F80();
    sub_27E1F0();
    int v27 = v41;
    unsigned __int8 v41 = 11;
    int v26 = sub_27E1D0();
    unsigned __int8 v41 = 12;
    int v25 = sub_27E1D0();
    unsigned __int8 v41 = 13;
    uint64_t v24 = sub_27E1C0();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v37;
    *(void *)a2 = v36;
    *(void *)(a2 + 8) = v20;
    *(unsigned char *)(a2 + 16) = v39;
    uint64_t v21 = v38;
    *(void *)(a2 + 24) = v35;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v34;
    *(void *)(a2 + 48) = v17;
    *(unsigned char *)(a2 + 56) = v33;
    *(unsigned char *)(a2 + 57) = v32;
    char v22 = BYTE4(v31);
    *(_DWORD *)(a2 + 60) = v31;
    *(unsigned char *)(a2 + 64) = v22 & 1;
    char v23 = BYTE4(v30);
    *(_DWORD *)(a2 + 68) = v30;
    *(unsigned char *)(a2 + 72) = v23 & 1;
    *(unsigned char *)(a2 + 73) = v29;
    *(unsigned char *)(a2 + 74) = v28;
    *(unsigned char *)(a2 + 75) = v27;
    *(unsigned char *)(a2 + 76) = v26;
    *(unsigned char *)(a2 + 77) = v25;
    *(void *)(a2 + 80) = v24;
    *(void *)(a2 + 88) = v19;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_142570@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContentData.init(from:)(a1, a2);
}

uint64_t sub_142588(void *a1)
{
  return ContentData.encode(to:)(a1);
}

BOOL _s13BookAnalytics11ContentDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  int v56 = *(unsigned __int8 *)(a1 + 57);
  int v57 = *(unsigned __int8 *)(a1 + 56);
  int v51 = *(_DWORD *)(a1 + 60);
  char v54 = *(unsigned char *)(a1 + 64);
  char v52 = *(unsigned char *)(a1 + 72);
  int v47 = *(_DWORD *)(a1 + 68);
  int v48 = *(unsigned __int8 *)(a1 + 73);
  int v44 = *(unsigned __int8 *)(a1 + 74);
  int v40 = *(unsigned __int8 *)(a1 + 76);
  int v41 = *(unsigned __int8 *)(a1 + 75);
  int v38 = *(unsigned __int8 *)(a1 + 77);
  uint64_t v34 = *(void *)(a1 + 80);
  uint64_t v36 = *(void *)(a1 + 88);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v58 = *(unsigned __int8 *)(a2 + 56);
  int v55 = *(unsigned __int8 *)(a2 + 57);
  int v53 = *(unsigned __int8 *)(a2 + 64);
  int v49 = *(unsigned __int8 *)(a2 + 72);
  int v50 = *(_DWORD *)(a2 + 60);
  int v45 = *(unsigned __int8 *)(a2 + 73);
  int v46 = *(_DWORD *)(a2 + 68);
  int v42 = *(unsigned __int8 *)(a2 + 75);
  int v43 = *(unsigned __int8 *)(a2 + 74);
  int v39 = *(unsigned __int8 *)(a2 + 76);
  int v37 = *(unsigned __int8 *)(a2 + 77);
  uint64_t v33 = *(void *)(a2 + 80);
  uint64_t v35 = *(void *)(a2 + 88);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
  {
    if ((sub_2DAE4(v2, v7) & 1) == 0) {
      return 0;
    }
    if (v3 == v8 && v4 == v9 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
    {
      if (v5 == v10 && v6 == v11 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
      {
        if (v57 == 3)
        {
          if (v58 != 3) {
            return 0;
          }
        }
        else
        {
          if (v58 == 3) {
            return 0;
          }
          uint64_t v16 = 0x6E776F6E6B6E75;
          if (v57)
          {
            if (v57 == 1)
            {
              uint64_t v17 = 0x756F4265726F7473;
              unint64_t v18 = 0xEB00000000746867;
            }
            else
            {
              uint64_t v17 = 0x65726F74536E6F6ELL;
              unint64_t v18 = 0xEE00746867756F42;
            }
          }
          else
          {
            unint64_t v18 = 0xE700000000000000;
            uint64_t v17 = 0x6E776F6E6B6E75;
          }
          if (v58)
          {
            if (v58 == 1)
            {
              uint64_t v16 = 0x756F4265726F7473;
              unint64_t v19 = 0xEB00000000746867;
            }
            else
            {
              uint64_t v16 = 0x65726F74536E6F6ELL;
              unint64_t v19 = 0xEE00746867756F42;
            }
          }
          else
          {
            unint64_t v19 = 0xE700000000000000;
          }
          if (v17 == v16 && v18 == v19)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v20 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL result = 0;
            if ((v20 & 1) == 0) {
              return result;
            }
          }
        }
        if (v56 == 4)
        {
          if (v55 != 4) {
            return 0;
          }
        }
        else if (v55 == 4 || (sub_32E28(v56, v55) & 1) == 0)
        {
          return 0;
        }
        if (v54)
        {
          if (!v53) {
            return 0;
          }
        }
        else
        {
          char v21 = v53;
          if (v51 != v50) {
            char v21 = 1;
          }
          if (v21) {
            return 0;
          }
        }
        if (v52)
        {
          if (!v49) {
            return 0;
          }
        }
        else
        {
          char v22 = v49;
          if (v47 != v46) {
            char v22 = 1;
          }
          if (v22) {
            return 0;
          }
        }
        if (v48 == 4)
        {
          if (v45 != 4) {
            return 0;
          }
        }
        else if (v45 == 4 || (sub_33108(v48, v45) & 1) == 0)
        {
          return 0;
        }
        if (v44 == 3)
        {
          if (v43 != 3) {
            return 0;
          }
        }
        else
        {
          if (v43 == 3) {
            return 0;
          }
          uint64_t v23 = 0x6E776F6E6B6E75;
          if (v44)
          {
            if (v44 == 1)
            {
              uint64_t v24 = 0x6375646F72506773;
              unint64_t v25 = 0xEC0000006E6F6974;
            }
            else
            {
              uint64_t v24 = 0x6F725047536E6F6ELL;
              unint64_t v25 = 0xEF6E6F6974637564;
            }
          }
          else
          {
            unint64_t v25 = 0xE700000000000000;
            uint64_t v24 = 0x6E776F6E6B6E75;
          }
          if (v43)
          {
            if (v43 == 1)
            {
              uint64_t v23 = 0x6375646F72506773;
              unint64_t v26 = 0xEC0000006E6F6974;
            }
            else
            {
              uint64_t v23 = 0x6F725047536E6F6ELL;
              unint64_t v26 = 0xEF6E6F6974637564;
            }
          }
          else
          {
            unint64_t v26 = 0xE700000000000000;
          }
          if (v24 == v23 && v25 == v26)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v27 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL result = 0;
            if ((v27 & 1) == 0) {
              return result;
            }
          }
        }
        if (v41 == 3)
        {
          if (v42 != 3) {
            return 0;
          }
        }
        else
        {
          if (v42 == 3) {
            return 0;
          }
          uint64_t v28 = 7562617;
          if (v41)
          {
            if (v41 == 1)
            {
              unint64_t v29 = 0xE200000000000000;
              uint64_t v30 = 28526;
            }
            else
            {
              unint64_t v29 = 0xE700000000000000;
              uint64_t v30 = 0x6E776F6E6B6E75;
            }
          }
          else
          {
            unint64_t v29 = 0xE300000000000000;
            uint64_t v30 = 7562617;
          }
          if (v42)
          {
            if (v42 == 1)
            {
              unint64_t v31 = 0xE200000000000000;
              uint64_t v28 = 28526;
            }
            else
            {
              unint64_t v31 = 0xE700000000000000;
              uint64_t v28 = 0x6E776F6E6B6E75;
            }
          }
          else
          {
            unint64_t v31 = 0xE300000000000000;
          }
          if (v30 == v28 && v29 == v31)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v32 = sub_27E370();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL result = 0;
            if ((v32 & 1) == 0) {
              return result;
            }
          }
        }
        if (v40 == 2)
        {
          if (v39 != 2) {
            return 0;
          }
        }
        else
        {
          BOOL result = 0;
          if (v39 == 2 || ((((v40 & 1) == 0) ^ v39) & 1) == 0) {
            return result;
          }
        }
        if (v38 == 2)
        {
          if (v37 != 2) {
            return 0;
          }
          goto LABEL_97;
        }
        BOOL result = 0;
        if (v37 != 2 && ((((v38 & 1) == 0) ^ v37) & 1) != 0)
        {
LABEL_97:
          if (v36) {
            return v35 && (v34 == v33 && v36 == v35 || (sub_27E370() & 1) != 0);
          }
          return !v35;
        }
      }
    }
  }
  return result;
}

unint64_t sub_142C38()
{
  unint64_t result = qword_31E458;
  if (!qword_31E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E458);
  }
  return result;
}

unint64_t sub_142C8C()
{
  unint64_t result = qword_31E460;
  if (!qword_31E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E460);
  }
  return result;
}

unint64_t sub_142CE0()
{
  unint64_t result = qword_31E468;
  if (!qword_31E468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E468);
  }
  return result;
}

unint64_t sub_142D34()
{
  unint64_t result = qword_31E470;
  if (!qword_31E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E470);
  }
  return result;
}

unint64_t sub_142D88()
{
  unint64_t result = qword_31E478;
  if (!qword_31E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E478);
  }
  return result;
}

unint64_t sub_142DDC()
{
  unint64_t result = qword_31E480;
  if (!qword_31E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E480);
  }
  return result;
}

unint64_t sub_142E30()
{
  unint64_t result = qword_31E490;
  if (!qword_31E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E490);
  }
  return result;
}

unint64_t sub_142E84()
{
  unint64_t result = qword_31E498;
  if (!qword_31E498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E498);
  }
  return result;
}

unint64_t sub_142ED8()
{
  unint64_t result = qword_31E4A0;
  if (!qword_31E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4A0);
  }
  return result;
}

unint64_t sub_142F2C()
{
  unint64_t result = qword_31E4A8;
  if (!qword_31E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4A8);
  }
  return result;
}

unint64_t sub_142F80()
{
  unint64_t result = qword_31E4B0;
  if (!qword_31E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4B0);
  }
  return result;
}

uint64_t destroy for ContentData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v4 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v4;
  int v5 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v5;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ContentData()
{
  return &type metadata for ContentData;
}

uint64_t getEnumTagSinglePayload for ContentData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1433F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentData.CodingKeys()
{
  return &type metadata for ContentData.CodingKeys;
}

unint64_t sub_143430()
{
  unint64_t result = qword_31E4B8;
  if (!qword_31E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4B8);
  }
  return result;
}

unint64_t sub_143488()
{
  unint64_t result = qword_31E4C0;
  if (!qword_31E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4C0);
  }
  return result;
}

unint64_t sub_1434E0()
{
  unint64_t result = qword_31E4C8;
  if (!qword_31E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4C8);
  }
  return result;
}

uint64_t sub_143534(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002AF5A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x53746E65746E6F63 && a2 == 0xEE00657079546275 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4C746E65746E6F63 && a2 == 0xED00006874676E65 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002AF5E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7954736569726573 && a2 == 0xEA00000000006570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEE00657079546E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x616C4661676E616DLL && a2 == 0xE900000000000067 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656966696E557369 && a2 == 0xE900000000000064 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AF620 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x4B746E65746E6F63 && a2 == 0xEB00000000646E69)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_143B64()
{
  return 1701869940;
}

uint64_t sub_143B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_143BFC(uint64_t a1)
{
  unint64_t v2 = sub_143DBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_143C38(uint64_t a1)
{
  unint64_t v2 = sub_143DBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationOptInTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31E4D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_143DBC();
  sub_27E440();
  char v10 = v7;
  sub_143E10();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_143DBC()
{
  unint64_t result = qword_31E4D8;
  if (!qword_31E4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4D8);
  }
  return result;
}

unint64_t sub_143E10()
{
  unint64_t result = qword_31E4E0;
  if (!qword_31E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4E0);
  }
  return result;
}

uint64_t NotificationOptInTypeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E4E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_143DBC();
  sub_27E430();
  if (!v2)
  {
    sub_143FCC();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_143FCC()
{
  unint64_t result = qword_31E4F0;
  if (!qword_31E4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4F0);
  }
  return result;
}

uint64_t sub_144028@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return NotificationOptInTypeData.init(from:)(a1, a2);
}

uint64_t sub_144040(void *a1)
{
  return NotificationOptInTypeData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x144124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInTypeData()
{
  return &type metadata for NotificationOptInTypeData;
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInTypeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1441F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInTypeData.CodingKeys()
{
  return &type metadata for NotificationOptInTypeData.CodingKeys;
}

unint64_t sub_144234()
{
  unint64_t result = qword_31E4F8;
  if (!qword_31E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E4F8);
  }
  return result;
}

unint64_t sub_14428C()
{
  unint64_t result = qword_31E500;
  if (!qword_31E500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E500);
  }
  return result;
}

unint64_t sub_1442E4()
{
  unint64_t result = qword_31E508;
  if (!qword_31E508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E508);
  }
  return result;
}

uint64_t sub_144338(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31E510, &enum case for SessionGroup.default(_:));
}

uint64_t static ListenEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315920, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E510, a1);
}

uint64_t sub_144398(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31E528, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ListenEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315928, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E528, a1);
}

uint64_t ListenEvent.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_317DF8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ListenEvent.listeningSessionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_317DF8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ListenEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ListenEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31E5B0);
}

uint64_t ListenEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListenEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListenEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListenEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListenEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ListenEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t ListenEvent.Model.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 4);
  int v3 = *(_DWORD *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 12);
  int v5 = *(_DWORD *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  char v9 = *(unsigned char *)(v1 + 41);
  int v10 = *(_DWORD *)(v1 + 44);
  char v11 = *(unsigned char *)(v1 + 48);
  char v12 = *(unsigned char *)(v1 + 49);
  int v13 = *(_DWORD *)(v1 + 52);
  char v14 = *(unsigned char *)(v1 + 56);
  char v15 = *(unsigned char *)(v1 + 57);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 41) = v9;
  *(_DWORD *)(a1 + 44) = v10;
  *(unsigned char *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 49) = v12;
  *(_DWORD *)(a1 + 52) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 57) = v15;
  return swift_bridgeObjectRetain();
}

uint64_t ListenEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ListenEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ListenEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31E650);
}

uint64_t ListenEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenEvent.Model.init(listeningSessionData:contentData:upSellData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *(unsigned char *)(a1 + 4);
  int v9 = *(_DWORD *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 12);
  int v11 = *(_DWORD *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 41);
  int v14 = *(_DWORD *)(a1 + 44);
  char v15 = *(unsigned char *)(a1 + 48);
  char v16 = *(unsigned char *)(a1 + 49);
  int v17 = *(_DWORD *)(a1 + 52);
  char v18 = *(unsigned char *)(a1 + 56);
  char v19 = *(unsigned char *)(a1 + 57);
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  char v22 = *((unsigned char *)a2 + 16);
  long long v23 = *(_OWORD *)(a2 + 3);
  uint64_t v24 = a2[5];
  uint64_t v25 = a2[6];
  __int16 v26 = *((_WORD *)a2 + 28);
  int v27 = *((_DWORD *)a2 + 15);
  char v28 = *((unsigned char *)a2 + 64);
  int v29 = *((_DWORD *)a2 + 17);
  char v30 = *((unsigned char *)a2 + 72);
  char v31 = *((unsigned char *)a2 + 77);
  uint64_t v32 = *((void *)a3 + 2);
  *(_DWORD *)a6 = *(_DWORD *)a1;
  *(unsigned char *)(a6 + 4) = v8;
  *(_DWORD *)(a6 + 8) = v9;
  *(unsigned char *)(a6 + 12) = v10;
  *(_DWORD *)(a6 + 16) = v11;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(unsigned char *)(a6 + 40) = v12;
  *(unsigned char *)(a6 + 41) = v13;
  *(_DWORD *)(a6 + 44) = v14;
  *(unsigned char *)(a6 + 48) = v15;
  *(unsigned char *)(a6 + 49) = v16;
  *(_DWORD *)(a6 + 52) = v17;
  *(unsigned char *)(a6 + 56) = v18;
  *(unsigned char *)(a6 + 57) = v19;
  *(void *)(a6 + 64) = v20;
  *(void *)(a6 + 72) = v21;
  *(unsigned char *)(a6 + 80) = v22;
  *(_OWORD *)(a6 + 88) = v23;
  *(void *)(a6 + 104) = v24;
  *(void *)(a6 + 112) = v25;
  *(_WORD *)(a6 + 120) = v26;
  *(_DWORD *)(a6 + 124) = v27;
  *(unsigned char *)(a6 + 128) = v28;
  *(_DWORD *)(a6 + 132) = v29;
  *(unsigned char *)(a6 + 136) = v30;
  *(_DWORD *)(a6 + 137) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a6 + 141) = v31;
  long long v33 = *a3;
  *(_OWORD *)(a6 + 144) = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a6 + 160) = v33;
  *(void *)(a6 + 176) = v32;
  uint64_t v34 = type metadata accessor for ListenEvent.Model(0);
  uint64_t v35 = a6 + *(int *)(v34 + 28);
  uint64_t v36 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a4, v36);
  uint64_t v37 = a6 + *(int *)(v34 + 32);
  uint64_t v38 = sub_27D7F0();
  int v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32);

  return v39(v37, a5, v38);
}

uint64_t sub_144F14()
{
  uint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x61446C6C65537075;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_144FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_147F30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_144FF4(uint64_t a1)
{
  unint64_t v2 = sub_145400();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_145030(uint64_t a1)
{
  unint64_t v2 = sub_145400();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListenEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31E540);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_145400();
  sub_27E440();
  char v10 = *(unsigned char *)(v4 + 4);
  int v11 = *(_DWORD *)(v4 + 8);
  char v12 = *(unsigned char *)(v4 + 12);
  int v13 = *(_DWORD *)(v4 + 16);
  char v14 = *(unsigned char *)(v4 + 40);
  char v15 = *(unsigned char *)(v4 + 41);
  int v16 = *(_DWORD *)(v4 + 44);
  char v17 = *(unsigned char *)(v4 + 48);
  char v18 = *(unsigned char *)(v4 + 49);
  int v19 = *(_DWORD *)(v4 + 52);
  char v20 = *(unsigned char *)(v4 + 56);
  char v21 = *(unsigned char *)(v4 + 57);
  LODWORD(v35) = *(_DWORD *)v4;
  BYTE4(v35) = v10;
  DWORD2(v35) = v11;
  BYTE12(v35) = v12;
  LODWORD(v36) = v13;
  long long v37 = *(_OWORD *)(v4 + 24);
  LOBYTE(v38) = v14;
  BYTE1(v38) = v15;
  HIDWORD(v38) = v16;
  LOBYTE(v39) = v17;
  BYTE1(v39) = v18;
  HIDWORD(v39) = v19;
  LOBYTE(v40) = v20;
  HIBYTE(v40) = v21;
  char v48 = 0;
  sub_57500();
  sub_27E330();
  if (!v3)
  {
    uint64_t v22 = *(void *)(v4 + 72);
    char v23 = *(unsigned char *)(v4 + 80);
    long long v24 = *(_OWORD *)(v4 + 88);
    uint64_t v25 = *(void *)(v4 + 104);
    uint64_t v26 = *(void *)(v4 + 112);
    __int16 v27 = *(_WORD *)(v4 + 120);
    int v28 = *(_DWORD *)(v4 + 124);
    char v29 = *(unsigned char *)(v4 + 128);
    int v30 = *(_DWORD *)(v4 + 132);
    char v31 = *(unsigned char *)(v4 + 136);
    char v32 = *(unsigned char *)(v4 + 141);
    *(void *)&long long v35 = *(void *)(v4 + 64);
    *((void *)&v35 + 1) = v22;
    LOBYTE(v36) = v23;
    long long v37 = v24;
    uint64_t v38 = v25;
    uint64_t v39 = v26;
    __int16 v40 = v27;
    int v41 = v28;
    char v42 = v29;
    int v43 = v30;
    char v44 = v31;
    int v45 = *(_DWORD *)(v4 + 137);
    char v46 = v32;
    long long v47 = *(_OWORD *)(v4 + 144);
    char v48 = 1;
    sub_1A1D4();
    sub_27E330();
    uint64_t v33 = *(void *)(v4 + 176);
    long long v35 = *(_OWORD *)(v4 + 160);
    uint64_t v36 = v33;
    char v48 = 2;
    sub_36A74();
    sub_27E2C0();
    type metadata accessor for ListenEvent.Model(0);
    LOBYTE(v35) = 3;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v35) = 4;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_145400()
{
  unint64_t result = qword_31E548;
  if (!qword_31E548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E548);
  }
  return result;
}

uint64_t ListenEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v53 = sub_27D7F0();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  char v54 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_4E04(&qword_31E550);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ListenEvent.Model(0);
  __chkstk_darwin(v9);
  int v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_145400();
  int v58 = v8;
  char v12 = v59;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  char v48 = v6;
  uint64_t v13 = v55;
  char v59 = v11;
  uint64_t v14 = (uint64_t)a1;
  uint64_t v49 = v9;
  uint64_t v15 = v56;
  uint64_t v50 = v4;
  char v73 = 0;
  sub_57F90();
  sub_27E260();
  char v16 = BYTE4(v60);
  int v17 = DWORD2(v60);
  char v18 = BYTE12(v60);
  int v19 = v61;
  char v20 = v63;
  char v21 = BYTE1(v63);
  int v22 = HIDWORD(v63);
  char v23 = v64;
  char v24 = BYTE1(v64);
  int v25 = HIDWORD(v64);
  char v26 = v65;
  char v27 = HIBYTE(v65);
  int v28 = v59;
  *char v59 = v60;
  *((unsigned char *)v28 + 4) = v16;
  v28[2] = v17;
  *((unsigned char *)v28 + 12) = v18;
  v28[4] = v19;
  *(_OWORD *)(v28 + 6) = v62;
  *((unsigned char *)v28 + 40) = v20;
  *((unsigned char *)v28 + 41) = v21;
  v28[11] = v22;
  *((unsigned char *)v28 + 48) = v23;
  *((unsigned char *)v28 + 49) = v24;
  v28[13] = v25;
  *((unsigned char *)v28 + 56) = v26;
  *((unsigned char *)v28 + 57) = v27;
  char v73 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v29 = *((void *)&v60 + 1);
  char v30 = v61;
  long long v31 = v62;
  uint64_t v32 = v63;
  uint64_t v33 = v64;
  __int16 v34 = v65;
  int v35 = v66;
  char v36 = v67;
  int v37 = v68;
  char v38 = v69;
  char v39 = v71;
  *((void *)v28 + 8) = v60;
  *((void *)v28 + 9) = v29;
  *((unsigned char *)v28 + 80) = v30;
  *(_OWORD *)(v28 + 22) = v31;
  *((void *)v28 + 13) = v32;
  *((void *)v28 + 14) = v33;
  *((_WORD *)v28 + 60) = v34;
  v28[31] = v35;
  *((unsigned char *)v28 + 128) = v36;
  v28[33] = v37;
  *((unsigned char *)v28 + 136) = v38;
  *(_DWORD *)((char *)v28 + 137) = v70;
  *((unsigned char *)v28 + 141) = v39;
  *((_OWORD *)v28 + 9) = v72;
  char v73 = 2;
  sub_37744();
  v47[1] = 0;
  sub_27E1F0();
  uint64_t v40 = v61;
  *((_OWORD *)v28 + 10) = v60;
  *((void *)v28 + 22) = v40;
  LOBYTE(v60) = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v41 = v50;
  sub_27E260();
  uint64_t v42 = v49;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v28 + *(int *)(v49 + 28), v48, v41);
  LOBYTE(v60) = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  int v43 = v54;
  uint64_t v44 = (uint64_t)v28;
  uint64_t v45 = v53;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v58, v57);
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v44 + *(int *)(v42 + 32), v43, v45);
  sub_145B44(v44, v52);
  sub_5E94(v14);
  return sub_145BA8(v44);
}

uint64_t sub_145B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListenEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_145BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListenEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_145C04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListenEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_145C1C(void *a1)
{
  return ListenEvent.Model.encode(to:)(a1);
}

uint64_t sub_145C34@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315920, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E510, a1);
}

uint64_t sub_145C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315928, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E528, a1);
}

uint64_t sub_145CA4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ListenEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_317DF8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    int v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ListenEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for ListenEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ListenEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ListenEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ListenEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1468A0);
}

uint64_t sub_1468A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317DF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for ListenEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_146AAC);
}

uint64_t sub_146AAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_317DF8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_146CB0()
{
  sub_146ED4(319, &qword_317EC0, (void (*)(void))sub_57F90, (void (*)(void))sub_57500);
  if (v0 <= 0x3F)
  {
    sub_146ED4(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_146ED4(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_146ED4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ListenEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_DWORD *)(a1 + 52) = *((_DWORD *)a2 + 13);
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    uint64_t v8 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v9 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v10;
    *(_WORD *)(a1 + 120) = *((_WORD *)a2 + 60);
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(_DWORD *)(a1 + 124) = *((_DWORD *)a2 + 31);
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
    *(_DWORD *)(a1 + 137) = *(_DWORD *)((char *)a2 + 137);
    *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
    uint64_t v11 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v11;
    *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
    *(unsigned char *)(a1 + 161) = *((unsigned char *)a2 + 161);
    uint64_t v12 = a2[22];
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v22 = (uint64_t)a2 + v13;
    uint64_t v23 = a1 + v13;
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v12;
    uint64_t v14 = sub_27D7C0();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v23, v22, v14);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for ListenEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for ListenEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v21 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v21;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  uint64_t v9 = *(void *)(a2 + 176);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v18 = a2 + v10;
  uint64_t v19 = a1 + v10;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v9;
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v19, v18, v11);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for ListenEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = a2[4];
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
  int v8 = a2[11];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(_DWORD *)(a1 + 44) = v8;
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  int v9 = a2[13];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(_DWORD *)(a1 + 52) = v9;
  *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(unsigned char *)(a1 + 121) = *((unsigned char *)a2 + 121);
  int v10 = a2[31];
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(_DWORD *)(a1 + 124) = v10;
  int v11 = a2[33];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 132) = v11;
  *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
  *(unsigned char *)(a1 + 138) = *((unsigned char *)a2 + 138);
  *(unsigned char *)(a1 + 139) = *((unsigned char *)a2 + 139);
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(unsigned char *)(a1 + 161) = *((unsigned char *)a2 + 161);
  *(void *)(a1 + 168) = *((void *)a2 + 21);
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t)a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t)a2 + v16;
  uint64_t v19 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for ListenEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for ListenEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1479D0);
}

uint64_t sub_1479D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ListenEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_147B10);
}

uint64_t sub_147B10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_147C3C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListenEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x147DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenEvent.Model.CodingKeys()
{
  return &type metadata for ListenEvent.Model.CodingKeys;
}

unint64_t sub_147E2C()
{
  unint64_t result = qword_31E698;
  if (!qword_31E698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E698);
  }
  return result;
}

unint64_t sub_147E84()
{
  unint64_t result = qword_31E6A0;
  if (!qword_31E6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6A0);
  }
  return result;
}

unint64_t sub_147EDC()
{
  unint64_t result = qword_31E6A8;
  if (!qword_31E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6A8);
  }
  return result;
}

uint64_t sub_147F30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE2F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t static SearchResultsData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_81AC0(*a1, *a2);
}

unint64_t sub_148194()
{
  return 0xD000000000000014;
}

uint64_t sub_1481B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_14890C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1481DC(uint64_t a1)
{
  unint64_t v2 = sub_1483D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_148218(uint64_t a1)
{
  unint64_t v2 = sub_1483D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchResultsData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31E6B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1483D8();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_31E6C0);
  sub_148624(&qword_31E6C8, (void (*)(void))sub_14842C);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1483D8()
{
  unint64_t result = qword_31E6B8;
  if (!qword_31E6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6B8);
  }
  return result;
}

unint64_t sub_14842C()
{
  unint64_t result = qword_31E6D0;
  if (!qword_31E6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6D0);
  }
  return result;
}

uint64_t SearchResultsData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31E6D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1483D8();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_31E6C0);
    sub_148624(&qword_31E6E0, (void (*)(void))sub_148694);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_148624(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_31E6C0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_148694()
{
  unint64_t result = qword_31E6E8;
  if (!qword_31E6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6E8);
  }
  return result;
}

uint64_t sub_1486F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SearchResultsData.init(from:)(a1, a2);
}

uint64_t sub_148708(void *a1)
{
  return SearchResultsData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SearchResultsData()
{
  return &type metadata for SearchResultsData;
}

unsigned char *storeEnumTagSinglePayload for SearchResultsData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1487CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData.CodingKeys()
{
  return &type metadata for SearchResultsData.CodingKeys;
}

unint64_t sub_148808()
{
  unint64_t result = qword_31E6F0;
  if (!qword_31E6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6F0);
  }
  return result;
}

unint64_t sub_148860()
{
  unint64_t result = qword_31E6F8;
  if (!qword_31E6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E6F8);
  }
  return result;
}

unint64_t sub_1488B8()
{
  unint64_t result = qword_31E700;
  if (!qword_31E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E700);
  }
  return result;
}

uint64_t sub_14890C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002B0820)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_148994(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31E708, &enum case for SessionGroup.default(_:));
}

uint64_t static ViewSupplementalContentEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315930, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E708, a1);
}

uint64_t sub_1489F4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31E720, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ViewSupplementalContentEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315938, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E720, a1);
}

uint64_t ViewSupplementalContentEvent.viewSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewSupplementalContentEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E738);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ViewSupplementalContentEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31E7C0);
}

uint64_t ViewSupplementalContentEvent.viewSourceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewSupplementalContentEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E738);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ViewSupplementalContentEvent.viewSourceData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ViewSupplementalContentEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewSupplementalContentEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ViewSupplementalContentEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewSupplementalContentEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ViewSupplementalContentEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ViewSupplementalContentEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ViewSupplementalContentEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v6, v9);
}

uint64_t ViewSupplementalContentEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewSupplementalContentEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ViewSupplementalContentEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31E860);
}

uint64_t ViewSupplementalContentEvent.Model.init(contentData:viewSourceData:eventData:)@<X0>(_OWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  long long v7 = a1[1];
  *(_OWORD *)a4 = *a1;
  *(_OWORD *)(a4 + 16) = v7;
  long long v8 = a1[3];
  *(_OWORD *)(a4 + 32) = a1[2];
  *(_OWORD *)(a4 + 48) = v8;
  long long v9 = a1[5];
  *(_OWORD *)(a4 + 64) = a1[4];
  *(_OWORD *)(a4 + 80) = v9;
  *(unsigned char *)(a4 + 96) = v6;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for ViewSupplementalContentEvent.Model(0) + 24);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_148F50()
{
  uint64_t v1 = 0x72756F5377656976;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_148FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_14B0CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_148FEC(uint64_t a1)
{
  unint64_t v2 = sub_149270();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_149028(uint64_t a1)
{
  unint64_t v2 = sub_149270();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ViewSupplementalContentEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31E740);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_149270();
  sub_27E440();
  long long v9 = v3[1];
  long long v15 = *v3;
  long long v16 = v9;
  long long v10 = v3[3];
  long long v17 = v3[2];
  long long v18 = v10;
  long long v11 = v3[5];
  long long v19 = v3[4];
  long long v20 = v11;
  char v14 = 0;
  sub_1A1D4();
  sub_27E2C0();
  if (!v2)
  {
    LOBYTE(v15) = *((unsigned char *)v3 + 96);
    char v14 = 1;
    sub_1492C4();
    sub_27E330();
    type metadata accessor for ViewSupplementalContentEvent.Model(0);
    LOBYTE(v15) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_149270()
{
  unint64_t result = qword_31E748;
  if (!qword_31E748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E748);
  }
  return result;
}

unint64_t sub_1492C4()
{
  unint64_t result = qword_31E750;
  if (!qword_31E750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E750);
  }
  return result;
}

uint64_t ViewSupplementalContentEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v21 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_31E758);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  long long v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewSupplementalContentEvent.Model(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_149270();
  uint64_t v12 = (uint64_t)v25;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  int v25 = a1;
  uint64_t v20 = v9;
  uint64_t v13 = v23;
  char v14 = v5;
  char v32 = 0;
  sub_1A98C();
  uint64_t v15 = v24;
  sub_27E1F0();
  long long v16 = v27;
  *(_OWORD *)long long v11 = v26;
  *((_OWORD *)v11 + 1) = v16;
  long long v17 = v29;
  *((_OWORD *)v11 + 2) = v28;
  *((_OWORD *)v11 + 3) = v17;
  long long v18 = v31;
  *((_OWORD *)v11 + 4) = v30;
  *((_OWORD *)v11 + 5) = v18;
  char v32 = 1;
  sub_1496BC();
  sub_27E260();
  v11[96] = v26;
  LOBYTE(v26) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v15);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v11[*(int *)(v20 + 24)], v14, v3);
  sub_149710((uint64_t)v11, v22);
  sub_5E94((uint64_t)v25);
  return sub_149774((uint64_t)v11);
}

unint64_t sub_1496BC()
{
  unint64_t result = qword_31E760;
  if (!qword_31E760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E760);
  }
  return result;
}

uint64_t sub_149710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewSupplementalContentEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_149774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewSupplementalContentEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1497D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewSupplementalContentEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1497E8(void *a1)
{
  return ViewSupplementalContentEvent.Model.encode(to:)(a1);
}

uint64_t sub_149800@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315930, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E708, a1);
}

uint64_t sub_149838@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315938, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E720, a1);
}

uint64_t sub_149870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v7, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewSupplementalContentEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31E738);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14A054);
}

uint64_t sub_14A054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31E738);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ViewSupplementalContentEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14A1C0);
}

uint64_t sub_14A1C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31E738);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_14A324()
{
  sub_14A498(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_14A498(319, (unint64_t *)&unk_31E7D0, (void (*)(void))sub_1496BC, (void (*)(void))sub_1492C4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_14A498(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
      *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
      *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
      uint64_t v10 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v12;
      long long v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      long long v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      int v7 = *(_DWORD *)(a2 + 60);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_DWORD *)(a1 + 60) = v7;
      int v8 = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 68) = v8;
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1);
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      long long v12 = *(_OWORD *)(a2 + 80);
      long long v14 = *(_OWORD *)(a2 + 32);
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)(a1 + 48) = v13;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
    int v9 = *(_DWORD *)(a2 + 60);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = v9;
    int v10 = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 68) = v10;
    *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
    *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
    *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
    *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    long long v16 = *(_OWORD *)(a2 + 32);
    long long v17 = *(_OWORD *)(a2 + 48);
    long long v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)(a1 + 48) = v17;
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_62898(a1);
LABEL_5:
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14ACA8);
}

uint64_t sub_14ACA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ViewSupplementalContentEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14AD78);
}

uint64_t sub_14AD78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_14AE20()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ViewSupplementalContentEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x14AF8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSupplementalContentEvent.Model.CodingKeys()
{
  return &type metadata for ViewSupplementalContentEvent.Model.CodingKeys;
}

unint64_t sub_14AFC8()
{
  unint64_t result = qword_31E8A0;
  if (!qword_31E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E8A0);
  }
  return result;
}

unint64_t sub_14B020()
{
  unint64_t result = qword_31E8A8;
  if (!qword_31E8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E8A8);
  }
  return result;
}

unint64_t sub_14B078()
{
  unint64_t result = qword_31E8B0;
  if (!qword_31E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E8B0);
  }
  return result;
}

uint64_t sub_14B0CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756F5377656976 && a2 == 0xEE00617461446563 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_14B26C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31E8B8, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315940, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E8B8, a1);
}

uint64_t sub_14B2CC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31E8D0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315948, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E8D0, a1);
}

uint64_t SearchEndEvent.searchEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E8E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEndEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31E978);
}

uint64_t SearchEndEvent.searchEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E8E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchEndEvent.searchEndData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchEndEvent.searchSuggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchEndEvent.searchSuggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchEndEvent.searchSuggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchEndEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SearchEndEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v6, v11);
}

uint64_t SearchCompleteEvent.Model.searchSuggestionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = *(void *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEndEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEndEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31EA20);
}

uint64_t SearchEndEvent.Model.init(searchData:searchEndData:searchSuggestionData:eventData:)@<X0>(_OWORD *a1@<X0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a2;
  long long v8 = a1[1];
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(unsigned char *)(a5 + 32) = v7;
  *(_OWORD *)(a5 + 40) = *a3;
  uint64_t v9 = a5 + *(int *)(type metadata accessor for SearchEndEvent.Model(0) + 28);
  uint64_t v10 = sub_27D7C0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a4, v10);
}

unint64_t sub_14B9BC()
{
  unint64_t result = 0x6144686372616573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E45686372616573;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_14BA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_14DCB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_14BA8C(uint64_t a1)
{
  unint64_t v2 = sub_14BD40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14BAC8(uint64_t a1)
{
  unint64_t v2 = sub_14BD40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchEndEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31E8F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_14BD40();
  sub_27E440();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  char v12 = 0;
  sub_B11C8();
  sub_27E2C0();
  if (!v2)
  {
    LOBYTE(v13) = *((unsigned char *)v3 + 32);
    char v12 = 1;
    sub_342A8();
    sub_27E330();
    long long v13 = *(long long *)((char *)v3 + 40);
    char v12 = 2;
    sub_14BD94();
    sub_27E2C0();
    type metadata accessor for SearchEndEvent.Model(0);
    LOBYTE(v13) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_14BD40()
{
  unint64_t result = qword_31E900;
  if (!qword_31E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E900);
  }
  return result;
}

unint64_t sub_14BD94()
{
  unint64_t result = qword_31E908;
  if (!qword_31E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E908);
  }
  return result;
}

uint64_t SearchEndEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_31E910);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SearchEndEvent.Model(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v24 = a1;
  sub_5900(a1, v13);
  sub_14BD40();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v24);
  }
  uint64_t v14 = v22;
  char v27 = 0;
  sub_B1968();
  sub_27E1F0();
  long long v15 = v26;
  *(_OWORD *)char v12 = v25;
  *((_OWORD *)v12 + 1) = v15;
  char v27 = 1;
  sub_34250();
  sub_27E260();
  v12[32] = v25;
  char v27 = 2;
  sub_14C1AC();
  sub_27E1F0();
  *(_OWORD *)(v12 + 40) = v25;
  LOBYTE(v25) = 3;
  sub_1AB30(&qword_315E28);
  uint64_t v16 = v6;
  uint64_t v17 = v23;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v17);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v12[*(int *)(v10 + 28)], v16, v4);
  sub_14C200((uint64_t)v12, v21);
  sub_5E94((uint64_t)v24);
  return sub_14C264((uint64_t)v12);
}

unint64_t sub_14C1AC()
{
  unint64_t result = qword_31E918;
  if (!qword_31E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31E918);
  }
  return result;
}

uint64_t sub_14C200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14C264(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_14C2C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_14C2D8(void *a1)
{
  return SearchEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_14C2F0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315940, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31E8B8, a1);
}

uint64_t sub_14C328@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315948, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31E8D0, a1);
}

uint64_t sub_14C360@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v7, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEndEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31E8E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31E8F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for SearchEndEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for SearchEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for SearchEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for SearchEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SearchEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14CD54);
}

uint64_t sub_14CD54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31E8E8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for SearchEndEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14CF10);
}

uint64_t sub_14CF10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31E8E8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_31E8F0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_14D0C4()
{
  sub_14D2AC(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
  if (v0 <= 0x3F)
  {
    sub_14D2AC(319, &qword_31E988, (void (*)(void))sub_34250, (void (*)(void))sub_342A8);
    if (v1 <= 0x3F)
    {
      sub_14D2AC(319, (unint64_t *)&unk_31E990, (void (*)(void))sub_14C1AC, (void (*)(void))sub_14BD94);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_14D2AC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SearchEndEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
    }
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_27D7C0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for SearchEndEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B9D48(a1);
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_B9D48(a1);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14D884);
}

uint64_t sub_14D884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14D954);
}

uint64_t sub_14D954(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_14D9FC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchEndEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x14DB74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEndEvent.Model.CodingKeys()
{
  return &type metadata for SearchEndEvent.Model.CodingKeys;
}

unint64_t sub_14DBB0()
{
  unint64_t result = qword_31EA60;
  if (!qword_31EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA60);
  }
  return result;
}

unint64_t sub_14DC08()
{
  unint64_t result = qword_31EA68;
  if (!qword_31EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA68);
  }
  return result;
}

unint64_t sub_14DC60()
{
  unint64_t result = qword_31EA70;
  if (!qword_31EA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA70);
  }
  return result;
}

uint64_t sub_14DCB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E45686372616573 && a2 == 0xED00006174614464 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B0840 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_14DEAC()
{
  return 0x65756C6156776172;
}

uint64_t sub_14DEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_14DF5C(uint64_t a1)
{
  unint64_t v2 = sub_14E398();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14DF98(uint64_t a1)
{
  unint64_t v2 = sub_14E398();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Rating.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31EA78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_14E398();
  sub_27E430();
  if (!v2)
  {
    uint64_t v10 = sub_27E220();
    uint64_t v11 = v9;
    BOOL v12 = v10 == 0x6E776F6E6B6E75 && v9 == 0xE700000000000000;
    if (v12 || (sub_27E370() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      *a2 = 0;
    }
    else
    {
      BOOL v14 = v10 == 49 && v11 == 0xE100000000000000;
      if (v14 || (sub_27E370() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        *a2 = 1;
      }
      else
      {
        BOOL v15 = v10 == 50 && v11 == 0xE100000000000000;
        if (v15 || (sub_27E370() & 1) != 0)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          swift_bridgeObjectRelease();
          *a2 = 2;
        }
        else
        {
          BOOL v16 = v10 == 51 && v11 == 0xE100000000000000;
          if (v16 || (sub_27E370() & 1) != 0)
          {
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            swift_bridgeObjectRelease();
            *a2 = 3;
          }
          else
          {
            BOOL v17 = v10 == 52 && v11 == 0xE100000000000000;
            if (v17 || (sub_27E370() & 1) != 0)
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
              swift_bridgeObjectRelease();
              *a2 = 4;
            }
            else
            {
              if (v10 == 53 && v11 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v18 = sub_27E370();
                swift_bridgeObjectRelease();
                if ((v18 & 1) == 0)
                {
                  sub_14E3EC();
                  swift_allocError();
                  swift_willThrow();
                  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
                  return sub_5E94((uint64_t)a1);
                }
              }
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
              *a2 = 5;
            }
          }
        }
      }
    }
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_14E398()
{
  unint64_t result = qword_31EA80;
  if (!qword_31EA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA80);
  }
  return result;
}

unint64_t sub_14E3EC()
{
  unint64_t result = qword_31EA88;
  if (!qword_31EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA88);
  }
  return result;
}

uint64_t Rating.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31EA90);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_14E398();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BookAnalytics::Rating_optional __swiftcall Rating.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F8B78;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t Rating.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6647407;
      break;
    case 2:
      uint64_t result = 7305076;
      break;
    case 3:
      uint64_t result = 0x6565726874;
      break;
    case 4:
      uint64_t result = 1920298854;
      break;
    case 5:
      uint64_t result = 1702259046;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_14E6EC(unsigned __int8 *a1, char *a2)
{
  return sub_2D580(*a1, *a2);
}

unint64_t sub_14E6FC()
{
  unint64_t result = qword_31EA98;
  if (!qword_31EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EA98);
  }
  return result;
}

Swift::Int sub_14E750()
{
  return sub_20BB78();
}

uint64_t sub_14E758()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_14E830()
{
  return sub_25D614();
}

BookAnalytics::Rating_optional sub_14E838(Swift::String *a1)
{
  return Rating.init(rawValue:)(*a1);
}

void sub_14E844(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 6647407;
      goto LABEL_3;
    case 2:
      *a1 = 7305076;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 0x6565726874;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 1920298854;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 1702259046;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_14E8FC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Rating.init(from:)(a1, a2);
}

uint64_t sub_14E914(void *a1)
{
  return Rating.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for Rating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x14E9F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Rating()
{
  return &type metadata for Rating;
}

ValueMetadata *type metadata accessor for Rating.CodingError()
{
  return &type metadata for Rating.CodingError;
}

unsigned char *_s13BookAnalytics6RatingO11CodingErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x14EAE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Rating.Key()
{
  return &type metadata for Rating.Key;
}

unint64_t sub_14EB20()
{
  unint64_t result = qword_31EAA0;
  if (!qword_31EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAA0);
  }
  return result;
}

unint64_t sub_14EB78()
{
  unint64_t result = qword_31EAA8;
  if (!qword_31EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAA8);
  }
  return result;
}

unint64_t sub_14EBD0()
{
  unint64_t result = qword_31EAB0;
  if (!qword_31EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAB0);
  }
  return result;
}

unint64_t sub_14EC28()
{
  unint64_t result = qword_31EAB8;
  if (!qword_31EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAB8);
  }
  return result;
}

uint64_t OrientationData.windowHeight.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t OrientationData.windowHeight.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*LayoutOptionData.characterSpacing.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

BookAnalytics::OrientationData __swiftcall OrientationData.init(deviceOrientation:screenHeight:screenWidth:windowHeight:windowWidth:)(BookAnalytics::DeviceOrientation deviceOrientation, Swift::Int32 screenHeight, Swift::Int32 screenWidth, Swift::Int32 windowHeight, Swift::Int32 windowWidth)
{
  *(unsigned char *)uint64_t v5 = *(unsigned char *)deviceOrientation;
  *(_DWORD *)(v5 + 4) = screenHeight;
  *(_DWORD *)(v5 + 8) = screenWidth;
  *(_DWORD *)(v5 + 12) = windowHeight;
  *(_DWORD *)(v5 + 16) = windowWidth;
  result.windowWidth = screenWidth;
  result.screenWidth = screenHeight;
  result.deviceOrientation = deviceOrientation;
  return result;
}

unint64_t sub_14ECC8()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x6E6565726373;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6548000000000000;
    case 2:
      uint64_t v3 = 0x6E6565726373;
      goto LABEL_7;
    case 3:
      uint64_t v2 = 0x776F646E6977;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6548000000000000;
    case 4:
      uint64_t v3 = 0x776F646E6977;
LABEL_7:
      unint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6957000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_14ED78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_14F744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_14EDA0(uint64_t a1)
{
  unint64_t v2 = sub_14F430();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14EDDC(uint64_t a1)
{
  unint64_t v2 = sub_14F430();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t OrientationData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31EAC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = *((_DWORD *)v1 + 1);
  void v12[2] = *((_DWORD *)v1 + 2);
  v12[3] = v9;
  int v10 = *((_DWORD *)v1 + 3);
  v12[0] = *((_DWORD *)v1 + 4);
  v12[1] = v10;
  sub_5900(a1, a1[3]);
  sub_14F430();
  sub_27E440();
  char v18 = v8;
  char v17 = 0;
  sub_108D00();
  sub_27E330();
  if (!v2)
  {
    char v16 = 1;
    sub_27E340();
    char v15 = 2;
    sub_27E340();
    char v14 = 3;
    sub_27E340();
    char v13 = 4;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OrientationData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31EAD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_14F430();
  sub_27E430();
  if (!v2)
  {
    char v21 = 0;
    sub_108D54();
    sub_27E260();
    char v9 = v22;
    char v20 = 1;
    int v10 = sub_27E270();
    char v19 = 2;
    int v16 = sub_27E270();
    char v18 = 3;
    int v15 = sub_27E270();
    char v17 = 4;
    int v12 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    int v13 = v16;
    *(_DWORD *)(a2 + 4) = v10;
    *(_DWORD *)(a2 + 8) = v13;
    *(_DWORD *)(a2 + 12) = v15;
    *(_DWORD *)(a2 + 16) = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_14F26C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OrientationData.init(from:)(a1, a2);
}

uint64_t sub_14F284(void *a1)
{
  return OrientationData.encode(to:)(a1);
}

BOOL _s13BookAnalytics15OrientationDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  int v4 = *((_DWORD *)a1 + 1);
  int v3 = *((_DWORD *)a1 + 2);
  int v6 = *((_DWORD *)a1 + 3);
  int v5 = *((_DWORD *)a1 + 4);
  int v7 = *(_DWORD *)(a2 + 4);
  int v8 = *(_DWORD *)(a2 + 8);
  int v10 = *(_DWORD *)(a2 + 12);
  int v9 = *(_DWORD *)(a2 + 16);
  unint64_t v11 = 0xE800000000000000;
  uint64_t v12 = 0x7469617274726F70;
  if (v2 != 1)
  {
    uint64_t v12 = 0x70616373646E616CLL;
    unint64_t v11 = 0xE900000000000065;
  }
  if (*a1) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = 0xE700000000000000;
  }
  unint64_t v15 = 0xE800000000000000;
  uint64_t v16 = 0x7469617274726F70;
  if (*(unsigned char *)a2 != 1)
  {
    uint64_t v16 = 0x70616373646E616CLL;
    unint64_t v15 = 0xE900000000000065;
  }
  if (*(unsigned char *)a2) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0x6E776F6E6B6E75;
  }
  if (*(unsigned char *)a2) {
    unint64_t v18 = v15;
  }
  else {
    unint64_t v18 = 0xE700000000000000;
  }
  if (v13 == v17 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    BOOL result = 0;
    if (v4 != v7 || v3 != v8 || v6 != v10) {
      return result;
    }
    return v5 == v9;
  }
  int v22 = *(_DWORD *)(a2 + 16);
  int v20 = v5;
  char v21 = sub_27E370();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if ((v21 & 1) != 0 && v4 == v7 && v3 == v8)
  {
    int v5 = v20;
    int v9 = v22;
    if (v6 == v10) {
      return v5 == v9;
    }
  }
  return result;
}

unint64_t sub_14F430()
{
  unint64_t result = qword_31EAC8;
  if (!qword_31EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAC8);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for OrientationData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for OrientationData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[20]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 20) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationData()
{
  return &type metadata for OrientationData;
}

unsigned char *storeEnumTagSinglePayload for OrientationData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x14F604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationData.CodingKeys()
{
  return &type metadata for OrientationData.CodingKeys;
}

unint64_t sub_14F640()
{
  unint64_t result = qword_31EAD8;
  if (!qword_31EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAD8);
  }
  return result;
}

unint64_t sub_14F698()
{
  unint64_t result = qword_31EAE0;
  if (!qword_31EAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAE0);
  }
  return result;
}

unint64_t sub_14F6F0()
{
  unint64_t result = qword_31EAE8;
  if (!qword_31EAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EAE8);
  }
  return result;
}

uint64_t sub_14F744(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AFB50 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65486E6565726373 && a2 == 0xEC00000074686769 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69576E6565726373 && a2 == 0xEB00000000687464 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6548776F646E6977 && a2 == 0xEC00000074686769 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6957776F646E6977 && a2 == 0xEB00000000687464)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_14F9B0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31EAF0, &enum case for SessionGroup.default(_:));
}

uint64_t static MarkAsFinishedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315950, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31EAF0, a1);
}

uint64_t sub_14FA10(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31EB08, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static MarkAsFinishedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315958, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31EB08, a1);
}

uint64_t MarkAsFinishedEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MarkAsFinishedEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31EB98);
}

uint64_t MarkAsFinishedEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MarkAsFinishedEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MarkAsFinishedEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F88);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MarkAsFinishedEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F88);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MarkAsFinishedEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MarkAsFinishedEvent.markedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31EB20);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MarkAsFinishedEvent.markedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31EB20);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MarkAsFinishedEvent.markedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MarkAsFinishedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MarkAsFinishedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MarkAsFinishedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t MarkAsFinishedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MarkAsFinishedEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t UPPContentBrickExposureEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[12];
  uint64_t v3 = v1[13];
  uint64_t v4 = v1[14];
  uint64_t v5 = v1[15];
  uint64_t v6 = v1[16];
  uint64_t v7 = v1[17];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void MarkAsFinishedEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 144);
}

void MarkAsFinishedEvent.Model.markedData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 145);
}

uint64_t MarkAsFinishedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarkAsFinishedEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MarkAsFinishedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31EC40);
}

uint64_t MarkAsFinishedEvent.Model.init(contentData:seriesData:suggestionData:markedData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 77);
  char v18 = *a3;
  char v19 = *a4;
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v7;
  *(unsigned char *)(a6 + 16) = v8;
  *(_OWORD *)(a6 + 24) = v9;
  *(void *)(a6 + 40) = v10;
  *(void *)(a6 + 48) = v11;
  *(_WORD *)(a6 + 56) = v12;
  *(_DWORD *)(a6 + 60) = v13;
  *(unsigned char *)(a6 + 64) = v14;
  *(_DWORD *)(a6 + 68) = v15;
  *(unsigned char *)(a6 + 72) = v16;
  *(_DWORD *)(a6 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a6 + 77) = v17;
  long long v20 = *a2;
  long long v21 = a2[1];
  *(_OWORD *)(a6 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a6 + 96) = v20;
  long long v22 = a2[2];
  *(_OWORD *)(a6 + 112) = v21;
  *(_OWORD *)(a6 + 128) = v22;
  *(unsigned char *)(a6 + 144) = v18;
  *(unsigned char *)(a6 + 145) = v19;
  uint64_t v23 = a6 + *(int *)(type metadata accessor for MarkAsFinishedEvent.Model(0) + 32);
  uint64_t v24 = sub_27D7C0();
  long long v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);

  return v25(v23, a5, v24);
}

uint64_t sub_150314()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x736569726573;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x6974736567677573;
      break;
    case 3:
      uint64_t v2 = 0x64656B72616DLL;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 4:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1503D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_152D34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1503FC(uint64_t a1)
{
  unint64_t v2 = sub_150750();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_150438(uint64_t a1)
{
  unint64_t v2 = sub_150750();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MarkAsFinishedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31EB28);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_150750();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v25 = *(void *)v4;
  *((void *)&v25 + 1) = v10;
  v26[0] = v11;
  *(_OWORD *)&v26[8] = v12;
  *(void *)&v26[24] = v13;
  uint64_t v27 = v14;
  __int16 v28 = v15;
  int v29 = v16;
  char v30 = v17;
  int v31 = v18;
  char v32 = v19;
  int v33 = *(_DWORD *)(v4 + 73);
  char v34 = v20;
  long long v35 = *(_OWORD *)(v4 + 80);
  char v24 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    long long v21 = *(_OWORD *)(v4 + 112);
    long long v25 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)long long v26 = v21;
    *(_OWORD *)&v26[16] = *(_OWORD *)(v4 + 128);
    char v24 = 1;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v25) = *(unsigned char *)(v4 + 144);
    char v24 = 2;
    sub_36B1C();
    sub_27E2C0();
    LOBYTE(v25) = *(unsigned char *)(v4 + 145);
    char v24 = 3;
    sub_B80B8();
    sub_27E2C0();
    type metadata accessor for MarkAsFinishedEvent.Model(0);
    LOBYTE(v25) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_150750()
{
  unint64_t result = qword_31EB30;
  if (!qword_31EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EB30);
  }
  return result;
}

uint64_t MarkAsFinishedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4E04(&qword_31EB38);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MarkAsFinishedEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  long long v35 = a1;
  sub_5900(a1, v12);
  sub_150750();
  char v34 = v8;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v13 = v6;
  uint64_t v14 = v31;
  uint64_t v15 = v32;
  char v47 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v16 = *((void *)&v36 + 1);
  char v17 = v37[0];
  long long v18 = *(_OWORD *)&v37[8];
  uint64_t v19 = *(void *)&v37[24];
  uint64_t v20 = v38;
  __int16 v21 = v39;
  int v22 = v40;
  char v23 = v41;
  int v24 = v42;
  char v25 = v43;
  char v26 = v45;
  *(void *)char v11 = v36;
  *((void *)v11 + 1) = v16;
  v11[16] = v17;
  *(_OWORD *)(v11 + 24) = v18;
  *((void *)v11 + 5) = v19;
  *((void *)v11 + 6) = v20;
  *((_WORD *)v11 + 28) = v21;
  *((_DWORD *)v11 + 15) = v22;
  v11[64] = v23;
  *((_DWORD *)v11 + 17) = v24;
  v11[72] = v25;
  *(_DWORD *)(v11 + 73) = v44;
  v11[77] = v26;
  *((_OWORD *)v11 + 5) = v46;
  char v47 = 1;
  sub_11A3C();
  sub_27E1F0();
  long long v27 = *(_OWORD *)v37;
  *((_OWORD *)v11 + 6) = v36;
  *((_OWORD *)v11 + 7) = v27;
  *((_OWORD *)v11 + 8) = *(_OWORD *)&v37[16];
  char v47 = 2;
  sub_377EC();
  v29[1] = 0;
  sub_27E1F0();
  v11[144] = v36;
  char v47 = 3;
  sub_B8060();
  sub_27E1F0();
  v11[145] = v36;
  LOBYTE(v36) = 4;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v33);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v11[*(int *)(v9 + 32)], v13, v4);
  sub_150C60((uint64_t)v11, v30);
  sub_5E94((uint64_t)v35);
  return sub_150CC4((uint64_t)v11);
}

uint64_t sub_150C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MarkAsFinishedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_150CC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarkAsFinishedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_150D20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MarkAsFinishedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_150D38(void *a1)
{
  return MarkAsFinishedEvent.Model.encode(to:)(a1);
}

uint64_t sub_150D50@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315950, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31EAF0, a1);
}

uint64_t sub_150D88@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315958, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31EB08, a1);
}

uint64_t sub_150DC0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarkAsFinishedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31EB20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for MarkAsFinishedEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1519BC);
}

uint64_t sub_1519BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_31EB20);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for MarkAsFinishedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_151BC8);
}

uint64_t sub_151BC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_31EB20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_151DCC()
{
  sub_152028(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_152028(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
    if (v1 <= 0x3F)
    {
      sub_152028(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
      if (v2 <= 0x3F)
      {
        sub_152028(319, (unint64_t *)&unk_31EBA8, (void (*)(void))sub_B8060, (void (*)(void))sub_B80B8);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_152028(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v13;
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    }
    else
    {
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      *(void *)(a1 + 112) = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)((char *)a2 + 121);
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRetain();
    }
    *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  }
  else
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v11;
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (long long *)(a1 + 96);
  int v9 = (long long *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v12;
      *uint64_t v8 = v11;
    }
    else
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
      *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1CDD8(a1 + 96);
    long long v14 = *(_OWORD *)(a2 + 112);
    long long v13 = *(_OWORD *)(a2 + 128);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 112) = v14;
    *(_OWORD *)(a1 + 128) = v13;
  }
  else
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
    *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, v9, v11);
  return a1;
}

uint64_t assignWithTake for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136) != 1)
  {
    uint64_t v10 = *(void *)(a2 + 136);
    if (v10 != 1)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 96);
  }
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_6:
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_152908);
}

uint64_t sub_152908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MarkAsFinishedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1529CC);
}

uint64_t sub_1529CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_152A74()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MarkAsFinishedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x152BF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkAsFinishedEvent.Model.CodingKeys()
{
  return &type metadata for MarkAsFinishedEvent.Model.CodingKeys;
}

unint64_t sub_152C30()
{
  unint64_t result = qword_31EC88;
  if (!qword_31EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EC88);
  }
  return result;
}

unint64_t sub_152C88()
{
  unint64_t result = qword_31EC90;
  if (!qword_31EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EC90);
  }
  return result;
}

unint64_t sub_152CE0()
{
  unint64_t result = qword_31EC98;
  if (!qword_31EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EC98);
  }
  return result;
}

uint64_t sub_152D34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614464656B72616DLL && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_152FB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_153014()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExposureCollector.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t ExposureCollector.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t ExposureCollector.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExposureCollector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 24, 7);
}

void sub_1530E8(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t EnvironmentValues.exposureCollector.getter()
{
  sub_15312C();
  sub_27DB00();
  return v1;
}

unint64_t sub_15312C()
{
  unint64_t result = qword_31ECA0;
  if (!qword_31ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ECA0);
  }
  return result;
}

uint64_t sub_153180@<X0>(void *a1@<X8>)
{
  sub_15312C();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_1531D0()
{
  return sub_27DB10();
}

uint64_t View.exposureCollecting(from:)()
{
  return swift_release();
}

uint64_t sub_1532D4@<X0>(void *a1@<X8>)
{
  sub_15312C();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for ExposureCollector()
{
  return self;
}

uint64_t sub_15334C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for ExposureCollector(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ExposureCollector);
}

uint64_t dispatch thunk of ExposureCollector.storage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ExposureCollector.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1533EC()
{
  return swift_getWitnessTable();
}

unint64_t sub_15345C()
{
  unint64_t result = qword_31ED70;
  if (!qword_31ED70)
  {
    sub_82930(&qword_31ED68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31ED70);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExposureCollectorKey()
{
  return &type metadata for ExposureCollectorKey;
}

uint64_t sub_1534C8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31ED78, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchCompleteEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315960, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31ED78, a1);
}

uint64_t sub_153528(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31ED90, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchCompleteEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315968, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31ED90, a1);
}

uint64_t SearchCompleteEvent.searchMethodData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31EDA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchCompleteEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31EE38);
}

uint64_t SearchCompleteEvent.searchMethodData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31EDA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchCompleteEvent.searchMethodData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchCompleteEvent.searchSuggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchCompleteEvent.searchSuggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchCompleteEvent.searchSuggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchCompleteEvent.searchSuggestionSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31EDB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchCompleteEvent.searchSuggestionSelectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31EDB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchCompleteEvent.searchSuggestionSelectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchCompleteEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchCompleteEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchCompleteEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchCompleteEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SearchCompleteEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v6, v13);
}

uint64_t SearchCompleteEvent.Model.searchSuggestionSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  int v3 = *(_DWORD *)(v1 + 72);
  char v4 = *(unsigned char *)(v1 + 76);
  *(void *)a1 = *(void *)(v1 + 56);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 20) = v4;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t SearchCompleteEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchCompleteEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchCompleteEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31EEE8);
}

uint64_t SearchCompleteEvent.Model.init(searchData:searchMethodData:searchSuggestionData:searchSuggestionSelectionData:eventData:)@<X0>(_OWORD *a1@<X0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *a2;
  int v9 = *(_DWORD *)(a4 + 16);
  char v10 = *(unsigned char *)(a4 + 20);
  long long v11 = a1[1];
  *(_OWORD *)a6 = *a1;
  *(_OWORD *)(a6 + 16) = v11;
  *(unsigned char *)(a6 + 32) = v8;
  *(_OWORD *)(a6 + 40) = *a3;
  *(_OWORD *)(a6 + 56) = *(_OWORD *)a4;
  *(unsigned char *)(a6 + 76) = v10;
  *(_DWORD *)(a6 + 72) = v9;
  uint64_t v12 = a6 + *(int *)(type metadata accessor for SearchCompleteEvent.Model(0) + 32);
  uint64_t v13 = sub_27D7C0();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a5, v13);
}

unint64_t sub_153DC8(char a1)
{
  unint64_t result = 0x6144686372616573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_153E90()
{
  return sub_153DC8(*v0);
}

uint64_t sub_153E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1565B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_153EC0(uint64_t a1)
{
  unint64_t v2 = sub_1541C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_153EFC(uint64_t a1)
{
  unint64_t v2 = sub_1541C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchCompleteEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31EDB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1541C4();
  sub_27E440();
  long long v9 = v3[1];
  long long v15 = *v3;
  long long v16 = v9;
  char v14 = 0;
  sub_B11C8();
  sub_27E2C0();
  if (!v2)
  {
    LOBYTE(v15) = *((unsigned char *)v3 + 32);
    char v14 = 1;
    sub_E7EA0();
    sub_27E330();
    long long v15 = *(long long *)((char *)v3 + 40);
    char v14 = 2;
    sub_14BD94();
    sub_27E2C0();
    int v10 = *((_DWORD *)v3 + 18);
    char v11 = *((unsigned char *)v3 + 76);
    long long v15 = *(long long *)((char *)v3 + 56);
    BYTE4(v16) = v11;
    LODWORD(v16) = v10;
    char v14 = 3;
    sub_154218();
    sub_27E2C0();
    type metadata accessor for SearchCompleteEvent.Model(0);
    LOBYTE(v15) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1541C4()
{
  unint64_t result = qword_31EDC0;
  if (!qword_31EDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EDC0);
  }
  return result;
}

unint64_t sub_154218()
{
  unint64_t result = qword_31EDC8;
  if (!qword_31EDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EDC8);
  }
  return result;
}

uint64_t SearchCompleteEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_31EDD0);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchCompleteEvent.Model(0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1541C4();
  uint64_t v11 = v26;
  sub_27E430();
  if (v11) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v26 = v8;
  uint64_t v12 = (uint64_t)a1;
  uint64_t v13 = (uint64_t)v10;
  uint64_t v15 = v23;
  uint64_t v14 = v24;
  char v29 = 0;
  sub_B1968();
  sub_27E1F0();
  long long v16 = v28;
  *(_OWORD *)uint64_t v13 = v27;
  *(_OWORD *)(v13 + 16) = v16;
  char v29 = 1;
  sub_E7E48();
  sub_27E260();
  *(unsigned char *)(v13 + 32) = v27;
  char v29 = 2;
  sub_14C1AC();
  sub_27E1F0();
  *(_OWORD *)(v13 + 40) = v27;
  char v29 = 3;
  sub_1546E0();
  sub_27E1F0();
  int v17 = v28;
  char v18 = BYTE4(v28);
  *(_OWORD *)(v13 + 56) = v27;
  *(unsigned char *)(v13 + 76) = v18;
  *(_DWORD *)(v13 + 72) = v17;
  LOBYTE(v27) = 4;
  sub_1AB30(&qword_315E28);
  uint64_t v19 = v22;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v25);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v13 + *(int *)(v26 + 32), v5, v19);
  sub_154734(v13, v14);
  sub_5E94(v12);
  return sub_154798(v13);
}

unint64_t sub_1546E0()
{
  unint64_t result = qword_31EDD8;
  if (!qword_31EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EDD8);
  }
  return result;
}

uint64_t sub_154734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_154798(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1547F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCompleteEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_15480C(void *a1)
{
  return SearchCompleteEvent.Model.encode(to:)(a1);
}

uint64_t sub_154824@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315960, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31ED78, a1);
}

uint64_t sub_15485C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315968, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31ED90, a1);
}

uint64_t sub_154894@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v7, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchCompleteEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31EDA8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31E8F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    int v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31EDB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for SearchCompleteEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for SearchCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SearchCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SearchCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SearchCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_155490);
}

uint64_t sub_155490(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31EDA8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_31E8F0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_31EDB0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for SearchCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15569C);
}

uint64_t sub_15569C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31EDA8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_31E8F0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_31EDB0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1558A0()
{
  sub_155AFC(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
  if (v0 <= 0x3F)
  {
    sub_155AFC(319, (unint64_t *)&qword_31EE48, (void (*)(void))sub_E7E48, (void (*)(void))sub_E7EA0);
    if (v1 <= 0x3F)
    {
      sub_155AFC(319, (unint64_t *)&unk_31E990, (void (*)(void))sub_14C1AC, (void (*)(void))sub_14BD94);
      if (v2 <= 0x3F)
      {
        sub_155AFC(319, (unint64_t *)&unk_31EE50, (void (*)(void))sub_1546E0, (void (*)(void))sub_154218);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_155AFC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SearchCompleteEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
    }
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    uint64_t v11 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = a2[8];
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    LOBYTE(v11) = *((unsigned char *)a2 + 76);
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (uint64_t)a2 + v12;
    uint64_t v14 = a1 + v12;
    *(unsigned char *)(a1 + 76) = v11;
    uint64_t v15 = sub_27D7C0();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v13, v15);
  }
  return a1;
}

uint64_t destroy for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  LOBYTE(v9) = *(unsigned char *)(a2 + 76);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a2 + v10;
  uint64_t v12 = a1 + v10;
  *(unsigned char *)(a1 + 76) = v9;
  uint64_t v13 = sub_27D7C0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v12, v11, v13);
  return a1;
}

uint64_t assignWithCopy for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B9D48(a1);
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t assignWithTake for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_B9D48(a1);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15617C);
}

uint64_t sub_15617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SearchCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15624C);
}

uint64_t sub_15624C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1562F4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchCompleteEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x156474);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchCompleteEvent.Model.CodingKeys()
{
  return &type metadata for SearchCompleteEvent.Model.CodingKeys;
}

unint64_t sub_1564B0()
{
  unint64_t result = qword_31EF30;
  if (!qword_31EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF30);
  }
  return result;
}

unint64_t sub_156508()
{
  unint64_t result = qword_31EF38;
  if (!qword_31EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF38);
  }
  return result;
}

unint64_t sub_156560()
{
  unint64_t result = qword_31EF40;
  if (!qword_31EF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF40);
  }
  return result;
}

uint64_t sub_1565B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0890 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B0840 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000000002B08B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SearchResultsItemTypeData.positionInSection.getter()
{
  return *(unsigned int *)(v0 + 72);
}

uint64_t SearchResultsItemTypeData.positionInSection.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 72) = result;
  return result;
}

void __swiftcall SearchResultsItemTypeData.init(resultsReturnedStrings:position:contentPrivateID:contentUserID:contentID:positionInSection:section:)(BookAnalytics::SearchResultsItemTypeData *__return_ptr retstr, Swift::String resultsReturnedStrings, Swift::Int32 position, Swift::String contentPrivateID, Swift::String contentUserID, Swift::String contentID, Swift::Int32 positionInSection, Swift::String section)
{
  retstr->resultsReturnedStrings = resultsReturnedStrings;
  retstr->position = position;
  retstr->contentPrivateID = contentPrivateID;
  retstr->contentUserID = contentUserID;
  retstr->contentID = contentID;
  retstr->positionInSection = positionInSection;
  retstr->section = section;
}

unint64_t sub_156814(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697469736F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x55746E65746E6F63;
      break;
    case 4:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6E6F6974636573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_156918()
{
  return sub_156814(*v0);
}

uint64_t sub_156920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_157718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_156948(uint64_t a1)
{
  unint64_t v2 = sub_1572A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_156984(uint64_t a1)
{
  unint64_t v2 = sub_1572A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchResultsItemTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31EF48);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *(_DWORD *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v19 = *(void *)(v1 + 32);
  uint64_t v20 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v17 = *(void *)(v1 + 48);
  uint64_t v18 = v8;
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v15 = *(void *)(v1 + 56);
  uint64_t v16 = v9;
  int v14 = *(_DWORD *)(v1 + 72);
  uint64_t v10 = *(void *)(v1 + 80);
  v13[1] = *(void *)(v1 + 88);
  v13[2] = v10;
  sub_5900(a1, a1[3]);
  sub_1572A8();
  sub_27E440();
  char v29 = 0;
  uint64_t v11 = v22;
  sub_27E2F0();
  if (!v11)
  {
    char v28 = 1;
    sub_27E340();
    char v27 = 2;
    sub_27E2F0();
    char v26 = 3;
    sub_27E2F0();
    char v25 = 4;
    sub_27E2F0();
    char v24 = 5;
    sub_27E340();
    char v23 = 6;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchResultsItemTypeData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31EF58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1572A8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v40 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v39 = 1;
  swift_bridgeObjectRetain();
  int v33 = sub_27E270();
  char v38 = 2;
  uint64_t v30 = sub_27E220();
  char v37 = 3;
  uint64_t v32 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_27E220();
  uint64_t v31 = v15;
  uint64_t v27 = v14;
  char v36 = 4;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v26 = sub_27E220();
  char v35 = 5;
  uint64_t v29 = v16;
  swift_bridgeObjectRetain();
  int v25 = sub_27E270();
  char v34 = 6;
  uint64_t v17 = sub_27E220();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v28 = v17;
  v20(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v21 = v32;
  swift_bridgeObjectRetain();
  uint64_t v22 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v33;
  uint64_t v23 = v29;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v23;
  *(_DWORD *)(a2 + 72) = v25;
  *(void *)(a2 + 80) = v28;
  *(void *)(a2 + 88) = v19;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1570A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsItemTypeData.init(from:)(a1, a2);
}

uint64_t sub_1570B8(void *a1)
{
  return SearchResultsItemTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics25SearchResultsItemTypeDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = *(_DWORD *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 80);
  int v21 = *(_DWORD *)(a2 + 72);
  int v22 = *(_DWORD *)(a1 + 72);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v7) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_27E370();
    uint64_t result = 0;
    if ((v12 & 1) == 0 || v2 != v7) {
      return result;
    }
  }
  if (v4 == v9 && v3 == v8 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
  {
    if (v5 == v11 && v6 == v10 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
    {
      if (v26 == v24 && v25 == v23)
      {
        if (v22 != v21) {
          return 0;
        }
      }
      else
      {
        char v16 = sub_27E370();
        uint64_t result = 0;
        if ((v16 & 1) == 0 || v22 != v21) {
          return result;
        }
      }
      if (v20 == v18 && v19 == v17)
      {
        return 1;
      }
      else
      {
        return sub_27E370();
      }
    }
  }
  return result;
}

unint64_t sub_1572A8()
{
  unint64_t result = qword_31EF50;
  if (!qword_31EF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF50);
  }
  return result;
}

uint64_t initializeWithCopy for SearchResultsItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsItemTypeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchResultsItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchResultsItemTypeData()
{
  return &type metadata for SearchResultsItemTypeData;
}

unsigned char *storeEnumTagSinglePayload for SearchResultsItemTypeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1575D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsItemTypeData.CodingKeys()
{
  return &type metadata for SearchResultsItemTypeData.CodingKeys;
}

unint64_t sub_157614()
{
  unint64_t result = qword_31EF60;
  if (!qword_31EF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF60);
  }
  return result;
}

unint64_t sub_15766C()
{
  unint64_t result = qword_31EF68;
  if (!qword_31EF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF68);
  }
  return result;
}

unint64_t sub_1576C4()
{
  unint64_t result = qword_31EF70;
  if (!qword_31EF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF70);
  }
  return result;
}

uint64_t sub_157718(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000000002B08D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADF40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F6974636573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_157A18()
{
  return 0xD000000000000011;
}

uint64_t sub_157A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_158088(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_157A60(uint64_t a1)
{
  unint64_t v2 = sub_157C10();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_157A9C(uint64_t a1)
{
  unint64_t v2 = sub_157C10();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShareContextData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_31EF78);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_157C10();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_157C10()
{
  unint64_t result = qword_31EF80;
  if (!qword_31EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF80);
  }
  return result;
}

uint64_t ShareContextData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31EF88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_157C10();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_157DD8()
{
  unint64_t result = qword_31EF90;
  if (!qword_31EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF90);
  }
  return result;
}

unint64_t sub_157E30()
{
  unint64_t result = qword_31EF98;
  if (!qword_31EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EF98);
  }
  return result;
}

uint64_t sub_157E84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShareContextData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for ShareContextData()
{
  return &type metadata for ShareContextData;
}

unsigned char *storeEnumTagSinglePayload for ShareContextData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x157F48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareContextData.CodingKeys()
{
  return &type metadata for ShareContextData.CodingKeys;
}

unint64_t sub_157F84()
{
  unint64_t result = qword_31EFA0;
  if (!qword_31EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EFA0);
  }
  return result;
}

unint64_t sub_157FDC()
{
  unint64_t result = qword_31EFA8;
  if (!qword_31EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EFA8);
  }
  return result;
}

unint64_t sub_158034()
{
  unint64_t result = qword_31EFB0;
  if (!qword_31EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31EFB0);
  }
  return result;
}

uint64_t sub_158088(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B08F0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static Defaults.analyticsJitterSettingsEnabled.getter()
{
  uint64_t v0 = sub_4E04((uint64_t *)&unk_3203A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_315970 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_4BD4(v0, (uint64_t)qword_31EFB8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_27D890();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return v6[15];
}

uint64_t static Defaults.analyticsJitterSettingsEnabled.setter(char a1)
{
  uint64_t v2 = sub_4E04((uint64_t *)&unk_3203A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_315970 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_4BD4(v2, (uint64_t)qword_31EFB8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v8[15] = a1 & 1;
  sub_27D8A0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t (*static Defaults.analyticsJitterSettingsEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_4E04((uint64_t *)&unk_3203A0);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_315970 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_4BD4(v3, (uint64_t)qword_31EFB8);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_27D880();
  return sub_1584AC;
}

uint64_t sub_1584B0()
{
  uint64_t v0 = sub_4E04((uint64_t *)&unk_3203A0);
  sub_7CA8(v0, qword_31EFB8);
  sub_4BD4(v0, (uint64_t)qword_31EFB8);
  id v1 = [self standardUserDefaults];
  return sub_27D8C0();
}

uint64_t static Defaults.analyticsJitterLowBoundValue.getter()
{
  return sub_15871C(&qword_315978, (uint64_t)qword_31EFD0);
}

uint64_t static Defaults.analyticsJitterLowBoundValue.setter(uint64_t a1)
{
  return sub_158870(a1, &qword_315978, (uint64_t)qword_31EFD0);
}

uint64_t (*static Defaults.analyticsJitterLowBoundValue.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_4E04(&qword_31F000);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_315978 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_4BD4(v3, (uint64_t)qword_31EFD0);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_27D880();
  return sub_1584AC;
}

uint64_t sub_1586D0(uint64_t a1)
{
  return sub_158B7C(a1, qword_31EFD0);
}

uint64_t static Defaults.analyticsJitterUpperBoundValue.getter()
{
  return sub_15871C(&qword_315980, (uint64_t)qword_31EFE8);
}

uint64_t sub_15871C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31F000);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_4BD4(v4, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_27D890();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10[1];
}

uint64_t static Defaults.analyticsJitterUpperBoundValue.setter(uint64_t a1)
{
  return sub_158870(a1, &qword_315980, (uint64_t)qword_31EFE8);
}

uint64_t sub_158870(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F000);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_4BD4(v6, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v12[1] = a1;
  sub_27D8A0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t (*static Defaults.analyticsJitterUpperBoundValue.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_4E04(&qword_31F000);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  if (qword_315980 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_4BD4(v3, (uint64_t)qword_31EFE8);
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v6, v7, v3);
  v2[7] = sub_27D880();
  return sub_1584AC;
}

void sub_158ADC(void *a1)
{
  id v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_158B54(uint64_t a1)
{
  return sub_158B7C(a1, qword_31EFE8);
}

uint64_t sub_158B7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_4E04(&qword_31F000);
  sub_7CA8(v3, a2);
  sub_4BD4(v3, (uint64_t)a2);
  id v4 = [self standardUserDefaults];
  return sub_27D8C0();
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

BookAnalytics::TabType_optional __swiftcall TabType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F8C28;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t TabType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4E676E6964616572;
      break;
    case 2:
      uint64_t result = 0x7972617262696CLL;
      break;
    case 3:
      uint64_t result = 0x726F74736B6F6F62;
      break;
    case 4:
      uint64_t result = 0x6F6F626F69647561;
      break;
    case 5:
      uint64_t result = 0x686372616573;
      break;
    case 6:
      uint64_t result = 0x61676E616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static TabData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_2D01C(*a1, *a2);
}

unint64_t sub_158D94()
{
  unint64_t result = qword_31F008;
  if (!qword_31F008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F008);
  }
  return result;
}

Swift::Int sub_158DE8()
{
  return sub_25D700();
}

uint64_t sub_158DF4()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_158F14()
{
  return sub_25D700();
}

BookAnalytics::TabType_optional sub_158F1C(Swift::String *a1)
{
  return TabType.init(rawValue:)(*a1);
}

void sub_158F28(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000776FLL;
      uint64_t v3 = 0x4E676E6964616572;
      goto LABEL_3;
    case 2:
      *a1 = 0x7972617262696CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x726F74736B6F6F62;
      a1[1] = 0xE900000000000065;
      break;
    case 4:
      *a1 = 0x6F6F626F69647561;
      a1[1] = 0xEA0000000000736BLL;
      break;
    case 5:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      break;
    case 6:
      *a1 = 0x61676E616DLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_15902C()
{
  return sub_27DED0();
}

uint64_t sub_15908C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for TabType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1591A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabType()
{
  return &type metadata for TabType;
}

unint64_t sub_1591E0()
{
  unint64_t result = qword_31F010;
  if (!qword_31F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F010);
  }
  return result;
}

Swift::Void __swiftcall BATracker.popOrientationData()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_15A610((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  sub_15A6EC();
  sub_27D760();
}

Swift::Void __swiftcall BATracker.popSessionListeningData()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_15A740((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  sub_15A81C();
  sub_27D760();
}

Swift::Void __swiftcall BATracker.popSessionReadingData()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_15A870((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  sub_15A94C();
  sub_27D760();
}

uint64_t BATracker.pushLinkData(_:file:line:)()
{
  sub_E0628((uint64_t)v3);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_15AA7C((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  sub_CE394();
  sub_27D780();
  return sub_37644((uint64_t)v3);
}

Swift::Void __swiftcall BATracker.pushOrientationData(file:line:)(Swift::String file, Swift::Int line)
{
  uint64_t v3 = v2;
  id v4 = [self mainScreen];
  [v4 bounds];
  double v6 = v5;
  double v8 = v7;

  id v9 = [self _applicationKeyWindow];
  double v10 = v8;
  double v11 = v6;
  if (v9)
  {
    char v12 = v9;
    [v9 bounds];
    double v11 = v13;
    double v10 = v14;
  }
  id v15 = [self currentDevice];
  id v16 = [v15 orientation];

  if (v8 <= -2147483650.0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 >= 2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v6 <= -2147483650.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v6 >= 2147483650.0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v10 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v10 >= 2147483650.0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((*(void *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v6 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v10 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v11 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_22;
  }
  if (v11 <= -2147483650.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v11 < 2147483650.0)
  {
    BOOL v17 = sub_12DCAC((uint64_t)v16);
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(v17);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
    sub_15AAD4((void **)(v18 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
    swift_release();
    sub_15A6EC();
    sub_27D780();
    return;
  }
LABEL_24:
  __break(1u);
}

uint64_t BATracker.pushSessionEndReasonData(with:file:line:)(unint64_t a1)
{
  if (a1 >= 4)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(a1);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_15AB04((void **)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_release();
    sub_15AB24();
    return sub_27D780();
  }
  return result;
}

uint64_t BATracker.pushSessionListeningData(_:file:line:)(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR___BASessionListeningData_uniqueAudiobooksListened);
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v2 <= 0x7FFFFFFF)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_15AB78((void **)(v3 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    swift_release();
    sub_15A81C();
    return sub_27D780();
  }
  __break(1u);
  return result;
}

uint64_t BATracker.pushSessionReadingData(_:file:line:)(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR___BASessionReadingData_uniqueBooksRead);
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v2 <= 0x7FFFFFFF)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_15ABB4((void **)(v3 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    swift_release();
    sub_15A94C();
    return sub_27D780();
  }
  __break(1u);
  return result;
}

uint64_t sub_159EC4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = sub_27DDB0();
  uint64_t v12 = v11;
  id v13 = a3;
  id v14 = a1;
  a6(v13, v10, v12, a5);

  return swift_bridgeObjectRelease();
}

uint64_t BATracker.pushTabData(with:file:line:)(unint64_t a1)
{
  if (a1 >= 7)
  {
    uint64_t result = sub_27E390();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(a1);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_15ABD8((void **)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_release();
    sub_15ABF8();
    return sub_27D780();
  }
  return result;
}

uint64_t sub_15A09C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = sub_27DDB0();
  uint64_t v12 = v11;
  id v13 = a1;
  a6(a3, v10, v12, a5);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall BATracker.submitAppSessionStartEvent()()
{
}

Swift::Void __swiftcall BATracker.timeAppSessionEndEvent()()
{
  uint64_t v0 = sub_4E04(&qword_320080);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_27D0A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_15A318((uint64_t)v2);
  sub_15AC4C((uint64_t)v2);
}

uint64_t sub_15A318(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D0A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppSessionEndEvent(0);
  sub_15ADB0(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_15AC4C((uint64_t)v4);
    sub_15AE18(&qword_31F048, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
    return sub_27D790();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_15AE18(&qword_31F048, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
    sub_27D740();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_15A610(void **a1)
{
  v6[0] = &type metadata for OrientationData;
  v6[1] = sub_15A6EC();
  v6[2] = sub_15AF08();
  char v7 = 1;
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_266B48(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_266B48((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t result = sub_15AD54((uint64_t)v6, (uint64_t)&v2[8 * v4 + 4]);
  *a1 = v2;
  return result;
}

unint64_t sub_15A6EC()
{
  unint64_t result = qword_31F018;
  if (!qword_31F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F018);
  }
  return result;
}

uint64_t sub_15A740(void **a1)
{
  v6[0] = &type metadata for SessionListeningData;
  v6[1] = sub_15A81C();
  v6[2] = sub_15AEB4();
  char v7 = 1;
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_266B48(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_266B48((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t result = sub_15AD54((uint64_t)v6, (uint64_t)&v2[8 * v4 + 4]);
  *a1 = v2;
  return result;
}

unint64_t sub_15A81C()
{
  unint64_t result = qword_31F020;
  if (!qword_31F020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F020);
  }
  return result;
}

uint64_t sub_15A870(void **a1)
{
  v6[0] = &type metadata for SessionReadingData;
  v6[1] = sub_15A94C();
  v6[2] = sub_15AE60();
  char v7 = 1;
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_266B48(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_266B48((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t result = sub_15AD54((uint64_t)v6, (uint64_t)&v2[8 * v4 + 4]);
  *a1 = v2;
  return result;
}

unint64_t sub_15A94C()
{
  unint64_t result = qword_31F028;
  if (!qword_31F028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F028);
  }
  return result;
}

uint64_t sub_15A9A0(void **a1)
{
  v6[0] = &type metadata for BooksTreatmentData;
  v6[1] = sub_15ACAC();
  v6[2] = sub_15AD00();
  char v7 = 1;
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_266B48(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_266B48((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t result = sub_15AD54((uint64_t)v6, (uint64_t)&v2[8 * v4 + 4]);
  *a1 = v2;
  return result;
}

uint64_t sub_15AA7C(void **a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  long long v4 = *(_OWORD *)(v3 + 112);
  v9[6] = *(_OWORD *)(v3 + 96);
  v9[7] = v4;
  v9[8] = *(_OWORD *)(v3 + 128);
  uint64_t v10 = *(void *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 48);
  void v9[2] = *(_OWORD *)(v3 + 32);
  v9[3] = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  v9[4] = *(_OWORD *)(v3 + 64);
  v9[5] = v6;
  long long v7 = *(_OWORD *)(v3 + 16);
  v9[0] = *(_OWORD *)v3;
  v9[1] = v7;
  return sub_183B5C(a1, (uint64_t)v9, v2);
}

uint64_t sub_15AAD4(void **a1)
{
  return sub_183C98(a1, **(unsigned __int8 **)(v1 + 16) | ((unint64_t)*(unsigned int *)(*(void *)(v1 + 16) + 4) << 32), *(void *)(*(void *)(v1 + 16) + 8), *(_DWORD *)(*(void *)(v1 + 16) + 16), *(void *)(v1 + 24));
}

uint64_t sub_15AB04(void **a1)
{
  return sub_183DA4(a1, **(unsigned char **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_15AB24()
{
  unint64_t result = qword_31F030;
  if (!qword_31F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F030);
  }
  return result;
}

uint64_t sub_15AB78(void **a1)
{
  return sub_183DEC(a1, **(void **)(v1 + 16), *(unsigned int *)(*(void *)(v1 + 16) + 8) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v1 + 16)+ 12) << 32), *(void *)(v1 + 24));
}

uint64_t sub_15ABB4(void **a1)
{
  return sub_183EE8(a1, **(void **)(v1 + 16), *(_DWORD *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24));
}

uint64_t sub_15ABD8(void **a1)
{
  return sub_183FDC(a1, **(unsigned char **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_15ABF8()
{
  unint64_t result = qword_31F038;
  if (!qword_31F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F038);
  }
  return result;
}

uint64_t sub_15AC4C(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_15ACAC()
{
  unint64_t result = qword_320060;
  if (!qword_320060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320060);
  }
  return result;
}

unint64_t sub_15AD00()
{
  unint64_t result = qword_320380;
  if (!qword_320380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320380);
  }
  return result;
}

uint64_t sub_15AD54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_15ADB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15AE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_15AE60()
{
  unint64_t result = qword_3203C0;
  if (!qword_3203C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3203C0);
  }
  return result;
}

unint64_t sub_15AEB4()
{
  unint64_t result = qword_3203D0;
  if (!qword_3203D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3203D0);
  }
  return result;
}

unint64_t sub_15AF08()
{
  unint64_t result = qword_3203F0;
  if (!qword_3203F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3203F0);
  }
  return result;
}

BookAnalytics::SeriesType_optional __swiftcall SeriesType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F8CF0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t SeriesType.rawValue.getter()
{
  uint64_t result = 0x65697265536E6F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465726564726FLL;
      break;
    case 2:
      uint64_t result = 0x65726564724F6E75;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15B054(unsigned __int8 *a1, char *a2)
{
  return sub_33108(*a1, *a2);
}

unint64_t sub_15B064()
{
  unint64_t result = qword_31F050;
  if (!qword_31F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F050);
  }
  return result;
}

Swift::Int sub_15B0B8()
{
  return sub_27E420();
}

uint64_t sub_15B1A0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_15B270()
{
  return sub_27E420();
}

BookAnalytics::SeriesType_optional sub_15B354(Swift::String *a1)
{
  return SeriesType.init(rawValue:)(*a1);
}

void sub_15B360(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x65697265536E6F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6465726564726FLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x65726564724F6E75;
      a1[1] = 0xE900000000000064;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_15B408()
{
  return sub_27DED0();
}

uint64_t sub_15B468()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SeriesType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15B584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesType()
{
  return &type metadata for SeriesType;
}

unint64_t sub_15B5BC()
{
  unint64_t result = qword_31F058;
  if (!qword_31F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F058);
  }
  return result;
}

BookAnalytics::ProductionType_optional __swiftcall ProductionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8D70;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ProductionType.rawValue.getter()
{
  uint64_t v1 = 0x6375646F72506773;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F725047536E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_15B6DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2E8D4(*a1, *a2);
}

unint64_t sub_15B6EC()
{
  unint64_t result = qword_31F060;
  if (!qword_31F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F060);
  }
  return result;
}

Swift::Int sub_15B740()
{
  return sub_27E420();
}

uint64_t sub_15B7F8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_15B89C()
{
  return sub_27E420();
}

BookAnalytics::ProductionType_optional sub_15B950(Swift::String *a1)
{
  return ProductionType.init(rawValue:)(*a1);
}

void sub_15B95C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEC0000006E6F6974;
  uint64_t v5 = 0x6375646F72506773;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F725047536E6F6ELL;
    unint64_t v4 = 0xEF6E6F6974637564;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_15B9D0()
{
  return sub_27DED0();
}

uint64_t sub_15BA30()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ProductionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15BB4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductionType()
{
  return &type metadata for ProductionType;
}

unint64_t sub_15BB84()
{
  unint64_t result = qword_31F068;
  if (!qword_31F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F068);
  }
  return result;
}

uint64_t sub_15BBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_15C05C();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.tracker.getter()
{
  sub_15BC78();
  sub_27DB00();
  return v1;
}

unint64_t sub_15BC78()
{
  unint64_t result = qword_31F070;
  if (!qword_31F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F070);
  }
  return result;
}

uint64_t sub_15BCCC@<X0>(void *a1@<X8>)
{
  sub_15BC78();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_15BD1C(void **a1)
{
  uint64_t v1 = *a1;
  sub_15BC78();
  id v2 = v1;
  return sub_27DB10();
}

uint64_t EnvironmentValues.tracker.setter()
{
  return sub_27DB10();
}

void (*EnvironmentValues.tracker.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_15BC78();
  sub_27DB00();
  return sub_15BE14;
}

void sub_15BE14(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  *(void *)(a1 + 8) = *(void *)a1;
  if (a2)
  {
    id v4 = v2;
    sub_27DB10();
    uint64_t v5 = *(void **)a1;
  }
  else
  {
    sub_27DB10();
  }
}

uint64_t View.tracker(_:)(void *a1)
{
  swift_getKeyPath();
  id v2 = a1;
  sub_27DB60();

  return swift_release();
}

uint64_t sub_15BF2C@<X0>(void *a1@<X8>)
{
  sub_15BC78();
  uint64_t result = sub_27DB00();
  *a1 = v3;
  return result;
}

uint64_t sub_15BF80()
{
  return swift_getWitnessTable();
}

unint64_t sub_15BFF0()
{
  unint64_t result = qword_31F080;
  if (!qword_31F080)
  {
    sub_82930(&qword_31F078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F080);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackerKey()
{
  return &type metadata for TrackerKey;
}

unint64_t sub_15C05C()
{
  unint64_t result = qword_31F088;
  if (!qword_31F088)
  {
    sub_82930(&qword_31F090);
    sub_15C0D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F088);
  }
  return result;
}

unint64_t sub_15C0D0()
{
  unint64_t result = qword_31F098;
  if (!qword_31F098)
  {
    type metadata accessor for BATracker();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F098);
  }
  return result;
}

BookAnalytics::DoNotDisturbStatus_optional __swiftcall DoNotDisturbStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2F8DD8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_15C188()
{
  unint64_t result = qword_31F0A0;
  if (!qword_31F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F0A0);
  }
  return result;
}

BookAnalytics::DoNotDisturbStatus_optional sub_15C1DC(Swift::String *a1)
{
  return DoNotDisturbStatus.init(rawValue:)(*a1);
}

uint64_t sub_15C1E8()
{
  return sub_27DED0();
}

uint64_t sub_15C248()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DoNotDisturbStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15C364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoNotDisturbStatus()
{
  return &type metadata for DoNotDisturbStatus;
}

unint64_t sub_15C39C()
{
  unint64_t result = qword_31F0A8;
  if (!qword_31F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F0A8);
  }
  return result;
}

uint64_t sub_15C3F0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F0B0, &enum case for SessionGroup.default(_:));
}

uint64_t static ScrubEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315988, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F0B0, a1);
}

uint64_t sub_15C450(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F0C8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ScrubEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315990, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F0C8, a1);
}

uint64_t ScrubEvent.readingSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_319208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ScrubEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31F168);
}

uint64_t ScrubEvent.readingSettingsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_319208);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ScrubEvent.readingSettingsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ScrubEvent.scrubData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31F0E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ScrubEvent.scrubData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31F0E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ScrubEvent.scrubData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ScrubEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ScrubEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ScrubEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ScrubEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ScrubEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ScrubEvent.Model.readingSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 98);
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  *(_WORD *)a1 = *(_WORD *)(v1 + 96);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(v1 + 120);
  return swift_bridgeObjectRetain();
}

double ScrubEvent.Model.scrubData.getter@<D0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 136);
  double result = *(double *)(v1 + 128);
  *(double *)a1 = result;
  *(_DWORD *)(a1 + 8) = v2;
  return result;
}

uint64_t ScrubEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScrubEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ScrubEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31F208);
}

uint64_t ScrubEvent.Model.init(contentData:readingSettingsData:scrubData:eventData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  long long v8 = *(_OWORD *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  __int16 v11 = *(_WORD *)(a1 + 56);
  int v12 = *(_DWORD *)(a1 + 60);
  char v13 = *(unsigned char *)(a1 + 64);
  int v14 = *(_DWORD *)(a1 + 68);
  char v15 = *(unsigned char *)(a1 + 72);
  char v16 = *(unsigned char *)(a1 + 77);
  __int16 v17 = *a2;
  char v18 = *((unsigned char *)a2 + 2);
  uint64_t v19 = *((void *)a2 + 1);
  uint64_t v20 = *((void *)a2 + 2);
  int v21 = *((_DWORD *)a3 + 2);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v6;
  *(unsigned char *)(a5 + 16) = v7;
  *(_OWORD *)(a5 + 24) = v8;
  *(void *)(a5 + 40) = v9;
  *(void *)(a5 + 48) = v10;
  *(_WORD *)(a5 + 56) = v11;
  *(_DWORD *)(a5 + 60) = v12;
  *(unsigned char *)(a5 + 64) = v13;
  *(_DWORD *)(a5 + 68) = v14;
  *(unsigned char *)(a5 + 72) = v15;
  *(_DWORD *)(a5 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a5 + 77) = v16;
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_WORD *)(a5 + 96) = v17;
  *(unsigned char *)(a5 + 98) = v18;
  *(void *)(a5 + 104) = v19;
  *(void *)(a5 + 112) = v20;
  uint64_t v22 = *a3;
  *(void *)(a5 + 120) = *((void *)a2 + 3);
  *(void *)(a5 + 128) = v22;
  *(_DWORD *)(a5 + 136) = v21;
  uint64_t v23 = a5 + *(int *)(type metadata accessor for ScrubEvent.Model(0) + 28);
  uint64_t v24 = sub_27D7C0();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);

  return v25(v23, a4, v24);
}

uint64_t sub_15CBD4()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t v2 = 0x446275726373;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x44746E657665;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15CC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_15F190(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_15CC94(uint64_t a1)
{
  unint64_t v2 = sub_15CFC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15CCD0(uint64_t a1)
{
  unint64_t v2 = sub_15CFC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScrubEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31F0E8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_15CFC0();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v28 = *v4;
  uint64_t v29 = v10;
  LOBYTE(v30) = v11;
  long long v31 = v12;
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  __int16 v34 = v15;
  int v35 = v16;
  char v36 = v17;
  int v37 = v18;
  char v38 = v19;
  int v39 = *(_DWORD *)((char *)v4 + 73);
  char v40 = v20;
  long long v41 = *((_OWORD *)v4 + 5);
  char v27 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *((unsigned char *)v4 + 98);
    uint64_t v22 = v4[13];
    uint64_t v23 = v4[14];
    LOWORD(v28) = *((_WORD *)v4 + 48);
    BYTE2(v28) = v21;
    uint64_t v29 = v22;
    uint64_t v30 = v23;
    *(void *)&long long v31 = v4[15];
    char v27 = 1;
    sub_8E1CC();
    sub_27E330();
    int v24 = *((_DWORD *)v4 + 34);
    uint64_t v28 = v4[16];
    LODWORD(v29) = v24;
    char v27 = 2;
    sub_15D014();
    sub_27E330();
    type metadata accessor for ScrubEvent.Model(0);
    LOBYTE(v28) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_15CFC0()
{
  unint64_t result = qword_31F0F0;
  if (!qword_31F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F0F0);
  }
  return result;
}

unint64_t sub_15D014()
{
  unint64_t result = qword_31F0F8;
  if (!qword_31F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F0F8);
  }
  return result;
}

uint64_t ScrubEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v33 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_4E04(&qword_31F100);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v6 = type metadata accessor for ScrubEvent.Model(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  int v35 = a1;
  sub_5900(a1, v9);
  sub_15CFC0();
  uint64_t v10 = v36;
  sub_27E430();
  if (v10) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v11 = (uint64_t)v8;
  long long v12 = v5;
  uint64_t v14 = v32;
  uint64_t v13 = v33;
  char v51 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v15 = v38;
  char v16 = v39;
  long long v17 = v40;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  __int16 v20 = v43;
  int v21 = v44;
  char v22 = v45;
  int v23 = v46;
  char v24 = v47;
  char v25 = v49;
  *(void *)uint64_t v11 = v37;
  *(void *)(v11 + 8) = v15;
  *(unsigned char *)(v11 + 16) = v16;
  *(_OWORD *)(v11 + 24) = v17;
  *(void *)(v11 + 40) = v18;
  *(void *)(v11 + 48) = v19;
  *(_WORD *)(v11 + 56) = v20;
  *(_DWORD *)(v11 + 60) = v21;
  *(unsigned char *)(v11 + 64) = v22;
  *(_DWORD *)(v11 + 68) = v23;
  *(unsigned char *)(v11 + 72) = v24;
  *(_DWORD *)(v11 + 73) = v48;
  *(unsigned char *)(v11 + 77) = v25;
  *(_OWORD *)(v11 + 80) = v50;
  char v51 = 1;
  sub_8EC24();
  sub_27E260();
  char v26 = BYTE2(v37);
  uint64_t v27 = v38;
  uint64_t v28 = v39;
  *(_WORD *)(v11 + 96) = v37;
  *(unsigned char *)(v11 + 98) = v26;
  *(void *)(v11 + 104) = v27;
  *(void *)(v11 + 112) = v28;
  *(void *)(v11 + 120) = v40;
  char v51 = 2;
  sub_15D4D4();
  sub_27E260();
  int v29 = v38;
  *(void *)(v11 + 128) = v37;
  *(_DWORD *)(v11 + 136) = v29;
  LOBYTE(v37) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(void, uint64_t))(v14 + 8))(0, v34);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v11 + *(int *)(v6 + 28), v12, v3);
  sub_15D528(v11, v31);
  sub_5E94((uint64_t)v35);
  return sub_15D58C(v11);
}

unint64_t sub_15D4D4()
{
  unint64_t result = qword_31F108;
  if (!qword_31F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F108);
  }
  return result;
}

uint64_t sub_15D528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15D58C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrubEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15D5E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScrubEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_15D600(void *a1)
{
  return ScrubEvent.Model.encode(to:)(a1);
}

uint64_t sub_15D618@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315988, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F0B0, a1);
}

uint64_t sub_15D650@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315990, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F0C8, a1);
}

uint64_t sub_15D688@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ScrubEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_319208);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31F0E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ScrubEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ScrubEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ScrubEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ScrubEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ScrubEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_319208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31F0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15E068);
}

uint64_t sub_15E068(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_319208);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_31F0E0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ScrubEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15E224);
}

uint64_t sub_15E224(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_319208);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_31F0E0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_15E3D8()
{
  sub_15E5C0(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_15E5C0(319, &qword_3192E8, (void (*)(void))sub_8EC24, (void (*)(void))sub_8E1CC);
    if (v1 <= 0x3F)
    {
      sub_15E5C0(319, (unint64_t *)&unk_31F178, (void (*)(void))sub_15D4D4, (void (*)(void))sub_15D014);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_15E5C0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ScrubEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    *(unsigned char *)(a1 + 98) = *((unsigned char *)a2 + 98);
    uint64_t v10 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v10;
    *(void *)(a1 + 120) = a2[15];
    *(_DWORD *)(a1 + 136) = *((_DWORD *)a2 + 34);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v17 = (uint64_t)a2 + v11;
    uint64_t v12 = a1 + v11;
    *(void *)(a1 + 128) = a2[16];
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v17, v13);
  }
  return v3;
}

uint64_t destroy for ScrubEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v15 = a2 + v10;
  uint64_t v11 = a1 + v10;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v15, v12);
  return a1;
}

uint64_t assignWithCopy for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 128) = v8;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15ED6C);
}

uint64_t sub_15ED6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ScrubEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15EE30);
}

uint64_t sub_15EE30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_15EED8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScrubEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15F050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubEvent.Model.CodingKeys()
{
  return &type metadata for ScrubEvent.Model.CodingKeys;
}

unint64_t sub_15F08C()
{
  unint64_t result = qword_31F248;
  if (!qword_31F248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F248);
  }
  return result;
}

unint64_t sub_15F0E4()
{
  unint64_t result = qword_31F250;
  if (!qword_31F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F250);
  }
  return result;
}

unint64_t sub_15F13C()
{
  unint64_t result = qword_31F258;
  if (!qword_31F258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F258);
  }
  return result;
}

uint64_t sub_15F190(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE970 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446275726373 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_15F374(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F260, &enum case for SessionGroup.default(_:));
}

uint64_t static AllInSeriesViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315998, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F260, a1);
}

uint64_t sub_15F3D4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F278, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AllInSeriesViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159A0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F278, a1);
}

uint64_t AllInSeriesViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AllInSeriesViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AllInSeriesViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31F300);
}

uint64_t AllInSeriesViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AllInSeriesViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AllInSeriesViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AllInSeriesViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AllInSeriesViewEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

uint64_t AllInSeriesViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AllInSeriesViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AllInSeriesViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31F390);
}

uint64_t AllInSeriesViewEvent.Model.init(singleCollectionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = *(_DWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_DWORD *)(a3 + 16) = v5;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for AllInSeriesViewEvent.Model(0) + 20);
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_15F78C(uint64_t a1)
{
  unint64_t v2 = sub_15F9C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15F7C8(uint64_t a1)
{
  unint64_t v2 = sub_15F9C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AllInSeriesViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31F290);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_15F9C8();
  sub_27E440();
  int v9 = *((_DWORD *)v3 + 4);
  long long v12 = *v3;
  int v13 = v9;
  v11[15] = 0;
  sub_18340();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for AllInSeriesViewEvent.Model(0);
    LOBYTE(v12) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_15F9C8()
{
  unint64_t result = qword_31F298;
  if (!qword_31F298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F298);
  }
  return result;
}

uint64_t AllInSeriesViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_31F2A0);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AllInSeriesViewEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_15F9C8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v25 = 0;
  sub_182E8();
  uint64_t v14 = v22;
  sub_27E1F0();
  int v15 = v24;
  *(_OWORD *)uint64_t v11 = v23;
  *(_DWORD *)(v11 + 16) = v15;
  LOBYTE(v23) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v11 + *(int *)(v17 + 20), v5, v12);
  sub_15FD30(v11, v19);
  sub_5E94((uint64_t)a1);
  return sub_15FD94(v11);
}

uint64_t sub_15FD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AllInSeriesViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15FD94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AllInSeriesViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15FDF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AllInSeriesViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_15FE08(void *a1)
{
  return AllInSeriesViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_15FE20@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315998, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F260, a1);
}

uint64_t sub_15FE58@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159A0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F278, a1);
}

uint64_t sub_15FE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3194A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t getEnumTagSinglePayload for AllInSeriesViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15FF7C);
}

uint64_t sub_15FF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3194A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AllInSeriesViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_160090);
}

uint64_t sub_160090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3194A0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for AllInSeriesViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1601B0);
}

uint64_t sub_1601B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AllInSeriesViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_160280);
}

uint64_t sub_160280(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_160328()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AllInSeriesViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16048CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllInSeriesViewEvent.Model.CodingKeys()
{
  return &type metadata for AllInSeriesViewEvent.Model.CodingKeys;
}

unint64_t sub_1604C8()
{
  unint64_t result = qword_31F3C8;
  if (!qword_31F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F3C8);
  }
  return result;
}

unint64_t sub_160520()
{
  unint64_t result = qword_31F3D0;
  if (!qword_31F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F3D0);
  }
  return result;
}

unint64_t sub_160578()
{
  unint64_t result = qword_31F3D8;
  if (!qword_31F3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F3D8);
  }
  return result;
}

BookAnalytics::DealsData __swiftcall DealsData.init(dealType:originalPricePoint:)(BookAnalytics::DealType_optional dealType, Swift::String_optional originalPricePoint)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)dealType.value;
  *(Swift::String_optional *)(v2 + 8) = originalPricePoint;
  result.originalPricePoint = originalPricePoint;
  result.dealType = dealType;
  return result;
}

uint64_t sub_1605E0()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x657079546C616564;
  }
}

uint64_t sub_160620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_161064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_160648(uint64_t a1)
{
  unint64_t v2 = sub_160BD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_160684(uint64_t a1)
{
  unint64_t v2 = sub_160BD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DealsData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31F3E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  v11[0] = *((void *)v1 + 2);
  v11[1] = v9;
  sub_5900(a1, a1[3]);
  sub_160BD0();
  sub_27E440();
  char v14 = v8;
  char v13 = 0;
  sub_160C24();
  sub_27E2C0();
  if (!v2)
  {
    char v12 = 1;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DealsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31F3F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_160BD0();
  sub_27E430();
  if (!v2)
  {
    char v16 = 0;
    sub_160C78();
    sub_27E1F0();
    char v9 = v17;
    char v15 = 1;
    uint64_t v11 = sub_27E1C0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_160A28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DealsData.init(from:)(a1, a2);
}

uint64_t sub_160A40(void *a1)
{
  return DealsData.encode(to:)(a1);
}

BOOL _s13BookAnalytics9DealsDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  int v5 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v6 = *((void *)a2 + 2);
  if (v2 == 3)
  {
    if (v5 != 3) {
      return 0;
    }
  }
  else
  {
    if (v5 == 3) {
      return 0;
    }
    unint64_t v8 = 0xE400000000000000;
    uint64_t v9 = 1701147238;
    if (v2 != 1)
    {
      uint64_t v9 = 0x6E776F6E6B6E75;
      unint64_t v8 = 0xE700000000000000;
    }
    if (*a1) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0x6F72446563697270;
    }
    if (v2) {
      unint64_t v11 = v8;
    }
    else {
      unint64_t v11 = 0xE900000000000070;
    }
    unint64_t v12 = 0xE400000000000000;
    uint64_t v13 = 1701147238;
    if (v5 != 1)
    {
      uint64_t v13 = 0x6E776F6E6B6E75;
      unint64_t v12 = 0xE700000000000000;
    }
    if (*a2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0x6F72446563697270;
    }
    if (*a2) {
      unint64_t v15 = v12;
    }
    else {
      unint64_t v15 = 0xE900000000000070;
    }
    if (v10 == v14 && v11 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v16 & 1) == 0) {
        return result;
      }
    }
  }
  if (v4) {
    return v6 && (v3 == v7 && v4 == v6 || (sub_27E370() & 1) != 0);
  }
  return !v6;
}

unint64_t sub_160BD0()
{
  unint64_t result = qword_31F3E8;
  if (!qword_31F3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F3E8);
  }
  return result;
}

unint64_t sub_160C24()
{
  unint64_t result = qword_31F3F0;
  if (!qword_31F3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F3F0);
  }
  return result;
}

unint64_t sub_160C78()
{
  unint64_t result = qword_31F400;
  if (!qword_31F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F400);
  }
  return result;
}

uint64_t sub_160CD8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DealsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DealsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DealsData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DealsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DealsData()
{
  return &type metadata for DealsData;
}

unsigned char *storeEnumTagSinglePayload for DealsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x160F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DealsData.CodingKeys()
{
  return &type metadata for DealsData.CodingKeys;
}

unint64_t sub_160F60()
{
  unint64_t result = qword_31F408;
  if (!qword_31F408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F408);
  }
  return result;
}

unint64_t sub_160FB8()
{
  unint64_t result = qword_31F410;
  if (!qword_31F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F410);
  }
  return result;
}

unint64_t sub_161010()
{
  unint64_t result = qword_31F418;
  if (!qword_31F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F418);
  }
  return result;
}

uint64_t sub_161064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079546C616564 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B09B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_161158()
{
  if (*v0) {
    return 0x7574617453646E65;
  }
  else {
    return 0x6174537472617473;
  }
}

uint64_t sub_1611A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_161C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1611C8(uint64_t a1)
{
  unint64_t v2 = sub_16177C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_161204(uint64_t a1)
{
  unint64_t v2 = sub_16177C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DoNotDisturbData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_31F420);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_16177C();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_1617D0();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DoNotDisturbData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31F438);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_16177C();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_161824();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1615A8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DoNotDisturbData.init(from:)(a1, a2);
}

uint64_t sub_1615C0(void *a1)
{
  return DoNotDisturbData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics16DoNotDisturbDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  int v3 = a1[1];
  int v4 = a2[1];
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 28271;
  if (v2 != 1)
  {
    uint64_t v6 = 6710895;
    unint64_t v5 = 0xE300000000000000;
  }
  if (*a1) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = 0xE700000000000000;
  }
  unint64_t v9 = 0xE200000000000000;
  uint64_t v10 = 28271;
  if (*a2 != 1)
  {
    uint64_t v10 = 6710895;
    unint64_t v9 = 0xE300000000000000;
  }
  if (*a2) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v7 == v11 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v13 = sub_27E370();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v14 = 0;
  if (v13)
  {
LABEL_21:
    unint64_t v15 = 0xE200000000000000;
    uint64_t v16 = 28271;
    if (v3 != 1)
    {
      uint64_t v16 = 6710895;
      unint64_t v15 = 0xE300000000000000;
    }
    if (v3) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0x6E776F6E6B6E75;
    }
    if (v3) {
      unint64_t v18 = v15;
    }
    else {
      unint64_t v18 = 0xE700000000000000;
    }
    if (v4)
    {
      if (v4 == 1)
      {
        unint64_t v19 = 0xE200000000000000;
        if (v17 != 28271) {
          goto LABEL_38;
        }
      }
      else
      {
        unint64_t v19 = 0xE300000000000000;
        if (v17 != 6710895) {
          goto LABEL_38;
        }
      }
    }
    else
    {
      unint64_t v19 = 0xE700000000000000;
      if (v17 != 0x6E776F6E6B6E75) {
        goto LABEL_38;
      }
    }
    if (v18 == v19)
    {
      char v14 = 1;
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
LABEL_38:
    char v14 = sub_27E370();
    goto LABEL_39;
  }
  return v14 & 1;
}

unint64_t sub_16177C()
{
  unint64_t result = qword_31F428;
  if (!qword_31F428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F428);
  }
  return result;
}

unint64_t sub_1617D0()
{
  unint64_t result = qword_31F430;
  if (!qword_31F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F430);
  }
  return result;
}

unint64_t sub_161824()
{
  unint64_t result = qword_31F440;
  if (!qword_31F440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F440);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AccountData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DoNotDisturbData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1619E0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoNotDisturbData()
{
  return &type metadata for DoNotDisturbData;
}

unsigned char *storeEnumTagSinglePayload for DoNotDisturbData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x161AE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoNotDisturbData.CodingKeys()
{
  return &type metadata for DoNotDisturbData.CodingKeys;
}

unint64_t sub_161B20()
{
  unint64_t result = qword_31F448;
  if (!qword_31F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F448);
  }
  return result;
}

unint64_t sub_161B78()
{
  unint64_t result = qword_31F450;
  if (!qword_31F450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F450);
  }
  return result;
}

unint64_t sub_161BD0()
{
  unint64_t result = qword_31F458;
  if (!qword_31F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F458);
  }
  return result;
}

uint64_t sub_161C24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174537472617473 && a2 == 0xEB00000000737574;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7574617453646E65 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static AutoNightThemeSettingData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_2F00C(*a1, *a2);
}

unint64_t sub_161D48()
{
  return 0xD000000000000014;
}

uint64_t sub_161D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_162574(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_161D90(uint64_t a1)
{
  unint64_t v2 = sub_161F50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_161DCC(uint64_t a1)
{
  unint64_t v2 = sub_161F50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AutoNightThemeSettingData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31F460);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_161F50();
  sub_27E440();
  char v10 = v7;
  sub_161FA4();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_161F50()
{
  unint64_t result = qword_31F468;
  if (!qword_31F468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F468);
  }
  return result;
}

unint64_t sub_161FA4()
{
  unint64_t result = qword_31F470;
  if (!qword_31F470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F470);
  }
  return result;
}

uint64_t AutoNightThemeSettingData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31F478);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_161F50();
  sub_27E430();
  if (!v2)
  {
    sub_162160();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_162160()
{
  unint64_t result = qword_31F480;
  if (!qword_31F480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F480);
  }
  return result;
}

unint64_t sub_1621B8()
{
  unint64_t result = qword_31F488;
  if (!qword_31F488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F488);
  }
  return result;
}

unint64_t sub_162210()
{
  unint64_t result = qword_31F490;
  if (!qword_31F490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F490);
  }
  return result;
}

uint64_t sub_162264@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AutoNightThemeSettingData.init(from:)(a1, a2);
}

uint64_t sub_16227C(void *a1)
{
  return AutoNightThemeSettingData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AutoNightThemeSettingData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x162360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoNightThemeSettingData()
{
  return &type metadata for AutoNightThemeSettingData;
}

unsigned char *storeEnumTagSinglePayload for AutoNightThemeSettingData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x162434);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoNightThemeSettingData.CodingKeys()
{
  return &type metadata for AutoNightThemeSettingData.CodingKeys;
}

unint64_t sub_162470()
{
  unint64_t result = qword_31F498;
  if (!qword_31F498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F498);
  }
  return result;
}

unint64_t sub_1624C8()
{
  unint64_t result = qword_31F4A0;
  if (!qword_31F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F4A0);
  }
  return result;
}

unint64_t sub_162520()
{
  unint64_t result = qword_31F4A8;
  if (!qword_31F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F4A8);
  }
  return result;
}

uint64_t sub_162574(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002AFC30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1625FC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F4B0, &enum case for SessionGroup.default(_:));
}

uint64_t static BrowseStoreViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159A8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F4B0, a1);
}

uint64_t sub_16265C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F4C8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static BrowseStoreViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159B0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F4C8, a1);
}

uint64_t BrowseStoreViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseStoreViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrowseStoreViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31F550);
}

uint64_t BrowseStoreViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseStoreViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrowseStoreViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrowseStoreViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for BrowseStoreViewEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE8);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t BrowseStoreViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseStoreViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrowseStoreViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31F5E0);
}

uint64_t BrowseStoreViewEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for BrowseStoreViewEvent.Model(0) + 20);
  uint64_t v8 = sub_27D7F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_162A40(uint64_t a1)
{
  unint64_t v2 = sub_162CB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_162A7C(uint64_t a1)
{
  unint64_t v2 = sub_162CB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BrowseStoreViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31F4E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_162CB8();
  sub_27E440();
  v8[15] = 0;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E330();
  if (!v1)
  {
    type metadata accessor for BrowseStoreViewEvent.Model(0);
    v8[14] = 1;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_162CB8()
{
  unint64_t result = qword_31F4E8;
  if (!qword_31F4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F4E8);
  }
  return result;
}

uint64_t BrowseStoreViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_27D7F0();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_27D7C0();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  char v25 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_31F4F0);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseStoreViewEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_162CB8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v20 = v9;
  unint64_t v12 = v11;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  unint64_t v15 = v25;
  sub_27E260();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v19 = (uint64_t)v12;
  v16(v12, v15, v27);
  char v29 = 1;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v17 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19 + *(int *)(v20 + 20), v5, v13);
  sub_163128(v17, v22);
  sub_5E94((uint64_t)a1);
  return sub_16318C(v17);
}

uint64_t sub_163128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseStoreViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_16318C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseStoreViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1631E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseStoreViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_163200(void *a1)
{
  return BrowseStoreViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_163218@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159A8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F4B0, a1);
}

uint64_t sub_163250@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159B0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F4C8, a1);
}

uint64_t getEnumTagSinglePayload for BrowseStoreViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16329C);
}

uint64_t sub_16329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE8);
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseStoreViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1633B0);
}

uint64_t sub_1633B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for BrowseStoreViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1634D0);
}

uint64_t sub_1634D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_27D7F0();
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseStoreViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1635DC);
}

uint64_t sub_1635DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_27D7F0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for BrowseStoreViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1637ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseStoreViewEvent.Model.CodingKeys()
{
  return &type metadata for BrowseStoreViewEvent.Model.CodingKeys;
}

unint64_t sub_1637E8()
{
  unint64_t result = qword_31F618;
  if (!qword_31F618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F618);
  }
  return result;
}

unint64_t sub_163840()
{
  unint64_t result = qword_31F620;
  if (!qword_31F620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F620);
  }
  return result;
}

unint64_t sub_163898()
{
  unint64_t result = qword_31F628;
  if (!qword_31F628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F628);
  }
  return result;
}

uint64_t sub_1638EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F630, &enum case for SessionGroup.default(_:));
}

uint64_t static YearInReviewViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159B8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F630, a1);
}

uint64_t sub_16394C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F648, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static YearInReviewViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159C0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F648, a1);
}

uint64_t YearInReviewViewEvent.yIRDetailedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31F660);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t YearInReviewViewEvent.yIRDetailedData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31F660);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t YearInReviewViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for YearInReviewViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31F6D8);
}

uint64_t YearInReviewViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*YearInReviewViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YearInReviewViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t YearInReviewViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*YearInReviewViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YearInReviewViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for YearInReviewViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

void YearInReviewViewEvent.Model.yIRDetailedData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
}

uint64_t YearInReviewViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for YearInReviewViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31F778);
}

uint64_t YearInReviewViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t YearInReviewViewEvent.Model.init(yIRDetailedData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v8;
  *(unsigned char *)(a4 + 24) = v9;
  uint64_t v10 = type metadata accessor for YearInReviewViewEvent.Model(0);
  uint64_t v11 = a4 + *(int *)(v10 + 20);
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  uint64_t v13 = a4 + *(int *)(v10 + 24);
  uint64_t v14 = sub_27D7F0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);

  return v15(v13, a3, v14);
}

uint64_t sub_16406C()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6961746544524979;
  }
}

uint64_t sub_1640DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_166094(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_164104(uint64_t a1)
{
  unint64_t v2 = sub_1643E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_164140(uint64_t a1)
{
  unint64_t v2 = sub_1643E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t YearInReviewViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31F668);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1643E0();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v10 = v3[2];
  char v11 = *((unsigned char *)v3 + 24);
  uint64_t v14 = *v3;
  char v15 = v9;
  uint64_t v16 = v10;
  char v17 = v11;
  v13[15] = 0;
  sub_98D64();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for YearInReviewViewEvent.Model(0);
    LOBYTE(v14) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v14) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1643E0()
{
  unint64_t result = qword_31F670;
  if (!qword_31F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F670);
  }
  return result;
}

uint64_t YearInReviewViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = sub_27D7F0();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_31F678);
  uint64_t v25 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for YearInReviewViewEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1643E0();
  uint64_t v27 = v8;
  uint64_t v12 = (uint64_t)v29;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  char v29 = a1;
  uint64_t v13 = v25;
  char v34 = 0;
  sub_98D0C();
  sub_27E260();
  char v14 = v31;
  uint64_t v15 = v32;
  char v16 = v33;
  uint64_t v17 = (uint64_t)v11;
  *(void *)char v11 = v30;
  v11[8] = v14;
  *((void *)v11 + 2) = v15;
  v11[24] = v16;
  LOBYTE(v30) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[*(int *)(v9 + 20)], v6, v4);
  LOBYTE(v30) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v18 = v23;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v17 + *(int *)(v9 + 24), v26, v18);
  sub_1648A0(v17, v22);
  sub_5E94((uint64_t)v29);
  return sub_164904(v17);
}

uint64_t sub_1648A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YearInReviewViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_164904(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YearInReviewViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_164960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YearInReviewViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_164978(void *a1)
{
  return YearInReviewViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_164990@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159B8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F630, a1);
}

uint64_t sub_1649C8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159C0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F648, a1);
}

uint64_t sub_164A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for YearInReviewViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31F660);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for YearInReviewViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1651D8);
}

uint64_t sub_1651D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31F660);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for YearInReviewViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_165344);
}

uint64_t sub_165344(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31F660);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1654A8()
{
  sub_1655AC();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1655AC()
{
  if (!qword_31F6E8)
  {
    sub_98D0C();
    sub_98D64();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31F6E8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for YearInReviewViewEvent.Model(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_27D7C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

uint64_t destroy for YearInReviewViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

_OWORD *initializeWithCopy for YearInReviewViewEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for YearInReviewViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t)a2 + v12;
  uint64_t v15 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *initializeWithTake for YearInReviewViewEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for YearInReviewViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_165B9C);
}

uint64_t sub_165B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_27D7F0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for YearInReviewViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_165CAC);
}

uint64_t sub_165CAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_27D7F0();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t sub_165DB4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YearInReviewViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x165F54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewViewEvent.Model.CodingKeys()
{
  return &type metadata for YearInReviewViewEvent.Model.CodingKeys;
}

unint64_t sub_165F90()
{
  unint64_t result = qword_31F7B8;
  if (!qword_31F7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F7B8);
  }
  return result;
}

unint64_t sub_165FE8()
{
  unint64_t result = qword_31F7C0;
  if (!qword_31F7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F7C0);
  }
  return result;
}

unint64_t sub_166040()
{
  unint64_t result = qword_31F7C8;
  if (!qword_31F7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F7C8);
  }
  return result;
}

uint64_t sub_166094(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6961746544524979 && a2 == 0xEF6174614464656CLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_166228(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F7D0, &enum case for SessionGroup.default(_:));
}

uint64_t static ShareSeriesEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159C8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F7D0, a1);
}

uint64_t sub_166288(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F7E8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ShareSeriesEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159D0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F7E8, a1);
}

uint64_t ShareSeriesEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSeriesEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31F870);
}

uint64_t ShareSeriesEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSeriesEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareSeriesEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareSeriesEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSeriesEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareSeriesEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ShareSeriesEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t ShareSeriesEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSeriesEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31F908);
}

uint64_t ShareSeriesEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSeriesEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareSeriesEvent.Model.init(seriesData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  __int16 v9 = *(_WORD *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 26);
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v8;
  *(_WORD *)(a4 + 24) = v9;
  *(unsigned char *)(a4 + 26) = v10;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  uint64_t v11 = type metadata accessor for ShareSeriesEvent.Model(0);
  uint64_t v12 = a4 + *(int *)(v11 + 20);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  uint64_t v14 = a4 + *(int *)(v11 + 24);
  uint64_t v15 = sub_27D7F0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);

  return v16(v14, a3, v15);
}

uint64_t sub_1668BC(uint64_t a1)
{
  unint64_t v2 = sub_166BA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1668F8(uint64_t a1)
{
  unint64_t v2 = sub_166BA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShareSeriesEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31F800);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_166BA8();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v10 = v3[2];
  __int16 v11 = *((_WORD *)v3 + 12);
  char v12 = *((unsigned char *)v3 + 26);
  uint64_t v15 = *v3;
  char v16 = v9;
  uint64_t v17 = v10;
  __int16 v18 = v11;
  char v19 = v12;
  long long v20 = *((_OWORD *)v3 + 2);
  v14[15] = 0;
  sub_11514();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for ShareSeriesEvent.Model(0);
    LOBYTE(v15) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v15) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_166BA8()
{
  unint64_t result = qword_31F808;
  if (!qword_31F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F808);
  }
  return result;
}

uint64_t ShareSeriesEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_27D7F0();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4E04(&qword_31F810);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ShareSeriesEvent.Model(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  int v35 = a1;
  sub_5900(a1, v14);
  sub_166BA8();
  char v34 = v10;
  uint64_t v15 = v36;
  sub_27E430();
  if (v15) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v36 = v11;
  uint64_t v16 = v32;
  uint64_t v17 = (uint64_t)v13;
  uint64_t v27 = v4;
  char v43 = 0;
  sub_11A3C();
  uint64_t v18 = v33;
  sub_27E260();
  char v19 = v38;
  uint64_t v20 = v39;
  __int16 v21 = v40;
  char v22 = v41;
  *(void *)uint64_t v17 = v37;
  *(unsigned char *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v20;
  *(_WORD *)(v17 + 24) = v21;
  *(unsigned char *)(v17 + 26) = v22;
  *(_OWORD *)(v17 + 32) = v42;
  LOBYTE(v37) = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v17 + *(int *)(v36 + 20), v7, v5);
  LOBYTE(v37) = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v23 = v27;
  uint64_t v24 = v30;
  uint64_t v25 = v34;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v17 + *(int *)(v36 + 24), v23, v24);
  sub_1670D0(v17, v29);
  sub_5E94((uint64_t)v35);
  return sub_167134(v17);
}

uint64_t sub_1670D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareSeriesEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_167134(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareSeriesEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_167190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareSeriesEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1671A8(void *a1)
{
  return ShareSeriesEvent.Model.encode(to:)(a1);
}

uint64_t sub_1671C0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159C8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F7D0, a1);
}

uint64_t sub_1671F8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159D0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F7E8, a1);
}

uint64_t getEnumTagSinglePayload for ShareSeriesEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_167244);
}

uint64_t sub_167244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ShareSeriesEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1673B0);
}

uint64_t sub_1673B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316320);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t getEnumTagSinglePayload for ShareSeriesEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_167528);
}

uint64_t sub_167528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShareSeriesEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_167674);
}

uint64_t sub_167674(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 40) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1677A0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareSeriesEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x167940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSeriesEvent.Model.CodingKeys()
{
  return &type metadata for ShareSeriesEvent.Model.CodingKeys;
}

unint64_t sub_16797C()
{
  unint64_t result = qword_31F948;
  if (!qword_31F948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F948);
  }
  return result;
}

unint64_t sub_1679D4()
{
  unint64_t result = qword_31F950;
  if (!qword_31F950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F950);
  }
  return result;
}

unint64_t sub_167A2C()
{
  unint64_t result = qword_31F958;
  if (!qword_31F958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F958);
  }
  return result;
}

uint64_t sub_167A80(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31F960, &enum case for SessionGroup.default(_:));
}

uint64_t static GiftEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159D8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F960, a1);
}

uint64_t sub_167AE0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31F978, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GiftEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159E0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F978, a1);
}

uint64_t GiftEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GiftEvent(uint64_t a1)
{
  return sub_5338(a1, qword_31FA00);
}

uint64_t GiftEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GiftEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GiftEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GiftEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for GiftEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t GiftEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GiftEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GiftEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31FAA0);
}

uint64_t GiftEvent.Model.init(contentData:contentStoreData:contentExposureData:suggestionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  long long v10 = *(_OWORD *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  __int16 v13 = *(_WORD *)(a1 + 56);
  int v14 = *(_DWORD *)(a1 + 60);
  char v15 = *(unsigned char *)(a1 + 64);
  int v16 = *(_DWORD *)(a1 + 68);
  char v17 = *(unsigned char *)(a1 + 72);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v8;
  *(unsigned char *)(a6 + 16) = v9;
  *(_OWORD *)(a6 + 24) = v10;
  *(void *)(a6 + 40) = v11;
  *(void *)(a6 + 48) = v12;
  *(_WORD *)(a6 + 56) = v13;
  *(_DWORD *)(a6 + 60) = v14;
  *(unsigned char *)(a6 + 64) = v15;
  *(_DWORD *)(a6 + 68) = v16;
  *(unsigned char *)(a6 + 72) = v17;
  int v18 = *(_DWORD *)(a1 + 73);
  long long v19 = *a2;
  long long v20 = a2[1];
  *(_OWORD *)(a6 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a6 + 96) = v19;
  long long v21 = a2[2];
  long long v22 = a2[3];
  *(_OWORD *)(a6 + 112) = v20;
  *(_OWORD *)(a6 + 128) = v21;
  *(_OWORD *)(a6 + 144) = v22;
  long long v23 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a6 + 168) = *(_OWORD *)a3;
  *(_OWORD *)(a6 + 184) = v23;
  long long v24 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a6 + 200) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a6 + 216) = v24;
  long long v25 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a6 + 232) = *(_OWORD *)(a3 + 64);
  char v26 = *(unsigned char *)(a1 + 77);
  LODWORD(v11) = *((_DWORD *)a2 + 16);
  LOBYTE(v12) = *((unsigned char *)a2 + 68);
  int v27 = *(_DWORD *)(a3 + 112);
  LOWORD(v14) = *(_WORD *)(a3 + 116);
  char v28 = *a4;
  *(_DWORD *)(a6 + 73) = v18;
  *(unsigned char *)(a6 + 77) = v26;
  *(unsigned char *)(a6 + 164) = v12;
  *(_DWORD *)(a6 + 160) = v11;
  *(_OWORD *)(a6 + 248) = v25;
  *(_OWORD *)(a6 + 264) = *(_OWORD *)(a3 + 96);
  *(_WORD *)(a6 + 284) = v14;
  *(_DWORD *)(a6 + 280) = v27;
  *(unsigned char *)(a6 + 286) = v28;
  uint64_t v29 = a6 + *(int *)(type metadata accessor for GiftEvent.Model(0) + 32);
  uint64_t v30 = sub_27D7C0();
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32);

  return v31(v29, a5, v30);
}

unint64_t sub_1683FC(char a1)
{
  unint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6974736567677573;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1684D0()
{
  return sub_1683FC(*v0);
}

uint64_t sub_1684D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16A730(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_168500(uint64_t a1)
{
  unint64_t v2 = sub_16889C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_16853C(uint64_t a1)
{
  unint64_t v2 = sub_16889C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GiftEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_31F990);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_16889C();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v31 = *(void *)v4;
  *((void *)&v31 + 1) = v10;
  v32[0] = v11;
  *(_OWORD *)&v32[8] = v12;
  *(void *)&v32[24] = v13;
  *(void *)&long long v33 = v14;
  WORD4(v33) = v15;
  HIDWORD(v33) = v16;
  LOBYTE(v34) = v17;
  DWORD1(v34) = v18;
  BYTE8(v34) = v19;
  *(_DWORD *)((char *)&v34 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v34) = v20;
  long long v35 = *(_OWORD *)(v4 + 80);
  char v39 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v31 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v32 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v32[16] = *(_OWORD *)(v4 + 128);
    long long v33 = v24;
    BYTE4(v34) = v22;
    LODWORD(v34) = v21;
    char v39 = 1;
    sub_6C400();
    sub_27E2C0();
    int v25 = *(_DWORD *)(v4 + 280);
    __int16 v26 = *(_WORD *)(v4 + 284);
    long long v27 = *(_OWORD *)(v4 + 184);
    long long v31 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)uint64_t v32 = v27;
    long long v28 = *(_OWORD *)(v4 + 216);
    *(_OWORD *)&v32[16] = *(_OWORD *)(v4 + 200);
    long long v33 = v28;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v34 = *(_OWORD *)(v4 + 232);
    long long v35 = v29;
    long long v36 = *(_OWORD *)(v4 + 264);
    __int16 v38 = v26;
    int v37 = v25;
    char v39 = 2;
    sub_6C454();
    sub_27E2C0();
    LOBYTE(v31) = *(unsigned char *)(v4 + 286);
    char v39 = 3;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for GiftEvent.Model(0);
    LOBYTE(v31) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_16889C()
{
  unint64_t result = qword_31F998;
  if (!qword_31F998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31F998);
  }
  return result;
}

uint64_t GiftEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v41 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_31F9A0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GiftEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v46 = a1;
  sub_5900(a1, v13);
  sub_16889C();
  char v45 = v9;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v46);
  }
  uint64_t v14 = (uint64_t)v12;
  uint64_t v15 = v43;
  char v55 = 0;
  sub_1A98C();
  uint64_t v16 = v44;
  sub_27E260();
  __int16 v40 = (_OWORD *)(v14 + 264);
  uint64_t v17 = *((void *)&v47 + 1);
  char v18 = v48[0];
  long long v19 = *(_OWORD *)&v48[8];
  uint64_t v20 = *(void *)&v48[24];
  uint64_t v21 = v49;
  __int16 v22 = WORD4(v49);
  int v23 = HIDWORD(v49);
  char v24 = v50;
  int v25 = DWORD1(v50);
  char v26 = BYTE8(v50);
  char v27 = BYTE13(v50);
  *(void *)uint64_t v14 = v47;
  *(void *)(v14 + 8) = v17;
  *(unsigned char *)(v14 + 16) = v18;
  *(_OWORD *)(v14 + 24) = v19;
  *(void *)(v14 + 40) = v20;
  *(void *)(v14 + 48) = v21;
  *(_WORD *)(v14 + 56) = v22;
  *(_DWORD *)(v14 + 60) = v23;
  *(unsigned char *)(v14 + 64) = v24;
  *(_DWORD *)(v14 + 68) = v25;
  *(unsigned char *)(v14 + 72) = v26;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v50 + 9);
  *(unsigned char *)(v14 + 77) = v27;
  *(_OWORD *)(v14 + 80) = v51;
  char v55 = 1;
  sub_6D068();
  sub_27E1F0();
  int v28 = v50;
  char v29 = BYTE4(v50);
  long long v30 = *(_OWORD *)v48;
  *(_OWORD *)(v14 + 96) = v47;
  *(_OWORD *)(v14 + 112) = v30;
  long long v31 = v49;
  *(_OWORD *)(v14 + 128) = *(_OWORD *)&v48[16];
  *(_OWORD *)(v14 + 144) = v31;
  *(unsigned char *)(v14 + 164) = v29;
  *(_DWORD *)(v14 + 160) = v28;
  char v55 = 2;
  sub_6D0BC();
  uint64_t v39 = 0;
  sub_27E1F0();
  long long v32 = *(_OWORD *)v48;
  *(_OWORD *)(v14 + 168) = v47;
  *(_OWORD *)(v14 + 184) = v32;
  long long v33 = v49;
  *(_OWORD *)(v14 + 200) = *(_OWORD *)&v48[16];
  *(_OWORD *)(v14 + 216) = v33;
  long long v34 = v51;
  *(_OWORD *)(v14 + 232) = v50;
  int v35 = v53;
  __int16 v36 = v54;
  *(_OWORD *)(v14 + 248) = v34;
  int v37 = v40;
  *__int16 v40 = v52;
  *((_WORD *)v37 + 10) = v36;
  *((_DWORD *)v37 + 4) = v35;
  char v55 = 3;
  sub_377EC();
  sub_27E1F0();
  *(unsigned char *)(v14 + 286) = v47;
  LOBYTE(v47) = 4;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v14 + *(int *)(v10 + 32), v6, v4);
  sub_168EAC(v14, v42);
  sub_5E94((uint64_t)v46);
  return sub_168F10(v14);
}

uint64_t sub_168EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GiftEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_168F10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GiftEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_168F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GiftEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_168F84(void *a1)
{
  return GiftEvent.Model.encode(to:)(a1);
}

uint64_t sub_168F9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159D8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31F960, a1);
}

uint64_t sub_168FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159E0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31F978, a1);
}

uint64_t sub_16900C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for GiftEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GiftEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for GiftEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GiftEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GiftEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GiftEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GiftEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_169C08);
}

uint64_t sub_169C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for GiftEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_169E14);
}

uint64_t sub_169E14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_16A018()
{
  sub_16A274(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_16A274(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_16A274(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
      if (v2 <= 0x3F)
      {
        sub_16A274(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_16A274(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for GiftEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_16A304);
}

uint64_t sub_16A304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GiftEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_16A3C8);
}

uint64_t sub_16A3C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_16A470()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GiftEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GiftEvent.Model.CodingKeys()
{
  return &type metadata for GiftEvent.Model.CodingKeys;
}

unint64_t sub_16A62C()
{
  unint64_t result = qword_31FAE8;
  if (!qword_31FAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FAE8);
  }
  return result;
}

unint64_t sub_16A684()
{
  unint64_t result = qword_31FAF0;
  if (!qword_31FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FAF0);
  }
  return result;
}

unint64_t sub_16A6DC()
{
  unint64_t result = qword_31FAF8;
  if (!qword_31FAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FAF8);
  }
  return result;
}

uint64_t sub_16A730(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::UpSellLocation_optional __swiftcall UpSellLocation.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8E40;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t UpSellLocation.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 16718;
      break;
    case 2:
      uint64_t result = 0x6964616552626F65;
      break;
    case 3:
      uint64_t result = 0x4E676E6964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_16AA74(unsigned __int8 *a1, char *a2)
{
  return sub_3156C(*a1, *a2);
}

unint64_t sub_16AA84()
{
  unint64_t result = qword_31FB00;
  if (!qword_31FB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FB00);
  }
  return result;
}

Swift::Int sub_16AAD8()
{
  return sub_27E420();
}

uint64_t sub_16ABB0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_16AC70()
{
  return sub_27E420();
}

BookAnalytics::UpSellLocation_optional sub_16AD44(Swift::String *a1)
{
  return UpSellLocation.init(rawValue:)(*a1);
}

void sub_16AD50(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 16718;
      goto LABEL_3;
    case 2:
      *a1 = 0x6964616552626F65;
      a1[1] = 0xEA0000000000676ELL;
      break;
    case 3:
      *a1 = 0x4E676E6964616572;
      a1[1] = 0xEA0000000000776FLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_16ADE8()
{
  return sub_27DED0();
}

uint64_t sub_16AE48()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for UpSellLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16AF64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpSellLocation()
{
  return &type metadata for UpSellLocation;
}

unint64_t sub_16AF9C()
{
  unint64_t result = qword_31FB08;
  if (!qword_31FB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FB08);
  }
  return result;
}

id sub_16AFF0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AppManager()) init];
  qword_31FB10 = (uint64_t)result;
  return result;
}

id static AppManager.shared.getter()
{
  if (qword_3159E8 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_31FB10;

  return v0;
}

uint64_t AppManager.appSessionManager.getter()
{
  return swift_retain();
}

id AppManager.client.getter()
{
  return *(id *)(v0 + OBJC_IVAR___BAAppManager_client);
}

uint64_t sub_16B0FC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unsigned int v4 = (void *)(*a2 + OBJC_IVAR___BAAppManager_applicationGroupIdentifier);
  swift_beginAccess();
  *unsigned int v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AppManager.sharedContainerIdentifier.getter()
{
  unint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___BAAppManager_applicationGroupIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_16B1C0(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

void *sub_16B224()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

id sub_16B274()
{
  unint64_t v1 = &v0[OBJC_IVAR___BAAppManager_applicationGroupIdentifier];
  *(void *)unint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR___BAAppManager_uploadBatchEventConfig] = 0;
  uint64_t v2 = self;
  id v3 = v0;
  id v4 = [v2 standardUserDefaults];
  LODWORD(v2) = [v4 BOOLForKey:@"BAAppAnalyticsUseDebugProcessor"];

  id v5 = 0;
  if (v2)
  {
    type metadata accessor for DebugEventProcessor();
    swift_allocObject();
    id v5 = sub_1E9CA8();
  }
  *(void *)&v3[OBJC_IVAR___BAAppManager_debugProcessor] = v5;
  v3[OBJC_IVAR___BAAppManager_enableUploads] = 0;
  *(void *)&v3[OBJC_IVAR___BAAppManager_flushManager] = 0;
  unsigned int v6 = &v3[OBJC_IVAR___BAAppManager_targetURL];
  uint64_t v7 = sub_27CFF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_27D490();
  sub_27D480();
  sub_27D210();
  sub_27D200();
  uint64_t v14 = sub_27D310();
  uint64_t v15 = &protocol witness table for CrashDetector;
  uint64_t v13 = sub_27D300();
  sub_27D1F0();
  swift_allocObject();
  *(void *)&v3[OBJC_IVAR___BAAppManager_appSessionManager] = sub_27D1E0();
  sub_27D6C0();
  id v8 = [self mainBundle];
  *(void *)&v3[OBJC_IVAR___BAAppManager_client] = sub_27D6B0();

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for AppManager();
  [super init];
  sub_16E800();
  id v10 = [self defaultCenter];
  [v10 addObserver:v9 selector:"privacyAcknowledgementNotification:" name:@"BAPrivacyAcknowledgementChanged" object:0];

  return v9;
}

void sub_16B504(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = OBJC_IVAR___BAAppManager_enableUploads;
  *(unsigned char *)(v3 + OBJC_IVAR___BAAppManager_enableUploads) = a3;
  sub_16B630(a1, a2);
  if (*(unsigned char *)(v3 + v5) == 1)
  {
    id v6 = [self standardUserDefaults];
    NSString v7 = sub_27DDA0();
    [v6 BOOLForKey:v7];

    sub_27D5E0();
    id v8 = (void *)sub_27D5D0();
    id v9 = (void *)sub_27D5C0();

    uint64_t v10 = sub_27D5B0();
    uint64_t v11 = (void **)(v4 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
    swift_beginAccess();
    objc_super v12 = *v11;
    *uint64_t v11 = (void *)v10;
  }
  sub_16B838();
  sub_27D1C0();
}

uint64_t sub_16B630(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_4E04(&qword_320350);
  __chkstk_darwin(v5 - 8);
  NSString v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_4E04(&qword_320050);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = &v2[OBJC_IVAR___BAAppManager_applicationGroupIdentifier];
  swift_beginAccess();
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_27CFF0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = (uint64_t)&v2[OBJC_IVAR___BAAppManager_targetURL];
  swift_beginAccess();
  sub_16ED5C((uint64_t)v10, v13);
  swift_endAccess();
  uint64_t v14 = sub_27DF30();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v2;
  uint64_t v16 = v2;
  sub_1E98A8((uint64_t)v7, (uint64_t)&unk_31FBC8, (uint64_t)v15);
  return swift_release();
}

void sub_16B838()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___BAAppManager_enableUploads) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v2 = (void **)(v0 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
    swift_beginAccess();
    uint64_t v3 = *v2;
    if (*v2)
    {
      sub_27D290();
      uint64_t v4 = *(void **)(v1 + OBJC_IVAR___BAAppManager_client);
      sub_27D670();
      swift_allocObject();
      id v5 = v3;
      swift_retain();
      id v6 = v4;
      sub_27D660();
      swift_unknownObjectRetain();
      *(void *)(v1 + OBJC_IVAR___BAAppManager_flushManager) = sub_27D270();

      swift_release();
    }
  }
}

void sub_16B9D4()
{
}

uint64_t sub_16BA58()
{
  *(void *)(v1 + 40) = v0;
  sub_4E04(&qword_320050);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_16BAEC, 0, 0);
}

uint64_t sub_16BAEC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5] + OBJC_IVAR___BAAppManager_targetURL;
  swift_beginAccess();
  sub_16E298(v2, v1);
  uint64_t v3 = sub_27CFF0();
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v1, 1, v3);
  sub_16E300(v1);
  if (v2 == 1)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_16BD00;
    return sub_16C1C0();
  }
  else
  {
    uint64_t v6 = *(void *)(v0[5] + OBJC_IVAR___BAAppManager_flushManager);
    v0[10] = v6;
    if (v6)
    {
      swift_retain();
      NSString v7 = (void *)swift_task_alloc();
      v0[11] = v7;
      *NSString v7 = v0;
      v7[1] = sub_16C05C;
      return withCheckedContinuation<A>(isolation:function:_:)();
    }
    else
    {
      swift_task_dealloc();
      uint64_t v8 = (uint64_t (*)(void))v0[1];
      return v8();
    }
  }
}

uint64_t sub_16BD00()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_16BDFC, 0, 0);
}

uint64_t sub_16BDFC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_task_alloc();
  v0[8] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_16BEE4;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_16BEE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_16BFFC, 0, 0);
}

uint64_t sub_16BFFC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16C05C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_16C158, 0, 0);
}

uint64_t sub_16C158()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16C1C0()
{
  v1[7] = v0;
  uint64_t v2 = sub_27CFF0();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v1[10] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[11] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_16C2B8;
  return sub_16CC8C(v3);
}

uint64_t sub_16C2B8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_16C6DC;
  }
  else {
    uint64_t v2 = sub_16C3CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_16C3CC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  id v4 = [self standardUserDefaults];
  sub_27CFC0(v5);
  NSString v7 = v6;
  NSString v8 = sub_27DDA0();
  [v4 setURL:v7 forKey:v8];

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v9 = v0[7];
  uint64_t v10 = swift_task_alloc();
  v0[13] = v10;
  *(void *)(v10 + 16) = v9;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_16C564;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_16C564()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_16C67C, 0, 0);
}

uint64_t sub_16C67C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16C6DC()
{
  uint64_t v12 = v0;
  if (qword_315660 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_27D9B0();
  sub_4BD4(v1, (uint64_t)qword_318778);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_27D990();
  os_log_type_t v3 = sub_27DFA0();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = sub_27E3B0();
    v0[6] = sub_12D450(v5, v6, &v11);
    sub_27E050();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "No URL found for Upload Session Processor: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[7];
  uint64_t v8 = swift_task_alloc();
  v0[13] = v8;
  *(void *)(v8 + 16) = v7;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_16C564;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_16C998(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_31AB40);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_27D280();
  return swift_release();
}

id AppManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppManager();
  return [super dealloc];
}

uint64_t type metadata accessor for AppManager()
{
  uint64_t result = qword_31FB80;
  if (!qword_31FB80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_16CBFC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_C80E0;
  return sub_16C1C0();
}

uint64_t sub_16CC8C(uint64_t a1)
{
  v2[38] = a1;
  v2[39] = v1;
  sub_4E04(&qword_320050);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  return _swift_task_switch(sub_16CD6C, 0, 0);
}

uint64_t sub_16CD6C()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[39];
  uint64_t v3 = OBJC_IVAR___BAAppManager_targetURL;
  v0[47] = OBJC_IVAR___BAAppManager_targetURL;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_16E298(v4, v1);
  uint64_t v5 = sub_27CFF0();
  v0[48] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[49] = v6;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(v1, 1, v5);
  uint64_t v9 = v0[46];
  if (v8 == 1)
  {
    sub_16E300(v9);
    switch(sub_16D930())
    {
      case 1u:
        uint64_t v13 = v0[45];
        sub_27DDB0();
        sub_27CFE0();
        swift_bridgeObjectRelease();
        if (v7(v13, 1, v5) == 1)
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          JUMPOUT(0x16D480);
        }
        uint64_t v14 = v0[44];
        uint64_t v15 = v0[38];
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v15, v0[45], v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v14, v15, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
        goto LABEL_15;
      case 2u:
        uint64_t v16 = v0[43];
        sub_27DDB0();
        sub_27CFE0();
        swift_bridgeObjectRelease();
        if (v7(v16, 1, v5) == 1) {
          goto LABEL_23;
        }
        uint64_t v17 = v0[44];
        uint64_t v18 = v0[38];
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v18, v0[43], v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v17, v18, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
        swift_beginAccess();
        sub_16ED5C(v17, v4);
        break;
      case 3u:
        uint64_t v19 = v0[42];
        sub_27DDB0();
        sub_27CFE0();
        swift_bridgeObjectRelease();
        if (v7(v19, 1, v5) == 1) {
          goto LABEL_24;
        }
        uint64_t v20 = v0[44];
        uint64_t v21 = v0[38];
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v21, v0[42], v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v20, v21, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
        swift_beginAccess();
        sub_16ED5C(v20, v4);
        break;
      case 4u:
        uint64_t v22 = v0[41];
        sub_27DDB0();
        sub_27CFE0();
        swift_bridgeObjectRelease();
        if (v7(v22, 1, v5) == 1) {
          goto LABEL_25;
        }
        uint64_t v14 = v0[44];
        uint64_t v23 = v0[38];
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v23, v0[41], v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v14, v23, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
LABEL_15:
        swift_beginAccess();
        sub_16ED5C(v14, v4);
        break;
      case 5u:
        uint64_t v24 = v0[40];
        sub_27DDB0();
        sub_27CFE0();
        swift_bridgeObjectRelease();
        if (v7(v24, 1, v5) == 1) {
          goto LABEL_26;
        }
        uint64_t v25 = v0[44];
        uint64_t v26 = v0[38];
        (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v26, v0[40], v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v25, v26, v5);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v25, 0, 1, v5);
        swift_beginAccess();
        sub_16ED5C(v25, v4);
        break;
      default:
        id v10 = [self defaultBag];
        id v11 = [v10 appAnalyticsURL];
        v0[50] = v11;

        v0[2] = v0;
        v0[7] = v0 + 36;
        v0[3] = sub_16D498;
        uint64_t v12 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_16DC08;
        v0[13] = &unk_305800;
        v0[14] = v12;
        [v11 valueWithCompletion:v0 + 10];
        return _swift_continuation_await(v0 + 2);
    }
    swift_endAccess();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v6 + 32))(v0[38], v9, v5);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_16D498()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 408) = v1;
  if (v1) {
    uint64_t v2 = sub_16D6F8;
  }
  else {
    uint64_t v2 = sub_16D5A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_16D5A8()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312) + *(void *)(v0 + 376);
  uint64_t v6 = *(void **)(v0 + 288);

  sub_27CFD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v4, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  swift_beginAccess();
  sub_16ED5C(v3, v5);
  swift_endAccess();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_16D6F8()
{
  uint64_t v1 = *(void **)(v0 + 400);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_16D7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31AB40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  if (!*(void *)(a2 + OBJC_IVAR___BAAppManager_flushManager)) {
    return sub_27DF10();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_27D280();
  swift_release();
  return swift_release();
}

uint64_t sub_16D930()
{
  uint64_t v1 = v0 + OBJC_IVAR___BAAppManager_applicationGroupIdentifier;
  swift_beginAccess();
  if (!*(void *)(v1 + 8)
    || (id v2 = objc_allocWithZone((Class)NSUserDefaults),
        swift_bridgeObjectRetain(),
        NSString v3 = sub_27DDA0(),
        swift_bridgeObjectRelease(),
        id v4 = [v2 initWithSuiteName:v3],
        v3,
        !v4))
  {
    id v4 = [self standardUserDefaults];
  }
  id v5 = [v4 stringForKey:@"BAEnvironment"];
  if (!v5)
  {

    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_27DDB0();
  uint64_t v9 = v8;

  BOOL v10 = v7 == 7759204 && v9 == 0xE300000000000000;
  if (v10 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 1;
  }
  BOOL v12 = v7 == 24945 && v9 == 0xE200000000000000;
  if (v12 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 2;
  }
  BOOL v13 = v7 == 1953719668 && v9 == 0xE400000000000000;
  if (v13 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 3;
  }
  if (v7 == 0x676E6967617473 && v9 == 0xE700000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 4;
  }
  if (v7 == 1685025392 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();

    return 5;
  }
  char v14 = sub_27E370();
  swift_bridgeObjectRelease();

  if ((v14 & 1) == 0) {
    return 0;
  }
  return 5;
}

uint64_t sub_16DC08(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_4E04(&qword_31FBB8);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    if (a2)
    {
      uint64_t v9 = *(void *)(*(void *)(v4 + 64) + 40);
      *(void *)uint64_t v9 = a2;
      *(unsigned char *)(v9 + 8) = a3;
      id v10 = a2;
      a1 = v4;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

void sub_16DCCC()
{
  NSString v0 = (id)BUOnboardingBooksBundleID();
  if (!v0)
  {
    sub_27DDB0();
    NSString v0 = sub_27DDA0();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v1 = [self acknowledgementNeededForPrivacyIdentifier:v0];

  if ((v1 & 1) == 0)
  {
    sub_27D490();
    id v2 = (id)sub_27D480();
    sub_27D470();
  }
}

uint64_t AppManager.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_27CFF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_320050);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  BOOL v13 = (char *)&v25 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = v1 + OBJC_IVAR___BAAppManager_targetURL;
  swift_beginAccess();
  sub_16E298(v16, (uint64_t)v15);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v17(v15, 1, v3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v15, v3);
  }
  uint64_t v25 = a1;
  sub_16E300((uint64_t)v15);
  id v18 = [self standardUserDefaults];
  NSString v19 = sub_27DDA0();
  id v20 = [v18 URLForKey:v19];

  if (v20)
  {
    sub_27CFD0();

    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v21(v13, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    unsigned int v22 = v17(v13, 1, v3);
    uint64_t v23 = v25;
    if (v22 != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(v25, v13, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    uint64_t v23 = v25;
  }
  sub_16E300((uint64_t)v13);
  sub_27DDB0();
  sub_27CFE0();
  swift_bridgeObjectRelease();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v10, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23, v10, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_16E298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_16E300(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_320050);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppManager.name.getter()
{
  int v0 = sub_16D930();
  uint64_t v1 = 0x61622D736B6F6F62;
  if (v0 == 2) {
    uint64_t v1 = 0x61712D736B6F6F62;
  }
  if (v0 == 1) {
    return 0x65642D736B6F6F62;
  }
  else {
    return v1;
  }
}

uint64_t sub_16E524@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___BAAppManager_applicationGroupIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_16E580@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_16E5E8()
{
  return type metadata accessor for AppManager();
}

void sub_16E5F0()
{
  sub_16E7A8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AppManager(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AppManager);
}

uint64_t dispatch thunk of AppManager.applicationGroupIdentifier.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AppManager.uploadBatchEventConfig.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AppManager.startAppSession(with:enableUploads:)()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of AppManager.appSessionDidTerminate()()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

void sub_16E7A8()
{
  if (!qword_320240)
  {
    sub_27CFF0();
    unint64_t v0 = sub_27E040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_320240);
    }
  }
}

uint64_t sub_16E800()
{
  uint64_t v0 = sub_27DC40();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_27DC70();
  uint64_t v4 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_27DC50();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1037D4();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v7);
  uint64_t v11 = (void *)sub_27E030();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_16DCCC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1788EC;
  aBlock[3] = &unk_305760;
  uint64_t v12 = _Block_copy(aBlock);
  sub_27DC60();
  v14[1] = _swiftEmptyArrayStorage;
  sub_16EB24();
  sub_4E04((uint64_t *)&unk_320070);
  sub_16EB7C();
  sub_27E090();
  sub_27E010();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, void))(v4 + 8))(v6, v14[0]);
}

uint64_t sub_16EB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_16EB1C()
{
  return swift_release();
}

unint64_t sub_16EB24()
{
  unint64_t result = qword_31FB98;
  if (!qword_31FB98)
  {
    sub_27DC40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FB98);
  }
  return result;
}

unint64_t sub_16EB7C()
{
  unint64_t result = qword_31FBA0;
  if (!qword_31FBA0)
  {
    sub_82930((uint64_t *)&unk_320070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_31FBA0);
  }
  return result;
}

uint64_t sub_16EBD8(uint64_t a1)
{
  return sub_16D7C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_16EC10(uint64_t a1)
{
  return sub_16C998(a1);
}

uint64_t sub_16EC24(uint64_t a1)
{
  return sub_16D7C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_16EC60()
{
  uint64_t v1 = sub_4E04(&qword_31AB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_16ECF4()
{
  return sub_27DF10();
}

uint64_t sub_16ED5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_16EDC4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_16EE04()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_AD880;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_C80E0;
  return sub_16C1C0();
}

uint64_t sub_16EED8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_31FBD0, &enum case for SessionGroup.default(_:));
}

uint64_t static PurchaseFailEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31FBD0, a1);
}

uint64_t sub_16EF38(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_31FBE8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PurchaseFailEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_3159F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31FBE8, a1);
}

uint64_t PurchaseFailEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseFailEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_31FC88);
}

uint64_t PurchaseFailEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.prevAltContentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.prevAltContentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.prevAltContentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.purchaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.purchaseFailData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_31FC00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.purchaseFailData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_31FC00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.purchaseFailData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.uppParentContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.uppParentContentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseFailEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent(0) + 60);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseFailEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseFailEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PurchaseFailEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v6, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v6, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  uint64_t v27 = sub_4E04(&qword_315DE0);
  int v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v6, v27);
}

uint64_t PurchaseFailEvent.Model.purchaseFailData.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 396);
  char v3 = *(unsigned char *)(v1 + 400);
  uint64_t v4 = *(void *)(v1 + 408);
  uint64_t v5 = *(void *)(v1 + 432);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 392);
  *(_DWORD *)(a1 + 4) = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 416);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PurchaseFailEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 456);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 440);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PurchaseFailEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[58];
  uint64_t v3 = v1[59];
  uint64_t v4 = v1[60];
  uint64_t v5 = v1[61];
  uint64_t v6 = v1[62];
  uint64_t v7 = v1[63];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

void PurchaseFailEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 512);
}

uint64_t PurchaseFailEvent.Model.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 520);
  uint64_t v3 = *(void *)(v1 + 528);
  uint64_t v4 = *(void *)(v1 + 536);
  uint64_t v5 = *(void *)(v1 + 544);
  uint64_t v6 = *(void *)(v1 + 552);
  uint64_t v7 = *(void *)(v1 + 560);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v1 + 568);
  return sub_6B9C0(v2, v3);
}

uint64_t PurchaseFailEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseFailEvent.Model(0) + 60);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseFailEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_31FD48);
}

uint64_t PurchaseFailEvent.Model.init(altContentTypeExposureData:contentData:contentStoreData:contentExposureData:prevAltContentExposureData:purchaseData:purchaseFailData:upSellData:seriesData:suggestionData:uppParentContentData:eventData:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, _WORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long *a10, unsigned char *a11, uint64_t a12, uint64_t a13)
{
  long long v13 = *a1;
  long long v14 = a1[1];
  long long v15 = a1[2];
  char v16 = *((unsigned char *)a1 + 56);
  *(void *)(a9 + 48) = *((void *)a1 + 6);
  *(unsigned char *)(a9 + 56) = v16;
  uint64_t v17 = *(void *)(a2 + 8);
  *(void *)(a9 + 64) = *(void *)a2;
  *(void *)(a9 + 72) = v17;
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 48);
  *(void *)(a9 + 104) = *(void *)(a2 + 40);
  *(void *)(a9 + 112) = v18;
  long long v19 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a9 + 120) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a9 + 124) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a9 + 132) = *(_DWORD *)(a2 + 68);
  char v20 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)a9 = v13;
  *(_OWORD *)(a9 + 16) = v14;
  *(_OWORD *)(a9 + 32) = v15;
  *(_OWORD *)(a9 + 88) = v19;
  *(unsigned char *)(a9 + 136) = v20;
  *(_DWORD *)(a9 + 137) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a9 + 141) = *(unsigned char *)(a2 + 77);
  long long v21 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a9 + 228) = *((unsigned char *)a3 + 68);
  long long v22 = *a3;
  long long v23 = a3[1];
  long long v24 = a3[2];
  long long v25 = a3[3];
  *(_DWORD *)(a9 + 224) = *((_DWORD *)a3 + 16);
  *(_WORD *)(a9 + 348) = *((_WORD *)a4 + 58);
  long long v26 = *a4;
  long long v27 = a4[1];
  long long v28 = a4[2];
  long long v29 = a4[3];
  long long v30 = a4[4];
  long long v31 = a4[5];
  long long v32 = a4[6];
  LOWORD(v18) = *a5;
  *(_DWORD *)(a9 + 344) = *((_DWORD *)a4 + 28);
  *(_WORD *)(a9 + 350) = v18;
  uint64_t v33 = *(void *)(a6 + 8);
  *(void *)(a9 + 352) = *(void *)a6;
  *(void *)(a9 + 360) = v33;
  *(unsigned char *)(a9 + 368) = *(unsigned char *)(a6 + 16);
  *(unsigned char *)(a9 + 369) = *(unsigned char *)(a6 + 17);
  uint64_t v34 = *(void *)(a6 + 32);
  *(void *)(a9 + 376) = *(void *)(a6 + 24);
  *(void *)(a9 + 384) = v34;
  *(unsigned char *)(a9 + 392) = *(unsigned char *)a7;
  *(_DWORD *)(a9 + 396) = *(_DWORD *)(a7 + 4);
  *(unsigned char *)(a9 + 400) = *(unsigned char *)(a7 + 8);
  long long v35 = *(_OWORD *)(a7 + 16);
  long long v36 = *(_OWORD *)(a7 + 32);
  *(_OWORD *)(a9 + 264) = v28;
  *(_OWORD *)(a9 + 280) = v29;
  *(_OWORD *)(a9 + 296) = v30;
  *(_OWORD *)(a9 + 312) = v31;
  *(_OWORD *)(a9 + 328) = v32;
  *(_OWORD *)(a9 + 408) = v35;
  *(_OWORD *)(a9 + 424) = v36;
  *(_OWORD *)(a9 + 440) = *(_OWORD *)a8;
  long long v37 = *(_OWORD *)(a12 + 16);
  long long v38 = *(_OWORD *)(a12 + 32);
  *(_OWORD *)(a9 + 520) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 536) = v37;
  *(_OWORD *)(a9 + 552) = v38;
  long long v39 = *a10;
  long long v40 = a10[1];
  long long v41 = a10[2];
  *(void *)(a9 + 456) = *(void *)(a8 + 16);
  *(unsigned char *)(a9 + 512) = *a11;
  *(unsigned char *)(a9 + 568) = *(unsigned char *)(a12 + 48);
  *(_OWORD *)(a9 + 144) = v21;
  *(_OWORD *)(a9 + 160) = v22;
  *(_OWORD *)(a9 + 176) = v23;
  *(_OWORD *)(a9 + 192) = v24;
  *(_OWORD *)(a9 + 208) = v25;
  *(_OWORD *)(a9 + 232) = v26;
  *(_OWORD *)(a9 + 248) = v27;
  *(_OWORD *)(a9 + 464) = v39;
  *(_OWORD *)(a9 + 480) = v40;
  *(_OWORD *)(a9 + 496) = v41;
  uint64_t v42 = a9 + *(int *)(type metadata accessor for PurchaseFailEvent.Model(0) + 60);
  uint64_t v43 = sub_27D7C0();
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32);

  return v44(v42, a13, v43);
}

uint64_t sub_170488(char a1)
{
  uint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      uint64_t result = 0x6573616863727570;
      break;
    case 7:
      uint64_t v3 = 0x6C6C65537075;
      goto LABEL_9;
    case 8:
      uint64_t v3 = 0x736569726573;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 9:
      uint64_t result = 0x6974736567677573;
      break;
    case 10:
      uint64_t result = 0xD000000000000014;
      break;
    case 11:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_17060C()
{
  return sub_170488(*v0);
}

uint64_t sub_170614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_175E80(a1, a2);
  *a3 = result;
  return result;
}

void sub_17063C(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_170648(uint64_t a1)
{
  unint64_t v2 = sub_170C08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_170684(uint64_t a1)
{
  unint64_t v2 = sub_170C08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PurchaseFailEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_31FC08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_170C08();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 6);
  char v10 = *((unsigned char *)v3 + 56);
  long long v11 = v3[1];
  long long v45 = *v3;
  *(_OWORD *)int v46 = v11;
  *(_OWORD *)&v46[16] = v3[2];
  *(void *)&long long v47 = v9;
  BYTE8(v47) = v10;
  char v53 = 0;
  sub_6C3AC();
  sub_27E2C0();
  if (!v2)
  {
    uint64_t v12 = *((void *)v3 + 9);
    char v13 = *((unsigned char *)v3 + 80);
    long long v14 = *(long long *)((char *)v3 + 88);
    uint64_t v15 = *((void *)v3 + 13);
    uint64_t v16 = *((void *)v3 + 14);
    __int16 v17 = *((_WORD *)v3 + 60);
    int v18 = *((_DWORD *)v3 + 31);
    char v19 = *((unsigned char *)v3 + 128);
    int v20 = *((_DWORD *)v3 + 33);
    char v21 = *((unsigned char *)v3 + 136);
    uint64_t v22 = *((unsigned __int8 *)v3 + 141);
    *(void *)&long long v45 = *((void *)v3 + 8);
    *((void *)&v45 + 1) = v12;
    v46[0] = v13;
    *(_OWORD *)&v46[8] = v14;
    *(void *)&v46[24] = v15;
    *(void *)&long long v47 = v16;
    WORD4(v47) = v17;
    HIDWORD(v47) = v18;
    LOBYTE(v48) = v19;
    DWORD1(v48) = v20;
    BYTE8(v48) = v21;
    *(_DWORD *)((char *)&v48 + 9) = *(_DWORD *)((char *)v3 + 137);
    BYTE13(v48) = v22;
    long long v49 = v3[9];
    char v53 = 1;
    sub_1A1D4();
    sub_27E330();
    int v23 = *((_DWORD *)v3 + 56);
    char v24 = *((unsigned char *)v3 + 228);
    long long v25 = v3[11];
    long long v45 = v3[10];
    *(_OWORD *)int v46 = v25;
    long long v26 = v3[13];
    *(_OWORD *)&v46[16] = v3[12];
    long long v47 = v26;
    BYTE4(v48) = v24;
    LODWORD(v48) = v23;
    char v53 = 2;
    sub_6C400();
    sub_27E2C0();
    int v27 = *((_DWORD *)v3 + 86);
    __int16 v28 = *((_WORD *)v3 + 174);
    long long v29 = *(long long *)((char *)v3 + 248);
    long long v45 = *(long long *)((char *)v3 + 232);
    *(_OWORD *)int v46 = v29;
    long long v30 = *(long long *)((char *)v3 + 280);
    *(_OWORD *)&v46[16] = *(long long *)((char *)v3 + 264);
    long long v47 = v30;
    long long v31 = *(long long *)((char *)v3 + 312);
    long long v48 = *(long long *)((char *)v3 + 296);
    long long v49 = v31;
    long long v50 = *(long long *)((char *)v3 + 328);
    __int16 v52 = v28;
    int v51 = v27;
    char v53 = 3;
    sub_6C454();
    sub_27E2C0();
    LOWORD(v45) = *((_WORD *)v3 + 175);
    char v53 = 4;
    sub_6C4A8();
    sub_27E2C0();
    uint64_t v32 = *((void *)v3 + 45);
    char v33 = *((unsigned char *)v3 + 368);
    char v34 = *((unsigned char *)v3 + 369);
    uint64_t v35 = *((void *)v3 + 47);
    uint64_t v36 = *((void *)v3 + 48);
    *(void *)&long long v45 = *((void *)v3 + 44);
    *((void *)&v45 + 1) = v32;
    v46[0] = v33;
    v46[1] = v34;
    *(void *)&v46[8] = v35;
    *(void *)&v46[16] = v36;
    char v53 = 5;
    sub_3E3E0();
    sub_27E330();
    int v37 = *((_DWORD *)v3 + 99);
    char v38 = *((unsigned char *)v3 + 400);
    LOBYTE(v45) = *((unsigned char *)v3 + 392);
    DWORD1(v45) = v37;
    BYTE8(v45) = v38;
    long long v39 = *(long long *)((char *)v3 + 424);
    *(_OWORD *)int v46 = *(long long *)((char *)v3 + 408);
    *(_OWORD *)&v46[16] = v39;
    char v53 = 6;
    sub_170C5C();
    sub_27E330();
    uint64_t v40 = *((void *)v3 + 57);
    long long v45 = *(long long *)((char *)v3 + 440);
    *(void *)int v46 = v40;
    char v53 = 7;
    sub_36A74();
    sub_27E2C0();
    long long v41 = v3[30];
    long long v45 = v3[29];
    *(_OWORD *)int v46 = v41;
    *(_OWORD *)&v46[16] = v3[31];
    char v53 = 8;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v45) = *((unsigned char *)v3 + 512);
    char v53 = 9;
    sub_36B1C();
    sub_27E2C0();
    char v42 = *((unsigned char *)v3 + 568);
    long long v43 = *(long long *)((char *)v3 + 536);
    long long v45 = *(long long *)((char *)v3 + 520);
    *(_OWORD *)int v46 = v43;
    *(_OWORD *)&v46[16] = *(long long *)((char *)v3 + 552);
    LOBYTE(v47) = v42;
    char v53 = 10;
    sub_6C4FC();
    sub_27E2C0();
    type metadata accessor for PurchaseFailEvent.Model(0);
    LOBYTE(v45) = 11;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_170C08()
{
  unint64_t result = qword_31FC10;
  if (!qword_31FC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FC10);
  }
  return result;
}

unint64_t sub_170C5C()
{
  unint64_t result = qword_31FC18;
  if (!qword_31FC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FC18);
  }
  return result;
}

uint64_t PurchaseFailEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_4E04(&qword_31FC20);
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PurchaseFailEvent.Model(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v67 = v11 + 264;
  int v68 = a1;
  sub_5900(a1, a1[3]);
  sub_170C08();
  __int16 v65 = v8;
  sub_27E430();
  if (v2)
  {
    uint64_t v69 = v2;
    int v13 = 0;
    uint64_t result = sub_5E94((uint64_t)v68);
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
    int v19 = 0;
  }
  else
  {
    long long v60 = v6;
    uint64_t v61 = v4;
    uint64_t v12 = v64;
    char v78 = 0;
    sub_6D014();
    sub_27E1F0();
    uint64_t v20 = v72;
    char v21 = BYTE8(v72);
    long long v22 = *(_OWORD *)v71;
    *(_OWORD *)long long v11 = v70;
    *((_OWORD *)v11 + 1) = v22;
    *((_OWORD *)v11 + 2) = *(_OWORD *)&v71[16];
    *((void *)v11 + 6) = v20;
    v11[56] = v21;
    char v78 = 1;
    sub_1A98C();
    sub_27E260();
    uint64_t v23 = *((void *)&v70 + 1);
    char v24 = v71[0];
    long long v25 = *(_OWORD *)&v71[8];
    uint64_t v26 = *(void *)&v71[24];
    uint64_t v27 = v72;
    __int16 v28 = WORD4(v72);
    int v29 = HIDWORD(v72);
    char v30 = v73;
    int v31 = DWORD1(v73);
    char v32 = BYTE8(v73);
    char v33 = BYTE13(v73);
    *((void *)v11 + 8) = v70;
    *((void *)v11 + 9) = v23;
    v11[80] = v24;
    *(_OWORD *)(v11 + 88) = v25;
    *((void *)v11 + 13) = v26;
    *((void *)v11 + 14) = v27;
    *((_WORD *)v11 + 60) = v28;
    *((_DWORD *)v11 + 31) = v29;
    v11[128] = v30;
    *((_DWORD *)v11 + 33) = v31;
    v11[136] = v32;
    *(_DWORD *)(v11 + 137) = *(_DWORD *)((char *)&v73 + 9);
    v11[141] = v33;
    *((_OWORD *)v11 + 9) = v74;
    char v78 = 2;
    sub_6D068();
    sub_27E1F0();
    int v34 = v73;
    char v35 = BYTE4(v73);
    long long v36 = *(_OWORD *)v71;
    *((_OWORD *)v11 + 10) = v70;
    *((_OWORD *)v11 + 11) = v36;
    long long v37 = v72;
    *((_OWORD *)v11 + 12) = *(_OWORD *)&v71[16];
    *((_OWORD *)v11 + 13) = v37;
    v11[228] = v35;
    *((_DWORD *)v11 + 56) = v34;
    char v78 = 3;
    sub_6D0BC();
    sub_27E1F0();
    int v38 = v76;
    __int16 v39 = v77;
    long long v40 = *(_OWORD *)v71;
    *(_OWORD *)(v11 + 232) = v70;
    *(_OWORD *)(v11 + 248) = v40;
    long long v41 = v72;
    char v42 = v67;
    *(_OWORD *)char v67 = *(_OWORD *)&v71[16];
    *((_OWORD *)v42 + 1) = v41;
    long long v43 = v74;
    *((_OWORD *)v42 + 2) = v73;
    *((_OWORD *)v42 + 3) = v43;
    *((_OWORD *)v42 + 4) = v75;
    *((_WORD *)v42 + 42) = v39;
    *((_DWORD *)v42 + 20) = v38;
    char v78 = 4;
    sub_6D110();
    sub_27E1F0();
    *((_WORD *)v11 + 175) = v70;
    char v78 = 5;
    sub_3E388();
    sub_27E260();
    uint64_t v44 = *((void *)&v70 + 1);
    char v45 = v71[0];
    char v46 = v71[1];
    uint64_t v47 = *(void *)&v71[8];
    uint64_t v48 = *(void *)&v71[16];
    *((void *)v11 + 44) = v70;
    *((void *)v11 + 45) = v44;
    v11[368] = v45;
    v11[369] = v46;
    *((void *)v11 + 47) = v47;
    *((void *)v11 + 48) = v48;
    char v78 = 6;
    sub_1716C4();
    sub_27E260();
    int v49 = DWORD1(v70);
    char v50 = BYTE8(v70);
    v11[392] = v70;
    *((_DWORD *)v11 + 99) = v49;
    int v51 = v67;
    v67[136] = v50;
    long long v52 = *(_OWORD *)&v71[16];
    *((_OWORD *)v51 + 9) = *(_OWORD *)v71;
    *((_OWORD *)v51 + 10) = v52;
    char v78 = 7;
    sub_37744();
    sub_27E1F0();
    uint64_t v53 = *(void *)v71;
    *((_OWORD *)v67 + 11) = v70;
    *((void *)v11 + 57) = v53;
    char v78 = 8;
    sub_11A3C();
    sub_27E1F0();
    int v18 = 1;
    long long v54 = *(_OWORD *)v71;
    *((_OWORD *)v11 + 29) = v70;
    *((_OWORD *)v11 + 30) = v54;
    *((_OWORD *)v11 + 31) = *(_OWORD *)&v71[16];
    char v78 = 9;
    sub_377EC();
    sub_27E1F0();
    uint64_t v69 = 0;
    v11[512] = v70;
    char v78 = 10;
    sub_6D164();
    uint64_t v55 = v69;
    sub_27E1F0();
    uint64_t v69 = v55;
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v65, v66);
      int v56 = 0;
    }
    else
    {
      char v57 = v72;
      long long v58 = *(_OWORD *)v71;
      *(_OWORD *)(v11 + 520) = v70;
      *(_OWORD *)(v11 + 536) = v58;
      *(_OWORD *)(v11 + 552) = *(_OWORD *)&v71[16];
      v11[568] = v57;
      LOBYTE(v70) = 11;
      sub_1AB30(&qword_315E28);
      uint64_t v59 = v69;
      sub_27E260();
      uint64_t v69 = v59;
      if (!v59)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v65, v66);
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v11[*(int *)(v9 + 60)], v60, v61);
        sub_171718((uint64_t)v11, v63);
        sub_5E94((uint64_t)v68);
        return sub_17177C((uint64_t)v11);
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v65, v66);
      int v56 = 1;
    }
    sub_5E94((uint64_t)v68);
    int v19 = 1;
    sub_6CFC4(*(void *)v11, *((void *)v11 + 1));
    LODWORD(v66) = 1;
    LODWORD(v68) = v56;
    swift_bridgeObjectRelease();
    int v13 = 1;
    int v16 = 1;
    int v15 = 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v17 = (int)v68;
    uint64_t result = swift_bridgeObjectRelease();
    if (v66)
    {
      sub_6CF60(*((void *)v11 + 20), *((void *)v11 + 21), *((void *)v11 + 22), *((void *)v11 + 23), *((void *)v11 + 24), *((void *)v11 + 25));
      goto LABEL_13;
    }
  }
  if (!v15)
  {
    if (!v16) {
      goto LABEL_14;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
LABEL_7:
    if (!v19) {
      goto LABEL_16;
    }
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_17;
    }
    goto LABEL_9;
  }
LABEL_13:
  uint64_t result = sub_6CEDC(*((void *)v11 + 29), *((void *)v11 + 30));
  if (v16) {
    goto LABEL_6;
  }
LABEL_14:
  if (!v13) {
    goto LABEL_7;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_8;
  }
LABEL_16:
  if (v18)
  {
LABEL_17:
    uint64_t result = sub_1A978(*((void *)v11 + 58), *((void *)v11 + 59), *((void *)v11 + 60), *((void *)v11 + 61), *((void *)v11 + 62), *((void *)v11 + 63));
    if ((v17 & 1) == 0) {
      return result;
    }
    return sub_6CE8C(*((void *)v11 + 65), *((void *)v11 + 66));
  }
LABEL_9:
  if (!v17) {
    return result;
  }
  return sub_6CE8C(*((void *)v11 + 65), *((void *)v11 + 66));
}

unint64_t sub_1716C4()
{
  unint64_t result = qword_31FC28;
  if (!qword_31FC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FC28);
  }
  return result;
}

uint64_t sub_171718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_17177C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1717D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseFailEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1717F0(void *a1)
{
  return PurchaseFailEvent.Model.encode(to:)(a1);
}

uint64_t sub_171808@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159F0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_31FBD0, a1);
}

uint64_t sub_171840@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_3159F8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_31FBE8, a1);
}

uint64_t sub_171878@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v7, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v7, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  uint64_t v26 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  uint64_t v28 = sub_4E04(&qword_315DE0);
  int v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v7, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for PurchaseFailEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3184C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_3184D8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_3184E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_3184E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    int v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_31FC00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    int v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    int v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    long long v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    uint64_t v47 = sub_4E04(&qword_3184F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    int v49 = (char *)a1 + v48;
    char v50 = (char *)a2 + v48;
    uint64_t v51 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for PurchaseFailEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  uint64_t v24 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  uint64_t v26 = sub_4E04(&qword_315DE0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for PurchaseFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for PurchaseFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for PurchaseFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for PurchaseFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_31FC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseFailEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1732AC);
}

uint64_t sub_1732AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  uint64_t v14 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  uint64_t v15 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  uint64_t v16 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  uint64_t v17 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  uint64_t v18 = sub_4E04(&qword_31FC00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  uint64_t v20 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  uint64_t v21 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  uint64_t v22 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  uint64_t v24 = sub_4E04(&qword_315DE0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for PurchaseFailEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1736E8);
}

uint64_t sub_1736E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3184C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  uint64_t v16 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  uint64_t v17 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  uint64_t v18 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  uint64_t v19 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  uint64_t v20 = sub_4E04(&qword_31FC00);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  uint64_t v21 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  uint64_t v22 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  uint64_t v23 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  uint64_t v24 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  uint64_t v26 = sub_4E04(&qword_315DE0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_173B1C()
{
  sub_1740A4(319, &qword_3185C8, (void (*)(void))sub_6D014, (void (*)(void))sub_6C3AC);
  if (v0 <= 0x3F)
  {
    sub_1740A4(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_1740A4(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
      if (v2 <= 0x3F)
      {
        sub_1740A4(319, &qword_3185D8, (void (*)(void))sub_6D0BC, (void (*)(void))sub_6C454);
        if (v3 <= 0x3F)
        {
          sub_1740A4(319, &qword_3185E0, (void (*)(void))sub_6D110, (void (*)(void))sub_6C4A8);
          if (v4 <= 0x3F)
          {
            sub_1740A4(319, &qword_3185E8, (void (*)(void))sub_3E388, (void (*)(void))sub_3E3E0);
            if (v5 <= 0x3F)
            {
              sub_1740A4(319, (unint64_t *)&unk_31FC98, (void (*)(void))sub_1716C4, (void (*)(void))sub_170C5C);
              if (v6 <= 0x3F)
              {
                sub_1740A4(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
                if (v7 <= 0x3F)
                {
                  sub_1740A4(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                  if (v8 <= 0x3F)
                  {
                    sub_1740A4(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
                    if (v9 <= 0x3F)
                    {
                      sub_1740A4(319, (unint64_t *)&unk_3185F0, (void (*)(void))sub_6D164, (void (*)(void))sub_6C4FC);
                      if (v10 <= 0x3F)
                      {
                        sub_6DA0();
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1740A4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PurchaseFailEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  if (v7)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  uint64_t v12 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  uint64_t v13 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v14;
  *(_WORD *)(a1 + 120) = *((_WORD *)a2 + 60);
  int v15 = *((_DWORD *)a2 + 31);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(_DWORD *)(a1 + 124) = v15;
  *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)((char *)a2 + 137);
  *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
  uint64_t v16 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v16;
  uint64_t v17 = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v17)
  {
    long long v27 = *((_OWORD *)a2 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 208) = v27;
    *(void *)(a1 + 221) = *(uint64_t *)((char *)a2 + 221);
    long long v28 = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 176) = v28;
    uint64_t v21 = a2[30];
    if (v21) {
      goto LABEL_8;
    }
LABEL_10:
    long long v29 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 312) = v29;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(void *)(a1 + 342) = *(uint64_t *)((char *)a2 + 342);
    long long v30 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v30;
    long long v31 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v31;
    goto LABEL_11;
  }
  uint64_t v18 = a2[21];
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = v18;
  uint64_t v19 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v19;
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = v17;
  uint64_t v20 = a2[27];
  *(void *)(a1 + 208) = a2[26];
  *(void *)(a1 + 216) = v20;
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = a2[30];
  if (!v21) {
    goto LABEL_10;
  }
LABEL_8:
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = v21;
  uint64_t v22 = a2[32];
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = v22;
  uint64_t v23 = a2[34];
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = v23;
  uint64_t v24 = a2[36];
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = v24;
  uint64_t v25 = a2[38];
  *(void *)(a1 + 296) = a2[37];
  *(void *)(a1 + 304) = v25;
  *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
  *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
  *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
  *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
  uint64_t v26 = a2[42];
  *(void *)(a1 + 328) = a2[41];
  *(void *)(a1 + 336) = v26;
  *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
  *(_WORD *)(a1 + 348) = *((_WORD *)a2 + 174);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  *(_WORD *)(a1 + 350) = *((_WORD *)a2 + 175);
  uint64_t v32 = a2[45];
  *(void *)(a1 + 352) = a2[44];
  *(void *)(a1 + 360) = v32;
  *(_WORD *)(a1 + 368) = *((_WORD *)a2 + 184);
  uint64_t v33 = a2[48];
  *(void *)(a1 + 376) = a2[47];
  *(void *)(a1 + 384) = v33;
  *(unsigned char *)(a1 + 392) = *((unsigned char *)a2 + 392);
  *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
  *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
  uint64_t v34 = a2[52];
  *(void *)(a1 + 408) = a2[51];
  *(void *)(a1 + 416) = v34;
  uint64_t v35 = a2[54];
  *(void *)(a1 + 424) = a2[53];
  *(void *)(a1 + 432) = v35;
  *(_WORD *)(a1 + 440) = *((_WORD *)a2 + 220);
  uint64_t v36 = a2[57];
  *(void *)(a1 + 448) = a2[56];
  *(void *)(a1 + 456) = v36;
  uint64_t v37 = a2[63];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37 == 1)
  {
    long long v38 = *((_OWORD *)a2 + 30);
    *(_OWORD *)(a1 + 464) = *((_OWORD *)a2 + 29);
    *(_OWORD *)(a1 + 480) = v38;
    *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
  }
  else
  {
    *(void *)(a1 + 464) = a2[58];
    *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
    *(void *)(a1 + 480) = a2[60];
    *(unsigned char *)(a1 + 488) = *((unsigned char *)a2 + 488);
    *(_WORD *)(a1 + 489) = *(_WORD *)((char *)a2 + 489);
    *(void *)(a1 + 496) = a2[62];
    *(void *)(a1 + 504) = v37;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 512) = *((unsigned char *)a2 + 512);
  uint64_t v39 = a2[66];
  if (v39)
  {
    *(void *)(a1 + 520) = a2[65];
    *(void *)(a1 + 528) = v39;
    *(void *)(a1 + 536) = a2[67];
    *(void *)(a1 + 544) = a2[68];
    *(void *)(a1 + 552) = a2[69];
    *(void *)(a1 + 560) = a2[70];
    *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v40 = *(_OWORD *)(a2 + 67);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 65);
    *(_OWORD *)(a1 + 536) = v40;
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 69);
    *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
  }
  uint64_t v41 = *(int *)(a3 + 60);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t)a2 + v41;
  uint64_t v44 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

uint64_t destroy for PurchaseFailEvent.Model(void *a1, uint64_t a2)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[30])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[63] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[66])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PurchaseFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = v6;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  int v13 = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = v13;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  uint64_t v15 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v16;
    uint64_t v17 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v17;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v15;
    uint64_t v18 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v18;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = *(void *)(a2 + 240);
    if (v19)
    {
LABEL_6:
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v19;
      uint64_t v20 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v20;
      uint64_t v21 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v21;
      uint64_t v22 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v22;
      uint64_t v23 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v23;
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
      *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      uint64_t v24 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v24;
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(void *)(a1 + 221) = *(void *)(a2 + 221);
    long long v26 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v26;
    uint64_t v19 = *(void *)(a2 + 240);
    if (v19) {
      goto LABEL_6;
    }
  }
  long long v27 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v27;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  long long v28 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v28;
  long long v29 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v29;
LABEL_9:
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  uint64_t v30 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v30;
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  uint64_t v31 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v31;
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(_DWORD *)(a1 + 396) = *(_DWORD *)(a2 + 396);
  uint64_t v32 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v32;
  uint64_t v33 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v33;
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  uint64_t v34 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v34;
  uint64_t v35 = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 == 1)
  {
    long long v36 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v36;
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  }
  else
  {
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
    *(_WORD *)(a1 + 489) = *(_WORD *)(a2 + 489);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = v35;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  uint64_t v37 = *(void *)(a2 + 528);
  if (v37)
  {
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = v37;
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v38 = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 536) = v38;
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
    *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  }
  uint64_t v39 = *(int *)(a3 + 60);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for PurchaseFailEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    }
    else
    {
      sub_70A8C(a1);
      long long v8 = a2[1];
      long long v7 = a2[2];
      long long v9 = *a2;
      *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v9;
    }
  }
  else if (v6)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[2];
    *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)a1 = v10;
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(unsigned char *)(a1 + 121) = *((unsigned char *)a2 + 121);
  int v13 = *((_DWORD *)a2 + 31);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(_DWORD *)(a1 + 124) = v13;
  int v14 = *((_DWORD *)a2 + 33);
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(_DWORD *)(a1 + 132) = v14;
  *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
  *(unsigned char *)(a1 + 138) = *((unsigned char *)a2 + 138);
  *(unsigned char *)(a1 + 139) = *((unsigned char *)a2 + 139);
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  *(unsigned char *)(a1 + 141) = *((unsigned char *)a2 + 141);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (_OWORD *)(a1 + 160);
  uint64_t v16 = a2 + 10;
  uint64_t v17 = *((void *)a2 + 25);
  if (*(void *)(a1 + 200))
  {
    if (v17)
    {
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(void *)(a1 + 168) = *((void *)a2 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *((void *)a2 + 22);
      *(void *)(a1 + 184) = *((void *)a2 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *((void *)a2 + 24);
      *(void *)(a1 + 200) = *((void *)a2 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *((void *)a2 + 26);
      *(void *)(a1 + 216) = *((void *)a2 + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v18 = *((_DWORD *)a2 + 56);
      *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
      *(_DWORD *)(a1 + 224) = v18;
    }
    else
    {
      sub_70AE0(a1 + 160);
      *uint64_t v15 = *v16;
      long long v21 = a2[12];
      long long v20 = a2[13];
      long long v22 = a2[11];
      *(void *)(a1 + 221) = *(void *)((char *)a2 + 221);
      *(_OWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 208) = v20;
      *(_OWORD *)(a1 + 176) = v22;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(void *)(a1 + 168) = *((void *)a2 + 21);
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    *(void *)(a1 + 200) = *((void *)a2 + 25);
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(void *)(a1 + 216) = *((void *)a2 + 27);
    int v19 = *((_DWORD *)a2 + 56);
    *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
    *(_DWORD *)(a1 + 224) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v15 = *v16;
    long long v23 = a2[11];
    long long v24 = a2[12];
    long long v25 = a2[13];
    *(void *)(a1 + 221) = *(void *)((char *)a2 + 221);
    *(_OWORD *)(a1 + 192) = v24;
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 176) = v23;
  }
  long long v26 = (_OWORD *)(a1 + 232);
  long long v27 = (long long *)((char *)a2 + 232);
  uint64_t v28 = *((void *)a2 + 30);
  if (*(void *)(a1 + 240))
  {
    if (v28)
    {
      *(void *)(a1 + 232) = *((void *)a2 + 29);
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *((void *)a2 + 31);
      *(void *)(a1 + 256) = *((void *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *((void *)a2 + 33);
      *(void *)(a1 + 272) = *((void *)a2 + 34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *((void *)a2 + 35);
      *(void *)(a1 + 288) = *((void *)a2 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *((void *)a2 + 37);
      *(void *)(a1 + 304) = *((void *)a2 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v29 = *((_DWORD *)a2 + 78);
      *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
      *(_DWORD *)(a1 + 312) = v29;
      int v30 = *((_DWORD *)a2 + 80);
      *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
      *(_DWORD *)(a1 + 320) = v30;
      *(void *)(a1 + 328) = *((void *)a2 + 41);
      *(void *)(a1 + 336) = *((void *)a2 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v31 = *((_DWORD *)a2 + 86);
      *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
      *(_DWORD *)(a1 + 344) = v31;
      *(unsigned char *)(a1 + 349) = *((unsigned char *)a2 + 349);
    }
    else
    {
      sub_70B34(a1 + 232);
      long long v35 = *(long long *)((char *)a2 + 280);
      long long v37 = *v27;
      long long v36 = *(long long *)((char *)a2 + 248);
      *(_OWORD *)(a1 + 264) = *(long long *)((char *)a2 + 264);
      *(_OWORD *)(a1 + 280) = v35;
      _OWORD *v26 = v37;
      *(_OWORD *)(a1 + 248) = v36;
      long long v39 = *(long long *)((char *)a2 + 312);
      long long v38 = *(long long *)((char *)a2 + 328);
      long long v40 = *(long long *)((char *)a2 + 296);
      *(void *)(a1 + 342) = *(void *)((char *)a2 + 342);
      *(_OWORD *)(a1 + 312) = v39;
      *(_OWORD *)(a1 + 328) = v38;
      *(_OWORD *)(a1 + 296) = v40;
    }
  }
  else if (v28)
  {
    *(void *)(a1 + 232) = *((void *)a2 + 29);
    *(void *)(a1 + 240) = *((void *)a2 + 30);
    *(void *)(a1 + 248) = *((void *)a2 + 31);
    *(void *)(a1 + 256) = *((void *)a2 + 32);
    *(void *)(a1 + 264) = *((void *)a2 + 33);
    *(void *)(a1 + 272) = *((void *)a2 + 34);
    *(void *)(a1 + 280) = *((void *)a2 + 35);
    *(void *)(a1 + 288) = *((void *)a2 + 36);
    *(void *)(a1 + 296) = *((void *)a2 + 37);
    *(void *)(a1 + 304) = *((void *)a2 + 38);
    int v32 = *((_DWORD *)a2 + 78);
    *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
    *(_DWORD *)(a1 + 312) = v32;
    int v33 = *((_DWORD *)a2 + 80);
    *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
    *(_DWORD *)(a1 + 320) = v33;
    *(void *)(a1 + 328) = *((void *)a2 + 41);
    *(void *)(a1 + 336) = *((void *)a2 + 42);
    int v34 = *((_DWORD *)a2 + 86);
    *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
    *(_DWORD *)(a1 + 344) = v34;
    *(unsigned char *)(a1 + 349) = *((unsigned char *)a2 + 349);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *v27;
    long long v42 = *(long long *)((char *)a2 + 248);
    long long v43 = *(long long *)((char *)a2 + 280);
    *(_OWORD *)(a1 + 264) = *(long long *)((char *)a2 + 264);
    *(_OWORD *)(a1 + 280) = v43;
    _OWORD *v26 = v41;
    *(_OWORD *)(a1 + 248) = v42;
    long long v44 = *(long long *)((char *)a2 + 296);
    long long v45 = *(long long *)((char *)a2 + 312);
    long long v46 = *(long long *)((char *)a2 + 328);
    *(void *)(a1 + 342) = *(void *)((char *)a2 + 342);
    *(_OWORD *)(a1 + 312) = v45;
    *(_OWORD *)(a1 + 328) = v46;
    *(_OWORD *)(a1 + 296) = v44;
  }
  *(_WORD *)(a1 + 350) = *((_WORD *)a2 + 175);
  *(void *)(a1 + 352) = *((void *)a2 + 44);
  *(void *)(a1 + 360) = *((void *)a2 + 45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
  *(unsigned char *)(a1 + 369) = *((unsigned char *)a2 + 369);
  *(void *)(a1 + 376) = *((void *)a2 + 47);
  *(void *)(a1 + 384) = *((void *)a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 392) = *((unsigned char *)a2 + 392);
  int v47 = *((_DWORD *)a2 + 99);
  *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
  *(_DWORD *)(a1 + 396) = v47;
  *(void *)(a1 + 408) = *((void *)a2 + 51);
  *(void *)(a1 + 416) = *((void *)a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *((void *)a2 + 53);
  *(void *)(a1 + 432) = *((void *)a2 + 54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 440) = *((unsigned char *)a2 + 440);
  *(unsigned char *)(a1 + 441) = *((unsigned char *)a2 + 441);
  *(void *)(a1 + 448) = *((void *)a2 + 56);
  *(void *)(a1 + 456) = *((void *)a2 + 57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = (long long *)(a1 + 464);
  uint64_t v49 = a2 + 29;
  uint64_t v50 = *((void *)a2 + 63);
  if (*(void *)(a1 + 504) == 1)
  {
    if (v50 == 1)
    {
      long long v51 = *v49;
      long long v52 = a2[31];
      *(_OWORD *)(a1 + 480) = a2[30];
      *(_OWORD *)(a1 + 496) = v52;
      *uint64_t v48 = v51;
    }
    else
    {
      *(void *)(a1 + 464) = *((void *)a2 + 58);
      *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
      *(void *)(a1 + 480) = *((void *)a2 + 60);
      *(unsigned char *)(a1 + 488) = *((unsigned char *)a2 + 488);
      *(unsigned char *)(a1 + 489) = *((unsigned char *)a2 + 489);
      *(unsigned char *)(a1 + 490) = *((unsigned char *)a2 + 490);
      *(void *)(a1 + 496) = *((void *)a2 + 62);
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      swift_bridgeObjectRetain();
    }
  }
  else if (v50 == 1)
  {
    sub_1CDD8(a1 + 464);
    long long v54 = a2[30];
    long long v53 = a2[31];
    *uint64_t v48 = *v49;
    *(_OWORD *)(a1 + 480) = v54;
    *(_OWORD *)(a1 + 496) = v53;
  }
  else
  {
    *(void *)(a1 + 464) = *((void *)a2 + 58);
    *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
    *(void *)(a1 + 480) = *((void *)a2 + 60);
    *(unsigned char *)(a1 + 488) = *((unsigned char *)a2 + 488);
    *(unsigned char *)(a1 + 489) = *((unsigned char *)a2 + 489);
    *(unsigned char *)(a1 + 490) = *((unsigned char *)a2 + 490);
    *(void *)(a1 + 496) = *((void *)a2 + 62);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 512) = *((unsigned char *)a2 + 512);
  uint64_t v55 = (_OWORD *)(a1 + 520);
  int v56 = (long long *)((char *)a2 + 520);
  uint64_t v57 = *((void *)a2 + 66);
  if (*(void *)(a1 + 528))
  {
    if (v57)
    {
      *(void *)(a1 + 520) = *((void *)a2 + 65);
      *(void *)(a1 + 528) = *((void *)a2 + 66);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 536) = *((void *)a2 + 67);
      *(void *)(a1 + 544) = *((void *)a2 + 68);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *((void *)a2 + 69);
      *(void *)(a1 + 560) = *((void *)a2 + 70);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
    }
    else
    {
      sub_70B88(a1 + 520);
      long long v59 = *(long long *)((char *)a2 + 536);
      long long v58 = *(long long *)((char *)a2 + 552);
      long long v60 = *v56;
      *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
      *(_OWORD *)(a1 + 536) = v59;
      *(_OWORD *)(a1 + 552) = v58;
      *uint64_t v55 = v60;
    }
  }
  else if (v57)
  {
    *(void *)(a1 + 520) = *((void *)a2 + 65);
    *(void *)(a1 + 528) = *((void *)a2 + 66);
    *(void *)(a1 + 536) = *((void *)a2 + 67);
    *(void *)(a1 + 544) = *((void *)a2 + 68);
    *(void *)(a1 + 552) = *((void *)a2 + 69);
    *(void *)(a1 + 560) = *((void *)a2 + 70);
    *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v61 = *v56;
    long long v62 = *(long long *)((char *)a2 + 536);
    long long v63 = *(long long *)((char *)a2 + 552);
    *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
    *(_OWORD *)(a1 + 536) = v62;
    *(_OWORD *)(a1 + 552) = v63;
    *uint64_t v55 = v61;
  }
  uint64_t v64 = *(int *)(a3 + 60);
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (uint64_t)a2 + v64;
  uint64_t v67 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 24))(v65, v66, v67);
  return a1;
}

uint64_t initializeWithTake for PurchaseFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(void *)(a1 + 221) = *(void *)(a2 + 221);
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v10;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v11 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v11;
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  long long v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v12;
  long long v13 = *(_OWORD *)(a2 + 424);
  long long v14 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v13;
  *(_OWORD *)(a1 + 392) = v14;
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  long long v15 = *(_OWORD *)(a2 + 464);
  long long v16 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v16;
  *(_OWORD *)(a1 + 464) = v15;
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  long long v17 = *(_OWORD *)(a2 + 520);
  long long v18 = *(_OWORD *)(a2 + 536);
  long long v19 = *(_OWORD *)(a2 + 552);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(_OWORD *)(a1 + 536) = v18;
  *(_OWORD *)(a1 + 552) = v19;
  uint64_t v20 = *(int *)(a3 + 60);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_OWORD *)(a1 + 520) = v17;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

uint64_t assignWithTake for PurchaseFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      goto LABEL_6;
    }
    sub_70A8C(a1);
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    if (*(void *)(a2 + 200))
    {
      uint64_t v14 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v17;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
      goto LABEL_11;
    }
    sub_70AE0(a1 + 160);
  }
  long long v18 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v18;
  *(void *)(a1 + 221) = *(void *)(a2 + 221);
  long long v19 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v19;
LABEL_11:
  if (*(void *)(a1 + 240))
  {
    uint64_t v20 = *(void *)(a2 + 240);
    if (v20)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
      *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      uint64_t v25 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v25;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
      *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
      goto LABEL_16;
    }
    sub_70B34(a1 + 232);
  }
  long long v26 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v26;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(void *)(a1 + 342) = *(void *)(a2 + 342);
  long long v27 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v27;
  long long v28 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v28;
LABEL_16:
  *(_WORD *)(a1 + 350) = *(_WORD *)(a2 + 350);
  uint64_t v29 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(unsigned char *)(a1 + 369) = *(unsigned char *)(a2 + 369);
  uint64_t v30 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_DWORD *)(a1 + 396) = *(_DWORD *)(a2 + 396);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v31 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v32;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  uint64_t v33 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v33;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 504) == 1)
  {
LABEL_19:
    long long v35 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v35;
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    goto LABEL_21;
  }
  uint64_t v34 = *(void *)(a2 + 504);
  if (v34 == 1)
  {
    sub_1CDD8(a1 + 464);
    goto LABEL_19;
  }
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(_WORD *)(a1 + 489) = *(_WORD *)(a2 + 489);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v34;
  swift_bridgeObjectRelease();
LABEL_21:
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  if (!*(void *)(a1 + 528))
  {
LABEL_25:
    long long v37 = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 536) = v37;
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
    *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
    goto LABEL_26;
  }
  uint64_t v36 = *(void *)(a2 + 528);
  if (!v36)
  {
    sub_70B88(a1 + 520);
    goto LABEL_25;
  }
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
LABEL_26:
  uint64_t v38 = *(int *)(a3 + 60);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_175A0C);
}

uint64_t sub_175A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_175AD0);
}

uint64_t sub_175AD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_175B78()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PurchaseFailEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x175D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseFailEvent.Model.CodingKeys()
{
  return &type metadata for PurchaseFailEvent.Model.CodingKeys;
}

unint64_t sub_175D7C()
{
  unint64_t result = qword_31FDA8;
  if (!qword_31FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDA8);
  }
  return result;
}

unint64_t sub_175DD4()
{
  unint64_t result = qword_31FDB0;
  if (!qword_31FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDB0);
  }
  return result;
}

unint64_t sub_175E2C()
{
  unint64_t result = qword_31FDB8;
  if (!qword_31FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDB8);
  }
  return result;
}

uint64_t sub_175E80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE480 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AE4C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002AE4E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0BD0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE500 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t static BooksTreatmentData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_81898(*a1, *a2);
}

unint64_t sub_176394()
{
  return 0xD000000000000019;
}

uint64_t sub_1763B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_176B0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1763DC(uint64_t a1)
{
  unint64_t v2 = sub_1765D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_176418(uint64_t a1)
{
  unint64_t v2 = sub_1765D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BooksTreatmentData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31FDC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1765D8();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_31FDD0);
  sub_1767D0(&qword_31FDD8, (void (*)(void))sub_140CA8);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1765D8()
{
  unint64_t result = qword_31FDC8;
  if (!qword_31FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDC8);
  }
  return result;
}

uint64_t BooksTreatmentData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31FDE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1765D8();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_31FDD0);
    sub_1767D0(&qword_31FDE8, (void (*)(void))sub_140C50);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1767D0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_31FDD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_176844()
{
  unint64_t result = qword_31FDF0;
  if (!qword_31FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDF0);
  }
  return result;
}

unint64_t sub_17689C()
{
  unint64_t result = qword_31FDF8;
  if (!qword_31FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FDF8);
  }
  return result;
}

uint64_t sub_1768F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BooksTreatmentData.init(from:)(a1, a2);
}

uint64_t sub_176908(void *a1)
{
  return BooksTreatmentData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for BooksTreatmentData()
{
  return &type metadata for BooksTreatmentData;
}

unsigned char *storeEnumTagSinglePayload for BooksTreatmentData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1769CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksTreatmentData.CodingKeys()
{
  return &type metadata for BooksTreatmentData.CodingKeys;
}

unint64_t sub_176A08()
{
  unint64_t result = qword_31FE00;
  if (!qword_31FE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE00);
  }
  return result;
}

unint64_t sub_176A60()
{
  unint64_t result = qword_31FE08;
  if (!qword_31FE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE08);
  }
  return result;
}

unint64_t sub_176AB8()
{
  unint64_t result = qword_31FE10;
  if (!qword_31FE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE10);
  }
  return result;
}

uint64_t sub_176B0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000000002AF4A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BookAnalytics::GiftFailureReason_optional __swiftcall GiftFailureReason.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  char v3 = v1;
  v4._rawValue = &off_2F8EC0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *char v3 = v7;
  return result;
}

unint64_t sub_176BF4()
{
  unint64_t result = qword_31FE18;
  if (!qword_31FE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE18);
  }
  return result;
}

BookAnalytics::GiftFailureReason_optional sub_176C48(Swift::String *a1)
{
  return GiftFailureReason.init(rawValue:)(*a1);
}

uint64_t sub_176C54()
{
  return sub_27DED0();
}

uint64_t sub_176CB4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for GiftFailureReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x176DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GiftFailureReason()
{
  return &type metadata for GiftFailureReason;
}

unint64_t sub_176E08()
{
  unint64_t result = qword_31FE20;
  if (!qword_31FE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE20);
  }
  return result;
}

void __swiftcall GenreData.init(genreId:subGenreId:contentType:)(BookAnalytics::GenreData *__return_ptr retstr, Swift::String genreId, Swift::String_optional subGenreId, Swift::String_optional contentType)
{
  retstr->genreId = genreId;
  retstr->subGenreId = subGenreId;
  retstr->contentType = contentType;
}

unint64_t sub_176E70()
{
  uint64_t v1 = 0x55746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x49746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_176EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_177964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_176F08(uint64_t a1)
{
  unint64_t v2 = sub_177504();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_176F44(uint64_t a1)
{
  unint64_t v2 = sub_177504();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryEditActionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31FE28);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  void v11[2] = v8;
  sub_5900(a1, a1[3]);
  sub_177504();
  sub_27E440();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_27E2F0();
  if (!v9)
  {
    char v13 = 1;
    sub_27E2F0();
    char v12 = 2;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LibraryEditActionData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31FE38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_177504();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_27E220();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1773D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryEditActionData.init(from:)(a1, a2);
}

uint64_t sub_1773EC(void *a1)
{
  return LibraryEditActionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics21LibraryEditActionDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v10 = sub_27E370(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_27E370();
      }
    }
  }
  return result;
}

unint64_t sub_177504()
{
  unint64_t result = qword_31FE30;
  if (!qword_31FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE30);
  }
  return result;
}

void *initializeWithCopy for LibraryEditActionData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LibraryEditActionData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SeriesData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for LibraryEditActionData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEditActionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEditActionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEditActionData()
{
  return &type metadata for LibraryEditActionData;
}

unsigned char *storeEnumTagSinglePayload for LibraryEditActionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x177824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEditActionData.CodingKeys()
{
  return &type metadata for LibraryEditActionData.CodingKeys;
}

unint64_t sub_177860()
{
  unint64_t result = qword_31FE40;
  if (!qword_31FE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE40);
  }
  return result;
}

unint64_t sub_1778B8()
{
  unint64_t result = qword_31FE48;
  if (!qword_31FE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE48);
  }
  return result;
}

unint64_t sub_177910()
{
  unint64_t result = qword_31FE50;
  if (!qword_31FE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE50);
  }
  return result;
}

uint64_t sub_177964(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t NetworkReachability.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  *(void *)(v0 + 16) = SCNetworkReachabilityCreateWithAddress(0, &address);
  return v0;
}

BookAnalytics::NetworkReachabilityStatus_optional __swiftcall NetworkReachabilityStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8F28;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t NetworkReachabilityStatus.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6863616552746F6ELL;
  }
}

uint64_t sub_177C38(char *a1, unsigned __int8 *a2)
{
  return sub_2EA18(*a1, *a2);
}

Swift::Int sub_177C44()
{
  return sub_20BC68();
}

uint64_t sub_177C4C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_177CEC()
{
  return sub_25D4E0();
}

BookAnalytics::NetworkReachabilityStatus_optional sub_177CF4(Swift::String *a1)
{
  return NetworkReachabilityStatus.init(rawValue:)(*a1);
}

void sub_177D00(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC000000656C6261;
  unint64_t v4 = 0x80000000002AD410;
  if (v2 != 1) {
    unint64_t v4 = 0x80000000002AD430;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    unint64_t v6 = 0xD000000000000010;
  }
  else {
    unint64_t v6 = 0x6863616552746F6ELL;
  }
  if (!v5) {
    unint64_t v3 = v4;
  }
  *a1 = v6;
  a1[1] = v3;
}

const __SCNetworkReachability *sub_177D70@<X0>(char *a1@<X8>)
{
  BookAnalytics::NetworkReachabilityStatus_optional result = *(const __SCNetworkReachability **)(v1 + 16);
  if (result)
  {
    SCNetworkReachabilityFlags flags = 0;
    BookAnalytics::NetworkReachabilityStatus_optional result = (const __SCNetworkReachability *)SCNetworkReachabilityGetFlags(result, &flags);
    char v4 = 0;
    if ((flags & 2) != 0)
    {
      char v4 = (flags & 4) == 0;
      BOOL v5 = (flags & 0x10) == 0 || (flags & 4) == 0;
      if ((flags & 0x28) != 0) {
        char v4 = v5;
      }
      if ((flags & 0x40000) != 0) {
        char v4 = 2;
      }
    }
    *a1 = v4;
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

uint64_t NetworkReachability.init()()
{
  *(void *)(v0 + 16) = 0;
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  SCNetworkReachabilityRef v1 = SCNetworkReachabilityCreateWithAddress(0, &address);
  int v2 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = v1;

  return v0;
}

uint64_t NetworkReachability.deinit()
{
  return v0;
}

uint64_t NetworkReachability.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

unint64_t sub_177EEC()
{
  unint64_t result = qword_31FE58;
  if (!qword_31FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FE58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkReachabilityStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17800CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkReachabilityStatus()
{
  return &type metadata for NetworkReachabilityStatus;
}

uint64_t type metadata accessor for NetworkReachability()
{
  return self;
}

uint64_t method lookup function for NetworkReachability(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NetworkReachability);
}

uint64_t dispatch thunk of NetworkReachability.status.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NetworkReachability.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1780B8()
{
  if (*v0) {
    return 0x7263736544706974;
  }
  else {
    return 0x7574616546706974;
  }
}

uint64_t sub_178104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1787C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_17812C(uint64_t a1)
{
  unint64_t v2 = sub_178550();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_178168(uint64_t a1)
{
  unint64_t v2 = sub_178550();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ToolTipData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_31FF20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_178550();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ToolTipData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_31FF30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_178550();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_178520@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ToolTipData.init(from:)(a1, a2);
}

uint64_t sub_178538(void *a1)
{
  return ToolTipData.encode(to:)(a1);
}

unint64_t sub_178550()
{
  unint64_t result = qword_31FF28;
  if (!qword_31FF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FF28);
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolTipData()
{
  return &type metadata for ToolTipData;
}

unsigned char *storeEnumTagSinglePayload for ToolTipData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x178688);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolTipData.CodingKeys()
{
  return &type metadata for ToolTipData.CodingKeys;
}

unint64_t sub_1786C4()
{
  unint64_t result = qword_31FF38;
  if (!qword_31FF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FF38);
  }
  return result;
}

unint64_t sub_17871C()
{
  unint64_t result = qword_31FF40;
  if (!qword_31FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FF40);
  }
  return result;
}

unint64_t sub_178774()
{
  unint64_t result = qword_31FF48;
  if (!qword_31FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_31FF48);
  }
  return result;
}

uint64_t sub_1787C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7574616546706974 && a2 == 0xEA00000000006572;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7263736544706974 && a2 == 0xEE006E6F69747069)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_17893C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
  swift_beginAccess();
  BOOL v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1789EC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *id v3 = a1;
}

void sub_178A40(void **a1, void *a2)
{
  BOOL v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_178AA4())()
{
  return j__swift_endAccess;
}

uint64_t sub_178B00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  *id v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_178B6C()
{
  return swift_retain();
}

uint64_t sub_178BC4()
{
  return sub_178D94();
}

uint64_t sub_178BDC()
{
  return sub_178E44();
}

uint64_t (*sub_178BE8(void *a1))()
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___BAAnalyticsController_userConfiguration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_178C6C;
}

uint64_t sub_178C7C()
{
  return sub_178D94();
}

uint64_t sub_178C94()
{
  return sub_178E44();
}

uint64_t (*sub_178CA0(void *a1))()
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___BAAnalyticsController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_178C6C;
}

id sub_178D30()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_178D88()
{
  return sub_178D94();
}

uint64_t sub_178D94()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_178DE8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_178E38()
{
  return sub_178E44();
}

uint64_t sub_178E44()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_178E9C(void *a1))()
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___BAAnalyticsController_configurationProvider;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_178C6C;
}

void sub_178F20(void **a1, char a2)
{
  id v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_179144(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v4 = v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16);
  id v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1791FC(v4, a1);

  os_unfair_lock_unlock(v5);
}

uint64_t sub_1791FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_46D1C(a1, a2, &qword_320080);
}

uint64_t sub_179230@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_179290(a1, a2);
}

uint64_t sub_179250@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_179290(a1, a2);
}

uint64_t sub_179270@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_179290(a1, a2);
}

uint64_t sub_179290@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_27DDB0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 20));
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_E12C(v4, v6), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v11;
  return result;
}

char *AnalyticsController.init()()
{
  uint64_t v42 = type metadata accessor for AnalyticsController.LockProtectedData() - 8;
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_27DFF0();
  uint64_t v2 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27DFD0();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_27DC70();
  __chkstk_darwin(v6 - 8);
  *(void *)&v0[OBJC_IVAR___BAAnalyticsController_applicationTracker] = 0;
  *(void *)&v0[OBJC_IVAR___BAAnalyticsController_sessionManager] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR___BAAnalyticsController_assertionProvider] = 0;
  uint64_t v39 = OBJC_IVAR___BAAnalyticsController_workQueue;
  uint64_t v38 = sub_187A58(0, (unint64_t *)&qword_31CAD0);
  uint64_t v7 = v0;
  sub_27DC60();
  long long v44 = _swiftEmptyArrayStorage;
  uint64_t v36 = sub_187E70(&qword_31FF98, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v35 = sub_4E04(&qword_31FFA0);
  uint64_t v37 = sub_184CE4(&qword_31FFA8, &qword_31FFA0);
  sub_27E090();
  uint64_t v8 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v9 = v2 + 104;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v33 = v4;
  uint64_t v34 = v9;
  uint64_t v11 = v40;
  v10(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v40);
  *(void *)&v0[v39] = sub_27E020();
  uint64_t v39 = OBJC_IVAR___BAAnalyticsController_privateDataQueue;
  sub_27DC60();
  long long v44 = _swiftEmptyArrayStorage;
  sub_27E090();
  v10(v33, v8, v11);
  uint64_t v12 = sub_27E020();
  dispatch_suspend(v12);
  *(void *)&v7[v39] = v12;
  v7[OBJC_IVAR___BAAnalyticsController_privateDataQueueActive] = 0;
  uint64_t v13 = OBJC_IVAR___BAAnalyticsController_privateDataSource;
  *(void *)&v7[v13] = [objc_allocWithZone((Class)BAPrivateDataSource) init];
  uint64_t v14 = OBJC_IVAR___BAAnalyticsController_sessionStateCondition;
  *(void *)&v7[v14] = [objc_allocWithZone((Class)NSCondition) init];
  v7[OBJC_IVAR___BAAnalyticsController_sessionState] = 0;
  uint64_t v15 = OBJC_IVAR___BAAnalyticsController_lockProtectedData;
  uint64_t v16 = sub_27D0A0();
  uint64_t v17 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v41, 1, 1, v16);
  uint64_t v18 = (int *)v42;
  *(void *)(v17 + *(int *)(v42 + 28)) = &_swiftEmptyDictionarySingleton;
  uint64_t v19 = v17 + v18[8];
  uint64_t v20 = sub_27CFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (void *)(v17 + v18[9]);
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v22 = (_OWORD *)(v17 + v18[10]);
  _OWORD *v22 = 0u;
  v22[1] = 0u;
  uint64_t v23 = (_OWORD *)(v17 + v18[11]);
  *uint64_t v23 = xmmword_298960;
  v23[1] = 0u;
  v23[2] = 0u;
  v23[3] = 0u;
  v23[4] = 0u;
  *(void *)(v17 + v18[12]) = 0;
  *(void *)(v17 + v18[13]) = 0;
  sub_4E04(&qword_31FFD8);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + ((*(unsigned int *)(*(void *)v24 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1799FC(v17, v24 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v24 + 16));
  sub_179A60(v17);
  *(void *)&v7[v15] = v24;
  v7[OBJC_IVAR___BAAnalyticsController_userIDResetEventPending] = 0;
  v7[OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent] = 0;
  v7[OBJC_IVAR___BAAnalyticsController_launchedFromShortcutItem] = 0;
  v7[OBJC_IVAR___BAAnalyticsController_priceDropNotificationsEnabled] = 0;

  char v25 = (objc_class *)type metadata accessor for AnalyticsController();
  v43.receiver = v7;
  v43.super_class = v25;
  char v26 = [super init];
  char v27 = *(void **)&v26[OBJC_IVAR___BAAnalyticsController_privateDataSource];
  long long v28 = v26;
  [v27 setDelegate:v28];
  id v29 = [objc_allocWithZone((Class)BUCountingAssertionProvider) initWithDelegate:v28];

  uint64_t v30 = *(void **)&v28[OBJC_IVAR___BAAnalyticsController_assertionProvider];
  *(void *)&v28[OBJC_IVAR___BAAnalyticsController_assertionProvider] = v29;

  return v28;
}

uint64_t type metadata accessor for AnalyticsController.LockProtectedData()
{
  uint64_t result = qword_320228;
  if (!qword_320228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1799FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnalyticsController.LockProtectedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_179A60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnalyticsController.LockProtectedData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AnalyticsController()
{
  return self;
}

id AnalyticsController.__deallocating_deinit()
{
  if ((v0[OBJC_IVAR___BAAnalyticsController_privateDataQueueActive] & 1) == 0) {
    dispatch_resume(*(dispatch_object_t *)&v0[OBJC_IVAR___BAAnalyticsController_privateDataQueue]);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsController();
  [super dealloc];
}

uint64_t sub_179CA8()
{
  uint64_t v0 = sub_27D250();
  uint64_t v25 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_27D460();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (double *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_27D410();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_27D650();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  char v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4E04(&qword_320000);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_285930;
  sub_27D400();
  uint64_t v28 = v7;
  sub_187E70(&qword_320008, (void (*)(uint64_t))&type metadata accessor for SessionManager.Options);
  sub_4E04(&qword_320010);
  uint64_t v8 = v24;
  sub_184CE4(&qword_320018, &qword_320010);
  sub_27E090();
  sub_17A268(v3);
  sub_4E04(&qword_320020);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_298970;
  sub_27D240();
  sub_27D220();
  sub_27D230();
  uint64_t v28 = v9;
  sub_187E70(&qword_320028, (void (*)(uint64_t))&type metadata accessor for FlushEvents);
  sub_4E04(&qword_320030);
  sub_184CE4((unint64_t *)&unk_320038, &qword_320030);
  sub_27E090();
  sub_27D3A0();
  swift_allocObject();
  uint64_t v10 = v26;
  sub_27D390();
  sub_27D690();
  swift_allocObject();
  sub_27D680();
  sub_27D640();
  if (qword_3159E8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_27D1D0();
  uint64_t v12 = (uint64_t *)(v8 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  *uint64_t v12 = v11;
  uint64_t result = swift_release();
  if (*v12)
  {
    swift_retain();
    uint64_t v14 = sub_27D420();
    swift_release();
    uint64_t v15 = (objc_class *)type metadata accessor for BATracker();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    uint64_t v17 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
    sub_4E04(&qword_319FA0);
    uint64_t v18 = swift_allocObject();
    *(_DWORD *)(v18 + 24) = 0;
    *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
    *(void *)&v16[v17] = v18;
    swift_unknownObjectWeakInit();
    *(void *)&v16[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = v14;
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
    v27.receiver = v16;
    v27.super_class = v15;
    [super init];
    uint64_t v20 = (void **)(v8 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
    swift_beginAccess();
    uint64_t v21 = *v20;
    *uint64_t v20 = v19;

    sub_17A85C();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_17A268@<X0>(double *a1@<X8>)
{
  long long v46 = a1;
  uint64_t v1 = sub_4E04(&qword_31F000);
  uint64_t v45 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  objc_super v43 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_4E04((uint64_t *)&unk_3203A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_27DF50();
  double v8 = v7;
  sub_27DF50();
  double v10 = v9;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_4;
  }
  uint64_t v12 = (void *)Strong;
  uint64_t v13 = @"kBAJitterTimestampEnabled";
  id v14 = [v12 analyticsControllerConfigurationForKey:v13];

  swift_unknownObjectRelease();
  sub_27E080();
  swift_unknownObjectRelease();
  sub_187A58(0, &qword_320348);
  if (swift_dynamicCast())
  {
    id v15 = v47;
    unsigned int v44 = [v47 BOOLValue];
  }
  else
  {
LABEL_4:
    unsigned int v44 = 0;
  }
  double v16 = -v8;
  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    id v19 = @"kBAJitterTimestampLowerBound";
    id v20 = [v18 analyticsControllerConfigurationForKey:v19];

    swift_unknownObjectRelease();
    sub_27E080();
    swift_unknownObjectRelease();
    sub_187A58(0, &qword_320348);
    if (swift_dynamicCast())
    {
      id v21 = v47;
      [v47 doubleValue];
      double v16 = v22;
    }
  }
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    uint64_t v25 = @"kBAJitterTimestampUpperBound";
    id v26 = [v24 analyticsControllerConfigurationForKey:v25];

    swift_unknownObjectRelease();
    sub_27E080();
    swift_unknownObjectRelease();
    sub_187A58(0, &qword_320348);
    if (swift_dynamicCast())
    {
      id v27 = v47;
      [v47 doubleValue];
      double v10 = v28;
    }
  }
  if (qword_315970 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_4BD4(v3, (uint64_t)qword_31EFB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v29, v3);
  sub_27D890();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v48 == 1)
  {
    if (qword_315978 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_4BD4(v1, (uint64_t)qword_31EFD0);
    uint64_t v31 = v45;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
    uint64_t v33 = v43;
    v32(v43, v30, v1);
    sub_27D890();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v33, v1);
    uint64_t v35 = v48;
    if (qword_315980 != -1) {
      swift_once();
    }
    double v16 = (double)v35;
    uint64_t v36 = sub_4BD4(v1, (uint64_t)qword_31EFE8);
    v32(v33, v36, v1);
    sub_27D890();
    v34(v33, v1);
    double v10 = (double)v48;
    goto LABEL_20;
  }
  if (v44)
  {
LABEL_20:
    uint64_t v37 = v46;
    *long long v46 = v16;
    v37[1] = v10;
    uint64_t v38 = enum case for TimestampJitter.enabled(_:);
    uint64_t v39 = sub_27D460();
    return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v37, v38, v39);
  }
  uint64_t v41 = enum case for TimestampJitter.disabled(_:);
  uint64_t v42 = sub_27D460();
  return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v46, v41, v42);
}

uint64_t sub_17A85C()
{
  uint64_t v1 = sub_27D630();
  __chkstk_darwin(v1);
  uint64_t v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  *(void *)uint64_t v3 = 1;
  (*(void (**)(char *, void))(v4 + 104))(v3, enum case for LoggingEventProcessorFormat.json(_:));
  sub_27D570();
  swift_allocObject();
  sub_27D560();
  uint64_t v5 = (void *)(v0 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  if (*v5)
  {
    swift_retain();
    sub_27D3B0();
    swift_release();
    swift_retain();
    sub_27D4A0();
    swift_release();
    swift_release();
  }
  if (qword_3159E8 != -1) {
    swift_once();
  }
  uint64_t v6 = (char *)qword_31FB10;
  double v7 = (void **)(qword_31FB10 + OBJC_IVAR___BAAppManager_uploadBatchEventConfig);
  swift_beginAccess();
  double v8 = *v7;
  if (*v7)
  {
    sub_27D620();
    double v9 = *(void **)&v6[OBJC_IVAR___BAAppManager_client];
    id v10 = v8;
    id v11 = v9;
    uint64_t v12 = v6;
    sub_27D610();
    if (*v5)
    {
      swift_retain();
      sub_27D3B0();
      swift_release();
      swift_retain();
      sub_27D4A0();
      swift_release();
      swift_release();
    }
    swift_release();
  }
  if (*(void *)&v6[OBJC_IVAR___BAAppManager_debugProcessor] && *v5)
  {
    swift_retain();
    swift_retain();
    sub_27D3B0();
    swift_release();
    sub_187E70((unint64_t *)&unk_320390, (void (*)(uint64_t))type metadata accessor for DebugEventProcessor);
    swift_retain();
    sub_27D4A0();
    swift_release();
    swift_release_n();
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return swift_release();
  }
  id v14 = [Strong additionalEventProcessors];
  swift_unknownObjectRelease();
  uint64_t v15 = sub_27DEF0();

  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = v15 + 32;
    swift_bridgeObjectRetain();
    uint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_46D80(v17, (uint64_t)v29);
      sub_46D80((uint64_t)v29, (uint64_t)v27);
      sub_4E04(&qword_320388);
      if ((swift_dynamicCast() & 1) == 0) {
        long long v28 = 0uLL;
      }
      sub_5E94((uint64_t)v29);
      if ((void)v28)
      {
        long long v26 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_266C58(0, v18[2] + 1, 1, v18);
        }
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        long long v21 = v26;
        if (v20 >= v19 >> 1)
        {
          double v22 = sub_266C58((void *)(v19 > 1), v20 + 1, 1, v18);
          long long v21 = v26;
          uint64_t v18 = v22;
        }
        v18[2] = v20 + 1;
        *(_OWORD *)&v18[2 * v20 + 4] = v21;
      }
      v17 += 32;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
    uint64_t v23 = v18[2];
    if (v23) {
      goto LABEL_25;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v23 = _swiftEmptyArrayStorage[2];
  if (!v23)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v24 = v18 + 5;
  do
  {
    if (*v5)
    {
      swift_unknownObjectRetain();
      swift_retain();
      sub_27D3B0();
      swift_release();
      sub_27D4A0();
      swift_unknownObjectRelease();
      swift_release();
    }
    v24 += 2;
    --v23;
  }
  while (v23);
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_17ADFC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_27CF70();
  double v7 = *(uint64_t **)(v6 - 8);
  uint64_t v109 = v6;
  v110 = v7;
  __chkstk_darwin(v6);
  v100 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4E04(&qword_320048);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v94 - v13;
  uint64_t v15 = sub_4E04(&qword_320050);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  v101 = (char *)&v94 - v20;
  __chkstk_darwin(v19);
  double v22 = (char *)&v94 - v21;
  v113._countAndFlagsBits = 0x6C7070612E6D6F63;
  v113._object = (void *)0xEA00000000002E65;
  if (sub_27DE80(v113))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a3 = 0xE500000000000000;
    a2 = 0x726568746FLL;
  }
  char v23 = sub_27CF90();
  unint64_t v107 = a3;
  uint64_t v108 = v3;
  v105 = v22;
  uint64_t v106 = a2;
  if (v23)
  {
    id v25 = objc_allocWithZone((Class)NSString);
    unint64_t v26 = 0xE800000000000000;
    NSString v27 = sub_27DDA0();
    id v28 = [v25 initWithString:v27];

    sub_27CFA0();
    NSString v29 = sub_27DDA0();
    swift_bridgeObjectRelease();
    id v30 = [v28 stringByAppendingPathExtension:v29];

    if (v30)
    {
      uint64_t v31 = sub_27DDB0();
      unint64_t v26 = v32;
    }
    else
    {
      uint64_t v31 = 0x6465746361646572;
    }
    uint64_t v45 = v109;
    sub_27CF30();
    long long v46 = (unsigned int (*)(char *, uint64_t, uint64_t))v110[6];
    if (v46(v12, 1, v45))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = self;
      sub_4E04(&qword_320058);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_298970;
      *(void *)(v50 + 32) = 47;
      *(void *)(v50 + 40) = 0xE100000000000000;
      *(void *)(v50 + 48) = 0x6465746361646572;
      *(void *)(v50 + 56) = 0xE800000000000000;
      *(void *)(v50 + 64) = v31;
      *(void *)(v50 + 72) = v26;
      Class isa = sub_27DEE0().super.isa;
      uint64_t v45 = v109;
      swift_bridgeObjectRelease();
      id v52 = [v49 pathWithComponents:isa];

      sub_27DDB0();
      sub_27CF50();
    }
    if (v46(v12, 1, v45))
    {
      uint64_t v53 = sub_27CFF0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v18, 1, 1, v53);
    }
    else
    {
      long long v63 = v110;
      uint64_t v64 = v100;
      ((void (*)(char *, char *, uint64_t))v110[2])(v100, v12, v45);
      sub_27CF40();
      ((void (*)(char *, uint64_t))v63[1])(v64, v45);
    }
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = (uint64_t)v18;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v102 = 0;
    uint64_t v61 = (uint64_t)v12;
    uint64_t v62 = 0;
    goto LABEL_35;
  }
  sub_27CFC0(v24);
  uint64_t v34 = v33;
  id v35 = [v33 bu_dictionaryForQueryItems];

  uint64_t v36 = sub_27DD70();
  if (!*(void *)(v36 + 16))
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
    uint64_t v96 = 0;
LABEL_23:
    uint64_t v95 = 0;
    uint64_t v111 = 0;
    goto LABEL_24;
  }
  unint64_t v37 = sub_E12C(0x6E676961706D6163, 0xEB0000000064695FLL);
  if (v38)
  {
    uint64_t v39 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v37);
    uint64_t v40 = v39[1];
    uint64_t v96 = *v39;
    swift_bridgeObjectRetain();
    if (*(void *)(v36 + 16)) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  uint64_t v96 = 0;
  uint64_t v40 = 0;
  if (!*(void *)(v36 + 16))
  {
LABEL_22:
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    goto LABEL_23;
  }
LABEL_10:
  unint64_t v41 = sub_E12C(29795, 0xE200000000000000);
  if (v42)
  {
    objc_super v43 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v41);
    uint64_t v44 = *v43;
    uint64_t v111 = v43[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v111 = 0;
  }
  uint64_t v87 = *(void *)(v36 + 16);
  uint64_t v95 = v44;
  if (!v87)
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    goto LABEL_24;
  }
  unint64_t v88 = sub_E12C(29793, 0xE200000000000000);
  if ((v89 & 1) == 0)
  {
    uint64_t v48 = 0;
    uint64_t v47 = 0;
    if (*(void *)(v36 + 16)) {
      goto LABEL_43;
    }
LABEL_24:
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    goto LABEL_25;
  }
  v90 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v88);
  uint64_t v48 = *v90;
  uint64_t v47 = v90[1];
  swift_bridgeObjectRetain();
  if (!*(void *)(v36 + 16)) {
    goto LABEL_24;
  }
LABEL_43:
  unint64_t v91 = sub_E12C(0x7463737469, 0xE500000000000000);
  if ((v92 & 1) == 0) {
    goto LABEL_24;
  }
  v93 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v91);
  uint64_t v65 = *v93;
  uint64_t v66 = v93[1];
  swift_bridgeObjectRetain();
LABEL_25:
  uint64_t v67 = *(void *)(v36 + 16);
  uint64_t v104 = v66;
  uint64_t v99 = v48;
  uint64_t v98 = v65;
  uint64_t v103 = v47;
  if (v67 && (unint64_t v68 = sub_E12C(0x6763737469, 0xE500000000000000), (v69 & 1) != 0))
  {
    long long v70 = v14;
    uint64_t v55 = v40;
    char v71 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v68);
    uint64_t v72 = *v71;
    uint64_t v73 = v71[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v70 = v14;
    uint64_t v55 = v40;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  uint64_t v74 = v109;
  uint64_t v97 = v72;
  swift_bridgeObjectRelease();
  uint64_t v61 = (uint64_t)v70;
  sub_27CF30();
  long long v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v110[6];
  if (!v75(v70, 1, v74)) {
    sub_27CF60();
  }
  unsigned int v76 = v75(v70, 1, v74);
  uint64_t v102 = v73;
  if (v76)
  {
    uint64_t v77 = sub_27CFF0();
    uint64_t v58 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v101, 1, 1, v77);
  }
  else
  {
    char v78 = v110;
    v79 = v100;
    ((void (*)(char *, char *, uint64_t))v110[2])(v100, v70, v74);
    uint64_t v58 = (uint64_t)v101;
    sub_27CF40();
    ((void (*)(char *, uint64_t))v78[1])(v79, v74);
  }
  uint64_t v57 = v111;
  uint64_t v54 = v96;
  uint64_t v56 = v95;
  uint64_t v62 = v99;
  uint64_t v59 = v98;
  uint64_t v60 = v97;
LABEL_35:
  uint64_t v111 = v57;
  uint64_t v80 = (uint64_t)v105;
  sub_1F78C(v58, (uint64_t)v105, &qword_320050);
  uint64_t v81 = sub_ADCF8(v61, &qword_320048);
  v110 = &v94;
  v112[0] = v54;
  v112[1] = v55;
  v112[2] = v56;
  v112[3] = v57;
  v112[4] = v62;
  v112[5] = v103;
  v112[6] = v59;
  v112[7] = v104;
  v112[8] = v60;
  v112[9] = v102;
  __chkstk_darwin(v81);
  unint64_t v82 = v107;
  *(&v94 - 4) = v106;
  *(&v94 - 3) = v82;
  *(&v94 - 2) = v80;
  *(&v94 - 1) = (uint64_t)v112;
  uint64_t v84 = v83 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v83 + 16);
  v85 = (os_unfair_lock_s *)(v83 + ((*(unsigned int *)(*(void *)v83 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v85);
  sub_1842EC(v84);
  os_unfair_lock_unlock(v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_17D480();
  return sub_ADCF8(v80, &qword_320050);
}

uint64_t sub_17B78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  uint64_t v48 = a5[1];
  uint64_t v49 = v10;
  uint64_t v11 = a5[2];
  uint64_t v46 = a5[3];
  uint64_t v47 = v11;
  uint64_t v12 = a5[4];
  uint64_t v44 = a5[5];
  uint64_t v45 = v12;
  uint64_t v13 = a5[6];
  uint64_t v42 = a5[7];
  uint64_t v43 = v13;
  uint64_t v14 = a5[8];
  uint64_t v40 = a5[9];
  uint64_t v41 = v14;
  uint64_t v15 = sub_4E04(&qword_320050);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for AnalyticsController.LockProtectedData();
  uint64_t v19 = (uint64_t *)(a1 + v18[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v19 = a2;
  v19[1] = a3;
  sub_187D9C(a4, a1 + v18[6]);
  sub_46D1C(a4, (uint64_t)v17, &qword_320050);
  uint64_t v20 = sub_27CFF0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
  {
    sub_ADCF8((uint64_t)v17, &qword_320050);
  }
  else
  {
    uint64_t v39 = a2;
    uint64_t v22 = sub_27CFB0();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
    uint64_t v50 = v22;
    uint64_t v51 = v24;
    sub_187820();
    if (sub_27DF60())
    {
      id v25 = (uint64_t *)(a1 + v18[8]);
      uint64_t v26 = *v25;
      uint64_t v38 = v25[1];
      uint64_t v27 = v25[2];
      uint64_t v28 = v25[3];
      swift_bridgeObjectRetain();
      sub_2077C(v26, v38, v27, v28);
      uint64_t *v25 = v39;
      v25[1] = a3;
      v25[2] = v22;
      v25[3] = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  NSString v29 = (uint64_t *)(a1 + v18[9]);
  uint64_t v30 = *v29;
  uint64_t v38 = v29[1];
  uint64_t v39 = v30;
  v37[1] = v29[2];
  sub_187E04((uint64_t)a5);
  uint64_t result = sub_187990(v39, v38);
  uint64_t v32 = v48;
  *NSString v29 = v49;
  v29[1] = v32;
  uint64_t v33 = v46;
  void v29[2] = v47;
  v29[3] = v33;
  uint64_t v34 = v44;
  v29[4] = v45;
  v29[5] = v34;
  uint64_t v35 = v42;
  v29[6] = v43;
  v29[7] = v35;
  uint64_t v36 = v40;
  v29[8] = v41;
  v29[9] = v36;
  return result;
}

uint64_t sub_17BB6C(uint64_t a1)
{
  if (a1)
  {
    a1 = sub_DE8DC(v15);
    uint64_t v2 = v15[0];
  }
  else
  {
    uint64_t v2 = 0;
  }
  __chkstk_darwin(a1);
  uint64_t v4 = v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_18430C(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (void **)(v1 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
  swift_beginAccess();
  double v7 = (char *)*v6;
  if (*v6)
  {
    uint64_t v8 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory];
    uint64_t v10 = v7;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
    sub_15A9A0((void **)(v9 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
    swift_release();
    sub_15ACAC();
    uint64_t v11 = sub_27D760();
    if (v2)
    {
      v14[0] = v14;
      v14[1] = v2;
      uint64_t v12 = *(void *)&v7[v8];
      __chkstk_darwin(v11);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
      sub_184BB4((void **)(v12 + 16));
      os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
      swift_release();
      sub_27D780();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_17D480();
}

uint64_t sub_17BE40()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_184BD4(v2);
  os_unfair_lock_unlock(v3);
  return sub_17D480();
}

uint64_t sub_17BEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 44);
  if (*(void *)(a1 + v6)) {
    double v7 = *(void **)(a1 + v6);
  }
  else {
    double v7 = _swiftEmptyArrayStorage;
  }
  sub_187D48();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_27E070();
  if (!v8[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v24 = a2;
  uint64_t v25 = v6;
  uint64_t v10 = v8[4];
  uint64_t v9 = (void *)v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[2];
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v6 = v25;
    a2 = v24;
    goto LABEL_13;
  }
  uint64_t v23 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v12 = v7 + 5;
  while (1)
  {
    uint64_t v13 = *(v12 - 1);
    uint64_t v14 = *v12;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v10;
    v26._object = v9;
    if (sub_27DE80(v26)) {
      break;
    }
    v12 += 2;
    swift_bridgeObjectRelease();
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a1 = v23;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v19 = sub_17C178(v13, v14, v7);
  char v21 = v20;
  swift_bridgeObjectRelease();
  a1 = v23;
  uint64_t v6 = v25;
  a2 = v24;
  if (v21)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v7 = sub_266D68(0, v7[2] + 1, 1, v7);
    }
    unint64_t v16 = v7[2];
    unint64_t v15 = v7[3];
    if (v16 >= v15 >> 1) {
      double v7 = sub_266D68((void *)(v15 > 1), v16 + 1, 1, v7);
    }
    v7[2] = v16 + 1;
    uint64_t v17 = &v7[2 * v16];
    v17[4] = a2;
    v17[5] = a3;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v19 & 0x8000000000000000) == 0) {
      goto LABEL_22;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (uint64_t)sub_2570D0(v7);
  double v7 = (void *)result;
  if ((v19 & 0x8000000000000000) != 0) {
    goto LABEL_25;
  }
LABEL_22:
  if (v19 < v7[2])
  {
    uint64_t v22 = &v7[2 * v19];
    v22[4] = v24;
    v22[5] = a3;
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + v6) = v7;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_17C178(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_27E370() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_27E370();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

void sub_17C33C()
{
  *(unsigned char *)(v0 + OBJC_IVAR___BAAnalyticsController_launchedFromShortcutItem) = 1;
}

void sub_17C364()
{
  *(unsigned char *)(v0 + OBJC_IVAR___BAAnalyticsController_launchedFromShortcutItem) = 0;
}

uint64_t sub_17C384(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v3 = sub_27DC40();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_27DC70();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_27D9B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_315650 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_4BD4(v6, (uint64_t)qword_318748);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = v2;
  uint64_t v12 = sub_27D990();
  int v13 = sub_27DF90();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v44 = v13;
    os_log_t v45 = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v54 = v43;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = *(void *)&v11[OBJC_IVAR___BAAnalyticsController_lockProtectedData];
    uint64_t v16 = v15 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v15 + 16);
    uint64_t v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v17);
    sub_179230(v16, &aBlock);
    os_unfair_lock_unlock(v17);
    if (v56) {
      uint64_t v18 = aBlock;
    }
    else {
      uint64_t v18 = 0x6E776F6E6B6E753CLL;
    }
    if (v56) {
      unint64_t v19 = v56;
    }
    else {
      unint64_t v19 = 0xE90000000000003ELL;
    }
    uint64_t aBlock = sub_12D450(v18, v19, (uint64_t *)&v54);
    sub_27E050();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    os_unfair_lock_lock(v17);
    sub_179250(v16, &aBlock);
    os_unfair_lock_unlock(v17);
    if (v56) {
      uint64_t v20 = aBlock;
    }
    else {
      uint64_t v20 = 0x6E776F6E6B6E753CLL;
    }
    if (v56) {
      unint64_t v21 = v56;
    }
    else {
      unint64_t v21 = 0xE90000000000003ELL;
    }
    uint64_t aBlock = sub_12D450(v20, v21, (uint64_t *)&v54);
    sub_27E050();

    swift_bridgeObjectRelease();
    os_log_t v22 = v45;
    _os_log_impl(&dword_0, v45, (os_log_type_t)v44, "ResetIDBegin: currentAnalyticsID = %s, currentUserPrivateSeed = %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v23 = *(void **)&v11[OBJC_IVAR___BAAnalyticsController_privateDataSource];
  id v24 = [v23 generatePrivateData:v43];
  uint64_t v25 = sub_27DD70();

  __chkstk_darwin(v26);
  *(&v43 - 2) = (void *)v25;
  uint64_t v28 = v27 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v27 + 16);
  NSString v29 = (os_unfair_lock_s *)(v27 + ((*(unsigned int *)(*(void *)v27 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v29);
  sub_184BF0(v28, &aBlock);
  os_unfair_lock_unlock(v29);
  sub_182C60((uint64_t)v11);
  Class isa = sub_27DD60().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v31 = swift_allocObject();
  uint64_t v33 = v46;
  uint64_t v32 = v47;
  *(void *)(v31 + 16) = v46;
  *(void *)(v31 + 24) = v32;
  uint64_t v59 = sub_184C4C;
  uint64_t v60 = v31;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_1788EC;
  uint64_t v58 = &unk_305CF8;
  uint64_t v34 = _Block_copy(&aBlock);
  sub_184C94(v33);
  swift_release();
  [v23 syncPrivateData:isa toCloudWithCompletion:v34];
  _Block_release(v34);

  uint64_t v35 = *(void **)&v11[OBJC_IVAR___BAAnalyticsController_workQueue];
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v59 = sub_184CDC;
  uint64_t v60 = v36;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_1788EC;
  uint64_t v58 = &unk_305D48;
  unint64_t v37 = _Block_copy(&aBlock);
  id v38 = v35;
  swift_retain();
  uint64_t v39 = v48;
  sub_27DC60();
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_4E04((uint64_t *)&unk_320070);
  sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
  uint64_t v40 = v50;
  uint64_t v41 = v53;
  sub_27E090();
  sub_27E010();
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v51);
  swift_release();
  return swift_release();
}

uint64_t sub_17CBC8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_17CC0C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent) = 1;
    *(unsigned char *)(Strong + OBJC_IVAR___BAAnalyticsController_userIDResetEventPending) = 1;
    sub_17CC7C();
  }
}

void sub_17CC7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_27DCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___BAAnalyticsController_workQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_27DCC0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR___BAAnalyticsController_sessionState) == 1)
    {
      uint64_t v8 = OBJC_IVAR___BAAnalyticsController_userIDResetEventPending;
      if (*(unsigned char *)(v1 + OBJC_IVAR___BAAnalyticsController_userIDResetEventPending) == 1)
      {
        uint64_t v9 = (void **)(v1 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
        swift_beginAccess();
        uint64_t v10 = *v9;
        if (*v9)
        {
          type metadata accessor for ResetPrivateIDsEvent(0);
          sub_187E70(&qword_320290, (void (*)(uint64_t))type metadata accessor for ResetPrivateIDsEvent);
          id v11 = v10;
          sub_27D7B0();
        }
        *(unsigned char *)(v1 + v8) = 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_17CF18(double a1)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v45 - v6;
  uint64_t v52 = sub_27D0A0();
  uint64_t v8 = *(void *)(v52 - 8);
  uint64_t v9 = __chkstk_darwin(v52);
  uint64_t v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v45 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - v13;
  if (qword_315650 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_27D9B0();
  uint64_t v45 = sub_4BD4(v15, (uint64_t)qword_318748);
  uint64_t v16 = sub_27D990();
  os_log_type_t v17 = sub_27DF90();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    double v54 = a1;
    sub_27E050();
    _os_log_impl(&dword_0, v16, v17, "waitForSessionEnd timeout is: %f", v18, 0xCu);
    swift_slowDealloc();
  }

  sub_27D090();
  uint64_t v20 = v51;
  uint64_t v19 = v52;
  if (a1 <= 0.0)
  {
    uint64_t v21 = 1;
  }
  else
  {
    sub_27D050();
    uint64_t v21 = 0;
  }
  uint64_t v47 = v14;
  uint64_t v48 = v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, v21, 1, v19);
  uint64_t v53 = OBJC_IVAR___BAAnalyticsController_sessionStateCondition;
  [*(id *)(v20 + OBJC_IVAR___BAAnalyticsController_sessionStateCondition) lock];
  uint64_t v22 = OBJC_IVAR___BAAnalyticsController_sessionState;
  BOOL v23 = *(unsigned char *)(v20 + OBJC_IVAR___BAAnalyticsController_sessionState) == 0;
  if (*(unsigned char *)(v20 + OBJC_IVAR___BAAnalyticsController_sessionState) && a1 != 0.0)
  {
    id v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    uint64_t v49 = (void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v25 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v26 = &qword_320080;
    do
    {
      sub_46D1C((uint64_t)v7, (uint64_t)v5, v26);
      if ((*v24)(v5, 1, v19) == 1)
      {
        sub_ADCF8((uint64_t)v5, v26);
        [*(id *)(v20 + v53) wait];
        int v27 = 0;
      }
      else
      {
        uint64_t v28 = v26;
        NSString v29 = v50;
        (*v49)(v50, v5, v19);
        id v30 = *(id *)(v20 + v53);
        Class isa = sub_27D030().super.isa;
        uint64_t v32 = v7;
        unsigned int v33 = [v30 waitUntilDate:isa];

        uint64_t v19 = v52;
        uint64_t v34 = v29;
        uint64_t v26 = v28;
        (*v25)(v34, v52);
        int v27 = v33 ^ 1;
        id v7 = v32;
        uint64_t v20 = v51;
      }
      BOOL v23 = *(unsigned char *)(v20 + v22) == 0;
    }
    while (*(unsigned char *)(v20 + v22) && !v27);
  }
  [*(id *)(v20 + v53) unlock];
  uint64_t v35 = v46;
  sub_27D090();
  uint64_t v36 = v47;
  sub_27D020();
  double v38 = v37;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v48 + 8);
  v39(v35, v19);
  uint64_t v40 = sub_27D990();
  os_log_type_t v41 = sub_27DF90();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = v7;
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 134217984;
    double v54 = v38;
    sub_27E050();
    _os_log_impl(&dword_0, v40, v41, "waitForSessionEnd took: %f", v43, 0xCu);
    id v7 = v42;
    swift_slowDealloc();
  }

  sub_ADCF8((uint64_t)v7, &qword_320080);
  v39(v36, v52);
  return v23;
}

uint64_t sub_17D480()
{
  uint64_t v1 = sub_27DC40();
  uint64_t v14 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_27DC70();
  uint64_t v4 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)(v0 + OBJC_IVAR___BAAnalyticsController_workQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_184D34;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1788EC;
  aBlock[3] = &unk_305D70;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v7;
  swift_retain();
  sub_27DC60();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_4E04((uint64_t *)&unk_320070);
  sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
  sub_27E090();
  sub_27E010();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

void sub_17D754()
{
  uint64_t v0 = sub_27DCA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (unsigned char *)Strong;
    swift_beginAccess();
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      swift_beginAccess();
      id v7 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v7)
      {
        LOBYTE(v6) = [v7 analyticsSessionDataIsPriceDropNotificationEnabled];
        swift_unknownObjectRelease();
      }
      else
      {
        LOBYTE(v6) = 0;
      }
    }
    v5[OBJC_IVAR___BAAnalyticsController_priceDropNotificationsEnabled] = (_BYTE)v6;
  }
  swift_beginAccess();
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = (unsigned char *)v8;
    id v10 = *(void **)(v8 + OBJC_IVAR___BAAnalyticsController_workQueue);
    *uint64_t v3 = v10;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    id v11 = v10;
    LOBYTE(v10) = sub_27DCC0();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v10)
    {
      if (v9[OBJC_IVAR___BAAnalyticsController_sessionState] == 1) {
        sub_17E208();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_17D9B4(unsigned __int8 a1)
{
  uint64_t v3 = sub_27DCA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = *(void **)(v1 + OBJC_IVAR___BAAnalyticsController_workQueue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = sub_27DCC0();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v10 = OBJC_IVAR___BAAnalyticsController_sessionStateCondition;
    [*(id *)(v1 + OBJC_IVAR___BAAnalyticsController_sessionStateCondition) lock];
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR___BAAnalyticsController_sessionState) != a1)
    {
      *(unsigned char *)(v1 + OBJC_IVAR___BAAnalyticsController_sessionState) = a1;
      [*(id *)(v1 + v10) broadcast];
    }
    return [*(id *)(v1 + v10) unlock];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_17DB18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_27D0A0();
  uint64_t v45 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_27D6F0();
  uint64_t v4 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_27D0D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_27DCA0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = OBJC_IVAR___BAAnalyticsController_workQueue;
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR___BAAnalyticsController_workQueue);
  *uint64_t v13 = v14;
  uint64_t v15 = *(void (**)(void))(v11 + 104);
  unsigned int v37 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v39 = v11 + 104;
  uint64_t v36 = (void (*)(void *, void, uint64_t))v15;
  v15(v13);
  id v16 = v14;
  LOBYTE(v14) = sub_27DCC0();
  os_log_type_t v17 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v40 = v10;
  uint64_t v35 = v17;
  uint64_t v34 = v11 + 8;
  v17(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v41 = v2;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong analyticsControllerWillStartSession:v1];
    swift_unknownObjectRelease();
  }
  sub_27D0C0();
  sub_27D0B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v19 = (void *)(v1 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  if (*v19)
  {
    uint64_t v20 = v42;
    uint64_t v21 = v44;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v42, enum case for Session.Kind.userEvents(_:), v44);
    swift_retain();
    uint64_t v22 = v43;
    sub_27D090();
    sub_27D3F0();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v41);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v20, v21);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v24 = v23 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v23 + 16);
  uint64_t v25 = (os_unfair_lock_s *)(v23 + ((*(unsigned int *)(*(void *)v23 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v25);
  sub_17E138(v24);
  os_unfair_lock_unlock(v25);
  uint64_t v26 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v26)
  {
    [v26 analyticsControllerDidStartSession:v1];
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent) != 1)
  {
    uint64_t v31 = *(void **)(v1 + OBJC_IVAR___BAAnalyticsController_privateDataSource);
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1876C8;
    aBlock[5] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_17F8AC;
    aBlock[3] = &unk_305FE0;
    unsigned int v33 = _Block_copy(aBlock);
    swift_release();
    [v31 fetchPrivateData:v33];
    _Block_release(v33);
    return;
  }
  sub_17E208();
  int v27 = *(void **)(v1 + v38);
  *uint64_t v13 = v27;
  uint64_t v28 = v40;
  v36(v13, v37, v40);
  id v29 = v27;
  LOBYTE(v27) = sub_27DCC0();
  v35(v13, v28);
  if ((v27 & 1) == 0)
  {
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v30 = OBJC_IVAR___BAAnalyticsController_privateDataQueueActive;
  if ((*(unsigned char *)(v1 + OBJC_IVAR___BAAnalyticsController_privateDataQueueActive) & 1) == 0)
  {
    dispatch_resume(*(dispatch_object_t *)(v1 + OBJC_IVAR___BAAnalyticsController_privateDataQueue));
    *(unsigned char *)(v1 + v30) = 1;
  }
}

uint64_t sub_17E138(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_27D090();
  uint64_t v5 = sub_27D0A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  return sub_187AE0((uint64_t)v4, a1);
}

void sub_17E208()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_4E04(&qword_320298);
  uint64_t v106 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v105 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_4E04(&qword_3202A0);
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_3202A8);
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  __chkstk_darwin(v7);
  v79 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4E04(&qword_3202B0);
  uint64_t v103 = *(void *)(v9 - 8);
  uint64_t v104 = v9;
  __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_4E04(&qword_3202B8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_4E04(&qword_3202C0);
  uint64_t v100 = *(void *)(v15 - 8);
  uint64_t v101 = v15;
  __chkstk_darwin(v15);
  uint64_t v99 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_4E04(&qword_3202C8);
  uint64_t v87 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  __chkstk_darwin(v17);
  v86 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_4E04(&qword_3202D0);
  uint64_t v93 = *(void *)(v19 - 8);
  uint64_t v94 = v19;
  __chkstk_darwin(v19);
  char v89 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_27DCA0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void **)(v2 + OBJC_IVAR___BAAnalyticsController_workQueue);
  *uint64_t v24 = v25;
  (*(void (**)(void *, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  id v26 = v25;
  LOBYTE(v25) = sub_27DCC0();
  int v27 = (os_unfair_lock_s *)(*(uint64_t (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  if (v25)
  {
    uint64_t v95 = v14;
    uint64_t v96 = v12;
    uint64_t v97 = v11;
    uint64_t v98 = v3;
    uint64_t v28 = *(void *)(v2 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
    uint64_t v29 = v28 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v28 + 16);
    uint64_t v30 = (os_unfair_lock_s *)(v28 + ((*(unsigned int *)(*(void *)v28 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v30);
    sub_17FDE4(v29, (uint64_t)&v126);
    os_unfair_lock_unlock(v30);
    uint64_t v31 = *((void *)&v128 + 1);
    uint64_t v32 = v129;
    uint64_t v33 = v130;
    uint64_t v34 = v131;
    uint64_t v110 = v139;
    uint64_t v111 = v135;
    v114 = v132;
    uint64_t v115 = v2;
    uint64_t v112 = v134;
    uint64_t v113 = v133;
    uint64_t v108 = v137;
    uint64_t v109 = v136;
    uint64_t v107 = v138;
    if (*((void *)&v128 + 1))
    {
      uint64_t v83 = v131;
      uint64_t v84 = v130;
      uint64_t v85 = v129;
      uint64_t v35 = v126;
      uint64_t v36 = v127;
      uint64_t v82 = v128;
      sub_4E04(&qword_319FE0);
      uint64_t v37 = sub_27D380();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(void *)(v38 + 72);
      unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_283E30;
      unint64_t v42 = v41 + v40;
      uint64_t v43 = *(void (**)(unint64_t, void, uint64_t))(v38 + 104);
      v43(v41 + v40, enum case for DataEventTrait.onlyOnce(_:), v37);
      v43(v42 + v39, enum case for DataEventTrait.unique(_:), v37);
      uint64_t v44 = v35;
      uint64_t v45 = (void *)(v115 + OBJC_IVAR___BAAnalyticsController_sessionManager);
      uint64_t v46 = v82;
      swift_beginAccess();
      if (*v45)
      {
        uint64_t v126 = v44;
        unint64_t v127 = v36;
        *(void *)&long long v128 = v46;
        *((void *)&v128 + 1) = v31;
        sub_1F298(v44, v36, v46, v31);
        sub_187A04();
        swift_retain();
        uint64_t v47 = v89;
        sub_27D260();
        sub_27D3E0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v47, v94);
      }
      swift_bridgeObjectRelease();
      sub_2077C(v44, v36, v46, v31);
      uint64_t v2 = v115;
      uint64_t v33 = v84;
      uint64_t v32 = v85;
      uint64_t v34 = v83;
    }
    if (v33 != 1)
    {
      sub_4E04(&qword_319FE0);
      uint64_t v48 = sub_27D380();
      uint64_t v49 = *(void *)(v48 - 8);
      unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_285930;
      (*(void (**)(unint64_t, void, uint64_t))(v49 + 104))(v51 + v50, enum case for DataEventTrait.onlyOnce(_:), v48);
      uint64_t v52 = (void *)(v2 + OBJC_IVAR___BAAnalyticsController_sessionManager);
      swift_beginAccess();
      if (*v52)
      {
        uint64_t v126 = v32;
        unint64_t v127 = v33;
        *(void *)&long long v128 = v34;
        *((void *)&v128 + 1) = v114;
        uint64_t v129 = v113;
        uint64_t v130 = v112;
        v131 = v111;
        v132 = v109;
        uint64_t v133 = v108;
        uint64_t v134 = v107;
        sub_1878C8(v32, v33);
        sub_18793C();
        swift_retain();
        uint64_t v53 = v86;
        sub_27D260();
        sub_27D3E0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v88);
      }
      swift_bridgeObjectRelease();
      sub_187990(v32, v33);
    }
    sub_17FE90((uint64_t)&v126);
    int v54 = v126;
    unint64_t v55 = v127;
    uint64_t v56 = *((void *)&v128 + 1);
    uint64_t v112 = v129;
    uint64_t v113 = v128;
    char v57 = v130;
    char v58 = BYTE1(v130);
    uint64_t v59 = v2;
    char v60 = BYTE2(v130);
    uint64_t v61 = v131;
    uint64_t v111 = v132;
    v1.i32[0] = v133;
    LODWORD(v109) = BYTE4(v133);
    LODWORD(v108) = BYTE5(v133);
    LODWORD(v107) = BYTE6(v133);
    LODWORD(v94) = HIBYTE(v133);
    LODWORD(v93) = v134;
    uint64_t v62 = (void *)(v59 + OBJC_IVAR___BAAnalyticsController_sessionManager);
    char v63 = BYTE1(v134);
    swift_beginAccess();
    v114 = v62;
    if (*v62)
    {
      LODWORD(v116) = v54;
      unint64_t v117 = v55;
      *(void *)&long long v118 = v113;
      *((void *)&v118 + 1) = v56;
      uint64_t v119 = v112;
      LOBYTE(v120) = v57;
      BYTE1(v120) = v58;
      BYTE2(v120) = v60;
      v121 = v61;
      v122 = v111;
      LODWORD(v123) = vmovn_s16((int16x8_t)vmovl_u8(v1)).u32[0];
      BYTE4(v123) = (_BYTE)v109;
      BYTE5(v123) = v108;
      BYTE6(v123) = v107;
      HIBYTE(v123) = v94;
      char v124 = v93;
      char v125 = v63;
      sub_1876D0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v64 = v99;
      sub_27D260();
      sub_27D3E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v64, v101);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_180FCC(&v126);
    uint64_t v65 = v114;
    if (*v114)
    {
      uint64_t v116 = v126;
      unint64_t v117 = v127;
      long long v118 = v128;
      uint64_t v119 = v129;
      uint64_t v120 = v130;
      v121 = v131;
      sub_187724();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v66 = v95;
      sub_27D260();
      sub_27D3E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v66, v97);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_181614((uint64_t)&v126);
    if (*v65)
    {
      uint64_t v116 = v126;
      unint64_t v117 = v127;
      long long v118 = v128;
      LOBYTE(v119) = v129;
      uint64_t v120 = v130;
      v121 = v131;
      v122 = v132;
      uint64_t v123 = v133;
      sub_187778();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v67 = v102;
      sub_27D260();
      sub_27D3E0();
      swift_release();
      unint64_t v68 = v67;
      uint64_t v65 = v114;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v68, v104);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_184DA8();
    uint64_t v71 = v110;
    if (v70)
    {
      uint64_t v72 = v69;
      uint64_t v73 = v70;
      uint64_t v126 = v69;
      unint64_t v127 = (unint64_t)v70;
      sub_187820();
      if (sub_27DF60())
      {
        uint64_t v126 = 0x6C6975625F707061;
        unint64_t v127 = 0xEA00000000003D64;
        v140._countAndFlagsBits = v72;
        v140._object = v73;
        sub_27DE00(v140);
        swift_bridgeObjectRelease();
        if (*v65)
        {
          sub_187874();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v74 = v79;
          sub_27D260();
          sub_27D3E0();
          swift_release();
          long long v75 = v74;
          uint64_t v71 = v110;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v75, v81);
        }
      }
      swift_bridgeObjectRelease();
    }
    if (v71)
    {
      if (*v65)
      {
        uint64_t v126 = v71;
        sub_15ACAC();
        swift_bridgeObjectRetain();
        swift_retain();
        unsigned int v76 = v90;
        sub_27D260();
        sub_27D3E0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v76, v92);
      }
      swift_bridgeObjectRelease();
    }
    sub_1817AC(&v126);
    if (*v65)
    {
      uint64_t v116 = v126;
      unint64_t v117 = v127;
      long long v118 = v128;
      uint64_t v119 = v129;
      sub_1877CC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v77 = v105;
      sub_27D260();
      sub_27D3E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v77, v98);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
    os_unfair_lock_unlock(v27);
    __break(1u);
  }
}

uint64_t sub_17F2C4(uint64_t a1)
{
  uint64_t v2 = sub_27DC40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_27DC70();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    id v18 = *(id *)(result + OBJC_IVAR___BAAnalyticsController_workQueue);

    uint64_t v12 = swift_allocObject();
    uint64_t v19 = v6;
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_187AD8;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1788EC;
    aBlock[3] = &unk_306030;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_27DC60();
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_4E04((uint64_t *)&unk_320070);
    sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
    sub_27E090();
    uint64_t v16 = v18;
    sub_27E010();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_17F614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_27DCA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (unsigned char *)Strong;
    __chkstk_darwin(Strong);
    *(&v17 - 2) = a2;
    uint64_t v10 = v9 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v9 + 16);
    uint64_t v11 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v11);
    sub_188094(v10, v18);
    os_unfair_lock_unlock(v11);
    sub_182C60((uint64_t)v8);
    swift_beginAccess();
    uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v12)
    {
      unsigned __int8 v13 = [v12 analyticsSessionDataIsPriceDropNotificationEnabled];
      swift_unknownObjectRelease();
    }
    else
    {
      unsigned __int8 v13 = 0;
    }
    v8[OBJC_IVAR___BAAnalyticsController_priceDropNotificationsEnabled] = v13;
    sub_17E208();
    v8[OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent] = 1;
    uint64_t v14 = *(void **)&v8[OBJC_IVAR___BAAnalyticsController_workQueue];
    *uint64_t v6 = v14;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
    id v15 = v14;
    LOBYTE(v14) = sub_27DCC0();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    if (v14)
    {
      uint64_t v16 = OBJC_IVAR___BAAnalyticsController_privateDataQueueActive;
      if ((v8[OBJC_IVAR___BAAnalyticsController_privateDataQueueActive] & 1) == 0)
      {
        dispatch_resume(*(dispatch_object_t *)&v8[OBJC_IVAR___BAAnalyticsController_privateDataQueue]);
        v8[v16] = 1;
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_17F8AC(uint64_t a1)
{
  uint8x8_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_27DD70();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_17F924(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D0A0();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_27DCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = OBJC_IVAR___BAAnalyticsController_workQueue;
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR___BAAnalyticsController_workQueue);
  *uint64_t v9 = v11;
  uint64_t v12 = enum case for DispatchPredicate.onQueue(_:);
  unsigned __int8 v13 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 104);
  v13(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v14 = v11;
  char v15 = sub_27DCC0();
  uint64_t v16 = *(void (**)(void *, uint64_t))(v7 + 8);
  v16(v9, v6);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v36 = v10;
  uint64_t v37 = v16;
  uint64_t v17 = *(void **)(v3 + v10);
  *uint64_t v9 = v17;
  v13(v9, v12, v6);
  id v18 = v17;
  char v19 = sub_27DCC0();
  v37(v9, v6);
  if ((v19 & 1) == 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v20 = OBJC_IVAR___BAAnalyticsController_privateDataQueueActive;
  if (*(unsigned char *)(v3 + OBJC_IVAR___BAAnalyticsController_privateDataQueueActive) == 1)
  {
    dispatch_suspend(*(dispatch_object_t *)(v3 + OBJC_IVAR___BAAnalyticsController_privateDataQueue));
    *(unsigned char *)(v3 + v20) = 0;
  }
  uint64_t v34 = v13;
  unsigned int v35 = v12;
  uint64_t v21 = (void *)(v3 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  if (*v21)
  {
    swift_retain();
    uint64_t v22 = v29;
    sub_27D090();
    sub_27D3D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
  }
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v24 = v23 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v23 + 16);
  uint64_t v25 = (os_unfair_lock_s *)(v23 + ((*(unsigned int *)(*(void *)v23 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v25);
  sub_17FCAC(v24);
  os_unfair_lock_unlock(v25);
  id v26 = *(void **)(v3 + v36);
  *uint64_t v9 = v26;
  v34(v9, v35, v6);
  id v27 = v26;
  LOBYTE(v26) = sub_27DCC0();
  v37(v9, v6);
  if ((v26 & 1) == 0) {
    goto LABEL_13;
  }
  if ((*(unsigned char *)(v3 + v20) & 1) == 0)
  {
    dispatch_resume(*(dispatch_object_t *)(v3 + OBJC_IVAR___BAAnalyticsController_privateDataQueue));
    *(unsigned char *)(v3 + v20) = 1;
  }
}

uint64_t sub_17FCAC(uint64_t a1)
{
  sub_ADCF8(a1, &qword_320080);
  uint64_t v2 = sub_27D0A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  uint64_t v3 = (int *)type metadata accessor for AnalyticsController.LockProtectedData();
  uint64_t v4 = a1 + v3[9];
  sub_187990(*(void *)v4, *(void *)(v4 + 8));
  *(_OWORD *)uint64_t v4 = xmmword_298960;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  uint64_t v5 = (void *)(a1 + v3[7]);
  swift_bridgeObjectRelease();
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = a1 + v3[6];
  sub_ADCF8(v6, &qword_320050);
  uint64_t v7 = sub_27CFF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t sub_17FDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for AnalyticsController.LockProtectedData();
  uint64_t v5 = (long long *)(a1 + v4[8]);
  long long v6 = *v5;
  long long v7 = v5[1];
  *uint64_t v5 = 0u;
  v5[1] = 0u;
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  uint64_t v8 = (uint64_t *)(a1 + v4[9]);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = v8[2];
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[4];
  uint64_t v14 = v8[5];
  uint64_t v15 = v8[6];
  uint64_t v16 = v8[7];
  uint64_t v18 = v8[8];
  uint64_t v17 = v8[9];
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = v16;
  *(void *)(a2 + 96) = v18;
  *(void *)(a2 + 104) = v17;
  *(void *)(a2 + 112) = *(void *)(a1 + v4[10]);
  sub_1878C8(v10, v9);
  return swift_bridgeObjectRetain();
}

uint64_t sub_17FE90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_320330);
  __chkstk_darwin(v3 - 8);
  uint64_t v94 = &v84[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = sub_27D150();
  uint64_t v93 = *(void *)(v100 - 8);
  uint64_t v5 = __chkstk_darwin(v100);
  uint64_t v92 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v91 = &v84[-v7];
  uint64_t v8 = sub_4E04(&qword_320338);
  __chkstk_darwin(v8 - 8);
  uint64_t v99 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v98 = sub_4E04(&qword_320340);
  __chkstk_darwin(v98);
  uint64_t v11 = (uint64_t *)&v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_4E04(&qword_320050);
  __chkstk_darwin(v12 - 8);
  uint64_t v108 = &v84[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = sub_27D170();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v106 = &v84[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = sub_27D0A0();
  uint64_t v15 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v17 = &v84[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v97 = sub_27D1A0();
  uint64_t v18 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v20 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v107 = v1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    long long v111 = 0u;
    long long v112 = 0u;
LABEL_10:
    sub_ADCF8((uint64_t)&v111, (uint64_t *)&unk_320320);
    uint64_t v23 = 0;
    goto LABEL_11;
  }
  id v22 = [Strong analyticsSessionDataForKey:@"BASessionDataKeyiCloudLoggedIn"];
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v109 = 0u;
    long long v110 = 0u;
  }
  sub_1F78C((uint64_t)&v109, (uint64_t)&v111, (uint64_t *)&unk_320320);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_10;
  }
  sub_187A58(0, &qword_320348);
  if (swift_dynamicCast()) {
    uint64_t v23 = (void *)v109;
  }
  else {
    uint64_t v23 = 0;
  }
LABEL_11:
  uint64_t v24 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v24)
  {
    long long v111 = 0u;
    long long v112 = 0u;
LABEL_20:
    sub_ADCF8((uint64_t)&v111, (uint64_t *)&unk_320320);
    id v105 = 0;
    goto LABEL_21;
  }
  id v25 = [v24 analyticsSessionDataForKey:@"BASessionDataKeyiTunesLoggedIn"];
  swift_unknownObjectRelease();
  if (v25)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v109 = 0u;
    long long v110 = 0u;
  }
  sub_1F78C((uint64_t)&v109, (uint64_t)&v111, (uint64_t *)&unk_320320);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_20;
  }
  sub_187A58(0, &qword_320348);
  int v26 = swift_dynamicCast();
  id v27 = (void *)v109;
  if (!v26) {
    id v27 = 0;
  }
  id v105 = v27;
LABEL_21:
  uint64_t v28 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v28)
  {
    long long v111 = 0u;
    long long v112 = 0u;
LABEL_30:
    sub_ADCF8((uint64_t)&v111, (uint64_t *)&unk_320320);
    id v104 = 0;
    goto LABEL_31;
  }
  id v29 = [v28 analyticsSessionDataForKey:@"BASessionDataKeyiCloudDriveOptIn"];
  swift_unknownObjectRelease();
  if (v29)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v109 = 0u;
    long long v110 = 0u;
  }
  sub_1F78C((uint64_t)&v109, (uint64_t)&v111, (uint64_t *)&unk_320320);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_30;
  }
  sub_187A58(0, &qword_320348);
  int v30 = swift_dynamicCast();
  uint64_t v31 = (void *)v109;
  if (!v30) {
    uint64_t v31 = 0;
  }
  id v104 = v31;
LABEL_31:
  uint64_t v32 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v32)
  {
    long long v111 = 0u;
    long long v112 = 0u;
LABEL_40:
    sub_ADCF8((uint64_t)&v111, (uint64_t *)&unk_320320);
    id v103 = 0;
    goto LABEL_41;
  }
  id v33 = [v32 analyticsSessionDataForKey:@"BASessionDataKeyHasWidgets"];
  swift_unknownObjectRelease();
  if (v33)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v109 = 0u;
    long long v110 = 0u;
  }
  sub_1F78C((uint64_t)&v109, (uint64_t)&v111, (uint64_t *)&unk_320320);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_40;
  }
  sub_187A58(0, &qword_320348);
  int v34 = swift_dynamicCast();
  unsigned int v35 = (void *)v109;
  if (!v34) {
    unsigned int v35 = 0;
  }
  id v103 = v35;
LABEL_41:
  uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v36)
  {
    unsigned int v89 = [v36 analyticsSessionDataIsMainWindow];
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned int v89 = 0;
  }
  uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v37)
  {
    unsigned int v88 = [v37 analyticsSessionDataIsParallel];
    swift_unknownObjectRelease();
    if (v23) {
      goto LABEL_46;
    }
  }
  else
  {
    unsigned int v88 = 0;
    if (v23)
    {
LABEL_46:
      unsigned int v87 = [v23 BOOLValue];
      id v38 = v105;
      if (v105) {
        goto LABEL_47;
      }
LABEL_51:
      unsigned int v86 = 0;
      id v39 = v103;
      if (v103) {
        goto LABEL_48;
      }
      goto LABEL_52;
    }
  }
  unsigned int v87 = 0;
  id v38 = v105;
  if (!v105) {
    goto LABEL_51;
  }
LABEL_47:
  unsigned int v86 = [v38 BOOLValue];
  id v39 = v103;
  if (v103)
  {
LABEL_48:
    unsigned int v85 = [v39 BOOLValue];
    goto LABEL_53;
  }
LABEL_52:
  unsigned int v85 = 0;
LABEL_53:
  id v90 = v23;
  if (v104 && ([v104 BOOLValue] & 1) != 0) {
    int v40 = 1;
  }
  else {
    int v40 = 2;
  }
  sub_27D190();
  sub_27D090();
  uint64_t v102 = sub_27D180();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v101);
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v97);
  sub_27D120();
  id v41 = [self currentNotificationCenter];
  id v42 = [v41 notificationSettings];

  unint64_t v43 = (unint64_t)[v42 authorizationStatus];
  id v44 = [self books];
  id v45 = [v44 userDefaults];

  LODWORD(v101) = [v45 BOOLForKey:@"BKReadingGoalsUserDefaultsKey"];
  uint64_t v46 = v107;
  uint64_t v47 = *(void *)(v107 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v48 = v47 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v47 + 16);
  uint64_t v49 = (os_unfair_lock_s *)(v47 + ((*(unsigned int *)(*(void *)v47 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v49);
  sub_183AD4(v48, v11);
  os_unfair_lock_unlock(v49);
  uint64_t v51 = *v11;
  uint64_t v50 = v11[1];
  sub_1F78C((uint64_t)v11 + *(int *)(v98 + 48), (uint64_t)v108, &qword_320050);
  if (*(unsigned char *)(v46 + OBJC_IVAR___BAAnalyticsController_launchedFromShortcutItem) == 1)
  {
    swift_bridgeObjectRelease();
    int v52 = 3;
    uint64_t v53 = v100;
    goto LABEL_81;
  }
  uint64_t v53 = v100;
  if (!v50) {
    goto LABEL_76;
  }
  if (v51 == 0xD000000000000032 && v50 == 0x80000000002B10C0
    || (sub_27E370() & 1) != 0
    || (v51 == 0xD000000000000014 && v50 == 0x80000000002B10A0 || (sub_27E370() & 1) != 0)
    && (uint64_t v54 = sub_27CFF0(),
        (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v108, 1, v54) != 1))
  {
    swift_bridgeObjectRelease();
    int v52 = 6;
    goto LABEL_81;
  }
  if (v51 == 0xD00000000000002BLL && v50 == 0x80000000002B1070 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    int v52 = 5;
    goto LABEL_81;
  }
  if (v51 == 0xD00000000000001CLL && v50 == 0x80000000002B1050 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    int v52 = 7;
  }
  else
  {
LABEL_76:
    uint64_t v55 = sub_27CFF0();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v108, 1, v55) == 1)
    {
      if (v50)
      {
        swift_bridgeObjectRelease();
        int v52 = 0;
      }
      else
      {
        int v52 = 2;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      int v52 = 1;
    }
  }
LABEL_81:
  type metadata accessor for Utilities();
  sub_12C130((char *)&v111);
  int v56 = v111;
  char v57 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v57)
  {
    long long v111 = 0u;
    long long v112 = 0u;
    uint64_t v59 = (uint64_t)v99;
LABEL_90:
    uint64_t result = sub_ADCF8((uint64_t)&v111, (uint64_t *)&unk_320320);
    goto LABEL_91;
  }
  id v58 = [v57 analyticsSessionDataForKey:@"BASessionDataKeyLaunchType"];
  swift_unknownObjectRelease();
  uint64_t v59 = (uint64_t)v99;
  if (v58)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v109 = 0u;
    long long v110 = 0u;
  }
  sub_1F78C((uint64_t)&v109, (uint64_t)&v111, (uint64_t *)&unk_320320);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_90;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v61 = v109;
    if ((unint64_t)v109 < 3) {
      goto LABEL_92;
    }
    *(void *)&long long v111 = v109;
    sub_27E390();
    __break(1u);
    goto LABEL_90;
  }
LABEL_91:
  uint64_t v61 = 0;
LABEL_92:
  if (v102 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_111;
  }
  if (v102 > 0x7FFFFFFF)
  {
LABEL_111:
    __break(1u);
    return result;
  }
  uint64_t v97 = v61;
  LODWORD(v98) = v56;
  LODWORD(v99) = v52;
  LODWORD(v100) = v40;
  uint64_t v62 = v91;
  sub_27D160();
  sub_27D140();
  char v63 = *(void (**)(unsigned char *, uint64_t))(v93 + 8);
  v63(v62, v53);
  uint64_t v64 = sub_27D110();
  uint64_t v65 = *(void *)(v64 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v59, 1, v64) == 1)
  {
    sub_ADCF8(v59, &qword_320338);
    uint64_t v93 = 0;
    unint64_t v66 = 0xE000000000000000;
  }
  else
  {
    uint64_t v93 = sub_27D100();
    uint64_t v67 = v59;
    unint64_t v66 = v68;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v67, v64);
  }
  uint64_t v69 = v92;
  sub_27D160();
  uint64_t v70 = (uint64_t)v94;
  sub_27D130();
  v63(v69, v53);
  uint64_t v71 = sub_27D0F0();
  uint64_t v72 = *(void *)(v71 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
  {
    sub_ADCF8(v70, &qword_320330);
    uint64_t v73 = 0;
    unint64_t v74 = 0xE000000000000000;
  }
  else
  {
    uint64_t v73 = sub_27D0E0();
    unint64_t v74 = v75;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  }
  id v76 = [self mainBundle];
  id v77 = [v76 bundleIdentifier];

  if (v77)
  {
    uint64_t v78 = sub_27DDB0();
    unint64_t v80 = v79;
  }
  else
  {
    uint64_t v78 = 0;
    unint64_t v80 = 0xE000000000000000;
  }
  if (v43 >= 4) {
    char v81 = 0;
  }
  else {
    char v81 = 0x1010200u >> (8 * v43);
  }

  if (v101) {
    char v82 = 1;
  }
  else {
    char v82 = 2;
  }

  (*(void (**)(unsigned char *, uint64_t))(v95 + 8))(v106, v96);
  char v83 = *(unsigned char *)(v107 + OBJC_IVAR___BAAnalyticsController_priceDropNotificationsEnabled);
  *(_DWORD *)a1 = v102;
  *(void *)(a1 + 8) = v93;
  *(void *)(a1 + 16) = v66;
  *(void *)(a1 + 24) = v73;
  *(void *)(a1 + 32) = v74;
  *(unsigned char *)(a1 + 40) = v87;
  *(unsigned char *)(a1 + 41) = v86;
  *(unsigned char *)(a1 + 42) = (_BYTE)v99;
  *(void *)(a1 + 48) = v78;
  *(void *)(a1 + 56) = v80;
  *(unsigned char *)(a1 + 64) = v98;
  *(unsigned char *)(a1 + 65) = v100;
  *(unsigned char *)(a1 + 66) = v81;
  *(unsigned char *)(a1 + 67) = v82;
  *(unsigned char *)(a1 + 68) = 0;
  *(unsigned char *)(a1 + 69) = v97;
  *(unsigned char *)(a1 + 70) = v88;
  *(unsigned char *)(a1 + 71) = v89;
  *(unsigned char *)(a1 + 72) = v85;
  *(unsigned char *)(a1 + 73) = v83;
  return sub_ADCF8((uint64_t)v108, &qword_320050);
}

uint64_t sub_180FCC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  id v4 = [v3 infoDictionary];

  if (!v4)
  {
    long long v50 = 0u;
    long long v51 = 0u;
    goto LABEL_13;
  }
  uint64_t v5 = sub_27DD70();

  if (!*(void *)(v5 + 16) || (unint64_t v6 = sub_E12C(0xD00000000000001ALL, 0x80000000002B1030), (v7 & 1) == 0))
  {
    long long v50 = 0u;
    long long v51 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_46D80(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  if (!*((void *)&v51 + 1))
  {
LABEL_13:
    sub_ADCF8((uint64_t)&v50, (uint64_t *)&unk_320320);
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    goto LABEL_14;
  }
  int v8 = swift_dynamicCast();
  if (v8) {
    uint64_t v9 = *(void *)&v49[0];
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    unint64_t v10 = *((void *)&v49[0] + 1);
  }
  else {
    unint64_t v10 = 0;
  }
LABEL_14:
  id v11 = [v2 mainBundle];
  id v12 = [v11 infoDictionary];

  if (!v12)
  {
    long long v50 = 0u;
    long long v51 = 0u;
LABEL_31:
    sub_ADCF8((uint64_t)&v50, (uint64_t *)&unk_320320);
    goto LABEL_32;
  }
  uint64_t v13 = sub_27DD70();

  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_E12C(0x656C646E75424643, 0xEF6E6F6973726556), (v15 & 1) != 0))
  {
    sub_46D80(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v50);
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v51 + 1)) {
    goto LABEL_31;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_32:
    uint64_t v25 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 0;
    goto LABEL_33;
  }
  unint64_t v18 = *((void *)&v49[0] + 1);
  uint64_t v17 = *(void *)&v49[0];
  uint64_t v19 = HIBYTE(*((void *)&v49[0] + 1)) & 0xFLL;
  uint64_t v20 = *(void *)&v49[0] & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v49[0] + 1) & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(*((void *)&v49[0] + 1)) & 0xFLL;
  }
  else {
    uint64_t v21 = *(void *)&v49[0] & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    uint64_t v25 = 0;
    goto LABEL_33;
  }
  if ((*((void *)&v49[0] + 1) & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_184364(*(uint64_t *)&v49[0], *((uint64_t *)&v49[0] + 1), 10);
    char v48 = v47;
    swift_bridgeObjectRelease();
    LOBYTE(v19) = v48;
    uint64_t v23 = (uint64_t)v46;
    goto LABEL_81;
  }
  if ((*((void *)&v49[0] + 1) & 0x2000000000000000) == 0)
  {
    if ((*(void *)&v49[0] & 0x1000000000000000) != 0) {
      id v22 = (unsigned __int8 *)((*((void *)&v49[0] + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v22 = (unsigned __int8 *)sub_27E110();
    }
    uint64_t v23 = (uint64_t)sub_18444C(v22, v20, 10);
    LOBYTE(v19) = v24 & 1;
    goto LABEL_81;
  }
  *(void *)&long long v50 = *(void *)&v49[0];
  *((void *)&v50 + 1) = *((void *)&v49[0] + 1) & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v49[0]) != 43)
  {
    if (LOBYTE(v49[0]) == 45)
    {
      if (v19)
      {
        if (v19 != 1)
        {
          if ((BYTE1(v49[0]) - 48) > 9u) {
            goto LABEL_78;
          }
          if (v19 == 2)
          {
            LOBYTE(v19) = 0;
            uint64_t v23 = -(uint64_t)(BYTE1(v49[0]) - 48);
            goto LABEL_81;
          }
          if ((BYTE2(v49[0]) - 48) > 9u) {
            goto LABEL_78;
          }
          uint64_t v23 = -10 * (BYTE1(v49[0]) - 48) - (BYTE2(v49[0]) - 48);
          uint64_t v42 = v19 - 3;
          if (v19 != 3)
          {
            unint64_t v43 = (unsigned __int8 *)&v50 + 3;
            while (1)
            {
              unsigned int v44 = *v43 - 48;
              if (v44 > 9) {
                goto LABEL_78;
              }
              uint64_t v45 = 10 * v23;
              if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
                goto LABEL_78;
              }
              uint64_t v23 = v45 - v44;
              if (__OFSUB__(v45, v44)) {
                goto LABEL_78;
              }
              LOBYTE(v19) = 0;
              ++v43;
              if (!--v42) {
                goto LABEL_81;
              }
            }
          }
          goto LABEL_80;
        }
        goto LABEL_103;
      }
      __break(1u);
LABEL_105:
      __break(1u);
      return result;
    }
    if (!v19 || (LOBYTE(v49[0]) - 48) > 9u)
    {
LABEL_78:
      uint64_t v23 = 0;
      LOBYTE(v19) = 1;
      goto LABEL_81;
    }
    uint64_t v23 = (LOBYTE(v49[0]) - 48);
    if (v19 != 1)
    {
      if ((BYTE1(v49[0]) - 48) > 9u) {
        goto LABEL_78;
      }
      uint64_t v23 = 10 * (LOBYTE(v49[0]) - 48) + (BYTE1(v49[0]) - 48);
      uint64_t v38 = v19 - 2;
      if (v19 != 2)
      {
        id v39 = (unsigned __int8 *)&v50 + 2;
        while (1)
        {
          unsigned int v40 = *v39 - 48;
          if (v40 > 9) {
            goto LABEL_78;
          }
          uint64_t v41 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_78;
          }
          uint64_t v23 = v41 + v40;
          if (__OFADD__(v41, v40)) {
            goto LABEL_78;
          }
          LOBYTE(v19) = 0;
          ++v39;
          if (!--v38) {
            goto LABEL_81;
          }
        }
      }
    }
LABEL_80:
    LOBYTE(v19) = 0;
    goto LABEL_81;
  }
  if (!v19) {
    goto LABEL_105;
  }
  if (v19 != 1)
  {
    if ((BYTE1(v49[0]) - 48) > 9u) {
      goto LABEL_78;
    }
    uint64_t v23 = (BYTE1(v49[0]) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(v49[0]) - 48) > 9u) {
        goto LABEL_78;
      }
      uint64_t v23 = 10 * (BYTE1(v49[0]) - 48) + (BYTE2(v49[0]) - 48);
      uint64_t v34 = v19 - 3;
      if (v19 != 3)
      {
        unsigned int v35 = (unsigned __int8 *)&v50 + 3;
        while (1)
        {
          unsigned int v36 = *v35 - 48;
          if (v36 > 9) {
            goto LABEL_78;
          }
          uint64_t v37 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
            goto LABEL_78;
          }
          uint64_t v23 = v37 + v36;
          if (__OFADD__(v37, v36)) {
            goto LABEL_78;
          }
          LOBYTE(v19) = 0;
          ++v35;
          if (!--v34) {
            goto LABEL_81;
          }
        }
      }
    }
    goto LABEL_80;
  }
LABEL_103:
  uint64_t v23 = 0;
LABEL_81:
  if (v19) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = v23;
  }
LABEL_33:
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v27 = [Strong analyticsSessionDataForKey:@"BASessionDataKeyJSVersion"];
    swift_unknownObjectRelease();
    if (v27)
    {
      sub_27E080();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v49, 0, sizeof(v49));
    }
    sub_1F78C((uint64_t)v49, (uint64_t)&v50, (uint64_t *)&unk_320320);
    if (*((void *)&v51 + 1))
    {
      uint64_t result = swift_dynamicCast();
      unint64_t v29 = *((void *)&v49[0] + 1);
      uint64_t v28 = *(void *)&v49[0];
      if (!result)
      {
        uint64_t v28 = 0;
        unint64_t v29 = 0;
      }
      goto LABEL_42;
    }
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  uint64_t result = sub_ADCF8((uint64_t)&v50, (uint64_t *)&unk_320320);
  uint64_t v28 = 0;
  unint64_t v29 = 0;
LABEL_42:
  if (v10) {
    uint64_t v30 = v9;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v10) {
    unint64_t v31 = v10;
  }
  else {
    unint64_t v31 = 0xE000000000000000;
  }
  if (!v29)
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  *a1 = v30;
  a1[1] = v31;
  if (v18) {
    uint64_t v32 = v17;
  }
  else {
    uint64_t v32 = 0;
  }
  a1[2] = v25;
  a1[3] = v28;
  if (v18) {
    unint64_t v33 = v18;
  }
  else {
    unint64_t v33 = 0xE000000000000000;
  }
  a1[4] = v29;
  a1[5] = v32;
  a1[6] = v33;
  return result;
}

uint64_t sub_181614@<X0>(uint64_t a1@<X8>)
{
  bzero(&v22, 0x500uLL);
  uname(&v22);
  uint64_t v2 = sub_27DE10();
  uint64_t v4 = v3;
  id v5 = [self bu_osBundleVersionString];
  uint64_t v6 = sub_27DDB0();
  uint64_t v8 = v7;

  uint64_t v9 = self;
  id v10 = [v9 currentDevice];
  id v11 = [v10 systemName];

  uint64_t v12 = sub_27DDB0();
  uint64_t v14 = v13;

  id v15 = [v9 currentDevice];
  id v16 = [v15 systemVersion];

  uint64_t v17 = sub_27DDB0();
  uint64_t v19 = v18;

  uint64_t result = sub_27D8D0();
  if (result) {
    char v21 = 1;
  }
  else {
    char v21 = 2;
  }
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v8;
  return result;
}

void sub_1817AC(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    long long v15 = 0u;
    long long v16 = 0u;
LABEL_9:
    sub_ADCF8((uint64_t)&v15, (uint64_t *)&unk_320320);
    goto LABEL_10;
  }
  id v4 = [Strong analyticsSessionDataForKey:@"BASessionDataKeyStoreFrontID"];
  swift_unknownObjectRelease();
  if (v4)
  {
    sub_27E080();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_1F78C((uint64_t)v14, (uint64_t)&v15, (uint64_t *)&unk_320320);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    unint64_t v6 = *((void *)&v14[0] + 1);
    uint64_t v5 = *(void *)&v14[0];
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
LABEL_11:
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v8 = v7 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v7 + 16);
  uint64_t v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  sub_179230(v8, &v15);
  os_unfair_lock_unlock(v9);
  long long v10 = v15;
  os_unfair_lock_lock(v9);
  sub_183A88(v8, &v15);
  if (*((void *)&v10 + 1)) {
    unint64_t v11 = *((void *)&v10 + 1);
  }
  else {
    unint64_t v11 = 0xE000000000000000;
  }
  if (*((void *)&v10 + 1)) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0;
  }
  os_unfair_lock_unlock(v9);
  uint64_t v13 = v15;
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v12;
  a1[3] = v11;
  a1[4] = v13;
}

Swift::String_optional __swiftcall AnalyticsController.contentPrivateID(for:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v3 = v2 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v2 + 16);
  id v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_179270(v3, &v14);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v14;
  unint64_t v6 = v15;
  if (v15)
  {
    NSString v7 = sub_27DDA0();
    NSString v8 = sub_27DDA0();
    swift_bridgeObjectRelease();
    id v9 = BAObfuscateID(v7, v8);

    if (v9)
    {
      uint64_t v5 = sub_27DDB0();
      unint64_t v6 = v10;
    }
    else
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
    }
  }
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall AnalyticsController.contentUserID(for:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
  uint64_t v3 = v2 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v2 + 16);
  id v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_179250(v3, &v14);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v14;
  unint64_t v6 = v15;
  if (v15)
  {
    NSString v7 = sub_27DDA0();
    NSString v8 = sub_27DDA0();
    swift_bridgeObjectRelease();
    id v9 = BAObfuscateID(v7, v8);

    if (v9)
    {
      uint64_t v5 = sub_27DDB0();
      unint64_t v6 = v10;
    }
    else
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
    }
  }
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

id sub_181C4C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_27DDB0();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);
  uint64_t v11 = v10;

  swift_bridgeObjectRelease();
  if (v11)
  {
    NSString v12 = sub_27DDA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }

  return v12;
}

uint64_t AnalyticsController.performAfterPrivateDataFetched(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_27DC40();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_27DC70();
  uint64_t v9 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = *(void **)(v2 + OBJC_IVAR___BAAnalyticsController_privateDataQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_184D74;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1788EC;
  aBlock[3] = &unk_305DC0;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  swift_retain();
  sub_27DC60();
  v17[1] = _swiftEmptyArrayStorage;
  sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_4E04((uint64_t *)&unk_320070);
  sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
  sub_27E090();
  sub_27E010();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v17[0]);
  return swift_release();
}

id AnalyticsController.newSessionAssertion()()
{
  return sub_182068((SEL *)&selRef_newAssertion);
}

id AnalyticsController.newSessionExtendingAssertion()()
{
  return sub_182068((SEL *)&selRef_newExtendingAssertion);
}

id sub_182068(SEL *a1)
{
  if (*(void *)(v1 + OBJC_IVAR___BAAnalyticsController_assertionProvider)) {
    return [*(id *)(v1 + OBJC_IVAR___BAAnalyticsController_assertionProvider) *a1];
  }
  else {
    return 0;
  }
}

id sub_1820B0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = *(id *)(a1 + OBJC_IVAR___BAAnalyticsController_assertionProvider);
  if (result) {
    return [result *a3];
  }
  return result;
}

Swift::Void __swiftcall AnalyticsController.privateDataChanged(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_27DC40();
  uint64_t v17 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_27DC70();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR___BAAnalyticsController_workQueue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  NSString v12 = (Swift::OpaquePointer *)swift_allocObject();
  v12[2]._rawValue = (void *)v11;
  v12[3]._rawValue = a1._rawValue;
  aBlock[4] = sub_184DA0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1788EC;
  aBlock[3] = &unk_305E10;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_27DC60();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_4E04((uint64_t *)&unk_320070);
  sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
  sub_27E090();
  sub_27E010();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  swift_release();
}

void sub_1823C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_4E04(&qword_320350);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (unsigned char *)Strong;
    __chkstk_darwin(Strong);
    *(void *)&v18[-16] = a2;
    uint64_t v9 = v8 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v8 + 16);
    uint64_t v10 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v10);
    sub_187C3C(v9, &v19);
    os_unfair_lock_unlock(v10);
    if (v19 == 1)
    {
      if (v7[OBJC_IVAR___BAAnalyticsController_sessionState] == 1)
      {
        v7[OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent] = 0;
        uint64_t v12 = sub_27DF30();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
        uint64_t v13 = (void *)swift_allocObject();
        v13[2] = 0;
        void v13[3] = 0;
        v13[4] = v7;
        id v14 = v7;
        sub_1E9A54((uint64_t)v5, (uint64_t)&unk_320370, (uint64_t)v13);

        swift_release();
        return;
      }
      __chkstk_darwin(v11);
      *(void *)&v18[-16] = a2;
      uint64_t v16 = v15 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v15 + 16);
      uint64_t v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_lock(v17);
      sub_188094(v16, &v19);
      os_unfair_lock_unlock(v17);
      sub_182C60((uint64_t)v7);
      v7[OBJC_IVAR___BAAnalyticsController_privateDataCacheIsCurrent] = 1;
    }
  }
}

uint64_t sub_18269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 144) = a1;
  *(void *)(v4 + 152) = a4;
  return _swift_task_switch(sub_1826BC, 0, 0);
}

uint64_t sub_1826BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 160) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void *)(v0 + 152);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_18282C;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_182980;
    *(void *)(v0 + 104) = &unk_3060F8;
    *(void *)(v0 + 112) = v4;
    [v2 analyticsController:v3 resetSessionWithCompletion:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    **(unsigned char **)(v0 + 144) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_18282C()
{
  return _swift_task_switch(sub_18290C, 0, 0);
}

uint64_t sub_18290C()
{
  swift_unknownObjectRelease();
  **(unsigned char **)(v0 + 144) = *(void *)(v0 + 160) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_182980(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_1829F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v33) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v33) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v32 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v33) {
          goto LABEL_31;
        }
        unint64_t v13 = *(void *)(v32 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_21:
    uint64_t v15 = 16 * v11;
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + v15);
    uint64_t v17 = v16[1];
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 56) + v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(a1 + *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 20));
    if (!*(void *)(v21 + 16)) {
      goto LABEL_28;
    }
    uint64_t v22 = *v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_E12C(v22, v17);
    if ((v24 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_30:
      char v30 = 1;
LABEL_32:
      *a3 = v30;
      return result;
    }
    uint64_t v25 = (uint64_t *)(*(void *)(v21 + 56) + 16 * v23);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v27 == v20 && v26 == v19)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_27E370();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
LABEL_28:
        uint64_t result = swift_release();
        goto LABEL_30;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v33)
  {
LABEL_31:
    uint64_t result = swift_release();
    char v30 = 0;
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v32 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v33) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_182C60(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void *)(a1 + OBJC_IVAR___BAAnalyticsController_lockProtectedData);
    uint64_t v5 = v4 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v4 + 16);
    uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v6);
    sub_179230(v5, v8);
    os_unfair_lock_unlock(v6);
    if (v8[1])
    {
      NSString v7 = sub_27DDA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v7 = 0;
    }
    [v3 setUserID:v7];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_182D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v50 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v51 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  char v48 = 0;
  int64_t v7 = 0;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v10 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v10 < v51)
    {
      unint64_t v11 = *(void *)(v50 + 8 * v10);
      ++v7;
      if (v11) {
        goto LABEL_20;
      }
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v51) {
        goto LABEL_43;
      }
      unint64_t v11 = *(void *)(v50 + 8 * v7);
      if (v11) {
        goto LABEL_20;
      }
      int64_t v7 = v10 + 2;
      if (v10 + 2 >= v51) {
        goto LABEL_43;
      }
      unint64_t v11 = *(void *)(v50 + 8 * v7);
      if (v11)
      {
LABEL_20:
        unint64_t v6 = (v11 - 1) & v11;
        for (unint64_t i = __clz(__rbit64(v11)) + (v7 << 6); ; unint64_t i = v8 | (v7 << 6))
        {
          uint64_t v13 = 16 * i;
          int64_t v14 = (uint64_t *)(*(void *)(a2 + 48) + v13);
          uint64_t v16 = *v14;
          uint64_t v15 = v14[1];
          uint64_t v17 = (uint64_t *)(*(void *)(a2 + 56) + v13);
          uint64_t v19 = *v17;
          uint64_t v18 = v17[1];
          uint64_t v20 = *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 20);
          uint64_t v21 = *(void *)(a1 + v20);
          uint64_t v22 = *(void *)(v21 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v22)
          {
            unint64_t v23 = sub_E12C(v16, v15);
            if (v24)
            {
              uint64_t v25 = (void *)(*(void *)(v21 + 56) + 16 * v23);
              BOOL v26 = *v25 == v19 && v25[1] == v18;
              if (v26 || (sub_27E370() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v6) {
                  goto LABEL_7;
                }
                goto LABEL_6;
              }
            }
            uint64_t v27 = (void *)(a1 + v20);
          }
          else
          {
            uint64_t v27 = (void *)(a1 + v20);
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = (void *)*v27;
          uint64_t v53 = (void *)*v27;
          char v47 = v27;
          *uint64_t v27 = 0x8000000000000000;
          unint64_t v30 = sub_E12C(v16, v15);
          uint64_t v31 = v28[2];
          BOOL v32 = (v29 & 1) == 0;
          uint64_t v33 = v31 + v32;
          if (__OFADD__(v31, v32)) {
            goto LABEL_46;
          }
          if (v28[3] >= v33)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              unsigned int v36 = v53;
              if (v29) {
                goto LABEL_37;
              }
            }
            else
            {
              char v46 = v29;
              sub_258120();
              unsigned int v36 = v53;
              if (v46) {
                goto LABEL_37;
              }
            }
          }
          else
          {
            char v45 = v29;
            sub_2571C8(v33, isUniquelyReferenced_nonNull_native);
            unint64_t v34 = sub_E12C(v16, v15);
            if ((v45 & 1) != (v35 & 1)) {
              goto LABEL_48;
            }
            unint64_t v30 = v34;
            unsigned int v36 = v53;
            if (v45)
            {
LABEL_37:
              uint64_t v37 = (void *)(v36[7] + 16 * v30);
              swift_bridgeObjectRelease();
              *uint64_t v37 = v19;
              v37[1] = v18;
              goto LABEL_41;
            }
          }
          v36[(v30 >> 6) + 8] |= 1 << v30;
          uint64_t v38 = (uint64_t *)(v36[6] + 16 * v30);
          uint64_t *v38 = v16;
          v38[1] = v15;
          id v39 = (void *)(v36[7] + 16 * v30);
          void *v39 = v19;
          v39[1] = v18;
          uint64_t v40 = v36[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_47;
          }
          v36[2] = v42;
          swift_bridgeObjectRetain();
LABEL_41:
          *char v47 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v48 = 1;
          if (!v6) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v8 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v12 = v10 + 3;
      if (v12 < v51)
      {
        unint64_t v11 = *(void *)(v50 + 8 * v12);
        if (v11)
        {
          int64_t v7 = v12;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v7 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_45;
          }
          if (v7 >= v51) {
            break;
          }
          unint64_t v11 = *(void *)(v50 + 8 * v7);
          ++v12;
          if (v11) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_43:
    uint64_t result = swift_release();
    *a3 = v48 & 1;
    return result;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_27E3A0();
  __break(1u);
  return result;
}

uint64_t sub_183128()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    sub_17D9B4(2u);
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_17F924((uint64_t)sub_187B50, v2);

    return swift_release_n();
  }
  return result;
}

uint64_t sub_1831D4()
{
  uint64_t v0 = sub_4E04(&qword_320350);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_27DC40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_27DC70();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int64_t v12 = (void *)Strong;
    id v21 = *(id *)(Strong + OBJC_IVAR___BAAnalyticsController_workQueue);

    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v8;
    swift_beginAccess();
    int64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    aBlock[4] = sub_187B58;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1788EC;
    aBlock[3] = &unk_306080;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    sub_27DC60();
    unint64_t v23 = _swiftEmptyArrayStorage;
    sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_4E04((uint64_t *)&unk_320070);
    uint64_t v20 = v7;
    sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
    sub_27E090();
    uint64_t v16 = v21;
    sub_27E010();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v20);
    swift_release();
    swift_release();
  }
  uint64_t v17 = sub_27DF30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  sub_1E98A8((uint64_t)v2, (uint64_t)&unk_320360, v18);
  return swift_release();
}

void sub_1835D4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_17D9B4(0);
    swift_beginAccess();
    uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      [v2 analyticsControllerDidEndSession:v1];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_18367C()
{
  return _swift_task_switch(sub_183698, 0, 0);
}

uint64_t sub_183698()
{
  if (qword_3159E8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_18375C;
  return sub_16BA58();
}

uint64_t sub_18375C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_183858, 0, 0);
}

uint64_t sub_183858()
{
  if (qword_315650 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_27D9B0();
  sub_4BD4(v1, (uint64_t)qword_318748);
  uint64_t v2 = sub_27D990();
  os_log_type_t v3 = sub_27DF90();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "Session flushed", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_1839D0()
{
}

uint64_t sub_183A00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_183A88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_183AD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t)a2 + *(int *)(sub_4E04(&qword_320340) + 48);
  uint64_t v5 = type metadata accessor for AnalyticsController.LockProtectedData();
  unint64_t v6 = (void *)(a1 + *(int *)(v5 + 28));
  uint64_t v7 = v6[1];
  *a2 = *v6;
  a2[1] = v7;
  sub_46D1C(a1 + *(int *)(v5 + 24), v4, &qword_320050);
  return swift_bridgeObjectRetain();
}

uint64_t sub_183B5C(void **a1, uint64_t a2, uint64_t a3)
{
  v15[3] = &type metadata for LinkData;
  uint64_t v15[4] = sub_CE394();
  v15[5] = sub_187F60();
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v6 + 128) = v7;
  *(_OWORD *)(v6 + 144) = *(_OWORD *)(a2 + 128);
  *(void *)(v6 + 160) = *(void *)(a2 + 144);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 64) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v6 + 96) = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 32) = v10;
  v15[0] = v6;
  v15[6] = a3;
  char v16 = 0;
  unint64_t v11 = *a1;
  sub_35DC8(a2);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_266B48(0, v11[2] + 1, 1, v11);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    unint64_t v11 = sub_266B48((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  void v11[2] = v13 + 1;
  uint64_t result = sub_15AD54((uint64_t)v15, (uint64_t)&v11[8 * v13 + 4]);
  *a1 = v11;
  return result;
}

uint64_t sub_183C98(void **a1, unint64_t a2, unint64_t a3, int a4, uint64_t a5)
{
  int v7 = a3;
  char v8 = a2;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v11 = HIDWORD(a3);
  id v21 = &type metadata for OrientationData;
  unint64_t v22 = sub_15A6EC();
  v16[0] = v8;
  int v17 = v10;
  int v18 = v7;
  int v19 = v11;
  int v20 = a4;
  unint64_t v23 = sub_15AF08();
  uint64_t v24 = a5;
  char v25 = 0;
  unint64_t v12 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v12 = sub_266B48(0, v12[2] + 1, 1, v12);
  }
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1) {
    unint64_t v12 = sub_266B48((void *)(v13 > 1), v14 + 1, 1, v12);
  }
  void v12[2] = v14 + 1;
  uint64_t result = sub_15AD54((uint64_t)v16, (uint64_t)&v12[8 * v14 + 4]);
  *a1 = v12;
  return result;
}

uint64_t sub_183DA4(void **a1, char a2, uint64_t a3)
{
  return sub_184024(a1, a2, a3, (uint64_t)&type metadata for SessionEndReasonData, (uint64_t (*)(void))sub_15AB24, (uint64_t (*)(void))sub_187F0C);
}

uint64_t sub_183DEC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = &type metadata for SessionListeningData;
  unint64_t v16 = sub_15A81C();
  uint64_t v12 = a2;
  int v13 = a3;
  char v14 = BYTE4(a3) & 1;
  unint64_t v17 = sub_15AEB4();
  uint64_t v18 = a4;
  char v19 = 0;
  char v8 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v8 = sub_266B48(0, v8[2] + 1, 1, v8);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    char v8 = sub_266B48((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  void v8[2] = v10 + 1;
  uint64_t result = sub_15AD54((uint64_t)&v12, (uint64_t)&v8[8 * v10 + 4]);
  *a1 = v8;
  return result;
}

uint64_t sub_183EE8(void **a1, uint64_t a2, int a3, uint64_t a4)
{
  char v14 = &type metadata for SessionReadingData;
  unint64_t v15 = sub_15A94C();
  uint64_t v12 = a2;
  int v13 = a3;
  unint64_t v16 = sub_15AE60();
  uint64_t v17 = a4;
  char v18 = 0;
  char v8 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v8 = sub_266B48(0, v8[2] + 1, 1, v8);
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    char v8 = sub_266B48((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  void v8[2] = v10 + 1;
  uint64_t result = sub_15AD54((uint64_t)&v12, (uint64_t)&v8[8 * v10 + 4]);
  *a1 = v8;
  return result;
}

uint64_t sub_183FDC(void **a1, char a2, uint64_t a3)
{
  return sub_184024(a1, a2, a3, (uint64_t)&type metadata for TabData, (uint64_t (*)(void))sub_15ABF8, (uint64_t (*)(void))sub_187EB8);
}

uint64_t sub_184024(void **a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v15 = a4;
  uint64_t v16 = a5();
  v14[0] = a2;
  uint64_t v17 = a6();
  uint64_t v18 = a3;
  char v19 = 0;
  unint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_266B48(0, v10[2] + 1, 1, v10);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_266B48((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  void v10[2] = v12 + 1;
  uint64_t result = sub_15AD54((uint64_t)v14, (uint64_t)&v10[8 * v12 + 4]);
  *a1 = v10;
  return result;
}

uint64_t sub_184114(void **a1, uint64_t a2, uint64_t a3)
{
  v10[3] = &type metadata for BooksTreatmentData;
  void v10[4] = sub_15ACAC();
  v10[5] = sub_15AD00();
  v10[6] = a3;
  v10[0] = a2;
  char v11 = 0;
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_266B48(0, v6[2] + 1, 1, v6);
  }
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    uint64_t v6 = sub_266B48((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  uint64_t result = sub_15AD54((uint64_t)v10, (uint64_t)&v6[8 * v8 + 4]);
  *a1 = v6;
  return result;
}

void *sub_184208(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_4E04(&qword_31DBB8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_184270(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_27DE70();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_27DE40();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1842EC(uint64_t a1)
{
  return sub_17B78C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40));
}

uint64_t sub_18430C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(int *)(type metadata accessor for AnalyticsController.LockProtectedData() + 40);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + v4) = v3;
  return result;
}

unsigned __int8 *sub_184364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_27DE90();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1846C8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_27E110();
  }
LABEL_7:
  uint64_t v11 = sub_18444C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_18444C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1846C8()
{
  unint64_t v0 = sub_27DEA0();
  uint64_t v4 = sub_184748(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_184748(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1848A0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_184208(v9, 0),
          unint64_t v12 = sub_1849A0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_27DDE0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_27DDE0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_27E110();
LABEL_4:

  return sub_27DDE0();
}

uint64_t sub_1848A0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_184270(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_184270(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1849A0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_184270(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_27DE60();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_27E110();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_184270(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_27DE30();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_184BB4(void **a1)
{
  return sub_184114(a1, **(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_184BD4(uint64_t a1)
{
  return sub_17BEF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_184BF0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_182D84(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_184C0C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_184C4C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_184C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_184C8C()
{
  return swift_release();
}

uint64_t sub_184C94(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_184CA4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_184CDC()
{
}

uint64_t sub_184CE4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_184D34()
{
}

uint64_t sub_184D3C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_184D74()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_184DA0()
{
  sub_1823C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_184DA8()
{
  if (qword_3159E8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_31FB10 + OBJC_IVAR___BAAppManager_applicationGroupIdentifier;
  swift_beginAccess();
  if (!*(void *)((char *)&dword_8 + v0)
    || (id v1 = objc_allocWithZone((Class)NSUserDefaults),
        swift_bridgeObjectRetain(),
        NSString v2 = sub_27DDA0(),
        swift_bridgeObjectRelease(),
        id v3 = [v1 initWithSuiteName:v2],
        v2,
        !v3))
  {
    id v3 = [self standardUserDefaults];
  }
  id v4 = [v3 stringForKey:@"BACustomAppBuild"];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_27DDB0();
  }
  else
  {

    return 0;
  }
  return v6;
}

uint64_t _s13BookAnalytics0B10ControllerC32countingAssertProviderTransition6toZeroySo019BUCountingAssertionF0C_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_27DC40();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_27DC70();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_315650 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_27D9B0();
  sub_4BD4(v8, (uint64_t)qword_318748);
  uint64_t v9 = sub_27D990();
  os_log_type_t v10 = sub_27DF90();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "Session End", v11, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong analyticsControllerWillEndSession:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR___BAAnalyticsController_workQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_187B48;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1788EC;
  aBlock[3] = &unk_306058;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v13;
  swift_retain();
  sub_27DC60();
  char v20 = _swiftEmptyArrayStorage;
  sub_187E70((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_4E04((uint64_t *)&unk_320070);
  sub_184CE4(&qword_31FBA0, (uint64_t *)&unk_320070);
  sub_27E090();
  sub_27E010();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  swift_release();
  return swift_release();
}

uint64_t _s13BookAnalytics0B10ControllerC32countingAssertProviderTransition9toNonZeroySo019BUCountingAssertionF0C_tF_0()
{
  uint64_t v1 = v0;
  if (qword_315650 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_27D9B0();
  sub_4BD4(v2, (uint64_t)qword_318748);
  uint64_t v3 = sub_27D990();
  os_log_type_t v4 = sub_27DF90();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "Session Start", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)&v1[OBJC_IVAR___BAAnalyticsController_workQueue];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1876B0;
  *(void *)(v8 + 24) = v7;
  v14[4] = sub_184D74;
  v14[5] = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_183A00;
  void v14[3] = &unk_305FB8;
  uint64_t v9 = _Block_copy(v14);
  os_log_type_t v10 = v6;
  uint64_t v11 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v10, v9);

  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

id sub_1854F0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___BAAnalyticsController_applicationTracker);
  swift_beginAccess();
  os_log_type_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_185558@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___BAAnalyticsController_sessionManager);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1855B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1855F0(a1);
}

uint64_t sub_1855C0()
{
  return sub_185650();
}

uint64_t sub_1855CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1855F0(a1);
}

uint64_t sub_1855D8()
{
  return sub_185650();
}

uint64_t sub_1855E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1855F0(a1);
}

uint64_t sub_1855F0@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_185644()
{
  return sub_185650();
}

uint64_t sub_185650()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for AnalyticsController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AnalyticsController);
}

uint64_t dispatch thunk of AnalyticsController.applicationTracker.getter()
{
  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of AnalyticsController.applicationTracker.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.applicationTracker.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.sessionManager.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.userConfiguration.getter()
{
  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of AnalyticsController.userConfiguration.setter()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of AnalyticsController.userConfiguration.modify()
{
  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of AnalyticsController.delegate.getter()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of AnalyticsController.delegate.setter()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of AnalyticsController.delegate.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.configurationProvider.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.configurationProvider.setter()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.configurationProvider.modify()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.sessionStartTime.getter()
{
  return (*(uint64_t (**)(void))((char *)&stru_108.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.start()()
{
  return (*(uint64_t (**)(void))&stru_248.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of AnalyticsController.setReferral(url:app:)()
{
  return (*(uint64_t (**)(void))&stru_248.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of AnalyticsController.setTreatmentData(_:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_248.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.append(userExperience:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_248.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.setLaunchedFromShortcutItem()()
{
  return (*(uint64_t (**)(void))((char *)&stru_248.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.unsetLaunchedFromShortcutItem()()
{
  return (*(uint64_t (**)(void))((char *)&stru_248.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.resetPrivateData(_:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_248.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AnalyticsController.waitForSessionEnd(_:)()
{
  return (*(uint64_t (**)(void))&stru_298.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of AnalyticsController.refreshSessionDataIfActive()()
{
  return (*(uint64_t (**)(void))&stru_298.segname[(swift_isaMask & *v0) - 8])();
}

unsigned char *storeEnumTagSinglePayload for SessionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x185CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionState()
{
  return &type metadata for SessionState;
}

uint64_t *sub_185D04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_27D0A0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_4E04(&qword_320080);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    unint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_27CFF0();
    uint64_t v15 = *(void *)(v14 - 8);
    id v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_4E04(&qword_320050);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    char v20 = (uint64_t *)((char *)a1 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *char v20 = *v21;
    v20[1] = v22;
    unint64_t v23 = (uint64_t *)((char *)a1 + v19);
    unsigned __int8 v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = *(uint64_t *)((char *)a2 + v19 + 24);
    swift_bridgeObjectRetain();
    if (v25)
    {
      uint64_t v26 = v24[1];
      *unint64_t v23 = *v24;
      v23[1] = v26;
      v23[2] = v24[2];
      v23[3] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)v24 + 1);
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v27;
    }
    uint64_t v28 = a3[9];
    char v29 = (char *)a1 + v28;
    unint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *((void *)v30 + 1);
    if (v31 == 1)
    {
      long long v32 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v32;
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      long long v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)char v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
    }
    else
    {
      *(void *)char v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v34 = *((void *)v30 + 3);
      *((void *)v29 + 2) = *((void *)v30 + 2);
      *((void *)v29 + 3) = v34;
      uint64_t v35 = *((void *)v30 + 5);
      *((void *)v29 + 4) = *((void *)v30 + 4);
      *((void *)v29 + 5) = v35;
      uint64_t v36 = *((void *)v30 + 7);
      *((void *)v29 + 6) = *((void *)v30 + 6);
      *((void *)v29 + 7) = v36;
      uint64_t v37 = *((void *)v30 + 9);
      *((void *)v29 + 8) = *((void *)v30 + 8);
      *((void *)v29 + 9) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v38) = *(uint64_t *)((char *)a2 + v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_186058(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_27D0A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_27CFF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_186228(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_27D0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4E04(&qword_320080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_27CFF0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_4E04(&qword_320050);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = &a1[v17];
  uint64_t v22 = &a2[v17];
  uint64_t v23 = *(void *)&a2[v17 + 24];
  swift_bridgeObjectRetain();
  if (v23)
  {
    uint64_t v24 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v24;
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
  }
  uint64_t v26 = a3[9];
  long long v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *((void *)v28 + 1);
  if (v29 == 1)
  {
    long long v30 = *((_OWORD *)v28 + 3);
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    *((_OWORD *)v27 + 3) = v30;
    *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
    long long v31 = *((_OWORD *)v28 + 1);
    *(_OWORD *)long long v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v31;
  }
  else
  {
    *(void *)long long v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v32 = *((void *)v28 + 3);
    *((void *)v27 + 2) = *((void *)v28 + 2);
    *((void *)v27 + 3) = v32;
    uint64_t v33 = *((void *)v28 + 5);
    *((void *)v27 + 4) = *((void *)v28 + 4);
    *((void *)v27 + 5) = v33;
    uint64_t v34 = *((void *)v28 + 7);
    *((void *)v27 + 6) = *((void *)v28 + 6);
    *((void *)v27 + 7) = v34;
    uint64_t v35 = *((void *)v28 + 9);
    *((void *)v27 + 8) = *((void *)v28 + 8);
    *((void *)v27 + 9) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v36] = *(void *)&a2[v36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_18652C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_27D0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4E04(&qword_320080);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_27CFF0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_4E04(&qword_320050);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  long long v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)&a1[v24 + 24];
  uint64_t v28 = *(void *)&a2[v24 + 24];
  if (v27)
  {
    if (v28)
    {
      *(void *)long long v25 = *(void *)v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = *((void *)v26 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_186A98((uint64_t)v25);
      long long v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)long long v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
    }
  }
  else if (v28)
  {
    *(void *)long long v25 = *(void *)v26;
    *((void *)v25 + 1) = *((void *)v26 + 1);
    *((void *)v25 + 2) = *((void *)v26 + 2);
    *((void *)v25 + 3) = *((void *)v26 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)long long v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
  }
  uint64_t v31 = a3[9];
  uint64_t v32 = (uint64_t)&a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)&a1[v31 + 8];
  uint64_t v35 = *(void *)&a2[v31 + 8];
  if (v34 == 1)
  {
    if (v35 == 1)
    {
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      long long v36 = *((_OWORD *)v33 + 1);
      long long v37 = *((_OWORD *)v33 + 2);
      long long v38 = *((_OWORD *)v33 + 4);
      *(_OWORD *)(v32 + 48) = *((_OWORD *)v33 + 3);
      *(_OWORD *)(v32 + 64) = v38;
      *(_OWORD *)(v32 + 16) = v36;
      *(_OWORD *)(v32 + 32) = v37;
    }
    else
    {
      *(void *)uint64_t v32 = *(void *)v33;
      *(void *)(v32 + 8) = *((void *)v33 + 1);
      *(void *)(v32 + 16) = *((void *)v33 + 2);
      *(void *)(v32 + 24) = *((void *)v33 + 3);
      *(void *)(v32 + 32) = *((void *)v33 + 4);
      *(void *)(v32 + 40) = *((void *)v33 + 5);
      *(void *)(v32 + 48) = *((void *)v33 + 6);
      *(void *)(v32 + 56) = *((void *)v33 + 7);
      *(void *)(v32 + 64) = *((void *)v33 + 8);
      *(void *)(v32 + 72) = *((void *)v33 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == 1)
  {
    sub_186AEC(v32);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    long long v39 = *((_OWORD *)v33 + 4);
    long long v41 = *((_OWORD *)v33 + 1);
    long long v40 = *((_OWORD *)v33 + 2);
    *(_OWORD *)(v32 + 48) = *((_OWORD *)v33 + 3);
    *(_OWORD *)(v32 + 64) = v39;
    *(_OWORD *)(v32 + 16) = v41;
    *(_OWORD *)(v32 + 32) = v40;
  }
  else
  {
    *(void *)uint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = *((void *)v33 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v32 + 16) = *((void *)v33 + 2);
    *(void *)(v32 + 24) = *((void *)v33 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v32 + 32) = *((void *)v33 + 4);
    *(void *)(v32 + 40) = *((void *)v33 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v32 + 48) = *((void *)v33 + 6);
    *(void *)(v32 + 56) = *((void *)v33 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v32 + 64) = *((void *)v33 + 8);
    *(void *)(v32 + 72) = *((void *)v33 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_186A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_186AEC(uint64_t a1)
{
  return a1;
}

char *sub_186B40(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_27D0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_4E04(&qword_320080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_27CFF0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_4E04(&qword_320050);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  long long v23 = *((_OWORD *)v22 + 4);
  long long v24 = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 4) = v23;
  long long v25 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v25;
  *((_OWORD *)v21 + 2) = v24;
  *(void *)&a1[v20] = *(void *)&a2[v20];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

char *sub_186D98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_27D0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_4E04(&qword_320080);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_27CFF0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_4E04(&qword_320050);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  long long v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (*(void *)&a1[v26 + 24])
  {
    if (*((void *)v28 + 3))
    {
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *((void *)v28 + 3);
      *((void *)v27 + 2) = *((void *)v28 + 2);
      *((void *)v27 + 3) = v30;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_186A98((uint64_t)v27);
  }
  long long v31 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v31;
LABEL_18:
  uint64_t v32 = a3[9];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  if (*(void *)&a1[v32 + 8] != 1)
  {
    uint64_t v35 = *((void *)v34 + 1);
    if (v35 != 1)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      uint64_t v38 = *((void *)v34 + 3);
      *((void *)v33 + 2) = *((void *)v34 + 2);
      *((void *)v33 + 3) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *((void *)v34 + 5);
      *((void *)v33 + 4) = *((void *)v34 + 4);
      *((void *)v33 + 5) = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = *((void *)v34 + 7);
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *((void *)v33 + 7) = v40;
      swift_bridgeObjectRelease();
      uint64_t v41 = *((void *)v34 + 9);
      *((void *)v33 + 8) = *((void *)v34 + 8);
      *((void *)v33 + 9) = v41;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_186AEC((uint64_t)v33);
  }
  long long v36 = *((_OWORD *)v34 + 3);
  *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
  *((_OWORD *)v33 + 3) = v36;
  *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
  long long v37 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v37;
LABEL_23:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_187190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1871A4);
}

uint64_t sub_1871A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320080);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_4E04(&qword_320050);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1872D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1872EC);
}

uint64_t sub_1872EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_4E04(&qword_320080);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_4E04(&qword_320050);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_187420()
{
  sub_187554(319, &qword_320238, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_187554(319, (unint64_t *)&qword_320240, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_187554(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_27E040();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1875AC()
{
  unint64_t result = qword_320288;
  if (!qword_320288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320288);
  }
  return result;
}

uint64_t sub_187600()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_187638()
{
  return sub_26D608(*(void *)(v0 + 16));
}

uint64_t sub_187640(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_187650(uint64_t a1)
{
  return a1;
}

uint64_t sub_187678()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1876B0()
{
}

uint64_t sub_1876B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1876C8(uint64_t a1)
{
  return sub_17F2C4(a1);
}

unint64_t sub_1876D0()
{
  unint64_t result = qword_3202D8;
  if (!qword_3202D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3202D8);
  }
  return result;
}

unint64_t sub_187724()
{
  unint64_t result = qword_3202E0;
  if (!qword_3202E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3202E0);
  }
  return result;
}

unint64_t sub_187778()
{
  unint64_t result = qword_3202E8;
  if (!qword_3202E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3202E8);
  }
  return result;
}

unint64_t sub_1877CC()
{
  unint64_t result = qword_3202F0;
  if (!qword_3202F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3202F0);
  }
  return result;
}

unint64_t sub_187820()
{
  unint64_t result = qword_3202F8;
  if (!qword_3202F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3202F8);
  }
  return result;
}

unint64_t sub_187874()
{
  unint64_t result = qword_320300;
  if (!qword_320300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320300);
  }
  return result;
}

uint64_t sub_1878C8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_18793C()
{
  unint64_t result = qword_320310;
  if (!qword_320310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320310);
  }
  return result;
}

uint64_t sub_187990(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_187A04()
{
  unint64_t result = qword_320318;
  if (!qword_320318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320318);
  }
  return result;
}

uint64_t sub_187A58(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_187A98()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_187AD8()
{
  sub_17F614(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_187AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_187B48()
{
  return sub_183128();
}

uint64_t sub_187B50()
{
  return sub_1831D4();
}

void sub_187B58()
{
}

uint64_t sub_187B60()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_187B98()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_C80E0;
  return _swift_task_switch(sub_183698, 0, 0);
}

uint64_t sub_187C3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1829F8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_187C58()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_187C98(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_AD880;
  v5[18] = a1;
  v5[19] = v4;
  return _swift_task_switch(sub_1826BC, 0, 0);
}

unint64_t sub_187D48()
{
  unint64_t result = qword_320378;
  if (!qword_320378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320378);
  }
  return result;
}

uint64_t sub_187D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_187E04(uint64_t a1)
{
  return a1;
}

uint64_t sub_187E70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_187EB8()
{
  unint64_t result = qword_3203B0;
  if (!qword_3203B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3203B0);
  }
  return result;
}

unint64_t sub_187F0C()
{
  unint64_t result = qword_3203E0;
  if (!qword_3203E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3203E0);
  }
  return result;
}

unint64_t sub_187F60()
{
  unint64_t result = qword_320400;
  if (!qword_320400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320400);
  }
  return result;
}

uint64_t sub_187FB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_188054(uint64_t a1)
{
  return sub_184BD4(a1);
}

uint64_t sub_188094@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_184BF0(a1, a2);
}

uint64_t sub_1880AC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320470, &enum case for SessionGroup.default(_:));
}

uint64_t static PreorderSuccessEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A00, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320470, a1);
}

uint64_t sub_18810C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320488, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PreorderSuccessEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A08, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320488, a1);
}

uint64_t PreorderSuccessEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderSuccessEvent(uint64_t a1)
{
  return sub_5338(a1, qword_320510);
}

uint64_t PreorderSuccessEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderSuccessEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderSuccessEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderSuccessEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderSuccessEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderSuccessEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PreorderSuccessEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PreorderSuccessEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PreorderSuccessEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PreorderSuccessEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t PreorderSuccessEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PreorderSuccessEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PreorderSuccessEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3205A8);
}

uint64_t PreorderSuccessEvent.Model.init(contentData:contentStoreData:sectionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(unsigned char *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 24) = v9;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 56) = v12;
  *(_DWORD *)(a5 + 60) = v13;
  *(unsigned char *)(a5 + 64) = v14;
  *(_DWORD *)(a5 + 68) = v15;
  *(unsigned char *)(a5 + 72) = v16;
  int v17 = *(_DWORD *)(a1 + 73);
  long long v18 = *a2;
  long long v19 = a2[1];
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v18;
  long long v20 = a2[2];
  long long v21 = a2[3];
  *(_OWORD *)(a5 + 112) = v19;
  *(_OWORD *)(a5 + 128) = v20;
  *(_OWORD *)(a5 + 144) = v21;
  long long v22 = a3[1];
  *(_OWORD *)(a5 + 168) = *a3;
  *(_OWORD *)(a5 + 184) = v22;
  long long v23 = a3[3];
  *(_OWORD *)(a5 + 200) = a3[2];
  *(_OWORD *)(a5 + 216) = v23;
  long long v24 = a3[5];
  *(_OWORD *)(a5 + 232) = a3[4];
  char v25 = *(unsigned char *)(a1 + 77);
  LODWORD(v10) = *((_DWORD *)a2 + 16);
  LOBYTE(v11) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a5 + 73) = v17;
  *(unsigned char *)(a5 + 77) = v25;
  *(unsigned char *)(a5 + 164) = v11;
  *(_DWORD *)(a5 + 160) = v10;
  *(_OWORD *)(a5 + 248) = v24;
  *(_OWORD *)(a5 + 264) = a3[6];
  uint64_t v26 = a5 + *(int *)(type metadata accessor for PreorderSuccessEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_188888()
{
  unint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_188924(uint64_t a1)
{
  unint64_t v2 = sub_188C64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_188960(uint64_t a1)
{
  unint64_t v2 = sub_188C64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PreorderSuccessEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_3204A0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_188C64();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)uint64_t v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    type metadata accessor for PreorderSuccessEvent.Model(0);
    LOBYTE(v32) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_188C64()
{
  unint64_t result = qword_3204A8;
  if (!qword_3204A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3204A8);
  }
  return result;
}

uint64_t PreorderSuccessEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4E04(&qword_3204B0);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreorderSuccessEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  unsigned int v44 = a1;
  sub_5900(a1, v11);
  sub_188C64();
  long long v12 = v7;
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v14 = v10;
  __int16 v15 = v5;
  uint64_t v17 = v41;
  uint64_t v16 = v42;
  char v52 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v46 + 1);
  char v19 = v47[0];
  long long v20 = *(_OWORD *)&v47[8];
  uint64_t v21 = *(void *)&v47[24];
  uint64_t v22 = v48;
  __int16 v23 = WORD4(v48);
  int v24 = HIDWORD(v48);
  char v25 = v49;
  int v26 = DWORD1(v49);
  char v27 = BYTE8(v49);
  char v28 = BYTE13(v49);
  *(void *)uint64_t v14 = v46;
  *((void *)v14 + 1) = v18;
  unsigned char v14[16] = v19;
  *(_OWORD *)(v14 + 24) = v20;
  *((void *)v14 + 5) = v21;
  *((void *)v14 + 6) = v22;
  *((_WORD *)v14 + 28) = v23;
  *((_DWORD *)v14 + 15) = v24;
  v14[64] = v25;
  *((_DWORD *)v14 + 17) = v26;
  v14[72] = v27;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v49 + 9);
  v14[77] = v28;
  *((_OWORD *)v14 + 5) = v50;
  char v52 = 1;
  sub_6D068();
  sub_27E1F0();
  int v29 = v49;
  char v30 = BYTE4(v49);
  long long v31 = *(_OWORD *)v47;
  *((_OWORD *)v14 + 6) = v46;
  *((_OWORD *)v14 + 7) = v31;
  long long v32 = v48;
  *((_OWORD *)v14 + 8) = *(_OWORD *)&v47[16];
  *((_OWORD *)v14 + 9) = v32;
  v14[164] = v30;
  *((_DWORD *)v14 + 40) = v29;
  char v52 = 2;
  sub_20898();
  sub_27E1F0();
  long long v33 = *(_OWORD *)v47;
  *(_OWORD *)(v14 + 168) = v46;
  long long v34 = *(_OWORD *)&v47[16];
  long long v35 = v48;
  *(_OWORD *)(v14 + 184) = v33;
  *(_OWORD *)(v14 + 200) = v34;
  long long v36 = v49;
  long long v37 = v50;
  *(_OWORD *)(v14 + 216) = v35;
  *(_OWORD *)(v14 + 232) = v36;
  long long v38 = v51;
  *(_OWORD *)(v14 + 248) = v37;
  *(_OWORD *)(v14 + 264) = v38;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v43);
  (*(void (**)(void, char *, uint64_t))(v16 + 32))(*(int *)(v8 + 28), v15, v3);
  sub_1891B8(0, v40);
  sub_5E94((uint64_t)v44);
  return sub_18921C(0);
}

uint64_t sub_1891B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreorderSuccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18921C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreorderSuccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_189278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PreorderSuccessEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_189290(void *a1)
{
  return PreorderSuccessEvent.Model.encode(to:)(a1);
}

uint64_t sub_1892A8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A00, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320470, a1);
}

uint64_t sub_1892E0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A08, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320488, a1);
}

uint64_t getEnumTagSinglePayload for PreorderSuccessEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18932C);
}

uint64_t sub_18932C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for PreorderSuccessEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1894E8);
}

uint64_t sub_1894E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t getEnumTagSinglePayload for PreorderSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1896B0);
}

uint64_t sub_1896B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PreorderSuccessEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_189774);
}

uint64_t sub_189774(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_18981C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreorderSuccessEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x189994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreorderSuccessEvent.Model.CodingKeys()
{
  return &type metadata for PreorderSuccessEvent.Model.CodingKeys;
}

unint64_t sub_1899D0()
{
  unint64_t result = qword_3205E8;
  if (!qword_3205E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3205E8);
  }
  return result;
}

unint64_t sub_189A28()
{
  unint64_t result = qword_3205F0;
  if (!qword_3205F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3205F0);
  }
  return result;
}

unint64_t sub_189A80()
{
  unint64_t result = qword_3205F8;
  if (!qword_3205F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3205F8);
  }
  return result;
}

void __swiftcall ReadingSettingsData.init(scrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:)(BookAnalytics::ReadingSettingsData *__return_ptr retstr, BookAnalytics::ScrollViewStatus scrollViewStatus, BookAnalytics::AutoNightThemeStatus autoNightThemeStatus, BookAnalytics::BackgroundColor backgroundColor, Swift::String font, Swift::Float fontSize, Swift::Float brightnessLevel)
{
  BookAnalytics::AutoNightThemeStatus v7 = *(unsigned char *)autoNightThemeStatus;
  BookAnalytics::BackgroundColor v8 = *(unsigned char *)backgroundColor;
  retstr->scrollViewStatus = *(unsigned char *)scrollViewStatus;
  retstr->autoNightThemeStatus = v7;
  retstr->backgroundColor = v8;
  retstr->font = font;
  retstr->fontSize = fontSize;
  retstr->brightnessLevel = brightnessLevel;
}

float ReadingSettingsData.fontSize.getter()
{
  return *(float *)(v0 + 24);
}

void ReadingSettingsData.fontSize.setter(float a1)
{
  *(float *)(v1 + 24) = a1;
}

float ReadingSettingsData.brightnessLevel.getter()
{
  return *(float *)(v0 + 28);
}

void ReadingSettingsData.brightnessLevel.setter(float a1)
{
  *(float *)(v1 + 28) = a1;
}

unint64_t sub_189B1C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x756F72676B636162;
      break;
    case 3:
      unint64_t result = 1953394534;
      break;
    case 4:
      unint64_t result = 0x657A6953746E6F66;
      break;
    case 5:
      unint64_t result = 0x656E746867697262;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_189BFC()
{
  return sub_189B1C(*v0);
}

uint64_t sub_189C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18A8E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_189C2C(uint64_t a1)
{
  unint64_t v2 = sub_18A428();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_189C68(uint64_t a1)
{
  unint64_t v2 = sub_18A428();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingSettingsData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_320600);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BookAnalytics::AutoNightThemeStatus v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v14 = v1[2];
  int v15 = v9;
  uint64_t v10 = *((void *)v1 + 1);
  v13[0] = *((void *)v1 + 2);
  v13[1] = v10;
  sub_5900(a1, a1[3]);
  sub_18A428();
  sub_27E440();
  char v24 = v8;
  char v23 = 0;
  sub_103EC4();
  sub_27E330();
  if (!v2)
  {
    char v11 = v14;
    char v22 = v15;
    char v21 = 1;
    sub_161FA4();
    sub_27E330();
    char v20 = v11;
    char v19 = 2;
    sub_18A47C();
    sub_27E330();
    char v18 = 3;
    sub_27E2F0();
    char v17 = 4;
    sub_27E320();
    char v16 = 5;
    sub_27E320();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ReadingSettingsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_320618);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_18A428();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v32 = 0;
  sub_103F18();
  sub_27E260();
  char v9 = v33;
  char v30 = 1;
  sub_162160();
  sub_27E260();
  int v10 = v31;
  char v28 = 2;
  sub_18A4D0();
  sub_27E260();
  int v24 = v10;
  int v11 = v29;
  char v27 = 3;
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  int v23 = v11;
  char v26 = 4;
  swift_bridgeObjectRetain();
  sub_27E250();
  int v16 = v15;
  uint64_t v21 = v14;
  char v25 = 5;
  sub_27E250();
  int v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(unsigned char *)a2 = v9;
  *(unsigned char *)(a2 + 1) = v24;
  *(unsigned char *)(a2 + 2) = v23;
  uint64_t v20 = v21;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v20;
  *(_DWORD *)(a2 + 24) = v16;
  *(_DWORD *)(a2 + 28) = v19;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18A240@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingSettingsData.init(from:)(a1, a2);
}

uint64_t sub_18A258(void *a1)
{
  return ReadingSettingsData.encode(to:)(a1);
}

BOOL _s13BookAnalytics19ReadingSettingsDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  unsigned __int8 v3 = a1[1];
  unsigned __int8 v4 = a1[2];
  uint64_t v6 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  float v8 = *((float *)a1 + 6);
  float v7 = *((float *)a1 + 7);
  char v9 = *(unsigned char *)(a2 + 1);
  char v10 = *(unsigned char *)(a2 + 2);
  uint64_t v11 = *(void *)(a2 + 8);
  float v13 = *(float *)(a2 + 24);
  float v12 = *(float *)(a2 + 28);
  unint64_t v14 = 0xE200000000000000;
  uint64_t v15 = 28271;
  if (v2 != 1)
  {
    uint64_t v15 = 6710895;
    unint64_t v14 = 0xE300000000000000;
  }
  if (*a1) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v17 = v14;
  }
  else {
    unint64_t v17 = 0xE700000000000000;
  }
  unint64_t v18 = 0xE200000000000000;
  uint64_t v19 = 28271;
  if (*(unsigned char *)a2 != 1)
  {
    uint64_t v19 = 6710895;
    unint64_t v18 = 0xE300000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0x6E776F6E6B6E75;
  }
  if (*(unsigned char *)a2) {
    unint64_t v21 = v18;
  }
  else {
    unint64_t v21 = 0xE700000000000000;
  }
  uint64_t v26 = *(void *)(a2 + 16);
  if (v16 == v20 && v17 == v21)
  {
    uint64_t v22 = v5;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v22 = v5;
    char v23 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v23 & 1) == 0) {
      return result;
    }
  }
  if ((sub_2F00C(v3, v9) & 1) == 0 || (sub_2FC64(v4, v10) & 1) == 0) {
    return 0;
  }
  if (v6 == v11 && v22 == v26)
  {
    if (v8 != v13) {
      return 0;
    }
    return v7 == v12;
  }
  char v25 = sub_27E370();
  BOOL result = 0;
  if ((v25 & 1) != 0 && v8 == v13) {
    return v7 == v12;
  }
  return result;
}

unint64_t sub_18A428()
{
  unint64_t result = qword_320608;
  if (!qword_320608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320608);
  }
  return result;
}

unint64_t sub_18A47C()
{
  unint64_t result = qword_320610;
  if (!qword_320610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320610);
  }
  return result;
}

unint64_t sub_18A4D0()
{
  unint64_t result = qword_320620;
  if (!qword_320620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320620);
  }
  return result;
}

uint64_t initializeWithCopy for ReadingSettingsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingSettingsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  return a1;
}

uint64_t assignWithTake for ReadingSettingsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingSettingsData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingSettingsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSettingsData()
{
  return &type metadata for ReadingSettingsData;
}

unsigned char *storeEnumTagSinglePayload for ReadingSettingsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18A7A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSettingsData.CodingKeys()
{
  return &type metadata for ReadingSettingsData.CodingKeys;
}

unint64_t sub_18A7DC()
{
  unint64_t result = qword_320628;
  if (!qword_320628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320628);
  }
  return result;
}

unint64_t sub_18A834()
{
  unint64_t result = qword_320630;
  if (!qword_320630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320630);
  }
  return result;
}

unint64_t sub_18A88C()
{
  unint64_t result = qword_320638;
  if (!qword_320638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320638);
  }
  return result;
}

uint64_t sub_18A8E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFC10 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AFC30 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657A6953746E6F66 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656E746867697262 && a2 == 0xEF6C6576654C7373)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_18AB94(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320640, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchResultsReturnedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320640, a1);
}

uint64_t sub_18ABF4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320658, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchResultsReturnedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320658, a1);
}

uint64_t SearchResultsReturnedEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31A208);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultsReturnedEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3206E0);
}

uint64_t SearchResultsReturnedEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31A208);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchResultsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultsReturnedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchResultsReturnedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchResultsReturnedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SearchResultsReturnedEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v6, v9);
}

uint64_t SearchResultsReturnedEvent.Model.searchResultsData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsReturnedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_320778);
}

uint64_t SearchResultsReturnedEvent.Model.init(searchData:searchResultsData:eventData:)@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  long long v7 = a1[1];
  *(_OWORD *)a4 = *a1;
  *(_OWORD *)(a4 + 16) = v7;
  *(void *)(a4 + 32) = v6;
  uint64_t v8 = a4 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 24);
  uint64_t v9 = sub_27D7C0();
  char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v10(v8, a3, v9);
}

uint64_t sub_18B14C()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144686372616573;
  }
}

uint64_t sub_18B1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18CF58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18B1DC(uint64_t a1)
{
  unint64_t v2 = sub_18B450();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_18B218(uint64_t a1)
{
  unint64_t v2 = sub_18B450();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchResultsReturnedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_320670);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_18B450();
  sub_27E440();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  char v12 = 0;
  sub_B11C8();
  sub_27E2C0();
  if (!v2)
  {
    *(void *)&long long v13 = *((void *)v3 + 4);
    char v12 = 1;
    sub_B1270();
    sub_27E330();
    type metadata accessor for SearchResultsReturnedEvent.Model(0);
    LOBYTE(v13) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_18B450()
{
  unint64_t result = qword_320678;
  if (!qword_320678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320678);
  }
  return result;
}

uint64_t SearchResultsReturnedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_320680);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v24 = a1;
  sub_5900(a1, v13);
  sub_18B450();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v24);
  }
  uint64_t v14 = v22;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v19 = v6;
  char v27 = 0;
  sub_B1968();
  uint64_t v16 = v23;
  sub_27E1F0();
  long long v17 = v26;
  *(_OWORD *)uint64_t v15 = v25;
  *(_OWORD *)(v15 + 16) = v17;
  char v27 = 1;
  sub_B1A10();
  sub_27E260();
  *(void *)(v15 + 32) = v25;
  LOBYTE(v25) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v15 + *(int *)(v10 + 24), v19, v4);
  sub_18B824(v15, v21);
  sub_5E94((uint64_t)v24);
  return sub_18B888(v15);
}

uint64_t sub_18B824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18B888(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18B8E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsReturnedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_18B8FC(void *a1)
{
  return SearchResultsReturnedEvent.Model.encode(to:)(a1);
}

uint64_t sub_18B914@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320640, a1);
}

uint64_t sub_18B94C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320658, a1);
}

uint64_t sub_18B984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v7, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31A208);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31A208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18C168);
}

uint64_t sub_18C168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31A208);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18C2D4);
}

uint64_t sub_18C2D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31A208);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_18C438()
{
  sub_18C5AC(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
  if (v0 <= 0x3F)
  {
    sub_18C5AC(319, &qword_31A2E8, (void (*)(void))sub_B1A10, (void (*)(void))sub_B1270);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_18C5AC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v10;
    }
    a1[4] = a2[4];
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_27D7C0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for SearchResultsReturnedEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  a1[4] = a2[4];
  uint64_t v9 = *(int *)(a3 + 24);
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

void *assignWithCopy for SearchResultsReturnedEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B9D48((uint64_t)a1);
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_B9D48(a1);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18CB3C);
}

uint64_t sub_18CB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18CC00);
}

uint64_t sub_18CC00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_18CCA8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18CE18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsReturnedEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultsReturnedEvent.Model.CodingKeys;
}

unint64_t sub_18CE54()
{
  unint64_t result = qword_3207B8;
  if (!qword_3207B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207B8);
  }
  return result;
}

unint64_t sub_18CEAC()
{
  unint64_t result = qword_3207C0;
  if (!qword_3207C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207C0);
  }
  return result;
}

unint64_t sub_18CF04()
{
  unint64_t result = qword_3207C8;
  if (!qword_3207C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207C8);
  }
  return result;
}

uint64_t sub_18CF58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AEBD0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_18D0C4()
{
  return 0xD000000000000011;
}

uint64_t sub_18D0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18D940(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_18D10C(uint64_t a1)
{
  unint64_t v2 = sub_18D55C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_18D148(uint64_t a1)
{
  unint64_t v2 = sub_18D55C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WelcomeActionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3207D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_18D55C();
  sub_27E440();
  char v10 = v7;
  sub_18D5B0();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WelcomeActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3207E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_18D55C();
  sub_27E430();
  if (!v2)
  {
    sub_18D604();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_18D434@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return WelcomeActionData.init(from:)(a1, a2);
}

uint64_t sub_18D44C(void *a1)
{
  return WelcomeActionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics17WelcomeActionDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 1885956979;
  if (v2 != 1)
  {
    uint64_t v4 = 0x65756E69746E6F63;
    unint64_t v3 = 0xE800000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  unint64_t v7 = 0xE400000000000000;
  uint64_t v8 = 1885956979;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x65756E69746E6F63;
    unint64_t v7 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_18D55C()
{
  unint64_t result = qword_3207D8;
  if (!qword_3207D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207D8);
  }
  return result;
}

unint64_t sub_18D5B0()
{
  unint64_t result = qword_3207E0;
  if (!qword_3207E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207E0);
  }
  return result;
}

unint64_t sub_18D604()
{
  unint64_t result = qword_3207F0;
  if (!qword_3207F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WelcomeActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18D72CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeActionData()
{
  return &type metadata for WelcomeActionData;
}

unsigned char *storeEnumTagSinglePayload for WelcomeActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x18D800);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeActionData.CodingKeys()
{
  return &type metadata for WelcomeActionData.CodingKeys;
}

unint64_t sub_18D83C()
{
  unint64_t result = qword_3207F8;
  if (!qword_3207F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3207F8);
  }
  return result;
}

unint64_t sub_18D894()
{
  unint64_t result = qword_320800;
  if (!qword_320800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320800);
  }
  return result;
}

unint64_t sub_18D8EC()
{
  unint64_t result = qword_320808;
  if (!qword_320808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320808);
  }
  return result;
}

uint64_t sub_18D940(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1240)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_18D9C8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320810, &enum case for SessionGroup.default(_:));
}

uint64_t static UnifiedMessageActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A20, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320810, a1);
}

uint64_t sub_18DA28(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320828, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static UnifiedMessageActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A28, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320828, a1);
}

uint64_t UnifiedMessageActionEvent.messageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_320840);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t UnifiedMessageActionEvent.messageData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_320840);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t UnifiedMessageActionEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_320848);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UnifiedMessageActionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3208E0);
}

uint64_t UnifiedMessageActionEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_320848);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageActionEvent.actionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageActionEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnifiedMessageActionEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageActionEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnifiedMessageActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for UnifiedMessageActionEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t UnifiedMessageExposureEvent.Model.messageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 48);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t UnifiedMessageActionEvent.Model.actionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = *(void *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t UnifiedMessageActionEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[9];
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[13];
  uint64_t v7 = v1[14];
  uint64_t v8 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v10 = v1[17];
  uint64_t v11 = v1[18];
  uint64_t v12 = v1[19];
  uint64_t v13 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t UnifiedMessageActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageActionEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UnifiedMessageActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_320988);
}

uint64_t UnifiedMessageActionEvent.Model.init(messageData:actionData:contentData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_OWORD *)(a5 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  long long v6 = a3[1];
  *(_OWORD *)(a5 + 72) = *a3;
  *(_OWORD *)(a5 + 88) = v6;
  long long v7 = a3[3];
  *(_OWORD *)(a5 + 104) = a3[2];
  *(_OWORD *)(a5 + 120) = v7;
  long long v8 = a3[5];
  *(_OWORD *)(a5 + 136) = a3[4];
  char v9 = *(unsigned char *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  *(unsigned char *)a5 = *(unsigned char *)a1;
  *(unsigned char *)(a5 + 24) = v9;
  *(void *)(a5 + 48) = v10;
  *(void *)(a5 + 56) = v11;
  *(void *)(a5 + 64) = v12;
  *(_OWORD *)(a5 + 152) = v8;
  uint64_t v13 = a5 + *(int *)(type metadata accessor for UnifiedMessageActionEvent.Model(0) + 28);
  uint64_t v14 = sub_27D7C0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);

  return v15(v13, a4, v14);
}

uint64_t sub_18E2F4()
{
  uint64_t result = 0x446567617373656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61446E6F69746361;
      break;
    case 2:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 3:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_18E390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_190B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18E3B8(uint64_t a1)
{
  unint64_t v2 = sub_18E6A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_18E3F4(uint64_t a1)
{
  unint64_t v2 = sub_18E6A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UnifiedMessageActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_320850);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_18E6A8();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 48);
  v16[0] = *(unsigned char *)v3;
  *(_OWORD *)&v16[8] = *(_OWORD *)(v3 + 8);
  v16[24] = v9;
  long long v17 = *(_OWORD *)(v3 + 32);
  *(void *)&long long v18 = v10;
  char v21 = 0;
  sub_18E6FC();
  sub_27E330();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 64);
    *(void *)uint64_t v16 = *(void *)(v3 + 56);
    *(void *)&v16[8] = v11;
    char v21 = 1;
    sub_18E750();
    sub_27E330();
    long long v12 = *(_OWORD *)(v3 + 88);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)(v3 + 72);
    *(_OWORD *)&v16[16] = v12;
    long long v13 = *(_OWORD *)(v3 + 120);
    long long v17 = *(_OWORD *)(v3 + 104);
    long long v18 = v13;
    long long v14 = *(_OWORD *)(v3 + 152);
    long long v19 = *(_OWORD *)(v3 + 136);
    long long v20 = v14;
    char v21 = 2;
    sub_1A1D4();
    sub_27E2C0();
    type metadata accessor for UnifiedMessageActionEvent.Model(0);
    v16[0] = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_18E6A8()
{
  unint64_t result = qword_320858;
  if (!qword_320858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320858);
  }
  return result;
}

unint64_t sub_18E6FC()
{
  unint64_t result = qword_320860;
  if (!qword_320860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320860);
  }
  return result;
}

unint64_t sub_18E750()
{
  unint64_t result = qword_320868;
  if (!qword_320868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320868);
  }
  return result;
}

uint64_t UnifiedMessageActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_4E04(&qword_320870);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UnifiedMessageActionEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v28 = a1;
  sub_5900(a1, v12);
  sub_18E6A8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v28);
  }
  long long v13 = v11;
  uint64_t v23 = v6;
  uint64_t v15 = v25;
  uint64_t v14 = v26;
  char v34 = 0;
  sub_18EC28();
  sub_27E260();
  char v16 = v29[24];
  uint64_t v17 = v31;
  *long long v13 = v29[0];
  *(_OWORD *)(v13 + 8) = *(_OWORD *)&v29[8];
  v13[24] = v16;
  *((_OWORD *)v13 + 2) = v30;
  *((void *)v13 + 6) = v17;
  char v34 = 1;
  sub_18EC7C();
  sub_27E260();
  uint64_t v18 = *(void *)&v29[8];
  *((void *)v13 + 7) = *(void *)v29;
  *((void *)v13 + 8) = v18;
  char v34 = 2;
  sub_1A98C();
  sub_27E1F0();
  long long v19 = *(_OWORD *)&v29[16];
  *(_OWORD *)(v13 + 72) = *(_OWORD *)v29;
  *(_OWORD *)(v13 + 88) = v19;
  long long v20 = v31;
  *(_OWORD *)(v13 + 104) = v30;
  *(_OWORD *)(v13 + 120) = v20;
  long long v21 = v33;
  *(_OWORD *)(v13 + 136) = v32;
  *(_OWORD *)(v13 + 152) = v21;
  v29[0] = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v27);
  (*(void (**)(void, char *, uint64_t))(v14 + 32))(*(int *)(v9 + 28), v23, v4);
  sub_18ECD0(0, v24);
  sub_5E94((uint64_t)v28);
  return sub_18ED34(0);
}

unint64_t sub_18EC28()
{
  unint64_t result = qword_320878;
  if (!qword_320878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320878);
  }
  return result;
}

unint64_t sub_18EC7C()
{
  unint64_t result = qword_320880;
  if (!qword_320880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320880);
  }
  return result;
}

uint64_t sub_18ECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnifiedMessageActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18ED34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnifiedMessageActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18ED90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UnifiedMessageActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_18EDA8(void *a1)
{
  return UnifiedMessageActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_18EDC0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A20, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320810, a1);
}

uint64_t sub_18EDF8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A28, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320828, a1);
}

uint64_t sub_18EE30@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnifiedMessageActionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_320840);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_320848);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    long long v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for UnifiedMessageActionEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18F824);
}

uint64_t sub_18F824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_320848);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for UnifiedMessageActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18F9E0);
}

uint64_t sub_18F9E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_320840);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_320848);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_18FB94()
{
  sub_18FD7C(319, &qword_3208F0, (void (*)(void))sub_18EC28, (void (*)(void))sub_18E6FC);
  if (v0 <= 0x3F)
  {
    sub_18FD7C(319, (unint64_t *)&unk_3208F8, (void (*)(void))sub_18EC7C, (void (*)(void))sub_18E750);
    if (v1 <= 0x3F)
    {
      sub_18FD7C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_18FD7C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for UnifiedMessageActionEvent.Model(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (unsigned char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    v4[24] = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[5];
    *((void *)v4 + 4) = a2[4];
    *((void *)v4 + 5) = v8;
    uint64_t v9 = a2[7];
    *((void *)v4 + 6) = a2[6];
    *((void *)v4 + 7) = v9;
    *((void *)v4 + 8) = a2[8];
    uint64_t v10 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *((void *)v4 + 9) = a2[9];
      *((void *)v4 + 10) = v10;
      v4[88] = *((unsigned char *)a2 + 88);
      uint64_t v11 = a2[13];
      *((void *)v4 + 12) = a2[12];
      *((void *)v4 + 13) = v11;
      uint64_t v12 = a2[15];
      *((void *)v4 + 14) = a2[14];
      *((void *)v4 + 15) = v12;
      *((_WORD *)v4 + 64) = *((_WORD *)a2 + 64);
      v4[136] = *((unsigned char *)a2 + 136);
      *((_DWORD *)v4 + 33) = *((_DWORD *)a2 + 33);
      *((_DWORD *)v4 + 35) = *((_DWORD *)a2 + 35);
      v4[144] = *((unsigned char *)a2 + 144);
      *(_DWORD *)(v4 + 145) = *(_DWORD *)((char *)a2 + 145);
      v4[149] = *((unsigned char *)a2 + 149);
      uint64_t v13 = a2[20];
      *((void *)v4 + 19) = a2[19];
      *((void *)v4 + 20) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(v4 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(v4 + 120) = v15;
      long long v16 = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(v4 + 136) = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(v4 + 152) = v16;
      long long v17 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v4 + 88) = v17;
    }
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = &v4[v18];
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_27D7C0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v9;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 145) = *(_DWORD *)(a2 + 145);
    *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
    uint64_t v12 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v14;
    long long v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 72);
  uint64_t v7 = (_OWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v8)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      int v9 = *(_DWORD *)(a2 + 132);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_DWORD *)(a1 + 132) = v9;
      int v10 = *(_DWORD *)(a2 + 140);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_DWORD *)(a1 + 140) = v10;
      *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
      *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
      *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
      *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
      *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 72);
      long long v13 = *(_OWORD *)(a2 + 88);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 88) = v13;
      long long v14 = *(_OWORD *)(a2 + 152);
      long long v16 = *(_OWORD *)(a2 + 104);
      long long v15 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v14;
      *(_OWORD *)(a1 + 104) = v16;
      *(_OWORD *)(a1 + 120) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    int v11 = *(_DWORD *)(a2 + 132);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_DWORD *)(a1 + 132) = v11;
    int v12 = *(_DWORD *)(a2 + 140);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 140) = v12;
    *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
    *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
    *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
    *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
    *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 88);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 88) = v17;
    long long v18 = *(_OWORD *)(a2 + 104);
    long long v19 = *(_OWORD *)(a2 + 120);
    long long v20 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v20;
    *(_OWORD *)(a1 + 104) = v18;
    *(_OWORD *)(a1 + 120) = v19;
  }
  uint64_t v21 = *(int *)(a3 + 28);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 80)) {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  if (!v9)
  {
    sub_62898(a1 + 72);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v14;
    long long v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
    goto LABEL_6;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_DWORD *)(a1 + 145) = *(_DWORD *)(a2 + 145);
  *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19076C);
}

uint64_t sub_19076C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UnifiedMessageActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_190830);
}

uint64_t sub_190830(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1908D8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnifiedMessageActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessageActionEvent.Model.CodingKeys()
{
  return &type metadata for UnifiedMessageActionEvent.Model.CodingKeys;
}

unint64_t sub_190A8C()
{
  unint64_t result = qword_3209C8;
  if (!qword_3209C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3209C8);
  }
  return result;
}

unint64_t sub_190AE4()
{
  unint64_t result = qword_3209D0;
  if (!qword_3209D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3209D0);
  }
  return result;
}

unint64_t sub_190B3C()
{
  unint64_t result = qword_3209D8;
  if (!qword_3209D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3209D8);
  }
  return result;
}

uint64_t sub_190B90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446567617373656DLL && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_190D94()
{
  return 0xD000000000000011;
}

uint64_t sub_190DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191640(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_190DDC(uint64_t a1)
{
  unint64_t v2 = sub_19125C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_190E18(uint64_t a1)
{
  unint64_t v2 = sub_19125C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GiftFailData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3209E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_19125C();
  sub_27E440();
  char v10 = v7;
  sub_1912B0();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GiftFailData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3209F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19125C();
  sub_27E430();
  if (!v2)
  {
    sub_191304();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_191104@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GiftFailData.init(from:)(a1, a2);
}

uint64_t sub_19111C(void *a1)
{
  return GiftFailData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics18RedownloadFailDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x436572756C696166;
  unint64_t v4 = 0xEC0000003165646FLL;
  if (v2 != 1)
  {
    uint64_t v3 = 0x6F436572756C6166;
    unint64_t v4 = 0xEB00000000326564;
  }
  if (*a1) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  uint64_t v7 = 0x436572756C696166;
  unint64_t v8 = 0xEC0000003165646FLL;
  if (*a2 != 1)
  {
    uint64_t v7 = 0x6F436572756C6166;
    unint64_t v8 = 0xEB00000000326564;
  }
  if (*a2) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_19125C()
{
  unint64_t result = qword_3209E8;
  if (!qword_3209E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3209E8);
  }
  return result;
}

unint64_t sub_1912B0()
{
  unint64_t result = qword_3209F0;
  if (!qword_3209F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3209F0);
  }
  return result;
}

unint64_t sub_191304()
{
  unint64_t result = qword_320A00;
  if (!qword_320A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GiftFailData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19142CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GiftFailData()
{
  return &type metadata for GiftFailData;
}

unsigned char *storeEnumTagSinglePayload for GiftFailData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191500);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GiftFailData.CodingKeys()
{
  return &type metadata for GiftFailData.CodingKeys;
}

unint64_t sub_19153C()
{
  unint64_t result = qword_320A08;
  if (!qword_320A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A08);
  }
  return result;
}

unint64_t sub_191594()
{
  unint64_t result = qword_320A10;
  if (!qword_320A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A10);
  }
  return result;
}

unint64_t sub_1915EC()
{
  unint64_t result = qword_320A18;
  if (!qword_320A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A18);
  }
  return result;
}

uint64_t sub_191640(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1260)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BookAnalytics::SkipDirection_optional __swiftcall SkipDirection.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  char v3 = v1;
  v4._rawValue = &off_2F8F90;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *char v3 = v7;
  return result;
}

uint64_t SkipDirection.rawValue.getter()
{
  uint64_t v1 = 0x64726177726F66;
  if (*v0 != 1) {
    uint64_t v1 = 1801675106;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_191778(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2C64C(*a1, *a2);
}

unint64_t sub_191788()
{
  unint64_t result = qword_320A20;
  if (!qword_320A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A20);
  }
  return result;
}

Swift::Int sub_1917DC()
{
  return sub_27E420();
}

uint64_t sub_191878()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_191900()
{
  return sub_27E420();
}

BookAnalytics::SkipDirection_optional sub_191998(Swift::String *a1)
{
  return SkipDirection.init(rawValue:)(*a1);
}

void sub_1919A4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64726177726F66;
  if (v2 != 1)
  {
    uint64_t v5 = 1801675106;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1919FC()
{
  return sub_27DED0();
}

uint64_t sub_191A5C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SkipDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkipDirection()
{
  return &type metadata for SkipDirection;
}

unint64_t sub_191BB0()
{
  unint64_t result = qword_320A28;
  if (!qword_320A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320A28);
  }
  return result;
}

uint64_t sub_191C04(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320A30, &enum case for SessionGroup.default(_:));
}

uint64_t static AppSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A30, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320A30, a1);
}

uint64_t sub_191C64(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320A48, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AppSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A38, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320A48, a1);
}

uint64_t AppSessionEndEvent.sessionReadingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_320A60);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppSessionEndEvent.sessionReadingData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_320A60);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AppSessionEndEvent.sessionListeningData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_320A68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionEndEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_320B28);
}

uint64_t AppSessionEndEvent.sessionListeningData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_320A68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.sessionListeningData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.sessionEndReasonData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_320A70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.sessionEndReasonData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_320A70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.sessionEndReasonData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.ampTreatmentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_320A78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.ampTreatmentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_320A78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.ampTreatmentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.booksTreatmentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_320A80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.booksTreatmentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_320A80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.booksTreatmentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.orientationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.userEventStorageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_320A88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.userEventStorageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_320A88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.userEventStorageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AppSessionEndEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  uint64_t v16 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v2, v16);
  uint64_t v17 = a1 + v4[11];
  uint64_t v18 = enum case for EventProperty.required<A>(_:);
  uint64_t v19 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_315DE8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v18, v21);
}

void AppSessionEndEvent.Model.sessionReadingData.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 12);
  *(void *)a1 = *(void *)v1;
  *(_DWORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 12) = v3;
}

void AppSessionEndEvent.Model.sessionListeningData.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 28);
  char v4 = *(unsigned char *)(v1 + 29);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 13) = v4;
}

void AppSessionEndEvent.Model.sessionEndReasonData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 30);
}

uint64_t AppSessionEndEvent.Model.booksTreatmentData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

__n128 AppSessionEndEvent.Model.orientationData.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v2 = v1[4].n128_u32[0];
  __n128 result = v1[3];
  *a1 = result;
  a1[1].n128_u32[0] = v2;
  return result;
}

uint64_t AppSessionEndEvent.Model.userEventStorageData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_192B5C(v1 + 72, (uint64_t)v4);
  sub_192B5C((uint64_t)v4, a1);
  return sub_193C94((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_192BC4);
}

uint64_t sub_192B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_192BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a34 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 44);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionEndEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_320C08);
}

uint64_t AppSessionEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.Model.init(sessionReadingData:sessionListeningData:sessionEndReasonData:ampTreatmentData:booksTreatmentData:orientationData:userEventStorageData:eventData:timedData:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11 = *a1;
  int v12 = *((_DWORD *)a1 + 2);
  char v13 = *((unsigned char *)a1 + 12);
  uint64_t v14 = *a2;
  int v29 = *((_DWORD *)a2 + 2);
  char v15 = *((unsigned char *)a2 + 12);
  char v16 = *((unsigned char *)a2 + 13);
  char v17 = *a3;
  uint64_t v18 = *a4;
  uint64_t v19 = *a5;
  uint64_t v26 = a6[1];
  uint64_t v27 = *a6;
  int v28 = *((_DWORD *)a6 + 4);
  sub_192B5C(a7, (uint64_t)v31);
  *(void *)a9 = v11;
  *(_DWORD *)(a9 + 8) = v12;
  *(unsigned char *)(a9 + 12) = v13;
  *(void *)(a9 + 16) = v14;
  *(unsigned char *)(a9 + 28) = v15;
  *(_DWORD *)(a9 + 24) = v29;
  *(unsigned char *)(a9 + 29) = v16;
  *(unsigned char *)(a9 + 30) = v17;
  *(void *)(a9 + 32) = v18;
  *(void *)(a9 + 40) = v19;
  *(void *)(a9 + 48) = v27;
  *(void *)(a9 + 56) = v26;
  *(_DWORD *)(a9 + 64) = v28;
  sub_192B5C((uint64_t)v31, a9 + 72);
  uint64_t v20 = type metadata accessor for AppSessionEndEvent.Model(0);
  uint64_t v21 = a9 + *(int *)(v20 + 44);
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a8, v22);
  uint64_t v23 = a9 + *(int *)(v20 + 48);
  uint64_t v24 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a10, v24);
}

uint64_t sub_192EA0(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 2:
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 7:
      uint64_t v3 = 0x44746E657665;
      goto LABEL_7;
    case 8:
      uint64_t v3 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_192FB0()
{
  return sub_192EA0(*v0);
}

uint64_t sub_192FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1972F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_192FE0(uint64_t a1)
{
  unint64_t v2 = sub_193474();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19301C(uint64_t a1)
{
  unint64_t v2 = sub_193474();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppSessionEndEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_320A98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_193474();
  sub_27E440();
  int v9 = *((_DWORD *)v3 + 2);
  char v10 = *((unsigned char *)v3 + 12);
  uint64_t v18 = *v3;
  int v19 = v9;
  char v20 = v10;
  v17[0] = 0;
  sub_B567C();
  sub_27E2C0();
  if (!v2)
  {
    int v11 = *((_DWORD *)v3 + 6);
    char v12 = *((unsigned char *)v3 + 28);
    char v13 = *((unsigned char *)v3 + 29);
    uint64_t v18 = v3[2];
    char v20 = v12;
    int v19 = v11;
    char v21 = v13;
    v17[0] = 1;
    sub_FC0C0();
    sub_27E2C0();
    LOBYTE(v18) = *((unsigned char *)v3 + 30);
    v17[0] = 2;
    sub_1934C8();
    sub_27E2C0();
    uint64_t v18 = v3[4];
    v17[0] = 3;
    sub_19351C();
    sub_27E2C0();
    uint64_t v18 = v3[5];
    v17[0] = 4;
    sub_17689C();
    sub_27E2C0();
    int v14 = *((_DWORD *)v3 + 16);
    long long v23 = *((_OWORD *)v3 + 3);
    int v24 = v14;
    char v22 = 5;
    sub_8E274();
    sub_27E2C0();
    sub_192B5C((uint64_t)(v3 + 9), (uint64_t)&v18);
    sub_192B5C((uint64_t)&v18, (uint64_t)v17);
    v16[15] = 6;
    sub_85AE8();
    sub_27E2C0();
    type metadata accessor for AppSessionEndEvent.Model(0);
    v17[0] = 7;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v17[0] = 8;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_193474()
{
  unint64_t result = qword_320AA0;
  if (!qword_320AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320AA0);
  }
  return result;
}

unint64_t sub_1934C8()
{
  unint64_t result = qword_320AA8;
  if (!qword_320AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320AA8);
  }
  return result;
}

unint64_t sub_19351C()
{
  unint64_t result = qword_320AB0;
  if (!qword_320AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320AB0);
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_27D7C0();
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4E04(&qword_320AB8);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for AppSessionEndEvent.Model(0);
  __chkstk_darwin(v31);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v36 = a1;
  sub_5900(a1, v13);
  sub_193474();
  long long v35 = v10;
  int v14 = v41;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v36);
  }
  uint64_t v41 = v7;
  uint64_t v27 = v5;
  uint64_t v15 = v33;
  v38[0] = 0;
  sub_B5624();
  sub_27E1F0();
  int v16 = DWORD2(v39);
  char v17 = BYTE12(v39);
  *(void *)char v12 = v39;
  *((_DWORD *)v12 + 2) = v16;
  v12[12] = v17;
  v38[0] = 1;
  sub_FC068();
  sub_27E1F0();
  uint64_t v18 = (uint64_t)v36;
  int v19 = DWORD2(v39);
  char v20 = BYTE12(v39);
  char v21 = BYTE13(v39);
  *((void *)v12 + 2) = v39;
  v12[28] = v20;
  *((_DWORD *)v12 + 6) = v19;
  v12[29] = v21;
  v38[0] = 2;
  sub_193D80();
  sub_27E1F0();
  v12[30] = v39;
  v38[0] = 3;
  sub_193DD4();
  sub_27E1F0();
  *((void *)v12 + 4) = v39;
  v38[0] = 4;
  sub_176844();
  sub_27E1F0();
  *((void *)v12 + 5) = v39;
  v38[0] = 5;
  sub_8ECCC();
  sub_27E1F0();
  int v22 = v40;
  *((_OWORD *)v12 + 3) = v39;
  *((_DWORD *)v12 + 16) = v22;
  v38[335] = 6;
  sub_85A90();
  sub_27E1F0();
  sub_192B5C((uint64_t)&v39, (uint64_t)v38);
  sub_192B5C((uint64_t)v38, (uint64_t)(v12 + 72));
  char v37 = 7;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v23 = v41;
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v31 + 44)], v23, v32);
  char v37 = 8;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  int v24 = v27;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v35, v34);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v12[*(int *)(v31 + 48)], v24, v3);
  sub_193E28((uint64_t)v12, v29);
  sub_5E94(v18);
  return sub_193E8C((uint64_t)v12);
}

uint64_t sub_193C94(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v9 = *(unsigned char *)(a1 + 328);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    *(void *)(a1 + 320),
    v9);
  return a1;
}

uint64_t sub_193D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t result = a34;
  if (a34 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_193D80()
{
  unint64_t result = qword_320AC0;
  if (!qword_320AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320AC0);
  }
  return result;
}

unint64_t sub_193DD4()
{
  unint64_t result = qword_320AC8;
  if (!qword_320AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320AC8);
  }
  return result;
}

uint64_t sub_193E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_193E8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_193EE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_193F00(void *a1)
{
  return AppSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_193F18@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A30, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320A30, a1);
}

uint64_t sub_193F50@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A38, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320A48, a1);
}

uint64_t sub_193F88@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  uint64_t v17 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v4, v17);
  uint64_t v18 = a2 + a1[11];
  uint64_t v19 = enum case for EventProperty.required<A>(_:);
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE8);
  long long v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v19, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionEndEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_320A60);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_320A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_320A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_320A78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_320A80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_319218);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_320A88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_320A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_320A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_320A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_320A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19539C);
}

uint64_t sub_19539C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320A60);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_320A68);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  uint64_t v14 = sub_4E04(&qword_320A70);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  uint64_t v15 = sub_4E04(&qword_320A78);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  uint64_t v16 = sub_4E04(&qword_320A80);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  uint64_t v17 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  uint64_t v18 = sub_4E04(&qword_320A88);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  uint64_t v21 = sub_4E04(&qword_315DE8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1956E8);
}

uint64_t sub_1956E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_320A60);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_320A68);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  uint64_t v16 = sub_4E04(&qword_320A70);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  uint64_t v17 = sub_4E04(&qword_320A78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  uint64_t v18 = sub_4E04(&qword_320A80);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  uint64_t v19 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  uint64_t v20 = sub_4E04(&qword_320A88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  uint64_t v21 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  uint64_t v23 = sub_4E04(&qword_315DE8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_195A2C()
{
  sub_195E20(319, &qword_320B38, (void (*)(void))sub_B5624, (void (*)(void))sub_B567C);
  if (v0 <= 0x3F)
  {
    sub_195E20(319, &qword_320B40, (void (*)(void))sub_FC068, (void (*)(void))sub_FC0C0);
    if (v1 <= 0x3F)
    {
      sub_195E20(319, &qword_320B48, (void (*)(void))sub_193D80, (void (*)(void))sub_1934C8);
      if (v2 <= 0x3F)
      {
        sub_195E20(319, &qword_320B50, (void (*)(void))sub_193DD4, (void (*)(void))sub_19351C);
        if (v3 <= 0x3F)
        {
          sub_195E20(319, &qword_320B58, (void (*)(void))sub_176844, (void (*)(void))sub_17689C);
          if (v4 <= 0x3F)
          {
            sub_195E20(319, (unint64_t *)&qword_3192F8, (void (*)(void))sub_8ECCC, (void (*)(void))sub_8E274);
            if (v5 <= 0x3F)
            {
              sub_195E20(319, (unint64_t *)&unk_320B60, (void (*)(void))sub_85A90, (void (*)(void))sub_85AE8);
              if (v6 <= 0x3F)
              {
                sub_6DA0();
                if (v7 <= 0x3F)
                {
                  sub_6E6C();
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_195E20(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AppSessionEndEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 22) = *(uint64_t *)((char *)a2 + 22);
    *(unsigned char *)(a1 + 30) = *((unsigned char *)a2 + 30);
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    unint64_t v8 = (void *)(a1 + 72);
    uint64_t v9 = a2 + 9;
    uint64_t v10 = a2[42];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == 1)
    {
      memcpy((void *)(v4 + 72), a2 + 9, 0x149uLL);
    }
    else
    {
      *unint64_t v8 = *v9;
      *(unsigned char *)(v4 + 80) = *((unsigned char *)a2 + 80);
      *(void *)(v4 + 88) = a2[11];
      *(unsigned char *)(v4 + 96) = *((unsigned char *)a2 + 96);
      *(void *)(v4 + 104) = a2[13];
      *(unsigned char *)(v4 + 112) = *((unsigned char *)a2 + 112);
      *(unsigned char *)(v4 + 128) = *((unsigned char *)a2 + 128);
      *(void *)(v4 + 120) = a2[15];
      uint64_t v12 = a2[17];
      *(unsigned char *)(v4 + 144) = *((unsigned char *)a2 + 144);
      *(void *)(v4 + 136) = v12;
      *(unsigned char *)(v4 + 160) = *((unsigned char *)a2 + 160);
      *(void *)(v4 + 152) = a2[19];
      *(unsigned char *)(v4 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(v4 + 168) = a2[21];
      *(unsigned char *)(v4 + 192) = *((unsigned char *)a2 + 192);
      *(void *)(v4 + 184) = a2[23];
      *(unsigned char *)(v4 + 208) = *((unsigned char *)a2 + 208);
      *(void *)(v4 + 200) = a2[25];
      uint64_t v13 = a2[27];
      *(unsigned char *)(v4 + 224) = *((unsigned char *)a2 + 224);
      *(void *)(v4 + 216) = v13;
      uint64_t v14 = a2[29];
      *(unsigned char *)(v4 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(v4 + 232) = v14;
      uint64_t v15 = a2[31];
      *(unsigned char *)(v4 + 256) = *((unsigned char *)a2 + 256);
      *(void *)(v4 + 248) = v15;
      uint64_t v16 = a2[33];
      *(unsigned char *)(v4 + 272) = *((unsigned char *)a2 + 272);
      *(void *)(v4 + 264) = v16;
      uint64_t v17 = a2[35];
      *(unsigned char *)(v4 + 288) = *((unsigned char *)a2 + 288);
      *(void *)(v4 + 280) = v17;
      uint64_t v18 = a2[37];
      *(unsigned char *)(v4 + 304) = *((unsigned char *)a2 + 304);
      *(void *)(v4 + 296) = v18;
      uint64_t v19 = a2[39];
      *(unsigned char *)(v4 + 320) = *((unsigned char *)a2 + 320);
      *(void *)(v4 + 312) = v19;
      *(void *)(v4 + 328) = a2[41];
      *(void *)(v4 + 336) = v10;
      uint64_t v20 = a2[43];
      *(unsigned char *)(v4 + 352) = *((unsigned char *)a2 + 352);
      *(void *)(v4 + 344) = v20;
      uint64_t v21 = a2[45];
      *(unsigned char *)(v4 + 368) = *((unsigned char *)a2 + 368);
      *(void *)(v4 + 360) = v21;
      uint64_t v22 = a2[48];
      *(void *)(v4 + 376) = a2[47];
      *(void *)(v4 + 384) = v22;
      uint64_t v23 = a2[49];
      *(unsigned char *)(v4 + 400) = *((unsigned char *)a2 + 400);
      *(void *)(v4 + 392) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v24 = *(int *)(a3 + 44);
    uint64_t v25 = v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(a3 + 48);
    uint64_t v29 = v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    uint64_t v31 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return v4;
}

uint64_t destroy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 336) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = sub_27D7F0();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 5) = *(void *)(a2 + 5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 22) = *(void *)(a2 + 22);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = (void *)(a1 + 72);
  unint64_t v8 = (unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    memcpy((void *)(a1 + 72), v8, 0x149uLL);
  }
  else
  {
    *uint64_t v7 = *(void *)v8;
    *(unsigned char *)(a1 + 80) = v8[8];
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    uint64_t v10 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v10;
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    uint64_t v11 = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    *(void *)(a1 + 216) = v11;
    uint64_t v12 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v12;
    uint64_t v13 = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(void *)(a1 + 248) = v13;
    uint64_t v14 = *(void *)(a2 + 264);
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
    *(void *)(a1 + 264) = v14;
    uint64_t v15 = *(void *)(a2 + 280);
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(void *)(a1 + 280) = v15;
    uint64_t v16 = *(void *)(a2 + 296);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    *(void *)(a1 + 296) = v16;
    uint64_t v17 = *(void *)(a2 + 312);
    *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
    *(void *)(a1 + 312) = v17;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v9;
    uint64_t v18 = *(void *)(a2 + 344);
    *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    *(void *)(a1 + 344) = v18;
    uint64_t v19 = *(void *)(a2 + 360);
    *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
    *(void *)(a1 + 360) = v19;
    uint64_t v20 = *(void *)(a2 + 384);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = v20;
    uint64_t v21 = *(void *)(a2 + 392);
    *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
    *(void *)(a1 + 392) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = *(int *)(a3 + 44);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 48);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(void *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(void *)(a1 + 22) = *(uint64_t *)((char *)a2 + 22);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 30) = *((unsigned char *)a2 + 30);
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v8 = *((_OWORD *)a2 + 3);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = (void *)(a1 + 72);
  uint64_t v10 = a2 + 9;
  uint64_t v11 = a2[42];
  if (*(void *)(a1 + 336) != 1)
  {
    if (v11 != 1)
    {
      uint64_t v31 = *v10;
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      *uint64_t v9 = v31;
      uint64_t v32 = a2[11];
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      *(void *)(a1 + 88) = v32;
      uint64_t v33 = a2[13];
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      *(void *)(a1 + 104) = v33;
      uint64_t v34 = a2[15];
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
      *(void *)(a1 + 120) = v34;
      uint64_t v35 = a2[17];
      *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
      *(void *)(a1 + 136) = v35;
      uint64_t v36 = a2[19];
      *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
      *(void *)(a1 + 152) = v36;
      uint64_t v37 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v37;
      uint64_t v38 = a2[23];
      *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
      *(void *)(a1 + 184) = v38;
      uint64_t v39 = a2[25];
      *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
      *(void *)(a1 + 200) = v39;
      uint64_t v40 = a2[27];
      *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
      *(void *)(a1 + 216) = v40;
      uint64_t v41 = a2[29];
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(a1 + 232) = v41;
      uint64_t v42 = a2[31];
      *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
      *(void *)(a1 + 248) = v42;
      uint64_t v43 = a2[33];
      *(unsigned char *)(a1 + 272) = *((unsigned char *)a2 + 272);
      *(void *)(a1 + 264) = v43;
      uint64_t v44 = a2[35];
      *(unsigned char *)(a1 + 288) = *((unsigned char *)a2 + 288);
      *(void *)(a1 + 280) = v44;
      uint64_t v45 = a2[37];
      *(unsigned char *)(a1 + 304) = *((unsigned char *)a2 + 304);
      *(void *)(a1 + 296) = v45;
      uint64_t v46 = a2[39];
      *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
      *(void *)(a1 + 312) = v46;
      *(void *)(a1 + 328) = a2[41];
      *(void *)(a1 + 336) = a2[42];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v47 = a2[43];
      *(unsigned char *)(a1 + 352) = *((unsigned char *)a2 + 352);
      *(void *)(a1 + 344) = v47;
      uint64_t v48 = a2[45];
      *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
      *(void *)(a1 + 360) = v48;
      *(void *)(a1 + 376) = a2[47];
      *(void *)(a1 + 384) = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v49 = a2[49];
      *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
      *(void *)(a1 + 392) = v49;
      goto LABEL_8;
    }
    sub_196940(a1 + 72);
    goto LABEL_6;
  }
  if (v11 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 72), a2 + 9, 0x149uLL);
    goto LABEL_8;
  }
  uint64_t v12 = *v10;
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *uint64_t v9 = v12;
  uint64_t v13 = a2[11];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 88) = v13;
  uint64_t v14 = a2[13];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 104) = v14;
  uint64_t v15 = a2[15];
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v15;
  uint64_t v16 = a2[17];
  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
  *(void *)(a1 + 136) = v16;
  uint64_t v17 = a2[19];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(void *)(a1 + 152) = v17;
  uint64_t v18 = a2[21];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(void *)(a1 + 168) = v18;
  uint64_t v19 = a2[23];
  *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
  *(void *)(a1 + 184) = v19;
  uint64_t v20 = a2[25];
  *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
  *(void *)(a1 + 200) = v20;
  uint64_t v21 = a2[27];
  *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
  *(void *)(a1 + 216) = v21;
  uint64_t v22 = a2[29];
  *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
  *(void *)(a1 + 232) = v22;
  uint64_t v23 = a2[31];
  *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
  *(void *)(a1 + 248) = v23;
  uint64_t v24 = a2[33];
  *(unsigned char *)(a1 + 272) = *((unsigned char *)a2 + 272);
  *(void *)(a1 + 264) = v24;
  uint64_t v25 = a2[35];
  *(unsigned char *)(a1 + 288) = *((unsigned char *)a2 + 288);
  *(void *)(a1 + 280) = v25;
  uint64_t v26 = a2[37];
  *(unsigned char *)(a1 + 304) = *((unsigned char *)a2 + 304);
  *(void *)(a1 + 296) = v26;
  uint64_t v27 = a2[39];
  *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
  *(void *)(a1 + 312) = v27;
  *(void *)(a1 + 328) = a2[41];
  *(void *)(a1 + 336) = a2[42];
  uint64_t v28 = a2[43];
  *(unsigned char *)(a1 + 352) = *((unsigned char *)a2 + 352);
  *(void *)(a1 + 344) = v28;
  uint64_t v29 = a2[45];
  *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
  *(void *)(a1 + 360) = v29;
  *(void *)(a1 + 376) = a2[47];
  *(void *)(a1 + 384) = a2[48];
  uint64_t v30 = a2[49];
  *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
  *(void *)(a1 + 392) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v50 = *(int *)(a3 + 44);
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (uint64_t)a2 + v50;
  uint64_t v53 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
  uint64_t v54 = *(int *)(a3 + 48);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = (uint64_t)a2 + v54;
  uint64_t v57 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
  return a1;
}

uint64_t sub_196940(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 5) = *(void *)(a2 + 5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 22) = *(void *)(a2 + 22);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x149uLL);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 5) = *(void *)(a2 + 5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 22) = *(void *)(a2 + 22);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  if (*(void *)(a1 + 336) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 336);
    if (v6 != 1)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v7 = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 136) = v7;
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      uint64_t v8 = *(void *)(a2 + 216);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      *(void *)(a1 + 216) = v8;
      uint64_t v9 = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 232) = v9;
      uint64_t v10 = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(void *)(a1 + 248) = v10;
      uint64_t v11 = *(void *)(a2 + 264);
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
      *(void *)(a1 + 264) = v11;
      uint64_t v12 = *(void *)(a2 + 280);
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      *(void *)(a1 + 280) = v12;
      uint64_t v13 = *(void *)(a2 + 296);
      *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
      *(void *)(a1 + 296) = v13;
      uint64_t v14 = *(void *)(a2 + 312);
      *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
      *(void *)(a1 + 312) = v14;
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
      uint64_t v15 = *(void *)(a2 + 384);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = v15;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
      goto LABEL_6;
    }
    sub_196940(a1 + 72);
  }
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x149uLL);
LABEL_6:
  uint64_t v16 = *(int *)(a3 + 44);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 48);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_196D68);
}

uint64_t sub_196D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 44);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 48);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_196EB4);
}

uint64_t sub_196EB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_196FE0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionEndEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1971B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_1971F0()
{
  unint64_t result = qword_320C60;
  if (!qword_320C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320C60);
  }
  return result;
}

unint64_t sub_197248()
{
  unint64_t result = qword_320C68;
  if (!qword_320C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320C68);
  }
  return result;
}

unint64_t sub_1972A0()
{
  unint64_t result = qword_320C70;
  if (!qword_320C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320C70);
  }
  return result;
}

uint64_t sub_1972F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1280 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B12A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B12C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B12E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1010 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B1300 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_19768C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320C78, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingAutoNightSettingChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A40, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320C78, a1);
}

uint64_t sub_1976EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320C90, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingAutoNightSettingChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A48, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320C90, a1);
}

uint64_t ReadingAutoNightSettingChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingAutoNightSettingChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_320D20);
}

uint64_t ReadingAutoNightSettingChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingAutoNightSettingChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingAutoNightSettingChangeEvent.autoNightThemeSettingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_320CA8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingAutoNightSettingChangeEvent.autoNightThemeSettingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_320CA8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingAutoNightSettingChangeEvent.autoNightThemeSettingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingAutoNightSettingChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingAutoNightSettingChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingAutoNightSettingChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingAutoNightSettingChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingAutoNightSettingChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

void ReadingScrollViewSettingChangeEvent.Model.scrollViewSettingData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 112);
}

uint64_t ReadingAutoNightSettingChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_320DC0);
}

uint64_t ReadingAutoNightSettingChangeEvent.Model.init(readingSessionData:contentData:autoNightThemeSettingData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  char v25 = *a3;
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(unsigned char *)(a5 + 112) = v25;
  uint64_t v26 = a5 + *(int *)(type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_197E50()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_197EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19A2EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_197F18(uint64_t a1)
{
  unint64_t v2 = sub_19824C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_197F54(uint64_t a1)
{
  unint64_t v2 = sub_19824C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingAutoNightSettingChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_320CB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19824C();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  LODWORD(v28) = v10;
  BYTE4(v28) = v11;
  BYTE5(v28) = v12;
  BYTE6(v28) = v13;
  char v41 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = v14;
    char v29 = v15;
    long long v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    __int16 v33 = v19;
    int v34 = v20;
    char v35 = v21;
    int v36 = v22;
    char v37 = v23;
    int v38 = *(_DWORD *)(v3 + 89);
    char v39 = v24;
    long long v40 = *(_OWORD *)(v3 + 96);
    char v41 = 1;
    sub_1A1D4();
    sub_27E330();
    LOBYTE(v27) = *(unsigned char *)(v3 + 112);
    char v41 = 2;
    sub_162210();
    sub_27E330();
    type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19824C()
{
  unint64_t result = qword_320CB8;
  if (!qword_320CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320CB8);
  }
  return result;
}

uint64_t ReadingAutoNightSettingChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_320CC0);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v44 = a1;
  sub_5900(a1, v12);
  sub_19824C();
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v42;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v43;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v46);
  int v19 = v47;
  char v20 = BYTE4(v47);
  char v21 = BYTE5(v47);
  char v22 = BYTE6(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v46;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = v47;
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v39[1] = v28;
  v39[2] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_1621B8();
  sub_27E260();
  *(unsigned char *)(v23 + 112) = v46;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v23 + *(int *)(v45 + 28), v15, v3);
  sub_198704(v23, v41);
  sub_5E94((uint64_t)v44);
  return sub_198768(v23);
}

uint64_t sub_198704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_198768(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingAutoNightSettingChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1987C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingAutoNightSettingChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1987DC(void *a1)
{
  return ReadingAutoNightSettingChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1987F4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A40, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320C78, a1);
}

uint64_t sub_19882C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A48, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320C90, a1);
}

uint64_t sub_198864@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingAutoNightSettingChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_320CA8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingAutoNightSettingChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_320CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_199244);
}

uint64_t sub_199244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_320CA8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingAutoNightSettingChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_199400);
}

uint64_t sub_199400(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_320CA8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1995B4()
{
  sub_19979C(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_19979C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_19979C(319, (unint64_t *)&unk_320D30, (void (*)(void))sub_1621B8, (void (*)(void))sub_162210);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_19979C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v7;
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 76) = *((_DWORD *)a2 + 19);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)(a1 + 89) = *(_DWORD *)((char *)a2 + 89);
    *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v8 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = a1 + v9;
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

uint64_t assignWithCopy for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_199EC8);
}

uint64_t sub_199EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingAutoNightSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_199F8C);
}

uint64_t sub_199F8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19A034()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingAutoNightSettingChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19A1ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingAutoNightSettingChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingAutoNightSettingChangeEvent.Model.CodingKeys;
}

unint64_t sub_19A1E8()
{
  unint64_t result = qword_320E00;
  if (!qword_320E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320E00);
  }
  return result;
}

unint64_t sub_19A240()
{
  unint64_t result = qword_320E08;
  if (!qword_320E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320E08);
  }
  return result;
}

unint64_t sub_19A298()
{
  unint64_t result = qword_320E10;
  if (!qword_320E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320E10);
  }
  return result;
}

uint64_t sub_19A2EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002B1320 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_19A4C4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_320E18, &enum case for SessionGroup.default(_:));
}

uint64_t static RemoteConfigChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A50, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320E18, a1);
}

uint64_t sub_19A524(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_320E30, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RemoteConfigChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A58, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320E30, a1);
}

uint64_t RemoteConfigChangeEvent.remoteConfigNamespaceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_320E48);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t RemoteConfigChangeEvent.remoteConfigNamespaceData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_320E48);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t RemoteConfigChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteConfigChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoteConfigChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_320EC0);
}

uint64_t RemoteConfigChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteConfigChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoteConfigChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoteConfigChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for RemoteConfigChangeEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

uint64_t RemoteConfigChangeEvent.Model.remoteConfigNamespaceData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_19A8B4(v2, v3);
}

uint64_t sub_19A8B4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t RemoteConfigChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteConfigChangeEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoteConfigChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_320F58);
}

uint64_t RemoteConfigChangeEvent.Model.init(remoteConfigNamespaceData:eventData:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  long long v5 = a1[3];
  a3[2] = a1[2];
  a3[3] = v5;
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for RemoteConfigChangeEvent.Model(0) + 20);
  uint64_t v7 = sub_27D7C0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_19AA6C()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_19AAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19C6BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19AAD8(uint64_t a1)
{
  unint64_t v2 = sub_19AD14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19AB14(uint64_t a1)
{
  unint64_t v2 = sub_19AD14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoteConfigChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_320E50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_19AD14();
  sub_27E440();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  long long v10 = v3[3];
  long long v15 = v3[2];
  long long v16 = v10;
  v12[15] = 0;
  sub_140CA8();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for RemoteConfigChangeEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19AD14()
{
  unint64_t result = qword_320E58;
  if (!qword_320E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320E58);
  }
  return result;
}

uint64_t RemoteConfigChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v19 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_320E60);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RemoteConfigChangeEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19AD14();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v18 = v9;
  uint64_t v13 = v21;
  char v28 = 0;
  sub_140C50();
  uint64_t v14 = v23;
  sub_27E1F0();
  long long v15 = v25;
  *(_OWORD *)uint64_t v12 = v24;
  *((_OWORD *)v12 + 1) = v15;
  long long v16 = v27;
  *((_OWORD *)v12 + 2) = v26;
  *((_OWORD *)v12 + 3) = v16;
  LOBYTE(v24) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v14);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v12[*(int *)(v18 + 20)], v5, v13);
  sub_19B124((uint64_t)v12, v20);
  sub_5E94((uint64_t)a1);
  return sub_19B188((uint64_t)v12);
}

uint64_t sub_19B090(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19B124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteConfigChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19B188(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteConfigChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19B1E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteConfigChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_19B1FC(void *a1)
{
  return RemoteConfigChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_19B214@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A50, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_320E18, a1);
}

uint64_t sub_19B24C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A58, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_320E30, a1);
}

uint64_t sub_19B284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteConfigChangeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_320E48);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19B830);
}

uint64_t sub_19B830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_320E48);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteConfigChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19B944);
}

uint64_t sub_19B944(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_320E48);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_19BA50()
{
  sub_19BB18();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_19BB18()
{
  if (!qword_320ED0)
  {
    sub_140C50();
    sub_140CA8();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_320ED0);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteConfigChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7 == 1)
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      long long v9 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v11 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v11;
      uint64_t v12 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v12;
      uint64_t v13 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for RemoteConfigChangeEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RemoteConfigChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v9;
    uint64_t v10 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v10;
    uint64_t v11 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for RemoteConfigChangeEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      long long v9 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_19C098(a1);
    long long v10 = a2[3];
    long long v12 = *a2;
    long long v11 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v12;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t sub_19C098(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for RemoteConfigChangeEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for RemoteConfigChangeEvent.Model(void *a1, void *a2, uint64_t a3)
{
  if (a1[1] != 1)
  {
    uint64_t v6 = a2[1];
    if (v6 != 1)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_19C098((uint64_t)a1);
  }
  long long v7 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  long long v8 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v8;
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = (char *)a1 + v9;
  long long v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteConfigChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19C2A0);
}

uint64_t sub_19C2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteConfigChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19C36C);
}

uint64_t sub_19C36C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 8) = (a2 + 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19C418()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteConfigChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19C57CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteConfigChangeEvent.Model.CodingKeys()
{
  return &type metadata for RemoteConfigChangeEvent.Model.CodingKeys;
}

unint64_t sub_19C5B8()
{
  unint64_t result = qword_320F90;
  if (!qword_320F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320F90);
  }
  return result;
}

unint64_t sub_19C610()
{
  unint64_t result = qword_320F98;
  if (!qword_320F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320F98);
  }
  return result;
}

unint64_t sub_19C668()
{
  unint64_t result = qword_320FA0;
  if (!qword_320FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FA0);
  }
  return result;
}

uint64_t sub_19C6BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000000002AF4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t PurchaseFailData.errorCode.getter()
{
  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t PurchaseFailData.errorCode.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  *(unsigned char *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

unint64_t LayoutOptionData.characterSpacing.getter()
{
  return *(unsigned int *)(v0 + 12) | ((unint64_t)*(unsigned __int8 *)(v0 + 16) << 32);
}

uint64_t LayoutOptionData.characterSpacing.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  *(unsigned char *)(v1 + 16) = BYTE4(result) & 1;
  return result;
}

unint64_t OnDevicePersonalizationPropertyData.lockedInCount.getter()
{
  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t OnDevicePersonalizationPropertyData.lockedInCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  *(unsigned char *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

uint64_t (*OnDevicePersonalizationPropertyData.lockedInCount.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LayoutOptionData.isFullJustificationEanabled.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t LayoutOptionData.isFullJustificationEanabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

void __swiftcall LayoutOptionData.init(isCustomized:lineSpacing:characterSpacing:wordSpacing:isFullJustificationEanabled:)(BookAnalytics::LayoutOptionData *__return_ptr retstr, Swift::Bool_optional isCustomized, Swift::Float_optional *lineSpacing, Swift::Float_optional *characterSpacing, Swift::Float_optional *wordSpacing, Swift::Bool_optional isFullJustificationEanabled)
{
  retstr->isCustomized = isCustomized;
  LODWORD(retstr->lineSpacing.value) = lineSpacing;
  retstr->lineSpacing.is_nil = BYTE4(lineSpacing) & 1;
  LODWORD(retstr->characterSpacing.value) = characterSpacing;
  retstr->characterSpacing.is_nil = BYTE4(characterSpacing) & 1;
  LODWORD(retstr->wordSpacing.value) = wordSpacing;
  retstr->wordSpacing.is_nil = BYTE4(wordSpacing) & 1;
  retstr->isFullJustificationEanabled = isFullJustificationEanabled;
}

uint64_t sub_19C8AC(char a1)
{
  uint64_t result = 0x6D6F747375437369;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1701734764;
      goto LABEL_5;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      unsigned int v3 = 1685221239;
LABEL_5:
      uint64_t result = v3 | 0x6361705300000000;
      break;
    case 4:
      uint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19C970()
{
  return sub_19C8AC(*v0);
}

uint64_t sub_19C978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19D31C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19C9A0(uint64_t a1)
{
  unint64_t v2 = sub_19CFE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19C9DC(uint64_t a1)
{
  unint64_t v2 = sub_19CFE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LayoutOptionData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_320FA8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(unsigned int *)(v1 + 4);
  int v17 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v16 = *(unsigned int *)(v1 + 12);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  v12[1] = *(unsigned int *)(v1 + 20);
  int v14 = *(unsigned __int8 *)(v1 + 24);
  int v15 = v8;
  int v13 = *(unsigned __int8 *)(v1 + 25);
  sub_5900(a1, a1[3]);
  sub_19CFE8();
  sub_27E440();
  char v26 = 0;
  sub_27E2A0();
  if (!v2)
  {
    char v11 = v14;
    char v10 = v15;
    char v25 = 1;
    char v23 = v17;
    sub_27E2B0();
    char v24 = 2;
    char v20 = v10;
    sub_27E2B0();
    char v22 = 3;
    char v19 = v11;
    sub_27E2B0();
    char v21 = 4;
    sub_27E2A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LayoutOptionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_320FB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19CFE8();
  sub_27E430();
  if (!v2)
  {
    char v21 = 0;
    char v9 = sub_27E1D0();
    char v20 = 1;
    uint64_t v10 = sub_27E1E0();
    char v19 = 2;
    uint64_t v16 = sub_27E1E0();
    char v18 = 3;
    uint64_t v15 = sub_27E1E0();
    char v17 = 4;
    char v12 = sub_27E1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(_DWORD *)(a2 + 4) = v10;
    *(unsigned char *)(a2 + 8) = BYTE4(v10) & 1;
    char v13 = BYTE4(v16);
    *(_DWORD *)(a2 + 12) = v16;
    *(unsigned char *)(a2 + 16) = v13 & 1;
    char v14 = BYTE4(v15);
    *(_DWORD *)(a2 + 20) = v15;
    *(unsigned char *)(a2 + 24) = v14 & 1;
    *(unsigned char *)(a2 + 25) = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_19CEC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LayoutOptionData.init(from:)(a1, a2);
}

uint64_t sub_19CEDC(void *a1)
{
  return LayoutOptionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics16LayoutOptionDataV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  int v2 = *(unsigned __int8 *)a1;
  float v3 = a1[1];
  unsigned __int8 v4 = *((unsigned char *)a1 + 8);
  float v5 = a1[3];
  unsigned __int8 v6 = *((unsigned char *)a1 + 16);
  float v7 = a1[5];
  unsigned __int8 v8 = *((unsigned char *)a1 + 24);
  int v9 = *((unsigned __int8 *)a1 + 25);
  int v10 = *(unsigned __int8 *)a2;
  int v11 = *((unsigned __int8 *)a2 + 25);
  if (v2 == 2)
  {
    if (v10 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v13 = (v2 & 1) == 0;
    if (v10 == 2 || ((v13 ^ v10) & 1) == 0) {
      return result;
    }
  }
  if (v4)
  {
    if (!*((unsigned char *)a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (v3 == a2[1]) {
      char v14 = *((unsigned char *)a2 + 8);
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  if (v6)
  {
    if (!*((unsigned char *)a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (v5 == a2[3]) {
      char v15 = *((unsigned char *)a2 + 16);
    }
    else {
      char v15 = 1;
    }
    if (v15) {
      return 0;
    }
  }
  if (v8)
  {
    if (!*((unsigned char *)a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (v7 == a2[5]) {
      char v16 = *((unsigned char *)a2 + 24);
    }
    else {
      char v16 = 1;
    }
    if (v16) {
      return 0;
    }
  }
  if (v9 == 2)
  {
    if (v11 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL v17 = (v9 & 1) == 0;
    if (v11 == 2 || ((v17 ^ v11) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_19CFE8()
{
  unint64_t result = qword_320FB0;
  if (!qword_320FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FB0);
  }
  return result;
}

__n128 initializeWithCopy for LayoutOptionData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for LayoutOptionData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[26]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutOptionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutOptionData()
{
  return &type metadata for LayoutOptionData;
}

unsigned char *storeEnumTagSinglePayload for LayoutOptionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19D1DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutOptionData.CodingKeys()
{
  return &type metadata for LayoutOptionData.CodingKeys;
}

unint64_t sub_19D218()
{
  unint64_t result = qword_320FC0;
  if (!qword_320FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FC0);
  }
  return result;
}

unint64_t sub_19D270()
{
  unint64_t result = qword_320FC8;
  if (!qword_320FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FC8);
  }
  return result;
}

unint64_t sub_19D2C8()
{
  unint64_t result = qword_320FD0;
  if (!qword_320FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FD0);
  }
  return result;
}

uint64_t sub_19D31C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F747375437369 && a2 == 0xEC00000064657A69;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63617053656E696CLL && a2 == 0xEB00000000676E69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1340 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6361705364726F77 && a2 == 0xEB00000000676E69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000000002B1360)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void SearchSuggestionSelectionData.selectedSuggestionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 20);
}

unsigned char *SearchSuggestionSelectionData.selectedSuggestionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 20) = *result;
  return result;
}

BookAnalytics::SearchSuggestionSelectionData __swiftcall SearchSuggestionSelectionData.init(selectedSuggestionString:selectedSuggestionPosition:selectedSuggestionType:)(Swift::String selectedSuggestionString, Swift::Int32 selectedSuggestionPosition, BookAnalytics::SelectedSuggestionType selectedSuggestionType)
{
  char v4 = *(unsigned char *)selectedSuggestionType;
  *(Swift::String *)uint64_t v3 = selectedSuggestionString;
  *(_DWORD *)(v3 + 16) = selectedSuggestionPosition;
  *(unsigned char *)(v3 + 20) = v4;
  result.selectedSuggestionString = selectedSuggestionString;
  result.selectedSuggestionPosition = selectedSuggestionPosition;
  return result;
}

unint64_t sub_19D59C()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0x6974736567677573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_19D608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19E0A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19D630(uint64_t a1)
{
  unint64_t v2 = sub_19DB54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19D66C(uint64_t a1)
{
  unint64_t v2 = sub_19DB54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchSuggestionItemTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_320FD8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(_DWORD *)(v1 + 16);
  HIDWORD(v10) = *(unsigned __int8 *)(v1 + 20);
  sub_5900(a1, a1[3]);
  sub_19DB54();
  sub_27E440();
  char v16 = 0;
  uint64_t v7 = v11;
  sub_27E2F0();
  if (!v7)
  {
    char v8 = BYTE4(v10);
    char v15 = 1;
    sub_27E340();
    char v14 = v8;
    char v13 = 2;
    sub_19DBA8();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchSuggestionItemTypeData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_320FF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19DB54();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v19 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v18 = 1;
  swift_bridgeObjectRetain();
  int v15 = sub_27E270();
  char v16 = 2;
  sub_19DBFC();
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v13 = v17;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 20) = v13;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19DA90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSuggestionItemTypeData.init(from:)(a1, a2);
}

uint64_t sub_19DAA8(void *a1)
{
  return SearchSuggestionItemTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics28SearchSuggestionItemTypeDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 20);
  int v4 = *(_DWORD *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 20);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v6 && (sub_27E370() & 1) == 0 || v2 != v4) {
    return 0;
  }

  return sub_2DF9C(v3, v5);
}

unint64_t sub_19DB54()
{
  unint64_t result = qword_320FE0;
  if (!qword_320FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FE0);
  }
  return result;
}

unint64_t sub_19DBA8()
{
  unint64_t result = qword_320FE8;
  if (!qword_320FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FE8);
  }
  return result;
}

unint64_t sub_19DBFC()
{
  unint64_t result = qword_320FF8;
  if (!qword_320FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_320FF8);
  }
  return result;
}

unint64_t sub_19DC54()
{
  unint64_t result = qword_321000;
  if (!qword_321000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321000);
  }
  return result;
}

unint64_t sub_19DCAC()
{
  unint64_t result = qword_321008;
  if (!qword_321008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321008);
  }
  return result;
}

uint64_t sub_19DD04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSuggestionItemTypeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

__n128 initializeWithTake for SearchSuggestionItemTypeData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchSuggestionItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSuggestionItemTypeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 21)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSuggestionItemTypeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 21) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionItemTypeData()
{
  return &type metadata for SearchSuggestionItemTypeData;
}

unsigned char *storeEnumTagSinglePayload for SearchSuggestionItemTypeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19DF68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionItemTypeData.CodingKeys()
{
  return &type metadata for SearchSuggestionItemTypeData.CodingKeys;
}

unint64_t sub_19DFA4()
{
  unint64_t result = qword_321010;
  if (!qword_321010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321010);
  }
  return result;
}

unint64_t sub_19DFFC()
{
  unint64_t result = qword_321018;
  if (!qword_321018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321018);
  }
  return result;
}

unint64_t sub_19E054()
{
  unint64_t result = qword_321020;
  if (!qword_321020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321020);
  }
  return result;
}

uint64_t sub_19E0A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1380 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B13A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00657079546E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_19E21C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_321028, &enum case for SessionGroup.default(_:));
}

uint64_t static AccountScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A60, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321028, a1);
}

uint64_t sub_19E27C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_321040, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AccountScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A68, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321040, a1);
}

uint64_t AccountScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AccountScreenViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3210C8);
}

uint64_t AccountScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AccountScreenViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AccountScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AccountScreenViewEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE8);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t AccountScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountScreenViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AccountScreenViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321158);
}

uint64_t AccountScreenViewEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for AccountScreenViewEvent.Model(0) + 20);
  uint64_t v8 = sub_27D7F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_19E660(uint64_t a1)
{
  unint64_t v2 = sub_19E8D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19E69C(uint64_t a1)
{
  unint64_t v2 = sub_19E8D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321058);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_19E8D8();
  sub_27E440();
  v8[15] = 0;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E330();
  if (!v1)
  {
    type metadata accessor for AccountScreenViewEvent.Model(0);
    v8[14] = 1;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_19E8D8()
{
  unint64_t result = qword_321060;
  if (!qword_321060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321060);
  }
  return result;
}

uint64_t AccountScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_27D7F0();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_27D7C0();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  char v25 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_321068);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountScreenViewEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19E8D8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v20 = v9;
  int v12 = v11;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  int v15 = v25;
  sub_27E260();
  char v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v19 = (uint64_t)v12;
  v16(v12, v15, v27);
  char v29 = 1;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v17 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19 + *(int *)(v20 + 20), v5, v13);
  sub_19ED48(v17, v22);
  sub_5E94((uint64_t)a1);
  return sub_19EDAC(v17);
}

uint64_t sub_19ED48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19EDAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19EE08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_19EE20(void *a1)
{
  return AccountScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_19EE38@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A60, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321028, a1);
}

uint64_t sub_19EE70@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A68, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321040, a1);
}

uint64_t getEnumTagSinglePayload for AccountScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19EEBC);
}

uint64_t sub_19EEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AccountScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19EFD0);
}

uint64_t sub_19EFD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for AccountScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19F0F0);
}

uint64_t sub_19F0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_27D7F0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AccountScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19F1FC);
}

uint64_t sub_19F1FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_27D7F0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for AccountScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F3CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for AccountScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_19F408()
{
  unint64_t result = qword_321190;
  if (!qword_321190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321190);
  }
  return result;
}

unint64_t sub_19F460()
{
  unint64_t result = qword_321198;
  if (!qword_321198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321198);
  }
  return result;
}

unint64_t sub_19F4B8()
{
  unint64_t result = qword_3211A0;
  if (!qword_3211A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3211A0);
  }
  return result;
}

uint64_t sub_19F50C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3211A8, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingGoalChangedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3211A8, a1);
}

uint64_t sub_19F56C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3211C0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingGoalChangedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3211C0, a1);
}

uint64_t ReadingGoalChangedEvent.readingGoalsDurationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3211D8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ReadingGoalChangedEvent.readingGoalsDurationData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3211D8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ReadingGoalChangedEvent.readingGoalYearlyData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalChangedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3211E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingGoalChangedEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_321278);
}

uint64_t ReadingGoalChangedEvent.readingGoalYearlyData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalChangedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3211E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingGoalChangedEvent.readingGoalYearlyData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingGoalChangedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalChangedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingGoalChangedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalChangedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingGoalChangedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingGoalChangedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ReadingGoalChangedEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v6, v9);
}

__n128 ReadingGoalChangedEvent.Model.readingGoalsDurationData.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 ReadingGoalChangedEvent.Model.readingGoalYearlyData.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  *a1 = result;
  return result;
}

uint64_t ReadingGoalChangedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingGoalChangedEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingGoalChangedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321320);
}

uint64_t ReadingGoalChangedEvent.Model.init(readingGoalsDurationData:readingGoalYearlyData:eventData:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = *a2;
  uint64_t v7 = a4 + *(int *)(type metadata accessor for ReadingGoalChangedEvent.Model(0) + 24);
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a3, v8);
}

unint64_t sub_19FBB8()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_19FC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A1818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19FC44(uint64_t a1)
{
  unint64_t v2 = sub_19FEC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19FC80(uint64_t a1)
{
  unint64_t v2 = sub_19FEC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingGoalChangedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3211E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19FEC0();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 16);
  long long v13 = *v3;
  char v14 = v9;
  char v12 = 0;
  sub_19FF14();
  sub_27E2C0();
  if (!v2)
  {
    long long v13 = *(long long *)((char *)v3 + 24);
    char v12 = 1;
    sub_19FF68();
    sub_27E330();
    type metadata accessor for ReadingGoalChangedEvent.Model(0);
    LOBYTE(v13) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19FEC0()
{
  unint64_t result = qword_3211F0;
  if (!qword_3211F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3211F0);
  }
  return result;
}

unint64_t sub_19FF14()
{
  unint64_t result = qword_3211F8;
  if (!qword_3211F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3211F8);
  }
  return result;
}

unint64_t sub_19FF68()
{
  unint64_t result = qword_321200;
  if (!qword_321200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321200);
  }
  return result;
}

uint64_t ReadingGoalChangedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_321208);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingGoalChangedEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_19FEC0();
  sub_27E430();
  if (!v2)
  {
    uint64_t v19 = v8;
    uint64_t v20 = v5;
    uint64_t v11 = (uint64_t)v10;
    uint64_t v13 = v23;
    uint64_t v12 = v24;
    char v28 = 0;
    sub_1A02FC();
    uint64_t v14 = v25;
    sub_27E1F0();
    char v15 = v27;
    *(_OWORD *)uint64_t v11 = v26;
    *(unsigned char *)(v11 + 16) = v15;
    char v28 = 1;
    sub_1A0350();
    sub_27E260();
    *(_OWORD *)(v11 + 24) = v26;
    LOBYTE(v26) = 2;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
    uint64_t v17 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v11 + *(int *)(v19 + 24), v20, v12);
    sub_1A03A4(v11, v17);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_1A02FC()
{
  unint64_t result = qword_321210;
  if (!qword_321210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321210);
  }
  return result;
}

unint64_t sub_1A0350()
{
  unint64_t result = qword_321218;
  if (!qword_321218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321218);
  }
  return result;
}

uint64_t sub_1A03A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingGoalChangedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0408@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingGoalChangedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1A0420(void *a1)
{
  return ReadingGoalChangedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1A0438@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3211A8, a1);
}

uint64_t sub_1A0470@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3211C0, a1);
}

uint64_t sub_1A04A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v7, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingGoalChangedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3211D8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3211E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3211D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3211E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A0C8C);
}

uint64_t sub_1A0C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3211D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3211E0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ReadingGoalChangedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A0DF8);
}

uint64_t sub_1A0DF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3211D8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3211E0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1A0F5C()
{
  sub_1A10D0(319, &qword_321288, (void (*)(void))sub_1A02FC, (void (*)(void))sub_19FF14);
  if (v0 <= 0x3F)
  {
    sub_1A10D0(319, (unint64_t *)&unk_321290, (void (*)(void))sub_1A0350, (void (*)(void))sub_19FF68);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1A10D0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ReadingGoalChangedEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A1474);
}

uint64_t sub_1A1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ReadingGoalChangedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A14F8);
}

uint64_t sub_1A14F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_27D7C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1A156C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoalChangedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A16D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalChangedEvent.Model.CodingKeys()
{
  return &type metadata for ReadingGoalChangedEvent.Model.CodingKeys;
}

unint64_t sub_1A1714()
{
  unint64_t result = qword_321360;
  if (!qword_321360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321360);
  }
  return result;
}

unint64_t sub_1A176C()
{
  unint64_t result = qword_321368;
  if (!qword_321368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321368);
  }
  return result;
}

unint64_t sub_1A17C4()
{
  unint64_t result = qword_321370;
  if (!qword_321370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321370);
  }
  return result;
}

uint64_t sub_1A1818(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000000002B13C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002B13E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A1974()
{
  return 0xD000000000000010;
}

uint64_t sub_1A1990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A1F3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A19BC(uint64_t a1)
{
  unint64_t v2 = sub_1A1B6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A19F8(uint64_t a1)
{
  unint64_t v2 = sub_1A1B6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DialogActionData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_321378);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A1B6C();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A1B6C()
{
  unint64_t result = qword_321380;
  if (!qword_321380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321380);
  }
  return result;
}

uint64_t DialogActionData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321388);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A1B6C();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1A1D38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DialogActionData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for DialogActionData()
{
  return &type metadata for DialogActionData;
}

unsigned char *storeEnumTagSinglePayload for DialogActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A1DFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogActionData.CodingKeys()
{
  return &type metadata for DialogActionData.CodingKeys;
}

unint64_t sub_1A1E38()
{
  unint64_t result = qword_321390;
  if (!qword_321390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321390);
  }
  return result;
}

unint64_t sub_1A1E90()
{
  unint64_t result = qword_321398;
  if (!qword_321398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321398);
  }
  return result;
}

unint64_t sub_1A1EE8()
{
  unint64_t result = qword_3213A0;
  if (!qword_3213A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3213A0);
  }
  return result;
}

uint64_t sub_1A1F3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1400)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A1FC4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3213A8, &enum case for SessionGroup.default(_:));
}

uint64_t static WriteReviewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3213A8, a1);
}

uint64_t sub_1A2024(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3213C0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WriteReviewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3213C0, a1);
}

uint64_t WriteReviewEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WriteReviewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_321448);
}

uint64_t WriteReviewEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WriteReviewEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WriteReviewEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WriteReviewEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WriteReviewEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WriteReviewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WriteReviewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WriteReviewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WriteReviewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WriteReviewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t WriteReviewEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WriteReviewEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[15];
  uint64_t v3 = v1[16];
  uint64_t v4 = v1[17];
  uint64_t v5 = v1[18];
  uint64_t v6 = v1[19];
  uint64_t v7 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t WriteReviewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WriteReviewEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WriteReviewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3214E0);
}

uint64_t WriteReviewEvent.Model.init(contentData:upSellData:seriesData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(unsigned char *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 24) = v9;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 56) = v12;
  *(_DWORD *)(a5 + 60) = v13;
  *(unsigned char *)(a5 + 64) = v14;
  *(_DWORD *)(a5 + 68) = v15;
  *(unsigned char *)(a5 + 72) = v16;
  int v17 = *(_DWORD *)(a1 + 73);
  long long v18 = *a2;
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v18;
  long long v19 = a3[1];
  *(_OWORD *)(a5 + 120) = *a3;
  LOBYTE(v7) = *(unsigned char *)(a1 + 77);
  uint64_t v20 = *((void *)a2 + 2);
  *(_DWORD *)(a5 + 73) = v17;
  *(unsigned char *)(a5 + 77) = v7;
  *(void *)(a5 + 112) = v20;
  *(_OWORD *)(a5 + 136) = v19;
  *(_OWORD *)(a5 + 152) = a3[2];
  uint64_t v21 = a5 + *(int *)(type metadata accessor for WriteReviewEvent.Model(0) + 28);
  uint64_t v22 = sub_27D7C0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);

  return v23(v21, a4, v22);
}

uint64_t sub_1A27A0()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x6C6C65537075;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x736569726573;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 3:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A2838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A4E88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2860(uint64_t a1)
{
  unint64_t v2 = sub_1A2B80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A289C(uint64_t a1)
{
  unint64_t v2 = sub_1A2B80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WriteReviewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_3213D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A2B80();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v26 = *(void *)v4;
  *((void *)&v26 + 1) = v10;
  v27[0] = v11;
  *(_OWORD *)&v27[8] = v12;
  *(void *)&v27[24] = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)(v4 + 73);
  char v35 = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v25 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    uint64_t v21 = *(void *)(v4 + 112);
    long long v26 = *(_OWORD *)(v4 + 96);
    *(void *)char v27 = v21;
    char v25 = 1;
    sub_36A74();
    sub_27E2C0();
    long long v22 = *(_OWORD *)(v4 + 136);
    long long v26 = *(_OWORD *)(v4 + 120);
    *(_OWORD *)char v27 = v22;
    *(_OWORD *)&v27[16] = *(_OWORD *)(v4 + 152);
    char v25 = 2;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for WriteReviewEvent.Model(0);
    LOBYTE(v26) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A2B80()
{
  unint64_t result = qword_3213E0;
  if (!qword_3213E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3213E0);
  }
  return result;
}

uint64_t WriteReviewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_4E04(&qword_3213E8);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = type metadata accessor for WriteReviewEvent.Model(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v33 = a1;
  sub_5900(a1, v9);
  sub_1A2B80();
  uint64_t v10 = v34;
  sub_27E430();
  if (v10) {
    return sub_5E94((uint64_t)v33);
  }
  uint64_t v11 = (uint64_t)v8;
  long long v12 = v5;
  uint64_t v14 = v30;
  uint64_t v13 = v31;
  char v46 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v15 = *((void *)&v35 + 1);
  char v16 = v36[0];
  long long v17 = *(_OWORD *)&v36[8];
  uint64_t v18 = *(void *)&v36[24];
  uint64_t v19 = v37;
  __int16 v20 = v38;
  int v21 = v39;
  char v22 = v40;
  int v23 = v41;
  char v24 = v42;
  char v25 = v44;
  *(void *)uint64_t v11 = v35;
  *(void *)(v11 + 8) = v15;
  *(unsigned char *)(v11 + 16) = v16;
  *(_OWORD *)(v11 + 24) = v17;
  *(void *)(v11 + 40) = v18;
  *(void *)(v11 + 48) = v19;
  *(_WORD *)(v11 + 56) = v20;
  *(_DWORD *)(v11 + 60) = v21;
  *(unsigned char *)(v11 + 64) = v22;
  *(_DWORD *)(v11 + 68) = v23;
  *(unsigned char *)(v11 + 72) = v24;
  *(_DWORD *)(v11 + 73) = v43;
  *(unsigned char *)(v11 + 77) = v25;
  *(_OWORD *)(v11 + 80) = v45;
  char v46 = 1;
  sub_37744();
  sub_27E1F0();
  uint64_t v26 = *(void *)v36;
  *(_OWORD *)(v11 + 96) = v35;
  *(void *)(v11 + 112) = v26;
  char v46 = 2;
  sub_11A3C();
  sub_27E1F0();
  long long v27 = *(_OWORD *)v36;
  *(_OWORD *)(v11 + 120) = v35;
  *(_OWORD *)(v11 + 136) = v27;
  *(_OWORD *)(v11 + 152) = *(_OWORD *)&v36[16];
  LOBYTE(v35) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(void, uint64_t))(v14 + 8))(0, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v11 + *(int *)(v6 + 28), v12, v3);
  sub_1A3070(v11, v29);
  sub_5E94((uint64_t)v33);
  return sub_1A30D4(v11);
}

uint64_t sub_1A3070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WriteReviewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A30D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WriteReviewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A3130@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WriteReviewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1A3148(void *a1)
{
  return WriteReviewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1A3160@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3213A8, a1);
}

uint64_t sub_1A3198@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3213C0, a1);
}

uint64_t sub_1A31D0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for WriteReviewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for WriteReviewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for WriteReviewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for WriteReviewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for WriteReviewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for WriteReviewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WriteReviewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A3BC4);
}

uint64_t sub_1A3BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for WriteReviewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A3D80);
}

uint64_t sub_1A3D80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1A3F34()
{
  sub_1A411C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1A411C(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
    if (v1 <= 0x3F)
    {
      sub_1A411C(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1A411C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for WriteReviewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[20];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      long long v14 = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
    }
    else
    {
      *(void *)(a1 + 120) = a2[15];
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
      *(void *)(a1 + 136) = a2[17];
      *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
      *(_WORD *)(a1 + 145) = *(_WORD *)((char *)a2 + 145);
      *(void *)(a1 + 152) = a2[19];
      *(void *)(a1 + 160) = v13;
      swift_bridgeObjectRetain();
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for WriteReviewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  }
  else
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (long long *)(a1 + 120);
  int v9 = (long long *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v12;
      *uint64_t v8 = v11;
    }
    else
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
      *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1CDD8(a1 + 120);
    long long v14 = *(_OWORD *)(a2 + 136);
    long long v13 = *(_OWORD *)(a2 + 152);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 136) = v14;
    *(_OWORD *)(a1 + 152) = v13;
  }
  else
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
    *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 120) = v7;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160) != 1)
  {
    uint64_t v11 = *(void *)(a2 + 160);
    if (v11 != 1)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 120);
  }
  long long v12 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
LABEL_6:
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A4A64);
}

uint64_t sub_1A4A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WriteReviewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A4B28);
}

uint64_t sub_1A4B28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A4BD0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WriteReviewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A4D48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WriteReviewEvent.Model.CodingKeys()
{
  return &type metadata for WriteReviewEvent.Model.CodingKeys;
}

unint64_t sub_1A4D84()
{
  unint64_t result = qword_321520;
  if (!qword_321520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321520);
  }
  return result;
}

unint64_t sub_1A4DDC()
{
  unint64_t result = qword_321528;
  if (!qword_321528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321528);
  }
  return result;
}

unint64_t sub_1A4E34()
{
  unint64_t result = qword_321530;
  if (!qword_321530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321530);
  }
  return result;
}

uint64_t sub_1A4E88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::EndReasonType_optional __swiftcall EndReasonType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F8FF8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t EndReasonType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x756F72676B636162;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5184(unsigned __int8 *a1, char *a2)
{
  return sub_2F86C(*a1, *a2);
}

unint64_t sub_1A5194()
{
  unint64_t result = qword_321538;
  if (!qword_321538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321538);
  }
  return result;
}

Swift::Int sub_1A51E8()
{
  return sub_20BD1C();
}

uint64_t sub_1A51F0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1A52CC()
{
  return sub_25CAD4();
}

BookAnalytics::EndReasonType_optional sub_1A52D4(Swift::String *a1)
{
  return EndReasonType.init(rawValue:)(*a1);
}

void sub_1A52E0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC0000006465646ELL;
      uint64_t v3 = 0x756F72676B636162;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000027;
      a1[1] = 0x80000000002AD460;
      break;
    case 3:
      *a1 = 0x696669746E656469;
      a1[1] = 0xEF74657365527265;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A5394()
{
  return sub_27DED0();
}

uint64_t sub_1A53F4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for EndReasonType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndReasonType()
{
  return &type metadata for EndReasonType;
}

unint64_t sub_1A5548()
{
  unint64_t result = qword_321540;
  if (!qword_321540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321540);
  }
  return result;
}

void __swiftcall WidgetData.init(widgetFamily:displayMode:isContentExposed:isStreakExposed:)(BookAnalytics::WidgetData *__return_ptr retstr, Swift::String widgetFamily, Swift::String displayMode, Swift::Bool isContentExposed, Swift::Bool isStreakExposed)
{
  retstr->widgetFamily = widgetFamily;
  retstr->displayMode = displayMode;
  retstr->isContentExposed = isContentExposed;
  retstr->isStreakExposed = isStreakExposed;
}

uint64_t SkipData.isBackgrounded.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SkipData.isBackgrounded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t WidgetData.isStreakExposed.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t WidgetData.isStreakExposed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*WidgetData.isStreakExposed.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t sub_1A55F4()
{
  unint64_t result = 0x6146746567646977;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4D79616C70736964;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6B61657274537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A61E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A56CC(uint64_t a1)
{
  unint64_t v2 = sub_1A5D00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A5708(uint64_t a1)
{
  unint64_t v2 = sub_1A5D00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WidgetData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321548);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v7;
  int v14 = *(unsigned __int8 *)(v1 + 32);
  v10[1] = *(unsigned __int8 *)(v1 + 33);
  sub_5900(a1, a1[3]);
  sub_1A5D00();
  sub_27E440();
  char v18 = 0;
  uint64_t v8 = v13;
  sub_27E2F0();
  if (!v8)
  {
    char v17 = 1;
    sub_27E2F0();
    char v16 = 2;
    sub_27E300();
    char v15 = 3;
    sub_27E300();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WidgetData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321558);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A5D00();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v22 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v20 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v21 = v14;
  int v23 = sub_27E230();
  char v24 = 3;
  LOBYTE(v14) = sub_27E230();
  uint64_t v16 = v23 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v14 & 1;
  uint64_t v18 = v21;
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 33) = v17;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetData.init(from:)(a1, a2);
}

uint64_t sub_1A5C10(void *a1)
{
  return WidgetData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics10WidgetDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 33);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_27E370(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
    {
      if (v4 != v8) {
        return 0;
      }
      return v5 ^ v9 ^ 1u;
    }
    char v12 = sub_27E370();
    uint64_t result = 0;
    if ((v12 & 1) != 0 && ((v4 ^ v8) & 1) == 0) {
      return v5 ^ v9 ^ 1u;
    }
  }
  return result;
}

unint64_t sub_1A5D00()
{
  unint64_t result = qword_321550;
  if (!qword_321550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321550);
  }
  return result;
}

unint64_t sub_1A5D58()
{
  unint64_t result = qword_321560;
  if (!qword_321560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321560);
  }
  return result;
}

unint64_t sub_1A5DB0()
{
  unint64_t result = qword_321568;
  if (!qword_321568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321568);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 initializeWithTake for WidgetData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetData()
{
  return &type metadata for WidgetData;
}

unsigned char *storeEnumTagSinglePayload for WidgetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A60A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetData.CodingKeys()
{
  return &type metadata for WidgetData.CodingKeys;
}

unint64_t sub_1A60DC()
{
  unint64_t result = qword_321570;
  if (!qword_321570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321570);
  }
  return result;
}

unint64_t sub_1A6134()
{
  unint64_t result = qword_321578;
  if (!qword_321578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321578);
  }
  return result;
}

unint64_t sub_1A618C()
{
  unint64_t result = qword_321580;
  if (!qword_321580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321580);
  }
  return result;
}

uint64_t sub_1A61E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6146746567646977 && a2 == 0xEC000000796C696DLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D79616C70736964 && a2 == 0xEB0000000065646FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFEA0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B61657274537369 && a2 == 0xEF6465736F707845)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A63E8()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x7544657A6F6F6E73;
  }
}

uint64_t sub_1A6434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6AF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A645C(uint64_t a1)
{
  unint64_t v2 = sub_1A6880();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A6498(uint64_t a1)
{
  unint64_t v2 = sub_1A6880();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioSnoozeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321588);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  _DWORD v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_1A6880();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AudioSnoozeData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321598);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A6880();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  char v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6850@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AudioSnoozeData.init(from:)(a1, a2);
}

uint64_t sub_1A6868(void *a1)
{
  return AudioSnoozeData.encode(to:)(a1);
}

unint64_t sub_1A6880()
{
  unint64_t result = qword_321590;
  if (!qword_321590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321590);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSnoozeData()
{
  return &type metadata for AudioSnoozeData;
}

unsigned char *storeEnumTagSinglePayload for AudioSnoozeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A69B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSnoozeData.CodingKeys()
{
  return &type metadata for AudioSnoozeData.CodingKeys;
}

unint64_t sub_1A69F4()
{
  unint64_t result = qword_3215A0;
  if (!qword_3215A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3215A0);
  }
  return result;
}

unint64_t sub_1A6A4C()
{
  unint64_t result = qword_3215A8;
  if (!qword_3215A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3215A8);
  }
  return result;
}

unint64_t sub_1A6AA4()
{
  unint64_t result = qword_3215B0;
  if (!qword_3215B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3215B0);
  }
  return result;
}

uint64_t sub_1A6AF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7544657A6F6F6E73 && a2 == 0xEE006E6F69746172;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1420)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A6C0C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3215B8, &enum case for SessionGroup.default(_:));
}

uint64_t static ReportAnIssueCompletionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3215B8, a1);
}

uint64_t sub_1A6C6C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3215D0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReportAnIssueCompletionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315A98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3215D0, a1);
}

uint64_t ReportAnIssueCompletionEvent.optionListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3215E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueCompletionEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_321670);
}

uint64_t ReportAnIssueCompletionEvent.optionListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3215E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReportAnIssueCompletionEvent.optionListData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReportAnIssueCompletionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReportAnIssueCompletionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReportAnIssueCompletionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReportAnIssueCompletionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ReportAnIssueCompletionEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t ReportAnIssueCompletionEvent.Model.optionListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(void *)(a1 + 16) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ReportAnIssueCompletionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueCompletionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321710);
}

uint64_t ReportAnIssueCompletionEvent.Model.init(contentData:optionListData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  uint64_t v16 = *((void *)a2 + 2);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  long long v17 = *a2;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 96) = v17;
  *(void *)(a4 + 112) = v16;
  uint64_t v18 = a4 + *(int *)(type metadata accessor for ReportAnIssueCompletionEvent.Model(0) + 24);
  uint64_t v19 = sub_27D7C0();
  char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);

  return v20(v18, a3, v19);
}

uint64_t sub_1A7250()
{
  uint64_t v1 = 0x694C6E6F6974706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_1A72C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A93B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A72EC(uint64_t a1)
{
  unint64_t v2 = sub_1A75C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A7328(uint64_t a1)
{
  unint64_t v2 = sub_1A75C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReportAnIssueCompletionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_3215F0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1A75C0();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v25 = *(void *)v4;
  *((void *)&v25 + 1) = v10;
  LOBYTE(v26) = v11;
  long long v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  __int16 v30 = v15;
  int v31 = v16;
  char v32 = v17;
  int v33 = v18;
  char v34 = v19;
  int v35 = *(_DWORD *)(v4 + 73);
  char v36 = v20;
  long long v37 = *(_OWORD *)(v4 + 80);
  char v24 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    uint64_t v21 = *(void *)(v4 + 112);
    long long v25 = *(_OWORD *)(v4 + 96);
    uint64_t v26 = v21;
    char v24 = 1;
    sub_1A7614();
    sub_27E330();
    type metadata accessor for ReportAnIssueCompletionEvent.Model(0);
    LOBYTE(v25) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A75C0()
{
  unint64_t result = qword_3215F8;
  if (!qword_3215F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3215F8);
  }
  return result;
}

unint64_t sub_1A7614()
{
  unint64_t result = qword_321600;
  if (!qword_321600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321600);
  }
  return result;
}

uint64_t ReportAnIssueCompletionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_321608);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ReportAnIssueCompletionEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v35 = a1;
  sub_5900(a1, v13);
  sub_1A75C0();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v14 = v33;
  __int16 v15 = v6;
  char v49 = 0;
  sub_1A98C();
  uint64_t v16 = v34;
  sub_27E260();
  uint64_t v17 = *((void *)&v36 + 1);
  char v18 = v37;
  long long v19 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  __int16 v22 = v41;
  int v23 = v42;
  char v24 = v43;
  int v25 = v44;
  char v26 = v45;
  char v27 = v47;
  *(void *)long long v12 = v36;
  *((void *)v12 + 1) = v17;
  unsigned char v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v46;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v48;
  char v49 = 1;
  sub_1A7A8C();
  sub_27E260();
  uint64_t v28 = v37;
  *((_OWORD *)v12 + 6) = v36;
  *((void *)v12 + 14) = v28;
  LOBYTE(v36) = 2;
  sub_1AB30(&qword_315E28);
  __int16 v30 = v15;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[*(int *)(v10 + 24)], v30, v4);
  sub_1A7AE0((uint64_t)v12, v32);
  sub_5E94((uint64_t)v35);
  return sub_1A7B44((uint64_t)v12);
}

unint64_t sub_1A7A8C()
{
  unint64_t result = qword_321610;
  if (!qword_321610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321610);
  }
  return result;
}

uint64_t sub_1A7AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportAnIssueCompletionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A7B44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportAnIssueCompletionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A7BA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReportAnIssueCompletionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1A7BB8(void *a1)
{
  return ReportAnIssueCompletionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1A7BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3215B8, a1);
}

uint64_t sub_1A7C08@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315A98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3215D0, a1);
}

uint64_t sub_1A7C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReportAnIssueCompletionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3215E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3215E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A8418);
}

uint64_t sub_1A8418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3215E8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueCompletionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A8584);
}

uint64_t sub_1A8584(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3215E8);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1A86E8()
{
  sub_1A885C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1A885C(319, (unint64_t *)&unk_321680, (void (*)(void))sub_1A7A8C, (void (*)(void))sub_1A7614);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1A885C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v16 = (uint64_t)a2 + v11;
    uint64_t v17 = a1 + v11;
    *(void *)(a1 + 112) = a2[14];
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v17, v16, v12);
  }
  return v3;
}

uint64_t destroy for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v14 = a2 + v10;
  uint64_t v15 = a1 + v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v15, v14, v11);
  return a1;
}

uint64_t assignWithCopy for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A8F98);
}

uint64_t sub_1A8F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueCompletionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A905C);
}

uint64_t sub_1A905C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A9104()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReportAnIssueCompletionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportAnIssueCompletionEvent.Model.CodingKeys()
{
  return &type metadata for ReportAnIssueCompletionEvent.Model.CodingKeys;
}

unint64_t sub_1A92AC()
{
  unint64_t result = qword_321750;
  if (!qword_321750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321750);
  }
  return result;
}

unint64_t sub_1A9304()
{
  unint64_t result = qword_321758;
  if (!qword_321758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321758);
  }
  return result;
}

unint64_t sub_1A935C()
{
  unint64_t result = qword_321760;
  if (!qword_321760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321760);
  }
  return result;
}

uint64_t sub_1A93B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C6E6F6974706FLL && a2 == 0xEE00617461447473 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float ListeningSessionData.playbackSpeed.getter()
{
  return *(float *)(v0 + 16);
}

void ListeningSessionData.playbackSpeed.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t ListeningSessionData.isPreview.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ListeningSessionData.isPreview.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t ListeningSessionData.isStreaming.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t ListeningSessionData.isStreaming.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 41) = result;
  return result;
}

uint64_t (*ListeningSessionData.isStreaming.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t ListeningSessionData.remainingBufferTime.getter()
{
  return *(unsigned int *)(v0 + 44) | ((unint64_t)*(unsigned __int8 *)(v0 + 48) << 32);
}

uint64_t ListeningSessionData.remainingBufferTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 44) = result;
  *(unsigned char *)(v1 + 48) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ListeningSessionData.remainingBufferTime.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListeningSessionData.isBackgrounded.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ListeningSessionData.isBackgrounded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*ListeningSessionData.isBackgrounded.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t ListeningSessionData.percentCompletionEnd.getter()
{
  return *(unsigned int *)(v0 + 52) | ((unint64_t)*(unsigned __int8 *)(v0 + 56) << 32);
}

uint64_t ListeningSessionData.percentCompletionEnd.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 52) = result;
  *(unsigned char *)(v1 + 56) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ListeningSessionData.percentCompletionEnd.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ListeningSessionData.isSnoozeTimeReached.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t ListeningSessionData.isSnoozeTimeReached.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

void __swiftcall ListeningSessionData.init(startTime:endTime:playbackSpeed:listeningID:isPreview:isStreaming:remainingBufferTime:isBackgrounded:percentCompletionEnd:isSnoozeTimeReached:)(BookAnalytics::ListeningSessionData *__return_ptr retstr, Swift::Float_optional *startTime, Swift::Float_optional *endTime, Swift::Float playbackSpeed, Swift::String_optional listeningID, Swift::Bool isPreview, Swift::Bool isStreaming, Swift::Int32_optional remainingBufferTime, Swift::Bool isBackgrounded, Swift::Float_optional *percentCompletionEnd, Swift::Bool_optional isSnoozeTimeReached)
{
  LODWORD(retstr->startTime.value) = startTime;
  retstr->startTime.is_nil = BYTE4(startTime) & 1;
  LODWORD(retstr->endTime.value) = endTime;
  retstr->endTime.is_nil = BYTE4(endTime) & 1;
  retstr->playbackSpeed = playbackSpeed;
  retstr->listeningID = listeningID;
  retstr->isPreview = isPreview;
  retstr->isStreaming = isStreaming;
  retstr->remainingBufferTime.value = remainingBufferTime.value;
  retstr->remainingBufferTime.is_nil = remainingBufferTime.is_nil;
  retstr->isBackgrounded = isBackgrounded;
  LODWORD(retstr->percentCompletionEnd.value) = percentCompletionEnd;
  retstr->percentCompletionEnd.is_nil = BYTE4(percentCompletionEnd) & 1;
  retstr->isSnoozeTimeReached = isSnoozeTimeReached;
}

unint64_t sub_1A96D8(char a1)
{
  unint64_t result = 0x6D69547472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D6954646E65;
      break;
    case 2:
      unint64_t result = 0x6B63616279616C70;
      break;
    case 3:
      unint64_t result = 0x6E696E657473696CLL;
      break;
    case 4:
      unint64_t result = 0x6569766572507369;
      break;
    case 5:
      unint64_t result = 0x6D61657274537369;
      break;
    case 6:
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x72676B6361427369;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A9840()
{
  return sub_1A96D8(*v0);
}

uint64_t sub_1A9848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AA6F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9870(uint64_t a1)
{
  unint64_t v2 = sub_1AA1C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A98AC(uint64_t a1)
{
  unint64_t v2 = sub_1AA1C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ListeningSessionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321768);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(unsigned char *)(v1 + 4);
  uint64_t v23 = *(unsigned int *)(v1 + 8);
  int v22 = *(unsigned __int8 *)(v1 + 12);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 32);
  uint64_t v21 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 40);
  int v18 = *(unsigned __int8 *)(v1 + 41);
  int v19 = v8;
  uint64_t v16 = *(unsigned int *)(v1 + 44);
  int v17 = *(unsigned __int8 *)(v1 + 48);
  int v15 = *(unsigned __int8 *)(v1 + 49);
  uint64_t v14 = *(unsigned int *)(v1 + 52);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 56);
  int v12 = *(unsigned __int8 *)(v1 + 57);
  int v13 = v8;
  sub_5900(a1, a1[3]);
  sub_1AA1C0();
  sub_27E440();
  char v38 = 0;
  char v37 = v7;
  uint64_t v9 = v24;
  sub_27E2B0();
  if (!v9)
  {
    char v10 = v17;
    char v36 = 1;
    char v35 = v22;
    sub_27E2B0();
    char v34 = 2;
    sub_27E320();
    char v33 = 3;
    sub_27E290();
    char v32 = 4;
    sub_27E300();
    char v31 = 5;
    sub_27E300();
    char v30 = 6;
    char v29 = v10;
    sub_27E2D0();
    char v28 = 7;
    sub_27E300();
    char v27 = 8;
    char v26 = v13;
    sub_27E2B0();
    char v25 = 9;
    sub_27E2A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ListeningSessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321778);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1AA1C0();
  sub_27E430();
  if (!v2)
  {
    char v40 = 0;
    uint64_t v9 = sub_27E1E0();
    char v39 = 1;
    uint64_t v10 = sub_27E1E0();
    char v38 = 2;
    sub_27E250();
    int v12 = v11;
    uint64_t v30 = v10;
    char v37 = 3;
    uint64_t v13 = sub_27E1C0();
    uint64_t v16 = v15;
    uint64_t v29 = v13;
    char v36 = 4;
    swift_bridgeObjectRetain();
    int v28 = sub_27E230();
    char v35 = 5;
    int v27 = sub_27E230();
    char v34 = 6;
    uint64_t v26 = sub_27E200();
    char v33 = 7;
    HIDWORD(v24) = sub_27E230();
    char v32 = 8;
    uint64_t v25 = sub_27E1E0();
    char v31 = 9;
    char v17 = sub_27E1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v18 = v27;
    char v19 = v28 & 1;
    *(_DWORD *)a2 = v9;
    *(unsigned char *)(a2 + 4) = BYTE4(v9) & 1;
    char v20 = BYTE4(v24) & 1;
    char v21 = BYTE4(v30);
    *(_DWORD *)(a2 + 8) = v30;
    *(unsigned char *)(a2 + 12) = v21 & 1;
    *(_DWORD *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v29;
    *(void *)(a2 + 32) = v16;
    *(unsigned char *)(a2 + 40) = v19;
    *(unsigned char *)(a2 + 41) = v18 & 1;
    char v22 = BYTE4(v26);
    *(_DWORD *)(a2 + 44) = v26;
    *(unsigned char *)(a2 + 48) = v22 & 1;
    *(unsigned char *)(a2 + 49) = v20;
    char v23 = BYTE4(v25);
    *(_DWORD *)(a2 + 52) = v25;
    *(unsigned char *)(a2 + 56) = v23 & 1;
    *(unsigned char *)(a2 + 57) = v17;
  }
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9FA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListeningSessionData.init(from:)(a1, a2);
}

uint64_t sub_1A9FBC(void *a1)
{
  return ListeningSessionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics20ListeningSessionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float v3 = *(float *)(a1 + 8);
  float v4 = *(float *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 40);
  int v8 = *(unsigned __int8 *)(a1 + 41);
  int v9 = *(_DWORD *)(a1 + 44);
  char v10 = *(unsigned char *)(a1 + 48);
  int v11 = *(unsigned __int8 *)(a1 + 49);
  float v12 = *(float *)(a1 + 52);
  char v13 = *(unsigned char *)(a1 + 56);
  int v14 = *(unsigned __int8 *)(a1 + 57);
  float v15 = *(float *)(a2 + 8);
  int v16 = *(unsigned __int8 *)(a2 + 12);
  float v17 = *(float *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v19 = *(void *)(a2 + 32);
  int v20 = *(unsigned __int8 *)(a2 + 40);
  int v21 = *(unsigned __int8 *)(a2 + 41);
  int v22 = *(_DWORD *)(a2 + 44);
  int v23 = *(unsigned __int8 *)(a2 + 48);
  int v24 = *(unsigned __int8 *)(a2 + 49);
  float v25 = *(float *)(a2 + 52);
  int v26 = *(unsigned __int8 *)(a2 + 56);
  int v27 = *(unsigned __int8 *)(a2 + 57);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)a1 == *(float *)a2) {
      char v28 = *(unsigned char *)(a2 + 4);
    }
    else {
      char v28 = 1;
    }
    if (v28) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 12))
  {
    if (v4 == v17) {
      int v29 = v16;
    }
    else {
      int v29 = 0;
    }
    if (v29 != 1) {
      return 0;
    }
  }
  else
  {
    if (v16) {
      return 0;
    }
    uint64_t result = 0;
    if (v3 != v15 || v4 != v17) {
      return result;
    }
  }
  if (v5)
  {
    if (!v19) {
      return 0;
    }
    if (v6 != v18 || v5 != v19)
    {
      int v33 = v26;
      char v34 = v13;
      int v35 = v27;
      int v36 = v14;
      char v31 = sub_27E370();
      uint64_t result = 0;
      if ((v31 & 1) == 0) {
        return result;
      }
      if ((v7 ^ v20)) {
        return result;
      }
      int v27 = v35;
      int v14 = v36;
      int v26 = v33;
      char v13 = v34;
      if ((v8 ^ v21)) {
        return result;
      }
      goto LABEL_28;
    }
  }
  else if (v19)
  {
    return 0;
  }
  uint64_t result = 0;
  if (v7 == v20 && ((v8 ^ v21) & 1) == 0)
  {
LABEL_28:
    if (v10)
    {
      uint64_t result = 0;
      if (!v23) {
        return result;
      }
LABEL_33:
      if ((v11 ^ v24)) {
        return result;
      }
      if (v13)
      {
        if (!v26) {
          return 0;
        }
      }
      else
      {
        if (v12 == v25) {
          char v32 = v26;
        }
        else {
          char v32 = 1;
        }
        if (v32) {
          return 0;
        }
      }
      if (v14 == 2)
      {
        if (v27 != 2) {
          return 0;
        }
      }
      else if (v27 == 2 || ((((v14 & 1) == 0) ^ v27) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    if ((v23 & 1) == 0)
    {
      uint64_t result = 0;
      if (v9 != v22) {
        return result;
      }
      goto LABEL_33;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1AA1C0()
{
  unint64_t result = qword_321770;
  if (!qword_321770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321770);
  }
  return result;
}

uint64_t destroy for ListeningSessionData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListeningSessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ListeningSessionData(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = a2[4];
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
  int v6 = a2[11];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(_DWORD *)(a1 + 44) = v6;
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  int v7 = a2[13];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(_DWORD *)(a1 + 52) = v7;
  *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
  return a1;
}

__n128 initializeWithTake for ListeningSessionData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ListeningSessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListeningSessionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListeningSessionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningSessionData()
{
  return &type metadata for ListeningSessionData;
}

unsigned char *storeEnumTagSinglePayload for ListeningSessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AA5B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningSessionData.CodingKeys()
{
  return &type metadata for ListeningSessionData.CodingKeys;
}

unint64_t sub_1AA5F0()
{
  unint64_t result = qword_321780;
  if (!qword_321780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321780);
  }
  return result;
}

unint64_t sub_1AA648()
{
  unint64_t result = qword_321788;
  if (!qword_321788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321788);
  }
  return result;
}

unint64_t sub_1AA6A0()
{
  unint64_t result = qword_321790;
  if (!qword_321790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321790);
  }
  return result;
}

uint64_t sub_1AA6F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xED00006465657053 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEB00000000444967 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6569766572507369 && a2 == 0xE900000000000077 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D61657274537369 && a2 == 0xEB00000000676E69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1440 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72676B6361427369 && a2 == 0xEE006465646E756FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AFB20 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1460)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t YIRSourceData.totalReadTime.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t YIRSourceData.totalReadTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t YIRSourceData.longestPageCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t YIRSourceData.longestPageCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t YIRSourceData.finishedSeries.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t YIRSourceData.finishedSeries.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t LinkData.previousGenreID.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousGenreID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t LinkData.previousCollectionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousCollectionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t YIRSourceData.totalRatedContent.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t YIRSourceData.totalRatedContent.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 104) = result;
  *(unsigned char *)(v2 + 112) = a2 & 1;
  return result;
}

uint64_t (*LinkData.previousAuthorID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YIRSourceData.finishedBooks.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t YIRSourceData.finishedBooks.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 120) = result;
  *(unsigned char *)(v2 + 128) = a2 & 1;
  return result;
}

uint64_t (*LinkData.previousFlowcaseID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YIRSourceData.longestStreak.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t YIRSourceData.longestStreak.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 136) = result;
  *(unsigned char *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*LinkData.previousBrickID.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YIRSourceData.readingGoalsReachedDays.getter()
{
  return *(void *)(v0 + 152);
}

uint64_t YIRSourceData.readingGoalsReachedDays.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 152) = result;
  *(unsigned char *)(v2 + 160) = a2 & 1;
  return result;
}

uint64_t (*YIRSourceData.readingGoalsReachedDays.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YIRSourceData.avgReadingTime.getter()
{
  return *(void *)(v0 + 168);
}

uint64_t YIRSourceData.avgReadingTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 168) = result;
  *(unsigned char *)(v2 + 176) = a2 & 1;
  return result;
}

uint64_t (*YIRSourceData.avgReadingTime.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)(BookAnalytics::YIRSourceData *__return_ptr retstr, BookAnalytics::FrameName_optional frameName, BookAnalytics::ReaderType_optional readerType, Swift::Int64_optional totalReadTime, Swift::Int64_optional longestPageCount, Swift::Int64_optional longestAudiobook, Swift::Int64_optional finishedSeries, Swift::String_optional mostContentGenre, Swift::String_optional mostContentAuthor, Swift::Int64_optional totalRatedContent, Swift::Int64_optional finishedBooks, Swift::Int64_optional longestStreak, Swift::Int64_optional readingGoalsReachedDays, Swift::Int64_optional avgReadingTime)
{
  BookAnalytics::ReaderType v14 = *(unsigned char *)readerType.value;
  retstr->frameName.value = *(unsigned char *)frameName.value;
  retstr->readerType.value = v14;
  retstr->totalReadTime.value = totalReadTime.value;
  retstr->totalReadTime.is_nil = totalReadTime.is_nil;
  retstr->longestPageCount.value = longestPageCount.value;
  retstr->longestPageCount.is_nil = longestPageCount.is_nil;
  retstr->longestAudiobook.value = longestAudiobook.value;
  retstr->longestAudiobook.is_nil = longestAudiobook.is_nil;
  retstr->finishedSeries.value = finishedSeries.value;
  retstr->finishedSeries.is_nil = finishedSeries.is_nil;
  retstr->mostContentGenre = mostContentGenre;
  retstr->mostContentAuthor = mostContentAuthor;
  retstr->totalRatedContent.value = totalRatedContent.value;
  retstr->totalRatedContent.is_nil = totalRatedContent.is_nil;
  retstr->finishedBooks.value = finishedBooks.value;
  retstr->finishedBooks.is_nil = finishedBooks.is_nil;
  retstr->longestStreak.value = longestStreak.value;
  retstr->longestStreak.is_nil = longestStreak.is_nil;
  retstr->readingGoalsReachedDays.value = readingGoalsReachedDays.value;
  retstr->readingGoalsReachedDays.is_nil = readingGoalsReachedDays.is_nil;
  retstr->avgReadingTime.value = avgReadingTime.value;
  retstr->avgReadingTime.is_nil = avgReadingTime.is_nil;
}

unint64_t sub_1AAED0(char a1)
{
  unint64_t result = 0x6D614E656D617266;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7954726564616572;
      break;
    case 2:
      unint64_t result = 0x6165526C61746F74;
      break;
    case 3:
    case 4:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
    case 9:
      unint64_t result = 0x64656873696E6966;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x53747365676E6F6CLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0x6964616552677661;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AB088()
{
  return sub_1AAED0(*v0);
}

uint64_t sub_1AB090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD008(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AB0B8(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1AB0C4(uint64_t a1)
{
  unint64_t v2 = sub_1AC678();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1AB100(uint64_t a1)
{
  unint64_t v2 = sub_1AC678();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t YIRSourceData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321798);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  int v34 = v1[1];
  uint64_t v33 = *((void *)v1 + 1);
  int v32 = v1[16];
  uint64_t v31 = *((void *)v1 + 3);
  int v30 = v1[32];
  uint64_t v29 = *((void *)v1 + 5);
  int v8 = v1[48];
  uint64_t v9 = *((void *)v1 + 7);
  int v27 = v1[64];
  int v28 = v8;
  uint64_t v10 = *((void *)v1 + 9);
  uint64_t v25 = *((void *)v1 + 10);
  uint64_t v26 = v9;
  uint64_t v22 = *((void *)v1 + 11);
  uint64_t v23 = *((void *)v1 + 12);
  uint64_t v24 = v10;
  uint64_t v20 = *((void *)v1 + 13);
  int v21 = v1[112];
  uint64_t v18 = *((void *)v1 + 15);
  int v19 = v1[128];
  uint64_t v16 = *((void *)v1 + 17);
  int v17 = v1[144];
  v14[1] = *((void *)v1 + 19);
  int v15 = v1[160];
  v14[0] = *((void *)v1 + 21);
  int v11 = v1[176];
  sub_5900(a1, a1[3]);
  sub_1AC678();
  sub_27E440();
  char v50 = v7;
  char v49 = 0;
  sub_1AC6CC();
  uint64_t v12 = v35;
  sub_27E2C0();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  LODWORD(v35) = v11;
  char v48 = v34;
  char v47 = 1;
  sub_1AC720();
  sub_27E2C0();
  char v46 = 2;
  sub_27E2E0();
  char v45 = 3;
  sub_27E2E0();
  char v44 = 4;
  sub_27E2E0();
  char v43 = 5;
  sub_27E2E0();
  char v42 = 6;
  sub_27E290();
  char v41 = 7;
  sub_27E290();
  char v40 = 8;
  sub_27E2E0();
  char v39 = 9;
  sub_27E2E0();
  char v38 = 10;
  sub_27E2E0();
  char v37 = 11;
  sub_27E2E0();
  char v36 = 12;
  sub_27E2E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t YIRSourceData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = sub_4E04(&qword_3217B8);
  uint64_t v5 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  char v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v129 = 1;
  char v127 = 1;
  char v125 = 1;
  char v123 = 1;
  char v121 = 1;
  char v119 = 1;
  char v117 = 1;
  char v115 = 1;
  char v113 = 1;
  sub_5900(a1, a1[3]);
  sub_1AC678();
  int v58 = v7;
  sub_27E430();
  uint64_t v60 = a1;
  if (v2)
  {
    uint64_t v132 = v2;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v59 = 0;
    sub_5E94((uint64_t)v60);
    unsigned __int8 v79 = 16;
    char v80 = 6;
    int v81 = v130;
    __int16 v82 = v131;
    uint64_t v83 = 0;
    char v84 = v129;
    *(_DWORD *)unsigned int v85 = *(_DWORD *)v128;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v128[3];
    uint64_t v86 = 0;
    char v87 = v127;
    *(_DWORD *)unsigned int v88 = *(_DWORD *)v126;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v126[3];
    uint64_t v89 = 0;
    char v90 = v125;
    *(_DWORD *)uint64_t v91 = *(_DWORD *)v124;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v124[3];
    uint64_t v92 = 0;
    char v93 = v123;
    *(_DWORD *)uint64_t v94 = *(_DWORD *)v122;
    *(_DWORD *)&v94[3] = *(_DWORD *)&v122[3];
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = v62;
    uint64_t v98 = v59;
    uint64_t v99 = v61;
    char v100 = v121;
    *(_DWORD *)&v101[3] = *(_DWORD *)&v120[3];
    *(_DWORD *)uint64_t v101 = *(_DWORD *)v120;
    uint64_t v102 = v65;
    char v103 = v119;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v118[3];
    *(_DWORD *)id v104 = *(_DWORD *)v118;
    uint64_t v105 = v64;
    char v106 = v117;
    *(_DWORD *)uint64_t v107 = *(_DWORD *)v116;
    *(_DWORD *)&v107[3] = *(_DWORD *)&v116[3];
    uint64_t v108 = v63;
    char v109 = v115;
    *(_DWORD *)&v110[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)long long v110 = *(_DWORD *)v114;
    uint64_t v111 = 0;
  }
  else
  {
    uint64_t v8 = v5;
    LOBYTE(v66) = 0;
    sub_1AC7AC();
    sub_27E1F0();
    int v56 = v79;
    LOBYTE(v66) = 1;
    sub_1AC800();
    sub_27E1F0();
    int v55 = v79;
    unsigned __int8 v79 = 2;
    uint64_t v10 = sub_27E210();
    char v12 = v11;
    uint64_t v54 = v10;
    char v129 = v11 & 1;
    unsigned __int8 v79 = 3;
    uint64_t v53 = sub_27E210();
    char v127 = v13 & 1;
    unsigned __int8 v79 = 4;
    int v14 = v13;
    uint64_t v52 = sub_27E210();
    int v51 = v14;
    char v125 = v15 & 1;
    unsigned __int8 v79 = 5;
    LOBYTE(v14) = v15;
    uint64_t v50 = sub_27E210();
    char v123 = v16 & 1;
    unsigned __int8 v79 = 6;
    int v17 = v16;
    uint64_t v18 = sub_27E1C0();
    int v49 = v17;
    unsigned __int8 v79 = 7;
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_27E1C0();
    uint64_t v47 = v20;
    uint64_t v48 = v18;
    uint64_t v62 = v21;
    unsigned __int8 v79 = 8;
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_27E210();
    uint64_t v132 = 0;
    uint64_t v59 = v23;
    uint64_t v61 = v24;
    uint64_t v25 = v47;
    int v45 = v26;
    char v121 = v26 & 1;
    unsigned __int8 v79 = 9;
    uint64_t v65 = sub_27E210();
    int v46 = v27;
    uint64_t v132 = 0;
    char v119 = v27 & 1;
    unsigned __int8 v79 = 10;
    uint64_t v64 = sub_27E210();
    int v44 = v28;
    uint64_t v132 = 0;
    char v117 = v28 & 1;
    unsigned __int8 v79 = 11;
    uint64_t v63 = sub_27E210();
    uint64_t v132 = 0;
    int v43 = v29 & 1;
    char v115 = v29 & 1;
    char v78 = 12;
    uint64_t v30 = sub_27E210();
    uint64_t v132 = 0;
    uint64_t v31 = v30;
    char v33 = v32;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v58, v57);
    char v34 = v33 & 1;
    char v113 = v33 & 1;
    LOBYTE(v8) = v55;
    unsigned __int8 v35 = v56;
    LOBYTE(v66) = v56;
    BYTE1(v66) = v55;
    *((void *)&v66 + 1) = v54;
    LOBYTE(v67) = v12 & 1;
    uint64_t v36 = v53;
    *((void *)&v67 + 1) = v53;
    LOBYTE(v68) = v51 & 1;
    *((void *)&v68 + 1) = v52;
    LOBYTE(v69) = v14 & 1;
    *((void *)&v69 + 1) = v50;
    LOBYTE(v70) = v49 & 1;
    *((void *)&v70 + 1) = v48;
    *(void *)&long long v71 = v25;
    uint64_t v37 = v63;
    *((void *)&v71 + 1) = v62;
    *(void *)&long long v72 = v23;
    *((void *)&v72 + 1) = v61;
    LOBYTE(v73) = v45 & 1;
    *((void *)&v73 + 1) = v65;
    LOBYTE(v74) = v46 & 1;
    *((void *)&v74 + 1) = v64;
    LOBYTE(v75) = v44 & 1;
    *((void *)&v75 + 1) = v63;
    LOBYTE(v76) = v43;
    *((void *)&v76 + 1) = v31;
    char v77 = v34;
    sub_1AC854((uint64_t)&v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v38 = v75;
    *(_OWORD *)(a2 + 128) = v74;
    *(_OWORD *)(a2 + 144) = v38;
    *(_OWORD *)(a2 + 160) = v76;
    *(unsigned char *)(a2 + 176) = v77;
    long long v39 = v71;
    *(_OWORD *)(a2 + 64) = v70;
    *(_OWORD *)(a2 + 80) = v39;
    long long v40 = v73;
    *(_OWORD *)(a2 + 96) = v72;
    *(_OWORD *)(a2 + 112) = v40;
    long long v41 = v67;
    *(_OWORD *)a2 = v66;
    *(_OWORD *)(a2 + 16) = v41;
    long long v42 = v69;
    *(_OWORD *)(a2 + 32) = v68;
    *(_OWORD *)(a2 + 48) = v42;
    sub_5E94((uint64_t)v60);
    unsigned __int8 v79 = v35;
    char v80 = v8;
    int v81 = v130;
    __int16 v82 = v131;
    uint64_t v83 = v54;
    char v84 = v129;
    *(_DWORD *)unsigned int v85 = *(_DWORD *)v128;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v128[3];
    uint64_t v86 = v36;
    char v87 = v127;
    *(_DWORD *)unsigned int v88 = *(_DWORD *)v126;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v126[3];
    uint64_t v89 = v52;
    char v90 = v125;
    *(_DWORD *)uint64_t v91 = *(_DWORD *)v124;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v124[3];
    uint64_t v92 = v50;
    char v93 = v123;
    *(_DWORD *)uint64_t v94 = *(_DWORD *)v122;
    *(_DWORD *)&v94[3] = *(_DWORD *)&v122[3];
    uint64_t v95 = v48;
    uint64_t v96 = v25;
    uint64_t v97 = v62;
    uint64_t v98 = v23;
    uint64_t v99 = v61;
    char v100 = v121;
    *(_DWORD *)&v101[3] = *(_DWORD *)&v120[3];
    *(_DWORD *)uint64_t v101 = *(_DWORD *)v120;
    uint64_t v102 = v65;
    char v103 = v119;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v118[3];
    *(_DWORD *)id v104 = *(_DWORD *)v118;
    uint64_t v105 = v64;
    char v106 = v117;
    *(_DWORD *)uint64_t v107 = *(_DWORD *)v116;
    *(_DWORD *)&v107[3] = *(_DWORD *)&v116[3];
    uint64_t v108 = v37;
    char v109 = v115;
    *(_DWORD *)&v110[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)long long v110 = *(_DWORD *)v114;
    uint64_t v111 = v31;
  }
  char v112 = v113;
  return sub_1AC774((uint64_t)&v79);
}

uint64_t sub_1AC048@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YIRSourceData.init(from:)(a1, a2);
}

uint64_t sub_1AC060(void *a1)
{
  return YIRSourceData.encode(to:)(a1);
}

BOOL _s13BookAnalytics13YIRSourceDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v134 = *(void *)(a1 + 8);
  char v137 = *(unsigned char *)(a1 + 16);
  uint64_t v130 = *(void *)(a1 + 24);
  char v135 = *(unsigned char *)(a1 + 32);
  uint64_t v127 = *(void *)(a1 + 40);
  char v131 = *(unsigned char *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 120);
  char v122 = *(unsigned char *)(a1 + 128);
  char v123 = *(unsigned char *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 136);
  char v11 = *(unsigned char *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 152);
  char v13 = *(unsigned char *)(a1 + 160);
  uint64_t v119 = *(void *)(a1 + 168);
  char v14 = *(unsigned char *)(a1 + 176);
  int v15 = *a2;
  int v16 = a2[1];
  uint64_t v132 = *((void *)a2 + 1);
  int v136 = a2[16];
  uint64_t v129 = *((void *)a2 + 3);
  int v133 = a2[32];
  uint64_t v125 = *((void *)a2 + 5);
  int v128 = a2[48];
  uint64_t v124 = *((void *)a2 + 7);
  int v126 = a2[64];
  uint64_t v17 = *((void *)a2 + 10);
  uint64_t v19 = *((void *)a2 + 11);
  uint64_t v18 = *((void *)a2 + 12);
  uint64_t v20 = *((void *)a2 + 13);
  int v21 = a2[112];
  uint64_t v22 = *((void *)a2 + 15);
  int v23 = a2[128];
  uint64_t v121 = *((void *)a2 + 17);
  int v24 = a2[144];
  uint64_t v25 = *((void *)a2 + 19);
  int v120 = a2[160];
  uint64_t v118 = *((void *)a2 + 21);
  char v26 = a2[176];
  if (*(unsigned char *)a1 == 16)
  {
    char v116 = *(unsigned char *)(a1 + 64);
    uint64_t v117 = *((void *)a2 + 9);
    if (v15 != 16) {
      return 0;
    }
  }
  else
  {
    if (v15 == 16) {
      return 0;
    }
    char v116 = *(unsigned char *)(a1 + 64);
    uint64_t v81 = *(void *)(a1 + 56);
    uint64_t v82 = *((void *)a2 + 10);
    uint64_t v117 = *((void *)a2 + 9);
    uint64_t v91 = *(void *)(a1 + 80);
    uint64_t v93 = *(void *)(a1 + 72);
    uint64_t v101 = *((void *)a2 + 12);
    uint64_t v106 = *(void *)(a1 + 152);
    uint64_t v109 = *((void *)a2 + 13);
    unsigned __int8 v94 = a2[176];
    int v96 = a2[112];
    uint64_t v104 = *((void *)a2 + 15);
    uint64_t v83 = *(void *)(a1 + 96);
    uint64_t v84 = *(void *)(a1 + 120);
    uint64_t v27 = *(void *)(a1 + 88);
    int v28 = a2[144];
    uint64_t v29 = *((void *)a2 + 19);
    uint64_t v30 = *(void *)(a1 + 104);
    char v85 = *(unsigned char *)(a1 + 144);
    uint64_t v86 = *(void *)(a1 + 136);
    char v88 = *(unsigned char *)(a1 + 160);
    unint64_t v31 = FrameName.rawValue.getter();
    uint64_t v33 = v32;
    if (v31 == FrameName.rawValue.getter() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
      char v13 = v88;
      uint64_t v10 = v86;
      char v11 = v85;
      char v26 = v94;
      int v21 = v96;
      uint64_t v7 = v83;
      uint64_t v9 = v84;
      uint64_t v8 = v30;
      uint64_t v25 = v29;
      int v24 = v28;
      uint64_t v6 = v27;
      uint64_t v22 = v104;
      uint64_t v12 = v106;
      uint64_t v20 = v109;
      uint64_t v18 = v101;
      uint64_t v5 = v91;
      uint64_t v4 = v93;
      uint64_t v3 = v81;
      uint64_t v17 = v82;
    }
    else
    {
      char v35 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      char v13 = v88;
      uint64_t v10 = v86;
      char v11 = v85;
      char v26 = v94;
      int v21 = v96;
      uint64_t v7 = v83;
      uint64_t v9 = v84;
      uint64_t v8 = v30;
      uint64_t v25 = v29;
      int v24 = v28;
      uint64_t v6 = v27;
      uint64_t v22 = v104;
      uint64_t v12 = v106;
      uint64_t v20 = v109;
      uint64_t v18 = v101;
      uint64_t v5 = v91;
      uint64_t v4 = v93;
      uint64_t v3 = v81;
      uint64_t v17 = v82;
      if ((v35 & 1) == 0) {
        return result;
      }
    }
  }
  if (v2 == 6)
  {
    if (v16 != 6) {
      return 0;
    }
  }
  else
  {
    if (v16 == 6) {
      return 0;
    }
    unsigned __int8 v37 = v2;
    char v38 = v16;
    uint64_t v105 = v22;
    uint64_t v107 = v12;
    char v39 = v13;
    uint64_t v40 = v10;
    char v113 = v14;
    char v41 = v11;
    char v95 = v26;
    int v97 = v21;
    uint64_t v92 = v5;
    uint64_t v42 = v9;
    uint64_t v99 = v19;
    uint64_t v102 = v18;
    uint64_t v43 = v8;
    uint64_t v87 = v25;
    uint64_t v89 = v6;
    int v44 = v24;
    uint64_t v45 = v7;
    uint64_t v110 = v20;
    uint64_t v46 = v17;
    uint64_t v47 = v3;
    char v48 = sub_319BC(v37, v38);
    uint64_t v3 = v47;
    uint64_t v17 = v46;
    char v26 = v95;
    int v21 = v97;
    uint64_t v12 = v107;
    uint64_t v20 = v110;
    uint64_t v7 = v45;
    uint64_t v25 = v87;
    uint64_t v6 = v89;
    int v24 = v44;
    uint64_t v22 = v105;
    uint64_t v8 = v43;
    uint64_t v19 = v99;
    uint64_t v18 = v102;
    uint64_t v9 = v42;
    uint64_t v5 = v92;
    char v11 = v41;
    char v14 = v113;
    uint64_t v10 = v40;
    char v13 = v39;
    if ((v48 & 1) == 0) {
      return 0;
    }
  }
  if (v137)
  {
    uint64_t v49 = v117;
    char v50 = v116;
    if (!v136) {
      return 0;
    }
  }
  else
  {
    char v51 = v136;
    if (v134 != v132) {
      char v51 = 1;
    }
    uint64_t v49 = v117;
    char v50 = v116;
    if (v51) {
      return 0;
    }
  }
  if (v135)
  {
    if (!v133) {
      return 0;
    }
  }
  else
  {
    char v52 = v133;
    if (v130 != v129) {
      char v52 = 1;
    }
    if (v52) {
      return 0;
    }
  }
  if (v131)
  {
    if (!v128) {
      return 0;
    }
  }
  else
  {
    char v53 = v128;
    if (v127 != v125) {
      char v53 = 1;
    }
    if (v53) {
      return 0;
    }
  }
  if (v50)
  {
    if (!v126) {
      return 0;
    }
  }
  else
  {
    char v54 = v126;
    if (v3 != v124) {
      char v54 = 1;
    }
    if (v54) {
      return 0;
    }
  }
  if (!v5)
  {
    if (v17) {
      return 0;
    }
LABEL_45:
    if (v7)
    {
      if (!v18) {
        return 0;
      }
      if (v6 != v19 || v7 != v18)
      {
        int v139 = v24;
        uint64_t v66 = v12;
        char v67 = v13;
        uint64_t v68 = v10;
        char v115 = v14;
        char v69 = v11;
        uint64_t v112 = v20;
        char v70 = v26;
        uint64_t v71 = v9;
        uint64_t v72 = v8;
        uint64_t v73 = v25;
        int v98 = v21;
        char v74 = sub_27E370();
        int v21 = v98;
        int v24 = v139;
        uint64_t v25 = v73;
        uint64_t v8 = v72;
        uint64_t v9 = v71;
        char v26 = v70;
        uint64_t v20 = v112;
        char v11 = v69;
        char v14 = v115;
        uint64_t v10 = v68;
        char v13 = v67;
        uint64_t v12 = v66;
        char v75 = v74;
        BOOL result = 0;
        if ((v75 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v123)
    {
      if (!v21) {
        return 0;
      }
    }
    else
    {
      if (v8 == v20) {
        char v76 = v21;
      }
      else {
        char v76 = 1;
      }
      if (v76) {
        return 0;
      }
    }
    if (v122)
    {
      if (!v23) {
        return 0;
      }
    }
    else
    {
      if (v9 == v22) {
        char v77 = v23;
      }
      else {
        char v77 = 1;
      }
      if (v77) {
        return 0;
      }
    }
    if (v11)
    {
      if (!v24) {
        return 0;
      }
    }
    else
    {
      if (v10 == v121) {
        char v78 = v24;
      }
      else {
        char v78 = 1;
      }
      if (v78) {
        return 0;
      }
    }
    if (v13)
    {
      if (!v120) {
        return 0;
      }
    }
    else
    {
      char v79 = v120;
      if (v12 != v25) {
        char v79 = 1;
      }
      if (v79) {
        return 0;
      }
    }
    if ((v14 & 1) == 0)
    {
      if (v119 == v118) {
        char v80 = v26;
      }
      else {
        char v80 = 1;
      }
      return (v80 & 1) == 0;
    }
    return (v26 & 1) != 0;
  }
  if (!v17) {
    return 0;
  }
  if (v4 == v49 && v5 == v17) {
    goto LABEL_45;
  }
  int v138 = v24;
  uint64_t v108 = v12;
  uint64_t v90 = v6;
  char v55 = v13;
  uint64_t v100 = v19;
  uint64_t v103 = v18;
  uint64_t v56 = v10;
  char v114 = v14;
  char v57 = v11;
  uint64_t v111 = v20;
  char v58 = v26;
  uint64_t v59 = v9;
  uint64_t v60 = v8;
  uint64_t v61 = v25;
  uint64_t v62 = v7;
  int v63 = v21;
  char v64 = sub_27E370();
  int v21 = v63;
  uint64_t v7 = v62;
  uint64_t v6 = v90;
  int v24 = v138;
  uint64_t v25 = v61;
  uint64_t v8 = v60;
  uint64_t v9 = v59;
  uint64_t v19 = v100;
  char v26 = v58;
  uint64_t v12 = v108;
  uint64_t v20 = v111;
  char v11 = v57;
  char v14 = v114;
  uint64_t v10 = v56;
  uint64_t v18 = v103;
  char v13 = v55;
  char v65 = v64;
  BOOL result = 0;
  if (v65) {
    goto LABEL_45;
  }
  return result;
}

unint64_t sub_1AC678()
{
  unint64_t result = qword_3217A0;
  if (!qword_3217A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217A0);
  }
  return result;
}

unint64_t sub_1AC6CC()
{
  unint64_t result = qword_3217A8;
  if (!qword_3217A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217A8);
  }
  return result;
}

unint64_t sub_1AC720()
{
  unint64_t result = qword_3217B0;
  if (!qword_3217B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217B0);
  }
  return result;
}

uint64_t sub_1AC774(uint64_t a1)
{
  return a1;
}

unint64_t sub_1AC7AC()
{
  unint64_t result = qword_3217C0;
  if (!qword_3217C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217C0);
  }
  return result;
}

unint64_t sub_1AC800()
{
  unint64_t result = qword_3217C8;
  if (!qword_3217C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217C8);
  }
  return result;
}

uint64_t sub_1AC854(uint64_t a1)
{
  return a1;
}

unint64_t sub_1AC890()
{
  unint64_t result = qword_3217D0;
  if (!qword_3217D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217D0);
  }
  return result;
}

unint64_t sub_1AC8E8()
{
  unint64_t result = qword_3217D8;
  if (!qword_3217D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217D8);
  }
  return result;
}

uint64_t destroy for YIRSourceData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YIRSourceData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v3 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v3;
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v5 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v5;
  uint64_t v6 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for YIRSourceData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v12;
  return a1;
}

__n128 initializeWithTake for YIRSourceData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for YIRSourceData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v6 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for YIRSourceData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for YIRSourceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(void *)(result + 80) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YIRSourceData()
{
  return &type metadata for YIRSourceData;
}

uint64_t getEnumTagSinglePayload for YIRSourceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for YIRSourceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACEC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YIRSourceData.CodingKeys()
{
  return &type metadata for YIRSourceData.CodingKeys;
}

unint64_t sub_1ACF04()
{
  unint64_t result = qword_3217E0;
  if (!qword_3217E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217E0);
  }
  return result;
}

unint64_t sub_1ACF5C()
{
  unint64_t result = qword_3217E8;
  if (!qword_3217E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217E8);
  }
  return result;
}

unint64_t sub_1ACFB4()
{
  unint64_t result = qword_3217F0;
  if (!qword_3217F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3217F0);
  }
  return result;
}

uint64_t sub_1AD008(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E656D617266 && a2 == 0xE900000000000065;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954726564616572 && a2 == 0xEA00000000006570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165526C61746F74 && a2 == 0xED0000656D695464 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1480 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B14A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xEE00736569726553 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B14C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B14E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1500 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xED0000736B6F6F42 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002B1520 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6964616552677661 && a2 == 0xEE00656D6954676ELL)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

void __swiftcall SessionData.init(utcOffset:countryCode:languageCode:iCloudAccountState:iTunesAccountState:startMethod:productType:cellularRadioAccessTechnology:iCloudDriveStatus:notificationOptInStatus:readingGoal:onDevicePersonalization:launchType:isParallel:isMainWindow:isWidgetInstalled:notificationOptInPriceDropStatus:)(BookAnalytics::SessionData *__return_ptr retstr, Swift::Int32 utcOffset, Swift::String countryCode, Swift::String languageCode, Swift::Bool iCloudAccountState, Swift::Bool iTunesAccountState, BookAnalytics::StartMethod startMethod, Swift::String productType, BookAnalytics::CellularRadioAccessTechnology cellularRadioAccessTechnology, BookAnalytics::ICloudDriveStatus iCloudDriveStatus, BookAnalytics::FeatureEnabled notificationOptInStatus, BookAnalytics::FeatureEnabled readingGoal, Swift::Bool onDevicePersonalization, BookAnalytics::LaunchType launchType, Swift::Bool isParallel, Swift::Bool isMainWindow, Swift::Bool isWidgetInstalled, Swift::Bool notificationOptInPriceDropStatus)
{
  BookAnalytics::StartMethod v18 = *(unsigned char *)startMethod;
  BookAnalytics::CellularRadioAccessTechnology v19 = *(unsigned char *)cellularRadioAccessTechnology;
  BookAnalytics::ICloudDriveStatus v20 = *(unsigned char *)isWidgetInstalled;
  BookAnalytics::FeatureEnabled v21 = *v24;
  BookAnalytics::FeatureEnabled v22 = *v25;
  BookAnalytics::LaunchType v23 = *v27;
  retstr->utcOffset = utcOffset;
  retstr->countryCode = countryCode;
  retstr->languageCode = languageCode;
  retstr->iCloudAccountState = iCloudAccountState;
  retstr->iTunesAccountState = iTunesAccountState;
  retstr->startMethod = v18;
  retstr->productType = productType;
  retstr->cellularRadioAccessTechnology = v19;
  retstr->iCloudDriveStatus = v20;
  retstr->notificationOptInStatus = v21;
  retstr->readingGoal = v22;
  retstr->onDevicePersonalization = v26;
  retstr->launchType = v23;
  retstr->isParallel = v28;
  retstr->isMainWindow = v29;
  retstr->isWidgetInstalled = v30;
  retstr->notificationOptInPriceDropStatus = v31;
}

void SessionData.startMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 42);
}

unsigned char *SessionData.startMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 42) = *result;
  return result;
}

uint64_t (*SessionData.startMethod.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void SessionData.cellularRadioAccessTechnology.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

unsigned char *SessionData.cellularRadioAccessTechnology.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

void SessionData.iCloudDriveStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

unsigned char *SessionData.iCloudDriveStatus.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 65) = *result;
  return result;
}

uint64_t (*SessionData.iCloudDriveStatus.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void SessionData.notificationOptInStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 66);
}

unsigned char *SessionData.notificationOptInStatus.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 66) = *result;
  return result;
}

uint64_t (*SessionData.notificationOptInStatus.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void SessionData.readingGoal.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 67);
}

unsigned char *SessionData.readingGoal.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 67) = *result;
  return result;
}

uint64_t (*SessionData.readingGoal.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SessionData.onDevicePersonalization.getter()
{
  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t SessionData.onDevicePersonalization.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 68) = result;
  return result;
}

void SessionData.launchType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 69);
}

unsigned char *SessionData.launchType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 69) = *result;
  return result;
}

uint64_t (*SessionData.launchType.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SessionData.isParallel.getter()
{
  return *(unsigned __int8 *)(v0 + 70);
}

uint64_t SessionData.isParallel.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 70) = result;
  return result;
}

uint64_t (*SessionData.isParallel.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SessionData.isMainWindow.getter()
{
  return *(unsigned __int8 *)(v0 + 71);
}

uint64_t SessionData.isMainWindow.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 71) = result;
  return result;
}

uint64_t (*SessionData.isMainWindow.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

unint64_t sub_1AD814(char a1)
{
  unint64_t result = 0x657366664F637475;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x437972746E756F63;
      break;
    case 2:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x74654D7472617473;
      break;
    case 6:
      unint64_t result = 0x54746375646F7270;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0x47676E6964616572;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0x795468636E75616CLL;
      break;
    case 13:
      unint64_t result = 0x6C6C617261507369;
      break;
    case 14:
      unint64_t result = 0x69576E69614D7369;
      break;
    case 16:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ADA58()
{
  return sub_1AD814(*v0);
}

uint64_t sub_1ADA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AF818(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ADA88(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1ADA94(uint64_t a1)
{
  unint64_t v2 = sub_1AEDEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1ADAD0(uint64_t a1)
{
  unint64_t v2 = sub_1AEDEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3217F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v28 = *(void *)(v1 + 16);
  uint64_t v29 = v6;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v26 = *(void *)(v1 + 32);
  uint64_t v27 = v7;
  int v31 = *(unsigned __int8 *)(v1 + 40);
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 41);
  int v24 = *(unsigned __int8 *)(v1 + 42);
  int v25 = v7;
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v22 = *(void *)(v1 + 48);
  uint64_t v23 = v8;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 64);
  int v20 = *(unsigned __int8 *)(v1 + 65);
  int v21 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 66);
  int v18 = *(unsigned __int8 *)(v1 + 67);
  int v19 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 68);
  int v16 = *(unsigned __int8 *)(v1 + 69);
  int v17 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 70);
  v15[0] = *(unsigned __int8 *)(v1 + 71);
  v15[1] = v7;
  int v9 = *(unsigned __int8 *)(v1 + 73);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v12 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(v11, v10);
  sub_1AEDEC();
  sub_27E440();
  char v33 = 0;
  uint64_t v13 = v30;
  sub_27E340();
  if (!v13)
  {
    LODWORD(v30) = v9;
    char v33 = 1;
    sub_27E2F0();
    char v33 = 2;
    sub_27E2F0();
    char v33 = 3;
    sub_27E300();
    char v33 = 4;
    sub_27E300();
    char v33 = v24;
    char v32 = 5;
    sub_1AEE40();
    sub_27E330();
    char v33 = 6;
    sub_27E2F0();
    char v33 = v21;
    char v32 = 7;
    sub_1AEE94();
    sub_27E330();
    char v33 = v20;
    char v32 = 8;
    sub_1AEEE8();
    sub_27E330();
    char v33 = v19;
    char v32 = 9;
    sub_1AEF3C();
    sub_27E330();
    char v33 = v18;
    char v32 = 10;
    sub_27E330();
    char v33 = 11;
    sub_27E300();
    char v33 = v16;
    char v32 = 12;
    sub_1AEF90();
    sub_27E330();
    char v33 = 13;
    sub_27E300();
    char v33 = 14;
    sub_27E300();
    char v33 = 15;
    sub_27E300();
    char v33 = 16;
    sub_27E300();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
}

uint64_t SessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321830);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1AEDEC();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  unsigned __int8 v48 = 0;
  int v9 = sub_27E270();
  unsigned __int8 v48 = 1;
  uint64_t v43 = sub_27E220();
  unsigned __int8 v48 = 2;
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_27E220();
  uint64_t v45 = v12;
  uint64_t v42 = v13;
  unsigned __int8 v48 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  int v16 = sub_27E230();
  uint64_t v44 = v15;
  int v46 = v16;
  unsigned __int8 v48 = 4;
  LODWORD(v15) = sub_27E230();
  char v47 = 5;
  sub_1AEFE4();
  sub_27E260();
  int v41 = v48;
  unsigned __int8 v48 = 6;
  uint64_t v39 = sub_27E220();
  char v47 = 7;
  uint64_t v18 = v17;
  sub_1AF038();
  uint64_t v40 = v18;
  swift_bridgeObjectRetain();
  sub_27E260();
  int v38 = v15;
  uint64_t v19 = v40;
  int v37 = v48;
  char v47 = 8;
  sub_1AF08C();
  sub_27E260();
  int v35 = v48;
  char v47 = 9;
  unint64_t v36 = sub_1AF0E0();
  sub_27E260();
  int v34 = v48;
  char v47 = 10;
  sub_27E260();
  LODWORD(v36) = v48;
  unsigned __int8 v48 = 11;
  int v33 = sub_27E230();
  char v47 = 12;
  sub_1AF134();
  sub_27E260();
  int v32 = v48;
  unsigned __int8 v48 = 13;
  int v31 = sub_27E230();
  unsigned __int8 v48 = 14;
  int v30 = sub_27E230();
  unsigned __int8 v48 = 15;
  int v29 = sub_27E230();
  unsigned __int8 v48 = 16;
  char v20 = sub_27E230();
  int v21 = (void (**)(char *, uint64_t))(v6 + 8);
  LOBYTE(v18) = v20;
  int v28 = v46 & 1;
  char v22 = v38 & 1;
  int v46 = v33 & 1;
  int v38 = v31 & 1;
  int v33 = v30 & 1;
  uint64_t v23 = *v21;
  int v31 = v29 & 1;
  v23(v8, v5);
  char v24 = v18 & 1;
  *(_DWORD *)a2 = v9;
  uint64_t v25 = v44;
  uint64_t v26 = v45;
  *(void *)(a2 + 8) = v43;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v42;
  *(void *)(a2 + 32) = v25;
  *(unsigned char *)(a2 + 40) = v28;
  *(unsigned char *)(a2 + 41) = v22;
  *(unsigned char *)(a2 + 42) = v41;
  *(void *)(a2 + 48) = v39;
  *(void *)(a2 + 56) = v19;
  *(unsigned char *)(a2 + 64) = v37;
  *(unsigned char *)(a2 + 65) = v35;
  *(unsigned char *)(a2 + 66) = v34;
  *(unsigned char *)(a2 + 67) = v36;
  *(unsigned char *)(a2 + 68) = v46;
  *(unsigned char *)(a2 + 69) = v32;
  *(unsigned char *)(a2 + 70) = v38;
  *(unsigned char *)(a2 + 71) = v33;
  *(unsigned char *)(a2 + 72) = v31;
  *(unsigned char *)(a2 + 73) = v24;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionData.init(from:)(a1, a2);
}

uint64_t sub_1AE76C(void *a1)
{
  return SessionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics11SessionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 40);
  int v5 = *(unsigned __int8 *)(a1 + 41);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 42);
  uint64_t v63 = *(void *)(a1 + 48);
  uint64_t v61 = *(void *)(a1 + 56);
  int v59 = *(unsigned __int8 *)(a1 + 65);
  int v57 = *(unsigned __int8 *)(a1 + 66);
  int v55 = *(unsigned __int8 *)(a1 + 67);
  int v53 = *(unsigned __int8 *)(a1 + 68);
  int v49 = *(unsigned __int8 *)(a1 + 70);
  int v50 = *(unsigned __int8 *)(a1 + 71);
  int v51 = *(unsigned __int8 *)(a1 + 69);
  int v46 = *(unsigned __int8 *)(a1 + 72);
  int v43 = *(unsigned __int8 *)(a1 + 73);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 41);
  char v11 = *(unsigned char *)(a2 + 42);
  uint64_t v62 = *(void *)(a2 + 48);
  uint64_t v60 = *(void *)(a2 + 56);
  int v58 = *(unsigned __int8 *)(a2 + 65);
  int v56 = *(unsigned __int8 *)(a2 + 66);
  int v54 = *(unsigned __int8 *)(a2 + 67);
  int v52 = *(unsigned __int8 *)(a2 + 68);
  int v47 = *(unsigned __int8 *)(a2 + 70);
  int v48 = *(unsigned __int8 *)(a2 + 71);
  int v44 = *(unsigned __int8 *)(a2 + 69);
  int v45 = *(unsigned __int8 *)(a2 + 72);
  int v42 = *(unsigned __int8 *)(a2 + 73);
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      uint64_t result = 0;
      if (v4 != v9) {
        return result;
      }
    }
    else
    {
      char v14 = sub_27E370();
      uint64_t result = 0;
      if (v14 & 1) == 0 || ((v4 ^ v9)) {
        return result;
      }
    }
    if ((v5 ^ v10)) {
      return result;
    }
    if ((sub_321C0(v6, v11) & 1) == 0) {
      return 0;
    }
    if (v63 == v62 && v61 == v60 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
    {
      uint64_t v16 = CellularRadioAccessTechnology.rawValue.getter();
      uint64_t v18 = v17;
      if (v16 == CellularRadioAccessTechnology.rawValue.getter() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v20 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
      uint64_t v21 = 0x6E776F6E6B6E75;
      if (v59)
      {
        if (v59 == 1)
        {
          unint64_t v22 = 0xE200000000000000;
          uint64_t v23 = 28271;
        }
        else
        {
          unint64_t v22 = 0xE300000000000000;
          uint64_t v23 = 6710895;
        }
      }
      else
      {
        unint64_t v22 = 0xE700000000000000;
        uint64_t v23 = 0x6E776F6E6B6E75;
      }
      if (v58)
      {
        if (v58 == 1)
        {
          unint64_t v24 = 0xE200000000000000;
          uint64_t v25 = 28271;
        }
        else
        {
          unint64_t v24 = 0xE300000000000000;
          uint64_t v25 = 6710895;
        }
      }
      else
      {
        unint64_t v24 = 0xE700000000000000;
        uint64_t v25 = 0x6E776F6E6B6E75;
      }
      if (v23 == v25 && v22 == v24)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v26 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
      uint64_t v27 = 0x64656C62616E65;
      if (v57)
      {
        if (v57 == 1)
        {
          unint64_t v28 = 0xE700000000000000;
          uint64_t v29 = 0x64656C62616E65;
        }
        else
        {
          unint64_t v28 = 0xE800000000000000;
          uint64_t v29 = 0x64656C6261736964;
        }
      }
      else
      {
        unint64_t v28 = 0xE700000000000000;
        uint64_t v29 = 0x6E776F6E6B6E75;
      }
      if (v56)
      {
        if (v56 == 1)
        {
          unint64_t v30 = 0xE700000000000000;
          uint64_t v31 = 0x64656C62616E65;
        }
        else
        {
          unint64_t v30 = 0xE800000000000000;
          uint64_t v31 = 0x64656C6261736964;
        }
      }
      else
      {
        unint64_t v30 = 0xE700000000000000;
        uint64_t v31 = 0x6E776F6E6B6E75;
      }
      if (v29 == v31 && v28 == v30)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v32 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v32 & 1) == 0) {
          return result;
        }
      }
      if (v55)
      {
        if (v55 == 1)
        {
          unint64_t v33 = 0xE700000000000000;
          uint64_t v34 = 0x64656C62616E65;
        }
        else
        {
          unint64_t v33 = 0xE800000000000000;
          uint64_t v34 = 0x64656C6261736964;
        }
      }
      else
      {
        unint64_t v33 = 0xE700000000000000;
        uint64_t v34 = 0x6E776F6E6B6E75;
      }
      if (v54)
      {
        if (v54 == 1)
        {
          unint64_t v35 = 0xE700000000000000;
        }
        else
        {
          unint64_t v35 = 0xE800000000000000;
          uint64_t v27 = 0x64656C6261736964;
        }
      }
      else
      {
        unint64_t v35 = 0xE700000000000000;
        uint64_t v27 = 0x6E776F6E6B6E75;
      }
      if (v34 == v27 && v33 == v35)
      {
        swift_bridgeObjectRelease_n();
        if (v53 != v52) {
          return 0;
        }
      }
      else
      {
        char v36 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if (v36 & 1) == 0 || ((v53 ^ v52)) {
          return result;
        }
      }
      if (v51)
      {
        unint64_t v37 = 0xE400000000000000;
        if (v51 == 1) {
          uint64_t v38 = 1684828003;
        }
        else {
          uint64_t v38 = 1836212599;
        }
      }
      else
      {
        unint64_t v37 = 0xE700000000000000;
        uint64_t v38 = 0x6E776F6E6B6E75;
      }
      if (v44)
      {
        unint64_t v39 = 0xE400000000000000;
        if (v44 == 1) {
          uint64_t v21 = 1684828003;
        }
        else {
          uint64_t v21 = 1836212599;
        }
      }
      else
      {
        unint64_t v39 = 0xE700000000000000;
      }
      int v40 = v46 ^ v45;
      if (v38 == v21 && v37 == v39)
      {
        swift_bridgeObjectRelease_n();
        if ((v49 ^ v47 | v50 ^ v48 | v40)) {
          return 0;
        }
        return v43 ^ v42 ^ 1u;
      }
      char v41 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (!((v49 ^ v47) & 1 | ((v41 & 1) == 0) | ((v50 ^ v48) | v40) & 1)) {
        return v43 ^ v42 ^ 1u;
      }
    }
  }
  return result;
}

unint64_t sub_1AEDEC()
{
  unint64_t result = qword_321800;
  if (!qword_321800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321800);
  }
  return result;
}

unint64_t sub_1AEE40()
{
  unint64_t result = qword_321808;
  if (!qword_321808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321808);
  }
  return result;
}

unint64_t sub_1AEE94()
{
  unint64_t result = qword_321810;
  if (!qword_321810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321810);
  }
  return result;
}

unint64_t sub_1AEEE8()
{
  unint64_t result = qword_321818;
  if (!qword_321818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321818);
  }
  return result;
}

unint64_t sub_1AEF3C()
{
  unint64_t result = qword_321820;
  if (!qword_321820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321820);
  }
  return result;
}

unint64_t sub_1AEF90()
{
  unint64_t result = qword_321828;
  if (!qword_321828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321828);
  }
  return result;
}

unint64_t sub_1AEFE4()
{
  unint64_t result = qword_321838;
  if (!qword_321838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321838);
  }
  return result;
}

unint64_t sub_1AF038()
{
  unint64_t result = qword_321840;
  if (!qword_321840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321840);
  }
  return result;
}

unint64_t sub_1AF08C()
{
  unint64_t result = qword_321848;
  if (!qword_321848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321848);
  }
  return result;
}

unint64_t sub_1AF0E0()
{
  unint64_t result = qword_321850;
  if (!qword_321850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321850);
  }
  return result;
}

unint64_t sub_1AF134()
{
  unint64_t result = qword_321858;
  if (!qword_321858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321858);
  }
  return result;
}

unint64_t sub_1AF18C()
{
  unint64_t result = qword_321860;
  if (!qword_321860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321860);
  }
  return result;
}

unint64_t sub_1AF1E4()
{
  unint64_t result = qword_321868;
  if (!qword_321868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321868);
  }
  return result;
}

uint64_t destroy for SessionData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  *(unsigned char *)(a1 + 70) = *(unsigned char *)(a2 + 70);
  *(unsigned char *)(a1 + 71) = *(unsigned char *)(a2 + 71);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

__n128 initializeWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  *(unsigned char *)(a1 + 70) = *(unsigned char *)(a2 + 70);
  *(unsigned char *)(a1 + 71) = *(unsigned char *)(a2 + 71);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 74)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 74) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 74) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

uint64_t getEnumTagSinglePayload for SessionData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *__n128 result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AF6D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData.CodingKeys()
{
  return &type metadata for SessionData.CodingKeys;
}

unint64_t sub_1AF714()
{
  unint64_t result = qword_321870;
  if (!qword_321870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321870);
  }
  return result;
}

unint64_t sub_1AF76C()
{
  unint64_t result = qword_321878;
  if (!qword_321878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321878);
  }
  return result;
}

unint64_t sub_1AF7C4()
{
  unint64_t result = qword_321880;
  if (!qword_321880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321880);
  }
  return result;
}

uint64_t sub_1AF818(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657366664F637475 && a2 == 0xE900000000000074;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xEC00000065646F43 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1540 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1560 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74654D7472617473 && a2 == 0xEB00000000646F68 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000000002B1580 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B15A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002B15C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x47676E6964616572 && a2 == 0xEB000000006C616FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002B15E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x795468636E75616CLL && a2 == 0xEA00000000006570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C6C617261507369 && a2 == 0xEA00000000006C65 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x69576E69614D7369 && a2 == 0xEC000000776F646ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1600 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000000002B1620)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t ClickData.index.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ClickData.index.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

void __swiftcall ClickData.init(clickID:linkActionType:targetType:index:outBoundURL:)(BookAnalytics::ClickData *__return_ptr retstr, Swift::String_optional clickID, BookAnalytics::LinkActionType linkActionType, Swift::String targetType, Swift::Int64 index, Swift::String_optional outBoundURL)
{
  BookAnalytics::LinkActionType v6 = *(unsigned char *)linkActionType;
  retstr->clickID = clickID;
  retstr->linkActionType = v6;
  retstr->targetType = targetType;
  retstr->index = index;
  retstr->outBoundURL = outBoundURL;
}

uint64_t sub_1AFF38()
{
  uint64_t result = 0x44496B63696C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x697463416B6E696CLL;
      break;
    case 2:
      uint64_t result = 0x7954746567726174;
      break;
    case 3:
      uint64_t result = 0x7865646E69;
      break;
    case 4:
      uint64_t result = 0x646E756F4274756FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AFFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B0CD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B0020(uint64_t a1)
{
  unint64_t v2 = sub_1B076C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B005C(uint64_t a1)
{
  unint64_t v2 = sub_1B076C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClickData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_321888);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  v15[3] = *(void *)(v1 + 32);
  uint64_t v15[4] = v8;
  uint64_t v9 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 48);
  v15[1] = *(void *)(v1 + 56);
  _DWORD v15[2] = v9;
  uint64_t v10 = a1[3];
  char v11 = a1;
  uint64_t v13 = v12;
  sub_5900(v11, v10);
  sub_1B076C();
  sub_27E440();
  char v22 = 0;
  sub_27E290();
  if (!v2)
  {
    char v21 = v16;
    char v20 = 1;
    sub_1B07C0();
    sub_27E330();
    char v19 = 2;
    sub_27E2F0();
    char v18 = 3;
    sub_27E350();
    char v17 = 4;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t ClickData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3218A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B076C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v32 = 0;
    uint64_t v10 = sub_27E1C0();
    uint64_t v12 = v11;
    char v30 = 1;
    sub_1B0814();
    swift_bridgeObjectRetain();
    sub_27E260();
    uint64_t v26 = v10;
    int v25 = v31;
    char v29 = 2;
    uint64_t v13 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v24 = v13;
    char v28 = 3;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_27E280();
    char v27 = 4;
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    char v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v22 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v26;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v25;
    *(void *)(a2 + 24) = v24;
    *(void *)(a2 + 32) = v15;
    uint64_t v20 = v22;
    *(void *)(a2 + 40) = v23;
    *(void *)(a2 + 48) = v20;
    *(void *)(a2 + 56) = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B05F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClickData.init(from:)(a1, a2);
}

uint64_t sub_1B0608(void *a1)
{
  return ClickData.encode(to:)(a1);
}

BOOL _s13BookAnalytics9ClickDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 8);
  char v10 = *(unsigned char *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 56);
  if (!v3)
  {
    uint64_t v18 = *(void *)(a2 + 48);
    uint64_t v19 = *(void *)(a1 + 48);
    if (v9) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a1 + 48);
  if (*(void *)a1 == *(void *)a2 && v3 == v9 || (char v15 = sub_27E370(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (sub_2B944(v4, v10))
    {
      if (v5 == v11 && v6 == v12)
      {
        if (v7 != v13) {
          return 0;
        }
      }
      else
      {
        char v17 = sub_27E370();
        BOOL result = 0;
        if ((v17 & 1) == 0 || v7 != v13) {
          return result;
        }
      }
      if (v8) {
        return v14 && (v19 == v18 && v8 == v14 || (sub_27E370() & 1) != 0);
      }
      if (!v14) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B076C()
{
  unint64_t result = qword_321890;
  if (!qword_321890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321890);
  }
  return result;
}

unint64_t sub_1B07C0()
{
  unint64_t result = qword_321898;
  if (!qword_321898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321898);
  }
  return result;
}

unint64_t sub_1B0814()
{
  unint64_t result = qword_3218A8;
  if (!qword_3218A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218A8);
  }
  return result;
}

uint64_t destroy for ClickData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClickData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClickData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClickData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClickData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickData()
{
  return &type metadata for ClickData;
}

unsigned char *storeEnumTagSinglePayload for ClickData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B0B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickData.CodingKeys()
{
  return &type metadata for ClickData.CodingKeys;
}

unint64_t sub_1B0BD4()
{
  unint64_t result = qword_3218B0;
  if (!qword_3218B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218B0);
  }
  return result;
}

unint64_t sub_1B0C2C()
{
  unint64_t result = qword_3218B8;
  if (!qword_3218B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218B8);
  }
  return result;
}

unint64_t sub_1B0C84()
{
  unint64_t result = qword_3218C0;
  if (!qword_3218C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218C0);
  }
  return result;
}

uint64_t sub_1B0CD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496B63696C63 && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463416B6E696CLL && a2 == 0xEE00657079546E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7954746567726174 && a2 == 0xEA00000000006570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E756F4274756FLL && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::ViewLocation_optional __swiftcall ViewLocation.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9078;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ViewLocation.rawValue.getter()
{
  uint64_t v1 = 0x434F546D6F7266;
  if (*v0 != 1) {
    uint64_t v1 = 0x646165526D6F7266;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1B0FF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2C374(*a1, *a2);
}

unint64_t sub_1B1008()
{
  unint64_t result = qword_3218C8;
  if (!qword_3218C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218C8);
  }
  return result;
}

Swift::Int sub_1B105C()
{
  return sub_27E420();
}

uint64_t sub_1B1108()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1B11A0()
{
  return sub_27E420();
}

BookAnalytics::ViewLocation_optional sub_1B1248(Swift::String *a1)
{
  return ViewLocation.init(rawValue:)(*a1);
}

void sub_1B1254(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x434F546D6F7266;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646165526D6F7266;
    unint64_t v4 = 0xEB00000000676E69;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B12BC()
{
  return sub_27DED0();
}

uint64_t sub_1B131C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ViewLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B1438);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewLocation()
{
  return &type metadata for ViewLocation;
}

unint64_t sub_1B1470()
{
  unint64_t result = qword_3218D0;
  if (!qword_3218D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3218D0);
  }
  return result;
}

uint64_t sub_1B14C4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3218D8, &enum case for SessionGroup.default(_:));
}

uint64_t static AppResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3218D8, a1);
}

uint64_t sub_1B1524(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3218F0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AppResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3218F0, a1);
}

uint64_t sub_1B1584(uint64_t a1)
{
  unint64_t v2 = sub_1B175C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B15C0(uint64_t a1)
{
  unint64_t v2 = sub_1B175C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppResignEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_321908);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B175C();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1B175C()
{
  unint64_t result = qword_321910;
  if (!qword_321910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321910);
  }
  return result;
}

uint64_t AppResignEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_321918);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AppResignEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B175C();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1B1A3C((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for AppResignEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321A08);
}

uint64_t sub_1B1A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1B1AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3218D8, a1);
}

uint64_t sub_1B1AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3218F0, a1);
}

uint64_t getEnumTagSinglePayload for AppResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B1B3C);
}

uint64_t sub_1B1B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppResignEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B1BC0);
}

uint64_t sub_1B1BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AppResignEvent(uint64_t a1)
{
  return sub_5338(a1, qword_321978);
}

uint64_t getEnumTagSinglePayload for AppResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B1C68);
}

uint64_t sub_1B1C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B1CE8);
}

uint64_t sub_1B1CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for AppResignEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B1DF4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppResignEvent.Model.CodingKeys()
{
  return &type metadata for AppResignEvent.Model.CodingKeys;
}

unint64_t sub_1B1E30()
{
  unint64_t result = qword_321A40;
  if (!qword_321A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A40);
  }
  return result;
}

unint64_t sub_1B1E88()
{
  unint64_t result = qword_321A48;
  if (!qword_321A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A48);
  }
  return result;
}

unint64_t sub_1B1EE0()
{
  unint64_t result = qword_321A50;
  if (!qword_321A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A50);
  }
  return result;
}

uint64_t sub_1B1F38()
{
  if (*v0) {
    return 0x54746E65746E6F63;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_1B1F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B26FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1FAC(uint64_t a1)
{
  unint64_t v2 = sub_1B2484();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B1FE8(uint64_t a1)
{
  unint64_t v2 = sub_1B2484();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_321A58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  _DWORD v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_1B2484();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v11 = 1;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CollectionData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321A68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B2484();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v20 = 0;
    uint64_t v10 = sub_27E220();
    uint64_t v12 = v11;
    char v19 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v18;
    a2[3] = v15;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B23B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CollectionData.init(from:)(a1, a2);
}

uint64_t sub_1B23CC(void *a1)
{
  return CollectionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics14CollectionDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_27E370(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_27E370() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B2484()
{
  unint64_t result = qword_321A60;
  if (!qword_321A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A60);
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionData()
{
  return &type metadata for CollectionData;
}

unsigned char *storeEnumTagSinglePayload for CollectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B25BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionData.CodingKeys()
{
  return &type metadata for CollectionData.CodingKeys;
}

unint64_t sub_1B25F8()
{
  unint64_t result = qword_321A70;
  if (!qword_321A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A70);
  }
  return result;
}

unint64_t sub_1B2650()
{
  unint64_t result = qword_321A78;
  if (!qword_321A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A78);
  }
  return result;
}

unint64_t sub_1B26A8()
{
  unint64_t result = qword_321A80;
  if (!qword_321A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321A80);
  }
  return result;
}

uint64_t sub_1B26FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2820(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_321A88, &enum case for SessionGroup.default(_:));
}

uint64_t static WidgetExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AB0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321A88, a1);
}

uint64_t sub_1B2880(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_321AA0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WidgetExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AB8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321AA0, a1);
}

uint64_t WidgetEngagementEvent.widgetData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_321AB8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t WidgetEngagementEvent.widgetData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_321AB8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t WidgetExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_321B30);
}

uint64_t WidgetExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WidgetExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t WidgetEngagementEvent.Model.widgetData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 33);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321BC8);
}

uint64_t WidgetExposureEvent.Model.init(widgetData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 33);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(unsigned char *)(a3 + 32) = v7;
  *(unsigned char *)(a3 + 33) = v8;
  uint64_t v9 = a3 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 20);
  uint64_t v10 = sub_27D7C0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a2, v10);
}

uint64_t sub_1B2D68()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x6144746567646977;
  }
}

uint64_t sub_1B2DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B45CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DD4(uint64_t a1)
{
  unint64_t v2 = sub_1B3020();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B2E10(uint64_t a1)
{
  unint64_t v2 = sub_1B3020();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WidgetExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_321AC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1B3020();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  char v12 = *((unsigned char *)v3 + 33);
  long long v15 = *v3;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v18 = v11;
  char v19 = v12;
  v14[7] = 0;
  sub_1A5DB0();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for WidgetExposureEvent.Model(0);
    LOBYTE(v15) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B3020()
{
  unint64_t result = qword_321AC8;
  if (!qword_321AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321AC8);
  }
  return result;
}

uint64_t WidgetExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_321AD0);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetExposureEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B3020();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v21 = v9;
  uint64_t v13 = v24;
  char v32 = 0;
  sub_1A5D58();
  uint64_t v14 = v26;
  sub_27E260();
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  char v17 = v30;
  char v18 = v31;
  *(_OWORD *)uint64_t v12 = v27;
  *(void *)(v12 + 16) = v15;
  *(void *)(v12 + 24) = v16;
  *(unsigned char *)(v12 + 32) = v17;
  *(unsigned char *)(v12 + 33) = v18;
  LOBYTE(v27) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v12 + *(int *)(v21 + 20), v5, v13);
  sub_1B33AC(v12, v23);
  sub_5E94((uint64_t)a1);
  return sub_1B3410(v12);
}

uint64_t sub_1B33AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3410(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B346C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1B3484(void *a1)
{
  return WidgetExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1B349C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AB0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321A88, a1);
}

uint64_t sub_1B34D4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AB8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321AA0, a1);
}

uint64_t sub_1B350C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_321AB8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for WidgetExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B3AAC);
}

uint64_t sub_1B3AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B3BC0);
}

uint64_t sub_1B3BC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_321AB8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1B3CCC()
{
  sub_1B3D94();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1B3D94()
{
  if (!qword_321B40)
  {
    sub_1A5D58();
    sub_1A5DB0();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_321B40);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for WidgetExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v10 = sub_27D7C0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t initializeWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B41BC);
}

uint64_t sub_1B41BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B4280);
}

uint64_t sub_1B4280(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1B4328()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B448CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExposureEvent.Model.CodingKeys()
{
  return &type metadata for WidgetExposureEvent.Model.CodingKeys;
}

unint64_t sub_1B44C8()
{
  unint64_t result = qword_321C00;
  if (!qword_321C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C00);
  }
  return result;
}

unint64_t sub_1B4520()
{
  unint64_t result = qword_321C08;
  if (!qword_321C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C08);
  }
  return result;
}

unint64_t sub_1B4578()
{
  unint64_t result = qword_321C10;
  if (!qword_321C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C10);
  }
  return result;
}

uint64_t sub_1B45CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144746567646977 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

float SkipData.endTime.getter()
{
  return *(float *)(v0 + 4);
}

void SkipData.endTime.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

void SkipData.skipDirection.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 13);
}

unsigned char *SkipData.skipDirection.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 13) = *result;
  return result;
}

void __swiftcall SkipData.init(startTime:endTime:skipInterval:skipDirection:skipActionType:listeningID:isBackgrounded:)(BookAnalytics::SkipData *__return_ptr retstr, Swift::Float startTime, Swift::Float endTime, Swift::Float_optional *skipInterval, BookAnalytics::SkipDirection skipDirection, BookAnalytics::SkipActionType skipActionType, Swift::String_optional listeningID, Swift::Bool isBackgrounded)
{
  BookAnalytics::SkipDirection v8 = *(unsigned char *)skipDirection;
  BookAnalytics::SkipActionType v9 = *(unsigned char *)skipActionType;
  retstr->startTime = startTime;
  retstr->endTime = endTime;
  LODWORD(retstr->skipInterval.value) = skipInterval;
  retstr->skipInterval.is_nil = BYTE4(skipInterval) & 1;
  retstr->skipDirection = v8;
  retstr->skipActionType = v9;
  retstr->listeningID = listeningID;
  retstr->isBackgrounded = isBackgrounded;
}

uint64_t sub_1B4730()
{
  uint64_t result = 0x6D69547472617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D6954646E65;
      break;
    case 2:
      uint64_t result = 0x65746E4970696B73;
      break;
    case 3:
      uint64_t result = 0x6572694470696B73;
      break;
    case 4:
      uint64_t result = 0x6974634170696B73;
      break;
    case 5:
      uint64_t result = 0x6E696E657473696CLL;
      break;
    case 6:
      uint64_t result = 0x72676B6361427369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B484C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B4874(uint64_t a1)
{
  unint64_t v2 = sub_1B50A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B48B0(uint64_t a1)
{
  unint64_t v2 = sub_1B50A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SkipData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_321C18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(unsigned int *)(v1 + 8);
  int v8 = *(unsigned __int8 *)(v1 + 12);
  int v15 = *(unsigned __int8 *)(v1 + 13);
  int v16 = v8;
  int v14 = *(unsigned __int8 *)(v1 + 14);
  uint64_t v9 = *(void *)(v1 + 24);
  v13[0] = *(void *)(v1 + 16);
  v13[1] = v9;
  sub_5900(a1, a1[3]);
  sub_1B50A4();
  sub_27E440();
  char v27 = 0;
  sub_27E320();
  if (!v2)
  {
    char v11 = v15;
    char v10 = v16;
    char v26 = 1;
    sub_27E320();
    char v25 = 2;
    char v24 = v10;
    sub_27E2B0();
    char v23 = v11;
    char v22 = 3;
    sub_1B50F8();
    sub_27E330();
    char v21 = v14;
    char v20 = 4;
    sub_1B514C();
    sub_27E330();
    char v19 = 5;
    sub_27E290();
    char v18 = 6;
    sub_27E300();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SkipData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321C38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B50A4();
  sub_27E430();
  if (!v2)
  {
    char v32 = 0;
    sub_27E250();
    int v10 = v9;
    char v31 = 1;
    sub_27E250();
    int v12 = v11;
    char v30 = 2;
    uint64_t v13 = sub_27E1E0();
    char v28 = 3;
    sub_1B51A0();
    sub_27E260();
    int v14 = v29;
    char v26 = 4;
    sub_1B51F4();
    sub_27E260();
    int v22 = v27;
    int v23 = v14;
    char v25 = 5;
    uint64_t v15 = sub_27E1C0();
    uint64_t v18 = v17;
    uint64_t v21 = v15;
    char v24 = 6;
    swift_bridgeObjectRetain();
    char v19 = sub_27E230();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
    *(_DWORD *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 12) = BYTE4(v13) & 1;
    *(unsigned char *)(a2 + 13) = v23;
    *(unsigned char *)(a2 + 14) = v22;
    *(void *)(a2 + 16) = v21;
    *(void *)(a2 + 24) = v18;
    *(unsigned char *)(a2 + 32) = v19 & 1;
  }
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B4E84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SkipData.init(from:)(a1, a2);
}

uint64_t sub_1B4E9C(void *a1)
{
  return SkipData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8SkipDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(float *)a1 != *(float *)a2 || *(float *)(a1 + 4) != *(float *)(a2 + 4)) {
    return result;
  }
  int v4 = *(unsigned __int8 *)(a1 + 13);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 14);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  char v9 = *(unsigned char *)(a2 + 14);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  int v12 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + 8) == *(float *)(a2 + 8)) {
      char v13 = *(unsigned char *)(a2 + 12);
    }
    else {
      char v13 = 1;
    }
    if (v13) {
      return 0;
    }
  }
  unint64_t v14 = 0xE700000000000000;
  unint64_t v15 = 0xE700000000000000;
  uint64_t v16 = 0x64726177726F66;
  if (v4 != 1)
  {
    uint64_t v16 = 1801675106;
    unint64_t v15 = 0xE400000000000000;
  }
  if (v4) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0x6E776F6E6B6E75;
  }
  if (v4) {
    unint64_t v18 = v15;
  }
  else {
    unint64_t v18 = 0xE700000000000000;
  }
  uint64_t v19 = 0x64726177726F66;
  if (*(unsigned char *)(a2 + 13) != 1)
  {
    uint64_t v19 = 1801675106;
    unint64_t v14 = 0xE400000000000000;
  }
  if (*(unsigned char *)(a2 + 13)) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0x6E776F6E6B6E75;
  }
  if (*(unsigned char *)(a2 + 13)) {
    unint64_t v21 = v14;
  }
  else {
    unint64_t v21 = 0xE700000000000000;
  }
  int v24 = v8;
  if (v17 == v20 && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  if ((sub_2C758(v5, v9) & 1) == 0) {
    return 0;
  }
  if (!v7)
  {
    if (!v10) {
      return v24 ^ v12 ^ 1u;
    }
    return 0;
  }
  if (!v10) {
    return 0;
  }
  if (v6 == v11 && v7 == v10) {
    return v24 ^ v12 ^ 1u;
  }
  char v23 = sub_27E370();
  uint64_t result = 0;
  if (v23) {
    return v24 ^ v12 ^ 1u;
  }
  return result;
}

unint64_t sub_1B50A4()
{
  unint64_t result = qword_321C20;
  if (!qword_321C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C20);
  }
  return result;
}

unint64_t sub_1B50F8()
{
  unint64_t result = qword_321C28;
  if (!qword_321C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C28);
  }
  return result;
}

unint64_t sub_1B514C()
{
  unint64_t result = qword_321C30;
  if (!qword_321C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C30);
  }
  return result;
}

unint64_t sub_1B51A0()
{
  unint64_t result = qword_321C40;
  if (!qword_321C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C40);
  }
  return result;
}

unint64_t sub_1B51F4()
{
  unint64_t result = qword_321C48;
  if (!qword_321C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C48);
  }
  return result;
}

uint64_t destroy for SkipData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SkipData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SkipData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SkipData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SkipData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SkipData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkipData()
{
  return &type metadata for SkipData;
}

unsigned char *storeEnumTagSinglePayload for SkipData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkipData.CodingKeys()
{
  return &type metadata for SkipData.CodingKeys;
}

unint64_t sub_1B5564()
{
  unint64_t result = qword_321C50;
  if (!qword_321C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C50);
  }
  return result;
}

unint64_t sub_1B55BC()
{
  unint64_t result = qword_321C58;
  if (!qword_321C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C58);
  }
  return result;
}

unint64_t sub_1B5614()
{
  unint64_t result = qword_321C60;
  if (!qword_321C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321C60);
  }
  return result;
}

uint64_t sub_1B5668(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746E4970696B73 && a2 == 0xEC0000006C617672 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6572694470696B73 && a2 == 0xED00006E6F697463 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6974634170696B73 && a2 == 0xEE00657079546E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEB00000000444967 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72676B6361427369 && a2 == 0xEE006465646E756FLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1B59F8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_321C68, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingOrientationChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AC0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321C68, a1);
}

uint64_t sub_1B5A58(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_321C80, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingOrientationChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AC8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321C80, a1);
}

uint64_t ReadingOrientationChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingOrientationChangeEvent(uint64_t a1)
{
  return sub_5338(a1, qword_321D08);
}

uint64_t ReadingOrientationChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingOrientationChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingOrientationChangeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingOrientationChangeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_319218);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingOrientationChangeEvent.orientationData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingOrientationChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingOrientationChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingOrientationChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingOrientationChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingOrientationChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

__n128 ReadingOrientationChangeEvent.Model.orientationData.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v2 = v1[8].n128_u32[0];
  __n128 result = v1[7];
  *a1 = result;
  a1[1].n128_u32[0] = v2;
  return result;
}

uint64_t ReadingOrientationChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingOrientationChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321DA0);
}

uint64_t ReadingOrientationChangeEvent.Model.init(readingSessionData:contentData:orientationData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  int v25 = *((_DWORD *)a3 + 4);
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  long long v26 = *a3;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a5 + 112) = v26;
  *(_DWORD *)(a5 + 128) = v25;
  uint64_t v27 = a5 + *(int *)(type metadata accessor for ReadingOrientationChangeEvent.Model(0) + 28);
  uint64_t v28 = sub_27D7C0();
  unsigned __int8 v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32);

  return v29(v27, a4, v28);
}

unint64_t sub_1B61DC()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B8640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B62B0(uint64_t a1)
{
  unint64_t v2 = sub_1B65EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B62EC(uint64_t a1)
{
  unint64_t v2 = sub_1B65EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingOrientationChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_321C98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B65EC();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  DWORD2(v27) = v10;
  BYTE12(v27) = v11;
  BYTE13(v27) = v12;
  BYTE14(v27) = v13;
  char v40 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    *(void *)&long long v27 = *(void *)(v3 + 16);
    *((void *)&v27 + 1) = v14;
    LOBYTE(v28) = v15;
    long long v29 = v16;
    uint64_t v30 = v17;
    uint64_t v31 = v18;
    __int16 v32 = v19;
    int v33 = v20;
    char v34 = v21;
    int v35 = v22;
    char v36 = v23;
    int v37 = *(_DWORD *)(v3 + 89);
    char v38 = v24;
    long long v39 = *(_OWORD *)(v3 + 96);
    char v40 = 1;
    sub_1A1D4();
    sub_27E330();
    int v25 = *(_DWORD *)(v3 + 128);
    long long v27 = *(_OWORD *)(v3 + 112);
    int v28 = v25;
    char v40 = 2;
    sub_8E274();
    sub_27E2C0();
    type metadata accessor for ReadingOrientationChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B65EC()
{
  unint64_t result = qword_321CA0;
  if (!qword_321CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321CA0);
  }
  return result;
}

uint64_t ReadingOrientationChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v41 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_321CA8);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingOrientationChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v45 = a1;
  sub_5900(a1, v12);
  sub_1B65EC();
  uint64_t v13 = v46;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v45);
  }
  uint64_t v46 = v9;
  uint64_t v14 = v43;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v44;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v47);
  int v19 = DWORD2(v47);
  char v20 = BYTE12(v47);
  char v21 = BYTE13(v47);
  char v22 = BYTE14(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v47;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = *((void *)&v47 + 1);
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v47;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v40[0] = v28;
  v40[1] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_8ECCC();
  sub_27E1F0();
  int v38 = v48;
  *(_OWORD *)(v23 + 112) = v47;
  *(_DWORD *)(v23 + 128) = v38;
  LOBYTE(v47) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v23 + *(int *)(v46 + 28), v15, v3);
  sub_1B6AAC(v23, v42);
  sub_5E94((uint64_t)v45);
  return sub_1B6B10(v23);
}

uint64_t sub_1B6AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingOrientationChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6B10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingOrientationChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6B6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingOrientationChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1B6B84(void *a1)
{
  return ReadingOrientationChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1B6B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AC0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321C68, a1);
}

uint64_t sub_1B6BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AC8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321C80, a1);
}

uint64_t sub_1B6C0C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingOrientationChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_319218);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingOrientationChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_319218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B7600);
}

uint64_t sub_1B7600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingOrientationChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B77BC);
}

uint64_t sub_1B77BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_319218);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1B7970()
{
  sub_1B7B58(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_1B7B58(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_1B7B58(319, (unint64_t *)&qword_3192F8, (void (*)(void))sub_8ECCC, (void (*)(void))sub_8E274);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1B7B58(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v7;
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 76) = *((_DWORD *)a2 + 19);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)(a1 + 89) = *(_DWORD *)((char *)a2 + 89);
    *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v8 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v8;
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return v3;
}

uint64_t initializeWithCopy for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for ReadingOrientationChangeEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v10 = *((_OWORD *)a2 + 7);
  *(_DWORD *)(a1 + 128) = a2[32];
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B821C);
}

uint64_t sub_1B821C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingOrientationChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B82E0);
}

uint64_t sub_1B82E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1B8388()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingOrientationChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B8500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingOrientationChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingOrientationChangeEvent.Model.CodingKeys;
}

unint64_t sub_1B853C()
{
  unint64_t result = qword_321DE0;
  if (!qword_321DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321DE0);
  }
  return result;
}

unint64_t sub_1B8594()
{
  unint64_t result = qword_321DE8;
  if (!qword_321DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321DE8);
  }
  return result;
}

unint64_t sub_1B85EC()
{
  unint64_t result = qword_321DF0;
  if (!qword_321DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321DF0);
  }
  return result;
}

uint64_t sub_1B8640(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::UserAction_optional __swiftcall UserAction.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F90E0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t UserAction.rawValue.getter()
{
  uint64_t v1 = 0x6E4974706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74754F74706FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1B88F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2E1FC(*a1, *a2);
}

unint64_t sub_1B8900()
{
  unint64_t result = qword_321DF8;
  if (!qword_321DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321DF8);
  }
  return result;
}

Swift::Int sub_1B8954()
{
  return sub_27E420();
}

uint64_t sub_1B89F0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1B8A78()
{
  return sub_27E420();
}

BookAnalytics::UserAction_optional sub_1B8B10(Swift::String *a1)
{
  return UserAction.init(rawValue:)(*a1);
}

void sub_1B8B1C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6E4974706FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74754F74706FLL;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B8B74()
{
  return sub_27DED0();
}

uint64_t sub_1B8BD4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for UserAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B8CF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserAction()
{
  return &type metadata for UserAction;
}

unint64_t sub_1B8D28()
{
  unint64_t result = qword_321E00;
  if (!qword_321E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E00);
  }
  return result;
}

unint64_t sub_1B8D80()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1B8DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B9898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8DE8(uint64_t a1)
{
  unint64_t v2 = sub_1B93DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B8E24(uint64_t a1)
{
  unint64_t v2 = sub_1B93DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PrevAltContentExposureData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_321E08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_1B93DC();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_1B9430();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_1B9484();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PrevAltContentExposureData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321E28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1B93DC();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_1B94D8();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_1B952C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1B91C8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return PrevAltContentExposureData.init(from:)(a1, a2);
}

uint64_t sub_1B91E0(void *a1)
{
  return PrevAltContentExposureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics26PrevAltContentExposureDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  int v3 = a1[1];
  int v4 = a2[1];
  unint64_t v5 = 0xE800000000000000;
  unint64_t v6 = 0x6573616863727570;
  unint64_t v7 = 0x80000000002ACA10;
  if (v2 != 1)
  {
    unint64_t v6 = 0xD000000000000012;
    unint64_t v5 = 0x80000000002ACA10;
  }
  if (*a1) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v9 = v5;
  }
  else {
    unint64_t v9 = 0xE700000000000000;
  }
  unint64_t v10 = 0x6573616863727570;
  if (*a2 == 1) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v10 = 0xD000000000000012;
  }
  if (*a2) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v8 == v11 && v9 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  char v13 = sub_27E370();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v14 = 0;
  if (v13)
  {
LABEL_22:
    unint64_t v15 = 0xE600000000000000;
    uint64_t v16 = 0x656C676E6973;
    if (v3 != 1)
    {
      uint64_t v16 = 2037277037;
      unint64_t v15 = 0xE400000000000000;
    }
    if (v3) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0x6E776F6E6B6E75;
    }
    if (v3) {
      unint64_t v18 = v15;
    }
    else {
      unint64_t v18 = 0xE700000000000000;
    }
    if (v4)
    {
      if (v4 == 1)
      {
        unint64_t v19 = 0xE600000000000000;
        if (v17 != 0x656C676E6973) {
          goto LABEL_39;
        }
      }
      else
      {
        unint64_t v19 = 0xE400000000000000;
        if (v17 != 2037277037) {
          goto LABEL_39;
        }
      }
    }
    else
    {
      unint64_t v19 = 0xE700000000000000;
      if (v17 != 0x6E776F6E6B6E75) {
        goto LABEL_39;
      }
    }
    if (v18 == v19)
    {
      char v14 = 1;
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
LABEL_39:
    char v14 = sub_27E370();
    goto LABEL_40;
  }
  return v14 & 1;
}

unint64_t sub_1B93DC()
{
  unint64_t result = qword_321E10;
  if (!qword_321E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E10);
  }
  return result;
}

unint64_t sub_1B9430()
{
  unint64_t result = qword_321E18;
  if (!qword_321E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E18);
  }
  return result;
}

unint64_t sub_1B9484()
{
  unint64_t result = qword_321E20;
  if (!qword_321E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E20);
  }
  return result;
}

unint64_t sub_1B94D8()
{
  unint64_t result = qword_321E30;
  if (!qword_321E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E30);
  }
  return result;
}

unint64_t sub_1B952C()
{
  unint64_t result = qword_321E38;
  if (!qword_321E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrevAltContentExposureData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B9654);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrevAltContentExposureData()
{
  return &type metadata for PrevAltContentExposureData;
}

unsigned char *storeEnumTagSinglePayload for PrevAltContentExposureData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B9758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrevAltContentExposureData.CodingKeys()
{
  return &type metadata for PrevAltContentExposureData.CodingKeys;
}

unint64_t sub_1B9794()
{
  unint64_t result = qword_321E40;
  if (!qword_321E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E40);
  }
  return result;
}

unint64_t sub_1B97EC()
{
  unint64_t result = qword_321E48;
  if (!qword_321E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E48);
  }
  return result;
}

unint64_t sub_1B9844()
{
  unint64_t result = qword_321E50;
  if (!qword_321E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E50);
  }
  return result;
}

uint64_t sub_1B9898(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1650 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B1670)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B9988()
{
  if (*v0) {
    return 0x65536E6F6974706FLL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1B99D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BA2E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B99FC(uint64_t a1)
{
  unint64_t v2 = sub_1B9F3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B9A38(uint64_t a1)
{
  unint64_t v2 = sub_1B9F3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t OptionListData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_321E58);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v11[1] = v1[2];
  void v11[2] = v8;
  sub_5900(a1, a1[3]);
  sub_1B9F3C();
  sub_27E440();
  uint64_t v14 = v9;
  char v13 = 0;
  sub_4E04(&qword_319620);
  sub_97C90(&qword_319628);
  sub_27E2C0();
  if (!v2)
  {
    char v12 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OptionListData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321E68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1B9F3C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    sub_4E04(&qword_319620);
    v14[15] = 0;
    sub_97C90(&qword_319650);
    sub_27E1F0();
    uint64_t v9 = v15;
    v14[14] = 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_27E220();
    uint64_t v13 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
    swift_bridgeObjectRetain();
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9E70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return OptionListData.init(from:)(a1, a2);
}

uint64_t sub_1B9E88(void *a1)
{
  return OptionListData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics14OptionListDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void **)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v4)
  {
    if (!v7) {
      goto LABEL_4;
    }
    return 0;
  }
  if (!v7 || (sub_80FC4(v4, v7) & 1) == 0) {
    return 0;
  }
LABEL_4:
  if (v5 == v8 && v6 == v9) {
    return 1;
  }

  return sub_27E370();
}

unint64_t sub_1B9F3C()
{
  unint64_t result = qword_321E60;
  if (!qword_321E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E60);
  }
  return result;
}

uint64_t destroy for OptionListData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13BookAnalytics14OptionListDataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OptionListData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OptionListData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OptionListData()
{
  return &type metadata for OptionListData;
}

unsigned char *storeEnumTagSinglePayload for OptionListData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BA1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionListData.CodingKeys()
{
  return &type metadata for OptionListData.CodingKeys;
}

unint64_t sub_1BA1E0()
{
  unint64_t result = qword_321E70;
  if (!qword_321E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E70);
  }
  return result;
}

unint64_t sub_1BA238()
{
  unint64_t result = qword_321E78;
  if (!qword_321E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E78);
  }
  return result;
}

unint64_t sub_1BA290()
{
  unint64_t result = qword_321E80;
  if (!qword_321E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E80);
  }
  return result;
}

uint64_t sub_1BA2E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1690 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65536E6F6974706FLL && a2 == 0xEE0064657463656CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AltContentTypeExposureData.altContentID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AltContentTypeExposureData.altContentID.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

void OnDevicePersonalizationPropertyData.onDevicePersonalizationUserStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

unsigned char *OnDevicePersonalizationPropertyData.onDevicePersonalizationUserStatus.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

void __swiftcall AltContentTypeExposureData.init(altContentType:altContentID:exposureType:exposureTypeView:altPricePoint:altPriceCurrency:productionType:)(BookAnalytics::AltContentTypeExposureData *__return_ptr retstr, BookAnalytics::ContentType altContentType, Swift::OpaquePointer altContentID, BookAnalytics::ExposureType exposureType, BookAnalytics::ExposureTypeView exposureTypeView, Swift::String_optional altPricePoint, Swift::String_optional altPriceCurrency, BookAnalytics::ProductionType_optional productionType)
{
  BookAnalytics::ExposureType v8 = *(unsigned char *)exposureType;
  BookAnalytics::ExposureTypeView v9 = *(unsigned char *)exposureTypeView;
  BookAnalytics::ProductionType v10 = *(unsigned char *)productionType.value;
  retstr->altContentType = *(unsigned char *)altContentType;
  retstr->altContentID = altContentID;
  retstr->exposureType = v8;
  retstr->exposureTypeView = v9;
  retstr->altPricePoint = altPricePoint;
  retstr->altPriceCurrency = altPriceCurrency;
  retstr->productionType.value = v10;
}

unint64_t sub_1BA47C(char a1)
{
  unint64_t result = 0x65746E6F43746C61;
  switch(a1)
  {
    case 2:
      unint64_t result = 0x657275736F707865;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6563697250746C61;
      break;
    case 6:
      unint64_t result = 0x69746375646F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA584()
{
  return sub_1BA47C(*v0);
}

uint64_t sub_1BA58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BB688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA5B4(uint64_t a1)
{
  unint64_t v2 = sub_1BB1D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BA5F0(uint64_t a1)
{
  unint64_t v2 = sub_1BB1D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AltContentTypeExposureData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_321E88);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v21 = *((void *)v1 + 1);
  int v23 = v1[16];
  int v20 = v1[17];
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v18 = *((void *)v1 + 4);
  uint64_t v19 = v9;
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v16 = *((void *)v1 + 5);
  uint64_t v17 = v10;
  HIDWORD(v15) = v1[56];
  sub_5900(a1, a1[3]);
  sub_1BB1D4();
  uint64_t v11 = v4;
  sub_27E440();
  LOBYTE(v22) = v8;
  char v24 = 0;
  sub_101E4();
  sub_27E330();
  if (!v2)
  {
    char v12 = v23;
    char v13 = v20;
    uint64_t v22 = v21;
    char v24 = 1;
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319628);
    sub_27E330();
    LOBYTE(v22) = v12;
    char v24 = 2;
    sub_1B9430();
    sub_27E330();
    LOBYTE(v22) = v13;
    char v24 = 3;
    sub_1B9484();
    sub_27E330();
    LOBYTE(v22) = 4;
    sub_27E290();
    LOBYTE(v22) = 5;
    sub_27E290();
    LOBYTE(v22) = BYTE4(v15);
    char v24 = 6;
    sub_142D88();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t AltContentTypeExposureData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_321E98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1BB1D4();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v28 = 0;
    sub_10238();
    sub_27E260();
    int v9 = v26;
    sub_4E04(&qword_319620);
    char v28 = 1;
    sub_97C90(&qword_319650);
    sub_27E260();
    uint64_t v11 = v26;
    char v28 = 2;
    sub_1B94D8();
    swift_bridgeObjectRetain();
    sub_27E260();
    int v27 = v26;
    char v28 = 3;
    sub_1B952C();
    sub_27E260();
    int v24 = v26;
    int v25 = v9;
    LOBYTE(v26) = 4;
    uint64_t v12 = sub_27E1C0();
    uint64_t v14 = v13;
    uint64_t v22 = v12;
    int v23 = a2;
    LOBYTE(v26) = 5;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_27E1C0();
    uint64_t v17 = v16;
    uint64_t v21 = v15;
    char v28 = 6;
    sub_142F2C();
    swift_bridgeObjectRetain();
    sub_27E1F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v18 = v26;
    uint64_t v19 = v23;
    *int v23 = v25;
    *((void *)v19 + 1) = v11;
    v19[16] = v27;
    v19[17] = v24;
    *((void *)v19 + 3) = v22;
    *((void *)v19 + 4) = v14;
    *((void *)v19 + 5) = v21;
    *((void *)v19 + 6) = v17;
    v19[56] = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD6C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AltContentTypeExposureData.init(from:)(a1, a2);
}

uint64_t sub_1BAD84(void *a1)
{
  return AltContentTypeExposureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics26AltContentTypeExposureDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v40 = *(unsigned __int8 *)(a1 + 17);
  int v41 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v42 = *(void *)(a1 + 32);
  uint64_t v43 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  int v4 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v44 = *(void **)(a2 + 8);
  int v45 = *(void **)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 17);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 56);
  if ((sub_2DAE4(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  int v37 = v6;
  uint64_t v38 = v8;
  uint64_t v39 = v7;
  int v36 = v11;
  if ((sub_80FC4(v45, v44) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = 0x6E776F6E6B6E75;
  unint64_t v13 = 0xE800000000000000;
  unint64_t v14 = 0x6573616863727570;
  unint64_t v15 = 0x80000000002ACA10;
  if (v41 != 1)
  {
    unint64_t v14 = 0xD000000000000012;
    unint64_t v13 = 0x80000000002ACA10;
  }
  if (v41) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0x6E776F6E6B6E75;
  }
  if (v41) {
    unint64_t v17 = v13;
  }
  else {
    unint64_t v17 = 0xE700000000000000;
  }
  unint64_t v18 = 0x6573616863727570;
  if (v5 == 1) {
    unint64_t v15 = 0xE800000000000000;
  }
  else {
    unint64_t v18 = 0xD000000000000012;
  }
  if (v5) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0x6E776F6E6B6E75;
  }
  if (v5) {
    unint64_t v20 = v15;
  }
  else {
    unint64_t v20 = 0xE700000000000000;
  }
  if (v16 == v19 && v17 == v20)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  if (v40)
  {
    if (v40 == 1) {
      uint64_t v23 = 0x656C676E6973;
    }
    else {
      uint64_t v23 = 2037277037;
    }
    if (v40 == 1) {
      unint64_t v24 = 0xE600000000000000;
    }
    else {
      unint64_t v24 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v24 = 0xE700000000000000;
    uint64_t v23 = 0x6E776F6E6B6E75;
  }
  unint64_t v25 = 0xE600000000000000;
  uint64_t v26 = 0x656C676E6973;
  if (v37 != 1)
  {
    uint64_t v26 = 2037277037;
    unint64_t v25 = 0xE400000000000000;
  }
  if (v37) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0x6E776F6E6B6E75;
  }
  if (v37) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = 0xE700000000000000;
  }
  if (v23 == v27 && v24 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v29 & 1) == 0) {
      return result;
    }
  }
  if (!v42)
  {
    if (v39) {
      return 0;
    }
    goto LABEL_51;
  }
  if (!v39) {
    return 0;
  }
  if (v43 == v38 && v42 == v39 || (char v30 = sub_27E370(), result = 0, (v30 & 1) != 0))
  {
LABEL_51:
    if (v3)
    {
      if (!v10) {
        return 0;
      }
      if (v2 != v9 || v3 != v10)
      {
        char v31 = sub_27E370();
        uint64_t result = 0;
        if ((v31 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v4 == 3)
    {
      if (v36 == 3) {
        return 1;
      }
    }
    else if (v36 != 3)
    {
      if (v4)
      {
        if (v4 == 1)
        {
          uint64_t v32 = 0x6375646F72506773;
          unint64_t v33 = 0xEC0000006E6F6974;
        }
        else
        {
          uint64_t v32 = 0x6F725047536E6F6ELL;
          unint64_t v33 = 0xEF6E6F6974637564;
        }
      }
      else
      {
        unint64_t v33 = 0xE700000000000000;
        uint64_t v32 = 0x6E776F6E6B6E75;
      }
      if (v36)
      {
        if (v36 == 1)
        {
          uint64_t v12 = 0x6375646F72506773;
          unint64_t v34 = 0xEC0000006E6F6974;
        }
        else
        {
          uint64_t v12 = 0x6F725047536E6F6ELL;
          unint64_t v34 = 0xEF6E6F6974637564;
        }
      }
      else
      {
        unint64_t v34 = 0xE700000000000000;
      }
      if (v32 == v12 && v33 == v34)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v35 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BB1D4()
{
  unint64_t result = qword_321E90;
  if (!qword_321E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321E90);
  }
  return result;
}

uint64_t initializeWithCopy for AltContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AltContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for AltContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AltContentTypeExposureData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for AltContentTypeExposureData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AltContentTypeExposureData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AltContentTypeExposureData()
{
  return &type metadata for AltContentTypeExposureData;
}

unsigned char *storeEnumTagSinglePayload for AltContentTypeExposureData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BB548);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AltContentTypeExposureData.CodingKeys()
{
  return &type metadata for AltContentTypeExposureData.CodingKeys;
}

unint64_t sub_1BB584()
{
  unint64_t result = qword_321EA0;
  if (!qword_321EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321EA0);
  }
  return result;
}

unint64_t sub_1BB5DC()
{
  unint64_t result = qword_321EA8;
  if (!qword_321EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321EA8);
  }
  return result;
}

unint64_t sub_1BB634()
{
  unint64_t result = qword_321EB0;
  if (!qword_321EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321EB0);
  }
  return result;
}

uint64_t sub_1BB688(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65746E6F43746C61 && a2 == 0xEE0065707954746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E6F43746C61 && a2 == 0xEC0000004449746ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000065707954 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B16B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6563697250746C61 && a2 == 0xED0000746E696F50 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0080 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEE00657079546E6FLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1BB9C8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_321EB8, &enum case for SessionGroup.default(_:));
}

uint64_t static WelcomeScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AD0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321EB8, a1);
}

uint64_t sub_1BBA28(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_321ED0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WelcomeScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AD8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321ED0, a1);
}

uint64_t WelcomeScreenViewEvent.welcomeScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3164D0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t WelcomeScreenViewEvent.welcomeScreenData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3164D0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t WelcomeScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WelcomeScreenViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_321F58);
}

uint64_t WelcomeScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WelcomeScreenViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WelcomeScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WelcomeScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WelcomeScreenViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WelcomeScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for WelcomeScreenViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t WelcomeScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WelcomeScreenViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_321FF0);
}

uint64_t WelcomeScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WelcomeScreenViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WelcomeScreenViewEvent.Model.init(welcomeScreenData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = *(_DWORD *)(a1 + 4);
  *(unsigned char *)a4 = *(unsigned char *)a1;
  *(_DWORD *)(a4 + 4) = v7;
  uint64_t v8 = type metadata accessor for WelcomeScreenViewEvent.Model(0);
  uint64_t v9 = a4 + *(int *)(v8 + 20);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  uint64_t v11 = a4 + *(int *)(v8 + 24);
  uint64_t v12 = sub_27D7F0();
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);

  return v13(v11, a3, v12);
}

unint64_t sub_1BC114()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1BC17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC1A4(uint64_t a1)
{
  unint64_t v2 = sub_1BC470();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BC1E0(uint64_t a1)
{
  unint64_t v2 = sub_1BC470();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WelcomeScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_321EE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1BC470();
  sub_27E440();
  int v9 = *(_DWORD *)(v3 + 4);
  v11[8] = *(unsigned char *)v3;
  int v12 = v9;
  v11[7] = 0;
  sub_14238();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for WelcomeScreenViewEvent.Model(0);
    void v11[6] = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v11[5] = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BC470()
{
  unint64_t result = qword_321EF0;
  if (!qword_321EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_321EF0);
  }
  return result;
}

uint64_t WelcomeScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = sub_27D7F0();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v24 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_321EF8);
  uint64_t v25 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WelcomeScreenViewEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1BC470();
  uint64_t v27 = v8;
  uint64_t v12 = (uint64_t)v29;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  char v29 = a1;
  uint64_t v14 = v25;
  uint64_t v13 = v26;
  char v32 = 0;
  sub_14770();
  sub_27E260();
  int v15 = v34;
  uint64_t v16 = (uint64_t)v11;
  *uint64_t v11 = v33;
  *((_DWORD *)v11 + 1) = v15;
  char v31 = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v11[*(int *)(v9 + 20)], v6, v4);
  char v30 = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  v20[1] = v4;
  uint64_t v17 = v23;
  unint64_t v18 = v24;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v16 + *(int *)(v9 + 24), v18, v17);
  sub_1BC924(v16, v22);
  sub_5E94((uint64_t)v29);
  return sub_1BC988(v16);
}

uint64_t sub_1BC924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WelcomeScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC988(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WelcomeScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC9E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WelcomeScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1BC9FC(void *a1)
{
  return WelcomeScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1BCA14@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AD0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_321EB8, a1);
}

uint64_t sub_1BCA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AD8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_321ED0, a1);
}

uint64_t sub_1BCA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for WelcomeScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3164D0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BD25C);
}

uint64_t sub_1BD25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3164D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for WelcomeScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BD3C8);
}

uint64_t sub_1BD3C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3164D0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1BD52C()
{
  sub_1BD630();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1BD630()
{
  if (!qword_316580)
  {
    sub_14770();
    sub_14238();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_316580);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WelcomeScreenViewEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_27D7C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_27D7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

void *initializeWithCopy for WelcomeScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for WelcomeScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for WelcomeScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BDA5C);
}

uint64_t sub_1BDA5C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    unsigned int v4 = *a1;
    if (v4 >= 5) {
      return v4 - 4;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = &a1[*(int *)(a3 + 24)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for WelcomeScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BDB94);
}

unsigned char *sub_1BDB94(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 251)
  {
    *unint64_t result = a2 + 4;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 24)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1BDCBC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WelcomeScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for WelcomeScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_1BDE98()
{
  unint64_t result = qword_322030;
  if (!qword_322030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322030);
  }
  return result;
}

unint64_t sub_1BDEF0()
{
  unint64_t result = qword_322038;
  if (!qword_322038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322038);
  }
  return result;
}

unint64_t sub_1BDF48()
{
  unint64_t result = qword_322040;
  if (!qword_322040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322040);
  }
  return result;
}

uint64_t sub_1BDF9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADE60 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1BE108(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322048, &enum case for SessionGroup.default(_:));
}

uint64_t static AppResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AE0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322048, a1);
}

uint64_t sub_1BE168(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322060, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AppResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AE8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322060, a1);
}

uint64_t sub_1BE1C8(uint64_t a1)
{
  unint64_t v2 = sub_1BE3A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BE204(uint64_t a1)
{
  unint64_t v2 = sub_1BE3A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppResumeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_322078);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1BE3A0();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1BE3A0()
{
  unint64_t result = qword_322080;
  if (!qword_322080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322080);
  }
  return result;
}

uint64_t AppResumeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_322088);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AppResumeEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1BE3A0();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1BE680((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for AppResumeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322178);
}

uint64_t sub_1BE680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1BE6FC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AE0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322048, a1);
}

uint64_t sub_1BE734@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AE8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322060, a1);
}

uint64_t getEnumTagSinglePayload for AppResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BE780);
}

uint64_t sub_1BE780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BE804);
}

uint64_t sub_1BE804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AppResumeEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3220E8);
}

uint64_t getEnumTagSinglePayload for AppResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BE8AC);
}

uint64_t sub_1BE8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BE92C);
}

uint64_t sub_1BE92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for AppResumeEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BEA38);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppResumeEvent.Model.CodingKeys()
{
  return &type metadata for AppResumeEvent.Model.CodingKeys;
}

unint64_t sub_1BEA74()
{
  unint64_t result = qword_3221B0;
  if (!qword_3221B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3221B0);
  }
  return result;
}

unint64_t sub_1BEACC()
{
  unint64_t result = qword_3221B8;
  if (!qword_3221B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3221B8);
  }
  return result;
}

unint64_t sub_1BEB24()
{
  unint64_t result = qword_3221C0;
  if (!qword_3221C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3221C0);
  }
  return result;
}

uint64_t sub_1BEB78(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3221C8, &enum case for SessionGroup.default(_:));
}

uint64_t static SeriesExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AF0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3221C8, a1);
}

uint64_t sub_1BEBD8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3221E0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SeriesExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315AF8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3221E0, a1);
}

uint64_t SeriesExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322268);
}

uint64_t SeriesExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesExposureEvent.exposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SeriesExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t SeriesExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322308);
}

uint64_t SeriesExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesExposureEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesExposureEvent.Model.init(seriesData:exposureData:linkData:eventData:timedData:)@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  uint64_t v9 = a1[2];
  __int16 v10 = *((_WORD *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 26);
  uint64_t v12 = a1[4];
  uint64_t v13 = a1[5];
  long long v23 = a2[1];
  long long v24 = *a2;
  long long v22 = a2[2];
  uint64_t v14 = *((void *)a2 + 6);
  uint64_t v15 = *((void *)a2 + 7);
  sub_4ED08(a3, (uint64_t)v27);
  *(void *)a6 = v7;
  *(unsigned char *)(a6 + 8) = v8;
  *(void *)(a6 + 16) = v9;
  *(_WORD *)(a6 + 24) = v10;
  *(unsigned char *)(a6 + 26) = v11;
  *(void *)(a6 + 32) = v12;
  *(void *)(a6 + 40) = v13;
  *(_OWORD *)(a6 + 48) = v24;
  *(_OWORD *)(a6 + 64) = v23;
  *(_OWORD *)(a6 + 80) = v22;
  *(void *)(a6 + 96) = v14;
  *(void *)(a6 + 104) = v15;
  sub_4ED08((uint64_t)v27, a6 + 112);
  uint64_t v16 = type metadata accessor for SeriesExposureEvent.Model(0);
  uint64_t v17 = a6 + *(int *)(v16 + 28);
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a4, v18);
  uint64_t v19 = a6 + *(int *)(v16 + 32);
  uint64_t v20 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a5, v20);
}

uint64_t sub_1BF580()
{
  uint64_t result = 0x6144736569726573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BF634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BF65C(uint64_t a1)
{
  unint64_t v2 = sub_1BFA3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BF698(uint64_t a1)
{
  unint64_t v2 = sub_1BFA3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesExposureEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_3221F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1BFA3C();
  sub_27E440();
  char v8 = *((unsigned char *)v2 + 8);
  uint64_t v9 = v2[2];
  __int16 v10 = *((_WORD *)v2 + 12);
  char v11 = *((unsigned char *)v2 + 26);
  uint64_t v20 = *v2;
  char v21 = v8;
  uint64_t v22 = v9;
  __int16 v23 = v10;
  char v24 = v11;
  long long v25 = *((_OWORD *)v2 + 2);
  v19[0] = 0;
  sub_11514();
  uint64_t v12 = v31;
  sub_27E330();
  if (v12) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v14 = v5;
  long long v15 = *((_OWORD *)v2 + 4);
  long long v27 = *((_OWORD *)v2 + 3);
  long long v28 = v15;
  long long v16 = *((_OWORD *)v2 + 6);
  long long v29 = *((_OWORD *)v2 + 5);
  long long v30 = v16;
  char v26 = 1;
  sub_4F4B0();
  sub_27E2C0();
  sub_4ED08((uint64_t)(v2 + 14), (uint64_t)&v20);
  sub_4ED08((uint64_t)&v20, (uint64_t)v19);
  v18[7] = 2;
  sub_1FF00();
  sub_27E2C0();
  type metadata accessor for SeriesExposureEvent.Model(0);
  v19[0] = 3;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v31 = v4;
  sub_27E330();
  v19[0] = 4;
  sub_27D7F0();
  sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v17 = v31;
  sub_27E330();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v7, v17);
}

unint64_t sub_1BFA3C()
{
  unint64_t result = qword_322200;
  if (!qword_322200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322200);
  }
  return result;
}

uint64_t SeriesExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = sub_27D7F0();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  long long v28 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4E04(&qword_322208);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  char v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SeriesExposureEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1BFA3C();
  char v32 = v8;
  uint64_t v12 = (uint64_t)v40;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  int v40 = a1;
  uint64_t v13 = (uint64_t)v11;
  v35[0] = 0;
  sub_11A3C();
  sub_27E260();
  char v14 = BYTE8(v36);
  uint64_t v15 = v37;
  __int16 v16 = WORD4(v37);
  char v17 = BYTE10(v37);
  *(void *)char v11 = v36;
  v11[8] = v14;
  *((void *)v11 + 2) = v15;
  *((_WORD *)v11 + 12) = v16;
  v11[26] = v17;
  *((_OWORD *)v11 + 2) = v38;
  v35[0] = 1;
  sub_4FB10();
  sub_27E1F0();
  long long v18 = v37;
  *((_OWORD *)v11 + 3) = v36;
  *((_OWORD *)v11 + 4) = v18;
  long long v19 = v39;
  *((_OWORD *)v11 + 5) = v38;
  *((_OWORD *)v11 + 6) = v19;
  v35[159] = 2;
  sub_20940();
  sub_27E1F0();
  v24[1] = 0;
  sub_4ED08((uint64_t)&v36, (uint64_t)v35);
  sub_4ED08((uint64_t)v35, (uint64_t)(v11 + 112));
  char v34 = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v20 = v30;
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v11[*(int *)(v9 + 28)], v6, v20);
  char v34 = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v22 = v27;
  char v21 = v28;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v13 + *(int *)(v9 + 32), v21, v22);
  sub_1C00A4(v13, v26);
  sub_5E94((uint64_t)v40);
  return sub_1C0108(v13);
}

uint64_t sub_1C00A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0164@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1C017C(void *a1)
{
  return SeriesExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1C0194@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AF0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3221C8, a1);
}

uint64_t sub_1C01CC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315AF8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3221E0, a1);
}

uint64_t sub_1C0204@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316320);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317A38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for SeriesExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for SeriesExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SeriesExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SeriesExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SeriesExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C0E00);
}

uint64_t sub_1C0E00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for SeriesExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C100C);
}

uint64_t sub_1C100C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316320);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1C1210()
{
  sub_1C1434(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
  if (v0 <= 0x3F)
  {
    sub_1C1434(319, (unint64_t *)&unk_317AD0, (void (*)(void))sub_4FB10, (void (*)(void))sub_4F4B0);
    if (v1 <= 0x3F)
    {
      sub_1C1434(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1C1434(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SeriesExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v7 = a2[5];
    *(void *)(v4 + 32) = a2[4];
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = a2[7];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(v4 + 48) = a2[6];
      *(void *)(v4 + 56) = v8;
      uint64_t v9 = a2[9];
      *(void *)(v4 + 64) = a2[8];
      *(void *)(v4 + 72) = v9;
      uint64_t v10 = a2[11];
      *(void *)(v4 + 80) = a2[10];
      *(void *)(v4 + 88) = v10;
      uint64_t v11 = a2[13];
      *(void *)(v4 + 96) = a2[12];
      *(void *)(v4 + 104) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = a2[15];
      if (v12)
      {
LABEL_4:
        *(void *)(v4 + 112) = a2[14];
        *(void *)(v4 + 120) = v12;
        uint64_t v13 = a2[17];
        *(void *)(v4 + 128) = a2[16];
        *(void *)(v4 + 136) = v13;
        uint64_t v14 = a2[19];
        *(void *)(v4 + 144) = a2[18];
        *(void *)(v4 + 152) = v14;
        *(unsigned char *)(v4 + 160) = *((unsigned char *)a2 + 160);
        uint64_t v15 = a2[22];
        *(void *)(v4 + 168) = a2[21];
        *(void *)(v4 + 176) = v15;
        uint64_t v16 = a2[24];
        *(void *)(v4 + 184) = a2[23];
        *(void *)(v4 + 192) = v16;
        uint64_t v37 = v6;
        uint64_t v17 = a2[26];
        *(void *)(v4 + 200) = a2[25];
        *(void *)(v4 + 208) = v17;
        uint64_t v18 = a2[28];
        *(void *)(v4 + 216) = a2[27];
        *(void *)(v4 + 224) = v18;
        uint64_t v19 = a2[30];
        *(void *)(v4 + 232) = a2[29];
        *(void *)(v4 + 240) = v19;
        uint64_t v20 = a2[32];
        *(void *)(v4 + 248) = a2[31];
        *(void *)(v4 + 256) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v28 = *(int *)(v6 + 28);
        uint64_t v29 = v4 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = *(int *)(v6 + 32);
        uint64_t v33 = v4 + v32;
        uint64_t v34 = (uint64_t)a2 + v32;
        uint64_t v35 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        return v4;
      }
    }
    else
    {
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(v4 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(v4 + 64) = v22;
      long long v23 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(v4 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(v4 + 96) = v23;
      uint64_t v12 = a2[15];
      if (v12) {
        goto LABEL_4;
      }
    }
    long long v24 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(v4 + 208) = *((_OWORD *)a2 + 13);
    *(_OWORD *)(v4 + 224) = v24;
    *(_OWORD *)(v4 + 240) = *((_OWORD *)a2 + 15);
    *(void *)(v4 + 256) = a2[32];
    long long v25 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(v4 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 160) = v25;
    long long v26 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(v4 + 176) = *((_OWORD *)a2 + 11);
    *(_OWORD *)(v4 + 192) = v26;
    long long v27 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(v4 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 128) = v27;
    goto LABEL_8;
  }
  uint64_t v21 = *a2;
  *(void *)uint64_t v4 = *a2;
  uint64_t v4 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v4;
}

uint64_t destroy for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (!v7)
  {
    long long v20 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v20;
    long long v21 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v21;
    uint64_t v11 = *(void *)(a2 + 120);
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    long long v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    long long v23 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v23;
    long long v24 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v24;
    long long v25 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v25;
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *(void *)(a2 + 120);
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v35 = a3;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 48);
  uint64_t v7 = (long long *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_51BEC(a1 + 48);
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v11 = *v7;
      long long v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *uint64_t v6 = v11;
      *(_OWORD *)(a1 + 64) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  uint64_t v15 = (_OWORD *)(a1 + 112);
  uint64_t v16 = (_OWORD *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v17)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 112);
      long long v18 = *(_OWORD *)(a2 + 128);
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 128) = v18;
      long long v19 = *(_OWORD *)(a2 + 192);
      long long v21 = *(_OWORD *)(a2 + 144);
      long long v20 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v19;
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v20;
      long long v23 = *(_OWORD *)(a2 + 224);
      long long v22 = *(_OWORD *)(a2 + 240);
      long long v24 = *(_OWORD *)(a2 + 208);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(_OWORD *)(a1 + 224) = v23;
      *(_OWORD *)(a1 + 240) = v22;
      *(_OWORD *)(a1 + 208) = v24;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 128);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 128) = v25;
    long long v26 = *(_OWORD *)(a2 + 144);
    long long v27 = *(_OWORD *)(a2 + 160);
    long long v28 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v28;
    *(_OWORD *)(a1 + 144) = v26;
    *(_OWORD *)(a1 + 160) = v27;
    long long v29 = *(_OWORD *)(a2 + 208);
    long long v30 = *(_OWORD *)(a2 + 224);
    long long v31 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v30;
    *(_OWORD *)(a1 + 240) = v31;
    *(_OWORD *)(a1 + 208) = v29;
  }
  uint64_t v32 = *(int *)(a3 + 28);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = *(int *)(a3 + 32);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t assignWithTake for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_51BEC(a1 + 48);
  }
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  long long v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
LABEL_6:
  if (!*(void *)(a1 + 120))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    long long v23 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v23;
    long long v24 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v24;
    long long v25 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v25;
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)(a2 + 120);
  if (!v13)
  {
    sub_23648(a1 + 112);
    goto LABEL_10;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v21;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C2254);
}

uint64_t sub_1C2254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 28);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 32);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SeriesExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C23A0);
}

uint64_t sub_1C23A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 40) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C24CC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesExposureEvent.Model.CodingKeys()
{
  return &type metadata for SeriesExposureEvent.Model.CodingKeys;
}

unint64_t sub_1C26BC()
{
  unint64_t result = qword_322350;
  if (!qword_322350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322350);
  }
  return result;
}

unint64_t sub_1C2714()
{
  unint64_t result = qword_322358;
  if (!qword_322358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322358);
  }
  return result;
}

unint64_t sub_1C276C()
{
  unint64_t result = qword_322360;
  if (!qword_322360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322360);
  }
  return result;
}

uint64_t sub_1C27C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144736569726573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::AutoNightThemeStatus_optional __swiftcall AutoNightThemeStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9148;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 6;
  if (v5 < 6) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t AutoNightThemeStatus.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 28271;
      break;
    case 2:
      uint64_t result = 6710895;
      break;
    case 3:
      uint64_t result = 0x746867696CLL;
      break;
    case 4:
      uint64_t result = 1802658148;
      break;
    case 5:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2B28()
{
  unint64_t result = qword_322368;
  if (!qword_322368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322368);
  }
  return result;
}

Swift::Int sub_1C2B7C()
{
  return sub_20BE10();
}

uint64_t sub_1C2B84()
{
  return sub_27BA40();
}

Swift::Int sub_1C2B8C()
{
  return sub_25D16C();
}

BookAnalytics::AutoNightThemeStatus_optional sub_1C2B94(Swift::String *a1)
{
  return AutoNightThemeStatus.init(rawValue:)(*a1);
}

void sub_1C2BA0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 28271;
      goto LABEL_3;
    case 2:
      *a1 = 6710895;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 0x746867696CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 1802658148;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000000002AD4D0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C2C60()
{
  return sub_27DED0();
}

uint64_t sub_1C2CC0()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for AutoNightThemeStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2DDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoNightThemeStatus()
{
  return &type metadata for AutoNightThemeStatus;
}

unint64_t sub_1C2E14()
{
  unint64_t result = qword_322370;
  if (!qword_322370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322370);
  }
  return result;
}

uint64_t sub_1C2E68(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322378, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchFallbackEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B00, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322378, a1);
}

uint64_t sub_1C2EC8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322390, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchFallbackEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B08, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322390, a1);
}

uint64_t SearchFallbackEvent.searchMethodData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31EDA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SearchFallbackEvent.searchMethodData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31EDA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SearchFallbackEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchFallbackEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchFallbackEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322418);
}

uint64_t SearchFallbackEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchFallbackEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchFallbackEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchFallbackEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SearchFallbackEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t SearchFallbackEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchFallbackEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchFallbackEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3224A8);
}

uint64_t SearchFallbackEvent.Model.init(searchMethodData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for SearchFallbackEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  unsigned int v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_1C3344()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1C3388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C473C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C33B0(uint64_t a1)
{
  unint64_t v2 = sub_1C35E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1C33EC(uint64_t a1)
{
  unint64_t v2 = sub_1C35E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchFallbackEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3223A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1C35E4();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_E7EA0();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for SearchFallbackEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C35E4()
{
  unint64_t result = qword_3223B0;
  if (!qword_3223B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3223B0);
  }
  return result;
}

uint64_t SearchFallbackEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_3223B8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchFallbackEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1C35E4();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    uint64_t v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_E7E48();
    uint64_t v14 = v25;
    sub_27E260();
    uint64_t v19 = v11;
    *uint64_t v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_1C3930(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1C3930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchFallbackEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3994@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchFallbackEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1C39AC(void *a1)
{
  return SearchFallbackEvent.Model.encode(to:)(a1);
}

uint64_t sub_1C39C4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B00, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322378, a1);
}

uint64_t sub_1C39FC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B08, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322390, a1);
}

uint64_t sub_1C3A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchFallbackEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31EDA8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SearchFallbackEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C3FD4);
}

uint64_t sub_1C3FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31EDA8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SearchFallbackEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C40E8);
}

uint64_t sub_1C40E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31EDA8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1C41F4()
{
  sub_1C42BC();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1C42BC()
{
  if (!qword_31EE48)
  {
    sub_E7E48();
    sub_E7EA0();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31EE48);
    }
  }
}

uint64_t getEnumTagSinglePayload for SearchFallbackEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C4338);
}

uint64_t sub_1C4338(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 248)
  {
    unsigned int v4 = *a1;
    if (v4 >= 8) {
      return v4 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchFallbackEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C43F4);
}

unsigned char *sub_1C43F4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 248)
  {
    *unint64_t result = a2 + 7;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C4498()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchFallbackEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C45FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFallbackEvent.Model.CodingKeys()
{
  return &type metadata for SearchFallbackEvent.Model.CodingKeys;
}

unint64_t sub_1C4638()
{
  unint64_t result = qword_3224E0;
  if (!qword_3224E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3224E0);
  }
  return result;
}

unint64_t sub_1C4690()
{
  unint64_t result = qword_3224E8;
  if (!qword_3224E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3224E8);
  }
  return result;
}

unint64_t sub_1C46E8()
{
  unint64_t result = qword_3224F0;
  if (!qword_3224F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3224F0);
  }
  return result;
}

uint64_t sub_1C473C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B0890 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::AccountUserAction_optional __swiftcall AccountUserAction.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F91F8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t AccountUserAction.rawValue.getter()
{
  uint64_t v1 = 0x6E49676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74754F676F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1C48E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_307D0(*a1, *a2);
}

unint64_t sub_1C48F8()
{
  unint64_t result = qword_3224F8;
  if (!qword_3224F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3224F8);
  }
  return result;
}

Swift::Int sub_1C494C()
{
  return sub_27E420();
}

uint64_t sub_1C49E8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1C4A70()
{
  return sub_27E420();
}

BookAnalytics::AccountUserAction_optional sub_1C4B08(Swift::String *a1)
{
  return AccountUserAction.init(rawValue:)(*a1);
}

void sub_1C4B14(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6E49676F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74754F676F6CLL;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C4B6C()
{
  return sub_27DED0();
}

uint64_t sub_1C4BCC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for AccountUserAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C4CE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountUserAction()
{
  return &type metadata for AccountUserAction;
}

unint64_t sub_1C4D20()
{
  unint64_t result = qword_322500;
  if (!qword_322500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322500);
  }
  return result;
}

uint64_t sub_1C4D74(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322508, &enum case for SessionGroup.default(_:));
}

uint64_t static RedownloadFailEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322508, a1);
}

uint64_t sub_1C4DD4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322520, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RedownloadFailEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322520, a1);
}

uint64_t RedownloadFailEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadFailEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3225C0);
}

uint64_t RedownloadFailEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadFailEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadFailEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadFailEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadFailEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadFailEvent.redownloadFailData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_322538);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadFailEvent.redownloadFailData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_322538);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadFailEvent.redownloadFailData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadFailEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadFailEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadFailEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadFailEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadFailEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadFailEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadFailEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RedownloadFailEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

void RedownloadFailEvent.Model.redownloadFailData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 280);
}

uint64_t RedownloadFailEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadFailEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322668);
}

uint64_t RedownloadFailEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadFailEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadFailEvent.Model.init(contentData:contentStoreData:sectionData:redownloadFailData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  long long v12 = *(_OWORD *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  __int16 v15 = *(_WORD *)(a1 + 56);
  int v16 = *(_DWORD *)(a1 + 60);
  char v17 = *(unsigned char *)(a1 + 64);
  int v18 = *(_DWORD *)(a1 + 68);
  char v19 = *(unsigned char *)(a1 + 72);
  *(void *)a7 = *(void *)a1;
  *(void *)(a7 + 8) = v10;
  *(unsigned char *)(a7 + 16) = v11;
  *(_OWORD *)(a7 + 24) = v12;
  *(void *)(a7 + 40) = v13;
  *(void *)(a7 + 48) = v14;
  *(_WORD *)(a7 + 56) = v15;
  *(_DWORD *)(a7 + 60) = v16;
  *(unsigned char *)(a7 + 64) = v17;
  *(_DWORD *)(a7 + 68) = v18;
  *(unsigned char *)(a7 + 72) = v19;
  int v20 = *(_DWORD *)(a1 + 73);
  long long v21 = *a2;
  long long v22 = a2[1];
  *(_OWORD *)(a7 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a7 + 96) = v21;
  long long v23 = a2[2];
  long long v24 = a2[3];
  *(_OWORD *)(a7 + 112) = v22;
  *(_OWORD *)(a7 + 128) = v23;
  *(_OWORD *)(a7 + 144) = v24;
  long long v25 = a3[1];
  *(_OWORD *)(a7 + 168) = *a3;
  *(_OWORD *)(a7 + 184) = v25;
  long long v26 = a3[3];
  *(_OWORD *)(a7 + 200) = a3[2];
  *(_OWORD *)(a7 + 216) = v26;
  long long v27 = a3[5];
  *(_OWORD *)(a7 + 232) = a3[4];
  char v28 = *(unsigned char *)(a1 + 77);
  LODWORD(v13) = *((_DWORD *)a2 + 16);
  LOBYTE(v14) = *((unsigned char *)a2 + 68);
  LOBYTE(v15) = *a4;
  *(_DWORD *)(a7 + 73) = v20;
  *(unsigned char *)(a7 + 77) = v28;
  *(unsigned char *)(a7 + 164) = v14;
  *(_DWORD *)(a7 + 160) = v13;
  *(_OWORD *)(a7 + 248) = v27;
  *(_OWORD *)(a7 + 264) = a3[6];
  *(unsigned char *)(a7 + 280) = v15;
  uint64_t v29 = type metadata accessor for RedownloadFailEvent.Model(0);
  uint64_t v30 = a7 + *(int *)(v29 + 32);
  uint64_t v31 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, a5, v31);
  uint64_t v32 = a7 + *(int *)(v29 + 36);
  uint64_t v33 = sub_27D7F0();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);

  return v34(v32, a6, v33);
}

uint64_t sub_1C5948(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      uint64_t result = 0xD000000000000012;
      break;
    case 4:
      uint64_t v3 = 0x44746E657665;
      goto LABEL_7;
    case 5:
      uint64_t v3 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C5A20()
{
  return sub_1C5948(*v0);
}

uint64_t sub_1C5A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C92CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C5A50(uint64_t a1)
{
  unint64_t v2 = sub_1C5E60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1C5A8C(uint64_t a1)
{
  unint64_t v2 = sub_1C5E60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RedownloadFailEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_322540);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_1C5E60();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)uint64_t v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    LOBYTE(v32) = *(unsigned char *)(v4 + 280);
    char v38 = 3;
    sub_1C5EB4();
    sub_27E330();
    type metadata accessor for RedownloadFailEvent.Model(0);
    LOBYTE(v32) = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v32) = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C5E60()
{
  unint64_t result = qword_322548;
  if (!qword_322548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322548);
  }
  return result;
}

unint64_t sub_1C5EB4()
{
  unint64_t result = qword_322550;
  if (!qword_322550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322550);
  }
  return result;
}

uint64_t RedownloadFailEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v55 = sub_27D7F0();
  uint64_t v51 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_4E04(&qword_322558);
  uint64_t v53 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RedownloadFailEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v58 = a1;
  sub_5900(a1, v13);
  sub_1C5E60();
  char v57 = v9;
  uint64_t v14 = v59;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v58);
  }
  uint64_t v49 = v7;
  int v48 = v4;
  uint64_t v15 = v53;
  uint64_t v16 = v55;
  uint64_t v50 = v10;
  uint64_t v17 = v54;
  uint64_t v59 = v5;
  char v66 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v60 + 1);
  char v19 = v61[0];
  long long v20 = *(_OWORD *)&v61[8];
  uint64_t v21 = *(void *)&v61[24];
  uint64_t v22 = v62;
  __int16 v23 = WORD4(v62);
  int v24 = HIDWORD(v62);
  char v25 = v63;
  int v26 = DWORD1(v63);
  char v27 = BYTE8(v63);
  char v28 = BYTE13(v63);
  uint64_t v29 = (uint64_t)v12;
  *(void *)long long v12 = v60;
  *((void *)v12 + 1) = v18;
  unsigned char v12[16] = v19;
  *(_OWORD *)(v12 + 24) = v20;
  *((void *)v12 + 5) = v21;
  *((void *)v12 + 6) = v22;
  *((_WORD *)v12 + 28) = v23;
  *((_DWORD *)v12 + 15) = v24;
  v12[64] = v25;
  *((_DWORD *)v12 + 17) = v26;
  v12[72] = v27;
  *(_DWORD *)(v12 + 73) = *(_DWORD *)((char *)&v63 + 9);
  v12[77] = v28;
  *((_OWORD *)v12 + 5) = v64;
  char v66 = 1;
  sub_6D068();
  sub_27E1F0();
  int v30 = v63;
  char v31 = BYTE4(v63);
  long long v32 = *(_OWORD *)v61;
  *((_OWORD *)v12 + 6) = v60;
  *((_OWORD *)v12 + 7) = v32;
  long long v33 = v62;
  *((_OWORD *)v12 + 8) = *(_OWORD *)&v61[16];
  *((_OWORD *)v12 + 9) = v33;
  v12[164] = v31;
  *((_DWORD *)v12 + 40) = v30;
  char v66 = 2;
  sub_20898();
  v47[1] = 0;
  sub_27E1F0();
  uint64_t v34 = v17;
  uint64_t v35 = v15;
  long long v36 = *(_OWORD *)v61;
  *(_OWORD *)(v29 + 168) = v60;
  long long v37 = *(_OWORD *)&v61[16];
  long long v38 = v62;
  *(_OWORD *)(v29 + 184) = v36;
  *(_OWORD *)(v29 + 200) = v37;
  long long v39 = v63;
  long long v40 = v64;
  *(_OWORD *)(v29 + 216) = v38;
  *(_OWORD *)(v29 + 232) = v39;
  long long v41 = v65;
  *(_OWORD *)(v29 + 248) = v40;
  *(_OWORD *)(v29 + 264) = v41;
  char v66 = 3;
  sub_1C6640();
  sub_27E260();
  *(unsigned char *)(v29 + 280) = v60;
  LOBYTE(v60) = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v42 = v49;
  uint64_t v43 = v59;
  sub_27E260();
  uint64_t v44 = v50;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v29 + *(int *)(v50 + 32), v42, v43);
  LOBYTE(v60) = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  int v45 = v48;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v57, v56);
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v29 + *(int *)(v44 + 36), v45, v16);
  sub_1C6694(v29, v52);
  sub_5E94((uint64_t)v58);
  return sub_1C66F8(v29);
}

unint64_t sub_1C6640()
{
  unint64_t result = qword_322560;
  if (!qword_322560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322560);
  }
  return result;
}

uint64_t sub_1C6694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedownloadFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C66F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedownloadFailEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C6754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RedownloadFailEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1C676C(void *a1)
{
  return RedownloadFailEvent.Model.encode(to:)(a1);
}

uint64_t sub_1C6784@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322508, a1);
}

uint64_t sub_1C67BC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322520, a1);
}

uint64_t sub_1C67F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for RedownloadFailEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_322538);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    int v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for RedownloadFailEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for RedownloadFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for RedownloadFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for RedownloadFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for RedownloadFailEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_322538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for RedownloadFailEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C75F8);
}

uint64_t sub_1C75F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_322538);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for RedownloadFailEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C7854);
}

uint64_t sub_1C7854(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_322538);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_1C7AA8()
{
  sub_1C7D40(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1C7D40(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_1C7D40(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
      if (v2 <= 0x3F)
      {
        sub_1C7D40(319, (unint64_t *)&unk_3225D0, (void (*)(void))sub_1C6640, (void (*)(void))sub_1C5EB4);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_1C7D40(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RedownloadFailEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      uint64_t v14 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      uint64_t v15 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v15;
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2[23];
      if (v16)
      {
LABEL_4:
        *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
        *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v16;
        uint64_t v17 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v17;
        uint64_t v18 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v18;
        uint64_t v19 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v19;
        uint64_t v20 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v20;
        *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
        *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
        uint64_t v21 = a2[34];
        *(void *)(a1 + 264) = a2[33];
        *(void *)(a1 + 272) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
        uint64_t v28 = *(int *)(a3 + 32);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = *(int *)(a3 + 36);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = (uint64_t)a2 + v32;
        uint64_t v35 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        return a1;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v23;
      *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      uint64_t v16 = a2[23];
      if (v16) {
        goto LABEL_4;
      }
    }
    long long v25 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v25;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    long long v26 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v26;
    long long v27 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v27;
    goto LABEL_8;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v11)
  {
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    uint64_t v15 = *(void *)(a2 + 184);
    if (v15) {
      goto LABEL_3;
    }
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v23;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v24 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v24;
    long long v25 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v25;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = *(void *)(a2 + 184);
  if (!v15) {
    goto LABEL_5;
  }
LABEL_3:
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  uint64_t v26 = *(int *)(a3 + 32);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 36);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 96);
  int v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v11;
    }
    else
    {
      sub_70AE0(a1 + 96);
      *uint64_t v8 = *v9;
      long long v14 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v14;
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 112) = v15;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v12 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v8 = *v9;
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 168);
  uint64_t v20 = (_OWORD *)(a2 + 168);
  uint64_t v21 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v21)
    {
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v22;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235A0(a1 + 168);
      long long v25 = *(_OWORD *)(a2 + 184);
      long long v24 = *(_OWORD *)(a2 + 200);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v24;
      long long v26 = *(_OWORD *)(a2 + 264);
      long long v28 = *(_OWORD *)(a2 + 216);
      long long v27 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 216) = v28;
      *(_OWORD *)(a1 + 232) = v27;
    }
  }
  else if (v21)
  {
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    int v23 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v23;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v20;
    long long v30 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v30;
    *uint64_t v19 = v29;
    long long v31 = *(_OWORD *)(a2 + 216);
    long long v32 = *(_OWORD *)(a2 + 232);
    long long v33 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v33;
    *(_OWORD *)(a1 + 216) = v31;
    *(_OWORD *)(a1 + 232) = v32;
  }
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  uint64_t v34 = *(int *)(a3 + 32);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = *(int *)(a3 + 36);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

uint64_t initializeWithTake for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + 200) = v11;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    if (*(void *)(a2 + 136))
    {
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_6;
    }
    sub_70AE0(a1 + 96);
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
LABEL_6:
  if (!*(void *)(a1 + 184))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v22;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v23 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v23;
    long long v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 184);
  if (!v16)
  {
    sub_235A0(a1 + 168);
    goto LABEL_10;
  }
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
LABEL_11:
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  uint64_t v25 = *(int *)(a3 + 32);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = *(int *)(a3 + 36);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C8D64);
}

uint64_t sub_1C8D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for RedownloadFailEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C8EA4);
}

uint64_t sub_1C8EA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C8FD0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RedownloadFailEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C918CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadFailEvent.Model.CodingKeys()
{
  return &type metadata for RedownloadFailEvent.Model.CodingKeys;
}

unint64_t sub_1C91C8()
{
  unint64_t result = qword_3226B0;
  if (!qword_3226B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226B0);
  }
  return result;
}

unint64_t sub_1C9220()
{
  unint64_t result = qword_3226B8;
  if (!qword_3226B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226B8);
  }
  return result;
}

unint64_t sub_1C9278()
{
  unint64_t result = qword_3226C0;
  if (!qword_3226C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226C0);
  }
  return result;
}

uint64_t sub_1C92CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B16D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void __swiftcall LibraryItemTypeData.init(contentPrivateID:contentUserID:contentType:contentID:isSample:)(BookAnalytics::LibraryItemTypeData *__return_ptr retstr, Swift::String contentPrivateID, Swift::String contentUserID, BookAnalytics::ContentType contentType, Swift::String contentID, Swift::Bool isSample)
{
  BookAnalytics::ContentType v6 = *(unsigned char *)contentType;
  retstr->contentPrivateID = contentPrivateID;
  retstr->contentUserID = contentUserID;
  retstr->contentType = v6;
  retstr->contentID = contentID;
  retstr->isSample = isSample;
}

uint64_t LibraryItemTypeData.isSample.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t LibraryItemTypeData.isSample.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

unint64_t sub_1C95A8()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x55746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x54746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 4:
      unint64_t result = 0x656C706D61537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C9670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1CA2C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9698(uint64_t a1)
{
  unint64_t v2 = sub_1C9E38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1C96D4(uint64_t a1)
{
  unint64_t v2 = sub_1C9E38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryItemTypeData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3226C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v21 = v8;
  int v19 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v17 = *(void *)(v1 + 48);
  uint64_t v18 = v9;
  v16[1] = *(unsigned __int8 *)(v1 + 56);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  sub_5900(v11, v10);
  sub_1C9E38();
  sub_27E440();
  char v27 = 0;
  sub_27E2F0();
  if (!v2)
  {
    char v14 = v19;
    char v26 = 1;
    sub_27E2F0();
    char v25 = v14;
    char v24 = 2;
    sub_101E4();
    sub_27E330();
    char v23 = 3;
    sub_27E2F0();
    char v22 = 4;
    sub_27E300();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t LibraryItemTypeData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3226D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1C9E38();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v34 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v27 = v9;
  char v33 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v28 = v13;
  uint64_t v25 = v12;
  char v31 = 2;
  sub_10238();
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  sub_27E260();
  int v14 = v32;
  char v30 = 3;
  uint64_t v22 = sub_27E220();
  int v23 = v14;
  char v29 = 4;
  uint64_t v24 = v16;
  swift_bridgeObjectRetain();
  char v17 = sub_27E230();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v18 = v17 & 1;
  uint64_t v19 = v28;
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v11;
  uint64_t v20 = v24;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v20;
  *(unsigned char *)(a2 + 56) = v18;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9CDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryItemTypeData.init(from:)(a1, a2);
}

uint64_t sub_1C9CF4(void *a1)
{
  return LibraryItemTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics19LibraryItemTypeDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v16 = *(unsigned __int8 *)(a2 + 56);
  int v17 = *(unsigned __int8 *)(a1 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_27E370(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (char v14 = sub_27E370(), result = 0, (v14 & 1) != 0))
    {
      if (sub_2DAE4(v4, v9))
      {
        if (v5 == v10 && v6 == v11) {
          return v17 ^ v16 ^ 1u;
        }
        char v15 = sub_27E370();
        uint64_t result = 0;
        if (v15) {
          return v17 ^ v16 ^ 1u;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1C9E38()
{
  unint64_t result = qword_3226D0;
  if (!qword_3226D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226D0);
  }
  return result;
}

unint64_t sub_1C9E90()
{
  unint64_t result = qword_3226E0;
  if (!qword_3226E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226E0);
  }
  return result;
}

unint64_t sub_1C9EE8()
{
  unint64_t result = qword_3226E8;
  if (!qword_3226E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226E8);
  }
  return result;
}

uint64_t initializeWithCopy for LibraryItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryItemTypeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for LibraryItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for LibraryItemTypeData()
{
  return &type metadata for LibraryItemTypeData;
}

unsigned char *storeEnumTagSinglePayload for LibraryItemTypeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryItemTypeData.CodingKeys()
{
  return &type metadata for LibraryItemTypeData.CodingKeys;
}

unint64_t sub_1CA1C4()
{
  unint64_t result = qword_3226F0;
  if (!qword_3226F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226F0);
  }
  return result;
}

unint64_t sub_1CA21C()
{
  unint64_t result = qword_3226F8;
  if (!qword_3226F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3226F8);
  }
  return result;
}

unint64_t sub_1CA274()
{
  unint64_t result = qword_322700;
  if (!qword_322700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322700);
  }
  return result;
}

uint64_t sub_1CA2C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C706D61537369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1CA52C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322708, &enum case for SessionGroup.default(_:));
}

uint64_t static SeriesFilterEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B20, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322708, a1);
}

uint64_t sub_1CA58C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322720, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SeriesFilterEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B28, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322720, a1);
}

uint64_t SeriesFilterEvent.formatFilterData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesFilterEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_322738);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesFilterEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3227B0);
}

uint64_t SeriesFilterEvent.formatFilterData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesFilterEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_322738);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesFilterEvent.formatFilterData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesFilterEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesFilterEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesFilterEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesFilterEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesFilterEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesFilterEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SeriesFilterEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

void SeriesFilterEvent.Model.formatFilterData.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 48);
}

uint64_t SeriesFilterEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesFilterEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesFilterEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322850);
}

uint64_t SeriesFilterEvent.Model.init(seriesData:formatFilterData:eventData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  __int16 v7 = *(_WORD *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 26);
  __int16 v9 = *a2;
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v6;
  *(_WORD *)(a4 + 24) = v7;
  *(unsigned char *)(a4 + 26) = v8;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_WORD *)(a4 + 48) = v9;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for SeriesFilterEvent.Model(0) + 24);
  uint64_t v11 = sub_27D7C0();
  char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_1CAB00()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144736569726573;
  }
}

uint64_t sub_1CAB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1CC8B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CAB90(uint64_t a1)
{
  unint64_t v2 = sub_1CAE2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CABCC(uint64_t a1)
{
  unint64_t v2 = sub_1CAE2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesFilterEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_322740);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CAE2C();
  sub_27E440();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v10 = v3[2];
  __int16 v11 = *((_WORD *)v3 + 12);
  char v12 = *((unsigned char *)v3 + 26);
  uint64_t v16 = *v3;
  char v17 = v9;
  uint64_t v18 = v10;
  __int16 v19 = v11;
  char v20 = v12;
  long long v21 = *((_OWORD *)v3 + 2);
  char v15 = 0;
  sub_11514();
  sub_27E330();
  if (!v2)
  {
    LOWORD(v16) = *((_WORD *)v3 + 24);
    char v15 = 1;
    sub_132128();
    sub_27E330();
    type metadata accessor for SeriesFilterEvent.Model(0);
    LOBYTE(v16) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1CAE2C()
{
  unint64_t result = qword_322748;
  if (!qword_322748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322748);
  }
  return result;
}

uint64_t SeriesFilterEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_322750);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SeriesFilterEvent.Model(0);
  __chkstk_darwin(v9);
  __int16 v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CAE2C();
  uint64_t v26 = v8;
  char v12 = v27;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v13 = v24;
  uint64_t v27 = v5;
  char v34 = 0;
  sub_11A3C();
  uint64_t v14 = v25;
  sub_27E260();
  char v15 = v29;
  uint64_t v16 = v30;
  __int16 v17 = v31;
  char v18 = v32;
  *(void *)__int16 v11 = v28;
  v11[8] = v15;
  *((void *)v11 + 2) = v16;
  *((_WORD *)v11 + 12) = v17;
  v11[26] = v18;
  *((_OWORD *)v11 + 2) = v33;
  char v34 = 1;
  sub_1320D0();
  sub_27E260();
  *((_WORD *)v11 + 24) = v28;
  LOBYTE(v28) = 2;
  sub_1AB30(&qword_315E28);
  __int16 v19 = v26;
  char v20 = v27;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v14);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v11[*(int *)(v9 + 24)], v20, v3);
  sub_1CB20C((uint64_t)v11, v23);
  sub_5E94((uint64_t)a1);
  return sub_1CB270((uint64_t)v11);
}

uint64_t sub_1CB20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesFilterEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesFilterEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB2CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesFilterEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1CB2E4(void *a1)
{
  return SeriesFilterEvent.Model.encode(to:)(a1);
}

uint64_t sub_1CB2FC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B20, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322708, a1);
}

uint64_t sub_1CB334@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B28, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322720, a1);
}

uint64_t sub_1CB36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesFilterEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316320);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_322738);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SeriesFilterEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_322738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CBB44);
}

uint64_t sub_1CBB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316320);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_322738);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SeriesFilterEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CBCB0);
}

uint64_t sub_1CBCB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316320);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_322738);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1CBE14()
{
  sub_1CBF88(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
  if (v0 <= 0x3F)
  {
    sub_1CBF88(319, (unint64_t *)&unk_3227C0, (void (*)(void))sub_1320D0, (void (*)(void))sub_132128);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1CBF88(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SeriesFilterEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v5 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (uint64_t)a2 + v6;
    uint64_t v8 = a1 + v6;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v8, v7, v9);
  }
  return v3;
}

uint64_t destroy for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v7, v6, v8);
  return a1;
}

uint64_t assignWithCopy for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CC494);
}

uint64_t sub_1CC494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SeriesFilterEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CC564);
}

uint64_t sub_1CC564(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 40) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1CC60C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesFilterEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CC778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesFilterEvent.Model.CodingKeys()
{
  return &type metadata for SeriesFilterEvent.Model.CodingKeys;
}

unint64_t sub_1CC7B4()
{
  unint64_t result = qword_322890;
  if (!qword_322890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322890);
  }
  return result;
}

unint64_t sub_1CC80C()
{
  unint64_t result = qword_322898;
  if (!qword_322898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322898);
  }
  return result;
}

unint64_t sub_1CC864()
{
  unint64_t result = qword_3228A0;
  if (!qword_3228A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3228A0);
  }
  return result;
}

uint64_t sub_1CC8B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144736569726573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B16F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t dispatch thunk of LibraryAnalyticsDataProviding.seriesType(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1CCA34(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3228A8, &enum case for SessionGroup.default(_:));
}

uint64_t static FilterBarEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B30, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3228A8, a1);
}

uint64_t sub_1CCA94(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3228C0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static FilterBarEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B38, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3228C0, a1);
}

uint64_t sub_1CCAF4(uint64_t a1)
{
  unint64_t v2 = sub_1CCCCC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CCB30(uint64_t a1)
{
  unint64_t v2 = sub_1CCCCC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FilterBarEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_3228D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CCCCC();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1CCCCC()
{
  unint64_t result = qword_3228E0;
  if (!qword_3228E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3228E0);
  }
  return result;
}

uint64_t FilterBarEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_3228E8);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FilterBarEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CCCCC();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1CCFAC((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for FilterBarEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3229D8);
}

uint64_t sub_1CCFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterBarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CD010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterBarEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1CD028@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B30, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3228A8, a1);
}

uint64_t sub_1CD060@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B38, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3228C0, a1);
}

uint64_t getEnumTagSinglePayload for FilterBarEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CD0AC);
}

uint64_t sub_1CD0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FilterBarEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CD130);
}

uint64_t sub_1CD130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FilterBarEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322948);
}

uint64_t getEnumTagSinglePayload for FilterBarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CD1D8);
}

uint64_t sub_1CD1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FilterBarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CD258);
}

uint64_t sub_1CD258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for FilterBarEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1CD364);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterBarEvent.Model.CodingKeys()
{
  return &type metadata for FilterBarEvent.Model.CodingKeys;
}

unint64_t sub_1CD3A0()
{
  unint64_t result = qword_322A10;
  if (!qword_322A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322A10);
  }
  return result;
}

unint64_t sub_1CD3F8()
{
  unint64_t result = qword_322A18;
  if (!qword_322A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322A18);
  }
  return result;
}

unint64_t sub_1CD450()
{
  unint64_t result = qword_322A20;
  if (!qword_322A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322A20);
  }
  return result;
}

uint64_t sub_1CD4A4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322A28, &enum case for SessionGroup.default(_:));
}

uint64_t static UPPContentBrickExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B40, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322A28, a1);
}

uint64_t sub_1CD504(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322A40, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static UPPContentBrickExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B48, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322A40, a1);
}

uint64_t UPPContentBrickExposureEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UPPContentBrickExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322AC8);
}

uint64_t UPPContentBrickExposureEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UPPContentBrickExposureEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UPPContentBrickExposureEvent.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UPPContentBrickExposureEvent.genreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UPPContentBrickExposureEvent.genreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UPPContentBrickExposureEvent.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UPPContentBrickExposureEvent.uppParentContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UPPContentBrickExposureEvent.uppParentContentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UPPContentBrickExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UPPContentBrickExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UPPContentBrickExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UPPContentBrickExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UPPContentBrickExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UPPContentBrickExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UPPContentBrickExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for UPPContentBrickExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t UPPContentBrickExposureEvent.Model.genreData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[18];
  uint64_t v3 = v1[19];
  uint64_t v4 = v1[20];
  uint64_t v5 = v1[21];
  uint64_t v6 = v1[22];
  uint64_t v7 = v1[23];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_B0AC8(v2, v3);
}

uint64_t UPPContentBrickExposureEvent.Model.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 216);
  uint64_t v5 = *(void *)(v1 + 224);
  uint64_t v6 = *(void *)(v1 + 232);
  char v7 = *(unsigned char *)(v1 + 240);
  *(void *)a1 = *(void *)(v1 + 192);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t UPPContentBrickExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UPPContentBrickExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322B68);
}

uint64_t UPPContentBrickExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UPPContentBrickExposureEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UPPContentBrickExposureEvent.Model.init(contentData:seriesData:genreData:uppParentContentData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  long long v12 = *(_OWORD *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  __int16 v15 = *(_WORD *)(a1 + 56);
  int v16 = *(_DWORD *)(a1 + 60);
  char v17 = *(unsigned char *)(a1 + 64);
  int v18 = *(_DWORD *)(a1 + 68);
  char v19 = *(unsigned char *)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 77);
  long long v21 = *a4;
  long long v22 = a4[1];
  uint64_t v23 = *((void *)a4 + 4);
  uint64_t v24 = *((void *)a4 + 5);
  char v25 = *((unsigned char *)a4 + 48);
  *(void *)a7 = *(void *)a1;
  *(void *)(a7 + 8) = v10;
  *(unsigned char *)(a7 + 16) = v11;
  *(_OWORD *)(a7 + 24) = v12;
  *(void *)(a7 + 40) = v13;
  *(void *)(a7 + 48) = v14;
  *(_WORD *)(a7 + 56) = v15;
  *(_DWORD *)(a7 + 60) = v16;
  *(unsigned char *)(a7 + 64) = v17;
  *(_DWORD *)(a7 + 68) = v18;
  *(unsigned char *)(a7 + 72) = v19;
  *(_DWORD *)(a7 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a7 + 77) = v20;
  long long v26 = *a2;
  long long v27 = a2[1];
  *(_OWORD *)(a7 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a7 + 96) = v26;
  long long v28 = a2[2];
  *(_OWORD *)(a7 + 112) = v27;
  *(_OWORD *)(a7 + 128) = v28;
  long long v29 = a3[1];
  *(_OWORD *)(a7 + 144) = *a3;
  *(_OWORD *)(a7 + 160) = v29;
  *(_OWORD *)(a7 + 176) = a3[2];
  *(_OWORD *)(a7 + 192) = v21;
  *(_OWORD *)(a7 + 208) = v22;
  *(void *)(a7 + 224) = v23;
  *(void *)(a7 + 232) = v24;
  *(unsigned char *)(a7 + 240) = v25;
  uint64_t v30 = type metadata accessor for UPPContentBrickExposureEvent.Model(0);
  uint64_t v31 = a7 + *(int *)(v30 + 32);
  uint64_t v32 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v31, a5, v32);
  uint64_t v33 = a7 + *(int *)(v30 + 36);
  uint64_t v34 = sub_27D7F0();
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32);

  return v35(v33, a6, v34);
}

uint64_t sub_1CE0C8()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      return 0x6144736569726573;
    case 2:
      uint64_t v2 = 0x4465726E6567;
      goto LABEL_7;
    case 3:
      return 0xD000000000000014;
    case 4:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CE194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D1738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CE1BC(uint64_t a1)
{
  unint64_t v2 = sub_1CE5B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CE1F8(uint64_t a1)
{
  unint64_t v2 = sub_1CE5B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UPPContentBrickExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_322A58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CE5B8();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v30 = *(void *)v4;
  *((void *)&v30 + 1) = v10;
  v31[0] = v11;
  *(_OWORD *)&v31[8] = v12;
  *(void *)&v31[24] = v13;
  uint64_t v32 = v14;
  __int16 v33 = v15;
  int v34 = v16;
  char v35 = v17;
  int v36 = v18;
  char v37 = v19;
  int v38 = *(_DWORD *)(v4 + 73);
  char v39 = v20;
  long long v40 = *(_OWORD *)(v4 + 80);
  char v29 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    long long v21 = *(_OWORD *)(v4 + 112);
    long long v30 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v31 = v21;
    *(_OWORD *)&v31[16] = *(_OWORD *)(v4 + 128);
    char v29 = 1;
    sub_11514();
    sub_27E2C0();
    long long v22 = *(_OWORD *)(v4 + 160);
    long long v30 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)uint64_t v31 = v22;
    *(_OWORD *)&v31[16] = *(_OWORD *)(v4 + 176);
    char v29 = 2;
    sub_B12C4();
    sub_27E2C0();
    long long v23 = *(_OWORD *)(v4 + 208);
    uint64_t v24 = *(void *)(v4 + 224);
    uint64_t v25 = *(void *)(v4 + 232);
    char v26 = *(unsigned char *)(v4 + 240);
    long long v30 = *(_OWORD *)(v4 + 192);
    *(_OWORD *)uint64_t v31 = v23;
    *(void *)&v31[16] = v24;
    *(void *)&v31[24] = v25;
    LOBYTE(v32) = v26;
    char v29 = 3;
    sub_6C4FC();
    sub_27E330();
    type metadata accessor for UPPContentBrickExposureEvent.Model(0);
    LOBYTE(v30) = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v30) = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1CE5B8()
{
  unint64_t result = qword_322A60;
  if (!qword_322A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322A60);
  }
  return result;
}

uint64_t UPPContentBrickExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v43 = sub_27D7F0();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v44 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v45 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_322A68);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UPPContentBrickExposureEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1CE5B8();
  int v48 = v9;
  uint64_t v13 = v49;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v14 = v6;
  uint64_t v15 = v46;
  uint64_t v40 = v10;
  uint64_t v49 = v4;
  char v61 = 0;
  sub_1A98C();
  uint64_t v16 = v47;
  sub_27E260();
  uint64_t v17 = *((void *)&v50 + 1);
  char v18 = v51[0];
  long long v19 = *(_OWORD *)&v51[8];
  uint64_t v20 = *(void *)&v51[24];
  uint64_t v21 = v52;
  __int16 v22 = v53;
  int v23 = v54;
  char v24 = v55;
  int v25 = v56;
  char v26 = v57;
  char v27 = v59;
  uint64_t v28 = (uint64_t)v12;
  *(void *)long long v12 = v50;
  *((void *)v12 + 1) = v17;
  unsigned char v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v58;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v60;
  char v61 = 1;
  sub_11A3C();
  sub_27E1F0();
  long long v29 = *(_OWORD *)v51;
  *((_OWORD *)v12 + 6) = v50;
  *((_OWORD *)v12 + 7) = v29;
  *((_OWORD *)v12 + 8) = *(_OWORD *)&v51[16];
  char v61 = 2;
  sub_B1A64();
  v39[1] = 0;
  sub_27E1F0();
  long long v30 = *(_OWORD *)v51;
  *((_OWORD *)v12 + 9) = v50;
  *((_OWORD *)v12 + 10) = v30;
  *((_OWORD *)v12 + 11) = *(_OWORD *)&v51[16];
  char v61 = 3;
  sub_6D164();
  sub_27E260();
  long long v31 = *(_OWORD *)v51;
  long long v32 = *(_OWORD *)&v51[16];
  char v33 = v52;
  *((_OWORD *)v12 + 12) = v50;
  *((_OWORD *)v12 + 13) = v31;
  *((_OWORD *)v12 + 14) = v32;
  v12[240] = v33;
  LOBYTE(v50) = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v34 = v49;
  sub_27E260();
  uint64_t v35 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v28 + *(int *)(v40 + 32), v14, v34);
  LOBYTE(v50) = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v36 = v43;
  char v37 = v44;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v48, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v28 + *(int *)(v35 + 36), v37, v36);
  sub_1CED20(v28, v42);
  sub_5E94((uint64_t)a1);
  return sub_1CED84(v28);
}

uint64_t sub_1CED20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UPPContentBrickExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CED84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UPPContentBrickExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CEDE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UPPContentBrickExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1CEDF8(void *a1)
{
  return UPPContentBrickExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1CEE10@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B40, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322A28, a1);
}

uint64_t sub_1CEE48@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B48, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322A40, a1);
}

uint64_t sub_1CEE80@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for UPPContentBrickExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31A210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_3184F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for UPPContentBrickExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1CFC84);
}

uint64_t sub_1CFC84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for UPPContentBrickExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1CFEE0);
}

uint64_t sub_1CFEE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_1D0134()
{
  sub_1D03CC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1D03CC(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
    if (v1 <= 0x3F)
    {
      sub_1D03CC(319, (unint64_t *)&unk_31A2F0, (void (*)(void))sub_B1A64, (void (*)(void))sub_B12C4);
      if (v2 <= 0x3F)
      {
        sub_1D03CC(319, (unint64_t *)&unk_3185F0, (void (*)(void))sub_6D164, (void (*)(void))sub_6C4FC);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_1D03CC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v13;
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      uint64_t v14 = a2[19];
      if (v14)
      {
LABEL_4:
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v14;
        uint64_t v15 = a2[21];
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v15;
        uint64_t v16 = a2[23];
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v19 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v19;
        uint64_t v20 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v20;
        uint64_t v21 = a2[28];
        uint64_t v22 = a2[29];
        *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
        uint64_t v23 = *(int *)(a3 + 32);
        uint64_t v32 = a1 + v23;
        uint64_t v24 = (uint64_t)a2 + v23;
        *(void *)(a1 + 224) = v21;
        *(void *)(a1 + 232) = v22;
        uint64_t v25 = sub_27D7C0();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v32, v24, v25);
        uint64_t v27 = *(int *)(a3 + 36);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = (uint64_t)a2 + v27;
        uint64_t v30 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        return a1;
      }
    }
    else
    {
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      *(void *)(a1 + 112) = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)((char *)a2 + 121);
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRetain();
      uint64_t v14 = a2[19];
      if (v14) {
        goto LABEL_4;
      }
    }
    long long v18 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    goto LABEL_8;
  }
  uint64_t v17 = *a2;
  *(void *)a1 = *a2;
  a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != 1)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = *(void *)(a2 + 152);
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_6;
  }
  long long v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 152);
  if (!v13) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v18;
  uint64_t v19 = *(void *)(a2 + 224);
  uint64_t v20 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v30 = a1 + v21;
  uint64_t v22 = a2 + v21;
  *(void *)(a1 + 224) = v19;
  *(void *)(a1 + 232) = v20;
  uint64_t v23 = sub_27D7C0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v30, v22, v23);
  uint64_t v25 = *(int *)(a3 + 36);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

uint64_t assignWithCopy for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (long long *)(a1 + 96);
  int v9 = (long long *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v12;
      *uint64_t v8 = v11;
    }
    else
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
      *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1CDD8(a1 + 96);
    long long v14 = *(_OWORD *)(a2 + 112);
    long long v13 = *(_OWORD *)(a2 + 128);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 112) = v14;
    *(_OWORD *)(a1 + 128) = v13;
  }
  else
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
    *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = (_OWORD *)(a1 + 144);
  long long v16 = (_OWORD *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v17)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B3FFC(a1 + 144);
      long long v19 = *(_OWORD *)(a2 + 160);
      long long v18 = *(_OWORD *)(a2 + 176);
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 160) = v19;
      *(_OWORD *)(a1 + 176) = v18;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *v16;
    long long v21 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v21;
    *uint64_t v15 = v20;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v22 = *(int *)(a3 + 32);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 36);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

uint64_t initializeWithTake for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  long long v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  long long v12 = *(_OWORD *)(a2 + 224);
  long long v13 = *(_OWORD *)(a2 + 192);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v12;
  *(_OWORD *)(a1 + 192) = v13;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 136);
  if (v10 == 1)
  {
    sub_1CDD8(a1 + 96);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_6;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  if (!*(void *)(a1 + 152))
  {
LABEL_10:
    long long v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(a2 + 152);
  if (!v12)
  {
    sub_B3FFC(a1 + 144);
    goto LABEL_10;
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v19 = *(int *)(a3 + 32);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 36);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D11D0);
}

uint64_t sub_1D11D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for UPPContentBrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D1310);
}

uint64_t sub_1D1310(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1D143C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UPPContentBrickExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D15F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UPPContentBrickExposureEvent.Model.CodingKeys()
{
  return &type metadata for UPPContentBrickExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D1634()
{
  unint64_t result = qword_322BB0;
  if (!qword_322BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322BB0);
  }
  return result;
}

unint64_t sub_1D168C()
{
  unint64_t result = qword_322BB8;
  if (!qword_322BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322BB8);
  }
  return result;
}