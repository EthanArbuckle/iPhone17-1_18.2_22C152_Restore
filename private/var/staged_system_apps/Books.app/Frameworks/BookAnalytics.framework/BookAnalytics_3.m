unint64_t sub_1D16E4()
{
  unint64_t result;

  result = qword_322BC0;
  if (!qword_322BC0)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322BC0);
  }
  return result;
}

uint64_t sub_1D1738(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614465726E6567 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE500 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D19F4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322BC8, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingSettingsContextualViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B50, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322BC8, a1);
}

uint64_t sub_1D1A54(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322BE0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingSettingsContextualViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B58, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322BE0, a1);
}

uint64_t ReadingSettingsContextualViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingSettingsContextualViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingSettingsContextualViewEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322C68);
}

uint64_t ReadingSettingsContextualViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingSettingsContextualViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingSettingsContextualViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingSettingsContextualViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ReadingSettingsContextualViewEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

uint64_t ReadingSettingsContextualViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingSettingsContextualViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingSettingsContextualViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322CF8);
}

uint64_t ReadingSettingsContextualViewEvent.Model.init(contentData:eventData:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  long long v5 = a1[3];
  a3[2] = a1[2];
  a3[3] = v5;
  long long v6 = a1[5];
  a3[4] = a1[4];
  a3[5] = v6;
  v7 = (char *)a3 + *(int *)(type metadata accessor for ReadingSettingsContextualViewEvent.Model(0) + 20);
  uint64_t v8 = sub_27D7C0();
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_1D1E14()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_1D1E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D39D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D1E84(uint64_t a1)
{
  unint64_t v2 = sub_1D20C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D1EC0(uint64_t a1)
{
  unint64_t v2 = sub_1D20C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingSettingsContextualViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_322BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1D20C8();
  sub_27E440();
  long long v9 = v3[1];
  long long v14 = *v3;
  long long v15 = v9;
  long long v10 = v3[3];
  long long v16 = v3[2];
  long long v17 = v10;
  long long v11 = v3[5];
  long long v18 = v3[4];
  long long v19 = v11;
  v13[15] = 0;
  sub_1A1D4();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for ReadingSettingsContextualViewEvent.Model(0);
    LOBYTE(v14) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D20C8()
{
  unint64_t result = qword_322C00;
  if (!qword_322C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322C00);
  }
  return result;
}

uint64_t ReadingSettingsContextualViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v22 = sub_27D7C0();
  uint64_t v19 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_4E04(&qword_322C08);
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingSettingsContextualViewEvent.Model(0);
  __chkstk_darwin(v8);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1D20C8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v18 = v8;
  uint64_t v12 = v21;
  uint64_t v11 = v22;
  char v30 = 0;
  sub_1A98C();
  uint64_t v13 = v23;
  sub_27E1F0();
  long long v14 = v25;
  *(_OWORD *)long long v10 = v24;
  *((_OWORD *)v10 + 1) = v14;
  long long v15 = v27;
  *((_OWORD *)v10 + 2) = v26;
  *((_OWORD *)v10 + 3) = v15;
  long long v16 = v29;
  *((_OWORD *)v10 + 4) = v28;
  *((_OWORD *)v10 + 5) = v16;
  LOBYTE(v24) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v10[*(int *)(v18 + 20)], v5, v11);
  sub_1D2458((uint64_t)v10, v20);
  sub_5E94((uint64_t)a1);
  return sub_1D24BC((uint64_t)v10);
}

uint64_t sub_1D2458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingSettingsContextualViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D24BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingSettingsContextualViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingSettingsContextualViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D2530(void *a1)
{
  return ReadingSettingsContextualViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D2548@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B50, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322BC8, a1);
}

uint64_t sub_1D2580@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B58, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322BE0, a1);
}

uint64_t sub_1D25B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingSettingsContextualViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D2B64);
}

uint64_t sub_1D2B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingSettingsContextualViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D2C78);
}

uint64_t sub_1D2C78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1D2D84()
{
  sub_7A780();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
      *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
      *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
      uint64_t v10 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v12;
      long long v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      long long v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      int v7 = *(_DWORD *)(a2 + 60);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_DWORD *)(a1 + 60) = v7;
      int v8 = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 68) = v8;
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1);
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      long long v12 = *(_OWORD *)(a2 + 80);
      long long v14 = *(_OWORD *)(a2 + 32);
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)(a1 + 48) = v13;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
    int v9 = *(_DWORD *)(a2 + 60);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = v9;
    int v10 = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 68) = v10;
    *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
    *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
    *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
    *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    long long v16 = *(_OWORD *)(a2 + 32);
    long long v17 = *(_OWORD *)(a2 + 48);
    long long v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)(a1 + 48) = v17;
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_OWORD *initializeWithTake for ReadingSettingsContextualViewEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  long long v6 = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  int v8 = (char *)a1 + v7;
  int v9 = (char *)a2 + v7;
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6)
  {
    sub_62898(a1);
LABEL_5:
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D35B8);
}

uint64_t sub_1D35B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingSettingsContextualViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D3688);
}

uint64_t sub_1D3688(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D3730()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingSettingsContextualViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D3894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSettingsContextualViewEvent.Model.CodingKeys()
{
  return &type metadata for ReadingSettingsContextualViewEvent.Model.CodingKeys;
}

unint64_t sub_1D38D0()
{
  unint64_t result = qword_322D30;
  if (!qword_322D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322D30);
  }
  return result;
}

unint64_t sub_1D3928()
{
  unint64_t result = qword_322D38;
  if (!qword_322D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322D38);
  }
  return result;
}

unint64_t sub_1D3980()
{
  unint64_t result = qword_322D40;
  if (!qword_322D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322D40);
  }
  return result;
}

uint64_t sub_1D39D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D3AEC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322D48, &enum case for SessionGroup.default(_:));
}

uint64_t static RemoveSuggestionCardEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B60, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322D48, a1);
}

uint64_t sub_1D3B4C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322D60, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RemoveSuggestionCardEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B68, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322D60, a1);
}

uint64_t RemoveSuggestionCardEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316F88);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t RemoveSuggestionCardEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316F88);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t RemoveSuggestionCardEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveSuggestionCardEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322DE8);
}

uint64_t RemoveSuggestionCardEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveSuggestionCardEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveSuggestionCardEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveSuggestionCardEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveSuggestionCardEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveSuggestionCardEvent.genreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveSuggestionCardEvent.genreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_31A210);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveSuggestionCardEvent.genreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveSuggestionCardEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveSuggestionCardEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveSuggestionCardEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveSuggestionCardEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RemoveSuggestionCardEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t RemoveSuggestionCardEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[9];
  uint64_t v11 = v1[10];
  uint64_t v12 = v1[11];
  uint64_t v13 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t RemoveSuggestionCardEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  uint64_t v4 = v1[15];
  uint64_t v5 = v1[16];
  uint64_t v6 = v1[17];
  uint64_t v7 = v1[18];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t RemoveSuggestionCardEvent.Model.genreData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[19];
  uint64_t v3 = v1[20];
  uint64_t v4 = v1[21];
  uint64_t v5 = v1[22];
  uint64_t v6 = v1[23];
  uint64_t v7 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_B0AC8(v2, v3);
}

uint64_t RemoveSuggestionCardEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveSuggestionCardEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_322E88);
}

uint64_t RemoveSuggestionCardEvent.Model.init(suggestionData:contentData:seriesData:genreData:eventData:)@<X0>(unsigned char *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v7 = a2[1];
  *(_OWORD *)(a6 + 8) = *a2;
  *(_OWORD *)(a6 + 24) = v7;
  long long v8 = a2[3];
  *(_OWORD *)(a6 + 40) = a2[2];
  *(_OWORD *)(a6 + 56) = v8;
  long long v9 = a2[5];
  *(_OWORD *)(a6 + 72) = a2[4];
  *(_OWORD *)(a6 + 88) = v9;
  long long v10 = a3[1];
  *(_OWORD *)(a6 + 104) = *a3;
  *(_OWORD *)(a6 + 120) = v10;
  *(_OWORD *)(a6 + 136) = a3[2];
  long long v11 = a4[1];
  *(_OWORD *)(a6 + 152) = *a4;
  *(unsigned char *)a6 = *a1;
  *(_OWORD *)(a6 + 168) = v11;
  *(_OWORD *)(a6 + 184) = a4[2];
  uint64_t v12 = a6 + *(int *)(type metadata accessor for RemoveSuggestionCardEvent.Model(0) + 32);
  uint64_t v13 = sub_27D7C0();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a5, v13);
}

uint64_t sub_1D455C()
{
  uint64_t result = 0x6974736567677573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x6144736569726573;
      break;
    case 3:
      uint64_t v2 = 0x4465726E6567;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x44746E657665;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D461C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4644(uint64_t a1)
{
  unint64_t v2 = sub_1D496C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D4680(uint64_t a1)
{
  unint64_t v2 = sub_1D496C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoveSuggestionCardEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_322D78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1D496C();
  sub_27E440();
  LOBYTE(v15) = *(unsigned char *)v3;
  char v21 = 0;
  sub_36B1C();
  sub_27E330();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 24);
    long long v15 = *(_OWORD *)(v3 + 8);
    long long v16 = v9;
    long long v10 = *(_OWORD *)(v3 + 56);
    long long v17 = *(_OWORD *)(v3 + 40);
    long long v18 = v10;
    long long v11 = *(_OWORD *)(v3 + 88);
    long long v19 = *(_OWORD *)(v3 + 72);
    long long v20 = v11;
    char v21 = 1;
    sub_1A1D4();
    sub_27E2C0();
    long long v12 = *(_OWORD *)(v3 + 120);
    long long v15 = *(_OWORD *)(v3 + 104);
    long long v16 = v12;
    long long v17 = *(_OWORD *)(v3 + 136);
    char v21 = 2;
    sub_11514();
    sub_27E2C0();
    long long v13 = *(_OWORD *)(v3 + 168);
    long long v15 = *(_OWORD *)(v3 + 152);
    long long v16 = v13;
    long long v17 = *(_OWORD *)(v3 + 184);
    char v21 = 3;
    sub_B12C4();
    sub_27E2C0();
    type metadata accessor for RemoveSuggestionCardEvent.Model(0);
    LOBYTE(v15) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D496C()
{
  unint64_t result = qword_322D80;
  if (!qword_322D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322D80);
  }
  return result;
}

uint64_t RemoveSuggestionCardEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v23 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_4E04(&qword_322D88);
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RemoveSuggestionCardEvent.Model(0);
  __chkstk_darwin(v8);
  long long v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  long long v27 = a1;
  sub_5900(a1, v11);
  sub_1D496C();
  long long v12 = v28;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)v27);
  }
  long long v28 = v5;
  uint64_t v13 = (uint64_t)v10;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  char v35 = 0;
  sub_377EC();
  sub_27E260();
  *(unsigned char *)uint64_t v13 = v29;
  char v35 = 1;
  sub_1A98C();
  sub_27E1F0();
  long long v16 = v30;
  *(_OWORD *)(v13 + 8) = v29;
  *(_OWORD *)(v13 + 24) = v16;
  long long v17 = v32;
  *(_OWORD *)(v13 + 40) = v31;
  *(_OWORD *)(v13 + 56) = v17;
  long long v18 = v34;
  *(_OWORD *)(v13 + 72) = v33;
  *(_OWORD *)(v13 + 88) = v18;
  char v35 = 2;
  sub_11A3C();
  sub_27E1F0();
  long long v19 = v30;
  *(_OWORD *)(v13 + 104) = v29;
  *(_OWORD *)(v13 + 120) = v19;
  *(_OWORD *)(v13 + 136) = v31;
  char v35 = 3;
  sub_B1A64();
  sub_27E1F0();
  long long v20 = v30;
  *(_OWORD *)(v13 + 152) = v29;
  *(_OWORD *)(v13 + 168) = v20;
  *(_OWORD *)(v13 + 184) = v31;
  LOBYTE(v29) = 4;
  sub_1AB30(&qword_315E28);
  uint64_t v21 = v26;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v13 + *(int *)(v8 + 32), v28, v3);
  sub_1D4E60(v13, v15);
  sub_5E94((uint64_t)v27);
  return sub_1D4EC4(v13);
}

uint64_t sub_1D4E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoveSuggestionCardEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4EC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoveSuggestionCardEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4F20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoveSuggestionCardEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D4F38(void *a1)
{
  return RemoveSuggestionCardEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D4F50@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B60, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322D48, a1);
}

uint64_t sub_1D4F88@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B68, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322D60, a1);
}

uint64_t sub_1D4FC0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveSuggestionCardEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316F88);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_31A210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for RemoveSuggestionCardEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_31A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D5BBC);
}

uint64_t sub_1D5BBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316F88);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for RemoveSuggestionCardEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D5DC8);
}

uint64_t sub_1D5DC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316F88);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_31A210);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1D5FCC()
{
  sub_1D6228(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
  if (v0 <= 0x3F)
  {
    sub_1D6228(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_1D6228(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
      if (v2 <= 0x3F)
      {
        sub_1D6228(319, (unint64_t *)&unk_31A2F0, (void (*)(void))sub_B1A64, (void (*)(void))sub_B12C4);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1D6228(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for RemoveSuggestionCardEvent.Model(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a1 + 8;
    uint64_t v8 = a2[2];
    if (v8)
    {
      *((void *)v4 + 1) = a2[1];
      *((void *)v4 + 2) = v8;
      v4[24] = *((unsigned char *)a2 + 24);
      uint64_t v9 = a2[5];
      *((void *)v4 + 4) = a2[4];
      *((void *)v4 + 5) = v9;
      uint64_t v10 = a2[7];
      *((void *)v4 + 6) = a2[6];
      *((void *)v4 + 7) = v10;
      *((_WORD *)v4 + 32) = *((_WORD *)a2 + 32);
      v4[72] = *((unsigned char *)a2 + 72);
      *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
      *((_DWORD *)v4 + 19) = *((_DWORD *)a2 + 19);
      v4[80] = *((unsigned char *)a2 + 80);
      *(_DWORD *)(v4 + 81) = *(_DWORD *)((char *)a2 + 81);
      v4[85] = *((unsigned char *)a2 + 85);
      uint64_t v11 = a2[12];
      *((void *)v4 + 11) = a2[11];
      *((void *)v4 + 12) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(v4 + 56) = v13;
      long long v14 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v4 + 88) = v14;
      long long v15 = *(_OWORD *)(a2 + 3);
      _OWORD *v7 = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(v4 + 24) = v15;
    }
    uint64_t v16 = a2[18];
    if (v16 == 1)
    {
      long long v17 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(v4 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(v4 + 120) = v17;
      *(_OWORD *)(v4 + 136) = *(_OWORD *)(a2 + 17);
      uint64_t v18 = a2[20];
      if (v18)
      {
LABEL_8:
        *((void *)v4 + 19) = a2[19];
        *((void *)v4 + 20) = v18;
        uint64_t v19 = a2[22];
        *((void *)v4 + 21) = a2[21];
        *((void *)v4 + 22) = v19;
        uint64_t v20 = a2[24];
        *((void *)v4 + 23) = a2[23];
        *((void *)v4 + 24) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        uint64_t v22 = *(int *)(a3 + 32);
        uint64_t v23 = &v4[v22];
        uint64_t v24 = (uint64_t)a2 + v22;
        uint64_t v25 = sub_27D7C0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        return v4;
      }
    }
    else
    {
      *((void *)v4 + 13) = a2[13];
      v4[112] = *((unsigned char *)a2 + 112);
      *((void *)v4 + 15) = a2[15];
      v4[128] = *((unsigned char *)a2 + 128);
      *(_WORD *)(v4 + 129) = *(_WORD *)((char *)a2 + 129);
      *((void *)v4 + 17) = a2[17];
      *((void *)v4 + 18) = v16;
      swift_bridgeObjectRetain();
      uint64_t v18 = a2[20];
      if (v18) {
        goto LABEL_8;
      }
    }
    long long v21 = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(v4 + 152) = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(v4 + 168) = v21;
    *(_OWORD *)(v4 + 184) = *(_OWORD *)(a2 + 23);
    goto LABEL_11;
  }
  uint64_t v12 = *a2;
  *(void *)unint64_t v4 = *a2;
  unint64_t v4 = (unsigned char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for RemoveSuggestionCardEvent.Model(void *a1, uint64_t a2)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[18] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[20])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_DWORD *)(a1 + 81) = *(_DWORD *)(a2 + 81);
    *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    v6[2] = *(_OWORD *)(a2 + 40);
    v6[3] = v11;
    long long v12 = *(_OWORD *)(a2 + 88);
    v6[4] = *(_OWORD *)(a2 + 72);
    v6[5] = v12;
    long long v13 = *(_OWORD *)(a2 + 24);
    *unint64_t v6 = *(_OWORD *)(a2 + 8);
    v6[1] = v13;
  }
  uint64_t v14 = *(void *)(a2 + 144);
  if (v14 != 1)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = *(void *)(a2 + 160);
    if (v16) {
      goto LABEL_6;
    }
LABEL_8:
    long long v19 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v19;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    goto LABEL_9;
  }
  long long v15 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v15;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 160);
  if (!v16) {
    goto LABEL_8;
  }
LABEL_6:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  uint64_t v18 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v20 = *(int *)(a3 + 32);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v8)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      int v9 = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 68) = v9;
      int v10 = *(_DWORD *)(a2 + 76);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_DWORD *)(a1 + 76) = v10;
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 8);
      long long v13 = v7[1];
      *unint64_t v6 = *v7;
      v6[1] = v13;
      long long v14 = v7[5];
      long long v16 = v7[2];
      long long v15 = v7[3];
      v6[4] = v7[4];
      v6[5] = v14;
      v6[2] = v16;
      v6[3] = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    int v11 = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 68) = v11;
    int v12 = *(_DWORD *)(a2 + 76);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_DWORD *)(a1 + 76) = v12;
    *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
    *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
    *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
    *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
    *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 24);
    *unint64_t v6 = *v7;
    *(_OWORD *)(a1 + 24) = v17;
    long long v18 = *(_OWORD *)(a2 + 40);
    long long v19 = *(_OWORD *)(a2 + 56);
    long long v20 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v20;
    *(_OWORD *)(a1 + 40) = v18;
    *(_OWORD *)(a1 + 56) = v19;
  }
  uint64_t v21 = (long long *)(a1 + 104);
  uint64_t v22 = (long long *)(a2 + 104);
  uint64_t v23 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144) == 1)
  {
    if (v23 == 1)
    {
      long long v24 = *v22;
      long long v25 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v25;
      *uint64_t v21 = v24;
    }
    else
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
    }
  }
  else if (v23 == 1)
  {
    sub_1CDD8(a1 + 104);
    long long v27 = *(_OWORD *)(a2 + 120);
    long long v26 = *(_OWORD *)(a2 + 136);
    *uint64_t v21 = *v22;
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 136) = v26;
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  long long v28 = (_OWORD *)(a1 + 152);
  long long v29 = (_OWORD *)(a2 + 152);
  uint64_t v30 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v30)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_B3FFC(a1 + 152);
      long long v32 = *(_OWORD *)(a2 + 168);
      long long v31 = *(_OWORD *)(a2 + 184);
      *long long v28 = *v29;
      *(_OWORD *)(a1 + 168) = v32;
      *(_OWORD *)(a1 + 184) = v31;
    }
  }
  else if (v30)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *v29;
    long long v34 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v34;
    *long long v28 = v33;
  }
  uint64_t v35 = *(int *)(a3 + 32);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 16))
  {
    uint64_t v8 = *(void *)(a2 + 16);
    if (v8)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v9 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v10;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_DWORD *)(a1 + 81) = *(_DWORD *)(a2 + 81);
      *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
      uint64_t v11 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_62898((uint64_t)v6);
  }
  long long v12 = v7[3];
  v6[2] = v7[2];
  v6[3] = v12;
  long long v13 = v7[5];
  v6[4] = v7[4];
  v6[5] = v13;
  long long v14 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v14;
LABEL_6:
  if (*(void *)(a1 + 144) == 1)
  {
LABEL_9:
    long long v16 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(a2 + 144);
  if (v15 == 1)
  {
    sub_1CDD8(a1 + 104);
    goto LABEL_9;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  if (!*(void *)(a1 + 160))
  {
LABEL_15:
    long long v20 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v20;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(a2 + 160);
  if (!v17)
  {
    sub_B3FFC(a1 + 152);
    goto LABEL_15;
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D6EE0);
}

uint64_t sub_1D6EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveSuggestionCardEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D6FB0);
}

uint64_t sub_1D6FB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D7058()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoveSuggestionCardEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D71D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveSuggestionCardEvent.Model.CodingKeys()
{
  return &type metadata for RemoveSuggestionCardEvent.Model.CodingKeys;
}

unint64_t sub_1D7214()
{
  unint64_t result = qword_322ED0;
  if (!qword_322ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322ED0);
  }
  return result;
}

unint64_t sub_1D726C()
{
  unint64_t result = qword_322ED8;
  if (!qword_322ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322ED8);
  }
  return result;
}

unint64_t sub_1D72C4()
{
  unint64_t result = qword_322EE0;
  if (!qword_322EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322EE0);
  }
  return result;
}

uint64_t sub_1D7318(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614465726E6567 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t ContentData.init(from:with:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v90 = a2;
  uint64_t v5 = sub_4E04(&qword_322EE8);
  __chkstk_darwin(v5 - 8);
  v88 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_322EF0);
  __chkstk_darwin(v7 - 8);
  v89 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_4E04(&qword_322EF8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_27D840();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_27D900();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for BooksFeatureFlag.unifiedProductPage(_:), v16);
  sub_1D80F0();
  sub_1D8148();
  int v87 = sub_27DEB0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_AE110((uint64_t)a1, (uint64_t)v94);
  sub_4E04(&qword_322F18);
  char v20 = swift_dynamicCast();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v20)
  {
    v21(v11, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    char v22 = sub_27D830();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (v22) {
      int v23 = 5;
    }
    else {
      int v23 = 1;
    }
    goto LABEL_9;
  }
  v21(v11, 1, 1, v12);
  sub_ADCF8((uint64_t)v11, &qword_322EF8);
  sub_AE110((uint64_t)a1, (uint64_t)v94);
  uint64_t v24 = sub_27D8E0();
  uint64_t v25 = (uint64_t)v89;
  char v26 = swift_dynamicCast();
  long long v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  if (v26)
  {
    v27(v25, 0, 1, v24);
    sub_ADCF8(v25, &qword_322EF0);
    int v23 = 2;
LABEL_9:
    int v84 = v23;
    goto LABEL_10;
  }
  v27(v25, 1, 1, v24);
  sub_ADCF8(v25, &qword_322EF0);
  sub_AE110((uint64_t)a1, (uint64_t)v94);
  uint64_t v28 = sub_27D960();
  uint64_t v29 = (uint64_t)v88;
  char v30 = swift_dynamicCast();
  long long v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  if (v30)
  {
    v31(v29, 0, 1, v28);
    sub_ADCF8(v29, &qword_322EE8);
    int v23 = 3;
    goto LABEL_9;
  }
  v31(v29, 1, 1, v28);
  sub_ADCF8(v29, &qword_322EE8);
  int v84 = 0;
LABEL_10:
  sub_5900(a1, a1[3]);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = sub_27E040();
  v89 = (char *)&v81;
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v81 - v35;
  sub_27D850();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v36, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    int v38 = 3;
  }
  else
  {
    uint64_t v92 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v39 = sub_1D81A4((uint64_t *)&v91);
    (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 32))(v39, v36, AssociatedTypeWitness);
    sub_AE174(&v91, (uint64_t)v94);
    sub_5900(v94, v94[3]);
    sub_27D910();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    if (v41) {
      int v38 = 1;
    }
    else {
      int v38 = 2;
    }
    sub_5E94((uint64_t)v94);
  }
  id v42 = v90;
  sub_5900(a1, a1[3]);
  v43 = (void *)sub_27D870();
  if (v43)
  {
    v44 = v43;
    if ([v43 isSG])
    {

      int v45 = 1;
    }
    else
    {
      char v46 = sub_27D930();

      if (v46) {
        int v45 = 2;
      }
      else {
        int v45 = 3;
      }
    }
  }
  else
  {
    int v45 = 3;
  }
  int v86 = v45;
  sub_5900(a1, a1[3]);
  uint64_t v47 = sub_27D870();
  if (v47 && (v48 = (void *)v47, v49 = (void *)sub_27D940(), v48, v49))
  {
    char v50 = sub_27D950();

    if (v50) {
      int v51 = 1;
    }
    else {
      int v51 = 2;
    }
  }
  else
  {
    sub_5900(a1, a1[3]);
    int v51 = ((int)(sub_27D970() << 31) >> 31) & 3;
  }
  int v85 = v51;
  sub_5900(a1, a1[3]);
  uint64_t v52 = sub_27D860();
  uint64_t v54 = v53;
  sub_5900(a1, a1[3]);
  sub_27D860();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v88 = (char *)v52;
  if (Strong
    && (v56 = (void *)Strong,
        NSString v57 = sub_27DDA0(),
        id v58 = [v56 contentPrivateIDForContentID:v57],
        v57,
        swift_unknownObjectRelease(),
        v58))
  {
    uint64_t v83 = sub_27DDB0();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v83 = 0;
    unint64_t v60 = 0xE000000000000000;
  }
  sub_5900(a1, a1[3]);
  sub_27D860();
  uint64_t v61 = swift_unknownObjectWeakLoadStrong();
  LODWORD(v89) = v38;
  if (v61
    && (v62 = (void *)v61,
        NSString v63 = sub_27DDA0(),
        id v64 = [v62 contentUserIDForContentID:v63],
        v63,
        swift_unknownObjectRelease(),
        v64))
  {
    uint64_t v82 = sub_27DDB0();
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v82 = 0;
    unint64_t v66 = 0xE000000000000000;
  }
  sub_5900(a1, a1[3]);
  v67 = (void *)sub_27D870();
  if (v67
    && (v68 = v67, unsigned __int8 v69 = [v67 hasSupplementalContent], v68, (v69 & 1) != 0))
  {
    int v70 = 1;
    if ((v87 & 1) == 0)
    {
LABEL_40:

      uint64_t v71 = 0;
      v72 = 0;
      unsigned __int8 v73 = 2;
      goto LABEL_51;
    }
  }
  else
  {
    int v70 = 0;
    if ((v87 & 1) == 0) {
      goto LABEL_40;
    }
  }
  sub_5900(a1, a1[3]);
  v74 = (void *)sub_27D870();
  if (v74)
  {
    v75 = v74;
    unsigned __int8 v73 = [v74 supportsUnifiedProductPage];
  }
  else
  {
    unsigned __int8 v73 = 0;
  }
  sub_5900(a1, a1[3]);
  v76 = (void *)sub_27D870();
  v72 = v76;
  if (v76)
  {
    id v77 = [v76 editionKind];

    if (v77)
    {
      uint64_t v71 = sub_27DDB0();
      v72 = v78;
    }
    else
    {

      uint64_t v71 = 0;
      v72 = 0;
    }
  }
  else
  {

    uint64_t v71 = 0;
  }
LABEL_51:
  char v79 = v84;
  swift_bridgeObjectRelease();
  *(void *)a3 = v88;
  *(void *)(a3 + 8) = v54;
  *(unsigned char *)(a3 + 16) = v79;
  *(void *)(a3 + 24) = v83;
  *(void *)(a3 + 32) = v60;
  *(void *)(a3 + 40) = v82;
  *(void *)(a3 + 48) = v66;
  *(unsigned char *)(a3 + 56) = (_BYTE)v89;
  *(unsigned char *)(a3 + 57) = 0;
  *(_DWORD *)(a3 + 60) = 0;
  *(unsigned char *)(a3 + 64) = 1;
  *(_DWORD *)(a3 + 68) = v70;
  *(unsigned char *)(a3 + 72) = 0;
  *(unsigned char *)(a3 + 73) = v85;
  *(unsigned char *)(a3 + 74) = v86;
  *(unsigned char *)(a3 + 75) = 3;
  *(unsigned char *)(a3 + 76) = v73;
  *(unsigned char *)(a3 + 77) = 2;
  *(void *)(a3 + 80) = v71;
  *(void *)(a3 + 88) = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D80F0()
{
  unint64_t result = qword_322F00;
  if (!qword_322F00)
  {
    sub_27D900();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322F00);
  }
  return result;
}

unint64_t sub_1D8148()
{
  unint64_t result = qword_322F08;
  if (!qword_322F08)
  {
    sub_82930(&qword_322F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322F08);
  }
  return result;
}

uint64_t *sub_1D81A4(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

BookAnalytics::EditActionResult_optional __swiftcall EditActionResult.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9260;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t EditActionResult.rawValue.getter()
{
  uint64_t v1 = 0x73736563637573;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C65636E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1D82BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_30FDC(*a1, *a2);
}

unint64_t sub_1D82CC()
{
  unint64_t result = qword_322F20;
  if (!qword_322F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322F20);
  }
  return result;
}

Swift::Int sub_1D8320()
{
  return sub_27E420();
}

uint64_t sub_1D83C0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1D844C()
{
  return sub_27E420();
}

BookAnalytics::EditActionResult_optional sub_1D84E8(Swift::String *a1)
{
  return EditActionResult.init(rawValue:)(*a1);
}

void sub_1D84F4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73736563637573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C65636E6163;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D8550()
{
  return sub_27DED0();
}

uint64_t sub_1D85B0()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for EditActionResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D86CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditActionResult()
{
  return &type metadata for EditActionResult;
}

unint64_t sub_1D8704()
{
  unint64_t result = qword_322F28;
  if (!qword_322F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322F28);
  }
  return result;
}

uint64_t sub_1D8758(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_322F30, &enum case for SessionGroup.default(_:));
}

uint64_t static AddToCollectionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322F30, a1);
}

uint64_t sub_1D87B8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_322F48, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AddToCollectionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322F48, a1);
}

uint64_t AddToCollectionEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AddToCollectionEvent(uint64_t a1)
{
  return sub_5338(a1, qword_322FD0);
}

uint64_t AddToCollectionEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddToCollectionEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AddToCollectionEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddToCollectionEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddToCollectionEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AddToCollectionEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddToCollectionEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddToCollectionEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AddToCollectionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddToCollectionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddToCollectionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AddToCollectionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AddToCollectionEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t RemoveFromCollectionEvent.Model.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  __int16 v8 = *(_WORD *)(v1 + 88);
  int v9 = *(_DWORD *)(v1 + 92);
  char v10 = *(unsigned char *)(v1 + 96);
  int v11 = *(_DWORD *)(v1 + 100);
  char v12 = *(unsigned char *)(v1 + 104);
  char v13 = *(unsigned char *)(v1 + 109);
  uint64_t v15 = *(void *)(v1 + 112);
  uint64_t v14 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(_DWORD *)(a1 + 68) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(v1 + 105);
  *(unsigned char *)(a1 + 77) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void AddToCollectionEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 176);
}

uint64_t AddToCollectionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddToCollectionEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AddToCollectionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_323070);
}

uint64_t AddToCollectionEvent.Model.init(collectionData:contentData:seriesData:suggestionData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  char v10 = *((unsigned char *)a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 3);
  uint64_t v12 = a2[5];
  uint64_t v13 = a2[6];
  __int16 v14 = *((_WORD *)a2 + 28);
  int v15 = *((_DWORD *)a2 + 15);
  char v16 = *((unsigned char *)a2 + 64);
  int v17 = *((_DWORD *)a2 + 17);
  char v18 = *((unsigned char *)a2 + 72);
  char v19 = *((unsigned char *)a2 + 77);
  char v20 = *a4;
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v7;
  *(_OWORD *)(a6 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(a6 + 32) = v8;
  *(void *)(a6 + 40) = v9;
  *(unsigned char *)(a6 + 48) = v10;
  *(_OWORD *)(a6 + 56) = v11;
  *(void *)(a6 + 72) = v12;
  *(void *)(a6 + 80) = v13;
  *(_WORD *)(a6 + 88) = v14;
  *(_DWORD *)(a6 + 92) = v15;
  *(unsigned char *)(a6 + 96) = v16;
  *(_DWORD *)(a6 + 100) = v17;
  *(unsigned char *)(a6 + 104) = v18;
  *(_DWORD *)(a6 + 105) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a6 + 109) = v19;
  long long v21 = *a3;
  long long v22 = a3[1];
  *(_OWORD *)(a6 + 112) = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a6 + 128) = v21;
  long long v23 = a3[2];
  *(_OWORD *)(a6 + 144) = v22;
  *(_OWORD *)(a6 + 160) = v23;
  *(unsigned char *)(a6 + 176) = v20;
  uint64_t v24 = a6 + *(int *)(type metadata accessor for AddToCollectionEvent.Model(0) + 32);
  uint64_t v25 = sub_27D7C0();
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);

  return v26(v24, a5, v25);
}

uint64_t sub_1D9148()
{
  uint64_t result = 0x697463656C6C6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x6144736569726573;
      break;
    case 3:
      uint64_t result = 0x6974736567677573;
      break;
    case 4:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D920C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DBC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D9234(uint64_t a1)
{
  unint64_t v2 = sub_1D9590();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D9270(uint64_t a1)
{
  unint64_t v2 = sub_1D9590();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AddToCollectionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_322F60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_1D9590();
  sub_27E440();
  uint64_t v9 = *(void *)(v3 + 8);
  *(void *)&long long v23 = *(void *)v3;
  *((void *)&v23 + 1) = v9;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)(v3 + 16);
  char v34 = 0;
  sub_3C2A4();
  sub_27E330();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + 40);
    char v11 = *(unsigned char *)(v3 + 48);
    long long v12 = *(_OWORD *)(v3 + 56);
    uint64_t v13 = *(void *)(v3 + 72);
    uint64_t v14 = *(void *)(v3 + 80);
    __int16 v15 = *(_WORD *)(v3 + 88);
    int v16 = *(_DWORD *)(v3 + 92);
    char v17 = *(unsigned char *)(v3 + 96);
    int v18 = *(_DWORD *)(v3 + 100);
    char v19 = *(unsigned char *)(v3 + 104);
    uint64_t v20 = *(unsigned __int8 *)(v3 + 109);
    *(void *)&long long v23 = *(void *)(v3 + 32);
    *((void *)&v23 + 1) = v10;
    v24[0] = v11;
    *(_OWORD *)&v24[8] = v12;
    *(void *)&v24[24] = v13;
    uint64_t v25 = v14;
    __int16 v26 = v15;
    int v27 = v16;
    char v28 = v17;
    int v29 = v18;
    char v30 = v19;
    int v31 = *(_DWORD *)(v3 + 105);
    char v32 = v20;
    long long v33 = *(_OWORD *)(v3 + 112);
    char v34 = 1;
    sub_1A1D4();
    sub_27E330();
    long long v21 = *(_OWORD *)(v3 + 144);
    long long v23 = *(_OWORD *)(v3 + 128);
    *(_OWORD *)uint64_t v24 = v21;
    *(_OWORD *)&v24[16] = *(_OWORD *)(v3 + 160);
    char v34 = 2;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v23) = *(unsigned char *)(v3 + 176);
    char v34 = 3;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for AddToCollectionEvent.Model(0);
    LOBYTE(v23) = 4;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D9590()
{
  unint64_t result = qword_322F68;
  if (!qword_322F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_322F68);
  }
  return result;
}

uint64_t AddToCollectionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_4E04(&qword_322F70);
  uint64_t v34 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AddToCollectionEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v38 = a1;
  sub_5900(a1, v12);
  sub_1D9590();
  uint64_t v36 = v8;
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v38);
  }
  char v32 = v6;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v34;
  uint64_t v14 = v35;
  char v50 = 0;
  sub_3C618();
  sub_27E260();
  uint64_t v16 = *((void *)&v39 + 1);
  *(void *)uint64_t v13 = v39;
  *(void *)(v13 + 8) = v16;
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v40;
  char v50 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v17 = *((void *)&v39 + 1);
  char v18 = v40[0];
  long long v19 = *(_OWORD *)&v40[8];
  uint64_t v20 = *(void *)&v40[24];
  uint64_t v21 = v41;
  __int16 v22 = v42;
  int v23 = v43;
  char v24 = v44;
  int v25 = v45;
  char v26 = v46;
  char v27 = v48;
  *(void *)(v13 + 32) = v39;
  *(void *)(v13 + 40) = v17;
  *(unsigned char *)(v13 + 48) = v18;
  *(_OWORD *)(v13 + 56) = v19;
  *(void *)(v13 + 72) = v20;
  *(void *)(v13 + 80) = v21;
  *(_WORD *)(v13 + 88) = v22;
  *(_DWORD *)(v13 + 92) = v23;
  *(unsigned char *)(v13 + 96) = v24;
  *(_DWORD *)(v13 + 100) = v25;
  *(unsigned char *)(v13 + 104) = v26;
  *(_DWORD *)(v13 + 105) = v47;
  *(unsigned char *)(v13 + 109) = v27;
  *(_OWORD *)(v13 + 112) = v49;
  char v50 = 2;
  sub_11A3C();
  sub_27E1F0();
  uint64_t v31 = 0;
  long long v28 = *(_OWORD *)v40;
  *(_OWORD *)(v13 + 128) = v39;
  *(_OWORD *)(v13 + 144) = v28;
  *(_OWORD *)(v13 + 160) = *(_OWORD *)&v40[16];
  char v50 = 3;
  sub_377EC();
  sub_27E1F0();
  *(unsigned char *)(v13 + 176) = v39;
  LOBYTE(v39) = 4;
  sub_1AB30(&qword_315E28);
  int v29 = v32;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v36, v37);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v13 + *(int *)(v9 + 32), v29, v4);
  sub_1D9AE0(v13, v14);
  sub_5E94((uint64_t)v38);
  return sub_1D9B44(v13);
}

uint64_t sub_1D9AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddToCollectionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D9B44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AddToCollectionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D9BA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AddToCollectionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D9BB8(void *a1)
{
  return AddToCollectionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D9BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_322F30, a1);
}

uint64_t sub_1D9C08@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_322F48, a1);
}

uint64_t sub_1D9C40@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for AddToCollectionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3171C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for AddToCollectionEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for AddToCollectionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for AddToCollectionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for AddToCollectionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for AddToCollectionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddToCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DA83C);
}

uint64_t sub_1DA83C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for AddToCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DAA48);
}

uint64_t sub_1DAA48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3171C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1DAC4C()
{
  sub_1DAEA8(319, (unint64_t *)&qword_317260, (void (*)(void))sub_3C618, (void (*)(void))sub_3C2A4);
  if (v0 <= 0x3F)
  {
    sub_1DAEA8(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_1DAEA8(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
      if (v2 <= 0x3F)
      {
        sub_1DAEA8(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1DAEA8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AddToCollectionEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    uint64_t v11 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v11;
    *(_WORD *)(a1 + 88) = *((_WORD *)a2 + 44);
    *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(_DWORD *)(a1 + 105) = *(_DWORD *)((char *)a2 + 105);
    *(unsigned char *)(a1 + 109) = *((unsigned char *)a2 + 109);
    uint64_t v12 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v12;
    uint64_t v13 = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      long long v14 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    }
    else
    {
      *(void *)(a1 + 128) = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 144) = a2[18];
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 168) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    long long v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v12;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  int v6 = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v6;
  int v7 = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v7;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (long long *)(a1 + 128);
  uint64_t v9 = (long long *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v12;
      *uint64_t v8 = v11;
    }
    else
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
      *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1CDD8(a1 + 128);
    long long v14 = *(_OWORD *)(a2 + 144);
    long long v13 = *(_OWORD *)(a2 + 160);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = v13;
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
    *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 128) = v8;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a2 + v10;
  uint64_t v12 = a1 + v10;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, v11, v13);
  return a1;
}

uint64_t assignWithTake for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 168) != 1)
  {
    uint64_t v12 = *(void *)(a2 + 168);
    if (v12 != 1)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 128);
  }
  long long v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_6:
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DB848);
}

uint64_t sub_1DB848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AddToCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DB90C);
}

uint64_t sub_1DB90C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DB9B4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AddToCollectionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DBB34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddToCollectionEvent.Model.CodingKeys()
{
  return &type metadata for AddToCollectionEvent.Model.CodingKeys;
}

unint64_t sub_1DBB70()
{
  unint64_t result = qword_3230B8;
  if (!qword_3230B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230B8);
  }
  return result;
}

unint64_t sub_1DBBC8()
{
  unint64_t result = qword_3230C0;
  if (!qword_3230C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230C0);
  }
  return result;
}

unint64_t sub_1DBC20()
{
  unint64_t result = qword_3230C8;
  if (!qword_3230C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230C8);
  }
  return result;
}

uint64_t sub_1DBC74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00617461446E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1DBF08(char a1)
{
  if (!a1) {
    return 0xD000000000000018;
  }
  if (a1 == 1) {
    return 0xD00000000000001ALL;
  }
  return 0xD000000000000016;
}

unint64_t sub_1DBF64()
{
  return sub_1DBF08(*v0);
}

uint64_t sub_1DBF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC7D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DBF94(uint64_t a1)
{
  unint64_t v2 = sub_1DC4B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DBFD0(uint64_t a1)
{
  unint64_t v2 = sub_1DC4B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchSuggestionSelectionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3230D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(_DWORD *)(v1 + 16);
  HIDWORD(v10) = *(unsigned __int8 *)(v1 + 20);
  sub_5900(a1, a1[3]);
  sub_1DC4B8();
  sub_27E440();
  char v16 = 0;
  uint64_t v7 = v11;
  sub_27E2F0();
  if (!v7)
  {
    char v8 = BYTE4(v10);
    char v15 = 1;
    sub_27E340();
    char v14 = v8;
    char v13 = 2;
    sub_1DC50C();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchSuggestionSelectionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3230E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DC4B8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v19 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v18 = 1;
  swift_bridgeObjectRetain();
  int v15 = sub_27E270();
  char v16 = 2;
  sub_1DC560();
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v13 = v17;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 20) = v13;
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC3F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSuggestionSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1DC40C(void *a1)
{
  return SearchSuggestionSelectionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics29SearchSuggestionSelectionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 20);
  int v4 = *(_DWORD *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 20);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v6 && (sub_27E370() & 1) == 0 || v2 != v4) {
    return 0;
  }

  return sub_2DD10(v3, v5);
}

unint64_t sub_1DC4B8()
{
  unint64_t result = qword_3230D8;
  if (!qword_3230D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230D8);
  }
  return result;
}

unint64_t sub_1DC50C()
{
  unint64_t result = qword_3230E0;
  if (!qword_3230E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230E0);
  }
  return result;
}

unint64_t sub_1DC560()
{
  unint64_t result = qword_3230F0;
  if (!qword_3230F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionSelectionData()
{
  return &type metadata for SearchSuggestionSelectionData;
}

unsigned char *storeEnumTagSinglePayload for SearchSuggestionSelectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionSelectionData.CodingKeys()
{
  return &type metadata for SearchSuggestionSelectionData.CodingKeys;
}

unint64_t sub_1DC6D4()
{
  unint64_t result = qword_3230F8;
  if (!qword_3230F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3230F8);
  }
  return result;
}

unint64_t sub_1DC72C()
{
  unint64_t result = qword_323100;
  if (!qword_323100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323100);
  }
  return result;
}

unint64_t sub_1DC784()
{
  unint64_t result = qword_323108;
  if (!qword_323108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323108);
  }
  return result;
}

uint64_t sub_1DC7D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000000002B1710 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002B1730 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002B1750)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void __swiftcall DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)(BookAnalytics::DeviceData *__return_ptr retstr, Swift::String deviceModel, Swift::String devicePlatform, BookAnalytics::OsInstallVariant osInstallVariant, Swift::String osVersion, Swift::String osBundleVersion)
{
  BookAnalytics::OsInstallVariant v6 = *(unsigned char *)osInstallVariant;
  retstr->deviceModel = deviceModel;
  retstr->devicePlatform = devicePlatform;
  retstr->osInstallVariant = v6;
  retstr->osVersion = osVersion;
  retstr->osBundleVersion = osBundleVersion;
}

unint64_t sub_1DC944()
{
  unint64_t result = 0x6F4D656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C50656369766564;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 4:
      unint64_t result = 0x656C646E7542736FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DD8AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA40(uint64_t a1)
{
  unint64_t v2 = sub_1DD300();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DCA7C(uint64_t a1)
{
  unint64_t v2 = sub_1DD300();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DeviceData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_323110);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BookAnalytics::OsInstallVariant v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = v7;
  int v14 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  v13[2] = *(void *)(v1 + 48);
  v13[3] = v8;
  uint64_t v9 = *(void *)(v1 + 64);
  v13[0] = *(void *)(v1 + 56);
  v13[1] = v9;
  sub_5900(a1, a1[3]);
  sub_1DD300();
  sub_27E440();
  char v23 = 0;
  uint64_t v10 = v17;
  sub_27E2F0();
  if (!v10)
  {
    char v11 = v14;
    char v22 = 1;
    sub_27E2F0();
    char v21 = v11;
    char v20 = 2;
    sub_1DD354();
    sub_27E330();
    char v19 = 3;
    sub_27E2F0();
    char v18 = 4;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DeviceData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323128);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DD300();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v36 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v29 = v9;
  char v35 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v30 = v13;
  uint64_t v27 = v12;
  char v33 = 2;
  sub_1DD3A8();
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  sub_27E260();
  int v14 = v34;
  char v32 = 3;
  uint64_t v24 = sub_27E220();
  int v25 = v14;
  char v31 = 4;
  uint64_t v26 = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_27E220();
  uint64_t v19 = v18;
  char v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v28 = v17;
  v20(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v21 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v11;
  uint64_t v22 = v26;
  *(void *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v21;
  *(unsigned char *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v28;
  *(void *)(a2 + 64) = v19;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD0C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceData.init(from:)(a1, a2);
}

uint64_t sub_1DD0DC(void *a1)
{
  return DeviceData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics10DeviceDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_27E370(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_27E370(), uint64_t result = 0, (v14 & 1) != 0))
    {
      uint64_t v15 = 0x6C616E7265746E69;
      if (v4 == 1) {
        uint64_t v16 = 0x6C616E7265746E69;
      }
      else {
        uint64_t v16 = 0x6C616E7265747865;
      }
      if (v4) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0x6E776F6E6B6E75;
      }
      if (v4) {
        unint64_t v18 = 0xE800000000000000;
      }
      else {
        unint64_t v18 = 0xE700000000000000;
      }
      if (v9 != 1) {
        uint64_t v15 = 0x6C616E7265747865;
      }
      if (v9) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 0x6E776F6E6B6E75;
      }
      if (v9) {
        unint64_t v20 = 0xE800000000000000;
      }
      else {
        unint64_t v20 = 0xE700000000000000;
      }
      if (v17 == v19 && v18 == v20)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
      if (v5 == v10 && v6 == v11 || (v22 = sub_27E370(), uint64_t result = 0, (v22 & 1) != 0))
      {
        if (v26 == v24 && v25 == v23)
        {
          return 1;
        }
        else
        {
          return sub_27E370();
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DD300()
{
  unint64_t result = qword_323118;
  if (!qword_323118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323118);
  }
  return result;
}

unint64_t sub_1DD354()
{
  unint64_t result = qword_323120;
  if (!qword_323120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323120);
  }
  return result;
}

unint64_t sub_1DD3A8()
{
  unint64_t result = qword_323130;
  if (!qword_323130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323130);
  }
  return result;
}

unint64_t sub_1DD400()
{
  unint64_t result = qword_323138;
  if (!qword_323138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323138);
  }
  return result;
}

unint64_t sub_1DD458()
{
  unint64_t result = qword_323140;
  if (!qword_323140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323140);
  }
  return result;
}

uint64_t destroy for DeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceData()
{
  return &type metadata for DeviceData;
}

unsigned char *storeEnumTagSinglePayload for DeviceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DD76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData.CodingKeys()
{
  return &type metadata for DeviceData.CodingKeys;
}

unint64_t sub_1DD7A8()
{
  unint64_t result = qword_323148;
  if (!qword_323148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323148);
  }
  return result;
}

unint64_t sub_1DD800()
{
  unint64_t result = qword_323150;
  if (!qword_323150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323150);
  }
  return result;
}

unint64_t sub_1DD858()
{
  unint64_t result = qword_323158;
  if (!qword_323158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323158);
  }
  return result;
}

uint64_t sub_1DD8AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1770 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t static UserEmbeddingData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_81944(*a1, *a2);
}

uint64_t sub_1DDB3C()
{
  return 0x7365727574616566;
}

uint64_t sub_1DDB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DDBEC(uint64_t a1)
{
  unint64_t v2 = sub_1DDDE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DDC28(uint64_t a1)
{
  unint64_t v2 = sub_1DDDE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserEmbeddingData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_323160);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1DDDE8();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_323170);
  sub_1DDFE0(&qword_323178, (void (*)(void))sub_139BB0);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DDDE8()
{
  unint64_t result = qword_323168;
  if (!qword_323168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323168);
  }
  return result;
}

uint64_t UserEmbeddingData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323180);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DDDE8();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_323170);
    sub_1DDFE0(&qword_323188, (void (*)(void))sub_139B58);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1DDFE0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_323170);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE058@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return UserEmbeddingData.init(from:)(a1, a2);
}

uint64_t sub_1DE070(void *a1)
{
  return UserEmbeddingData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserEmbeddingData()
{
  return &type metadata for UserEmbeddingData;
}

unsigned char *storeEnumTagSinglePayload for UserEmbeddingData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE134);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEmbeddingData.CodingKeys()
{
  return &type metadata for UserEmbeddingData.CodingKeys;
}

unint64_t sub_1DE170()
{
  unint64_t result = qword_323190;
  if (!qword_323190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323190);
  }
  return result;
}

unint64_t sub_1DE1C8()
{
  unint64_t result = qword_323198;
  if (!qword_323198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323198);
  }
  return result;
}

unint64_t sub_1DE220()
{
  unint64_t result = qword_3231A0;
  if (!qword_3231A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231A0);
  }
  return result;
}

uint64_t sub_1DE274()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x646F43726F727265;
  }
}

uint64_t sub_1DE2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE97C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE2E0(uint64_t a1)
{
  unint64_t v2 = sub_1DE704();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DE31C(uint64_t a1)
{
  unint64_t v2 = sub_1DE704();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ErrorData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3231A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_1DE704();
  sub_27E440();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v11 = 1;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ErrorData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3231B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DE704();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE6D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ErrorData.init(from:)(a1, a2);
}

uint64_t sub_1DE6EC(void *a1)
{
  return ErrorData.encode(to:)(a1);
}

unint64_t sub_1DE704()
{
  unint64_t result = qword_3231B0;
  if (!qword_3231B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorData()
{
  return &type metadata for ErrorData;
}

unsigned char *storeEnumTagSinglePayload for ErrorData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE83CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorData.CodingKeys()
{
  return &type metadata for ErrorData.CodingKeys;
}

unint64_t sub_1DE878()
{
  unint64_t result = qword_3231C0;
  if (!qword_3231C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231C0);
  }
  return result;
}

unint64_t sub_1DE8D0()
{
  unint64_t result = qword_3231C8;
  if (!qword_3231C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231C8);
  }
  return result;
}

unint64_t sub_1DE928()
{
  unint64_t result = qword_3231D0;
  if (!qword_3231D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231D0);
  }
  return result;
}

uint64_t sub_1DE97C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFAA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t OnDevicePersonalizationPropertyData.genrePreferenceAvailable.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t OnDevicePersonalizationPropertyData.genrePreferenceAvailable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 18) = result;
  return result;
}

uint64_t (*OnDevicePersonalizationPropertyData.genrePreferenceAvailable.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t OnDevicePersonalizationPropertyData.isReordered.getter()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t OnDevicePersonalizationPropertyData.isReordered.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 19) = result;
  return result;
}

uint64_t (*OnDevicePersonalizationPropertyData.isReordered.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

BookAnalytics::OnDevicePersonalizationPropertyData __swiftcall OnDevicePersonalizationPropertyData.init(isEligible:lockedIn:isLocked:onDevicePersonalizationUserStatus:genrePreferenceAvailable:isReordered:lockedInCount:)(Swift::Bool isEligible, Swift::Double lockedIn, Swift::Bool isLocked, BookAnalytics::OnDevicePersonalizationUserStatus onDevicePersonalizationUserStatus, Swift::Bool_optional genrePreferenceAvailable, Swift::Bool_optional isReordered, Swift::Int32_optional lockedInCount)
{
  char v8 = *(unsigned char *)onDevicePersonalizationUserStatus;
  *(unsigned char *)uint64_t v7 = isEligible;
  *(Swift::Double *)(v7 + 8) = lockedIn;
  *(unsigned char *)(v7 + 16) = isLocked;
  *(unsigned char *)(v7 + 17) = v8;
  *(Swift::Bool_optional *)(v7 + 18) = genrePreferenceAvailable;
  *(Swift::Bool_optional *)(v7 + 19) = isReordered;
  *(_DWORD *)(v7 + 20) = lockedInCount.value;
  *(unsigned char *)(v7 + 24) = lockedInCount.is_nil;
  result.lockedIn = lockedIn;
  result.lockedInCount.is_nil = onDevicePersonalizationUserStatus;
  result.isLocked = isLocked;
  result.isEligible = isEligible;
  return result;
}

unint64_t sub_1DEB08(char a1)
{
  unint64_t result = 0x626967696C457369;
  switch(a1)
  {
    case 1:
    case 6:
      unint64_t result = 0x6E4964656B636F6CLL;
      break;
    case 2:
      unint64_t result = 0x64656B636F4C7369;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x6564726F65527369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DEC04()
{
  return sub_1DEB08(*v0);
}

uint64_t sub_1DEC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF700(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEC34(uint64_t a1)
{
  unint64_t v2 = sub_1DF344();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DEC70(uint64_t a1)
{
  unint64_t v2 = sub_1DF344();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t OnDevicePersonalizationPropertyData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3231D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v20 = *(unsigned __int8 *)(v1 + 17);
  int v21 = v8;
  int v9 = *(unsigned __int8 *)(v1 + 18);
  int v18 = *(unsigned __int8 *)(v1 + 19);
  int v19 = v9;
  v17[1] = *(unsigned int *)(v1 + 20);
  char v10 = *(unsigned char *)(v1 + 24);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  sub_5900(v12, v11);
  sub_1DF344();
  sub_27E440();
  char v30 = 0;
  sub_27E300();
  if (!v2)
  {
    char v15 = v20;
    char v29 = 1;
    sub_27E310();
    char v28 = 2;
    sub_27E300();
    char v27 = v15;
    char v26 = 3;
    sub_1DF398();
    sub_27E330();
    char v25 = 4;
    sub_27E2A0();
    char v24 = 5;
    sub_27E2A0();
    char v23 = 6;
    char v22 = v10;
    sub_27E2D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t OnDevicePersonalizationPropertyData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3231F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1DF344();
  sub_27E430();
  if (!v2)
  {
    char v26 = 0;
    char v9 = sub_27E230();
    char v25 = 1;
    sub_27E240();
    uint64_t v11 = v10;
    char v24 = 2;
    char v12 = sub_27E230();
    char v22 = 3;
    sub_1DF3EC();
    sub_27E260();
    int v18 = v23;
    char v21 = 4;
    int v17 = sub_27E1D0();
    char v20 = 5;
    int v16 = sub_27E1D0();
    char v19 = 6;
    uint64_t v14 = sub_27E200();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v12 & 1;
    *(unsigned char *)(a2 + 17) = v18;
    *(unsigned char *)(a2 + 18) = v17;
    *(unsigned char *)(a2 + 19) = v16;
    *(_DWORD *)(a2 + 20) = v14;
    *(unsigned char *)(a2 + 24) = BYTE4(v14) & 1;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1DF1F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OnDevicePersonalizationPropertyData.init(from:)(a1, a2);
}

uint64_t sub_1DF210(void *a1)
{
  return OnDevicePersonalizationPropertyData.encode(to:)(a1);
}

BOOL _s13BookAnalytics35OnDevicePersonalizationPropertyDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (*a1 == *a2 && *((double *)a1 + 1) == *((double *)a2 + 1) && ((a1[16] ^ a2[16]) & 1) == 0)
  {
    int v4 = a1[18];
    int v5 = a1[19];
    int v6 = *((_DWORD *)a1 + 5);
    unsigned __int8 v7 = a1[24];
    int v8 = a2[18];
    int v9 = a2[19];
    int v10 = *((_DWORD *)a2 + 5);
    char v11 = a2[24];
    if ((sub_2D944(a1[17], a2[17]) & 1) == 0) {
      return 0;
    }
    if (v4 == 2)
    {
      if (v8 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v8 == 2 || ((((v4 & 1) == 0) ^ v8) & 1) == 0) {
        return result;
      }
    }
    if (v5 == 2)
    {
      if (v9 != 2) {
        return 0;
      }
      goto LABEL_15;
    }
    BOOL result = 0;
    if (v9 != 2 && ((((v5 & 1) == 0) ^ v9) & 1) != 0)
    {
LABEL_15:
      if ((v7 & 1) == 0)
      {
        if (v6 == v10) {
          char v12 = v11;
        }
        else {
          char v12 = 1;
        }
        return (v12 & 1) == 0;
      }
      return (v11 & 1) != 0;
    }
  }
  return result;
}

unint64_t sub_1DF344()
{
  unint64_t result = qword_3231E0;
  if (!qword_3231E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231E0);
  }
  return result;
}

unint64_t sub_1DF398()
{
  unint64_t result = qword_3231E8;
  if (!qword_3231E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231E8);
  }
  return result;
}

unint64_t sub_1DF3EC()
{
  unint64_t result = qword_3231F8;
  if (!qword_3231F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3231F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OnDevicePersonalizationPropertyData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[25]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDevicePersonalizationPropertyData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDevicePersonalizationPropertyData()
{
  return &type metadata for OnDevicePersonalizationPropertyData;
}

unsigned char *storeEnumTagSinglePayload for OnDevicePersonalizationPropertyData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF5C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDevicePersonalizationPropertyData.CodingKeys()
{
  return &type metadata for OnDevicePersonalizationPropertyData.CodingKeys;
}

unint64_t sub_1DF5FC()
{
  unint64_t result = qword_323200;
  if (!qword_323200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323200);
  }
  return result;
}

unint64_t sub_1DF654()
{
  unint64_t result = qword_323208;
  if (!qword_323208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323208);
  }
  return result;
}

unint64_t sub_1DF6AC()
{
  unint64_t result = qword_323210;
  if (!qword_323210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323210);
  }
  return result;
}

uint64_t sub_1DF700(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x626967696C457369 && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E4964656B636F6CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656B636F4C7369 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000000002B1790 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002B17C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6564726F65527369 && a2 == 0xEB00000000646572 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E4964656B636F6CLL && a2 == 0xED0000746E756F43)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void __swiftcall ThemesData.init(previousThemeName:themeName:isCustomized:)(BookAnalytics::ThemesData *__return_ptr retstr, Swift::String_optional previousThemeName, Swift::String themeName, Swift::Bool_optional isCustomized)
{
  retstr->previousThemeName = previousThemeName;
  retstr->themeName = themeName;
  retstr->isCustomized = isCustomized;
}

unint64_t sub_1DFA28()
{
  uint64_t v1 = 0x6D614E656D656874;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D6F747375437369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1DFA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E0480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DFABC(uint64_t a1)
{
  unint64_t v2 = sub_1E006C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1DFAF8(uint64_t a1)
{
  unint64_t v2 = sub_1E006C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ThemesData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_323218);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  int v11 = *(unsigned __int8 *)(v1 + 32);
  sub_5900(a1, a1[3]);
  sub_1E006C();
  sub_27E440();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_27E290();
  if (!v8)
  {
    char v13 = 1;
    sub_27E2F0();
    char v12 = 2;
    sub_27E2A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ThemesData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323228);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1E006C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v21 = 0;
    uint64_t v9 = sub_27E1C0();
    uint64_t v12 = v11;
    uint64_t v18 = v9;
    char v20 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v17 = v13;
    char v19 = 2;
    swift_bridgeObjectRetain();
    char v16 = sub_27E1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v18;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 32) = v16;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DFF54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ThemesData.init(from:)(a1, a2);
}

uint64_t sub_1DFF6C(void *a1)
{
  return ThemesData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics10ThemesDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  if (!v3)
  {
    if (!v7) {
      goto LABEL_10;
    }
    return 0;
  }
  if (!v7) {
    return 0;
  }
  BOOL v11 = *(void *)a1 == *(void *)a2 && v3 == v7;
  if (v11 || (v12 = sub_27E370(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if (v4 != v8 || v5 != v9)
    {
      char v15 = sub_27E370();
      uint64_t result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
    if (v6 == 2)
    {
      if (v10 != 2) {
        return 0;
      }
    }
    else if (v10 == 2 || ((((v6 & 1) == 0) ^ v10) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_1E006C()
{
  unint64_t result = qword_323220;
  if (!qword_323220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323220);
  }
  return result;
}

uint64_t initializeWithCopy for ThemesData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThemesData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ThemesData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemesData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThemesData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemesData()
{
  return &type metadata for ThemesData;
}

unsigned char *storeEnumTagSinglePayload for ThemesData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E0340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemesData.CodingKeys()
{
  return &type metadata for ThemesData.CodingKeys;
}

unint64_t sub_1E037C()
{
  unint64_t result = qword_323230;
  if (!qword_323230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323230);
  }
  return result;
}

unint64_t sub_1E03D4()
{
  unint64_t result = qword_323238;
  if (!qword_323238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323238);
  }
  return result;
}

unint64_t sub_1E042C()
{
  unint64_t result = qword_323240;
  if (!qword_323240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323240);
  }
  return result;
}

uint64_t sub_1E0480(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B17E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E656D656874 && a2 == 0xE900000000000065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F747375437369 && a2 == 0xEC00000064657A69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1E05F8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_323248, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingFontSizeChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323248, a1);
}

uint64_t sub_1E0658(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_323260, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingFontSizeChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323260, a1);
}

uint64_t ReadingFontSizeChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingFontSizeChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_323300);
}

uint64_t ReadingFontSizeChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontSizeChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontSizeChangeEvent.fontSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_323278);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingFontSizeChangeEvent.fontSizeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_323278);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontSizeChangeEvent.fontSizeData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontSizeChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingFontSizeChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingFontSizeChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingFontSizeChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingFontSizeChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  BOOL v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

float ReadingFontSizeChangeEvent.Model.fontSizeData.getter@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + 112);
  *a1 = result;
  return result;
}

uint64_t ReadingFontSizeChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingFontSizeChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3233A0);
}

uint64_t ReadingFontSizeChangeEvent.Model.init(readingSessionData:contentData:fontSizeData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, int *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  int v25 = *a3;
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(_DWORD *)(a5 + 112) = v25;
  uint64_t v26 = a5 + *(int *)(type metadata accessor for ReadingFontSizeChangeEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_1E0DBC()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x657A6953746E6F66;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E0E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E327C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E0E8C(uint64_t a1)
{
  unint64_t v2 = sub_1E11C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E0EC8(uint64_t a1)
{
  unint64_t v2 = sub_1E11C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingFontSizeChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_323280);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1E11C0();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  LODWORD(v28) = v10;
  BYTE4(v28) = v11;
  BYTE5(v28) = v12;
  BYTE6(v28) = v13;
  char v41 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = v14;
    char v29 = v15;
    long long v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    __int16 v33 = v19;
    int v34 = v20;
    char v35 = v21;
    int v36 = v22;
    char v37 = v23;
    int v38 = *(_DWORD *)(v3 + 89);
    char v39 = v24;
    long long v40 = *(_OWORD *)(v3 + 96);
    char v41 = 1;
    sub_1A1D4();
    sub_27E330();
    LODWORD(v27) = *(_DWORD *)(v3 + 112);
    char v41 = 2;
    sub_1E1214();
    sub_27E330();
    type metadata accessor for ReadingFontSizeChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1E11C0()
{
  unint64_t result = qword_323288;
  if (!qword_323288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323288);
  }
  return result;
}

unint64_t sub_1E1214()
{
  unint64_t result = qword_323290;
  if (!qword_323290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323290);
  }
  return result;
}

uint64_t ReadingFontSizeChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_323298);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingFontSizeChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v44 = a1;
  sub_5900(a1, v12);
  sub_1E11C0();
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v42;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v43;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v46);
  int v19 = v47;
  char v20 = BYTE4(v47);
  char v21 = BYTE5(v47);
  char v22 = BYTE6(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v46;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = v47;
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v39[1] = v28;
  v39[2] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_1E16CC();
  sub_27E260();
  *(_DWORD *)(v23 + 112) = v46;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v23 + *(int *)(v45 + 28), v15, v3);
  sub_1E1720(v23, v41);
  sub_5E94((uint64_t)v44);
  return sub_1E1784(v23);
}

unint64_t sub_1E16CC()
{
  unint64_t result = qword_3232A0;
  if (!qword_3232A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3232A0);
  }
  return result;
}

uint64_t sub_1E1720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingFontSizeChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E1784(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingFontSizeChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E17E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingFontSizeChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1E17F8(void *a1)
{
  return ReadingFontSizeChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1E1810@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323248, a1);
}

uint64_t sub_1E1848@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323260, a1);
}

uint64_t sub_1E1880@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingFontSizeChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_323278);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingFontSizeChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_323278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E2260);
}

uint64_t sub_1E2260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_323278);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingFontSizeChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E241C);
}

uint64_t sub_1E241C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_323278);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1E25D0()
{
  sub_1E27B8(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_1E27B8(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_1E27B8(319, (unint64_t *)&unk_323310, (void (*)(void))sub_1E16CC, (void (*)(void))sub_1E1214);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1E27B8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 7) = *(uint64_t *)((char *)a2 + 7);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v7;
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 76) = *((_DWORD *)a2 + 19);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_DWORD *)(a1 + 89) = *(_DWORD *)((char *)a2 + 89);
    *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
    uint64_t v8 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = a1 + v9;
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t initializeWithCopy for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

uint64_t assignWithCopy for ReadingFontSizeChangeEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = a2[28];
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 7) = *(void *)(a2 + 7);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E2E54);
}

uint64_t sub_1E2E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingFontSizeChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E2F18);
}

uint64_t sub_1E2F18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E2FC0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingFontSizeChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E313CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingFontSizeChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingFontSizeChangeEvent.Model.CodingKeys;
}

unint64_t sub_1E3178()
{
  unint64_t result = qword_3233E0;
  if (!qword_3233E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3233E0);
  }
  return result;
}

unint64_t sub_1E31D0()
{
  unint64_t result = qword_3233E8;
  if (!qword_3233E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3233E8);
  }
  return result;
}

unint64_t sub_1E3228()
{
  unint64_t result = qword_3233F0;
  if (!qword_3233F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3233F0);
  }
  return result;
}

uint64_t sub_1E327C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A6953746E6F66 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1E3470(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3233F8, &enum case for SessionGroup.default(_:));
}

uint64_t static ShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3233F8, a1);
}

uint64_t sub_1E34D0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_323410, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315B98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323410, a1);
}

uint64_t ShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323428);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3234A0);
}

uint64_t ShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323428);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.shareContextData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ShareEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t ShareEvent.Model.shareContextData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  *a1 = *(void *)(v1 + 96);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_323540);
}

uint64_t ShareEvent.Model.init(contentData:shareContextData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  long long v16 = *a2;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 96) = v16;
  uint64_t v17 = a4 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 24);
  uint64_t v18 = sub_27D7C0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);

  return v19(v17, a3, v18);
}

uint64_t sub_1E3A84()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_1E3AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E5ADC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E3B18(uint64_t a1)
{
  unint64_t v2 = sub_1E3DE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E3B54(uint64_t a1)
{
  unint64_t v2 = sub_1E3DE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShareEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_323430);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1E3DE4();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v24 = *(void *)v4;
  *((void *)&v24 + 1) = v10;
  char v25 = v11;
  long long v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)(v4 + 73);
  char v35 = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v23 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    long long v24 = *(_OWORD *)(v4 + 96);
    char v23 = 1;
    sub_157E30();
    sub_27E2C0();
    type metadata accessor for ShareEvent.Model(0);
    LOBYTE(v24) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1E3DE4()
{
  unint64_t result = qword_323438;
  if (!qword_323438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323438);
  }
  return result;
}

uint64_t ShareEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_323440);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ShareEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v34 = a1;
  sub_5900(a1, v13);
  sub_1E3DE4();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = v32;
  __int16 v15 = v6;
  char v48 = 0;
  sub_1A98C();
  uint64_t v16 = v33;
  sub_27E260();
  uint64_t v17 = *((void *)&v35 + 1);
  char v18 = v36;
  long long v19 = v37;
  uint64_t v20 = v38;
  uint64_t v21 = v39;
  __int16 v22 = v40;
  int v23 = v41;
  char v24 = v42;
  int v25 = v43;
  char v26 = v44;
  char v27 = v46;
  *(void *)long long v12 = v35;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v45;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v47;
  char v48 = 1;
  sub_157DD8();
  sub_27E1F0();
  *((_OWORD *)v12 + 6) = v35;
  LOBYTE(v35) = 2;
  sub_1AB30(&qword_315E28);
  __int16 v29 = v15;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v10 + 24)], v29, v4);
  sub_1E4248((uint64_t)v12, v31);
  sub_5E94((uint64_t)v34);
  return sub_1E42AC((uint64_t)v12);
}

uint64_t sub_1E4248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E42AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E4308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1E4320(void *a1)
{
  return ShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1E4338@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3233F8, a1);
}

uint64_t sub_1E4370@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315B98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323410, a1);
}

uint64_t sub_1E43A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v4, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_323428);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ShareEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E4B94);
}

uint64_t sub_1E4B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_323428);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E4D00);
}

uint64_t sub_1E4D00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_323428);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1E4E64()
{
  sub_1E4FD8(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1E4FD8(319, (unint64_t *)&unk_3234B0, (void (*)(void))sub_157DD8, (void (*)(void))sub_157E30);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1E4FD8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ShareEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = a2[13];
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v17 = (uint64_t)a2 + v11;
    uint64_t v12 = a1 + v11;
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v17, v13);
  }
  return v3;
}

uint64_t destroy for ShareEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v15 = a2 + v10;
  uint64_t v11 = a1 + v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v15, v12);
  return a1;
}

uint64_t assignWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for ShareEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[6] = a2[6];
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E56C4);
}

uint64_t sub_1E56C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E5788);
}

uint64_t sub_1E5788(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E5830()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E599CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareEvent.Model.CodingKeys()
{
  return &type metadata for ShareEvent.Model.CodingKeys;
}

unint64_t sub_1E59D8()
{
  unint64_t result = qword_323580;
  if (!qword_323580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323580);
  }
  return result;
}

unint64_t sub_1E5A30()
{
  unint64_t result = qword_323588;
  if (!qword_323588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323588);
  }
  return result;
}

unint64_t sub_1E5A88()
{
  unint64_t result = qword_323590;
  if (!qword_323590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323590);
  }
  return result;
}

uint64_t sub_1E5ADC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1800 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1E5C50(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_323598, &enum case for SessionGroup.default(_:));
}

uint64_t static PurchaseAttemptEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323598, a1);
}

uint64_t sub_1E5CB0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3235B0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PurchaseAttemptEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3235B0, a1);
}

uint64_t PurchaseAttemptEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseAttemptEvent(uint64_t a1)
{
  return sub_5338(a1, qword_323638);
}

uint64_t PurchaseAttemptEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.contentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.contentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_3184D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.contentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.prevAltContentExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.prevAltContentExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_3184E0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.prevAltContentExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_3184E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.purchaseData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.uppParentContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.uppParentContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_3184F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.uppParentContentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PurchaseAttemptEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent(0) + 56);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PurchaseAttemptEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PurchaseAttemptEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3184C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PurchaseAttemptEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_3184D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_3184E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_3184E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v6, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_3184F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  uint64_t v25 = sub_4E04(&qword_315DE0);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v6, v25);
}

uint64_t PurchaseAttemptEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseAttemptEvent.Model(0) + 56);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseAttemptEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3236F0);
}

uint64_t PurchaseAttemptEvent.Model.init(altContentTypeExposureData:contentData:contentStoreData:contentExposureData:prevAltContentExposureData:purchaseData:upSellData:seriesData:suggestionData:uppParentContentData:eventData:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, _WORD *a5@<X4>, uint64_t a6@<X5>, long long *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, unsigned char *a10, uint64_t a11, uint64_t a12)
{
  long long v12 = *a1;
  long long v13 = a1[1];
  long long v14 = a1[2];
  char v15 = *((unsigned char *)a1 + 56);
  *(void *)(a9 + 48) = *((void *)a1 + 6);
  *(unsigned char *)(a9 + 56) = v15;
  uint64_t v16 = *(void *)(a2 + 8);
  *(void *)(a9 + 64) = *(void *)a2;
  *(void *)(a9 + 72) = v16;
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 48);
  *(void *)(a9 + 104) = *(void *)(a2 + 40);
  *(void *)(a9 + 112) = v17;
  long long v18 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a9 + 120) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a9 + 124) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a9 + 132) = *(_DWORD *)(a2 + 68);
  char v19 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)a9 = v12;
  *(_OWORD *)(a9 + 16) = v13;
  *(_OWORD *)(a9 + 32) = v14;
  *(_OWORD *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 136) = v19;
  *(_DWORD *)(a9 + 137) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a9 + 141) = *(unsigned char *)(a2 + 77);
  long long v20 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a9 + 228) = *((unsigned char *)a3 + 68);
  long long v21 = *a3;
  long long v22 = a3[1];
  long long v23 = a3[2];
  long long v24 = a3[3];
  *(_DWORD *)(a9 + 224) = *((_DWORD *)a3 + 16);
  *(_WORD *)(a9 + 348) = *((_WORD *)a4 + 58);
  long long v25 = *a4;
  long long v26 = a4[1];
  long long v27 = a4[2];
  long long v28 = a4[3];
  long long v29 = a4[4];
  long long v30 = a4[5];
  long long v31 = a4[6];
  LOWORD(v17) = *a5;
  *(_DWORD *)(a9 + 344) = *((_DWORD *)a4 + 28);
  *(_WORD *)(a9 + 350) = v17;
  uint64_t v32 = *(void *)(a6 + 8);
  *(void *)(a9 + 352) = *(void *)a6;
  *(void *)(a9 + 360) = v32;
  *(unsigned char *)(a9 + 368) = *(unsigned char *)(a6 + 16);
  *(unsigned char *)(a9 + 369) = *(unsigned char *)(a6 + 17);
  uint64_t v33 = *(void *)(a6 + 32);
  *(void *)(a9 + 376) = *(void *)(a6 + 24);
  *(void *)(a9 + 384) = v33;
  long long v34 = *a7;
  *(void *)(a9 + 408) = *((void *)a7 + 2);
  *(_OWORD *)(a9 + 264) = v27;
  *(_OWORD *)(a9 + 280) = v28;
  *(_OWORD *)(a9 + 296) = v29;
  *(_OWORD *)(a9 + 312) = v30;
  *(_OWORD *)(a9 + 328) = v31;
  *(_OWORD *)(a9 + 392) = v34;
  long long v35 = *(_OWORD *)(a11 + 16);
  long long v36 = *(_OWORD *)(a11 + 32);
  *(_OWORD *)(a9 + 472) = *(_OWORD *)a11;
  *(_OWORD *)(a9 + 488) = v35;
  *(_OWORD *)(a9 + 504) = v36;
  long long v37 = *a8;
  long long v38 = a8[1];
  long long v39 = a8[2];
  *(unsigned char *)(a9 + 464) = *a10;
  *(unsigned char *)(a9 + 520) = *(unsigned char *)(a11 + 48);
  *(_OWORD *)(a9 + 144) = v20;
  *(_OWORD *)(a9 + 160) = v21;
  *(_OWORD *)(a9 + 176) = v22;
  *(_OWORD *)(a9 + 192) = v23;
  *(_OWORD *)(a9 + 208) = v24;
  *(_OWORD *)(a9 + 232) = v25;
  *(_OWORD *)(a9 + 248) = v26;
  *(_OWORD *)(a9 + 416) = v37;
  *(_OWORD *)(a9 + 432) = v38;
  *(_OWORD *)(a9 + 448) = v39;
  uint64_t v40 = a9 + *(int *)(type metadata accessor for PurchaseAttemptEvent.Model(0) + 56);
  uint64_t v41 = sub_27D7C0();
  char v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);

  return v42(v40, a12, v41);
}

uint64_t sub_1E6F78(char a1)
{
  uint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x6573616863727570;
      break;
    case 6:
      uint64_t v3 = 0x6C6C65537075;
      goto LABEL_8;
    case 7:
      uint64_t v3 = 0x736569726573;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 8:
      uint64_t result = 0x6974736567677573;
      break;
    case 9:
      uint64_t result = 0xD000000000000014;
      break;
    case 10:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E70D4()
{
  return sub_1E6F78(*v0);
}

uint64_t sub_1E70DC(uint64_t a1)
{
  unint64_t v2 = sub_1E7640();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E7118(uint64_t a1)
{
  unint64_t v2 = sub_1E7640();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PurchaseAttemptEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3235C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_1E7640();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 6);
  char v10 = *((unsigned char *)v3 + 56);
  long long v11 = v3[1];
  long long v42 = *v3;
  *(_OWORD *)int v43 = v11;
  *(_OWORD *)&v43[16] = v3[2];
  *(void *)&long long v44 = v9;
  BYTE8(v44) = v10;
  char v50 = 0;
  sub_6C3AC();
  sub_27E2C0();
  if (!v2)
  {
    uint64_t v12 = *((void *)v3 + 9);
    char v13 = *((unsigned char *)v3 + 80);
    long long v14 = *(long long *)((char *)v3 + 88);
    uint64_t v15 = *((void *)v3 + 13);
    uint64_t v16 = *((void *)v3 + 14);
    __int16 v17 = *((_WORD *)v3 + 60);
    int v18 = *((_DWORD *)v3 + 31);
    char v19 = *((unsigned char *)v3 + 128);
    int v20 = *((_DWORD *)v3 + 33);
    char v21 = *((unsigned char *)v3 + 136);
    uint64_t v22 = *((unsigned __int8 *)v3 + 141);
    *(void *)&long long v42 = *((void *)v3 + 8);
    *((void *)&v42 + 1) = v12;
    v43[0] = v13;
    *(_OWORD *)&v43[8] = v14;
    *(void *)&v43[24] = v15;
    *(void *)&long long v44 = v16;
    WORD4(v44) = v17;
    HIDWORD(v44) = v18;
    LOBYTE(v45) = v19;
    DWORD1(v45) = v20;
    BYTE8(v45) = v21;
    *(_DWORD *)((char *)&v45 + 9) = *(_DWORD *)((char *)v3 + 137);
    BYTE13(v45) = v22;
    long long v46 = v3[9];
    char v50 = 1;
    sub_1A1D4();
    sub_27E330();
    int v23 = *((_DWORD *)v3 + 56);
    char v24 = *((unsigned char *)v3 + 228);
    long long v25 = v3[11];
    long long v42 = v3[10];
    *(_OWORD *)int v43 = v25;
    long long v26 = v3[13];
    *(_OWORD *)&v43[16] = v3[12];
    long long v44 = v26;
    BYTE4(v45) = v24;
    LODWORD(v45) = v23;
    char v50 = 2;
    sub_6C400();
    sub_27E2C0();
    int v27 = *((_DWORD *)v3 + 86);
    __int16 v28 = *((_WORD *)v3 + 174);
    long long v29 = *(long long *)((char *)v3 + 248);
    long long v42 = *(long long *)((char *)v3 + 232);
    *(_OWORD *)int v43 = v29;
    long long v30 = *(long long *)((char *)v3 + 280);
    *(_OWORD *)&v43[16] = *(long long *)((char *)v3 + 264);
    long long v44 = v30;
    long long v31 = *(long long *)((char *)v3 + 312);
    long long v45 = *(long long *)((char *)v3 + 296);
    long long v46 = v31;
    long long v47 = *(long long *)((char *)v3 + 328);
    __int16 v49 = v28;
    int v48 = v27;
    char v50 = 3;
    sub_6C454();
    sub_27E2C0();
    LOWORD(v42) = *((_WORD *)v3 + 175);
    char v50 = 4;
    sub_6C4A8();
    sub_27E2C0();
    uint64_t v32 = *((void *)v3 + 45);
    char v33 = *((unsigned char *)v3 + 368);
    char v34 = *((unsigned char *)v3 + 369);
    uint64_t v35 = *((void *)v3 + 47);
    uint64_t v36 = *((void *)v3 + 48);
    *(void *)&long long v42 = *((void *)v3 + 44);
    *((void *)&v42 + 1) = v32;
    v43[0] = v33;
    v43[1] = v34;
    *(void *)&v43[8] = v35;
    *(void *)&v43[16] = v36;
    char v50 = 5;
    sub_3E3E0();
    sub_27E330();
    uint64_t v37 = *((void *)v3 + 51);
    long long v42 = *(long long *)((char *)v3 + 392);
    *(void *)int v43 = v37;
    char v50 = 6;
    sub_36A74();
    sub_27E2C0();
    long long v38 = v3[27];
    long long v42 = v3[26];
    *(_OWORD *)int v43 = v38;
    *(_OWORD *)&v43[16] = v3[28];
    char v50 = 7;
    sub_11514();
    sub_27E2C0();
    LOBYTE(v42) = *((unsigned char *)v3 + 464);
    char v50 = 8;
    sub_36B1C();
    sub_27E2C0();
    char v39 = *((unsigned char *)v3 + 520);
    long long v40 = *(long long *)((char *)v3 + 488);
    long long v42 = *(long long *)((char *)v3 + 472);
    *(_OWORD *)int v43 = v40;
    *(_OWORD *)&v43[16] = *(long long *)((char *)v3 + 504);
    LOBYTE(v44) = v39;
    char v50 = 9;
    sub_6C4FC();
    sub_27E2C0();
    type metadata accessor for PurchaseAttemptEvent.Model(0);
    LOBYTE(v42) = 10;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1E7640()
{
  unint64_t result = qword_3235D0;
  if (!qword_3235D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3235D0);
  }
  return result;
}

uint64_t PurchaseAttemptEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_4E04(&qword_3235D8);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PurchaseAttemptEvent.Model(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v11 + 264;
  uint64_t v62 = (uint64_t)a1;
  sub_5900(a1, a1[3]);
  sub_1E7640();
  char v59 = v8;
  sub_27E430();
  if (v2)
  {
    uint64_t v63 = v2;
    int v13 = 0;
    uint64_t result = sub_5E94(v62);
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
  }
  else
  {
    int v54 = v6;
    uint64_t v55 = v4;
    uint64_t v12 = v58;
    char v72 = 0;
    sub_6D014();
    sub_27E1F0();
    uint64_t v19 = v66;
    char v20 = BYTE8(v66);
    long long v21 = *(_OWORD *)v65;
    *(_OWORD *)long long v11 = v64;
    *((_OWORD *)v11 + 1) = v21;
    *((_OWORD *)v11 + 2) = *(_OWORD *)&v65[16];
    *((void *)v11 + 6) = v19;
    v11[56] = v20;
    char v72 = 1;
    sub_1A98C();
    sub_27E260();
    uint64_t v22 = *((void *)&v64 + 1);
    char v23 = v65[0];
    long long v24 = *(_OWORD *)&v65[8];
    uint64_t v25 = *(void *)&v65[24];
    uint64_t v26 = v66;
    __int16 v27 = WORD4(v66);
    int v28 = HIDWORD(v66);
    char v29 = v67;
    int v30 = DWORD1(v67);
    char v31 = BYTE8(v67);
    char v32 = BYTE13(v67);
    *((void *)v11 + 8) = v64;
    *((void *)v11 + 9) = v22;
    v11[80] = v23;
    *(_OWORD *)(v11 + 88) = v24;
    *((void *)v11 + 13) = v25;
    *((void *)v11 + 14) = v26;
    *((_WORD *)v11 + 60) = v27;
    *((_DWORD *)v11 + 31) = v28;
    v11[128] = v29;
    *((_DWORD *)v11 + 33) = v30;
    v11[136] = v31;
    *(_DWORD *)(v11 + 137) = *(_DWORD *)((char *)&v67 + 9);
    v11[141] = v32;
    *((_OWORD *)v11 + 9) = v68;
    char v72 = 2;
    sub_6D068();
    sub_27E1F0();
    int v33 = v67;
    char v34 = BYTE4(v67);
    long long v35 = *(_OWORD *)v65;
    *((_OWORD *)v11 + 10) = v64;
    *((_OWORD *)v11 + 11) = v35;
    long long v36 = v66;
    *((_OWORD *)v11 + 12) = *(_OWORD *)&v65[16];
    *((_OWORD *)v11 + 13) = v36;
    v11[228] = v34;
    *((_DWORD *)v11 + 56) = v33;
    char v72 = 3;
    sub_6D0BC();
    sub_27E1F0();
    int v37 = v70;
    __int16 v38 = v71;
    long long v39 = *(_OWORD *)v65;
    *(_OWORD *)(v11 + 232) = v64;
    *(_OWORD *)(v11 + 248) = v39;
    long long v40 = v66;
    uint64_t v41 = v61;
    *uint64_t v61 = *(_OWORD *)&v65[16];
    v41[1] = v40;
    long long v42 = v68;
    v41[2] = v67;
    v41[3] = v42;
    v41[4] = v69;
    *((_WORD *)v41 + 42) = v38;
    *((_DWORD *)v41 + 20) = v37;
    char v72 = 4;
    sub_6D110();
    sub_27E1F0();
    *((_WORD *)v11 + 175) = v64;
    char v72 = 5;
    sub_3E388();
    sub_27E260();
    uint64_t v43 = *((void *)&v64 + 1);
    char v44 = v65[0];
    char v45 = v65[1];
    uint64_t v46 = *(void *)&v65[8];
    uint64_t v47 = *(void *)&v65[16];
    *((void *)v11 + 44) = v64;
    *((void *)v11 + 45) = v43;
    v11[368] = v44;
    v11[369] = v45;
    *((void *)v11 + 47) = v46;
    *((void *)v11 + 48) = v47;
    char v72 = 6;
    sub_37744();
    sub_27E1F0();
    uint64_t v48 = *(void *)v65;
    v61[8] = v64;
    *((void *)v11 + 51) = v48;
    char v72 = 7;
    sub_11A3C();
    sub_27E1F0();
    int v17 = 1;
    long long v49 = *(_OWORD *)v65;
    *((_OWORD *)v11 + 26) = v64;
    *((_OWORD *)v11 + 27) = v49;
    *((_OWORD *)v11 + 28) = *(_OWORD *)&v65[16];
    char v72 = 8;
    sub_377EC();
    sub_27E1F0();
    v11[464] = v64;
    char v72 = 9;
    sub_6D164();
    sub_27E1F0();
    uint64_t v63 = 0;
    char v50 = v66;
    long long v51 = *(_OWORD *)v65;
    uint64_t v52 = v61;
    v61[13] = v64;
    v52[14] = v51;
    v52[15] = *(_OWORD *)&v65[16];
    v11[520] = v50;
    LOBYTE(v64) = 10;
    sub_1AB30(&qword_315E28);
    uint64_t v53 = v63;
    sub_27E260();
    uint64_t v63 = v53;
    if (!v53)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v59, v60);
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v11[*(int *)(v9 + 56)], v54, v55);
      sub_1E7FD0((uint64_t)v11, v57);
      sub_5E94(v62);
      return sub_1E8034((uint64_t)v11);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v59, v60);
    int v16 = 1;
    sub_5E94(v62);
    int v13 = 1;
    int v18 = 1;
    sub_6CFC4(*(void *)v11, *((void *)v11 + 1));
    LODWORD(v62) = 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v15 = 1;
    uint64_t result = swift_bridgeObjectRelease();
    if (v62)
    {
      sub_6CF60(*((void *)v11 + 20), *((void *)v11 + 21), *((void *)v11 + 22), *((void *)v11 + 23), *((void *)v11 + 24), *((void *)v11 + 25));
      goto LABEL_12;
    }
  }
  if (!v15)
  {
    if (!v13) {
      goto LABEL_13;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_14;
    }
LABEL_7:
    if (!v17) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
LABEL_12:
  uint64_t result = sub_6CEDC(*((void *)v11 + 29), *((void *)v11 + 30));
  if (v13) {
    goto LABEL_6;
  }
LABEL_13:
  if (!v18) {
    goto LABEL_7;
  }
LABEL_14:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_15:
    if (!v16) {
      return result;
    }
    return sub_6CE8C(*((void *)v11 + 59), *((void *)v11 + 60));
  }
LABEL_8:
  uint64_t result = sub_1A978(*((void *)v11 + 52), *((void *)v11 + 53), *((void *)v11 + 54), *((void *)v11 + 55), *((void *)v11 + 56), *((void *)v11 + 57));
  if ((v16 & 1) == 0) {
    return result;
  }
  return sub_6CE8C(*((void *)v11 + 59), *((void *)v11 + 60));
}

uint64_t sub_1E7FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E8034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E8090@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseAttemptEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1E80A8(void *a1)
{
  return PurchaseAttemptEvent.Model.encode(to:)(a1);
}

uint64_t sub_1E80C0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323598, a1);
}

uint64_t sub_1E80F8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3235B0, a1);
}

uint64_t getEnumTagSinglePayload for PurchaseAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E8144);
}

uint64_t sub_1E8144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3184C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  uint64_t v14 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  uint64_t v15 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  uint64_t v16 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_315DE0);
  long long v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for PurchaseAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E8530);
}

uint64_t sub_1E8530(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3184C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  uint64_t v16 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  uint64_t v17 = sub_4E04(&qword_3184D8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  uint64_t v18 = sub_4E04(&qword_3184E0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  uint64_t v19 = sub_4E04(&qword_3184E8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  uint64_t v20 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  uint64_t v22 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  uint64_t v23 = sub_4E04(&qword_3184F0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  uint64_t v25 = sub_4E04(&qword_315DE0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

uint64_t getEnumTagSinglePayload for PurchaseAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E8928);
}

uint64_t sub_1E8928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E89EC);
}

uint64_t sub_1E89EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E8A94()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PurchaseAttemptEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E8C50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseAttemptEvent.Model.CodingKeys()
{
  return &type metadata for PurchaseAttemptEvent.Model.CodingKeys;
}

unint64_t sub_1E8C8C()
{
  unint64_t result = qword_323750;
  if (!qword_323750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323750);
  }
  return result;
}

unint64_t sub_1E8CE4()
{
  unint64_t result = qword_323758;
  if (!qword_323758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323758);
  }
  return result;
}

unint64_t sub_1E8D3C()
{
  unint64_t result = qword_323760;
  if (!qword_323760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323760);
  }
  return result;
}

BookAnalytics::PurchaseFailureReason_optional __swiftcall PurchaseFailureReason.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F92C8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t PurchaseFailureReason.rawValue.getter()
{
  uint64_t v1 = 0x726F727265;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C65636E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1E8E44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2F758(*a1, *a2);
}

unint64_t sub_1E8E54()
{
  unint64_t result = qword_323768;
  if (!qword_323768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323768);
  }
  return result;
}

Swift::Int sub_1E8EA8()
{
  return sub_27E420();
}

uint64_t sub_1E8F48()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E8FD4()
{
  return sub_27E420();
}

BookAnalytics::PurchaseFailureReason_optional sub_1E9070(Swift::String *a1)
{
  return PurchaseFailureReason.init(rawValue:)(*a1);
}

void sub_1E907C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x726F727265;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C65636E6163;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1E90D8()
{
  return sub_27DED0();
}

uint64_t sub_1E9138()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for PurchaseFailureReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E9254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseFailureReason()
{
  return &type metadata for PurchaseFailureReason;
}

unint64_t sub_1E928C()
{
  unint64_t result = qword_323770;
  if (!qword_323770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323770);
  }
  return result;
}

BookAnalytics::ContentAcquisitionType_optional __swiftcall ContentAcquisitionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9330;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ContentAcquisitionType.rawValue.getter()
{
  uint64_t v1 = 0x756F4265726F7473;
  if (*v0 != 1) {
    uint64_t v1 = 0x65726F74536E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1E93AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_32FC4(*a1, *a2);
}

unint64_t sub_1E93BC()
{
  unint64_t result = qword_323778;
  if (!qword_323778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323778);
  }
  return result;
}

Swift::Int sub_1E9410()
{
  return sub_27E420();
}

uint64_t sub_1E94C8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E956C()
{
  return sub_27E420();
}

BookAnalytics::ContentAcquisitionType_optional sub_1E9620(Swift::String *a1)
{
  return ContentAcquisitionType.init(rawValue:)(*a1);
}

void sub_1E962C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEB00000000746867;
  uint64_t v5 = 0x756F4265726F7473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65726F74536E6F6ELL;
    unint64_t v4 = 0xEE00746867756F42;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1E96A0()
{
  return sub_27DED0();
}

uint64_t sub_1E9700()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ContentAcquisitionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E981CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentAcquisitionType()
{
  return &type metadata for ContentAcquisitionType;
}

unint64_t sub_1E9854()
{
  unint64_t result = qword_323780;
  if (!qword_323780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323780);
  }
  return result;
}

uint64_t sub_1E98A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DF30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_27DF20();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_ADCF8(a1, &qword_320350);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_27DF00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1E9A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DF30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_27DF20();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_ADCF8(a1, &qword_320350);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_27DF00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_4E04(&qword_323948);
  return swift_task_create();
}

uint64_t sub_1E9C08()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SessionActor.ActorType()
{
  return self;
}

uint64_t sub_1E9C5C()
{
  return v0;
}

uint64_t sub_1E9C68()
{
  type metadata accessor for SessionActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_323788 = v0;
  return result;
}

void *sub_1E9CA8()
{
  uint64_t v1 = v0;
  v0[2] = sub_1EA000();
  v0[3] = v2;
  v0[4] = &_swiftEmptyDictionarySingleton;
  if (qword_315668 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_27D9B0();
  sub_4BD4(v3, (uint64_t)qword_318790);
  swift_retain();
  unsigned int v4 = sub_27D990();
  os_log_type_t v5 = sub_27DF90();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = v1[2];
    unint64_t v8 = v1[3];
    swift_bridgeObjectRetain();
    sub_12D450(v7, v8, &v10);
    sub_27E050();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "file path: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  sub_1E9E74();
  return v1;
}

void sub_1E9E74()
{
  uint64_t v0 = self;
  swift_bridgeObjectRetain();
  id v7 = [v0 defaultManager];
  NSString v1 = sub_27DDA0();
  unsigned int v2 = [v7 fileExistsAtPath:v1];

  if (v2)
  {
    NSString v3 = sub_27DDA0();
    swift_bridgeObjectRelease();
    id v8 = 0;
    unsigned int v4 = [v7 removeItemAtPath:v3 error:&v8];

    if (v4)
    {
      id v5 = v8;
    }
    else
    {
      id v6 = v8;
      sub_27CF80();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1EA000()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v1 = sub_27DEF0();

  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8._object = (void *)0x80000000002B18E0;
    v8._countAndFlagsBits = 0xD000000000000016;
    uint64_t v2 = sub_27DDD0(v8);
    swift_bridgeObjectRelease();
    id v3 = [self defaultManager];
    NSString v4 = sub_27DDA0();
    unsigned __int8 v5 = [v3 fileExistsAtPath:v4];

    if ((v5 & 1) == 0)
    {
      NSString v6 = sub_27DDA0();
      [v3 createFileAtPath:v6 contents:0 attributes:0];
    }
    return v2;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1EA14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  if (qword_315BB0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_323788;
  return _swift_task_switch(sub_1EA1E4, v6, 0);
}

uint64_t sub_1EA1E4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = sub_27D6D0();
  uint64_t v4 = v3;
  uint64_t v5 = sub_27D6E0();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = 0x8000000000000000;
  sub_257E40(v5, v2, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 32) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1EA2D4()
{
  uint64_t v0 = self;
  Class isa = sub_27DD60().super.isa;
  id v31 = 0;
  id v2 = [v0 dataWithJSONObject:isa options:8 error:&v31];

  id v3 = v31;
  if (!v2)
  {
    uint64_t v11 = v3;
    sub_27CF80();

    swift_willThrow();
    if (qword_315668 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_27D9B0();
    sub_4BD4(v12, (uint64_t)qword_318790);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v13 = sub_27D990();
    os_log_type_t v14 = sub_27DFA0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      id v31 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_getErrorValue();
      uint64_t v16 = sub_27E3B0();
      sub_12D450(v16, v17, (uint64_t *)&v31);
      sub_27E050();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v13, v14, "error serializing json data: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
LABEL_18:
    swift_errorRelease();

    return;
  }
  uint64_t v4 = sub_27D010();
  unint64_t v6 = v5;

  swift_bridgeObjectRetain();
  sub_1EBE10(v4, v6);
  NSString v7 = sub_27DDA0();
  uint64_t v8 = self;
  id v9 = [v8 fileHandleForWritingAtPath:v7];

  if (v9)
  {
    swift_bridgeObjectRelease();
    id v10 = v9;
LABEL_10:
    id v22 = v9;
    sub_27DF80();
    Class v23 = sub_27D000().super.isa;
    sub_1EBDB8(v4, v6);
    [v10 writeData:v23];

    id v31 = 0;
    if ([v10 closeAndReturnError:&v31])
    {
      id v24 = v31;

      sub_1EBDB8(v4, v6);
      return;
    }
    id v25 = v31;
    sub_27CF80();

    swift_willThrow();
    if (qword_315668 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_27D9B0();
    sub_4BD4(v26, (uint64_t)qword_318790);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v13 = sub_27D990();
    os_log_type_t v27 = sub_27DFA0();
    if (os_log_type_enabled(v13, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      id v31 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      swift_getErrorValue();
      uint64_t v29 = sub_27E3B0();
      sub_12D450(v29, v30, (uint64_t *)&v31);
      sub_27E050();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v13, v27, "error while writing to disk: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_1EBDB8(v4, v6);

      swift_errorRelease();
      return;
    }

    sub_1EBDB8(v4, v6);
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_18;
  }
  id v18 = [self defaultManager];
  NSString v19 = sub_27DDA0();
  [v18 createFileAtPath:v19 contents:0 attributes:0];

  NSString v20 = sub_27DDA0();
  swift_bridgeObjectRelease();
  id v21 = [v8 fileHandleForWritingAtPath:v20];

  if (v21)
  {
    id v10 = v21;
    goto LABEL_10;
  }
  sub_1EBDB8(v4, v6);
  sub_1EBDB8(v4, v6);
}

uint64_t sub_1EA914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v5 = sub_27D2C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  id v9 = (char *)&v23 - v8;
  uint64_t v10 = sub_4E04(&qword_320350);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_27DF30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  uint64_t v14 = qword_315BB0;
  uint64_t v15 = v3;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_323788;
  unint64_t v17 = sub_1EB7A4();
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  NSString v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v16;
  *((void *)v20 + 3) = v17;
  uint64_t v21 = v24;
  *((void *)v20 + 4) = v23;
  *((void *)v20 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v20[v18], v9, v5);
  *(void *)&v20[v19] = v15;
  swift_retain();
  sub_1E98A8((uint64_t)v12, (uint64_t)&unk_323918, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1EAB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[89] = a7;
  v7[88] = a6;
  v7[87] = a5;
  v7[86] = a4;
  if (qword_315BB0 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_323788;
  return _swift_task_switch(sub_1EAC28, v8, 0);
}

uint64_t sub_1EAC28()
{
  sub_27D2C0();
  uint64_t v1 = (void *)sub_27D2A0();
  uint64_t v2 = sub_27D6A0();
  unint64_t v4 = v3;

  uint64_t v5 = self;
  Class isa = sub_27D000().super.isa;
  *(void *)(v0 + 664) = 0;
  id v7 = [v5 JSONObjectWithData:isa options:0 error:v0 + 664];

  uint64_t v8 = *(void **)(v0 + 664);
  if (v7)
  {
    id v9 = v8;
    sub_27E080();
    swift_unknownObjectRelease();
    sub_4E04(&qword_323930);
    if (swift_dynamicCast()) {
      unint64_t v10 = *(void *)(v0 + 680);
    }
    else {
      unint64_t v10 = sub_467C4((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_1EBDB8(v2, v4);
  }
  else
  {
    id v11 = v8;
    sub_27CF80();

    swift_willThrow();
    sub_1EBDB8(v2, v4);
    unint64_t v10 = sub_467C4((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
  *(void *)(v0 + 600) = 0x746144746E657665;
  *(void *)(v0 + 608) = 0xE900000000000061;
  sub_27E0D0();
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_E1A4(v0 + 336), (v13 & 1) != 0))
  {
    sub_46D80(*(void *)(v10 + 56) + 32 * v12, v0 + 416);
  }
  else
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  sub_E3F0(v0 + 336);
  if (!*(void *)(v0 + 440))
  {
    uint64_t v17 = v0 + 416;
LABEL_24:
    sub_ADCF8(v17, (uint64_t *)&unk_320320);
    goto LABEL_25;
  }
  sub_4E04(&qword_323930);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    uint64_t v24 = &_swiftEmptyDictionarySingleton;
    goto LABEL_26;
  }
  uint64_t v14 = *(void *)(v0 + 672);
  *(void *)(v0 + 616) = 0x496E6F6973736573;
  *(void *)(v0 + 624) = 0xE900000000000044;
  sub_27E0D0();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_E1A4(v0 + 376), (v16 & 1) != 0))
  {
    sub_46D80(*(void *)(v14 + 56) + 32 * v15, v0 + 448);
  }
  else
  {
    *(_OWORD *)(v0 + 448) = 0u;
    *(_OWORD *)(v0 + 464) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_E3F0(v0 + 376);
  if (!*(void *)(v0 + 472))
  {
    uint64_t v17 = v0 + 448;
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v0 + 696);
  uint64_t v19 = *(void *)(v0 + 632);
  uint64_t v20 = *(void *)(v0 + 640);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v18 + 32);
  if (*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_E12C(v19, v20);
    if (v23)
    {
      uint64_t v24 = *(void **)(*(void *)(v21 + 56) + 8 * v22);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_4668C((uint64_t)_swiftEmptyArrayStorage);
LABEL_26:
  uint64_t v25 = sub_27D2B0();
  uint64_t v27 = v26;
  *(void *)(v0 + 584) = v25;
  *(void *)(v0 + 592) = v26;
  sub_187820();
  if (sub_27DF60())
  {
    sub_4E04(&qword_323920);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2A0310;
    *(void *)(v0 + 568) = 1701667182;
    *(void *)(v0 + 576) = 0xE400000000000000;
    sub_27E0D0();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = v25;
    *(void *)(inited + 80) = v27;
    *(void *)(v0 + 536) = 1701869940;
    *(void *)(v0 + 544) = 0xE400000000000000;
    sub_27E0D0();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = 0x746E657665;
    *(void *)(inited + 152) = 0xE500000000000000;
    *(void *)(v0 + 648) = 0x446E6F6973736573;
    *(void *)(v0 + 656) = 0xEB00000000617461;
    sub_27E0D0();
    *(void *)(inited + 240) = sub_4E04(&qword_323928);
    *(void *)(inited + 216) = v24;
    *(void *)(v0 + 552) = 1635017060;
    *(void *)(v0 + 560) = 0xE400000000000000;
    sub_27E0D0();
    *(void *)(inited + 312) = sub_4E04(&qword_323930);
    *(void *)(inited + 288) = v10;
    sub_467C4(inited);
    sub_1EA2D4();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_1EB210()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for DebugEventProcessor()
{
  return self;
}

uint64_t sub_1EB278(uint64_t a1)
{
  return EventProcessorType.didEnterGroup(_:)(a1, *v1);
}

uint64_t sub_1EB2A4(uint64_t a1)
{
  return EventProcessorType.didLeaveGroup(_:)(a1, *v1);
}

uint64_t sub_1EB2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1EB310(a1, a2, a3, (uint64_t)&unk_309070, (uint64_t)&unk_323908);
}

uint64_t sub_1EB2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1EB310(a1, a2, a3, (uint64_t)&unk_309048, (uint64_t)&unk_323900);
}

uint64_t sub_1EB310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v6 = v5;
  uint64_t v8 = sub_27D700();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_4E04(&qword_320350);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_27DF30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  uint64_t v15 = qword_315BB0;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_323788;
  unint64_t v17 = sub_1EB7A4();
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v16;
  *((void *)v19 + 3) = v17;
  *((void *)v19 + 4) = v6;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v18], (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  sub_1E98A8((uint64_t)v13, v22, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1EB52C(uint64_t a1, uint64_t a2)
{
  return EventProcessorType.didUpdateSession(_:submitEventQueues:)(a1, a2, *v2);
}

uint64_t sub_1EB558(uint64_t a1)
{
  uint64_t v3 = sub_27D700();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_320350);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_27DF30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v11 = qword_315BB0;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_323788;
  unint64_t v13 = sub_1EB7A4();
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v12;
  *((void *)v15 + 3) = v13;
  *((void *)v15 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v15[v14], v6, v3);
  swift_retain();
  sub_1E98A8((uint64_t)v9, (uint64_t)&unk_3238E8, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1EB778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return EventProcessorType.resumeBackgroundProcessing(forIdentifier:completion:)(a1, a2, a3, a4, *v4);
}

unint64_t sub_1EB7A4()
{
  unint64_t result = qword_3238E0;
  if (!qword_3238E0)
  {
    type metadata accessor for SessionActor.ActorType();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3238E0);
  }
  return result;
}

uint64_t sub_1EB800(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_27D700() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_C80E0;
  return sub_1EA14C(a1, v5, v6, v7, v8);
}

uint64_t sub_1EB8FC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_C80E0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_3238F0 + dword_3238F0);
  return v6(a1, v4);
}

uint64_t sub_1EB9B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_27D700() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_AD880;
  return sub_1EA14C(a1, v5, v6, v7, v8);
}

uint64_t sub_1EBAB8()
{
  uint64_t v1 = sub_27D700();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1EBB8C()
{
  uint64_t v1 = sub_27D2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1EBC78(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(sub_27D2C0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (uint64_t)v1 + v7;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_C80E0;
  return sub_1EAB58(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_1EBDB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1EBE10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1EBE68(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1EBF48;
  return v5(v2 + 32);
}

uint64_t sub_1EBF48()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1EC05C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1EC094(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_AD880;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_323938 + dword_323938);
  return v6(a1, v4);
}

void __swiftcall SeriesData.init(seriesID:seriesContentType:seriesCount:seriesUserStatus:seriesType:seriesUserSubStatus:seriesCountStr:)(BookAnalytics::SeriesData *__return_ptr retstr, Swift::Int64 seriesID, BookAnalytics::ContentType seriesContentType, Swift::Int64 seriesCount, BookAnalytics::SeriesUserStatus_optional seriesUserStatus, BookAnalytics::SeriesType_optional seriesType, BookAnalytics::SeriesUserSubStatus_optional seriesUserSubStatus, Swift::String_optional seriesCountStr)
{
  BookAnalytics::ContentType v8 = *(unsigned char *)seriesContentType;
  BookAnalytics::SeriesUserStatus v9 = *(unsigned char *)seriesUserStatus.value;
  BookAnalytics::SeriesType v10 = *(unsigned char *)seriesType.value;
  BookAnalytics::SeriesUserSubStatus v11 = *(unsigned char *)seriesUserSubStatus.value;
  retstr->seriesID = seriesID;
  retstr->seriesContentType = v8;
  retstr->seriesCount = seriesCount;
  retstr->seriesUserStatus.value = v9;
  retstr->seriesType.value = v10;
  retstr->seriesUserSubStatus.value = v11;
  retstr->seriesCountStr = seriesCountStr;
}

unint64_t sub_1EC184(char a1)
{
  unint64_t result = 0x4449736569726573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 6:
      unint64_t result = 0x6F43736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x7954736569726573;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1EC280()
{
  return sub_1EC184(*v0);
}

uint64_t sub_1EC288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ED05C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1EC2B0(uint64_t a1)
{
  unint64_t v2 = sub_1ECAA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EC2EC(uint64_t a1)
{
  unint64_t v2 = sub_1ECAA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_323950);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  int v8 = *(unsigned __int8 *)(v1 + 24);
  int v17 = *(unsigned __int8 *)(v1 + 25);
  int v18 = v8;
  int v16 = *(unsigned __int8 *)(v1 + 26);
  uint64_t v9 = *(void *)(v1 + 32);
  v15[0] = *(void *)(v1 + 40);
  v15[1] = v9;
  sub_5900(a1, a1[3]);
  sub_1ECAA8();
  uint64_t v10 = v4;
  sub_27E440();
  char v31 = 0;
  sub_27E350();
  if (!v2)
  {
    char v11 = v17;
    char v12 = v18;
    char v13 = v16;
    char v30 = v20;
    char v29 = 1;
    sub_101E4();
    sub_27E330();
    char v28 = 2;
    sub_27E350();
    char v27 = v12;
    char v26 = 3;
    sub_1ECAFC();
    sub_27E2C0();
    char v25 = v11;
    char v24 = 4;
    sub_142D34();
    sub_27E2C0();
    char v23 = v13;
    char v22 = 5;
    sub_1ECB50();
    sub_27E2C0();
    char v21 = 6;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v10);
}

uint64_t SeriesData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323970);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1ECAA8();
  sub_27E430();
  if (!v2)
  {
    char v33 = 0;
    uint64_t v9 = sub_27E280();
    char v31 = 1;
    sub_10238();
    sub_27E260();
    int v10 = v32;
    char v30 = 2;
    uint64_t v21 = sub_27E280();
    int v22 = v10;
    char v28 = 3;
    sub_1ECBA4();
    sub_27E1F0();
    int v11 = v29;
    char v26 = 4;
    sub_142ED8();
    sub_27E1F0();
    int v20 = v11;
    int v12 = v27;
    char v24 = 5;
    sub_1ECBF8();
    sub_27E1F0();
    int v19 = v12;
    LOBYTE(v12) = v25;
    char v23 = 6;
    uint64_t v13 = sub_27E1C0();
    uint64_t v16 = v15;
    int v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v13;
    v17(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v22;
    *(void *)(a2 + 16) = v21;
    *(unsigned char *)(a2 + 24) = v20;
    *(unsigned char *)(a2 + 25) = v19;
    *(unsigned char *)(a2 + 26) = v12;
    *(void *)(a2 + 32) = v18;
    *(void *)(a2 + 40) = v16;
  }
  sub_5E94((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1EC914@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesData.init(from:)(a1, a2);
}

uint64_t sub_1EC92C(void *a1)
{
  return SeriesData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics10SeriesDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 24);
  int v3 = *(unsigned __int8 *)(a1 + 25);
  int v4 = *(unsigned __int8 *)(a1 + 26);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 25);
  int v8 = *(unsigned __int8 *)(a2 + 26);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = sub_2DAE4(*(unsigned char *)(a1 + 8), *(unsigned char *)(a2 + 8));
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v11 == v10)
  {
    if (v2 == 4)
    {
      if (v6 != 4) {
        return 0;
      }
    }
    else if (v6 == 4 || (sub_33638(v2, v6) & 1) == 0)
    {
      return 0;
    }
    if (v3 == 4)
    {
      if (v7 != 4) {
        return 0;
      }
    }
    else if (v7 == 4 || (sub_33108(v3, v7) & 1) == 0)
    {
      return 0;
    }
    if (v4 == 7)
    {
      if (v8 != 7) {
        return 0;
      }
    }
    else if (v8 == 7 || (sub_333B4(v4, v8) & 1) == 0)
    {
      return 0;
    }
    if (v5)
    {
      if (!v9 || (v15 != v14 || v5 != v9) && (sub_27E370() & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_1ECAA8()
{
  unint64_t result = qword_323958;
  if (!qword_323958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323958);
  }
  return result;
}

unint64_t sub_1ECAFC()
{
  unint64_t result = qword_323960;
  if (!qword_323960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323960);
  }
  return result;
}

unint64_t sub_1ECB50()
{
  unint64_t result = qword_323968;
  if (!qword_323968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323968);
  }
  return result;
}

unint64_t sub_1ECBA4()
{
  unint64_t result = qword_323978;
  if (!qword_323978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323978);
  }
  return result;
}

unint64_t sub_1ECBF8()
{
  unint64_t result = qword_323980;
  if (!qword_323980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323980);
  }
  return result;
}

uint64_t destroy for SeriesData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeriesData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeriesData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SeriesData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesData()
{
  return &type metadata for SeriesData;
}

unsigned char *storeEnumTagSinglePayload for SeriesData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ECF1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesData.CodingKeys()
{
  return &type metadata for SeriesData.CodingKeys;
}

unint64_t sub_1ECF58()
{
  unint64_t result = qword_323988;
  if (!qword_323988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323988);
  }
  return result;
}

unint64_t sub_1ECFB0()
{
  unint64_t result = qword_323990;
  if (!qword_323990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323990);
  }
  return result;
}

unint64_t sub_1ED008()
{
  unint64_t result = qword_323998;
  if (!qword_323998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323998);
  }
  return result;
}

uint64_t sub_1ED05C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449736569726573 && a2 == 0xE800000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1900 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F43736569726573 && a2 == 0xEB00000000746E75 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1920 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954736569726573 && a2 == 0xEA00000000006570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1940 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F43736569726573 && a2 == 0xEE00727453746E75)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BookAnalytics::DeviceOrientation_optional __swiftcall DeviceOrientation.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9398;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t DeviceOrientation.rawValue.getter()
{
  uint64_t v1 = 0x7469617274726F70;
  if (*v0 != 1) {
    uint64_t v1 = 0x70616373646E616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1ED41C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_30044(*a1, *a2);
}

unint64_t sub_1ED42C()
{
  unint64_t result = qword_3239A0;
  if (!qword_3239A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3239A0);
  }
  return result;
}

Swift::Int sub_1ED480()
{
  return sub_27E420();
}

uint64_t sub_1ED528()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1ED5BC()
{
  return sub_27E420();
}

BookAnalytics::DeviceOrientation_optional sub_1ED660(Swift::String *a1)
{
  return DeviceOrientation.init(rawValue:)(*a1);
}

void sub_1ED66C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x7469617274726F70;
  if (v2 != 1)
  {
    uint64_t v5 = 0x70616373646E616CLL;
    unint64_t v4 = 0xE900000000000065;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ED6D0()
{
  return sub_27DED0();
}

uint64_t sub_1ED730()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DeviceOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ED84CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientation()
{
  return &type metadata for DeviceOrientation;
}

unint64_t sub_1ED884()
{
  unint64_t result = qword_3239A8;
  if (!qword_3239A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3239A8);
  }
  return result;
}

uint64_t sub_1ED8D8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3239B0, &enum case for SessionGroup.default(_:));
}

uint64_t static PageTurnSettingEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3239B0, a1);
}

uint64_t sub_1ED938(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3239C8, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PageTurnSettingEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3239C8, a1);
}

uint64_t PageTurnSettingEvent.pageTurnFeatureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3239E0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PageTurnSettingEvent.pageTurnFeatureData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3239E0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t PageTurnSettingEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageTurnSettingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PageTurnSettingEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_323A68);
}

uint64_t PageTurnSettingEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageTurnSettingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PageTurnSettingEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PageTurnSettingEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for PageTurnSettingEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t PageTurnSettingEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageTurnSettingEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PageTurnSettingEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_323B00);
}

uint64_t PageTurnSettingEvent.Model.init(pageTurnFeatureData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for PageTurnSettingEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  unsigned int v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_1EDDB4()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_1EDDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EF254(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1EDE20(uint64_t a1)
{
  unint64_t v2 = sub_1EE054();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EDE5C(uint64_t a1)
{
  unint64_t v2 = sub_1EE054();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PageTurnSettingEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3239E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1EE054();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1EE0A8();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for PageTurnSettingEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1EE054()
{
  unint64_t result = qword_3239F0;
  if (!qword_3239F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3239F0);
  }
  return result;
}

unint64_t sub_1EE0A8()
{
  unint64_t result = qword_3239F8;
  if (!qword_3239F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3239F8);
  }
  return result;
}

uint64_t PageTurnSettingEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_323A00);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageTurnSettingEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1EE054();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    uint64_t v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_1EE3F4();
    uint64_t v14 = v25;
    sub_27E260();
    int v19 = v11;
    *uint64_t v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_1EE448(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_1EE3F4()
{
  unint64_t result = qword_323A08;
  if (!qword_323A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323A08);
  }
  return result;
}

uint64_t sub_1EE448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageTurnSettingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1EE4AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PageTurnSettingEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1EE4C4(void *a1)
{
  return PageTurnSettingEvent.Model.encode(to:)(a1);
}

uint64_t sub_1EE4DC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3239B0, a1);
}

uint64_t sub_1EE514@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3239C8, a1);
}

uint64_t sub_1EE54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for PageTurnSettingEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3239E0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PageTurnSettingEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3239E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1EEAEC);
}

uint64_t sub_1EEAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3239E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PageTurnSettingEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1EEC00);
}

uint64_t sub_1EEC00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3239E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1EED0C()
{
  sub_1EEDD4();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1EEDD4()
{
  if (!qword_323A78)
  {
    sub_1EE3F4();
    sub_1EE0A8();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_323A78);
    }
  }
}

uint64_t getEnumTagSinglePayload for PageTurnSettingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1EEE50);
}

uint64_t sub_1EEE50(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PageTurnSettingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1EEF0C);
}

unsigned char *sub_1EEF0C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1EEFB0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageTurnSettingEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1EF114);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageTurnSettingEvent.Model.CodingKeys()
{
  return &type metadata for PageTurnSettingEvent.Model.CodingKeys;
}

unint64_t sub_1EF150()
{
  unint64_t result = qword_323B38;
  if (!qword_323B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B38);
  }
  return result;
}

unint64_t sub_1EF1A8()
{
  unint64_t result = qword_323B40;
  if (!qword_323B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B40);
  }
  return result;
}

unint64_t sub_1EF200()
{
  unint64_t result = qword_323B48;
  if (!qword_323B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B48);
  }
  return result;
}

uint64_t sub_1EF254(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1960 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1EF350()
{
  if (*v0) {
    return 0x6E69646465626D65;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1EF390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EFB88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1EF3B8(uint64_t a1)
{
  unint64_t v2 = sub_1EF5F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EF3F4(uint64_t a1)
{
  unint64_t v2 = sub_1EF5F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserEmbedding.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_323B50);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5900(a1, a1[3]);
  sub_1EF5F0();
  sub_27E440();
  char v13 = 0;
  sub_27E2F0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_4E04(&qword_31E068);
    sub_139AF0(&qword_31E070);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_1EF5F0()
{
  unint64_t result = qword_323B58;
  if (!qword_323B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B58);
  }
  return result;
}

uint64_t UserEmbedding.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323B60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1EF5F0();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  sub_4E04(&qword_31E068);
  char v15 = 1;
  sub_139AF0(&qword_31E080);
  swift_bridgeObjectRetain();
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1EF890()
{
  unint64_t result = qword_323B68;
  if (!qword_323B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B68);
  }
  return result;
}

unint64_t sub_1EF8E8()
{
  unint64_t result = qword_323B70;
  if (!qword_323B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B70);
  }
  return result;
}

uint64_t sub_1EF93C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserEmbedding.init(from:)(a1, a2);
}

uint64_t sub_1EF954(void *a1)
{
  return UserEmbedding.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserEmbedding()
{
  return &type metadata for UserEmbedding;
}

unsigned char *storeEnumTagSinglePayload for UserEmbedding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1EFA48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEmbedding.CodingKeys()
{
  return &type metadata for UserEmbedding.CodingKeys;
}

unint64_t sub_1EFA84()
{
  unint64_t result = qword_323B78;
  if (!qword_323B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B78);
  }
  return result;
}

unint64_t sub_1EFADC()
{
  unint64_t result = qword_323B80;
  if (!qword_323B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B80);
  }
  return result;
}

unint64_t sub_1EFB34()
{
  unint64_t result = qword_323B88;
  if (!qword_323B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B88);
  }
  return result;
}

uint64_t sub_1EFB88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static DragDropData.== infix(_:_:)(void *a1, void *a2)
{
  return sub_81CB8(*a1, *a2);
}

uint64_t sub_1EFC94()
{
  return 0x706F724467617264;
}

uint64_t sub_1EFCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x706F724467617264 && a2 == 0xEF7972616D6D7553)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1EFD74(uint64_t a1)
{
  unint64_t v2 = sub_1EFF70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EFDB0(uint64_t a1)
{
  unint64_t v2 = sub_1EFF70();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DragDropData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_323B90);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1EFF70();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_323BA0);
  sub_1F01BC(&qword_323BA8, (void (*)(void))sub_1EFFC4);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1EFF70()
{
  unint64_t result = qword_323B98;
  if (!qword_323B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323B98);
  }
  return result;
}

unint64_t sub_1EFFC4()
{
  unint64_t result = qword_323BB0;
  if (!qword_323BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BB0);
  }
  return result;
}

uint64_t DragDropData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1EFF70();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_323BA0);
    sub_1F01BC(&qword_323BC0, (void (*)(void))sub_1F022C);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1F01BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_323BA0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1F022C()
{
  unint64_t result = qword_323BC8;
  if (!qword_323BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BC8);
  }
  return result;
}

uint64_t sub_1F0288@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DragDropData.init(from:)(a1, a2);
}

uint64_t sub_1F02A0(void *a1)
{
  return DragDropData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for DragDropData()
{
  return &type metadata for DragDropData;
}

unsigned char *storeEnumTagSinglePayload for DragDropData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1F0364);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropData.CodingKeys()
{
  return &type metadata for DragDropData.CodingKeys;
}

unint64_t sub_1F03A0()
{
  unint64_t result = qword_323BD0;
  if (!qword_323BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BD0);
  }
  return result;
}

unint64_t sub_1F03F8()
{
  unint64_t result = qword_323BD8;
  if (!qword_323BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BD8);
  }
  return result;
}

unint64_t sub_1F0450()
{
  unint64_t result = qword_323BE0;
  if (!qword_323BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BE0);
  }
  return result;
}

void __swiftcall BrickData.init(name:positionInSection:brickID:)(BookAnalytics::BrickData *__return_ptr retstr, Swift::String name, Swift::Int32 positionInSection, Swift::String brickID)
{
  retstr->name = name;
  retstr->positionInSection = positionInSection;
  retstr->brickID = brickID;
}

uint64_t sub_1F04B8()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x44496B63697262;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1F0510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F0E20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F0538(uint64_t a1)
{
  unint64_t v2 = sub_1F0A98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F0574(uint64_t a1)
{
  unint64_t v2 = sub_1F0A98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BrickData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_323BE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(_DWORD *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  v10[1] = *(void *)(v1 + 32);
  void v10[2] = v7;
  sub_5900(a1, a1[3]);
  sub_1F0A98();
  sub_27E440();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_27E2F0();
  if (!v8)
  {
    char v13 = 1;
    sub_27E340();
    char v12 = 2;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t BrickData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_323BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1F0A98();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v21 = 1;
  swift_bridgeObjectRetain();
  int v19 = sub_27E270();
  char v20 = 2;
  uint64_t v12 = sub_27E220();
  uint64_t v15 = v14;
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1F0994@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrickData.init(from:)(a1, a2);
}

uint64_t sub_1F09AC(void *a1)
{
  return BrickData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics9BrickDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v5) {
      return 0;
    }
  }
  else
  {
    char v9 = sub_27E370();
    uint64_t result = 0;
    if ((v9 & 1) == 0 || v2 != v5) {
      return result;
    }
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_27E370();
}

unint64_t sub_1F0A98()
{
  unint64_t result = qword_323BF0;
  if (!qword_323BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323BF0);
  }
  return result;
}

uint64_t initializeWithCopy for BrickData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BrickData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BrickData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BrickData()
{
  return &type metadata for BrickData;
}

unsigned char *storeEnumTagSinglePayload for BrickData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F0CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrickData.CodingKeys()
{
  return &type metadata for BrickData.CodingKeys;
}

unint64_t sub_1F0D1C()
{
  unint64_t result = qword_323C00;
  if (!qword_323C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C00);
  }
  return result;
}

unint64_t sub_1F0D74()
{
  unint64_t result = qword_323C08;
  if (!qword_323C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C08);
  }
  return result;
}

unint64_t sub_1F0DCC()
{
  unint64_t result = qword_323C10;
  if (!qword_323C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C10);
  }
  return result;
}

uint64_t sub_1F0E20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADF40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44496B63697262 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::OnDevicePersonalizationUserStatus_optional __swiftcall OnDevicePersonalizationUserStatus.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9400;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t OnDevicePersonalizationUserStatus.rawValue.getter()
{
  uint64_t result = 0x6967696C45746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C626967696C65;
      break;
    case 2:
      uint64_t result = 0x736B6F6F62;
      break;
    case 3:
      uint64_t result = 0x6F6F626F69647561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F1054(unsigned __int8 *a1, char *a2)
{
  return sub_2D944(*a1, *a2);
}

unint64_t sub_1F1064()
{
  unint64_t result = qword_323C18;
  if (!qword_323C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C18);
  }
  return result;
}

Swift::Int sub_1F10B8()
{
  return sub_27E420();
}

uint64_t sub_1F119C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1F1268()
{
  return sub_27E420();
}

BookAnalytics::OnDevicePersonalizationUserStatus_optional sub_1F1348(Swift::String *a1)
{
  return OnDevicePersonalizationUserStatus.init(rawValue:)(*a1);
}

void sub_1F1354(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000656C62;
  uint64_t v3 = 0x6967696C45746F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656C626967696C65;
      goto LABEL_3;
    case 2:
      *a1 = 0x736B6F6F62;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6F6F626F69647561;
      a1[1] = 0xEA0000000000736BLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1F13F8()
{
  return sub_27DED0();
}

uint64_t sub_1F1458()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for OnDevicePersonalizationUserStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F1574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDevicePersonalizationUserStatus()
{
  return &type metadata for OnDevicePersonalizationUserStatus;
}

unint64_t sub_1F15AC()
{
  unint64_t result = qword_323C20;
  if (!qword_323C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C20);
  }
  return result;
}

uint64_t sub_1F1600(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_323C28, &enum case for SessionGroup.default(_:));
}

uint64_t static RedownloadCompleteEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BC8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323C28, a1);
}

uint64_t sub_1F1660(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_323C40, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RedownloadCompleteEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BD0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323C40, a1);
}

uint64_t RedownloadCompleteEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadCompleteEvent(uint64_t a1)
{
  return sub_5338(a1, qword_323CC8);
}

uint64_t RedownloadCompleteEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadCompleteEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadCompleteEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadCompleteEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadCompleteEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadCompleteEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadCompleteEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadCompleteEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadCompleteEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadCompleteEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadCompleteEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadCompleteEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RedownloadCompleteEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t RedownloadCompleteEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadCompleteEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_323D68);
}

uint64_t RedownloadCompleteEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadCompleteEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadCompleteEvent.Model.init(contentData:contentStoreData:sectionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  long long v11 = *(_OWORD *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  __int16 v14 = *(_WORD *)(a1 + 56);
  int v15 = *(_DWORD *)(a1 + 60);
  char v16 = *(unsigned char *)(a1 + 64);
  int v17 = *(_DWORD *)(a1 + 68);
  char v18 = *(unsigned char *)(a1 + 72);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v9;
  *(unsigned char *)(a6 + 16) = v10;
  *(_OWORD *)(a6 + 24) = v11;
  *(void *)(a6 + 40) = v12;
  *(void *)(a6 + 48) = v13;
  *(_WORD *)(a6 + 56) = v14;
  *(_DWORD *)(a6 + 60) = v15;
  *(unsigned char *)(a6 + 64) = v16;
  *(_DWORD *)(a6 + 68) = v17;
  *(unsigned char *)(a6 + 72) = v18;
  int v19 = *(_DWORD *)(a1 + 73);
  long long v20 = *a2;
  long long v21 = a2[1];
  *(_OWORD *)(a6 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a6 + 96) = v20;
  long long v22 = a2[2];
  long long v23 = a2[3];
  *(_OWORD *)(a6 + 112) = v21;
  *(_OWORD *)(a6 + 128) = v22;
  *(_OWORD *)(a6 + 144) = v23;
  long long v24 = a3[1];
  *(_OWORD *)(a6 + 168) = *a3;
  *(_OWORD *)(a6 + 184) = v24;
  long long v25 = a3[3];
  *(_OWORD *)(a6 + 200) = a3[2];
  *(_OWORD *)(a6 + 216) = v25;
  long long v26 = a3[5];
  *(_OWORD *)(a6 + 232) = a3[4];
  char v27 = *(unsigned char *)(a1 + 77);
  LODWORD(v12) = *((_DWORD *)a2 + 16);
  LOBYTE(v13) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a6 + 73) = v19;
  *(unsigned char *)(a6 + 77) = v27;
  *(unsigned char *)(a6 + 164) = v13;
  *(_DWORD *)(a6 + 160) = v12;
  *(_OWORD *)(a6 + 248) = v26;
  *(_OWORD *)(a6 + 264) = a3[6];
  uint64_t v28 = type metadata accessor for RedownloadCompleteEvent.Model(0);
  uint64_t v29 = a6 + *(int *)(v28 + 28);
  uint64_t v30 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a4, v30);
  uint64_t v31 = a6 + *(int *)(v28 + 32);
  uint64_t v32 = sub_27D7F0();
  char v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);

  return v33(v31, a5, v32);
}

uint64_t sub_1F2038()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F20E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F5480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F2110(uint64_t a1)
{
  unint64_t v2 = sub_1F24E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F214C(uint64_t a1)
{
  unint64_t v2 = sub_1F24E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RedownloadCompleteEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_323C58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_1F24E0();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)char v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)char v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    type metadata accessor for RedownloadCompleteEvent.Model(0);
    LOBYTE(v32) = 3;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v32) = 4;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1F24E0()
{
  unint64_t result = qword_323C60;
  if (!qword_323C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323C60);
  }
  return result;
}

uint64_t RedownloadCompleteEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v48 = sub_27D7F0();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  long long v49 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_323C68);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RedownloadCompleteEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1F24E0();
  uint64_t v53 = v9;
  uint64_t v13 = v54;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v14 = v6;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v16 = (uint64_t)a1;
  uint64_t v45 = v10;
  uint64_t v17 = v52;
  uint64_t v54 = v4;
  char v61 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v55 + 1);
  char v19 = v56[0];
  long long v20 = *(_OWORD *)&v56[8];
  uint64_t v21 = *(void *)&v56[24];
  uint64_t v22 = v57;
  __int16 v23 = WORD4(v57);
  int v24 = HIDWORD(v57);
  char v25 = v58;
  int v26 = DWORD1(v58);
  char v27 = BYTE8(v58);
  char v28 = BYTE13(v58);
  *(void *)uint64_t v15 = v55;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v19;
  *(_OWORD *)(v15 + 24) = v20;
  *(void *)(v15 + 40) = v21;
  *(void *)(v15 + 48) = v22;
  *(_WORD *)(v15 + 56) = v23;
  *(_DWORD *)(v15 + 60) = v24;
  *(unsigned char *)(v15 + 64) = v25;
  *(_DWORD *)(v15 + 68) = v26;
  *(unsigned char *)(v15 + 72) = v27;
  *(_DWORD *)(v15 + 73) = *(_DWORD *)((char *)&v58 + 9);
  *(unsigned char *)(v15 + 77) = v28;
  *(_OWORD *)(v15 + 80) = v59;
  char v61 = 1;
  sub_6D068();
  sub_27E1F0();
  int v29 = v58;
  char v30 = BYTE4(v58);
  long long v31 = *(_OWORD *)v56;
  *(_OWORD *)(v15 + 96) = v55;
  *(_OWORD *)(v15 + 112) = v31;
  long long v32 = v57;
  *(_OWORD *)(v15 + 128) = *(_OWORD *)&v56[16];
  *(_OWORD *)(v15 + 144) = v32;
  *(unsigned char *)(v15 + 164) = v30;
  *(_DWORD *)(v15 + 160) = v29;
  char v61 = 2;
  sub_20898();
  sub_27E1F0();
  v44[1] = 0;
  long long v33 = *(_OWORD *)v56;
  *(_OWORD *)(v15 + 168) = v55;
  long long v34 = *(_OWORD *)&v56[16];
  long long v35 = v57;
  *(_OWORD *)(v15 + 184) = v33;
  *(_OWORD *)(v15 + 200) = v34;
  long long v36 = v58;
  long long v37 = v59;
  *(_OWORD *)(v15 + 216) = v35;
  *(_OWORD *)(v15 + 232) = v36;
  long long v38 = v60;
  *(_OWORD *)(v15 + 248) = v37;
  *(_OWORD *)(v15 + 264) = v38;
  LOBYTE(v55) = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v39 = v54;
  sub_27E260();
  uint64_t v40 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v45 + 28), v14, v39);
  LOBYTE(v55) = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v41 = v49;
  uint64_t v42 = v48;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v51);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v15 + *(int *)(v40 + 32), v41, v42);
  sub_1F2C10(v15, v47);
  sub_5E94(v16);
  return sub_1F2C74(v15);
}

uint64_t sub_1F2C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedownloadCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F2C74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedownloadCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1F2CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RedownloadCompleteEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1F2CE8(void *a1)
{
  return RedownloadCompleteEvent.Model.encode(to:)(a1);
}

uint64_t sub_1F2D00@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BC8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323C28, a1);
}

uint64_t sub_1F2D38@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BD0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323C40, a1);
}

uint64_t sub_1F2D70@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for RedownloadCompleteEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_3184D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A10);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for RedownloadCompleteEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F396C);
}

uint64_t sub_1F396C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for RedownloadCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F3B78);
}

uint64_t sub_1F3B78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1F3D7C()
{
  sub_76BAC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_76BAC(319, &qword_3185D0, (void (*)(void))sub_6D068, (void (*)(void))sub_6C400);
    if (v1 <= 0x3F)
    {
      sub_76BAC(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      uint64_t v14 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      uint64_t v15 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v15;
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = a2[23];
      if (v16)
      {
LABEL_4:
        *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
        *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v16;
        uint64_t v17 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v17;
        uint64_t v18 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v18;
        uint64_t v19 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v19;
        uint64_t v20 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v20;
        *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
        *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
        uint64_t v21 = a2[34];
        *(void *)(a1 + 264) = a2[33];
        *(void *)(a1 + 272) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v28 = *(int *)(a3 + 28);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = *(int *)(a3 + 32);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = (uint64_t)a2 + v32;
        uint64_t v35 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        return a1;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v23;
      *(void *)(a1 + 157) = *(uint64_t *)((char *)a2 + 157);
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      uint64_t v16 = a2[23];
      if (v16) {
        goto LABEL_4;
      }
    }
    long long v25 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v25;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    long long v26 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v26;
    long long v27 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v27;
    goto LABEL_8;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v9 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v11)
  {
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    long long v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
    uint64_t v15 = *(void *)(a2 + 184);
    if (v15) {
      goto LABEL_3;
    }
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v23;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v24 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v24;
    long long v25 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v25;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = *(void *)(a2 + 184);
  if (!v15) {
    goto LABEL_5;
  }
LABEL_3:
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 96);
  int v9 = (_OWORD *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(_DWORD *)(a1 + 160) = v11;
    }
    else
    {
      sub_70AE0(a1 + 96);
      *uint64_t v8 = *v9;
      long long v14 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 157) = *(void *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v14;
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 112) = v15;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    int v12 = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(_DWORD *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v8 = *v9;
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 157) = *(void *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 168);
  uint64_t v20 = (_OWORD *)(a2 + 168);
  uint64_t v21 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v21)
    {
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v22 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v22;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_235A0(a1 + 168);
      long long v25 = *(_OWORD *)(a2 + 184);
      long long v24 = *(_OWORD *)(a2 + 200);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v24;
      long long v26 = *(_OWORD *)(a2 + 264);
      long long v28 = *(_OWORD *)(a2 + 216);
      long long v27 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 216) = v28;
      *(_OWORD *)(a1 + 232) = v27;
    }
  }
  else if (v21)
  {
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    int v23 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v23;
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v20;
    long long v30 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v30;
    *uint64_t v19 = v29;
    long long v31 = *(_OWORD *)(a2 + 216);
    long long v32 = *(_OWORD *)(a2 + 232);
    long long v33 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v33;
    *(_OWORD *)(a1 + 216) = v31;
    *(_OWORD *)(a1 + 232) = v32;
  }
  uint64_t v34 = *(int *)(a3 + 28);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = *(int *)(a3 + 32);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

uint64_t initializeWithTake for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    uint64_t v10 = *(void *)(a2 + 136);
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v12;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      goto LABEL_6;
    }
    sub_70AE0(a1 + 96);
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(void *)(a1 + 157) = *(void *)(a2 + 157);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
LABEL_6:
  if (!*(void *)(a1 + 184))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v22;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    long long v23 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v23;
    long long v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 184);
  if (!v16)
  {
    sub_235A0(a1 + 168);
    goto LABEL_10;
  }
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v25 = *(int *)(a3 + 28);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = *(int *)(a3 + 32);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F4F20);
}

uint64_t sub_1F4F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for RedownloadCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F5060);
}

uint64_t sub_1F5060(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1F518C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RedownloadCompleteEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F5340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadCompleteEvent.Model.CodingKeys()
{
  return &type metadata for RedownloadCompleteEvent.Model.CodingKeys;
}

unint64_t sub_1F537C()
{
  unint64_t result = qword_323DB0;
  if (!qword_323DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323DB0);
  }
  return result;
}

unint64_t sub_1F53D4()
{
  unint64_t result = qword_323DB8;
  if (!qword_323DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323DB8);
  }
  return result;
}

unint64_t sub_1F542C()
{
  unint64_t result = qword_323DC0;
  if (!qword_323DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323DC0);
  }
  return result;
}

uint64_t sub_1F5480(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE4A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1F56D4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_323DC8, &enum case for SessionGroup.default(_:));
}

uint64_t static NotificationEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BD8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323DC8, a1);
}

uint64_t sub_1F5734(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_323DE0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static NotificationEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BE0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323DE0, a1);
}

uint64_t NotificationEngagementEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31CF30);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t NotificationEngagementEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31CF30);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t NotificationEngagementEvent.notificationEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationEngagementEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323DF8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationEngagementEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_323E70);
}

uint64_t NotificationEngagementEvent.notificationEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationEngagementEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323DF8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationEngagementEvent.notificationEngagementData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t NotificationEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationEngagementEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NotificationEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationEngagementEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NotificationEngagementEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t NotificationEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for NotificationEngagementEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t NotificationEngagementEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __int16 v3 = *(_WORD *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 26);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 26) = v4;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 72);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NotificationEngagementEvent.Model.notificationEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  char v5 = *(unsigned char *)(v1 + 128);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 96);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NotificationEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationEngagementEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationEngagementEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_323F10);
}

uint64_t NotificationEngagementEvent.Model.init(notificationData:notificationEngagementData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  __int16 v7 = *(_WORD *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 26);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  char v11 = *a2;
  long long v12 = *(_OWORD *)(a2 + 8);
  uint64_t v13 = *((void *)a2 + 3);
  char v14 = a2[32];
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v6;
  *(_WORD *)(a4 + 24) = v7;
  *(unsigned char *)(a4 + 26) = v8;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a4 + 48) = v9;
  *(void *)(a4 + 56) = v10;
  long long v15 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 80) = v15;
  *(unsigned char *)(a4 + 96) = v11;
  *(_OWORD *)(a4 + 104) = v12;
  *(void *)(a4 + 120) = v13;
  *(unsigned char *)(a4 + 128) = v14;
  uint64_t v16 = a4 + *(int *)(type metadata accessor for NotificationEngagementEvent.Model(0) + 24);
  uint64_t v17 = sub_27D7C0();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a3, v17);
}

unint64_t sub_1F5EA0()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1F5F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F7F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F5F2C(uint64_t a1)
{
  unint64_t v2 = sub_1F61E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F5F68(uint64_t a1)
{
  unint64_t v2 = sub_1F61E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_323E00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1F61E8();
  sub_27E440();
  uint64_t v9 = *(void *)(v3 + 16);
  __int16 v10 = *(_WORD *)(v3 + 24);
  char v11 = *(unsigned char *)(v3 + 26);
  uint64_t v12 = *(void *)(v3 + 48);
  uint64_t v13 = *(void *)(v3 + 56);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v3;
  *(void *)&v21[16] = v9;
  LOWORD(v22) = v10;
  BYTE2(v22) = v11;
  long long v23 = *(_OWORD *)(v3 + 32);
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  long long v14 = *(_OWORD *)(v3 + 80);
  long long v26 = *(_OWORD *)(v3 + 64);
  long long v27 = v14;
  char v20 = 0;
  sub_97E4C();
  sub_27E330();
  if (!v2)
  {
    long long v15 = *(_OWORD *)(v3 + 104);
    uint64_t v16 = *(void *)(v3 + 120);
    char v17 = *(unsigned char *)(v3 + 128);
    v21[0] = *(unsigned char *)(v3 + 96);
    *(_OWORD *)&v21[8] = v15;
    uint64_t v22 = v16;
    LOBYTE(v23) = v17;
    char v20 = 1;
    sub_9D5A4();
    sub_27E330();
    type metadata accessor for NotificationEngagementEvent.Model(0);
    v21[0] = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1F61E8()
{
  unint64_t result = qword_323E08;
  if (!qword_323E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323E08);
  }
  return result;
}

uint64_t NotificationEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_323E10);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NotificationEngagementEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v35 = a1;
  sub_5900(a1, v13);
  sub_1F61E8();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v29 = v10;
  uint64_t v30 = v12;
  uint64_t v14 = v33;
  long long v15 = v6;
  char v43 = 0;
  sub_97DF4();
  uint64_t v16 = v34;
  sub_27E260();
  uint64_t v17 = *(void *)&v36[16];
  __int16 v18 = v37;
  char v19 = BYTE2(v37);
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  uint64_t v22 = (uint64_t)v30;
  *uint64_t v30 = *(_OWORD *)v36;
  *(void *)(v22 + 16) = v17;
  *(_WORD *)(v22 + 24) = v18;
  *(unsigned char *)(v22 + 26) = v19;
  *(_OWORD *)(v22 + 32) = v38;
  *(void *)(v22 + 48) = v20;
  *(void *)(v22 + 56) = v21;
  long long v23 = v42;
  *(_OWORD *)(v22 + 64) = v41;
  *(_OWORD *)(v22 + 80) = v23;
  char v43 = 1;
  sub_9D54C();
  sub_27E260();
  long long v24 = *(_OWORD *)&v36[8];
  uint64_t v25 = v37;
  char v26 = v38;
  *(unsigned char *)(v22 + 96) = v36[0];
  *(_OWORD *)(v22 + 104) = v24;
  *(void *)(v22 + 120) = v25;
  *(unsigned char *)(v22 + 128) = v26;
  v36[0] = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v22 + *(int *)(v29 + 24), v15, v4);
  sub_1F666C(v22, v32);
  sub_5E94((uint64_t)v35);
  return sub_1F66D0(v22);
}

uint64_t sub_1F666C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F66D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1F672C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1F6744(void *a1)
{
  return NotificationEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1F675C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BD8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323DC8, a1);
}

uint64_t sub_1F6794@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BE0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323DE0, a1);
}

uint64_t sub_1F67CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31CF30);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_323DF8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31CF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F6FA4);
}

uint64_t sub_1F6FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31CF30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_323DF8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for NotificationEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F7110);
}

uint64_t sub_1F7110(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31CF30);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_323DF8);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1F7274()
{
  sub_1F73E8(319, (unint64_t *)&unk_31CFB8, (void (*)(void))sub_97DF4, (void (*)(void))sub_97E4C);
  if (v0 <= 0x3F)
  {
    sub_1F73E8(319, (unint64_t *)&unk_323E80, (void (*)(void))sub_9D54C, (void (*)(void))sub_9D5A4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1F73E8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationEngagementEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v10;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v11 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v11;
    *(void *)(a1 + 120) = a2[15];
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v16 = a1 + v12;
    uint64_t v17 = (uint64_t)a2 + v12;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v13 = sub_27D7C0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v16, v17, v13);
  }
  return v5;
}

uint64_t destroy for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v10;
  uint64_t v15 = a2 + v10;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v11 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v14, v15, v11);
  return a1;
}

uint64_t assignWithCopy for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, v9, v11);
  return a1;
}

uint64_t assignWithTake for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F7B38);
}

uint64_t sub_1F7B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NotificationEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F7BFC);
}

uint64_t sub_1F7BFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1F7CA4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F7E10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationEngagementEvent.Model.CodingKeys()
{
  return &type metadata for NotificationEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1F7E4C()
{
  unint64_t result = qword_323F50;
  if (!qword_323F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323F50);
  }
  return result;
}

unint64_t sub_1F7EA4()
{
  unint64_t result = qword_323F58;
  if (!qword_323F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323F58);
  }
  return result;
}

unint64_t sub_1F7EFC()
{
  unint64_t result = qword_323F60;
  if (!qword_323F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323F60);
  }
  return result;
}

uint64_t sub_1F7F50(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B00E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002B1980 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1F80AC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_323F68, &enum case for SessionGroup.default(_:));
}

uint64_t static RemoveReviewAndRatingEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BE8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323F68, a1);
}

uint64_t sub_1F810C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_323F80, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RemoveReviewAndRatingEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BF0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323F80, a1);
}

uint64_t RemoveReviewAndRatingEvent.reviewTypeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323F98);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveReviewAndRatingEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_324020);
}

uint64_t RemoveReviewAndRatingEvent.reviewTypeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_323F98);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveReviewAndRatingEvent.reviewTypeData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveReviewAndRatingEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveReviewAndRatingEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveReviewAndRatingEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveReviewAndRatingEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveReviewAndRatingEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveReviewAndRatingEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveReviewAndRatingEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RemoveReviewAndRatingEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t RemoveReviewAndRatingEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveReviewAndRatingEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3240C0);
}

uint64_t RemoveReviewAndRatingEvent.Model.init(contentData:reviewTypeData:upSellData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  long long v8 = *(_OWORD *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  __int16 v11 = *(_WORD *)(a1 + 56);
  int v12 = *(_DWORD *)(a1 + 60);
  char v13 = *(unsigned char *)(a1 + 64);
  int v14 = *(_DWORD *)(a1 + 68);
  char v15 = *(unsigned char *)(a1 + 72);
  char v16 = *(unsigned char *)(a1 + 77);
  char v17 = *a2;
  uint64_t v18 = *(void *)(a3 + 16);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v6;
  *(unsigned char *)(a5 + 16) = v7;
  *(_OWORD *)(a5 + 24) = v8;
  *(void *)(a5 + 40) = v9;
  *(void *)(a5 + 48) = v10;
  *(_WORD *)(a5 + 56) = v11;
  *(_DWORD *)(a5 + 60) = v12;
  *(unsigned char *)(a5 + 64) = v13;
  *(_DWORD *)(a5 + 68) = v14;
  *(unsigned char *)(a5 + 72) = v15;
  *(_DWORD *)(a5 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a5 + 77) = v16;
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(unsigned char *)(a5 + 96) = v17;
  *(_OWORD *)(a5 + 104) = *(_OWORD *)a3;
  *(void *)(a5 + 120) = v18;
  uint64_t v19 = a5 + *(int *)(type metadata accessor for RemoveReviewAndRatingEvent.Model(0) + 28);
  uint64_t v20 = sub_27D7C0();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);

  return v21(v19, a4, v20);
}

uint64_t sub_1F8850()
{
  uint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7954776569766572;
      break;
    case 2:
      uint64_t result = 0x61446C6C65537075;
      break;
    case 3:
      uint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F88FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1FADB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F8924(uint64_t a1)
{
  unint64_t v2 = sub_1F8C38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F8960(uint64_t a1)
{
  unint64_t v2 = sub_1F8C38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoveReviewAndRatingEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_323FA0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1F8C38();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v25 = *(void *)v4;
  *((void *)&v25 + 1) = v10;
  LOBYTE(v26) = v11;
  long long v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  __int16 v30 = v15;
  int v31 = v16;
  char v32 = v17;
  int v33 = v18;
  char v34 = v19;
  int v35 = *(_DWORD *)(v4 + 73);
  char v36 = v20;
  long long v37 = *(_OWORD *)(v4 + 80);
  char v24 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    LOBYTE(v25) = *(unsigned char *)(v4 + 96);
    char v24 = 1;
    sub_1F8C8C();
    sub_27E330();
    uint64_t v21 = *(void *)(v4 + 120);
    long long v25 = *(_OWORD *)(v4 + 104);
    uint64_t v26 = v21;
    char v24 = 2;
    sub_36A74();
    sub_27E2C0();
    type metadata accessor for RemoveReviewAndRatingEvent.Model(0);
    LOBYTE(v25) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1F8C38()
{
  unint64_t result = qword_323FA8;
  if (!qword_323FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323FA8);
  }
  return result;
}

unint64_t sub_1F8C8C()
{
  unint64_t result = qword_323FB0;
  if (!qword_323FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323FB0);
  }
  return result;
}

uint64_t RemoveReviewAndRatingEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_4E04(&qword_323FB8);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RemoveReviewAndRatingEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  int v33 = a1;
  sub_5900(a1, v11);
  sub_1F8C38();
  uint64_t v12 = v34;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)v33);
  }
  uint64_t v13 = (uint64_t)v10;
  uint64_t v34 = v8;
  uint64_t v14 = v30;
  uint64_t v15 = v31;
  char v48 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v16 = *((void *)&v35 + 1);
  char v17 = v36;
  long long v18 = v37;
  uint64_t v19 = v38;
  uint64_t v20 = v39;
  __int16 v21 = v40;
  int v22 = v41;
  char v23 = v42;
  int v24 = v43;
  char v25 = v44;
  char v26 = v46;
  *(void *)uint64_t v13 = v35;
  *(void *)(v13 + 8) = v16;
  *(unsigned char *)(v13 + 16) = v17;
  *(_OWORD *)(v13 + 24) = v18;
  *(void *)(v13 + 40) = v19;
  *(void *)(v13 + 48) = v20;
  *(_WORD *)(v13 + 56) = v21;
  *(_DWORD *)(v13 + 60) = v22;
  *(unsigned char *)(v13 + 64) = v23;
  *(_DWORD *)(v13 + 68) = v24;
  *(unsigned char *)(v13 + 72) = v25;
  *(_DWORD *)(v13 + 73) = v45;
  *(unsigned char *)(v13 + 77) = v26;
  *(_OWORD *)(v13 + 80) = v47;
  char v48 = 1;
  sub_1F913C();
  sub_27E260();
  *(unsigned char *)(v13 + 96) = v35;
  char v48 = 2;
  sub_37744();
  sub_27E1F0();
  uint64_t v27 = v36;
  *(_OWORD *)(v13 + 104) = v35;
  *(void *)(v13 + 120) = v27;
  LOBYTE(v35) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v13 + *(int *)(v34 + 28), v5, v3);
  sub_1F9190(v13, v29);
  sub_5E94((uint64_t)v33);
  return sub_1F91F4(v13);
}

unint64_t sub_1F913C()
{
  unint64_t result = qword_323FC0;
  if (!qword_323FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_323FC0);
  }
  return result;
}

uint64_t sub_1F9190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoveReviewAndRatingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F91F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoveReviewAndRatingEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1F9250@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoveReviewAndRatingEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1F9268(void *a1)
{
  return RemoveReviewAndRatingEvent.Model.encode(to:)(a1);
}

uint64_t sub_1F9280@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BE8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_323F68, a1);
}

uint64_t sub_1F92B8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BF0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_323F80, a1);
}

uint64_t sub_1F92F0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveReviewAndRatingEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_323F98);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for RemoveReviewAndRatingEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_323F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F9CE4);
}

uint64_t sub_1F9CE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_323F98);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for RemoveReviewAndRatingEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F9EA0);
}

uint64_t sub_1F9EA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_323F98);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1FA054()
{
  sub_1FA23C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_1FA23C(319, (unint64_t *)&unk_324030, (void (*)(void))sub_1F913C, (void (*)(void))sub_1F8C8C);
    if (v1 <= 0x3F)
    {
      sub_1FA23C(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1FA23C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(unsigned char *)(a1 + 105) = *((unsigned char *)a2 + 105);
    uint64_t v10 = a2[15];
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v17 = (uint64_t)a2 + v11;
    uint64_t v12 = a1 + v11;
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v17, v13);
  }
  return v3;
}

uint64_t destroy for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v9 = *(void *)(a2 + 120);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v15 = a2 + v10;
  uint64_t v11 = a1 + v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v15, v12);
  return a1;
}

uint64_t assignWithCopy for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1FA990);
}

uint64_t sub_1FA990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveReviewAndRatingEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1FAA54);
}

uint64_t sub_1FAA54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1FAAFC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoveReviewAndRatingEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FAC74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveReviewAndRatingEvent.Model.CodingKeys()
{
  return &type metadata for RemoveReviewAndRatingEvent.Model.CodingKeys;
}

unint64_t sub_1FACB0()
{
  unint64_t result = qword_324100;
  if (!qword_324100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324100);
  }
  return result;
}

unint64_t sub_1FAD08()
{
  unint64_t result = qword_324108;
  if (!qword_324108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324108);
  }
  return result;
}

unint64_t sub_1FAD60()
{
  unint64_t result = qword_324110;
  if (!qword_324110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324110);
  }
  return result;
}

uint64_t sub_1FADB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954776569766572 && a2 == 0xEE00617461446570 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::ReviewType_optional __swiftcall ReviewType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9480;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ReviewType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69746172;
      break;
    case 2:
      uint64_t result = 0x776569766572;
      break;
    case 3:
      uint64_t result = 0x6E41776569766572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1FB0B4(unsigned __int8 *a1, char *a2)
{
  return sub_316F0(*a1, *a2);
}

unint64_t sub_1FB0C4()
{
  unint64_t result = qword_324118;
  if (!qword_324118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324118);
  }
  return result;
}

Swift::Int sub_1FB118()
{
  return sub_27E420();
}

uint64_t sub_1FB1F8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1FB2C0()
{
  return sub_27E420();
}

BookAnalytics::ReviewType_optional sub_1FB39C(Swift::String *a1)
{
  return ReviewType.init(rawValue:)(*a1);
}

void sub_1FB3A8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x676E69746172;
      goto LABEL_3;
    case 2:
      *a1 = 0x776569766572;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6E41776569766572;
      a1[1] = 0xEF676E6974615264;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1FB448()
{
  return sub_27DED0();
}

uint64_t sub_1FB4A8()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ReviewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FB5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewType()
{
  return &type metadata for ReviewType;
}

unint64_t sub_1FB5FC()
{
  unint64_t result = qword_324120;
  if (!qword_324120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324120);
  }
  return result;
}

uint64_t sub_1FB650(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324128, &enum case for SessionGroup.default(_:));
}

uint64_t static YearInReviewExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315BF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324128, a1);
}

uint64_t sub_1FB6B0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324140, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static YearInReviewExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324140, a1);
}

uint64_t YearInReviewExposureEvent.yIRSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_324158);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t YearInReviewExposureEvent.yIRSourceData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_324158);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t YearInReviewExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for YearInReviewExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3241D0);
}

uint64_t YearInReviewExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*YearInReviewExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YearInReviewExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t YearInReviewExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*YearInReviewExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t YearInReviewExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for YearInReviewExposureEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t YearInReviewExposureEvent.Model.yIRSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[9];
  long long v3 = v1[7];
  long long v24 = v1[8];
  long long v25 = v2;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[5];
  long long v7 = v1[3];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = v1[10];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v13;
  char v27 = *((unsigned char *)v1 + 176);
  *(unsigned char *)(a1 + 176) = *((unsigned char *)v1 + 176);
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v7;
  return sub_1AC854((uint64_t)v17);
}

uint64_t YearInReviewExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for YearInReviewExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_324270);
}

uint64_t YearInReviewExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for YearInReviewExposureEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t YearInReviewExposureEvent.Model.init(yIRSourceData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v7 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a4 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a4 + 144) = v7;
  *(_OWORD *)(a4 + 160) = *(_OWORD *)(a1 + 160);
  *(unsigned char *)(a4 + 176) = *(unsigned char *)(a1 + 176);
  long long v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 80) = v8;
  long long v9 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a4 + 112) = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 48) = v11;
  uint64_t v12 = type metadata accessor for YearInReviewExposureEvent.Model(0);
  uint64_t v13 = a4 + *(int *)(v12 + 20);
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  uint64_t v15 = a4 + *(int *)(v12 + 24);
  uint64_t v16 = sub_27D7F0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);

  return v17(v15, a3, v16);
}

uint64_t sub_1FBE58()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6372756F53524979;
  }
}

uint64_t sub_1FBEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1FE2C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1FBEF0(uint64_t a1)
{
  unint64_t v2 = sub_1FC208();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1FBF2C(uint64_t a1)
{
  unint64_t v2 = sub_1FC208();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t YearInReviewExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_324160);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_1FC208();
  sub_27E440();
  long long v9 = v3[9];
  long long v24 = v3[8];
  long long v25 = v9;
  long long v26 = v3[10];
  char v27 = *((unsigned char *)v3 + 176);
  long long v10 = v3[5];
  long long v20 = v3[4];
  long long v21 = v10;
  long long v11 = v3[7];
  long long v22 = v3[6];
  long long v23 = v11;
  long long v12 = v3[1];
  long long v16 = *v3;
  long long v17 = v12;
  long long v13 = v3[3];
  long long v18 = v3[2];
  long long v19 = v13;
  v15[15] = 0;
  sub_1AC8E8();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for YearInReviewExposureEvent.Model(0);
    LOBYTE(v16) = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v16) = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1FC208()
{
  unint64_t result = qword_324168;
  if (!qword_324168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324168);
  }
  return result;
}

uint64_t YearInReviewExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_27D7F0();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  char v27 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_4E04(&qword_324170);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for YearInReviewExposureEvent.Model(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v32 = a1;
  sub_5900(a1, v12);
  sub_1FC208();
  uint64_t v30 = v8;
  uint64_t v13 = v47;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v32);
  }
  uint64_t v14 = (uint64_t)v11;
  char v34 = 0;
  sub_1AC890();
  sub_27E260();
  long long v15 = v44;
  *((_OWORD *)v11 + 8) = v43;
  *((_OWORD *)v11 + 9) = v15;
  *((_OWORD *)v11 + 10) = v45;
  v11[176] = v46;
  long long v16 = v40;
  *((_OWORD *)v11 + 4) = v39;
  *((_OWORD *)v11 + 5) = v16;
  long long v17 = v42;
  *((_OWORD *)v11 + 6) = v41;
  *((_OWORD *)v11 + 7) = v17;
  long long v18 = v36;
  *(_OWORD *)long long v11 = v35;
  *((_OWORD *)v11 + 1) = v18;
  long long v19 = v38;
  *((_OWORD *)v11 + 2) = v37;
  *((_OWORD *)v11 + 3) = v19;
  char v33 = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  uint64_t v47 = v9;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v11[*(int *)(v9 + 20)], v6, v4);
  char v33 = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v20 = v26;
  long long v21 = v27;
  uint64_t v23 = 0;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v14 + *(int *)(v47 + 24), v21, v20);
  sub_1FC764(v14, v25);
  sub_5E94((uint64_t)v32);
  return sub_1FC7C8(v14);
}

uint64_t sub_1FC764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YearInReviewExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1FC7C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YearInReviewExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1FC824@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YearInReviewExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1FC83C(void *a1)
{
  return YearInReviewExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1FC854@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315BF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324128, a1);
}

uint64_t sub_1FC88C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324140, a1);
}

uint64_t sub_1FC8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for YearInReviewExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_324158);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for YearInReviewExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_324158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1FD09C);
}

uint64_t sub_1FD09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_324158);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for YearInReviewExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1FD208);
}

uint64_t sub_1FD208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_324158);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1FD36C()
{
  sub_1FD470();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1FD470()
{
  if (!qword_3241E0)
  {
    sub_1AC890();
    sub_1AC8E8();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_3241E0);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v7 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = a2[11];
    uint64_t v9 = a2[12];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(void *)(a1 + 120) = a2[15];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = a2[17];
    uint64_t v10 = a2[19];
    *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
    *(void *)(a1 + 152) = v10;
    uint64_t v11 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = v9;
    uint64_t v15 = sub_27D7C0();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t destroy for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v9;
  uint64_t v10 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  uint64_t v14 = sub_27D7C0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v8 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1FDD68);
}

uint64_t sub_1FDD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for YearInReviewExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1FDEB4);
}

uint64_t sub_1FDEB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 80) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1FDFE0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YearInReviewExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FE180);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewExposureEvent.Model.CodingKeys()
{
  return &type metadata for YearInReviewExposureEvent.Model.CodingKeys;
}

unint64_t sub_1FE1BC()
{
  unint64_t result = qword_3242B0;
  if (!qword_3242B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242B0);
  }
  return result;
}

unint64_t sub_1FE214()
{
  unint64_t result = qword_3242B8;
  if (!qword_3242B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242B8);
  }
  return result;
}

unint64_t sub_1FE26C()
{
  unint64_t result = qword_3242C0;
  if (!qword_3242C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242C0);
  }
  return result;
}

uint64_t sub_1FE2C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6372756F53524979 && a2 == 0xED00006174614465;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1FE458()
{
  if (*v0) {
    return 0x54746E756F636361;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1FE4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1FEF74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1FE4C8(uint64_t a1)
{
  unint64_t v2 = sub_1FEAB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1FE504(uint64_t a1)
{
  unint64_t v2 = sub_1FEAB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3242C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_1FEAB8();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_1FEB0C();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_1FEB60();
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AccountData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3242E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1FEAB8();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_1FEBB4();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_1FEC08();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1FE8A8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AccountData.init(from:)(a1, a2);
}

uint64_t sub_1FE8C0(void *a1)
{
  return AccountData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics11AccountDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  int v3 = a1[1];
  int v4 = a2[1];
  unint64_t v5 = 0xE500000000000000;
  uint64_t v6 = 0x6E49676F6CLL;
  if (v2 != 1)
  {
    uint64_t v6 = 0x74754F676F6CLL;
    unint64_t v5 = 0xE600000000000000;
  }
  if (*a1) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = 0xE700000000000000;
  }
  unint64_t v9 = 0xE500000000000000;
  uint64_t v10 = 0x6E49676F6CLL;
  if (*a2 != 1)
  {
    uint64_t v10 = 0x74754F676F6CLL;
    unint64_t v9 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v7 == v11 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v13 = sub_27E370();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v14 = 0;
  if (v13)
  {
LABEL_21:
    uint64_t v15 = 0x64756F6C4369;
    if (v3 != 1) {
      uint64_t v15 = 0x73656E755469;
    }
    if (v3) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0x6E776F6E6B6E75;
    }
    if (v3) {
      unint64_t v17 = 0xE600000000000000;
    }
    else {
      unint64_t v17 = 0xE700000000000000;
    }
    if (v4)
    {
      unint64_t v18 = 0xE600000000000000;
      if (v4 == 1)
      {
        if (v16 != 0x64756F6C4369) {
          goto LABEL_38;
        }
      }
      else if (v16 != 0x73656E755469)
      {
        goto LABEL_38;
      }
    }
    else
    {
      unint64_t v18 = 0xE700000000000000;
      if (v16 != 0x6E776F6E6B6E75) {
        goto LABEL_38;
      }
    }
    if (v17 == v18)
    {
      char v14 = 1;
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
LABEL_38:
    char v14 = sub_27E370();
    goto LABEL_39;
  }
  return v14 & 1;
}

unint64_t sub_1FEAB8()
{
  unint64_t result = qword_3242D0;
  if (!qword_3242D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242D0);
  }
  return result;
}

unint64_t sub_1FEB0C()
{
  unint64_t result = qword_3242D8;
  if (!qword_3242D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242D8);
  }
  return result;
}

unint64_t sub_1FEB60()
{
  unint64_t result = qword_3242E0;
  if (!qword_3242E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242E0);
  }
  return result;
}

unint64_t sub_1FEBB4()
{
  unint64_t result = qword_3242F0;
  if (!qword_3242F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242F0);
  }
  return result;
}

unint64_t sub_1FEC08()
{
  unint64_t result = qword_3242F8;
  if (!qword_3242F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3242F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FED30);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountData()
{
  return &type metadata for AccountData;
}

unsigned char *storeEnumTagSinglePayload for AccountData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FEE34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountData.CodingKeys()
{
  return &type metadata for AccountData.CodingKeys;
}

unint64_t sub_1FEE70()
{
  unint64_t result = qword_324300;
  if (!qword_324300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324300);
  }
  return result;
}

unint64_t sub_1FEEC8()
{
  unint64_t result = qword_324308;
  if (!qword_324308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324308);
  }
  return result;
}

unint64_t sub_1FEF20()
{
  unint64_t result = qword_324310;
  if (!qword_324310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324310);
  }
  return result;
}

uint64_t sub_1FEF74(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B19A0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E756F636361 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::DialogActionType_optional __swiftcall DialogActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9500;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 15;
  if (v5 < 0xF) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t DialogActionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F4E657461647075;
      break;
    case 2:
      uint64_t result = 0x614C657461647075;
      break;
    case 3:
      uint64_t result = 27503;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x74754F6E676973;
      break;
    case 6:
      uint64_t result = 0x746F67726F4669;
      break;
    case 7:
      uint64_t result = 0x6C65636E6163;
      break;
    case 8:
    case 0xB:
      uint64_t result = 0x74736F4D74726F73;
      break;
    case 9:
      uint64_t result = 0xD000000000000011;
      break;
    case 0xA:
      uint64_t result = 0xD000000000000010;
      break;
    case 0xC:
      uint64_t result = 1701736302;
      break;
    case 0xD:
      uint64_t result = 0x73676E6974746573;
      break;
    case 0xE:
      uint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1FF2A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_310F0(*a1, *a2);
}

unint64_t sub_1FF2B0()
{
  unint64_t result = qword_324318;
  if (!qword_324318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324318);
  }
  return result;
}

Swift::Int sub_1FF304()
{
  return sub_27E420();
}

uint64_t sub_1FF36C()
{
  DialogActionType.rawValue.getter();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1FF3D0()
{
  return sub_27E420();
}

BookAnalytics::DialogActionType_optional sub_1FF434(Swift::String *a1)
{
  return DialogActionType.init(rawValue:)(*a1);
}

uint64_t sub_1FF440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DialogActionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1FF468()
{
  return sub_27DED0();
}

uint64_t sub_1FF4C8()
{
  return sub_27DEC0();
}

uint64_t getEnumTagSinglePayload for DialogActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DialogActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FF674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogActionType()
{
  return &type metadata for DialogActionType;
}

unint64_t sub_1FF6AC()
{
  unint64_t result = qword_324320;
  if (!qword_324320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324320);
  }
  return result;
}

unint64_t sub_1FF700()
{
  return 0xD000000000000017;
}

uint64_t sub_1FF71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1FFE84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1FF748(uint64_t a1)
{
  unint64_t v2 = sub_1FFAA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1FF784(uint64_t a1)
{
  unint64_t v2 = sub_1FFAA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RedownloadFailData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_324328);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_1FFAA0();
  sub_27E440();
  char v10 = v7;
  sub_1FFAF4();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RedownloadFailData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324340);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_1FFAA0();
  sub_27E430();
  if (!v2)
  {
    sub_1FFB48();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_1FFA70@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RedownloadFailData.init(from:)(a1, a2);
}

uint64_t sub_1FFA88(void *a1)
{
  return RedownloadFailData.encode(to:)(a1);
}

unint64_t sub_1FFAA0()
{
  unint64_t result = qword_324330;
  if (!qword_324330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324330);
  }
  return result;
}

unint64_t sub_1FFAF4()
{
  unint64_t result = qword_324338;
  if (!qword_324338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324338);
  }
  return result;
}

unint64_t sub_1FFB48()
{
  unint64_t result = qword_324348;
  if (!qword_324348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324348);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RedownloadFailData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FFC70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadFailData()
{
  return &type metadata for RedownloadFailData;
}

unsigned char *storeEnumTagSinglePayload for RedownloadFailData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1FFD44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadFailData.CodingKeys()
{
  return &type metadata for RedownloadFailData.CodingKeys;
}

unint64_t sub_1FFD80()
{
  unint64_t result = qword_324350;
  if (!qword_324350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324350);
  }
  return result;
}

unint64_t sub_1FFDD8()
{
  unint64_t result = qword_324358;
  if (!qword_324358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324358);
  }
  return result;
}

unint64_t sub_1FFE30()
{
  unint64_t result = qword_324360;
  if (!qword_324360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324360);
  }
  return result;
}

uint64_t sub_1FFE84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000000002B19C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BOOL static SessionEndReasonData.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 != 4) {
    return v3 != 4 && (sub_2F86C(v2, v3) & 1) != 0;
  }
  return v3 == 4;
}

uint64_t sub_1FFF5C()
{
  return 0x6F73616552646E65;
}

uint64_t sub_1FFF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F73616552646E65 && a2 == 0xED0000657079546ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20003C(uint64_t a1)
{
  unint64_t v2 = sub_2001FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_200078(uint64_t a1)
{
  unint64_t v2 = sub_2001FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionEndReasonData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_324368);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_2001FC();
  sub_27E440();
  char v10 = v7;
  sub_200250();
  sub_27E2C0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2001FC()
{
  unint64_t result = qword_324370;
  if (!qword_324370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324370);
  }
  return result;
}

unint64_t sub_200250()
{
  unint64_t result = qword_324378;
  if (!qword_324378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324378);
  }
  return result;
}

uint64_t SessionEndReasonData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324380);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_2001FC();
  sub_27E430();
  if (!v2)
  {
    sub_20040C();
    sub_27E1F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_20040C()
{
  unint64_t result = qword_324388;
  if (!qword_324388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324388);
  }
  return result;
}

uint64_t sub_200468@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SessionEndReasonData.init(from:)(a1, a2);
}

uint64_t sub_200480(void *a1)
{
  return SessionEndReasonData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SessionEndReasonData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  if (*a1 <= 4u) {
    int v6 = 4;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 5;
  if (*a1 < 4u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionEndReasonData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x200604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionEndReasonData()
{
  return &type metadata for SessionEndReasonData;
}

unsigned char *storeEnumTagSinglePayload for SessionEndReasonData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2006D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionEndReasonData.CodingKeys()
{
  return &type metadata for SessionEndReasonData.CodingKeys;
}

unint64_t sub_200714()
{
  unint64_t result = qword_324390;
  if (!qword_324390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324390);
  }
  return result;
}

unint64_t sub_20076C()
{
  unint64_t result = qword_324398;
  if (!qword_324398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324398);
  }
  return result;
}

unint64_t sub_2007C4()
{
  unint64_t result = qword_3243A0;
  if (!qword_3243A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3243A0);
  }
  return result;
}

uint64_t sub_200818(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3243A8, &enum case for SessionGroup.default(_:));
}

uint64_t static AnnotationActionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C08, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3243A8, a1);
}

uint64_t sub_200878(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3243C0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AnnotationActionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C10, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3243C0, a1);
}

uint64_t AnnotationActionEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AnnotationActionEvent(uint64_t a1)
{
  return sub_5338(a1, qword_324448);
}

uint64_t AnnotationActionEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationActionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AnnotationActionEvent.viewData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AnnotationActionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AnnotationActionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationActionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AnnotationActionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AnnotationActionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for AnnotationActionEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_317858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t AnnotationActionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnnotationActionEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AnnotationActionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3244E0);
}

uint64_t AnnotationActionEvent.Model.init(contentData:viewData:eventData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  __int16 v16 = *a2;
  char v17 = *((unsigned char *)a2 + 2);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(_WORD *)(a4 + 96) = v16;
  *(unsigned char *)(a4 + 98) = v17;
  uint64_t v18 = a4 + *(int *)(type metadata accessor for AnnotationActionEvent.Model(0) + 24);
  uint64_t v19 = sub_27D7C0();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);

  return v20(v18, a3, v19);
}

uint64_t sub_200E18(uint64_t a1)
{
  unint64_t v2 = sub_2010EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_200E54(uint64_t a1)
{
  unint64_t v2 = sub_2010EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AnnotationActionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_3243D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_2010EC();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v25 = *v4;
  uint64_t v26 = v10;
  char v27 = v11;
  long long v28 = v12;
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  __int16 v31 = v15;
  int v32 = v16;
  char v33 = v17;
  int v34 = v18;
  char v35 = v19;
  int v36 = *(_DWORD *)((char *)v4 + 73);
  char v37 = v20;
  long long v38 = *((_OWORD *)v4 + 5);
  char v24 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *((unsigned char *)v4 + 98);
    LOWORD(v25) = *((_WORD *)v4 + 48);
    BYTE2(v25) = v21;
    char v24 = 1;
    sub_F3B0();
    sub_27E330();
    type metadata accessor for AnnotationActionEvent.Model(0);
    LOBYTE(v25) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2010EC()
{
  unint64_t result = qword_3243E0;
  if (!qword_3243E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3243E0);
  }
  return result;
}

uint64_t AnnotationActionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_3243E8);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AnnotationActionEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v35 = a1;
  sub_5900(a1, v13);
  sub_2010EC();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v14 = v33;
  __int16 v15 = v6;
  char v50 = 0;
  sub_1A98C();
  uint64_t v16 = v34;
  sub_27E260();
  uint64_t v17 = v37;
  char v18 = v38;
  long long v19 = v39;
  uint64_t v20 = v40;
  uint64_t v21 = v41;
  __int16 v22 = v42;
  int v23 = v43;
  char v24 = v44;
  int v25 = v45;
  char v26 = v46;
  char v27 = v48;
  *(void *)long long v12 = v36;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v47;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v49;
  char v50 = 1;
  sub_F358();
  sub_27E260();
  char v28 = BYTE2(v36);
  *((_WORD *)v12 + 48) = v36;
  v12[98] = v28;
  LOBYTE(v36) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_20152C((uint64_t)v12, v32);
  sub_5E94((uint64_t)v35);
  return sub_201590((uint64_t)v12);
}

uint64_t sub_20152C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnotationActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_201590(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnnotationActionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2015EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnnotationActionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_201604(void *a1)
{
  return AnnotationActionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20161C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C08, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3243A8, a1);
}

uint64_t sub_201654@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C10, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3243C0, a1);
}

uint64_t getEnumTagSinglePayload for AnnotationActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2016A0);
}

uint64_t sub_2016A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317858);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  __int16 v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AnnotationActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20180C);
}

uint64_t sub_20180C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317858);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t getEnumTagSinglePayload for AnnotationActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_201984);
}

uint64_t sub_201984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnnotationActionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_201A48);
}

uint64_t sub_201A48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_201AF0()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnnotationActionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x201C5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationActionEvent.Model.CodingKeys()
{
  return &type metadata for AnnotationActionEvent.Model.CodingKeys;
}

unint64_t sub_201C98()
{
  unint64_t result = qword_324520;
  if (!qword_324520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324520);
  }
  return result;
}

unint64_t sub_201CF0()
{
  unint64_t result = qword_324528;
  if (!qword_324528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324528);
  }
  return result;
}

unint64_t sub_201D48()
{
  unint64_t result = qword_324530;
  if (!qword_324530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324530);
  }
  return result;
}

BookAnalytics::ListeningActionSourceType_optional __swiftcall ListeningActionSourceType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9688;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t ListeningActionSourceType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7070416E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x79616C50726163;
      break;
    case 4:
      unint64_t result = 0x6979616C50776F6ELL;
      break;
    case 5:
      unint64_t result = 0x746F6F5465756C62;
      break;
    case 6:
      unint64_t result = 6452085;
      break;
    case 7:
      unint64_t result = 0x6863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_201EF0(unsigned __int8 *a1, char *a2)
{
  return sub_2EB24(*a1, *a2);
}

unint64_t sub_201F00()
{
  unint64_t result = qword_324538;
  if (!qword_324538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324538);
  }
  return result;
}

Swift::Int sub_201F54()
{
  return sub_25D3A0();
}

uint64_t sub_201F60()
{
  return sub_27B7E0();
}

Swift::Int sub_201F68()
{
  return sub_25D3A0();
}

BookAnalytics::ListeningActionSourceType_optional sub_201F70(Swift::String *a1)
{
  return ListeningActionSourceType.init(rawValue:)(*a1);
}

unint64_t sub_201F7C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ListeningActionSourceType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_201FA4()
{
  return sub_27DED0();
}

uint64_t sub_202004()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ListeningActionSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x202120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningActionSourceType()
{
  return &type metadata for ListeningActionSourceType;
}

unint64_t sub_202158()
{
  unint64_t result = qword_324540;
  if (!qword_324540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324540);
  }
  return result;
}

uint64_t sub_2021AC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324548, &enum case for SessionGroup.default(_:));
}

uint64_t static ReportAnIssueEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C18, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324548, a1);
}

uint64_t sub_20220C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324560, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReportAnIssueEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C20, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324560, a1);
}

uint64_t ReportAnIssueEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3245E8);
}

uint64_t ReportAnIssueEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReportAnIssueEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReportAnIssueEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ReportAnIssueEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t ReportAnIssueEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReportAnIssueEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAnIssueEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_324678);
}

uint64_t ReportAnIssueEvent.Model.init(contentData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  long long v6 = *(_OWORD *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  __int16 v9 = *(_WORD *)(a1 + 56);
  int v10 = *(_DWORD *)(a1 + 60);
  char v11 = *(unsigned char *)(a1 + 64);
  int v12 = *(_DWORD *)(a1 + 68);
  char v13 = *(unsigned char *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 77);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v4;
  *(unsigned char *)(a3 + 16) = v5;
  *(_OWORD *)(a3 + 24) = v6;
  *(void *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v8;
  *(_WORD *)(a3 + 56) = v9;
  *(_DWORD *)(a3 + 60) = v10;
  *(unsigned char *)(a3 + 64) = v11;
  *(_DWORD *)(a3 + 68) = v12;
  *(unsigned char *)(a3 + 72) = v13;
  *(_DWORD *)(a3 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a3 + 77) = v14;
  *(_OWORD *)(a3 + 80) = *(_OWORD *)(a1 + 80);
  uint64_t v15 = a3 + *(int *)(type metadata accessor for ReportAnIssueEvent.Model(0) + 20);
  uint64_t v16 = sub_27D7C0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);

  return v17(v15, a2, v16);
}

uint64_t sub_202608(uint64_t a1)
{
  unint64_t v2 = sub_202894();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_202644(uint64_t a1)
{
  unint64_t v2 = sub_202894();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReportAnIssueEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_324578);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __int16 v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_202894();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v23 = *v4;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)((char *)v4 + 73);
  char v35 = v20;
  long long v36 = *((_OWORD *)v4 + 5);
  v22[15] = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    type metadata accessor for ReportAnIssueEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_202894()
{
  unint64_t result = qword_324580;
  if (!qword_324580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324580);
  }
  return result;
}

uint64_t ReportAnIssueEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v31 = sub_27D7C0();
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  char v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_4E04(&qword_324588);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReportAnIssueEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_202894();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v27 = a1;
  uint64_t v12 = v30;
  uint64_t v11 = v31;
  uint64_t v13 = v5;
  char v47 = 0;
  sub_1A98C();
  uint64_t v14 = v32;
  sub_27E260();
  uint64_t v15 = v34;
  char v16 = v35;
  long long v17 = v36;
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  __int16 v20 = v39;
  int v21 = v40;
  char v22 = v41;
  int v23 = v42;
  char v24 = v43;
  char v25 = v45;
  *(void *)uint64_t v10 = v33;
  *((void *)v10 + 1) = v15;
  unsigned char v10[16] = v16;
  *(_OWORD *)(v10 + 24) = v17;
  *((void *)v10 + 5) = v18;
  *((void *)v10 + 6) = v19;
  *((_WORD *)v10 + 28) = v20;
  *((_DWORD *)v10 + 15) = v21;
  v10[64] = v22;
  *((_DWORD *)v10 + 17) = v23;
  v10[72] = v24;
  *(_DWORD *)(v10 + 73) = v44;
  v10[77] = v25;
  *((_OWORD *)v10 + 5) = v46;
  LOBYTE(v33) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v10[*(int *)(v8 + 20)], v13, v11);
  sub_202C74((uint64_t)v10, v29);
  sub_5E94((uint64_t)v27);
  return sub_202CD8((uint64_t)v10);
}

uint64_t sub_202C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportAnIssueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_202CD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportAnIssueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_202D34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReportAnIssueEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_202D4C(void *a1)
{
  return ReportAnIssueEvent.Model.encode(to:)(a1);
}

uint64_t sub_202D64@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C18, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324548, a1);
}

uint64_t sub_202D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C20, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324560, a1);
}

uint64_t sub_202DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t getEnumTagSinglePayload for ReportAnIssueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_202EB4);
}

uint64_t sub_202EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_202FC8);
}

uint64_t sub_202FC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void *initializeBufferWithCopyOfBuffer for ReportAnIssueEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = a1 + v10;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_203640);
}

uint64_t sub_203640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReportAnIssueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_203704);
}

uint64_t sub_203704(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2037AC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReportAnIssueEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x203910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportAnIssueEvent.Model.CodingKeys()
{
  return &type metadata for ReportAnIssueEvent.Model.CodingKeys;
}

unint64_t sub_20394C()
{
  unint64_t result = qword_3246B0;
  if (!qword_3246B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3246B0);
  }
  return result;
}

unint64_t sub_2039A4()
{
  unint64_t result = qword_3246B8;
  if (!qword_3246B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3246B8);
  }
  return result;
}

unint64_t sub_2039FC()
{
  unint64_t result = qword_3246C0;
  if (!qword_3246C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3246C0);
  }
  return result;
}

uint64_t sub_203A50(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3246C8, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingBrightnessChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3246C8, a1);
}

uint64_t sub_203AB0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3246E0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingBrightnessChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3246E0, a1);
}

uint64_t ReadingBrightnessChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingBrightnessChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_324770);
}

uint64_t ReadingBrightnessChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBrightnessChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBrightnessChangeEvent.brightnessData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3246F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingBrightnessChangeEvent.brightnessData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_3246F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBrightnessChangeEvent.brightnessData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBrightnessChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingBrightnessChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBrightnessChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBrightnessChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingBrightnessChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

void ReadingBrightnessChangeEvent.Model.brightnessData.getter(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(v1 + 112);
}

uint64_t ReadingBrightnessChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingBrightnessChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_324810);
}

uint64_t ReadingBrightnessChangeEvent.Model.init(readingSessionData:contentData:brightnessData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, int *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  int v25 = *a3;
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(_DWORD *)(a5 + 112) = v25;
  uint64_t v26 = a5 + *(int *)(type metadata accessor for ReadingBrightnessChangeEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_204214()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x656E746867697262;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2042C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2062EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2042E8(uint64_t a1)
{
  unint64_t v2 = sub_20461C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_204324(uint64_t a1)
{
  unint64_t v2 = sub_20461C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingBrightnessChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_324700);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_20461C();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  LODWORD(v28) = v10;
  BYTE4(v28) = v11;
  BYTE5(v28) = v12;
  BYTE6(v28) = v13;
  char v41 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = v14;
    char v29 = v15;
    long long v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    __int16 v33 = v19;
    int v34 = v20;
    char v35 = v21;
    int v36 = v22;
    char v37 = v23;
    int v38 = *(_DWORD *)(v3 + 89);
    char v39 = v24;
    long long v40 = *(_OWORD *)(v3 + 96);
    char v41 = 1;
    sub_1A1D4();
    sub_27E330();
    LODWORD(v27) = *(_DWORD *)(v3 + 112);
    char v41 = 2;
    sub_13CE34();
    sub_27E330();
    type metadata accessor for ReadingBrightnessChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20461C()
{
  unint64_t result = qword_324708;
  if (!qword_324708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324708);
  }
  return result;
}

uint64_t ReadingBrightnessChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_324710);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingBrightnessChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v44 = a1;
  sub_5900(a1, v12);
  sub_20461C();
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v42;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v43;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v46);
  int v19 = v47;
  char v20 = BYTE4(v47);
  char v21 = BYTE5(v47);
  char v22 = BYTE6(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v46;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = v47;
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v39[1] = v28;
  v39[2] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_13CDDC();
  sub_27E260();
  *(_DWORD *)(v23 + 112) = v46;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v23 + *(int *)(v45 + 28), v15, v3);
  sub_204AD4(v23, v41);
  sub_5E94((uint64_t)v44);
  return sub_204B38(v23);
}

uint64_t sub_204AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingBrightnessChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_204B38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingBrightnessChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_204B94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingBrightnessChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_204BAC(void *a1)
{
  return ReadingBrightnessChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_204BC4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3246C8, a1);
}

uint64_t sub_204BFC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3246E0, a1);
}

uint64_t sub_204C34@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingBrightnessChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_3246F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingBrightnessChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_3246F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_205614);
}

uint64_t sub_205614(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_3246F8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingBrightnessChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2057D0);
}

uint64_t sub_2057D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_3246F8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_205984()
{
  sub_205B6C(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_205B6C(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_205B6C(319, (unint64_t *)&unk_324780, (void (*)(void))sub_13CDDC, (void (*)(void))sub_13CE34);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_205B6C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t assignWithCopy for ReadingBrightnessChangeEvent.Model(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 13) = *((unsigned char *)a2 + 13);
  *(unsigned char *)(a1 + 14) = *((unsigned char *)a2 + 14);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  int v8 = a2[19];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 76) = v8;
  int v9 = a2[21];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_DWORD *)(a1 + 84) = v9;
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(unsigned char *)(a1 + 91) = *((unsigned char *)a2 + 91);
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(unsigned char *)(a1 + 93) = *((unsigned char *)a2 + 93);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = a2[28];
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for ReadingBrightnessChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 89) = *(_DWORD *)(a2 + 89);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingBrightnessChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_205EC4);
}

uint64_t sub_205EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingBrightnessChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_205F88);
}

uint64_t sub_205F88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_206030()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingBrightnessChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2061ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingBrightnessChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingBrightnessChangeEvent.Model.CodingKeys;
}

unint64_t sub_2061E8()
{
  unint64_t result = qword_324850;
  if (!qword_324850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324850);
  }
  return result;
}

unint64_t sub_206240()
{
  unint64_t result = qword_324858;
  if (!qword_324858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324858);
  }
  return result;
}

unint64_t sub_206298()
{
  unint64_t result = qword_324860;
  if (!qword_324860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324860);
  }
  return result;
}

uint64_t sub_2062EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E746867697262 && a2 == 0xEE00617461447373 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2064EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324868, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingScrollViewSettingChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C38, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324868, a1);
}

uint64_t sub_20654C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324880, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingScrollViewSettingChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C40, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324880, a1);
}

uint64_t ReadingScrollViewSettingChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingScrollViewSettingChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_324910);
}

uint64_t ReadingScrollViewSettingChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingScrollViewSettingChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingScrollViewSettingChangeEvent.scrollViewSettingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_324898);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingScrollViewSettingChangeEvent.scrollViewSettingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_324898);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingScrollViewSettingChangeEvent.scrollViewSettingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingScrollViewSettingChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingScrollViewSettingChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingScrollViewSettingChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingScrollViewSettingChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingScrollViewSettingChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ReadingScrollViewSettingChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3249B0);
}

uint64_t ReadingScrollViewSettingChangeEvent.Model.init(readingSessionData:contentData:scrollViewSettingData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  char v25 = *a3;
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(unsigned char *)(a5 + 112) = v25;
  uint64_t v26 = a5 + *(int *)(type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_206CA4()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_206D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_208AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_206D6C(uint64_t a1)
{
  unint64_t v2 = sub_2070A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_206DA8(uint64_t a1)
{
  unint64_t v2 = sub_2070A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingScrollViewSettingChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3248A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_2070A0();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  LODWORD(v28) = v10;
  BYTE4(v28) = v11;
  BYTE5(v28) = v12;
  BYTE6(v28) = v13;
  char v41 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = v14;
    char v29 = v15;
    long long v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    __int16 v33 = v19;
    int v34 = v20;
    char v35 = v21;
    int v36 = v22;
    char v37 = v23;
    int v38 = *(_DWORD *)(v3 + 89);
    char v39 = v24;
    long long v40 = *(_OWORD *)(v3 + 96);
    char v41 = 1;
    sub_1A1D4();
    sub_27E330();
    LOBYTE(v27) = *(unsigned char *)(v3 + 112);
    char v41 = 2;
    sub_103FC8();
    sub_27E330();
    type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2070A0()
{
  unint64_t result = qword_3248A8;
  if (!qword_3248A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3248A8);
  }
  return result;
}

uint64_t ReadingScrollViewSettingChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_3248B0);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v44 = a1;
  sub_5900(a1, v12);
  sub_2070A0();
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v42;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v43;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v46);
  int v19 = v47;
  char v20 = BYTE4(v47);
  char v21 = BYTE5(v47);
  char v22 = BYTE6(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v46;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = v47;
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v39[1] = v28;
  v39[2] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_103F70();
  sub_27E260();
  *(unsigned char *)(v23 + 112) = v46;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v23 + *(int *)(v45 + 28), v15, v3);
  sub_207558(v23, v41);
  sub_5E94((uint64_t)v44);
  return sub_2075BC(v23);
}

uint64_t sub_207558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2075BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingScrollViewSettingChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_207618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingScrollViewSettingChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_207630(void *a1)
{
  return ReadingScrollViewSettingChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_207648@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C38, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324868, a1);
}

uint64_t sub_207680@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C40, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324880, a1);
}

uint64_t sub_2076B8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingScrollViewSettingChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_324898);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingScrollViewSettingChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_208098);
}

uint64_t sub_208098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_324898);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingScrollViewSettingChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_208254);
}

uint64_t sub_208254(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_324898);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_208408()
{
  sub_2085F0(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_2085F0(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_2085F0(319, (unint64_t *)&unk_324920, (void (*)(void))sub_103F70, (void (*)(void))sub_103FC8);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_2085F0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ReadingScrollViewSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_208680);
}

uint64_t sub_208680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingScrollViewSettingChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_208744);
}

uint64_t sub_208744(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2087EC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingScrollViewSettingChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x208964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingScrollViewSettingChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingScrollViewSettingChangeEvent.Model.CodingKeys;
}

unint64_t sub_2089A0()
{
  unint64_t result = qword_3249F0;
  if (!qword_3249F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3249F0);
  }
  return result;
}

unint64_t sub_2089F8()
{
  unint64_t result = qword_3249F8;
  if (!qword_3249F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3249F8);
  }
  return result;
}

unint64_t sub_208A50()
{
  unint64_t result = qword_324A00;
  if (!qword_324A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324A00);
  }
  return result;
}

uint64_t sub_208AA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002B19E0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_208C7C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324A08, &enum case for SessionGroup.default(_:));
}

uint64_t static SearchSuggestionsReturnedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C48, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324A08, a1);
}

uint64_t sub_208CDC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324A20, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SearchSuggestionsReturnedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C50, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324A20, a1);
}

uint64_t SearchSuggestionsReturnedEvent.searchSuggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchSuggestionsReturnedEvent(uint64_t a1)
{
  return sub_5338(a1, qword_324AA8);
}

uint64_t SearchSuggestionsReturnedEvent.searchSuggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_31E8F0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchSuggestionsReturnedEvent.searchSuggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchSuggestionsReturnedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchSuggestionsReturnedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchSuggestionsReturnedEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SearchSuggestionsReturnedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SearchSuggestionsReturnedEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SearchSuggestionsReturnedEvent.Model.searchSuggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchSuggestionsReturnedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchSuggestionsReturnedEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_324B40);
}

uint64_t SearchSuggestionsReturnedEvent.Model.init(searchData:searchSuggestionData:eventData:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *a2;
  uint64_t v9 = *((void *)a2 + 1);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v6;
  *(void *)(a4 + 24) = v7;
  *(_DWORD *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = v9;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for SearchSuggestionsReturnedEvent.Model(0) + 24);
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_209240()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144686372616573;
  }
}

uint64_t sub_2092A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AFE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2092D0(uint64_t a1)
{
  unint64_t v2 = sub_209554();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20930C(uint64_t a1)
{
  unint64_t v2 = sub_209554();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchSuggestionsReturnedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_324A38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_209554();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  long long v15 = *v3;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v14 = 0;
  sub_B11C8();
  sub_27E330();
  if (!v2)
  {
    uint64_t v11 = *((void *)v3 + 5);
    LODWORD(v15) = *((_DWORD *)v3 + 8);
    *((void *)&v15 + 1) = v11;
    char v14 = 1;
    sub_14BD94();
    sub_27E330();
    type metadata accessor for SearchSuggestionsReturnedEvent.Model(0);
    LOBYTE(v15) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_209554()
{
  unint64_t result = qword_324A40;
  if (!qword_324A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324A40);
  }
  return result;
}

uint64_t SearchSuggestionsReturnedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_324A48);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SearchSuggestionsReturnedEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v26 = a1;
  sub_5900(a1, v13);
  sub_209554();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v26);
  }
  uint64_t v14 = v24;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v21 = v6;
  char v30 = 0;
  sub_B1968();
  uint64_t v16 = v25;
  sub_27E260();
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  *(_OWORD *)uint64_t v15 = v27;
  *(void *)(v15 + 16) = v17;
  *(void *)(v15 + 24) = v18;
  char v30 = 1;
  sub_14C1AC();
  sub_27E260();
  uint64_t v19 = *((void *)&v27 + 1);
  *(_DWORD *)(v15 + 32) = v27;
  *(void *)(v15 + 40) = v19;
  LOBYTE(v27) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v15 + *(int *)(v10 + 24), v21, v4);
  sub_209940(v15, v23);
  sub_5E94((uint64_t)v26);
  return sub_2099A4(v15);
}

uint64_t sub_209940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchSuggestionsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2099A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchSuggestionsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209A00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSuggestionsReturnedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_209A18(void *a1)
{
  return SearchSuggestionsReturnedEvent.Model.encode(to:)(a1);
}

uint64_t sub_209A30@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C48, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324A08, a1);
}

uint64_t sub_209A68@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C50, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324A20, a1);
}

uint64_t sub_209AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchSuggestionsReturnedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31A1F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_31E8F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_31E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_20A278);
}

uint64_t sub_20A278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31A1F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_31E8F0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SearchSuggestionsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20A3E4);
}

uint64_t sub_20A3E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31A1F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_31E8F0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20A548()
{
  sub_20A6BC(319, (unint64_t *)&qword_31A2D8, (void (*)(void))sub_B1968, (void (*)(void))sub_B11C8);
  if (v0 <= 0x3F)
  {
    sub_20A6BC(319, (unint64_t *)&unk_31E990, (void (*)(void))sub_14C1AC, (void (*)(void))sub_14BD94);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_20A6BC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)(a1 + 40) = a2[5];
    uint64_t v10 = sub_27D7C0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for SearchSuggestionsReturnedEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_20ABC8);
}

uint64_t sub_20ABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchSuggestionsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20AC8C);
}

uint64_t sub_20AC8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20AD34()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchSuggestionsReturnedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AEA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionsReturnedEvent.Model.CodingKeys()
{
  return &type metadata for SearchSuggestionsReturnedEvent.Model.CodingKeys;
}

unint64_t sub_20AEDC()
{
  unint64_t result = qword_324B80;
  if (!qword_324B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324B80);
  }
  return result;
}

unint64_t sub_20AF34()
{
  unint64_t result = qword_324B88;
  if (!qword_324B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324B88);
  }
  return result;
}

unint64_t sub_20AF8C()
{
  unint64_t result = qword_324B90;
  if (!qword_324B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324B90);
  }
  return result;
}

uint64_t sub_20AFE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144686372616573 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B0840 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::TargetType_optional __swiftcall TargetType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9768;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t TargetType.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20B204(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2E7C8(*a1, *a2);
}

unint64_t sub_20B214()
{
  unint64_t result = qword_324B98;
  if (!qword_324B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324B98);
  }
  return result;
}

Swift::Int sub_20B268()
{
  return sub_20BF08();
}

uint64_t sub_20B270()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_20B304()
{
  return sub_25C2D0();
}

BookAnalytics::TargetType_optional sub_20B30C(Swift::String *a1)
{
  return TargetType.init(rawValue:)(*a1);
}

void sub_20B318(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x80000000002AD680;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v4 = 0x80000000002AD6A0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20B37C()
{
  return sub_27DED0();
}

uint64_t sub_20B3DC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for TargetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetType()
{
  return &type metadata for TargetType;
}

unint64_t sub_20B530()
{
  unint64_t result = qword_324BA0;
  if (!qword_324BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BA0);
  }
  return result;
}

Swift::Int sub_20B584()
{
  return sub_27E420();
}

Swift::Int sub_20B66C()
{
  return sub_27E420();
}

Swift::Int sub_20B790()
{
  return sub_27E420();
}

Swift::Int sub_20B8AC()
{
  return sub_27E420();
}

Swift::Int sub_20B9E0()
{
  return sub_27E420();
}

Swift::Int sub_20BAF0()
{
  return sub_27E420();
}

Swift::Int sub_20BB78()
{
  return sub_27E420();
}

Swift::Int sub_20BC68()
{
  return sub_27E420();
}

Swift::Int sub_20BD1C()
{
  return sub_27E420();
}

Swift::Int sub_20BE10()
{
  return sub_27E420();
}

Swift::Int sub_20BF08()
{
  return sub_27E420();
}

Swift::Int sub_20BFB0()
{
  return sub_27E420();
}

BookAnalytics::SearchEndMethod_optional __swiftcall SearchEndMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F97D0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t SearchEndMethod.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x75426C65636E6163;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x656E6F646E616261;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20C1A4()
{
  unint64_t result = qword_324BA8;
  if (!qword_324BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BA8);
  }
  return result;
}

Swift::Int sub_20C1F8()
{
  return sub_20BFB0();
}

uint64_t sub_20C200()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_20C2D8()
{
  return sub_25CDFC();
}

BookAnalytics::SearchEndMethod_optional sub_20C2E0(Swift::String *a1)
{
  return SearchEndMethod.init(rawValue:)(*a1);
}

void sub_20C2EC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF7061546E6F7474;
      uint64_t v3 = 0x75426C65636E6163;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000000002AD6D0;
      break;
    case 3:
      *a1 = 0x656E6F646E616261;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20C39C()
{
  return sub_27DED0();
}

uint64_t sub_20C3FC()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SearchEndMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20C518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEndMethod()
{
  return &type metadata for SearchEndMethod;
}

unint64_t sub_20C550()
{
  unint64_t result = qword_324BB0;
  if (!qword_324BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BB0);
  }
  return result;
}

BookAnalytics::FilterType_optional __swiftcall FilterType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9850;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t FilterType.rawValue.getter()
{
  uint64_t result = 0x7265536E496C6C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6573616863727570;
      break;
    case 2:
      uint64_t result = 0x646165726E75;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20C698(unsigned __int8 *a1, char *a2)
{
  return sub_30E3C(*a1, *a2);
}

unint64_t sub_20C6A8()
{
  unint64_t result = qword_324BB8;
  if (!qword_324BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BB8);
  }
  return result;
}

Swift::Int sub_20C6FC()
{
  return sub_27E420();
}

uint64_t sub_20C7E0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_20C8AC()
{
  return sub_27E420();
}

BookAnalytics::FilterType_optional sub_20C98C(Swift::String *a1)
{
  return FilterType.init(rawValue:)(*a1);
}

void sub_20C998(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000736569;
  uint64_t v3 = 0x7265536E496C6C61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      uint64_t v3 = 0x6573616863727570;
      goto LABEL_3;
    case 2:
      *a1 = 0x646165726E75;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20CA3C()
{
  return sub_27DED0();
}

uint64_t sub_20CA9C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for FilterType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20CBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterType()
{
  return &type metadata for FilterType;
}

unint64_t sub_20CBF0()
{
  unint64_t result = qword_324BC0;
  if (!qword_324BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BC0);
  }
  return result;
}

uint64_t static WantListRemovalData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_8144C(*a1, *a2);
}

uint64_t sub_20CC50()
{
  return 0x536C61766F6D6572;
}

uint64_t sub_20CC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x536C61766F6D6572 && a2 == 0xEE007972616D6D75)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20CD30(uint64_t a1)
{
  unint64_t v2 = sub_20CF2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20CD6C(uint64_t a1)
{
  unint64_t v2 = sub_20CF2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WantListRemovalData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_324BC8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_20CF2C();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_324BD8);
  sub_20D124(&qword_324BE0, (void (*)(void))sub_102E8);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20CF2C()
{
  unint64_t result = qword_324BD0;
  if (!qword_324BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BD0);
  }
  return result;
}

uint64_t WantListRemovalData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324BE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_20CF2C();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_324BD8);
    sub_20D124(&qword_324BF0, (void (*)(void))sub_10290);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_20D124(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_324BD8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20D198()
{
  unint64_t result = qword_324BF8;
  if (!qword_324BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324BF8);
  }
  return result;
}

unint64_t sub_20D1F0()
{
  unint64_t result = qword_324C00;
  if (!qword_324C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C00);
  }
  return result;
}

uint64_t sub_20D244@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return WantListRemovalData.init(from:)(a1, a2);
}

uint64_t sub_20D25C(void *a1)
{
  return WantListRemovalData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WantListRemovalData()
{
  return &type metadata for WantListRemovalData;
}

unsigned char *storeEnumTagSinglePayload for WantListRemovalData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20D320);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WantListRemovalData.CodingKeys()
{
  return &type metadata for WantListRemovalData.CodingKeys;
}

unint64_t sub_20D35C()
{
  unint64_t result = qword_324C08;
  if (!qword_324C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C08);
  }
  return result;
}

unint64_t sub_20D3B4()
{
  unint64_t result = qword_324C10;
  if (!qword_324C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C10);
  }
  return result;
}

unint64_t sub_20D40C()
{
  unint64_t result = qword_324C18;
  if (!qword_324C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C18);
  }
  return result;
}

uint64_t static LibraryData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_8222C(*a1, *a2);
}

uint64_t sub_20D46C()
{
  return 0x537972617262696CLL;
}

uint64_t sub_20D490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x537972617262696CLL && a2 == 0xEE007972616D6D75)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20D54C(uint64_t a1)
{
  unint64_t v2 = sub_20D748();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20D588(uint64_t a1)
{
  unint64_t v2 = sub_20D748();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_324C20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_20D748();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_324C30);
  sub_20D940(&qword_324C38, (void (*)(void))sub_1C9EE8);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20D748()
{
  unint64_t result = qword_324C28;
  if (!qword_324C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C28);
  }
  return result;
}

uint64_t LibraryData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324C40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_20D748();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_324C30);
    sub_20D940(&qword_324C48, (void (*)(void))sub_1C9E90);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_20D940(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_324C30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20D9B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LibraryData.init(from:)(a1, a2);
}

uint64_t sub_20D9D0(void *a1)
{
  return LibraryData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LibraryData()
{
  return &type metadata for LibraryData;
}

unsigned char *storeEnumTagSinglePayload for LibraryData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20DA94);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryData.CodingKeys()
{
  return &type metadata for LibraryData.CodingKeys;
}

unint64_t sub_20DAD0()
{
  unint64_t result = qword_324C50;
  if (!qword_324C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C50);
  }
  return result;
}

unint64_t sub_20DB28()
{
  unint64_t result = qword_324C58;
  if (!qword_324C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C58);
  }
  return result;
}

unint64_t sub_20DB80()
{
  unint64_t result = qword_324C60;
  if (!qword_324C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324C60);
  }
  return result;
}

uint64_t sub_20DBD4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324C68, &enum case for SessionGroup.default(_:));
}

uint64_t static ReadingBackgroundColorChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C58, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324C68, a1);
}

uint64_t sub_20DC34(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324C80, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ReadingBackgroundColorChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C60, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324C80, a1);
}

uint64_t ReadingBackgroundColorChangeEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingBackgroundColorChangeEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_324D20);
}

uint64_t ReadingBackgroundColorChangeEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBackgroundColorChangeEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBackgroundColorChangeEvent.backgroundColorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_324C98);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingBackgroundColorChangeEvent.backgroundColorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_324C98);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBackgroundColorChangeEvent.backgroundColorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBackgroundColorChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReadingBackgroundColorChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReadingBackgroundColorChangeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ReadingBackgroundColorChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReadingBackgroundColorChangeEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ReadingBackgroundColorChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ReadingBackgroundColorChangeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_324DC0);
}

uint64_t ReadingBackgroundColorChangeEvent.Model.init(readingSessionData:contentData:backgroundColorData:eventData:)@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v7 = *a1;
  char v8 = *((unsigned char *)a1 + 4);
  int v9 = a1[2];
  char v10 = *((unsigned char *)a1 + 12);
  char v11 = *((unsigned char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 14);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  long long v16 = *(_OWORD *)(a2 + 3);
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  __int16 v19 = *((_WORD *)a2 + 28);
  int v20 = *((_DWORD *)a2 + 15);
  char v21 = *((unsigned char *)a2 + 64);
  int v22 = *((_DWORD *)a2 + 17);
  char v23 = *((unsigned char *)a2 + 72);
  char v24 = *((unsigned char *)a2 + 77);
  char v25 = *a3;
  *(_DWORD *)a5 = v7;
  *(unsigned char *)(a5 + 4) = v8;
  *(_DWORD *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 12) = v10;
  *(unsigned char *)(a5 + 13) = v11;
  *(unsigned char *)(a5 + 14) = v12;
  *(void *)(a5 + 16) = v13;
  *(void *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 40) = v16;
  *(void *)(a5 + 56) = v18;
  *(void *)(a5 + 64) = v17;
  *(_WORD *)(a5 + 72) = v19;
  *(_DWORD *)(a5 + 76) = v20;
  *(unsigned char *)(a5 + 80) = v21;
  *(_DWORD *)(a5 + 84) = v22;
  *(unsigned char *)(a5 + 88) = v23;
  *(_DWORD *)(a5 + 89) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a5 + 93) = v24;
  *(_OWORD *)(a5 + 96) = *((_OWORD *)a2 + 5);
  *(unsigned char *)(a5 + 112) = v25;
  uint64_t v26 = a5 + *(int *)(type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_20E38C()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20E42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_210234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20E454(uint64_t a1)
{
  unint64_t v2 = sub_20E788();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20E490(uint64_t a1)
{
  unint64_t v2 = sub_20E788();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingBackgroundColorChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_324CA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_20E788();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 4);
  int v10 = *(_DWORD *)(v3 + 8);
  char v11 = *(unsigned char *)(v3 + 12);
  char v12 = *(unsigned char *)(v3 + 13);
  char v13 = *(unsigned char *)(v3 + 14);
  LODWORD(v27) = *(_DWORD *)v3;
  BYTE4(v27) = v9;
  LODWORD(v28) = v10;
  BYTE4(v28) = v11;
  BYTE5(v28) = v12;
  BYTE6(v28) = v13;
  char v41 = 0;
  sub_8E178();
  sub_27E330();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v15 = *(unsigned char *)(v3 + 32);
    long long v16 = *(_OWORD *)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = *(void *)(v3 + 64);
    __int16 v19 = *(_WORD *)(v3 + 72);
    int v20 = *(_DWORD *)(v3 + 76);
    char v21 = *(unsigned char *)(v3 + 80);
    int v22 = *(_DWORD *)(v3 + 84);
    char v23 = *(unsigned char *)(v3 + 88);
    uint64_t v24 = *(unsigned __int8 *)(v3 + 93);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = v14;
    char v29 = v15;
    long long v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    __int16 v33 = v19;
    int v34 = v20;
    char v35 = v21;
    int v36 = v22;
    char v37 = v23;
    int v38 = *(_DWORD *)(v3 + 89);
    char v39 = v24;
    long long v40 = *(_OWORD *)(v3 + 96);
    char v41 = 1;
    sub_1A1D4();
    sub_27E330();
    LOBYTE(v27) = *(unsigned char *)(v3 + 112);
    char v41 = 2;
    sub_20E7DC();
    sub_27E330();
    type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0);
    LOBYTE(v27) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20E788()
{
  unint64_t result = qword_324CA8;
  if (!qword_324CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324CA8);
  }
  return result;
}

unint64_t sub_20E7DC()
{
  unint64_t result = qword_324CB0;
  if (!qword_324CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324CB0);
  }
  return result;
}

uint64_t ReadingBackgroundColorChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_324CB8);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  char v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0);
  __chkstk_darwin(v9);
  char v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v44 = a1;
  sub_5900(a1, v12);
  sub_20E788();
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v45 = v9;
  uint64_t v14 = v42;
  char v15 = v5;
  char v62 = 0;
  sub_8EBD0();
  uint64_t v16 = v43;
  uint64_t v17 = v8;
  sub_27E260();
  char v18 = BYTE4(v46);
  int v19 = v47;
  char v20 = BYTE4(v47);
  char v21 = BYTE5(v47);
  char v22 = BYTE6(v47);
  uint64_t v23 = (uint64_t)v11;
  *(_DWORD *)char v11 = v46;
  v11[4] = v18;
  *((_DWORD *)v11 + 2) = v19;
  v11[12] = v20;
  v11[13] = v21;
  v11[14] = v22;
  char v62 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v24 = v47;
  char v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  __int16 v30 = v53;
  int v31 = v54;
  char v32 = v55;
  int v33 = v56;
  char v34 = v57;
  char v35 = v59;
  uint64_t v37 = v60;
  uint64_t v36 = v61;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 48) = v27;
  *(void *)(v23 + 56) = v29;
  *(void *)(v23 + 64) = v28;
  v39[1] = v28;
  v39[2] = v36;
  *(_WORD *)(v23 + 72) = v30;
  *(_DWORD *)(v23 + 76) = v31;
  *(unsigned char *)(v23 + 80) = v32;
  *(_DWORD *)(v23 + 84) = v33;
  *(unsigned char *)(v23 + 88) = v34;
  *(_DWORD *)(v23 + 89) = v58;
  *(unsigned char *)(v23 + 93) = v35;
  *(void *)(v23 + 96) = v37;
  *(void *)(v23 + 104) = v36;
  char v62 = 2;
  sub_20EC94();
  sub_27E260();
  *(unsigned char *)(v23 + 112) = v46;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v23 + *(int *)(v45 + 28), v15, v3);
  sub_20ECE8(v23, v41);
  sub_5E94((uint64_t)v44);
  return sub_20ED4C(v23);
}

unint64_t sub_20EC94()
{
  unint64_t result = qword_324CC0;
  if (!qword_324CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324CC0);
  }
  return result;
}

uint64_t sub_20ECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20ED4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingBackgroundColorChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20EDA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingBackgroundColorChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20EDC0(void *a1)
{
  return ReadingBackgroundColorChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_20EDD8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C58, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324C68, a1);
}

uint64_t sub_20EE10@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C60, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324C80, a1);
}

uint64_t sub_20EE48@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingBackgroundColorChangeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_319200);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_324C98);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ReadingBackgroundColorChangeEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_324C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_20F828);
}

uint64_t sub_20F828(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_319200);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_324C98);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ReadingBackgroundColorChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20F9E4);
}

uint64_t sub_20F9E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_319200);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_324C98);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20FB98()
{
  sub_20FD80(319, &qword_3192E0, (void (*)(void))sub_8EBD0, (void (*)(void))sub_8E178);
  if (v0 <= 0x3F)
  {
    sub_20FD80(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_20FD80(319, (unint64_t *)&unk_324D30, (void (*)(void))sub_20EC94, (void (*)(void))sub_20E7DC);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_20FD80(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ReadingBackgroundColorChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_20FE10);
}

uint64_t sub_20FE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingBackgroundColorChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20FED4);
}

uint64_t sub_20FED4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20FF7C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadingBackgroundColorChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2100F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingBackgroundColorChangeEvent.Model.CodingKeys()
{
  return &type metadata for ReadingBackgroundColorChangeEvent.Model.CodingKeys;
}

unint64_t sub_210130()
{
  unint64_t result = qword_324E00;
  if (!qword_324E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E00);
  }
  return result;
}

unint64_t sub_210188()
{
  unint64_t result = qword_324E08;
  if (!qword_324E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E08);
  }
  return result;
}

unint64_t sub_2101E0()
{
  unint64_t result = qword_324E10;
  if (!qword_324E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E10);
  }
  return result;
}

uint64_t sub_210234(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE950 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1A00 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BookAnalytics::WelcomeScreenData __swiftcall WelcomeScreenData.init(welcomeScreenType:welcomeScreenPosition:)(BookAnalytics::WelcomeScreenData welcomeScreenType, Swift::Int32 welcomeScreenPosition)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)welcomeScreenType.welcomeScreenType;
  *(_DWORD *)(v2 + 4) = welcomeScreenPosition;
  return welcomeScreenType;
}

BOOL static WelcomeScreenData.== infix(_:_:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  int v4 = *((_DWORD *)a1 + 1);
  int v5 = *(_DWORD *)(a2 + 4);
  unint64_t v6 = 0xE700000000000000;
  uint64_t v7 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      uint64_t v7 = 0x656D6F636C6577;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x7265766F63736964;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v7 = 0x657061637365;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v7 = 2003792487;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(*(unsigned char *)a2)
  {
    case 1:
      if (v7 == 0x656D6F636C6577) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v8 = 0xE800000000000000;
      if (v7 != 0x7265766F63736964) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v2 = 0x657061637365;
      goto LABEL_12;
    case 4:
      unint64_t v8 = 0xE400000000000000;
      if (v7 != 2003792487) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v7 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        char v9 = sub_27E370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v9 & 1) == 0) {
          return result;
        }
      }
      return v4 == v5;
  }
}

unint64_t sub_2105EC()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_21062C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_210E20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_210654(uint64_t a1)
{
  unint64_t v2 = sub_21084C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_210690(uint64_t a1)
{
  unint64_t v2 = sub_21084C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WelcomeScreenData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_324E18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = *((_DWORD *)v1 + 1);
  sub_5900(a1, a1[3]);
  sub_21084C();
  sub_27E440();
  char v14 = v8;
  char v13 = 0;
  sub_2108A0();
  sub_27E330();
  if (!v2)
  {
    char v12 = 1;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_21084C()
{
  unint64_t result = qword_324E20;
  if (!qword_324E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E20);
  }
  return result;
}

unint64_t sub_2108A0()
{
  unint64_t result = qword_324E28;
  if (!qword_324E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E28);
  }
  return result;
}

uint64_t WelcomeScreenData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324E30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_21084C();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    sub_210AAC();
    sub_27E260();
    char v9 = v15;
    char v13 = 1;
    int v10 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(_DWORD *)(a2 + 4) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_210AAC()
{
  unint64_t result = qword_324E38;
  if (!qword_324E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E38);
  }
  return result;
}

uint64_t sub_210B08(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = *(_DWORD *)(a2 + 4);
  return sub_303C4(*(unsigned char *)a1, *(unsigned char *)a2) & (v2 == v3);
}

uint64_t sub_210B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WelcomeScreenData.init(from:)(a1, a2);
}

uint64_t sub_210B5C(void *a1)
{
  return WelcomeScreenData.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for WelcomeScreenData(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WelcomeScreenData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && a1[8]) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeScreenData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeScreenData()
{
  return &type metadata for WelcomeScreenData;
}

unsigned char *storeEnumTagSinglePayload for WelcomeScreenData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x210CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeScreenData.CodingKeys()
{
  return &type metadata for WelcomeScreenData.CodingKeys;
}

unint64_t sub_210D1C()
{
  unint64_t result = qword_324E40;
  if (!qword_324E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E40);
  }
  return result;
}

unint64_t sub_210D74()
{
  unint64_t result = qword_324E48;
  if (!qword_324E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E48);
  }
  return result;
}

unint64_t sub_210DCC()
{
  unint64_t result = qword_324E50;
  if (!qword_324E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E50);
  }
  return result;
}

uint64_t sub_210E20(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1A20 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002B1A40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::StartMethod_optional __swiftcall StartMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F98D0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 9;
  if (v5 < 9) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t StartMethod.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 2:
      unint64_t result = 0x65726353656D6F68;
      break;
    case 3:
      unint64_t result = 0x756F546563726F66;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 7:
      unint64_t result = 0x746567646977;
      break;
    case 8:
      unint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2110B0(unsigned __int8 *a1, char *a2)
{
  return sub_321C0(*a1, *a2);
}

unint64_t sub_2110C0()
{
  unint64_t result = qword_324E58;
  if (!qword_324E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E58);
  }
  return result;
}

Swift::Int sub_211114()
{
  return sub_27E420();
}

uint64_t sub_21115C()
{
  return sub_27C394();
}

Swift::Int sub_211164()
{
  return sub_27E420();
}

BookAnalytics::StartMethod_optional sub_2111A8(Swift::String *a1)
{
  return StartMethod.init(rawValue:)(*a1);
}

unint64_t sub_2111B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = StartMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2111DC()
{
  return sub_27DED0();
}

uint64_t sub_21123C()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for StartMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x211358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartMethod()
{
  return &type metadata for StartMethod;
}

unint64_t sub_211390()
{
  unint64_t result = qword_324E60;
  if (!qword_324E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E60);
  }
  return result;
}

uint64_t sub_2113E4()
{
  return 0x65506E6F69746361;
}

uint64_t sub_211408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65506E6F69746361 && a2 == 0xEF64656D726F6672)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2114C4(uint64_t a1)
{
  unint64_t v2 = sub_211674();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_211500(uint64_t a1)
{
  unint64_t v2 = sub_211674();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ActionData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_324E68);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_211674();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_211674()
{
  unint64_t result = qword_324E70;
  if (!qword_324E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E70);
  }
  return result;
}

uint64_t ActionData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324E78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_211674();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_211840@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActionData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for ActionData()
{
  return &type metadata for ActionData;
}

unsigned char *storeEnumTagSinglePayload for ActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x211904);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionData.CodingKeys()
{
  return &type metadata for ActionData.CodingKeys;
}

unint64_t sub_211940()
{
  unint64_t result = qword_324E80;
  if (!qword_324E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E80);
  }
  return result;
}

unint64_t sub_211998()
{
  unint64_t result = qword_324E88;
  if (!qword_324E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E88);
  }
  return result;
}

unint64_t sub_2119F0()
{
  unint64_t result = qword_324E90;
  if (!qword_324E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324E90);
  }
  return result;
}

unint64_t sub_211A48()
{
  unint64_t result = 0x44496D6F6F72;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x657079546D6F6F72;
      break;
    case 3:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_211AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2124C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_211B00(uint64_t a1)
{
  unint64_t v2 = sub_2121A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_211B3C(uint64_t a1)
{
  unint64_t v2 = sub_2121A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RoomData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_324E98);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v7;
  int v13 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  v12[0] = *(void *)(v1 + 48);
  v12[1] = v8;
  sub_5900(a1, a1[3]);
  sub_2121A8();
  sub_27E440();
  char v21 = 0;
  uint64_t v9 = v16;
  sub_27E2F0();
  if (!v9)
  {
    char v10 = v13;
    char v20 = 1;
    sub_27E2F0();
    char v19 = v10;
    char v18 = 2;
    sub_2121FC();
    sub_27E330();
    char v17 = 3;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RoomData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_324EB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_2121A8();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v29 = 0;
    uint64_t v9 = sub_27E220();
    uint64_t v12 = v11;
    uint64_t v24 = v9;
    char v28 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E220();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    char v26 = 2;
    sub_212250();
    swift_bridgeObjectRetain();
    uint64_t v23 = v15;
    sub_27E260();
    HIDWORD(v21) = v27;
    char v25 = 3;
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    uint64_t v19 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v23;
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v20;
    *(unsigned char *)(a2 + 32) = BYTE4(v21);
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_212064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RoomData.init(from:)(a1, a2);
}

uint64_t sub_21207C(void *a1)
{
  return RoomData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8RoomDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_27E370(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_27E370(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (sub_2C8E0(v4, v9))
      {
        if (v5)
        {
          if (v10 && (v6 == v11 && v5 == v10 || (sub_27E370() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v10)
        {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_2121A8()
{
  unint64_t result = qword_324EA0;
  if (!qword_324EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324EA0);
  }
  return result;
}

unint64_t sub_2121FC()
{
  unint64_t result = qword_324EA8;
  if (!qword_324EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324EA8);
  }
  return result;
}

unint64_t sub_212250()
{
  unint64_t result = qword_324EB8;
  if (!qword_324EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324EB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomData()
{
  return &type metadata for RoomData;
}

unsigned char *storeEnumTagSinglePayload for RoomData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x212388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomData.CodingKeys()
{
  return &type metadata for RoomData.CodingKeys;
}

unint64_t sub_2123C4()
{
  unint64_t result = qword_324EC0;
  if (!qword_324EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324EC0);
  }
  return result;
}

unint64_t sub_21241C()
{
  unint64_t result = qword_324EC8;
  if (!qword_324EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324EC8);
  }
  return result;
}

unint64_t sub_212474()
{
  unint64_t result = qword_324ED0;
  if (!qword_324ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324ED0);
  }
  return result;
}

uint64_t sub_2124C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D6F6F72 && a2 == 0xE600000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1A60 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657079546D6F6F72 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_212674(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_324ED8, &enum case for SessionGroup.default(_:));
}

uint64_t static DialogExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C68, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324ED8, a1);
}

uint64_t sub_2126D4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_324EF0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static DialogExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C70, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324EF0, a1);
}

uint64_t DialogExposureEvent.dialogData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31C508);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DialogExposureEvent.dialogData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31C508);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t DialogExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DialogExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_324F78);
}

uint64_t DialogExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DialogExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DialogExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DialogExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DialogExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DialogExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DialogExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DialogExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DialogExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for DialogExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t DialogExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 120);
  v11[6] = *(_OWORD *)(v1 + 104);
  v11[7] = v2;
  v11[8] = *(_OWORD *)(v1 + 136);
  uint64_t v12 = *(void *)(v1 + 152);
  long long v3 = *(_OWORD *)(v1 + 56);
  v11[2] = *(_OWORD *)(v1 + 40);
  v11[3] = v3;
  long long v4 = *(_OWORD *)(v1 + 88);
  v11[4] = *(_OWORD *)(v1 + 72);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 24);
  v11[0] = *(_OWORD *)(v1 + 8);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 136);
  *(void *)(a1 + 144) = *(void *)(v1 + 152);
  long long v7 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v9;
  return sub_35DC8((uint64_t)v11);
}

uint64_t DialogExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DialogExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325010);
}

uint64_t DialogExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DialogExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7F0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DialogExposureEvent.Model.init(dialogData:linkData:eventData:timedData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a5 + 104) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a5 + 120) = v8;
  *(_OWORD *)(a5 + 136) = *(_OWORD *)(a2 + 128);
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a5 + 40) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a5 + 56) = v9;
  long long v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a5 + 72) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a5 + 88) = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 8) = *(_OWORD *)a2;
  *(unsigned char *)a5 = *a1;
  *(void *)(a5 + 152) = *(void *)(a2 + 144);
  *(_OWORD *)(a5 + 24) = v11;
  uint64_t v12 = type metadata accessor for DialogExposureEvent.Model(0);
  uint64_t v13 = a5 + *(int *)(v12 + 24);
  uint64_t v14 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  uint64_t v15 = a5 + *(int *)(v12 + 28);
  uint64_t v16 = sub_27D7F0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);

  return v17(v15, a4, v16);
}

uint64_t sub_213024()
{
  uint64_t result = 0x6144676F6C616964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 2:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x4464656D6974;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2130B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_215A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2130DC(uint64_t a1)
{
  unint64_t v2 = sub_21341C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_213118(uint64_t a1)
{
  unint64_t v2 = sub_21341C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DialogExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_324F08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_21341C();
  sub_27E440();
  char v26 = *v3;
  char v25 = 0;
  sub_5C568();
  sub_27E330();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 120);
    long long v21 = *(_OWORD *)(v3 + 104);
    long long v22 = v9;
    long long v23 = *(_OWORD *)(v3 + 136);
    uint64_t v24 = *((void *)v3 + 19);
    long long v10 = *(_OWORD *)(v3 + 56);
    long long v17 = *(_OWORD *)(v3 + 40);
    long long v18 = v10;
    long long v11 = *(_OWORD *)(v3 + 88);
    long long v19 = *(_OWORD *)(v3 + 72);
    long long v20 = v11;
    long long v12 = *(_OWORD *)(v3 + 24);
    long long v15 = *(_OWORD *)(v3 + 8);
    long long v16 = v12;
    v14[15] = 1;
    sub_1FF00();
    sub_27E330();
    type metadata accessor for DialogExposureEvent.Model(0);
    LOBYTE(v15) = 2;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    LOBYTE(v15) = 3;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_21341C()
{
  unint64_t result = qword_324F10;
  if (!qword_324F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_324F10);
  }
  return result;
}

uint64_t DialogExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v34 = sub_27D7F0();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_4E04(&qword_324F18);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  long long v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DialogExposureEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v38 = a1;
  sub_5900(a1, v13);
  sub_21341C();
  uint64_t v37 = v9;
  uint64_t v14 = v51;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v38);
  }
  uint64_t v51 = v7;
  uint64_t v30 = v10;
  uint64_t v15 = v33;
  long long v16 = v12;
  char v29 = v4;
  uint64_t v17 = v34;
  uint64_t v18 = v36;
  char v40 = 0;
  sub_5C510();
  uint64_t v19 = v35;
  sub_27E260();
  *long long v16 = v41;
  char v40 = 1;
  sub_20940();
  sub_27E260();
  long long v20 = v48;
  *(_OWORD *)(v16 + 104) = v47;
  *(_OWORD *)(v16 + 120) = v20;
  *(_OWORD *)(v16 + 136) = v49;
  long long v21 = v44;
  *(_OWORD *)(v16 + 40) = v43;
  *(_OWORD *)(v16 + 56) = v21;
  long long v22 = v46;
  *(_OWORD *)(v16 + 72) = v45;
  *(_OWORD *)(v16 + 88) = v22;
  long long v23 = v42;
  *(_OWORD *)(v16 + 8) = v41;
  *((void *)v16 + 19) = v50;
  uint64_t v28 = (uint64_t)v16;
  *(_OWORD *)(v16 + 24) = v23;
  char v39 = 2;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v24 = v51;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28 + *(int *)(v30 + 24), v24, v5);
  char v39 = 3;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  char v25 = v29;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v19);
  uint64_t v26 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v28 + *(int *)(v30 + 28), v25, v17);
  sub_213AC4(v26, v31);
  sub_5E94((uint64_t)v38);
  return sub_213B28(v26);
}

uint64_t sub_213AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DialogExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DialogExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DialogExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_213B9C(void *a1)
{
  return DialogExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_213BB4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C68, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_324ED8, a1);
}

uint64_t sub_213BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C70, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_324EF0, a1);
}

uint64_t sub_213C24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_315DE8);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for DialogExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31C508);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for DialogExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for DialogExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for DialogExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for DialogExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for DialogExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_214604);
}

uint64_t sub_214604(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_31C508);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for DialogExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2147C0);
}

uint64_t sub_2147C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_31C508);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_214974()
{
  sub_214B24(319, &qword_31C5A8, (void (*)(void))sub_5C510, (void (*)(void))sub_5C568);
  if (v0 <= 0x3F)
  {
    sub_214B24(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F)
      {
        sub_6E6C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_214B24(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for DialogExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v12;
    uint64_t v13 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v13;
    uint64_t v14 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v14;
    uint64_t v15 = a2[19];
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v25 = (uint64_t)a2 + v16;
    uint64_t v26 = a1 + v16;
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v15;
    uint64_t v17 = sub_27D7C0();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v26, v25, v17);
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_27D7F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for DialogExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v22 = a2 + v14;
  uint64_t v23 = a1 + v14;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v15 = sub_27D7C0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v23, v22, v15);
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2154C0);
}

uint64_t sub_2154C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DialogExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_215600);
}

uint64_t sub_215600(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_21572C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DialogExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2158D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogExposureEvent.Model.CodingKeys()
{
  return &type metadata for DialogExposureEvent.Model.CodingKeys;
}

unint64_t sub_215910()
{
  unint64_t result = qword_325050;
  if (!qword_325050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325050);
  }
  return result;
}

unint64_t sub_215968()
{
  unint64_t result = qword_325058;
  if (!qword_325058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325058);
  }
  return result;
}

unint64_t sub_2159C0()
{
  unint64_t result = qword_325060;
  if (!qword_325060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325060);
  }
  return result;
}

uint64_t sub_215A14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144676F6C616964 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static BackgroundColorData.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  return sub_2FC64(*a1, *a2);
}

uint64_t sub_215C00()
{
  return 0x756F72676B636162;
}

uint64_t sub_215C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_215CE0(uint64_t a1)
{
  unint64_t v2 = sub_215EA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_215D1C(uint64_t a1)
{
  unint64_t v2 = sub_215EA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BackgroundColorData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_325068);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_215EA0();
  sub_27E440();
  char v10 = v7;
  sub_18A47C();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_215EA0()
{
  unint64_t result = qword_325070;
  if (!qword_325070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325070);
  }
  return result;
}

uint64_t BackgroundColorData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_325078);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_215EA0();
  sub_27E430();
  if (!v2)
  {
    sub_18A4D0();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_216064@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BackgroundColorData.init(from:)(a1, a2);
}

uint64_t sub_21607C(void *a1)
{
  return BackgroundColorData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for BackgroundColorData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x216160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundColorData()
{
  return &type metadata for BackgroundColorData;
}

unsigned char *storeEnumTagSinglePayload for BackgroundColorData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x216234);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundColorData.CodingKeys()
{
  return &type metadata for BackgroundColorData.CodingKeys;
}

unint64_t sub_216270()
{
  unint64_t result = qword_325080;
  if (!qword_325080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325080);
  }
  return result;
}

unint64_t sub_2162C8()
{
  unint64_t result = qword_325088;
  if (!qword_325088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325088);
  }
  return result;
}

unint64_t sub_216320()
{
  unint64_t result = qword_325090;
  if (!qword_325090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325090);
  }
  return result;
}

void __swiftcall WantListRemovalItemData.init(from:)(BookAnalytics::WantListRemovalItemData *__return_ptr retstr, BookAnalytics::ContentData *from)
{
  uint64_t countAndFlagsBits = from->contentPrivateID._countAndFlagsBits;
  object = from->contentPrivateID._object;
  uint64_t v5 = from->contentUserID._countAndFlagsBits;
  unsigned int v6 = from->contentUserID._object;
  BookAnalytics::ContentType contentType = from->contentType;
  uint64_t v8 = from->contentID._countAndFlagsBits;
  uint64_t v9 = from->contentID._object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  retstr->contentPrivateID._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->contentPrivateID._object = object;
  retstr->contentUserID._uint64_t countAndFlagsBits = v5;
  retstr->contentUserID._object = v6;
  retstr->BookAnalytics::ContentType contentType = contentType;
  retstr->contentID._uint64_t countAndFlagsBits = v8;
  retstr->contentID._object = v9;
}

BookAnalytics::RemovalType_optional __swiftcall RemovalType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F99C8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t RemovalType.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0x6F4465766F6D6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_2164B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2F1E0(*a1, *a2);
}

unint64_t sub_2164C4()
{
  unint64_t result = qword_325098;
  if (!qword_325098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325098);
  }
  return result;
}

Swift::Int sub_216518()
{
  return sub_27E420();
}

uint64_t sub_2165CC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_21666C()
{
  return sub_27E420();
}

BookAnalytics::RemovalType_optional sub_21671C(Swift::String *a1)
{
  return RemovalType.init(rawValue:)(*a1);
}

void sub_216728(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x80000000002AD790;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6F4465766F6D6572;
    unint64_t v4 = 0xEE0064616F6C6E77;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_216798()
{
  return sub_27DED0();
}

uint64_t sub_2167F8()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for RemovalType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x216914);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemovalType()
{
  return &type metadata for RemovalType;
}

unint64_t sub_21694C()
{
  unint64_t result = qword_3250A0;
  if (!qword_3250A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3250A0);
  }
  return result;
}

uint64_t sub_2169A0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3250A8, &enum case for SessionGroup.default(_:));
}

uint64_t static AppReviewPromptRequestEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C78, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3250A8, a1);
}

uint64_t sub_216A00(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3250C0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AppReviewPromptRequestEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C80, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3250C0, a1);
}

uint64_t AppReviewPromptRequestEvent.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_31C2F8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppReviewPromptRequestEvent.locationData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_31C2F8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AppReviewPromptRequestEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent(uint64_t a1)
{
  return sub_5338(a1, qword_325148);
}

uint64_t AppReviewPromptRequestEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppReviewPromptRequestEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AppReviewPromptRequestEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t AppReviewPromptRequestEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppReviewPromptRequestEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3251D8);
}

uint64_t AppReviewPromptRequestEvent.Model.init(locationData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for AppReviewPromptRequestEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  unsigned int v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_216E7C()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_216EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_218278(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_216EEC(uint64_t a1)
{
  unint64_t v2 = sub_217120();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_216F28(uint64_t a1)
{
  unint64_t v2 = sub_217120();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppReviewPromptRequestEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3250D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_217120();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_F4AB0();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for AppReviewPromptRequestEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_217120()
{
  unint64_t result = qword_3250E0;
  if (!qword_3250E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3250E0);
  }
  return result;
}

uint64_t AppReviewPromptRequestEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_3250E8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_217120();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    char v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_F54A4();
    uint64_t v14 = v25;
    sub_27E260();
    uint64_t v19 = v11;
    *char v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_21746C(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_21746C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2174D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppReviewPromptRequestEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_2174E8(void *a1)
{
  return AppReviewPromptRequestEvent.Model.encode(to:)(a1);
}

uint64_t sub_217500@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C78, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3250A8, a1);
}

uint64_t sub_217538@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C80, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3250C0, a1);
}

uint64_t sub_217570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppReviewPromptRequestEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_31C2F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_217B10);
}

uint64_t sub_217B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_31C2F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_217C24);
}

uint64_t sub_217C24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_31C2F8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_217D30()
{
  sub_217DF8();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_217DF8()
{
  if (!qword_31C3C0)
  {
    sub_F54A4();
    sub_F4AB0();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_31C3C0);
    }
  }
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_217E74);
}

uint64_t sub_217E74(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 224)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x20) {
      return v4 - 31;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_217F30);
}

unsigned char *sub_217F30(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 224)
  {
    *unint64_t result = a2 + 31;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_217FD4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x218138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptRequestEvent.Model.CodingKeys()
{
  return &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys;
}

unint64_t sub_218174()
{
  unint64_t result = qword_325210;
  if (!qword_325210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325210);
  }
  return result;
}

unint64_t sub_2181CC()
{
  unint64_t result = qword_325218;
  if (!qword_325218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325218);
  }
  return result;
}

unint64_t sub_218224()
{
  unint64_t result = qword_325220;
  if (!qword_325220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325220);
  }
  return result;
}

uint64_t sub_218278(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void __swiftcall PurchaseFailData.init(purchaseFailureReason:errorCode:errorDescription:errorDomain:)(BookAnalytics::PurchaseFailData *__return_ptr retstr, BookAnalytics::PurchaseFailureReason purchaseFailureReason, Swift::Int32_optional errorCode, Swift::String_optional errorDescription, Swift::String_optional errorDomain)
{
  retstr->purchaseFailureReason = *(unsigned char *)purchaseFailureReason;
  retstr->errorCode.value = errorCode.value;
  retstr->errorCode.is_nil = errorCode.is_nil;
  retstr->errorDescription = errorDescription;
  retstr->errorDomain = errorDomain;
}

unint64_t sub_2183B4()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x646F43726F727265;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6D6F44726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_218460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21913C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_218488(uint64_t a1)
{
  unint64_t v2 = sub_218BE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2184C4(uint64_t a1)
{
  unint64_t v2 = sub_218BE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PurchaseFailData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_325228);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v14 = *((unsigned int *)v1 + 1);
  int v13 = v1[8];
  uint64_t v9 = *((void *)v1 + 2);
  void v12[2] = *((void *)v1 + 3);
  v12[3] = v9;
  uint64_t v10 = *((void *)v1 + 4);
  v12[0] = *((void *)v1 + 5);
  v12[1] = v10;
  sub_5900(a1, a1[3]);
  sub_218BE4();
  sub_27E440();
  char v20 = v8;
  char v19 = 0;
  sub_218C38();
  sub_27E330();
  if (!v2)
  {
    char v18 = 1;
    char v17 = v13;
    sub_27E2D0();
    char v16 = 2;
    sub_27E290();
    char v15 = 3;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PurchaseFailData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_325240);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_218BE4();
  sub_27E430();
  if (!v2)
  {
    char v26 = 0;
    sub_218C8C();
    sub_27E260();
    int v9 = v27;
    char v25 = 1;
    uint64_t v10 = sub_27E200();
    int v22 = v9;
    char v24 = 2;
    uint64_t v11 = sub_27E1C0();
    uint64_t v14 = v13;
    uint64_t v21 = v11;
    char v23 = 3;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_27E1C0();
    uint64_t v17 = v16;
    char v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v20 = v15;
    v18(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v22;
    *(_DWORD *)(a2 + 4) = v10;
    *(unsigned char *)(a2 + 8) = BYTE4(v10) & 1;
    *(void *)(a2 + 16) = v21;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v17;
  }
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2189A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseFailData.init(from:)(a1, a2);
}

uint64_t sub_2189BC(void *a1)
{
  return PurchaseFailData.encode(to:)(a1);
}

BOOL _s13BookAnalytics16PurchaseFailDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  int v3 = *((_DWORD *)a1 + 1);
  unsigned __int8 v4 = a1[8];
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v24 = *((void *)a1 + 2);
  uint64_t v25 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 5);
  int v7 = *(_DWORD *)(a2 + 4);
  int v8 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v26 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v10 = 0xE500000000000000;
  uint64_t v11 = 0x726F727265;
  if (v2 != 1)
  {
    uint64_t v11 = 0x64656C65636E6163;
    unint64_t v10 = 0xE800000000000000;
  }
  if (*a1) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = 0xE700000000000000;
  }
  unint64_t v14 = 0xE500000000000000;
  uint64_t v15 = 0x726F727265;
  if (*(unsigned char *)a2 != 1)
  {
    uint64_t v15 = 0x64656C65636E6163;
    unint64_t v14 = 0xE800000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0x6E776F6E6B6E75;
  }
  if (*(unsigned char *)a2) {
    unint64_t v17 = v14;
  }
  else {
    unint64_t v17 = 0xE700000000000000;
  }
  uint64_t v22 = *(void *)(a2 + 32);
  if (v12 == v16 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v18 & 1) == 0) {
      return result;
    }
  }
  if (v4)
  {
    if (!v8) {
      return 0;
    }
  }
  else
  {
    if (v3 == v7) {
      char v20 = v8;
    }
    else {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  if (!v25)
  {
    if (v26) {
      return 0;
    }
    goto LABEL_35;
  }
  if (!v26) {
    return 0;
  }
  if (v24 == v23 && v25 == v26 || (v21 = sub_27E370(), BOOL result = 0, (v21 & 1) != 0))
  {
LABEL_35:
    if (v6) {
      return v9 && (v5 == v22 && v6 == v9 || (sub_27E370() & 1) != 0);
    }
    return !v9;
  }
  return result;
}

unint64_t sub_218BE4()
{
  unint64_t result = qword_325230;
  if (!qword_325230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325230);
  }
  return result;
}

unint64_t sub_218C38()
{
  unint64_t result = qword_325238;
  if (!qword_325238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325238);
  }
  return result;
}

unint64_t sub_218C8C()
{
  unint64_t result = qword_325248;
  if (!qword_325248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325248);
  }
  return result;
}

uint64_t destroy for PurchaseFailData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PurchaseFailData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurchaseFailData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PurchaseFailData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseFailData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseFailData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseFailData()
{
  return &type metadata for PurchaseFailData;
}

unsigned char *storeEnumTagSinglePayload for PurchaseFailData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x218FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseFailData.CodingKeys()
{
  return &type metadata for PurchaseFailData.CodingKeys;
}

unint64_t sub_219038()
{
  unint64_t result = qword_325250;
  if (!qword_325250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325250);
  }
  return result;
}

unint64_t sub_219090()
{
  unint64_t result = qword_325258;
  if (!qword_325258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325258);
  }
  return result;
}

unint64_t sub_2190E8()
{
  unint64_t result = qword_325260;
  if (!qword_325260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325260);
  }
  return result;
}

uint64_t sub_21913C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000002AFA80 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AFAA0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_219314(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325268, &enum case for SessionGroup.default(_:));
}

uint64_t static PlayAttemptEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C88, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325268, a1);
}

uint64_t sub_219374(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325280, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PlayAttemptEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C90, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325280, a1);
}

uint64_t PlayAttemptEvent.listeningSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayAttemptEvent(uint64_t a1)
{
  return sub_5338(a1, qword_325308);
}

uint64_t PlayAttemptEvent.listeningSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317DF8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.listeningSessionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.listeningActionSourceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.listeningActionSourceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316780);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.listeningActionSourceData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.bitRateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.bitRateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316788);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.bitRateData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316790);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.errorData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.doNotDisturbData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.doNotDisturbData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_317E00);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.doNotDisturbData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.userEmbeddingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_317E08);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PlayAttemptEvent.userEmbeddingData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent(0) + 52);
  uint64_t v4 = sub_4E04(&qword_317E08);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PlayAttemptEvent.userEmbeddingData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t PlayAttemptEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PlayAttemptEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = enum case for EventProperty.optional<A>(_:);
  uint64_t v15 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v14, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  uint64_t v23 = sub_4E04(&qword_317E08);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v14, v23);
}

uint64_t PlayAttemptEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayAttemptEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayAttemptEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3253B8);
}

uint64_t PlayAttemptEvent.Model.userEmbeddingData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for PlayAttemptEvent.Model(0) + 52));

  return swift_bridgeObjectRetain();
}

uint64_t PlayAttemptEvent.Model.init(contentData:listeningSessionData:listeningActionSourceData:bitRateData:errorData:upSellData:doNotDisturbData:seriesData:eventData:userEmbeddingData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, _WORD *a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t v12 = *(void *)(a1 + 8);
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v12;
  *(unsigned char *)(a9 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a9 + 40) = *(void *)(a1 + 40);
  *(void *)(a9 + 48) = v13;
  long long v14 = *(_OWORD *)(a1 + 24);
  *(_WORD *)(a9 + 56) = *(_WORD *)(a1 + 56);
  *(_DWORD *)(a9 + 60) = *(_DWORD *)(a1 + 60);
  *(unsigned char *)(a9 + 64) = *(unsigned char *)(a1 + 64);
  *(_DWORD *)(a9 + 68) = *(_DWORD *)(a1 + 68);
  char v15 = *(unsigned char *)(a1 + 72);
  *(_OWORD *)(a9 + 24) = v14;
  *(unsigned char *)(a9 + 72) = v15;
  *(_DWORD *)(a9 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a9 + 77) = *(unsigned char *)(a1 + 77);
  long long v16 = *(_OWORD *)(a1 + 80);
  *(_DWORD *)(a9 + 96) = *(_DWORD *)a2;
  *(unsigned char *)(a9 + 100) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a9 + 104) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a9 + 108) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a9 + 136) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a9 + 137) = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a9 + 140) = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a9 + 144) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a9 + 145) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a9 + 148) = *(_DWORD *)(a2 + 52);
  *(unsigned char *)(a9 + 152) = *(unsigned char *)(a2 + 56);
  int v17 = *(_DWORD *)(a2 + 16);
  long long v18 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a9 + 153) = *(unsigned char *)(a2 + 57);
  *(_WORD *)(a9 + 154) = *a3;
  *(_DWORD *)(a9 + 156) = *(_DWORD *)a4;
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(a4 + 4);
  long long v19 = a8[1];
  long long v20 = a8[2];
  *(_OWORD *)(a9 + 232) = *a8;
  *(_OWORD *)(a9 + 264) = v20;
  long long v21 = *a5;
  *(_DWORD *)(a9 + 164) = *(_DWORD *)(a4 + 8);
  uint64_t v22 = *((void *)a5 + 3);
  *(void *)(a9 + 184) = *((void *)a5 + 2);
  *(void *)(a9 + 192) = v22;
  *(_OWORD *)(a9 + 80) = v16;
  *(_DWORD *)(a9 + 112) = v17;
  *(_OWORD *)(a9 + 120) = v18;
  long long v23 = *a6;
  LOWORD(v22) = *a7;
  *(void *)(a9 + 216) = *((void *)a6 + 2);
  *(_WORD *)(a9 + 224) = v22;
  uint64_t v24 = *a11;
  *(_OWORD *)(a9 + 168) = v21;
  *(_OWORD *)(a9 + 200) = v23;
  *(_OWORD *)(a9 + 248) = v19;
  uint64_t v25 = type metadata accessor for PlayAttemptEvent.Model(0);
  uint64_t v26 = a9 + *(int *)(v25 + 48);
  uint64_t v27 = sub_27D7C0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a10, v27);
  *(void *)(a9 + *(int *)(v25 + 52)) = v24;
  return result;
}

uint64_t sub_21A4F8(char a1)
{
  uint64_t result = 0x44746E65746E6F63;
  switch(a1)
  {
    case 1:
      return 0xD000000000000014;
    case 2:
      return 0xD000000000000019;
    case 3:
      return 0x4465746152746962;
    case 4:
      uint64_t v3 = 0x44726F727265;
      goto LABEL_11;
    case 5:
      uint64_t v4 = 0x6C6C65537075;
      goto LABEL_9;
    case 6:
      return 0xD000000000000010;
    case 7:
      uint64_t v4 = 0x736569726573;
LABEL_9:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 8:
      uint64_t v3 = 0x44746E657665;
LABEL_11:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    case 9:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21A640()
{
  return sub_21A4F8(*v0);
}

uint64_t sub_21A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21E898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21A670(uint64_t a1)
{
  unint64_t v2 = sub_21AB98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_21A6AC(uint64_t a1)
{
  unint64_t v2 = sub_21AB98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlayAttemptEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_325298);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_21AB98();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v44 = *(void *)v4;
  *((void *)&v44 + 1) = v10;
  v45[0] = v11;
  *(_OWORD *)&v45[8] = v12;
  *(void *)&v45[24] = v13;
  uint64_t v46 = v14;
  __int16 v47 = v15;
  int v48 = v16;
  char v49 = v17;
  int v50 = v18;
  char v51 = v19;
  int v52 = *(_DWORD *)(v4 + 73);
  char v53 = v20;
  long long v54 = *(_OWORD *)(v4 + 80);
  char v43 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    char v21 = *(unsigned char *)(v4 + 100);
    int v22 = *(_DWORD *)(v4 + 104);
    char v23 = *(unsigned char *)(v4 + 108);
    int v24 = *(_DWORD *)(v4 + 112);
    char v25 = *(unsigned char *)(v4 + 136);
    char v26 = *(unsigned char *)(v4 + 137);
    int v27 = *(_DWORD *)(v4 + 140);
    char v28 = *(unsigned char *)(v4 + 144);
    char v29 = *(unsigned char *)(v4 + 145);
    int v30 = *(_DWORD *)(v4 + 148);
    char v31 = *(unsigned char *)(v4 + 152);
    char v32 = *(unsigned char *)(v4 + 153);
    LODWORD(v44) = *(_DWORD *)(v4 + 96);
    BYTE4(v44) = v21;
    DWORD2(v44) = v22;
    BYTE12(v44) = v23;
    *(_DWORD *)long long v45 = v24;
    *(_OWORD *)&v45[8] = *(_OWORD *)(v4 + 120);
    v45[24] = v25;
    v45[25] = v26;
    *(_DWORD *)&v45[28] = v27;
    LOBYTE(v46) = v28;
    BYTE1(v46) = v29;
    HIDWORD(v46) = v30;
    LOBYTE(v47) = v31;
    HIBYTE(v47) = v32;
    char v43 = 1;
    sub_57500();
    sub_27E330();
    LOWORD(v44) = *(_WORD *)(v4 + 154);
    char v43 = 2;
    sub_1A27C();
    sub_27E330();
    char v33 = *(unsigned char *)(v4 + 160);
    int v34 = *(_DWORD *)(v4 + 164);
    LODWORD(v44) = *(_DWORD *)(v4 + 156);
    BYTE4(v44) = v33;
    DWORD2(v44) = v34;
    char v43 = 3;
    sub_1A2D0();
    sub_27E330();
    uint64_t v35 = *(void *)(v4 + 184);
    uint64_t v36 = *(void *)(v4 + 192);
    long long v44 = *(_OWORD *)(v4 + 168);
    *(void *)long long v45 = v35;
    *(void *)&v45[8] = v36;
    char v43 = 4;
    sub_1A324();
    sub_27E330();
    uint64_t v37 = *(void *)(v4 + 216);
    long long v44 = *(_OWORD *)(v4 + 200);
    *(void *)long long v45 = v37;
    char v43 = 5;
    sub_36A74();
    sub_27E2C0();
    LOWORD(v44) = *(_WORD *)(v4 + 224);
    char v43 = 6;
    sub_57554();
    sub_27E330();
    long long v38 = *(_OWORD *)(v4 + 248);
    long long v39 = *(_OWORD *)(v4 + 264);
    long long v44 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)long long v45 = v38;
    *(_OWORD *)&v45[16] = v39;
    char v43 = 7;
    sub_11514();
    sub_27E2C0();
    uint64_t v40 = type metadata accessor for PlayAttemptEvent.Model(0);
    LOBYTE(v44) = 8;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
    *(void *)&long long v44 = *(void *)(v4 + *(int *)(v40 + 52));
    char v43 = 9;
    sub_575A8();
    sub_27E2C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_21AB98()
{
  unint64_t result = qword_3252A0;
  if (!qword_3252A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3252A0);
  }
  return result;
}

uint64_t PlayAttemptEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = sub_27D7C0();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_4E04(&qword_3252A8);
  uint64_t v7 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for PlayAttemptEvent.Model(0);
  __chkstk_darwin(v49);
  char v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int v52 = a1;
  sub_5900(a1, v12);
  sub_21AB98();
  sub_27E430();
  if (v2)
  {
    char v51 = v2;
    return sub_5E94((uint64_t)v52);
  }
  else
  {
    char v51 = v6;
    uint64_t v46 = a2;
    uint64_t v13 = v7;
    char v64 = 0;
    sub_1A98C();
    sub_27E260();
    uint64_t v15 = *((void *)&v53 + 1);
    char v16 = v54[0];
    long long v17 = *(_OWORD *)&v54[8];
    uint64_t v18 = *(void *)&v54[24];
    uint64_t v19 = v55;
    __int16 v20 = v56;
    int v21 = v57;
    char v22 = v58;
    int v23 = v59;
    char v24 = v60;
    char v25 = v62;
    *(void *)char v11 = v53;
    *((void *)v11 + 1) = v15;
    v11[16] = v16;
    *(_OWORD *)(v11 + 24) = v17;
    *((void *)v11 + 5) = v18;
    *((void *)v11 + 6) = v19;
    *((_WORD *)v11 + 28) = v20;
    *((_DWORD *)v11 + 15) = v21;
    v11[64] = v22;
    *((_DWORD *)v11 + 17) = v23;
    v11[72] = v24;
    *(_DWORD *)(v11 + 73) = v61;
    v11[77] = v25;
    *((_OWORD *)v11 + 5) = v63;
    char v64 = 1;
    sub_57F90();
    sub_27E260();
    char v26 = BYTE4(v53);
    int v27 = DWORD2(v53);
    char v28 = BYTE12(v53);
    int v29 = *(_DWORD *)v54;
    char v30 = v54[24];
    char v31 = v54[25];
    int v32 = *(_DWORD *)&v54[28];
    char v33 = v55;
    char v34 = BYTE1(v55);
    int v35 = HIDWORD(v55);
    char v36 = v56;
    char v37 = HIBYTE(v56);
    *((_DWORD *)v11 + 24) = v53;
    v11[100] = v26;
    *((_DWORD *)v11 + 26) = v27;
    v11[108] = v28;
    *((_DWORD *)v11 + 28) = v29;
    *(_OWORD *)(v11 + 120) = *(_OWORD *)&v54[8];
    v11[136] = v30;
    v11[137] = v31;
    *((_DWORD *)v11 + 35) = v32;
    v11[144] = v33;
    v11[145] = v34;
    *((_DWORD *)v11 + 37) = v35;
    v11[152] = v36;
    v11[153] = v37;
    char v64 = 2;
    sub_1AA34();
    sub_27E260();
    *((_WORD *)v11 + 77) = v53;
    char v64 = 3;
    sub_1AA88();
    sub_27E260();
    char v38 = BYTE4(v53);
    int v39 = DWORD2(v53);
    *((_DWORD *)v11 + 39) = v53;
    v11[160] = v38;
    *((_DWORD *)v11 + 41) = v39;
    char v64 = 4;
    sub_1AADC();
    sub_27E260();
    long long v40 = *(_OWORD *)v54;
    *(_OWORD *)(v11 + 168) = v53;
    *(_OWORD *)(v11 + 184) = v40;
    char v64 = 5;
    sub_37744();
    sub_27E1F0();
    uint64_t v41 = *(void *)v54;
    *(_OWORD *)(v11 + 200) = v53;
    *((void *)v11 + 27) = v41;
    char v64 = 6;
    sub_57FE4();
    sub_27E260();
    *((_WORD *)v11 + 112) = v53;
    char v64 = 7;
    sub_11A3C();
    sub_27E1F0();
    long long v42 = *(_OWORD *)v54;
    *(_OWORD *)(v11 + 232) = v53;
    long long v43 = *(_OWORD *)&v54[16];
    *(_OWORD *)(v11 + 248) = v42;
    *(_OWORD *)(v11 + 264) = v43;
    LOBYTE(v53) = 8;
    sub_1AB30(&qword_315E28);
    long long v44 = v51;
    sub_27E260();
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v11[*(int *)(v49 + 48)], v44, v50);
    char v64 = 9;
    sub_58038();
    sub_27E1F0();
    char v51 = 0;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v47);
    *(void *)&v11[*(int *)(v49 + 52)] = v53;
    sub_21B3EC((uint64_t)v11, v46);
    sub_5E94((uint64_t)v52);
    return sub_21B450((uint64_t)v11);
  }
}

uint64_t sub_21B3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21B450(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21B4AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PlayAttemptEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_21B4C4(void *a1)
{
  return PlayAttemptEvent.Model.encode(to:)(a1);
}

uint64_t sub_21B4DC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C88, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325268, a1);
}

uint64_t sub_21B514@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C90, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325280, a1);
}

uint64_t sub_21B54C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = enum case for EventProperty.optional<A>(_:);
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v15, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  uint64_t v24 = sub_4E04(&qword_317E08);
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v15, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayAttemptEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317DF8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316780);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316788);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316790);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    int v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_317E00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    uint64_t v43 = sub_4E04(&qword_317E08);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for PlayAttemptEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  uint64_t v22 = sub_4E04(&qword_317E08);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for PlayAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for PlayAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for PlayAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for PlayAttemptEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_317E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_4E04(&qword_317E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_21CB70);
}

uint64_t sub_21CB70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  uint64_t v14 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  uint64_t v15 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  uint64_t v16 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_317E08);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for PlayAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_21CF0C);
}

uint64_t sub_21CF0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317DF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  uint64_t v16 = sub_4E04(&qword_316780);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  uint64_t v17 = sub_4E04(&qword_316788);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  uint64_t v18 = sub_4E04(&qword_316790);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  uint64_t v20 = sub_4E04(&qword_317E00);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  uint64_t v21 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  uint64_t v22 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  uint64_t v24 = sub_4E04(&qword_317E08);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_21D2A0()
{
  sub_5A6C4(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_5A6C4(319, &qword_317EC0, (void (*)(void))sub_57F90, (void (*)(void))sub_57500);
    if (v1 <= 0x3F)
    {
      sub_5A6C4(319, &qword_316878, (void (*)(void))sub_1AA34, (void (*)(void))sub_1A27C);
      if (v2 <= 0x3F)
      {
        sub_5A6C4(319, &qword_316880, (void (*)(void))sub_1AA88, (void (*)(void))sub_1A2D0);
        if (v3 <= 0x3F)
        {
          sub_5A6C4(319, (unint64_t *)&unk_316888, (void (*)(void))sub_1AADC, (void (*)(void))sub_1A324);
          if (v4 <= 0x3F)
          {
            sub_5A6C4(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
            if (v5 <= 0x3F)
            {
              sub_5A6C4(319, &qword_317EC8, (void (*)(void))sub_57FE4, (void (*)(void))sub_57554);
              if (v6 <= 0x3F)
              {
                sub_5A6C4(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
                if (v7 <= 0x3F)
                {
                  sub_6DA0();
                  if (v8 <= 0x3F)
                  {
                    sub_5A6C4(319, (unint64_t *)&unk_317ED0, (void (*)(void))sub_58038, (void (*)(void))sub_575A8);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PlayAttemptEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v10 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v10;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    *(_WORD *)(a1 + 136) = *((_WORD *)a2 + 68);
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
    int v13 = *((_DWORD *)a2 + 37);
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(_DWORD *)(a1 + 148) = v13;
    *(unsigned char *)(a1 + 153) = *((unsigned char *)a2 + 153);
    *(_WORD *)(a1 + 154) = *((_WORD *)a2 + 77);
    *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
    *(void *)(a1 + 156) = *(uint64_t *)((char *)a2 + 156);
    uint64_t v14 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v15;
    *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
    *(unsigned char *)(a1 + 201) = *((unsigned char *)a2 + 201);
    uint64_t v16 = a2[27];
    *(void *)(a1 + 208) = a2[26];
    *(void *)(a1 + 216) = v16;
    *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
    uint64_t v17 = a2[34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v18 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 248) = v18;
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    }
    else
    {
      *(void *)(a1 + 232) = a2[29];
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(a1 + 248) = a2[31];
      *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
      *(_WORD *)(a1 + 257) = *(_WORD *)((char *)a2 + 257);
      *(void *)(a1 + 264) = a2[33];
      *(void *)(a1 + 272) = v17;
      swift_bridgeObjectRetain();
    }
    uint64_t v20 = *(int *)(a3 + 48);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    *(void *)(a1 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 272) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v8 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v8;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  int v11 = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v11;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(void *)(a1 + 156) = *(void *)(a2 + 156);
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v13;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v14;
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  uint64_t v15 = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v16;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  }
  else
  {
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(_WORD *)(a1 + 257) = *(_WORD *)(a2 + 257);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v15;
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = *(int *)(a3 + 48);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v8;
  int v9 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v9;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  int v10 = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_DWORD *)(a1 + 140) = v10;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  int v11 = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = v11;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
  int v12 = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = v12;
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  uint64_t v13 = (long long *)(a1 + 232);
  uint64_t v14 = (long long *)(a2 + 232);
  uint64_t v15 = *(void *)(a2 + 272);
  if (*(void *)(a1 + 272) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v17;
      *uint64_t v13 = v16;
    }
    else
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
      *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1CDD8(a1 + 232);
    long long v19 = *(_OWORD *)(a2 + 248);
    long long v18 = *(_OWORD *)(a2 + 264);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 248) = v19;
    *(_OWORD *)(a1 + 264) = v18;
  }
  else
  {
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
    *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(int *)(a3 + 48);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 138) = *(_OWORD *)(a2 + 138);
  long long v9 = *(_OWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 96) = v10;
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(void *)(a1 + 156) = *(void *)(a2 + 156);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  long long v11 = *(_OWORD *)(a2 + 232);
  long long v12 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v12;
  uint64_t v13 = *(int *)(a3 + 48);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)(a1 + 232) = v11;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t assignWithTake for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(void *)(a1 + 148) = *(void *)(a2 + 148);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  if (*(void *)(a1 + 272) != 1)
  {
    uint64_t v14 = *(void *)(a2 + 272);
    if (v14 != 1)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_WORD *)(a1 + 257) = *(_WORD *)(a2 + 257);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 232);
  }
  long long v15 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v15;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_6:
  uint64_t v16 = *(int *)(a3 + 48);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_21E43C);
}

uint64_t sub_21E43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlayAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_21E500);
}

uint64_t sub_21E500(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21E5A8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlayAttemptEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21E758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayAttemptEvent.Model.CodingKeys()
{
  return &type metadata for PlayAttemptEvent.Model.CodingKeys;
}

unint64_t sub_21E794()
{
  unint64_t result = qword_325410;
  if (!qword_325410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325410);
  }
  return result;
}

unint64_t sub_21E7EC()
{
  unint64_t result = qword_325418;
  if (!qword_325418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325418);
  }
  return result;
}

unint64_t sub_21E844()
{
  unint64_t result = qword_325420;
  if (!qword_325420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325420);
  }
  return result;
}

uint64_t sub_21E898(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AE2F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000000002ADEE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4465746152746962 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE310 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AE330)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_21ECD0()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_21ED10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F394(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21ED38(uint64_t a1)
{
  unint64_t v2 = sub_21F11C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_21ED74(uint64_t a1)
{
  unint64_t v2 = sub_21F11C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DailyGoalsReachedData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_325428);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[1] = *((void *)v1 + 1);
  sub_5900(a1, a1[3]);
  sub_21F11C();
  sub_27E440();
  char v13 = v8;
  char v12 = 0;
  sub_28E98();
  sub_27E330();
  if (!v2)
  {
    char v11 = 1;
    sub_27E350();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DailyGoalsReachedData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_325438);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_21F11C();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    sub_28F40();
    sub_27E260();
    char v9 = v15;
    char v13 = 1;
    uint64_t v10 = sub_27E280();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_21F0EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DailyGoalsReachedData.init(from:)(a1, a2);
}

uint64_t sub_21F104(void *a1)
{
  return DailyGoalsReachedData.encode(to:)(a1);
}

unint64_t sub_21F11C()
{
  unint64_t result = qword_325430;
  if (!qword_325430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325430);
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyGoalsReachedData()
{
  return &type metadata for DailyGoalsReachedData;
}

unsigned char *storeEnumTagSinglePayload for DailyGoalsReachedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyGoalsReachedData.CodingKeys()
{
  return &type metadata for DailyGoalsReachedData.CodingKeys;
}

unint64_t sub_21F290()
{
  unint64_t result = qword_325440;
  if (!qword_325440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325440);
  }
  return result;
}

unint64_t sub_21F2E8()
{
  unint64_t result = qword_325448;
  if (!qword_325448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325448);
  }
  return result;
}

unint64_t sub_21F340()
{
  unint64_t result = qword_325450;
  if (!qword_325450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325450);
  }
  return result;
}

uint64_t sub_21F394(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002ADF80 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002ADFC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21F480(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325458, &enum case for SessionGroup.default(_:));
}

uint64_t static WidgetEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315C98, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325458, a1);
}

uint64_t sub_21F4E0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325470, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static WidgetEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CA0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325470, a1);
}

uint64_t WidgetEngagementEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEngagementEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetEngagementEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3254F8);
}

uint64_t WidgetEngagementEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEngagementEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetEngagementEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WidgetEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEngagementEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEngagementEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetEngagementEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t WidgetEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for WidgetEngagementEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t WidgetEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEngagementEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetEngagementEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325590);
}

uint64_t WidgetEngagementEvent.Model.init(widgetData:contentData:eventData:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)a4 = *(_OWORD *)a1;
  long long v5 = a2[1];
  *(_OWORD *)(a4 + 40) = *a2;
  *(_OWORD *)(a4 + 56) = v5;
  long long v6 = a2[3];
  *(_OWORD *)(a4 + 72) = a2[2];
  *(_OWORD *)(a4 + 88) = v6;
  long long v7 = a2[5];
  *(_OWORD *)(a4 + 104) = a2[4];
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 33);
  *(void *)(a4 + 16) = *(void *)(a1 + 16);
  *(void *)(a4 + 24) = v8;
  *(unsigned char *)(a4 + 32) = v9;
  *(unsigned char *)(a4 + 33) = v10;
  *(_OWORD *)(a4 + 120) = v7;
  uint64_t v11 = a4 + *(int *)(type metadata accessor for WidgetEngagementEvent.Model(0) + 24);
  uint64_t v12 = sub_27D7C0();
  char v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);

  return v13(v11, a3, v12);
}

uint64_t sub_21FA68()
{
  uint64_t v1 = 0x44746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144746567646977;
  }
}

uint64_t sub_21FAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_221BFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21FAFC(uint64_t a1)
{
  unint64_t v2 = sub_21FDA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_21FB38(uint64_t a1)
{
  unint64_t v2 = sub_21FDA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t WidgetEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_325488);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_21FDA4();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  char v11 = *((unsigned char *)v3 + 32);
  char v12 = *((unsigned char *)v3 + 33);
  long long v17 = *v3;
  *(void *)&long long v18 = v9;
  *((void *)&v18 + 1) = v10;
  LOBYTE(v19) = v11;
  BYTE1(v19) = v12;
  char v23 = 0;
  sub_1A5DB0();
  sub_27E330();
  if (!v2)
  {
    long long v13 = *(long long *)((char *)v3 + 56);
    long long v17 = *(long long *)((char *)v3 + 40);
    long long v18 = v13;
    long long v14 = *(long long *)((char *)v3 + 88);
    long long v19 = *(long long *)((char *)v3 + 72);
    long long v20 = v14;
    long long v15 = *(long long *)((char *)v3 + 120);
    long long v21 = *(long long *)((char *)v3 + 104);
    long long v22 = v15;
    char v23 = 1;
    sub_1A1D4();
    sub_27E2C0();
    type metadata accessor for WidgetEngagementEvent.Model(0);
    LOBYTE(v17) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_21FDA4()
{
  unint64_t result = qword_325490;
  if (!qword_325490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325490);
  }
  return result;
}

uint64_t WidgetEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_325498);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WidgetEngagementEvent.Model(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v28 = a1;
  sub_5900(a1, v13);
  sub_21FDA4();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v28);
  }
  uint64_t v14 = v26;
  char v23 = v6;
  char v35 = 0;
  sub_1A5D58();
  uint64_t v15 = v27;
  sub_27E260();
  long long v16 = v30;
  char v17 = v31;
  char v18 = BYTE1(v31);
  *(_OWORD *)char v12 = v29;
  *((_OWORD *)v12 + 1) = v16;
  v12[32] = v17;
  v12[33] = v18;
  char v35 = 1;
  sub_1A98C();
  sub_27E1F0();
  long long v19 = v30;
  *(_OWORD *)(v12 + 40) = v29;
  *(_OWORD *)(v12 + 56) = v19;
  long long v20 = v32;
  *(_OWORD *)(v12 + 72) = v31;
  *(_OWORD *)(v12 + 88) = v20;
  long long v21 = v34;
  *(_OWORD *)(v12 + 104) = v33;
  *(_OWORD *)(v12 + 120) = v21;
  LOBYTE(v29) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v12[*(int *)(v10 + 24)], v23, v4);
  sub_2201D0((uint64_t)v12, v25);
  sub_5E94((uint64_t)v28);
  return sub_220234((uint64_t)v12);
}

uint64_t sub_2201D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_220234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_220290@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_2202A8(void *a1)
{
  return WidgetEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_2202C0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315C98, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325458, a1);
}

uint64_t sub_2202F8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CA0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325470, a1);
}

uint64_t sub_220330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v4, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_321AB8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for WidgetEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_220B1C);
}

uint64_t sub_220B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_321AB8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for WidgetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_220C88);
}

uint64_t sub_220C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_321AB8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_220DEC()
{
  sub_220F60(319, (unint64_t *)&qword_321B40, (void (*)(void))sub_1A5D58, (void (*)(void))sub_1A5DB0);
  if (v0 <= 0x3F)
  {
    sub_220F60(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_220F60(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetEngagementEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v9 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v10 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v10;
      uint64_t v11 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v11;
      *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
      *(_DWORD *)(a1 + 108) = *((_DWORD *)a2 + 27);
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      *(_DWORD *)(a1 + 113) = *(_DWORD *)((char *)a2 + 113);
      *(unsigned char *)(a1 + 117) = *((unsigned char *)a2 + 117);
      uint64_t v12 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 88) = v14;
      long long v15 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 120) = v15;
      long long v16 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 56) = v16;
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t initializeWithCopy for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v10;
    *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_DWORD *)(a1 + 113) = *(_DWORD *)(a2 + 113);
    *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v8)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
      int v9 = *(_DWORD *)(a2 + 100);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(_DWORD *)(a1 + 100) = v9;
      int v10 = *(_DWORD *)(a2 + 108);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(_DWORD *)(a1 + 108) = v10;
      *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
      *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
      *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
      *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
      *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 40);
      long long v13 = *(_OWORD *)(a2 + 56);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 56) = v13;
      long long v14 = *(_OWORD *)(a2 + 120);
      long long v16 = *(_OWORD *)(a2 + 72);
      long long v15 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v14;
      *(_OWORD *)(a1 + 72) = v16;
      *(_OWORD *)(a1 + 88) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
    int v11 = *(_DWORD *)(a2 + 100);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 100) = v11;
    int v12 = *(_DWORD *)(a2 + 108);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_DWORD *)(a1 + 108) = v12;
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
    *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
    *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
    *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 56);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 56) = v17;
    long long v18 = *(_OWORD *)(a2 + 72);
    long long v19 = *(_OWORD *)(a2 + 88);
    long long v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v20;
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 88) = v19;
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (!v8)
  {
    sub_62898(a1 + 40);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_DWORD *)(a1 + 113) = *(_DWORD *)(a2 + 113);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2217E4);
}

uint64_t sub_2217E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2218A8);
}

uint64_t sub_2218A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_221950()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x221ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEngagementEvent.Model.CodingKeys()
{
  return &type metadata for WidgetEngagementEvent.Model.CodingKeys;
}

unint64_t sub_221AF8()
{
  unint64_t result = qword_3255D0;
  if (!qword_3255D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3255D0);
  }
  return result;
}

unint64_t sub_221B50()
{
  unint64_t result = qword_3255D8;
  if (!qword_3255D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3255D8);
  }
  return result;
}

unint64_t sub_221BA8()
{
  unint64_t result = qword_3255E0;
  if (!qword_3255E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3255E0);
  }
  return result;
}

uint64_t sub_221BFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144746567646977 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_221D84(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3255E8, &enum case for SessionGroup.default(_:));
}

uint64_t static BrickExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CA8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3255E8, a1);
}

uint64_t sub_221DE4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325600, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static BrickExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CB0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325600, a1);
}

uint64_t BrickExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrickExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_325688);
}

uint64_t BrickExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.brickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31C2F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.brickData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_31C2F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.brickData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.pageData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.pageData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_316A00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.mediaData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.upSellData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_316F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.upSellData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 40);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 44);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent(0) + 48);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BrickExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t BrickExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for BrickExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = enum case for EventProperty.optional<A>(_:);
  uint64_t v13 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  uint64_t v17 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v12, v17);
  uint64_t v18 = a1 + v4[11];
  uint64_t v19 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  uint64_t v21 = sub_4E04(&qword_315DE8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v2, v21);
}

uint64_t BrickExposureEvent.Model.brickData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 272);
  int v3 = *(_DWORD *)(v1 + 280);
  uint64_t v4 = *(void *)(v1 + 288);
  uint64_t v5 = *(void *)(v1 + 296);
  *(void *)a1 = *(void *)(v1 + 264);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t BrickExposureEvent.Model.pageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 328);
  *(void *)a1 = *(void *)(v1 + 304);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 312);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t BrickExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 344);
  uint64_t v4 = *(void *)(v1 + 352);
  uint64_t v5 = *(void *)(v1 + 360);
  int v6 = *(_DWORD *)(v1 + 368);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = v6;
  return sub_409E0(v2, v3);
}

uint64_t BrickExposureEvent.Model.upSellData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 392);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 376);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

void BrickExposureEvent.Model.suggestionData.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 400);
}

uint64_t BrickExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent.Model(0) + 44);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BrickExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325738);
}

uint64_t BrickExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrickExposureEvent.Model(0) + 48);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BrickExposureEvent.Model.init(sectionData:linkData:brickData:pageData:mediaData:upSellData:suggestionData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int v12 = *(_DWORD *)(a1 + 4);
  long long v13 = *(_OWORD *)(a1 + 8);
  long long v14 = *(_OWORD *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  int v17 = *(_DWORD *)(a1 + 88);
  char v18 = *(unsigned char *)(a1 + 92);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 104);
  uint64_t v21 = *a3;
  uint64_t v22 = a3[1];
  int v23 = *((_DWORD *)a3 + 4);
  uint64_t v25 = a3[3];
  uint64_t v24 = a3[4];
  uint64_t v26 = *(void *)(a4 + 16);
  uint64_t v27 = *(void *)(a4 + 24);
  int v28 = *(_DWORD *)(a5 + 32);
  uint64_t v29 = *(void *)(a6 + 16);
  char v30 = *a7;
  *(unsigned char *)a9 = *(unsigned char *)a1;
  *(_DWORD *)(a9 + 4) = v12;
  *(_OWORD *)(a9 + 8) = v13;
  *(_OWORD *)(a9 + 24) = v14;
  *(void *)(a9 + 40) = v15;
  *(void *)(a9 + 48) = v16;
  *(_OWORD *)(a9 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a9 + 72) = *(_OWORD *)(a1 + 72);
  *(_DWORD *)(a9 + 88) = v17;
  *(unsigned char *)(a9 + 92) = v18;
  *(void *)(a9 + 96) = v19;
  *(void *)(a9 + 104) = v20;
  long long v31 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 112) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 128) = v31;
  long long v32 = *(_OWORD *)(a2 + 32);
  long long v33 = *(_OWORD *)(a2 + 48);
  long long v34 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a9 + 176) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a9 + 192) = v34;
  *(_OWORD *)(a9 + 144) = v32;
  *(_OWORD *)(a9 + 160) = v33;
  long long v35 = *(_OWORD *)(a2 + 96);
  long long v36 = *(_OWORD *)(a2 + 128);
  uint64_t v37 = *(void *)(a2 + 144);
  *(_OWORD *)(a9 + 224) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a9 + 240) = v36;
  *(_OWORD *)(a9 + 208) = v35;
  *(void *)(a9 + 256) = v37;
  *(void *)(a9 + 264) = v21;
  *(void *)(a9 + 272) = v22;
  *(_DWORD *)(a9 + 280) = v23;
  *(void *)(a9 + 288) = v25;
  *(void *)(a9 + 296) = v24;
  *(_OWORD *)(a9 + 304) = *(_OWORD *)a4;
  *(void *)(a9 + 320) = v26;
  *(void *)(a9 + 328) = v27;
  long long v38 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 336) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 352) = v38;
  *(_DWORD *)(a9 + 368) = v28;
  *(_OWORD *)(a9 + 376) = *(_OWORD *)a6;
  *(void *)(a9 + 392) = v29;
  *(unsigned char *)(a9 + 400) = v30;
  uint64_t v39 = type metadata accessor for BrickExposureEvent.Model(0);
  uint64_t v40 = a9 + *(int *)(v39 + 44);
  uint64_t v41 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v40, a8, v41);
  uint64_t v42 = a9 + *(int *)(v39 + 48);
  uint64_t v43 = sub_27D7F0();
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32);

  return v44(v42, a10, v43);
}

uint64_t sub_222EE8(char a1)
{
  uint64_t result = 0x446E6F6974636573;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1802398060;
      return v3 | 0x6174614400000000;
    case 2:
      uint64_t v4 = 0x446B63697262;
      goto LABEL_11;
    case 3:
      unsigned int v3 = 1701273968;
      return v3 | 0x6174614400000000;
    case 4:
      uint64_t v4 = 0x44616964656DLL;
      goto LABEL_11;
    case 5:
      return 0x61446C6C65537075;
    case 6:
      return 0x6974736567677573;
    case 7:
      uint64_t v4 = 0x44746E657665;
      goto LABEL_11;
    case 8:
      uint64_t v4 = 0x4464656D6974;
LABEL_11:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_223004()
{
  return sub_222EE8(*v0);
}

uint64_t sub_22300C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2275D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_223034(uint64_t a1)
{
  unint64_t v2 = sub_223574();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_223070(uint64_t a1)
{
  unint64_t v2 = sub_223574();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BrickExposureEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_325618);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_223574();
  sub_27E440();
  int v8 = *((_DWORD *)v2 + 1);
  long long v9 = *(_OWORD *)(v2 + 8);
  long long v10 = *(_OWORD *)(v2 + 24);
  uint64_t v11 = *((void *)v2 + 5);
  uint64_t v12 = *((void *)v2 + 6);
  int v13 = *((_DWORD *)v2 + 22);
  char v14 = v2[92];
  uint64_t v15 = *((void *)v2 + 12);
  uint64_t v16 = *((void *)v2 + 13);
  char v47 = *v2;
  int v48 = v8;
  long long v49 = v9;
  long long v50 = v10;
  uint64_t v51 = v11;
  uint64_t v52 = v12;
  long long v53 = *(_OWORD *)(v2 + 56);
  long long v54 = *(_OWORD *)(v2 + 72);
  int v55 = v13;
  char v56 = v14;
  uint64_t v57 = v15;
  uint64_t v58 = v16;
  char v46 = 0;
  sub_1FE58();
  uint64_t v17 = v59;
  sub_27E330();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  long long v18 = *((_OWORD *)v2 + 14);
  long long v42 = *((_OWORD *)v2 + 13);
  long long v43 = v18;
  long long v44 = *((_OWORD *)v2 + 15);
  uint64_t v45 = *((void *)v2 + 32);
  long long v19 = *((_OWORD *)v2 + 10);
  long long v38 = *((_OWORD *)v2 + 9);
  long long v39 = v19;
  long long v20 = *((_OWORD *)v2 + 12);
  long long v40 = *((_OWORD *)v2 + 11);
  long long v41 = v20;
  long long v21 = *((_OWORD *)v2 + 8);
  long long v36 = *((_OWORD *)v2 + 7);
  long long v37 = v21;
  char v35 = 1;
  sub_1FF00();
  sub_27E330();
  uint64_t v22 = *((void *)v2 + 34);
  int v23 = *((_DWORD *)v2 + 70);
  uint64_t v24 = *((void *)v2 + 36);
  uint64_t v25 = *((void *)v2 + 37);
  *(void *)&long long v36 = *((void *)v2 + 33);
  *((void *)&v36 + 1) = v22;
  LODWORD(v37) = v23;
  *((void *)&v37 + 1) = v24;
  *(void *)&long long v38 = v25;
  char v35 = 2;
  sub_F4A5C();
  sub_27E330();
  uint64_t v26 = v5;
  uint64_t v27 = *((void *)v2 + 40);
  uint64_t v28 = *((void *)v2 + 41);
  long long v36 = *((_OWORD *)v2 + 19);
  *(void *)&long long v37 = v27;
  *((void *)&v37 + 1) = v28;
  char v35 = 3;
  sub_1FEAC();
  sub_27E330();
  int v29 = *((_DWORD *)v2 + 92);
  long long v30 = *((_OWORD *)v2 + 22);
  long long v36 = *((_OWORD *)v2 + 21);
  long long v37 = v30;
  LODWORD(v38) = v29;
  char v35 = 4;
  sub_1DF40();
  sub_27E2C0();
  uint64_t v31 = *((void *)v2 + 49);
  long long v36 = *(_OWORD *)(v2 + 376);
  *(void *)&long long v37 = v31;
  char v35 = 5;
  sub_36A74();
  sub_27E2C0();
  LOBYTE(v36) = v2[400];
  char v35 = 6;
  sub_36B1C();
  sub_27E2C0();
  type metadata accessor for BrickExposureEvent.Model(0);
  LOBYTE(v36) = 7;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v59 = v4;
  sub_27E330();
  LOBYTE(v36) = 8;
  sub_27D7F0();
  sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v32 = v59;
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v32);
}

unint64_t sub_223574()
{
  unint64_t result = qword_325620;
  if (!qword_325620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325620);
  }
  return result;
}

uint64_t BrickExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_27D7F0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_27D7C0();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_4E04(&qword_325628);
  uint64_t v8 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  long long v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for BrickExposureEvent.Model(0);
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v49 = a1;
  sub_5900(a1, v13);
  sub_223574();
  uint64_t v45 = v10;
  char v14 = v61;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v49);
  }
  int v61 = v5;
  uint64_t v15 = v8;
  uint64_t v16 = v43;
  LOBYTE(v51) = 0;
  sub_20898();
  uint64_t v17 = v44;
  sub_27E260();
  int v18 = *(_DWORD *)&v55[4];
  long long v19 = *(_OWORD *)&v55[8];
  long long v20 = *(_OWORD *)&v55[24];
  uint64_t v21 = *(void *)&v55[40];
  uint64_t v22 = *(void *)v56;
  int v23 = *(_DWORD *)&v56[40];
  char v24 = v56[44];
  long long v25 = v57;
  *uint64_t v12 = v55[0];
  *((_DWORD *)v12 + 1) = v18;
  *(_OWORD *)(v12 + 8) = v19;
  *(_OWORD *)(v12 + 24) = v20;
  *((void *)v12 + 5) = v21;
  *((void *)v12 + 6) = v22;
  *(_OWORD *)(v12 + 56) = *(_OWORD *)&v56[8];
  *(_OWORD *)(v12 + 72) = *(_OWORD *)&v56[24];
  *((_DWORD *)v12 + 22) = v23;
  v12[92] = v24;
  *((_OWORD *)v12 + 6) = v25;
  char v54 = 1;
  sub_20940();
  sub_27E260();
  long long v26 = v58;
  long long v27 = v59;
  long long v28 = *(_OWORD *)&v56[32];
  *((_OWORD *)v12 + 13) = v57;
  *((_OWORD *)v12 + 14) = v26;
  *((_OWORD *)v12 + 15) = v27;
  *((void *)v12 + 32) = v60;
  long long v29 = *(_OWORD *)v56;
  *((_OWORD *)v12 + 9) = *(_OWORD *)&v55[32];
  *((_OWORD *)v12 + 10) = v29;
  *((_OWORD *)v12 + 11) = *(_OWORD *)&v56[16];
  *((_OWORD *)v12 + 12) = v28;
  long long v30 = *(_OWORD *)&v55[16];
  *((_OWORD *)v12 + 7) = *(_OWORD *)v55;
  *((_OWORD *)v12 + 8) = v30;
  char v50 = 2;
  sub_F5450();
  sub_27E260();
  uint64_t v31 = *((void *)&v51 + 1);
  int v32 = v52;
  uint64_t v33 = *((void *)&v52 + 1);
  uint64_t v34 = v53;
  *((void *)v12 + 33) = v51;
  *((void *)v12 + 34) = v31;
  *((_DWORD *)v12 + 70) = v32;
  *((void *)v12 + 36) = v33;
  *((void *)v12 + 37) = v34;
  char v50 = 3;
  sub_208EC();
  sub_27E260();
  long long v35 = v52;
  *((_OWORD *)v12 + 19) = v51;
  *((_OWORD *)v12 + 20) = v35;
  char v50 = 4;
  sub_1DEE8();
  sub_27E1F0();
  int v36 = v53;
  long long v37 = v52;
  *((_OWORD *)v12 + 21) = v51;
  *((_OWORD *)v12 + 22) = v37;
  *((_DWORD *)v12 + 92) = v36;
  char v50 = 5;
  sub_37744();
  sub_27E1F0();
  uint64_t v38 = v52;
  *(_OWORD *)(v12 + 376) = v51;
  *((void *)v12 + 49) = v38;
  char v50 = 6;
  sub_377EC();
  sub_27E1F0();
  v12[400] = v51;
  LOBYTE(v51) = 7;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v12[*(int *)(v47 + 44)], v7, v48);
  LOBYTE(v51) = 8;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  long long v39 = v61;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v17);
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v12[*(int *)(v47 + 48)], v39, v3);
  sub_223FE0((uint64_t)v12, v16);
  sub_5E94((uint64_t)v49);
  return sub_224044((uint64_t)v12);
}

uint64_t sub_223FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrickExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_224044(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrickExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2240A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrickExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_2240B8(void *a1)
{
  return BrickExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_2240D0@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CA8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3255E8, a1);
}

uint64_t sub_224108@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CB0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325600, a1);
}

uint64_t sub_224140@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = enum case for EventProperty.optional<A>(_:);
  uint64_t v14 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  uint64_t v18 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v13, v18);
  uint64_t v19 = a2 + a1[11];
  uint64_t v20 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  uint64_t v22 = sub_4E04(&qword_315DE8);
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for BrickExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316A10);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_31C2F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316A18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_316A00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_316F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for BrickExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for BrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for BrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for BrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for BrickExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_316A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_316F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrickExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22555C);
}

uint64_t sub_22555C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316A10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  uint64_t v14 = sub_4E04(&qword_31C2F0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  uint64_t v15 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  uint64_t v16 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  uint64_t v17 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  uint64_t v18 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  uint64_t v19 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  uint64_t v21 = sub_4E04(&qword_315DE8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for BrickExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2258A8);
}

uint64_t sub_2258A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316A10);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  uint64_t v16 = sub_4E04(&qword_31C2F0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  uint64_t v17 = sub_4E04(&qword_316A18);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  uint64_t v18 = sub_4E04(&qword_316A00);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  uint64_t v19 = sub_4E04(&qword_316F78);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  uint64_t v20 = sub_4E04(&qword_316F88);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  uint64_t v21 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  uint64_t v23 = sub_4E04(&qword_315DE8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_225BEC()
{
  sub_225FE0(319, &qword_316B08, (void (*)(void))sub_20898, (void (*)(void))sub_1FE58);
  if (v0 <= 0x3F)
  {
    sub_225FE0(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
    if (v1 <= 0x3F)
    {
      sub_225FE0(319, &qword_31C3B8, (void (*)(void))sub_F5450, (void (*)(void))sub_F4A5C);
      if (v2 <= 0x3F)
      {
        sub_225FE0(319, &qword_316B10, (void (*)(void))sub_208EC, (void (*)(void))sub_1FEAC);
        if (v3 <= 0x3F)
        {
          sub_225FE0(319, &qword_316AF8, (void (*)(void))sub_1DEE8, (void (*)(void))sub_1DF40);
          if (v4 <= 0x3F)
          {
            sub_225FE0(319, &qword_317060, (void (*)(void))sub_37744, (void (*)(void))sub_36A74);
            if (v5 <= 0x3F)
            {
              sub_225FE0(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
              if (v6 <= 0x3F)
              {
                sub_6DA0();
                if (v7 <= 0x3F)
                {
                  sub_6E6C();
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_225FE0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for BrickExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v26 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v6 = a2[2];
    *(void *)(v4 + 8) = a2[1];
    *(void *)(v4 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(v4 + 24) = a2[3];
    *(void *)(v4 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(v4 + 72) = a2[9];
    *(void *)(v4 + 80) = v10;
    *(_DWORD *)(v4 + 88) = *((_DWORD *)a2 + 22);
    *(unsigned char *)(v4 + 92) = *((unsigned char *)a2 + 92);
    uint64_t v11 = a2[13];
    *(void *)(v4 + 96) = a2[12];
    *(void *)(v4 + 104) = v11;
    uint64_t v12 = a2[15];
    *(void *)(v4 + 112) = a2[14];
    *(void *)(v4 + 120) = v12;
    uint64_t v13 = a2[17];
    *(void *)(v4 + 128) = a2[16];
    *(void *)(v4 + 136) = v13;
    uint64_t v14 = a2[19];
    *(void *)(v4 + 144) = a2[18];
    *(void *)(v4 + 152) = v14;
    *(unsigned char *)(v4 + 160) = *((unsigned char *)a2 + 160);
    uint64_t v15 = a2[22];
    *(void *)(v4 + 168) = a2[21];
    *(void *)(v4 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(v4 + 184) = a2[23];
    *(void *)(v4 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(v4 + 200) = a2[25];
    *(void *)(v4 + 208) = v17;
    uint64_t v18 = a2[28];
    *(void *)(v4 + 216) = a2[27];
    *(void *)(v4 + 224) = v18;
    uint64_t v19 = a2[30];
    *(void *)(v4 + 232) = a2[29];
    *(void *)(v4 + 240) = v19;
    uint64_t v20 = a2[32];
    *(void *)(v4 + 248) = a2[31];
    *(void *)(v4 + 256) = v20;
    uint64_t v21 = a2[34];
    *(void *)(v4 + 264) = a2[33];
    *(void *)(v4 + 272) = v21;
    *(_DWORD *)(v4 + 280) = *((_DWORD *)a2 + 70);
    uint64_t v22 = a2[37];
    *(void *)(v4 + 288) = a2[36];
    *(void *)(v4 + 296) = v22;
    uint64_t v23 = a2[39];
    *(void *)(v4 + 304) = a2[38];
    *(void *)(v4 + 312) = v23;
    uint64_t v24 = a2[41];
    *(void *)(v4 + 320) = a2[40];
    *(void *)(v4 + 328) = v24;
    uint64_t v39 = a2[43];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39)
    {
      *(void *)(v4 + 336) = a2[42];
      *(void *)(v4 + 344) = v39;
      uint64_t v25 = a2[45];
      *(void *)(v4 + 352) = a2[44];
      *(void *)(v4 + 360) = v25;
      *(_DWORD *)(v4 + 368) = *((_DWORD *)a2 + 92);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)a2 + 22);
      *(_OWORD *)(v4 + 336) = *((_OWORD *)a2 + 21);
      *(_OWORD *)(v4 + 352) = v27;
      *(_DWORD *)(v4 + 368) = *((_DWORD *)a2 + 92);
    }
    *(_WORD *)(v4 + 376) = *((_WORD *)a2 + 188);
    uint64_t v28 = a2[49];
    *(void *)(v4 + 384) = a2[48];
    *(void *)(v4 + 392) = v28;
    *(unsigned char *)(v4 + 400) = *((unsigned char *)a2 + 400);
    uint64_t v29 = *(int *)(a3 + 44);
    uint64_t v30 = v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    uint64_t v32 = sub_27D7C0();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v30, v31, v32);
    uint64_t v34 = *(int *)(a3 + 48);
    uint64_t v35 = v4 + v34;
    uint64_t v36 = (uint64_t)a2 + v34;
    uint64_t v37 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return v4;
}

uint64_t destroy for BrickExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 344))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  uint64_t v20 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v20;
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  uint64_t v21 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v21;
  uint64_t v22 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v22;
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v23;
  uint64_t v37 = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37)
  {
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v37;
    uint64_t v24 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v24;
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v25;
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
  }
  *(_WORD *)(a1 + 376) = *(_WORD *)(a2 + 376);
  uint64_t v26 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v26;
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v27 = *(int *)(a3 + 44);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_27D7C0();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  v31(v28, v29, v30);
  uint64_t v32 = *(int *)(a3 + 48);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

uint64_t assignWithCopy for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 336);
  uint64_t v8 = (_OWORD *)(a2 + 336);
  uint64_t v9 = *(void *)(a2 + 344);
  if (*(void *)(a1 + 344))
  {
    if (v9)
    {
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    }
    else
    {
      sub_4523C(a1 + 336);
      int v10 = *(_DWORD *)(a2 + 368);
      long long v11 = *(_OWORD *)(a2 + 352);
      _OWORD *v7 = *v8;
      *(_OWORD *)(a1 + 352) = v11;
      *(_DWORD *)(a1 + 368) = v10;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v8;
    long long v13 = *(_OWORD *)(a2 + 352);
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    _OWORD *v7 = v12;
    *(_OWORD *)(a1 + 352) = v13;
  }
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 48);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t initializeWithTake for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  long long v13 = *(_OWORD *)(a2 + 192);
  long long v14 = *(_OWORD *)(a2 + 208);
  long long v15 = *(_OWORD *)(a2 + 224);
  long long v16 = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 208) = v14;
  long long v17 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v17;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  long long v18 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v18;
  long long v19 = *(_OWORD *)(a2 + 336);
  long long v20 = *(_OWORD *)(a2 + 352);
  *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
  long long v21 = *(_OWORD *)(a2 + 376);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = v21;
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v22 = *(int *)(a3 + 44);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_OWORD *)(a1 + 336) = v19;
  *(_OWORD *)(a1 + 352) = v20;
  uint64_t v25 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 48);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

uint64_t assignWithTake for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  uint64_t v22 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v24;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 344)) {
    goto LABEL_5;
  }
  uint64_t v25 = *(void *)(a2 + 344);
  if (!v25)
  {
    sub_4523C(a1 + 336);
LABEL_5:
    long long v27 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v27;
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    goto LABEL_6;
  }
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v26;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
LABEL_6:
  *(_WORD *)(a1 + 376) = *(_WORD *)(a2 + 376);
  uint64_t v28 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v29 = *(int *)(a3 + 44);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = *(int *)(a3 + 48);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_227048);
}

uint64_t sub_227048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for BrickExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_227188);
}

uint64_t sub_227188(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_2272B4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrickExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x227490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrickExposureEvent.Model.CodingKeys()
{
  return &type metadata for BrickExposureEvent.Model.CodingKeys;
}

unint64_t sub_2274CC()
{
  unint64_t result = qword_325790;
  if (!qword_325790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325790);
  }
  return result;
}

unint64_t sub_227524()
{
  unint64_t result = qword_325798;
  if (!qword_325798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325798);
  }
  return result;
}

unint64_t sub_22757C()
{
  unint64_t result = qword_3257A0;
  if (!qword_3257A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257A0);
  }
  return result;
}

uint64_t sub_2275D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446B63697262 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614465676170 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446C6C65537075 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_2279E8()
{
  return 0x65707954626174;
}

uint64_t sub_227A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65707954626174 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227A98(uint64_t a1)
{
  unint64_t v2 = sub_227C58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_227AD4(uint64_t a1)
{
  unint64_t v2 = sub_227C58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3257A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_227C58();
  sub_27E440();
  char v10 = v7;
  sub_227CAC();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_227C58()
{
  unint64_t result = qword_3257B0;
  if (!qword_3257B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257B0);
  }
  return result;
}

unint64_t sub_227CAC()
{
  unint64_t result = qword_3257B8;
  if (!qword_3257B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257B8);
  }
  return result;
}

uint64_t TabData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3257C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_227C58();
  sub_27E430();
  if (!v2)
  {
    sub_227E68();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_227E68()
{
  unint64_t result = qword_3257C8;
  if (!qword_3257C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257C8);
  }
  return result;
}

unint64_t sub_227EC0()
{
  unint64_t result = qword_3257D0;
  if (!qword_3257D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257D0);
  }
  return result;
}

unint64_t sub_227F18()
{
  unint64_t result = qword_3257D8;
  if (!qword_3257D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257D8);
  }
  return result;
}

uint64_t sub_227F6C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TabData.init(from:)(a1, a2);
}

uint64_t sub_227F84(void *a1)
{
  return TabData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for TabData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabData()
{
  return &type metadata for TabData;
}

unsigned char *storeEnumTagSinglePayload for TabData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22813CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TabData.CodingKeys()
{
  return &type metadata for TabData.CodingKeys;
}

unint64_t sub_228178()
{
  unint64_t result = qword_3257E0;
  if (!qword_3257E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257E0);
  }
  return result;
}

unint64_t sub_2281D0()
{
  unint64_t result = qword_3257E8;
  if (!qword_3257E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257E8);
  }
  return result;
}

unint64_t sub_228228()
{
  unint64_t result = qword_3257F0;
  if (!qword_3257F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257F0);
  }
  return result;
}

BookAnalytics::SortType_optional __swiftcall SortType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9A30;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t SortType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65636572;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x726F68747561;
      break;
    case 4:
      uint64_t result = 0x6C61756E616DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_228378()
{
  unint64_t result = qword_3257F8;
  if (!qword_3257F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3257F8);
  }
  return result;
}

Swift::Int sub_2283CC()
{
  return sub_27E420();
}

uint64_t sub_2284B4()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_228584()
{
  return sub_27E420();
}

BookAnalytics::SortType_optional sub_228668(Swift::String *a1)
{
  return SortType.init(rawValue:)(*a1);
}

void sub_228674(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x746E65636572;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C746974;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x726F68747561;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6C61756E616DLL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_228720()
{
  return sub_27DED0();
}

uint64_t sub_228780()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22889CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SortType()
{
  return &type metadata for SortType;
}

unint64_t sub_2288D4()
{
  unint64_t result = qword_325800;
  if (!qword_325800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325800);
  }
  return result;
}

uint64_t sub_228928(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325808, &enum case for SessionGroup.default(_:));
}

uint64_t static LibraryViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325808, a1);
}

uint64_t sub_228988(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325820, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static LibraryViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325820, a1);
}

uint64_t LibraryViewEvent.libraryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_318BA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t LibraryViewEvent.libraryData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_318BA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t LibraryViewEvent.libraryDisplayData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_325838);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LibraryViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3258B8);
}

uint64_t LibraryViewEvent.libraryDisplayData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_325838);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LibraryViewEvent.libraryDisplayData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LibraryViewEvent.librarySortData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_325840);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryViewEvent.librarySortData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_325840);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LibraryViewEvent.librarySortData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LibraryViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LibraryViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LibraryViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LibraryViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LibraryViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for LibraryViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t LibraryViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LibraryViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325968);
}

uint64_t LibraryViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryViewEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryViewEvent.Model.init(libraryData:libraryDisplayData:librarySortData:eventData:timedData:)@<X0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a2;
  char v10 = *a3;
  *(void *)a6 = *a1;
  *(unsigned char *)(a6 + 8) = v9;
  *(unsigned char *)(a6 + 9) = v10;
  uint64_t v11 = type metadata accessor for LibraryViewEvent.Model(0);
  uint64_t v12 = a6 + *(int *)(v11 + 28);
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
  uint64_t v14 = a6 + *(int *)(v11 + 32);
  uint64_t v15 = sub_27D7F0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);

  return v16(v14, a5, v15);
}

uint64_t sub_2293A0()
{
  uint64_t result = 0x447972617262696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = 0x537972617262696CLL;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_229460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22BC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_229488(uint64_t a1)
{
  unint64_t v2 = sub_2297CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2294C4(uint64_t a1)
{
  unint64_t v2 = sub_2297CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LibraryViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_325848);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_2297CC();
  sub_27E440();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_7C5B0();
  sub_27E330();
  if (!v2)
  {
    v10[6] = *((unsigned char *)v3 + 8);
    v10[5] = 1;
    sub_8A2E0();
    sub_27E330();
    void v10[4] = *((unsigned char *)v3 + 9);
    v10[3] = 2;
    sub_130FEC();
    sub_27E2C0();
    type metadata accessor for LibraryViewEvent.Model(0);
    void v10[2] = 3;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v10[1] = 4;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2297CC()
{
  unint64_t result = qword_325850;
  if (!qword_325850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325850);
  }
  return result;
}

uint64_t LibraryViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = sub_27D7F0();
  uint64_t v25 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_4E04(&qword_325858);
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LibraryViewEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v32 = a1;
  sub_5900(a1, v13);
  sub_2297CC();
  uint64_t v31 = v9;
  uint64_t v14 = v33;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v32);
  }
  uint64_t v33 = v7;
  uint64_t v24 = v4;
  uint64_t v15 = v29;
  uint64_t v16 = (uint64_t)v12;
  uint64_t v18 = v27;
  uint64_t v17 = v28;
  char v40 = 0;
  sub_7CBE0();
  sub_27E260();
  *(void *)uint64_t v16 = v41;
  char v38 = 1;
  sub_8A288();
  sub_27E260();
  uint64_t v19 = v18;
  *(unsigned char *)(v16 + 8) = v39;
  char v36 = 2;
  sub_130F94();
  sub_27E1F0();
  *(unsigned char *)(v16 + 9) = v37;
  char v35 = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v20 = v33;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + *(int *)(v10 + 28), v20, v5);
  char v34 = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v21 = v24;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v16 + *(int *)(v10 + 32), v21, v15);
  sub_229D30(v16, v26);
  sub_5E94((uint64_t)v32);
  return sub_229D94(v16);
}

uint64_t sub_229D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_229D94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_229DF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_229E08(void *a1)
{
  return LibraryViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_229E20@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325808, a1);
}

uint64_t sub_229E58@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325820, a1);
}

uint64_t sub_229E90@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_318BA8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_325838);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_325840);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for LibraryViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for LibraryViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for LibraryViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for LibraryViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for LibraryViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_325838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_325840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22AA8C);
}

uint64_t sub_22AA8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_318BA8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_325838);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_325840);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for LibraryViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22AC98);
}

uint64_t sub_22AC98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_318BA8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_325838);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_325840);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_22AE9C()
{
  sub_22B0C0(319, &qword_318C58, (void (*)(void))sub_7CBE0, (void (*)(void))sub_7C5B0);
  if (v0 <= 0x3F)
  {
    sub_22B0C0(319, &qword_3258C8, (void (*)(void))sub_8A288, (void (*)(void))sub_8A2E0);
    if (v1 <= 0x3F)
    {
      sub_22B0C0(319, (unint64_t *)&unk_3258D0, (void (*)(void))sub_130F94, (void (*)(void))sub_130FEC);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_22B0C0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_27D7C0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_27D7F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for LibraryViewEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22B700);
}

uint64_t sub_22B700(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LibraryViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22B840);
}

void *sub_22B840(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_22B96C()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryViewEvent.Model.CodingKeys()
{
  return &type metadata for LibraryViewEvent.Model.CodingKeys;
}

unint64_t sub_22BB60()
{
  unint64_t result = qword_3259B0;
  if (!qword_3259B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259B0);
  }
  return result;
}

unint64_t sub_22BBB8()
{
  unint64_t result = qword_3259B8;
  if (!qword_3259B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259B8);
  }
  return result;
}

unint64_t sub_22BC10()
{
  unint64_t result = qword_3259C0;
  if (!qword_3259C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259C0);
  }
  return result;
}

uint64_t sub_22BC64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x447972617262696CLL && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B1A80 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x537972617262696CLL && a2 == 0xEF6174614474726FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SearchSelectionData.selectedResultPosition.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t SearchSelectionData.selectedResultPosition.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

void __swiftcall SearchSelectionData.init(selectedResultString:selectionType:selectedResultSection:selectedResultPosition:resultsReturnedCount:)(BookAnalytics::SearchSelectionData *__return_ptr retstr, Swift::String selectedResultString, BookAnalytics::SelectionType selectionType, BookAnalytics::SelectedResultSection selectedResultSection, Swift::Int32 selectedResultPosition, Swift::String resultsReturnedCount)
{
  BookAnalytics::SelectionType v6 = *(unsigned char *)selectionType;
  BookAnalytics::SelectedResultSection v7 = *(unsigned char *)selectedResultSection;
  retstr->selectedResultString = selectedResultString;
  retstr->selectionType = v6;
  retstr->selectedResultSection = v7;
  retstr->selectedResultPosition = selectedResultPosition;
  retstr->resultsReturnedCount = resultsReturnedCount;
}

unint64_t sub_22BF04(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F697463656C6573;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_22BFB0()
{
  return sub_22BF04(*v0);
}

uint64_t sub_22BFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22CC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22BFE0(uint64_t a1)
{
  unint64_t v2 = sub_22C76C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22C01C(uint64_t a1)
{
  unint64_t v2 = sub_22C76C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchSelectionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3259C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BookAnalytics::SelectionType v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int8 *)(v1 + 16);
  int v14 = *(unsigned __int8 *)(v1 + 17);
  int v15 = v7;
  int v13 = *(_DWORD *)(v1 + 20);
  uint64_t v8 = *(void *)(v1 + 24);
  v12[1] = *(void *)(v1 + 32);
  void v12[2] = v8;
  sub_5900(a1, a1[3]);
  sub_22C76C();
  sub_27E440();
  char v23 = 0;
  uint64_t v9 = v16;
  sub_27E2F0();
  if (!v9)
  {
    char v10 = v14;
    char v22 = v15;
    char v21 = 1;
    sub_22C7C0();
    sub_27E330();
    char v20 = v10;
    char v19 = 2;
    sub_22C814();
    sub_27E330();
    char v18 = 3;
    sub_27E340();
    char v17 = 4;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchSelectionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3259E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_22C76C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  char v26 = 1;
  sub_22C868();
  swift_bridgeObjectRetain();
  sub_27E260();
  int v21 = v27;
  char v24 = 2;
  sub_22C8BC();
  sub_27E260();
  int v20 = v25;
  char v23 = 3;
  int v19 = sub_27E270();
  char v22 = 4;
  uint64_t v12 = sub_27E220();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v21;
  *(unsigned char *)(a2 + 17) = v20;
  *(_DWORD *)(a2 + 20) = v19;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22C564@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSelectionData.init(from:)(a1, a2);
}

uint64_t sub_22C57C(void *a1)
{
  return SearchSelectionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics19SearchSelectionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 17);
  int v4 = *(_DWORD *)(a1 + 20);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 17);
  int v8 = *(_DWORD *)(a2 + 20);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v11 = sub_27E370(), uint64_t result = 0, (v11 & 1) != 0))
  {
    unint64_t v13 = 0xE400000000000000;
    uint64_t v14 = 1802465122;
    if (v2 != 1)
    {
      uint64_t v14 = 0x6F6F626F69647561;
      unint64_t v13 = 0xE90000000000006BLL;
    }
    if (v2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0x6E776F6E6B6E75;
    }
    if (v2) {
      unint64_t v16 = v13;
    }
    else {
      unint64_t v16 = 0xE700000000000000;
    }
    unint64_t v17 = 0xE400000000000000;
    uint64_t v18 = 1802465122;
    if (v6 != 1)
    {
      uint64_t v18 = 0x6F6F626F69647561;
      unint64_t v17 = 0xE90000000000006BLL;
    }
    if (v6) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0x6E776F6E6B6E75;
    }
    if (v6) {
      unint64_t v20 = v17;
    }
    else {
      unint64_t v20 = 0xE700000000000000;
    }
    if (v15 == v19 && v16 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v21 & 1) == 0) {
        return result;
      }
    }
    char v22 = sub_2F580(v3, v7);
    uint64_t result = 0;
    if ((v22 & 1) != 0 && v4 == v8)
    {
      if (v5 == v9 && v23 == v10)
      {
        return 1;
      }
      else
      {
        return sub_27E370();
      }
    }
  }
  return result;
}

unint64_t sub_22C76C()
{
  unint64_t result = qword_3259D0;
  if (!qword_3259D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259D0);
  }
  return result;
}

unint64_t sub_22C7C0()
{
  unint64_t result = qword_3259D8;
  if (!qword_3259D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259D8);
  }
  return result;
}

unint64_t sub_22C814()
{
  unint64_t result = qword_3259E0;
  if (!qword_3259E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259E0);
  }
  return result;
}

unint64_t sub_22C868()
{
  unint64_t result = qword_3259F0;
  if (!qword_3259F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259F0);
  }
  return result;
}

unint64_t sub_22C8BC()
{
  unint64_t result = qword_3259F8;
  if (!qword_3259F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3259F8);
  }
  return result;
}

uint64_t initializeWithCopy for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchSelectionData()
{
  return &type metadata for SearchSelectionData;
}

unsigned char *storeEnumTagSinglePayload for SearchSelectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22CB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData.CodingKeys()
{
  return &type metadata for SearchSelectionData.CodingKeys;
}

unint64_t sub_22CB60()
{
  unint64_t result = qword_325A00;
  if (!qword_325A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A00);
  }
  return result;
}

unint64_t sub_22CBB8()
{
  unint64_t result = qword_325A08;
  if (!qword_325A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A08);
  }
  return result;
}

unint64_t sub_22CC10()
{
  unint64_t result = qword_325A10;
  if (!qword_325A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A10);
  }
  return result;
}

uint64_t sub_22CC64(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000000002B1AA0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F697463656C6573 && a2 == 0xED0000657079546ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002B1AC0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002B1AE0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002B1B00)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_22CE88(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325A18, &enum case for SessionGroup.default(_:));
}

uint64_t static ClearSearchHistoryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CC8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325A18, a1);
}

uint64_t sub_22CEE8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325A30, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ClearSearchHistoryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CD0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325A30, a1);
}

uint64_t ClearSearchHistoryEvent.clearedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_325A48);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ClearSearchHistoryEvent.clearedData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_325A48);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ClearSearchHistoryEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClearSearchHistoryEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClearSearchHistoryEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_325AD0);
}

uint64_t ClearSearchHistoryEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClearSearchHistoryEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ClearSearchHistoryEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ClearSearchHistoryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ClearSearchHistoryEvent(0) + 20);
  uint64_t v5 = enum case for EventProperty.required<A>(_:);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  char v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(v4, v5, v6);
}

uint64_t ClearSearchHistoryEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClearSearchHistoryEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClearSearchHistoryEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325B68);
}

uint64_t ClearSearchHistoryEvent.Model.init(clearedData:eventData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for ClearSearchHistoryEvent.Model(0) + 20)];
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t sub_22D370()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0x4464657261656C63;
  }
}

uint64_t sub_22D3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22E82C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D3E0(uint64_t a1)
{
  unint64_t v2 = sub_22D614();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22D41C(uint64_t a1)
{
  unint64_t v2 = sub_22D614();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClearSearchHistoryEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_325A50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_22D614();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_22D668();
  sub_27E2C0();
  if (!v2)
  {
    type metadata accessor for ClearSearchHistoryEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_22D614()
{
  unint64_t result = qword_325A58;
  if (!qword_325A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A58);
  }
  return result;
}

unint64_t sub_22D668()
{
  unint64_t result = qword_325A60;
  if (!qword_325A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A60);
  }
  return result;
}

uint64_t ClearSearchHistoryEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_27D7C0();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_4E04(&qword_325A68);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClearSearchHistoryEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_22D614();
  sub_27E430();
  if (!v2)
  {
    uint64_t v20 = v8;
    char v11 = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    char v27 = 0;
    sub_22D9B4();
    uint64_t v14 = v25;
    sub_27E1F0();
    uint64_t v19 = v11;
    *char v11 = v28;
    char v26 = 1;
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    uint64_t v15 = v21;
    uint64_t v16 = (uint64_t)v19;
    (*(void (**)(unsigned char *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v5, v13);
    sub_22DA08(v16, v15);
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_22D9B4()
{
  unint64_t result = qword_325A70;
  if (!qword_325A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325A70);
  }
  return result;
}

uint64_t sub_22DA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClearSearchHistoryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DA6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClearSearchHistoryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_22DA84(void *a1)
{
  return ClearSearchHistoryEvent.Model.encode(to:)(a1);
}

uint64_t sub_22DA9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CC8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325A18, a1);
}

uint64_t sub_22DAD4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CD0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325A30, a1);
}

uint64_t sub_22DB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClearSearchHistoryEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_325A48);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_325A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22E0B8);
}

uint64_t sub_22E0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_325A48);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ClearSearchHistoryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22E1CC);
}

uint64_t sub_22E1CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_325A48);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_22E2D8()
{
  sub_22E3A0();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22E3A0()
{
  if (!qword_325AE0)
  {
    sub_22D9B4();
    sub_22D668();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_325AE0);
    }
  }
}

uint64_t getEnumTagSinglePayload for ClearSearchHistoryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22E41C);
}

uint64_t sub_22E41C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    if (*a1 <= 2u) {
      int v4 = 2;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 2;
    if (*a1 >= 2u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ClearSearchHistoryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22E4E4);
}

unsigned char *sub_22E4E4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 253)
  {
    *unint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22E588()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClearSearchHistoryEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22E6ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClearSearchHistoryEvent.Model.CodingKeys()
{
  return &type metadata for ClearSearchHistoryEvent.Model.CodingKeys;
}

unint64_t sub_22E728()
{
  unint64_t result = qword_325BA0;
  if (!qword_325BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BA0);
  }
  return result;
}

unint64_t sub_22E780()
{
  unint64_t result = qword_325BA8;
  if (!qword_325BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BA8);
  }
  return result;
}

unint64_t sub_22E7D8()
{
  unint64_t result = qword_325BB0;
  if (!qword_325BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BB0);
  }
  return result;
}

uint64_t sub_22E82C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4464657261656C63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22E948()
{
  return 0x6E72755465676170;
}

uint64_t sub_22E968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E72755465676170 && a2 == 0xEC00000065707954)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22EA18(uint64_t a1)
{
  unint64_t v2 = sub_22EE54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22EA54(uint64_t a1)
{
  unint64_t v2 = sub_22EE54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PageTurnFeatureData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_325BB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_22EE54();
  sub_27E440();
  char v10 = v7;
  sub_22EEA8();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PageTurnFeatureData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_325BD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_22EE54();
  sub_27E430();
  if (!v2)
  {
    sub_22EEFC();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_22ED40@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return PageTurnFeatureData.init(from:)(a1, a2);
}

uint64_t sub_22ED58(void *a1)
{
  return PageTurnFeatureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics19PageTurnFeatureDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 1819440483;
  if (v2 != 1) {
    uint64_t v3 = 1701736302;
  }
  if (*a1) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0x6564696C73;
  }
  if (v2) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  uint64_t v6 = 1819440483;
  if (*a2 != 1) {
    uint64_t v6 = 1701736302;
  }
  if (*a2) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0x6564696C73;
  }
  if (*a2) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  if (v4 == v7 && v5 == v8) {
    char v9 = 1;
  }
  else {
    char v9 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t sub_22EE54()
{
  unint64_t result = qword_325BC0;
  if (!qword_325BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BC0);
  }
  return result;
}

unint64_t sub_22EEA8()
{
  unint64_t result = qword_325BC8;
  if (!qword_325BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BC8);
  }
  return result;
}

unint64_t sub_22EEFC()
{
  unint64_t result = qword_325BD8;
  if (!qword_325BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageTurnFeatureData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22F024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageTurnFeatureData()
{
  return &type metadata for PageTurnFeatureData;
}

unsigned char *storeEnumTagSinglePayload for PageTurnFeatureData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22F0F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageTurnFeatureData.CodingKeys()
{
  return &type metadata for PageTurnFeatureData.CodingKeys;
}

unint64_t sub_22F134()
{
  unint64_t result = qword_325BE0;
  if (!qword_325BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BE0);
  }
  return result;
}

unint64_t sub_22F18C()
{
  unint64_t result = qword_325BE8;
  if (!qword_325BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BE8);
  }
  return result;
}

unint64_t sub_22F1E4()
{
  unint64_t result = qword_325BF0;
  if (!qword_325BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325BF0);
  }
  return result;
}

uint64_t sub_22F238(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325BF8, &enum case for SessionGroup.default(_:));
}

uint64_t static RedownloadAttemptEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CD8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325BF8, a1);
}

uint64_t sub_22F298(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325C10, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RedownloadAttemptEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CE0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325C10, a1);
}

uint64_t RedownloadAttemptEvent.contentStoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadAttemptEvent(uint64_t a1)
{
  return sub_5338(a1, qword_325C98);
}

uint64_t RedownloadAttemptEvent.contentStoreData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_3184D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadAttemptEvent.contentStoreData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadAttemptEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadAttemptEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadAttemptEvent.sectionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadAttemptEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RedownloadAttemptEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RedownloadAttemptEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RedownloadAttemptEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RedownloadAttemptEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_3184D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t RedownloadAttemptEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RedownloadAttemptEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RedownloadAttemptEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325D30);
}

uint64_t RedownloadAttemptEvent.Model.init(contentData:contentStoreData:sectionData:eventData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  long long v9 = *(_OWORD *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 56);
  int v13 = *(_DWORD *)(a1 + 60);
  char v14 = *(unsigned char *)(a1 + 64);
  int v15 = *(_DWORD *)(a1 + 68);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(unsigned char *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 24) = v9;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 56) = v12;
  *(_DWORD *)(a5 + 60) = v13;
  *(unsigned char *)(a5 + 64) = v14;
  *(_DWORD *)(a5 + 68) = v15;
  *(unsigned char *)(a5 + 72) = v16;
  int v17 = *(_DWORD *)(a1 + 73);
  long long v18 = *a2;
  long long v19 = a2[1];
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v18;
  long long v20 = a2[2];
  long long v21 = a2[3];
  *(_OWORD *)(a5 + 112) = v19;
  *(_OWORD *)(a5 + 128) = v20;
  *(_OWORD *)(a5 + 144) = v21;
  long long v22 = a3[1];
  *(_OWORD *)(a5 + 168) = *a3;
  *(_OWORD *)(a5 + 184) = v22;
  long long v23 = a3[3];
  *(_OWORD *)(a5 + 200) = a3[2];
  *(_OWORD *)(a5 + 216) = v23;
  long long v24 = a3[5];
  *(_OWORD *)(a5 + 232) = a3[4];
  char v25 = *(unsigned char *)(a1 + 77);
  LODWORD(v10) = *((_DWORD *)a2 + 16);
  LOBYTE(v11) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a5 + 73) = v17;
  *(unsigned char *)(a5 + 77) = v25;
  *(unsigned char *)(a5 + 164) = v11;
  *(_DWORD *)(a5 + 160) = v10;
  *(_OWORD *)(a5 + 248) = v24;
  *(_OWORD *)(a5 + 264) = a3[6];
  uint64_t v26 = a5 + *(int *)(type metadata accessor for RedownloadAttemptEvent.Model(0) + 28);
  uint64_t v27 = sub_27D7C0();
  char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);

  return v28(v26, a4, v27);
}

unint64_t sub_22FA14()
{
  unint64_t result = 0x44746E65746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22FAB0(uint64_t a1)
{
  unint64_t v2 = sub_22FDF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22FAEC(uint64_t a1)
{
  unint64_t v2 = sub_22FDF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RedownloadAttemptEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_325C28);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_5900(a1, a1[3]);
  sub_22FDF0();
  sub_27E440();
  uint64_t v10 = *(void *)(v4 + 8);
  char v11 = *(unsigned char *)(v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 40);
  uint64_t v14 = *(void *)(v4 + 48);
  __int16 v15 = *(_WORD *)(v4 + 56);
  int v16 = *(_DWORD *)(v4 + 60);
  char v17 = *(unsigned char *)(v4 + 64);
  int v18 = *(_DWORD *)(v4 + 68);
  char v19 = *(unsigned char *)(v4 + 72);
  char v20 = *(unsigned char *)(v4 + 77);
  *(void *)&long long v32 = *(void *)v4;
  *((void *)&v32 + 1) = v10;
  v33[0] = v11;
  *(_OWORD *)&v33[8] = v12;
  *(void *)&v33[24] = v13;
  *(void *)&long long v34 = v14;
  WORD4(v34) = v15;
  HIDWORD(v34) = v16;
  LOBYTE(v35) = v17;
  DWORD1(v35) = v18;
  BYTE8(v35) = v19;
  *(_DWORD *)((char *)&v35 + 9) = *(_DWORD *)(v4 + 73);
  BYTE13(v35) = v20;
  long long v36 = *(_OWORD *)(v4 + 80);
  char v38 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    int v21 = *(_DWORD *)(v4 + 160);
    char v22 = *(unsigned char *)(v4 + 164);
    long long v23 = *(_OWORD *)(v4 + 112);
    long long v32 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)uint64_t v33 = v23;
    long long v24 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v33[16] = *(_OWORD *)(v4 + 128);
    long long v34 = v24;
    BYTE4(v35) = v22;
    LODWORD(v35) = v21;
    char v38 = 1;
    sub_6C400();
    sub_27E2C0();
    long long v25 = *(_OWORD *)(v4 + 184);
    long long v26 = *(_OWORD *)(v4 + 200);
    long long v32 = *(_OWORD *)(v4 + 168);
    *(_OWORD *)uint64_t v33 = v25;
    long long v27 = *(_OWORD *)(v4 + 216);
    long long v28 = *(_OWORD *)(v4 + 232);
    *(_OWORD *)&v33[16] = v26;
    long long v34 = v27;
    long long v29 = *(_OWORD *)(v4 + 248);
    long long v30 = *(_OWORD *)(v4 + 264);
    long long v35 = v28;
    long long v36 = v29;
    long long v37 = v30;
    char v38 = 2;
    sub_1FE58();
    sub_27E2C0();
    type metadata accessor for RedownloadAttemptEvent.Model(0);
    LOBYTE(v32) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_22FDF0()
{
  unint64_t result = qword_325C30;
  if (!qword_325C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325C30);
  }
  return result;
}

uint64_t RedownloadAttemptEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_27D7C0();
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_4E04(&qword_325C38);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RedownloadAttemptEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v44 = a1;
  sub_5900(a1, v11);
  sub_22FDF0();
  long long v12 = v7;
  uint64_t v13 = v45;
  sub_27E430();
  if (v13) {
    return sub_5E94((uint64_t)v44);
  }
  uint64_t v14 = v10;
  __int16 v15 = v5;
  uint64_t v17 = v41;
  uint64_t v16 = v42;
  char v52 = 0;
  sub_1A98C();
  sub_27E260();
  uint64_t v18 = *((void *)&v46 + 1);
  char v19 = v47[0];
  long long v20 = *(_OWORD *)&v47[8];
  uint64_t v21 = *(void *)&v47[24];
  uint64_t v22 = v48;
  __int16 v23 = WORD4(v48);
  int v24 = HIDWORD(v48);
  char v25 = v49;
  int v26 = DWORD1(v49);
  char v27 = BYTE8(v49);
  char v28 = BYTE13(v49);
  *(void *)uint64_t v14 = v46;
  *((void *)v14 + 1) = v18;
  unsigned char v14[16] = v19;
  *(_OWORD *)(v14 + 24) = v20;
  *((void *)v14 + 5) = v21;
  *((void *)v14 + 6) = v22;
  *((_WORD *)v14 + 28) = v23;
  *((_DWORD *)v14 + 15) = v24;
  v14[64] = v25;
  *((_DWORD *)v14 + 17) = v26;
  v14[72] = v27;
  *(_DWORD *)(v14 + 73) = *(_DWORD *)((char *)&v49 + 9);
  v14[77] = v28;
  *((_OWORD *)v14 + 5) = v50;
  char v52 = 1;
  sub_6D068();
  sub_27E1F0();
  int v29 = v49;
  char v30 = BYTE4(v49);
  long long v31 = *(_OWORD *)v47;
  *((_OWORD *)v14 + 6) = v46;
  *((_OWORD *)v14 + 7) = v31;
  long long v32 = v48;
  *((_OWORD *)v14 + 8) = *(_OWORD *)&v47[16];
  *((_OWORD *)v14 + 9) = v32;
  v14[164] = v30;
  *((_DWORD *)v14 + 40) = v29;
  char v52 = 2;
  sub_20898();
  sub_27E1F0();
  long long v33 = *(_OWORD *)v47;
  *(_OWORD *)(v14 + 168) = v46;
  long long v34 = *(_OWORD *)&v47[16];
  long long v35 = v48;
  *(_OWORD *)(v14 + 184) = v33;
  *(_OWORD *)(v14 + 200) = v34;
  long long v36 = v49;
  long long v37 = v50;
  *(_OWORD *)(v14 + 216) = v35;
  *(_OWORD *)(v14 + 232) = v36;
  long long v38 = v51;
  *(_OWORD *)(v14 + 248) = v37;
  *(_OWORD *)(v14 + 264) = v38;
  LOBYTE(v46) = 3;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v43);
  (*(void (**)(void, char *, uint64_t))(v16 + 32))(*(int *)(v8 + 28), v15, v3);
  sub_230344(0, v40);
  sub_5E94((uint64_t)v44);
  return sub_2303A8(0);
}

uint64_t sub_230344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedownloadAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2303A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedownloadAttemptEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_230404@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RedownloadAttemptEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_23041C(void *a1)
{
  return RedownloadAttemptEvent.Model.encode(to:)(a1);
}

uint64_t sub_230434@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CD8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325BF8, a1);
}

uint64_t sub_23046C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CE0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325C10, a1);
}

uint64_t getEnumTagSinglePayload for RedownloadAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2304B8);
}

uint64_t sub_2304B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for RedownloadAttemptEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_230674);
}

uint64_t sub_230674(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_3184D0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316A10);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t getEnumTagSinglePayload for RedownloadAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23083C);
}

uint64_t sub_23083C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RedownloadAttemptEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_230900);
}

uint64_t sub_230900(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2309A8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RedownloadAttemptEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x230B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedownloadAttemptEvent.Model.CodingKeys()
{
  return &type metadata for RedownloadAttemptEvent.Model.CodingKeys;
}

unint64_t sub_230B5C()
{
  unint64_t result = qword_325D70;
  if (!qword_325D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325D70);
  }
  return result;
}

unint64_t sub_230BB4()
{
  unint64_t result = qword_325D78;
  if (!qword_325D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325D78);
  }
  return result;
}

unint64_t sub_230C0C()
{
  unint64_t result = qword_325D80;
  if (!qword_325D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325D80);
  }
  return result;
}

uint64_t sub_230C60(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325D88, &enum case for SessionGroup.default(_:));
}

uint64_t static AuthorExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CE8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325D88, a1);
}

uint64_t sub_230CC0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325DA0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static AuthorExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CF0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325DA0, a1);
}

uint64_t AuthorExposureEvent.authorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_325DB8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AuthorExposureEvent.authorData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_325DB8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AuthorExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AuthorExposureEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_325E30);
}

uint64_t AuthorExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_317A38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AuthorExposureEvent.exposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AuthorExposureEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AuthorExposureEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316A20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AuthorExposureEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AuthorExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AuthorExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AuthorExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AuthorExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AuthorExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AuthorExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t AuthorExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AuthorExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t AuthorExposureEvent.Model.authorData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AuthorExposureEvent.Model.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_4EC48(v2, v3);
}

void *AuthorExposureEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_4ED08(v1 + 80, (uint64_t)v4);
  sub_4ED08((uint64_t)v4, a1);
  return sub_4FB64(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1F4E8);
}

uint64_t AuthorExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AuthorExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_325ED8);
}

uint64_t AuthorExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthorExposureEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AuthorExposureEvent.Model.init(authorData:exposureData:linkData:eventData:timedData:)@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  long long v20 = a2[1];
  long long v21 = *a2;
  long long v19 = a2[2];
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  sub_4ED08(a3, (uint64_t)v22);
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(_OWORD *)(a6 + 16) = v21;
  *(_OWORD *)(a6 + 32) = v20;
  *(_OWORD *)(a6 + 48) = v19;
  *(void *)(a6 + 64) = v11;
  *(void *)(a6 + 72) = v12;
  sub_4ED08((uint64_t)v22, a6 + 80);
  uint64_t v13 = type metadata accessor for AuthorExposureEvent.Model(0);
  uint64_t v14 = a6 + *(int *)(v13 + 28);
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a4, v15);
  uint64_t v16 = a6 + *(int *)(v13 + 32);
  uint64_t v17 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a5, v17);
}

uint64_t sub_2317A0()
{
  uint64_t result = 0x6144726F68747561;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 3:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0x4464656D6974;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_231854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2349E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23187C(uint64_t a1)
{
  unint64_t v2 = sub_231C34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2318B8(uint64_t a1)
{
  unint64_t v2 = sub_231C34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AuthorExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_325DC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_231C34();
  sub_27E440();
  uint64_t v9 = *(void *)(v3 + 8);
  v17[0] = *(void *)v3;
  v17[1] = v9;
  v16[0] = 0;
  sub_6A20C();
  sub_27E330();
  if (v2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v11 = v6;
  long long v12 = *(_OWORD *)(v3 + 32);
  long long v19 = *(_OWORD *)(v3 + 16);
  long long v20 = v12;
  long long v13 = *(_OWORD *)(v3 + 64);
  long long v21 = *(_OWORD *)(v3 + 48);
  long long v22 = v13;
  char v18 = 1;
  sub_4F4B0();
  sub_27E2C0();
  sub_4ED08(v3 + 80, (uint64_t)v17);
  sub_4ED08((uint64_t)v17, (uint64_t)v16);
  v15[7] = 2;
  sub_1FF00();
  sub_27E2C0();
  type metadata accessor for AuthorExposureEvent.Model(0);
  v16[0] = 3;
  sub_27D7C0();
  sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v23 = v5;
  sub_27E330();
  v16[0] = 4;
  sub_27D7F0();
  sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v14 = v23;
  sub_27E330();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v8, v14);
}

unint64_t sub_231C34()
{
  unint64_t result = qword_325DC8;
  if (!qword_325DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325DC8);
  }
  return result;
}

uint64_t AuthorExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_27D7F0();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  char v27 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_4E04(&qword_325DD0);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AuthorExposureEvent.Model(0);
  __chkstk_darwin(v11);
  long long v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_231C34();
  long long v32 = v10;
  uint64_t v14 = (uint64_t)v36;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v15 = v7;
  long long v36 = a1;
  uint64_t v16 = (uint64_t)v13;
  v34[0] = 0;
  sub_6A1B4();
  sub_27E260();
  uint64_t v17 = *((void *)&v35[0] + 1);
  *(void *)long long v13 = *(void *)&v35[0];
  *((void *)v13 + 1) = v17;
  v34[0] = 1;
  sub_4FB10();
  sub_27E1F0();
  long long v18 = v35[1];
  *((_OWORD *)v13 + 1) = v35[0];
  *((_OWORD *)v13 + 2) = v18;
  long long v19 = v35[3];
  *((_OWORD *)v13 + 3) = v35[2];
  *((_OWORD *)v13 + 4) = v19;
  v34[159] = 2;
  sub_20940();
  sub_27E1F0();
  v23[1] = 0;
  sub_4ED08((uint64_t)v35, (uint64_t)v34);
  sub_4ED08((uint64_t)v34, (uint64_t)(v13 + 80));
  char v33 = 3;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v20 = v28;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v16 + *(int *)(v11 + 28), v15, v20);
  char v33 = 4;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v21 = v26;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v16 + *(int *)(v11 + 32), v27, v21);
  sub_23226C(v16, v25);
  sub_5E94((uint64_t)v36);
  return sub_2322D0(v16);
}

uint64_t sub_23226C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthorExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2322D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthorExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23232C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AuthorExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_232344(void *a1)
{
  return AuthorExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_23235C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CE8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325D88, a1);
}

uint64_t sub_232394@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CF0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325DA0, a1);
}

uint64_t sub_2323CC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for AuthorExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_325DB8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_317A38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for AuthorExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for AuthorExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for AuthorExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for AuthorExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for AuthorExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_325DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthorExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_232FC8);
}

uint64_t sub_232FC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_325DB8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for AuthorExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2331D4);
}

uint64_t sub_2331D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_325DB8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_317A38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_4E04(&qword_315DE8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_2333D8()
{
  sub_2335FC(319, (unint64_t *)&unk_325E40, (void (*)(void))sub_6A1B4, (void (*)(void))sub_6A20C);
  if (v0 <= 0x3F)
  {
    sub_2335FC(319, (unint64_t *)&unk_317AD0, (void (*)(void))sub_4FB10, (void (*)(void))sub_4F4B0);
    if (v1 <= 0x3F)
    {
      sub_2335FC(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F)
        {
          sub_6E6C();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_2335FC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AuthorExposureEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      uint64_t v9 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v9;
      uint64_t v10 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      uint64_t v11 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = a2[11];
      if (v12)
      {
LABEL_4:
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v12;
        uint64_t v13 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v13;
        uint64_t v14 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v14;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        uint64_t v15 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v15;
        uint64_t v16 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v16;
        uint64_t v37 = v6;
        uint64_t v17 = a2[22];
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v17;
        uint64_t v18 = a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v18;
        uint64_t v19 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v19;
        uint64_t v20 = a2[28];
        *(void *)(a1 + 216) = a2[27];
        *(void *)(a1 + 224) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        uint64_t v28 = *(int *)(v6 + 28);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = *(int *)(v6 + 32);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = (uint64_t)a2 + v32;
        uint64_t v35 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        return a1;
      }
    }
    else
    {
      long long v22 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v22;
      long long v23 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v23;
      uint64_t v12 = a2[11];
      if (v12) {
        goto LABEL_4;
      }
    }
    long long v24 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 192) = v24;
    *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    long long v25 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v25;
    long long v26 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v26;
    long long v27 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v27;
    goto LABEL_8;
  }
  uint64_t v21 = *a2;
  *(void *)a1 = *a2;
  a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (!v7)
  {
    long long v20 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v20;
    long long v21 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v21;
    uint64_t v11 = *(void *)(a2 + 88);
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    long long v22 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v22;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v23 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v23;
    long long v24 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v24;
    long long v25 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v25;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *(void *)(a2 + 88);
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  uint64_t v35 = a3;
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (long long *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v8)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_51BEC(a1 + 16);
      long long v9 = *(_OWORD *)(a2 + 64);
      long long v11 = *v7;
      long long v10 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v9;
      *uint64_t v6 = v11;
      *(_OWORD *)(a1 + 32) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 32);
    long long v14 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v14;
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 32) = v13;
  }
  uint64_t v15 = (_OWORD *)(a1 + 80);
  uint64_t v16 = (_OWORD *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v17)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 80);
      long long v18 = *(_OWORD *)(a2 + 96);
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 96) = v18;
      long long v19 = *(_OWORD *)(a2 + 160);
      long long v21 = *(_OWORD *)(a2 + 112);
      long long v20 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v19;
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v20;
      long long v23 = *(_OWORD *)(a2 + 192);
      long long v22 = *(_OWORD *)(a2 + 208);
      long long v24 = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(_OWORD *)(a1 + 192) = v23;
      *(_OWORD *)(a1 + 208) = v22;
      *(_OWORD *)(a1 + 176) = v24;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 96);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 96) = v25;
    long long v26 = *(_OWORD *)(a2 + 112);
    long long v27 = *(_OWORD *)(a2 + 128);
    long long v28 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v28;
    *(_OWORD *)(a1 + 112) = v26;
    *(_OWORD *)(a1 + 128) = v27;
    long long v29 = *(_OWORD *)(a2 + 176);
    long long v30 = *(_OWORD *)(a2 + 192);
    long long v31 = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(_OWORD *)(a1 + 192) = v30;
    *(_OWORD *)(a1 + 208) = v31;
    *(_OWORD *)(a1 + 176) = v29;
  }
  uint64_t v32 = *(int *)(a3 + 28);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = *(int *)(a3 + 32);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t initializeWithTake for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_51BEC(a1 + 16);
  }
  long long v11 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v11;
  long long v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
LABEL_6:
  if (!*(void *)(a1 + 88))
  {
LABEL_10:
    long long v22 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v22;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v23 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v23;
    long long v24 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v24;
    long long v25 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v25;
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)(a2 + 88);
  if (!v13)
  {
    sub_23648(a1 + 80);
    goto LABEL_10;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v21;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v26 = *(int *)(a3 + 28);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_234480);
}

uint64_t sub_234480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AuthorExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2345C0);
}

uint64_t sub_2345C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_2346EC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AuthorExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2348A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthorExposureEvent.Model.CodingKeys()
{
  return &type metadata for AuthorExposureEvent.Model.CodingKeys;
}

unint64_t sub_2348DC()
{
  unint64_t result = qword_325F20;
  if (!qword_325F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325F20);
  }
  return result;
}

unint64_t sub_234934()
{
  unint64_t result = qword_325F28;
  if (!qword_325F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325F28);
  }
  return result;
}

unint64_t sub_23498C()
{
  unint64_t result = qword_325F30;
  if (!qword_325F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325F30);
  }
  return result;
}

uint64_t sub_2349E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144726F68747561 && a2 == 0xEA00000000006174;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_234C3C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_325F38, &enum case for SessionGroup.default(_:));
}

uint64_t static GoalStateEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315CF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325F38, a1);
}

uint64_t sub_234C9C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_325F50, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static GoalStateEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325F50, a1);
}

uint64_t GoalStateEvent.readingGoalsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_316F68);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GoalStateEvent.readingGoalsData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_316F68);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t GoalStateEvent.booksGoalsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalStateEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GoalStateEvent(uint64_t a1)
{
  return sub_5338(a1, qword_325FD8);
}

uint64_t GoalStateEvent.booksGoalsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalStateEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GoalStateEvent.booksGoalsData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GoalStateEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalStateEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GoalStateEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalStateEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GoalStateEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t GoalStateEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for GoalStateEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = enum case for EventProperty.required<A>(_:);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v7, v8, v9);
}

__n128 GoalStateEvent.Model.readingGoalsData.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 72);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v2;
  *(unsigned char *)(a1 + 72) = v3;
  return result;
}

__n128 GoalStateEvent.Model.booksGoalsData.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  __n128 result = *(__n128 *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 96);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t GoalStateEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GoalStateEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GoalStateEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_326070);
}

uint64_t GoalStateEvent.Model.init(readingGoalsData:booksGoalsData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 72);
  char v8 = *(unsigned char *)(a2 + 32);
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v9;
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 48) = v10;
  *(void *)(a4 + 64) = v6;
  *(unsigned char *)(a4 + 72) = v7;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 80) = *(_OWORD *)a2;
  *(_OWORD *)(a4 + 96) = v11;
  *(unsigned char *)(a4 + 112) = v8;
  uint64_t v12 = a4 + *(int *)(type metadata accessor for GoalStateEvent.Model(0) + 24);
  uint64_t v13 = sub_27D7C0();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a3, v13);
}

unint64_t sub_235318()
{
  uint64_t v1 = 0x616F47736B6F6F62;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_235388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2353B0(uint64_t a1)
{
  unint64_t v2 = sub_235644();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2353EC(uint64_t a1)
{
  unint64_t v2 = sub_235644();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GoalStateEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_325F68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_235644();
  sub_27E440();
  uint64_t v9 = *((void *)v3 + 8);
  char v10 = *((unsigned char *)v3 + 72);
  long long v11 = v3[1];
  long long v18 = *v3;
  long long v19 = v11;
  long long v12 = v3[3];
  long long v20 = v3[2];
  long long v21 = v12;
  uint64_t v22 = v9;
  char v23 = v10;
  char v17 = 0;
  sub_29044();
  sub_27E2C0();
  if (!v2)
  {
    char v13 = *((unsigned char *)v3 + 112);
    long long v14 = v3[6];
    long long v18 = v3[5];
    long long v19 = v14;
    LOBYTE(v20) = v13;
    char v17 = 1;
    sub_36A20();
    sub_27E2C0();
    type metadata accessor for GoalStateEvent.Model(0);
    LOBYTE(v18) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_235644()
{
  unint64_t result = qword_325F70;
  if (!qword_325F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_325F70);
  }
  return result;
}

uint64_t GoalStateEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = sub_27D7C0();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_4E04(&qword_325F78);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GoalStateEvent.Model(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_235644();
  uint64_t v10 = v31;
  sub_27E430();
  if (!v10)
  {
    uint64_t v11 = (uint64_t)v9;
    uint64_t v31 = v7;
    uint64_t v13 = v28;
    uint64_t v12 = v29;
    long long v14 = v4;
    char v38 = 0;
    sub_28FEC();
    uint64_t v15 = v30;
    sub_27E1F0();
    uint64_t v16 = v36;
    char v17 = v37;
    long long v18 = v33;
    *(_OWORD *)uint64_t v11 = v32;
    *(_OWORD *)(v11 + 16) = v18;
    long long v19 = v35;
    *(_OWORD *)(v11 + 32) = v34;
    *(_OWORD *)(v11 + 48) = v19;
    *(void *)(v11 + 64) = v16;
    *(unsigned char *)(v11 + 72) = v17;
    char v38 = 1;
    sub_376F0();
    sub_27E1F0();
    char v21 = v34;
    long long v22 = v33;
    *(_OWORD *)(v11 + 80) = v32;
    *(_OWORD *)(v11 + 96) = v22;
    *(unsigned char *)(v11 + 112) = v21;
    LOBYTE(v32) = 2;
    sub_1AB30(&qword_315E28);
    long long v25 = v14;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v15);
    uint64_t v23 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v11 + *(int *)(v31 + 24), v25, v12);
    sub_2359EC(v11, v23);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_2359EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GoalStateEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_235A50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GoalStateEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_235A68(void *a1)
{
  return GoalStateEvent.Model.encode(to:)(a1);
}

uint64_t sub_235A80@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315CF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_325F38, a1);
}

uint64_t sub_235AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_325F50, a1);
}

uint64_t sub_235AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = enum case for EventProperty.required<A>(_:);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v8, v9, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for GoalStateEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316F68);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316F70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    long long v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for GoalStateEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2362D4);
}

uint64_t sub_2362D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316F68);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316F70);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for GoalStateEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_236440);
}

uint64_t sub_236440(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316F68);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316F70);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_2365A4()
{
  sub_236718(319, &qword_317050, (void (*)(void))sub_28FEC, (void (*)(void))sub_29044);
  if (v0 <= 0x3F)
  {
    sub_236718(319, &qword_317058, (void (*)(void))sub_376F0, (void (*)(void))sub_36A20);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_236718(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for GoalStateEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v11 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  }
  return v3;
}

uint64_t initializeWithCopy for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  long long v7 = *(_OWORD *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v9, v8, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_236B0C);
}

uint64_t sub_236B0C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    if (*a1 <= 3u) {
      int v4 = 3;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 3;
    if (*a1 >= 3u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 24)];
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for GoalStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_236BD4);
}

unsigned char *sub_236BD4(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 252)
  {
    *unint64_t result = a2 + 3;
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_236C78()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GoalStateEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236DE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalStateEvent.Model.CodingKeys()
{
  return &type metadata for GoalStateEvent.Model.CodingKeys;
}

unint64_t sub_236E20()
{
  unint64_t result = qword_3260B0;
  if (!qword_3260B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260B0);
  }
  return result;
}

unint64_t sub_236E78()
{
  unint64_t result = qword_3260B8;
  if (!qword_3260B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260B8);
  }
  return result;
}

unint64_t sub_236ED0()
{
  unint64_t result = qword_3260C0;
  if (!qword_3260C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260C0);
  }
  return result;
}

uint64_t sub_236F24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002AE0F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616F47736B6F6F62 && a2 == 0xEE0061746144736CLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float ReadingNowItemTypeData.completionRate.getter()
{
  return *(float *)(v0 + 36);
}

void ReadingNowItemTypeData.completionRate.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

uint64_t (*ReadingNowItemTypeData.completionRate.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

void __swiftcall ReadingNowItemTypeData.init(contentPrivateID:contentUserID:contentType:completionRate:contentID:)(BookAnalytics::ReadingNowItemTypeData *__return_ptr retstr, Swift::String contentPrivateID, Swift::String contentUserID, BookAnalytics::ContentType contentType, Swift::Float completionRate, Swift::String contentID)
{
  BookAnalytics::ContentType v6 = *(unsigned char *)contentType;
  retstr->contentPrivateID = contentPrivateID;
  retstr->contentUserID = contentUserID;
  retstr->BookAnalytics::ContentType contentType = v6;
  retstr->completionRate = completionRate;
  retstr->contentID = contentID;
}

unint64_t sub_2370F8()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x55746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x54746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x6974656C706D6F63;
      break;
    case 4:
      unint64_t result = 0x49746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2371CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_237DCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2371F4(uint64_t a1)
{
  unint64_t v2 = sub_23793C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_237230(uint64_t a1)
{
  unint64_t v2 = sub_23793C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingNowItemTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3260C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BookAnalytics::ContentType v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v7;
  int v13 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  v12[1] = *(void *)(v1 + 48);
  void v12[2] = v8;
  sub_5900(a1, a1[3]);
  sub_23793C();
  sub_27E440();
  char v22 = 0;
  uint64_t v9 = v16;
  sub_27E2F0();
  if (!v9)
  {
    char v10 = v13;
    char v21 = 1;
    sub_27E2F0();
    char v20 = v10;
    char v19 = 2;
    sub_101E4();
    sub_27E330();
    char v18 = 3;
    sub_27E320();
    char v17 = 4;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingNowItemTypeData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3260D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_23793C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v33 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v27 = v9;
  char v32 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v25 = v12;
  char v30 = 2;
  sub_10238();
  swift_bridgeObjectRetain();
  uint64_t v26 = v14;
  sub_27E260();
  int v24 = v31;
  char v29 = 3;
  sub_27E250();
  int v16 = v15;
  char v28 = 4;
  uint64_t v17 = sub_27E220();
  uint64_t v20 = v19;
  char v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v17;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v26;
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v22;
  *(unsigned char *)(a2 + 32) = v24;
  *(_DWORD *)(a2 + 36) = v16;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v20;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2377C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingNowItemTypeData.init(from:)(a1, a2);
}

uint64_t sub_2377DC(void *a1)
{
  return ReadingNowItemTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics22ReadingNowItemTypeDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  float v5 = *(float *)(a1 + 36);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  float v11 = *(float *)(a2 + 36);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v14 = sub_27E370(), uint64_t result = 0, (v14 & 1) != 0))
  {
    if (v2 == v8 && v3 == v9 || (v16 = sub_27E370(), uint64_t result = 0, (v16 & 1) != 0))
    {
      char v17 = sub_2DAE4(v4, v10);
      uint64_t result = 0;
      if ((v17 & 1) != 0 && v5 == v11)
      {
        if (v6 == v12 && v7 == v13)
        {
          return 1;
        }
        else
        {
          return sub_27E370();
        }
      }
    }
  }
  return result;
}

unint64_t sub_23793C()
{
  unint64_t result = qword_3260D0;
  if (!qword_3260D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260D0);
  }
  return result;
}

unint64_t sub_237994()
{
  unint64_t result = qword_3260E0;
  if (!qword_3260E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260E0);
  }
  return result;
}

unint64_t sub_2379EC()
{
  unint64_t result = qword_3260E8;
  if (!qword_3260E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260E8);
  }
  return result;
}

uint64_t initializeWithCopy for ReadingNowItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingNowItemTypeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReadingNowItemTypeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ReadingNowItemTypeData()
{
  return &type metadata for ReadingNowItemTypeData;
}

unsigned char *storeEnumTagSinglePayload for ReadingNowItemTypeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x237C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingNowItemTypeData.CodingKeys()
{
  return &type metadata for ReadingNowItemTypeData.CodingKeys;
}

unint64_t sub_237CC8()
{
  unint64_t result = qword_3260F0;
  if (!qword_3260F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260F0);
  }
  return result;
}

unint64_t sub_237D20()
{
  unint64_t result = qword_3260F8;
  if (!qword_3260F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3260F8);
  }
  return result;
}

unint64_t sub_237D78()
{
  unint64_t result = qword_326100;
  if (!qword_326100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326100);
  }
  return result;
}

uint64_t sub_237DCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002ADE40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E65746E6F63 && a2 == 0xED00004449726573 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974656C706D6F63 && a2 == 0xEE00657461526E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BookAnalytics::EditActionType_optional __swiftcall EditActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9AC8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t EditActionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6572616873;
      break;
    case 2:
      uint64_t result = 0x6C6F436F54646461;
      break;
    case 3:
      uint64_t result = 0x65766F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_238144(unsigned __int8 *a1, char *a2)
{
  return sub_312C0(*a1, *a2);
}

unint64_t sub_238154()
{
  unint64_t result = qword_326108;
  if (!qword_326108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326108);
  }
  return result;
}

Swift::Int sub_2381A8()
{
  return sub_27E420();
}

uint64_t sub_238288()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_238350()
{
  return sub_27E420();
}

BookAnalytics::EditActionType_optional sub_23842C(Swift::String *a1)
{
  return EditActionType.init(rawValue:)(*a1);
}

void sub_238438(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6572616873;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C6F436F54646461;
      a1[1] = 0xEF6E6F697463656CLL;
      break;
    case 3:
      *a1 = 0x65766F6D6572;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_2384D8()
{
  return sub_27DED0();
}

uint64_t sub_238538()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for EditActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x238654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditActionType()
{
  return &type metadata for EditActionType;
}

unint64_t sub_23868C()
{
  unint64_t result = qword_326110;
  if (!qword_326110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326110);
  }
  return result;
}

BookAnalytics::WelcomeActionType_optional __swiftcall WelcomeActionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9B48;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t WelcomeActionType.rawValue.getter()
{
  uint64_t v1 = 1885956979;
  if (*v0 != 1) {
    uint64_t v1 = 0x65756E69746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_238790(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_30570(*a1, *a2);
}

unint64_t sub_2387A0()
{
  unint64_t result = qword_326118;
  if (!qword_326118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326118);
  }
  return result;
}

Swift::Int sub_2387F4()
{
  return sub_27E420();
}

uint64_t sub_238890()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_238918()
{
  return sub_27E420();
}

BookAnalytics::WelcomeActionType_optional sub_2389B0(Swift::String *a1)
{
  return WelcomeActionType.init(rawValue:)(*a1);
}

void sub_2389BC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1885956979;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65756E69746E6F63;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_238A14()
{
  return sub_27DED0();
}

uint64_t sub_238A74()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for WelcomeActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x238B90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeActionType()
{
  return &type metadata for WelcomeActionType;
}

unint64_t sub_238BC8()
{
  unint64_t result = qword_326120;
  if (!qword_326120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326120);
  }
  return result;
}

uint64_t sub_238C20()
{
  return 0x72756F5377656976;
}

uint64_t sub_238C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x72756F5377656976 && a2 == 0xEA00000000006563)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_238CE0(uint64_t a1)
{
  unint64_t v2 = sub_239138();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_238D1C(uint64_t a1)
{
  unint64_t v2 = sub_239138();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ViewSourceData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326128);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_239138();
  sub_27E440();
  char v10 = v7;
  sub_23918C();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ViewSourceData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326140);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_239138();
  sub_27E430();
  if (!v2)
  {
    sub_2391E0();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_239008@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ViewSourceData.init(from:)(a1, a2);
}

uint64_t sub_239020(void *a1)
{
  return ViewSourceData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics14ViewSourceDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x654D6E6F69746361;
  unint64_t v4 = 0xEA0000000000756ELL;
  if (v2 != 1)
  {
    uint64_t v3 = 6516596;
    unint64_t v4 = 0xE300000000000000;
  }
  if (*a1) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  uint64_t v7 = 0x654D6E6F69746361;
  unint64_t v8 = 0xEA0000000000756ELL;
  if (*a2 != 1)
  {
    uint64_t v7 = 6516596;
    unint64_t v8 = 0xE300000000000000;
  }
  if (*a2) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_239138()
{
  unint64_t result = qword_326130;
  if (!qword_326130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326130);
  }
  return result;
}

unint64_t sub_23918C()
{
  unint64_t result = qword_326138;
  if (!qword_326138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326138);
  }
  return result;
}

unint64_t sub_2391E0()
{
  unint64_t result = qword_326148;
  if (!qword_326148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326148);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ViewSourceData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x239308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSourceData()
{
  return &type metadata for ViewSourceData;
}

unsigned char *storeEnumTagSinglePayload for ViewSourceData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2393DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSourceData.CodingKeys()
{
  return &type metadata for ViewSourceData.CodingKeys;
}

unint64_t sub_239418()
{
  unint64_t result = qword_326150;
  if (!qword_326150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326150);
  }
  return result;
}

unint64_t sub_239470()
{
  unint64_t result = qword_326158;
  if (!qword_326158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326158);
  }
  return result;
}

unint64_t sub_2394C8()
{
  unint64_t result = qword_326160;
  if (!qword_326160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326160);
  }
  return result;
}

BOOL static ReadingGoalsDurationData.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_239534()
{
  if (*v0) {
    return 0x7261655976657270;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_239580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_239C18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2395A8(uint64_t a1)
{
  unint64_t v2 = sub_23978C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2395E4(uint64_t a1)
{
  unint64_t v2 = sub_23978C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingGoalYearlyData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_326168);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_23978C();
  sub_27E440();
  char v11 = 0;
  sub_27E350();
  if (!v2)
  {
    char v10 = 1;
    sub_27E350();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23978C()
{
  unint64_t result = qword_326170;
  if (!qword_326170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326170);
  }
  return result;
}

uint64_t ReadingGoalYearlyData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326178);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_23978C();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_27E280();
    char v13 = 1;
    uint64_t v10 = sub_27E280();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_239984@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReadingGoalYearlyData.init(from:)(a1, a2);
}

uint64_t sub_23999C(void *a1)
{
  return ReadingGoalYearlyData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ReadingGoalsDurationData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReadingGoalsDurationData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalYearlyData()
{
  return &type metadata for ReadingGoalYearlyData;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoalYearlyData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x239AD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalYearlyData.CodingKeys()
{
  return &type metadata for ReadingGoalYearlyData.CodingKeys;
}

unint64_t sub_239B14()
{
  unint64_t result = qword_326180;
  if (!qword_326180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326180);
  }
  return result;
}

unint64_t sub_239B6C()
{
  unint64_t result = qword_326188;
  if (!qword_326188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326188);
  }
  return result;
}

unint64_t sub_239BC4()
{
  unint64_t result = qword_326190;
  if (!qword_326190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326190);
  }
  return result;
}

uint64_t sub_239C18(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1B20 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261655976657270 && a2 == 0xEE006C616F47796CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_239D2C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_326198, &enum case for SessionGroup.default(_:));
}

uint64_t static ResetPrivateIDsEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D08, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326198, a1);
}

uint64_t sub_239D8C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3261B0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ResetPrivateIDsEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D10, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3261B0, a1);
}

uint64_t sub_239DEC(uint64_t a1)
{
  unint64_t v2 = sub_239FC4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_239E28(uint64_t a1)
{
  unint64_t v2 = sub_239FC4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ResetPrivateIDsEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_3261C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_239FC4();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_239FC4()
{
  unint64_t result = qword_3261D0;
  if (!qword_3261D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3261D0);
  }
  return result;
}

uint64_t ResetPrivateIDsEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_3261D8);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ResetPrivateIDsEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_239FC4();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_23A2A4((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for ResetPrivateIDsEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3262C8);
}

uint64_t sub_23A2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResetPrivateIDsEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResetPrivateIDsEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_23A320@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D08, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326198, a1);
}

uint64_t sub_23A358@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D10, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3261B0, a1);
}

uint64_t getEnumTagSinglePayload for ResetPrivateIDsEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23A3A4);
}

uint64_t sub_23A3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResetPrivateIDsEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23A428);
}

uint64_t sub_23A428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ResetPrivateIDsEvent(uint64_t a1)
{
  return sub_5338(a1, qword_326238);
}

uint64_t getEnumTagSinglePayload for ResetPrivateIDsEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23A4D0);
}

uint64_t sub_23A4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResetPrivateIDsEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23A550);
}

uint64_t sub_23A550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for ResetPrivateIDsEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23A65CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetPrivateIDsEvent.Model.CodingKeys()
{
  return &type metadata for ResetPrivateIDsEvent.Model.CodingKeys;
}

unint64_t sub_23A698()
{
  unint64_t result = qword_326300;
  if (!qword_326300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326300);
  }
  return result;
}

unint64_t sub_23A6F0()
{
  unint64_t result = qword_326308;
  if (!qword_326308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326308);
  }
  return result;
}

unint64_t sub_23A748()
{
  unint64_t result = qword_326310;
  if (!qword_326310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326310);
  }
  return result;
}

uint64_t sub_23A79C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_326318, &enum case for SessionGroup.default(_:));
}

uint64_t static RemoveFromWantListEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D18, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326318, a1);
}

uint64_t sub_23A7FC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_326330, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RemoveFromWantListEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D20, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326330, a1);
}

uint64_t RemoveFromWantListEvent.wantListRemovalData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_326348);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t RemoveFromWantListEvent.wantListRemovalData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_326348);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t RemoveFromWantListEvent.wantListRemovalTypeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_326350);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveFromWantListEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3263C8);
}

uint64_t RemoveFromWantListEvent.wantListRemovalTypeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_326350);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveFromWantListEvent.wantListRemovalTypeData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveFromWantListEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveFromWantListEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_316320);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveFromWantListEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveFromWantListEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveFromWantListEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveFromWantListEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveFromWantListEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for RemoveFromWantListEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = enum case for EventProperty.optional<A>(_:);
  uint64_t v9 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t RemoveFromWantListEvent.Model.seriesData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_19A30(v2, v3, v4, v5, v6, v7);
}

uint64_t RemoveFromWantListEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromWantListEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveFromWantListEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_326470);
}

uint64_t RemoveFromWantListEvent.Model.init(wantListRemovalData:wantListRemovalTypeData:seriesData:eventData:)@<X0>(void *a1@<X0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v6 = *a2;
  *(void *)a5 = *a1;
  *(unsigned char *)(a5 + 8) = v6;
  long long v7 = a3[1];
  *(_OWORD *)(a5 + 16) = *a3;
  *(_OWORD *)(a5 + 32) = v7;
  *(_OWORD *)(a5 + 48) = a3[2];
  uint64_t v8 = a5 + *(int *)(type metadata accessor for RemoveFromWantListEvent.Model(0) + 28);
  uint64_t v9 = sub_27D7C0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v10(v8, a4, v9);
}

unint64_t sub_23AFDC()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x6144736569726573;
      break;
    case 3:
      unint64_t result = 0x746144746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23B078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23D2C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B0A0(uint64_t a1)
{
  unint64_t v2 = sub_23B35C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_23B0DC(uint64_t a1)
{
  unint64_t v2 = sub_23B35C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoveFromWantListEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_326358);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_23B35C();
  sub_27E440();
  *(void *)&v11[0] = *(void *)v3;
  char v12 = 0;
  sub_20D1F0();
  sub_27E330();
  if (!v2)
  {
    LOBYTE(v11[0]) = *(unsigned char *)(v3 + 8);
    char v12 = 1;
    sub_3F5E4();
    sub_27E330();
    long long v9 = *(_OWORD *)(v3 + 32);
    v11[0] = *(_OWORD *)(v3 + 16);
    v11[1] = v9;
    v11[2] = *(_OWORD *)(v3 + 48);
    char v12 = 2;
    sub_11514();
    sub_27E2C0();
    type metadata accessor for RemoveFromWantListEvent.Model(0);
    LOBYTE(v11[0]) = 3;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23B35C()
{
  unint64_t result = qword_326360;
  if (!qword_326360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326360);
  }
  return result;
}

uint64_t RemoveFromWantListEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_326368);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RemoveFromWantListEvent.Model(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v24 = a1;
  sub_5900(a1, v13);
  sub_23B35C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v24);
  }
  uint64_t v14 = v22;
  char v28 = 0;
  sub_20D198();
  sub_27E260();
  *(void *)char v12 = v25;
  char v28 = 1;
  sub_3F58C();
  sub_27E260();
  v12[8] = v25;
  char v28 = 2;
  sub_11A3C();
  sub_27E1F0();
  long long v15 = v26;
  *((_OWORD *)v12 + 1) = v25;
  *((_OWORD *)v12 + 2) = v15;
  *((_OWORD *)v12 + 3) = v27;
  LOBYTE(v25) = 3;
  sub_1AB30(&qword_315E28);
  uint64_t v16 = v6;
  uint64_t v17 = v23;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v17);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v12[*(int *)(v10 + 28)], v16, v4);
  sub_23B780((uint64_t)v12, v21);
  sub_5E94((uint64_t)v24);
  return sub_23B7E4((uint64_t)v12);
}

uint64_t sub_23B780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoveFromWantListEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B7E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoveFromWantListEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B840@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoveFromWantListEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_23B858(void *a1)
{
  return RemoveFromWantListEvent.Model.encode(to:)(a1);
}

uint64_t sub_23B870@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D18, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326318, a1);
}

uint64_t sub_23B8A8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D20, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326330, a1);
}

uint64_t sub_23B8E0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = enum case for EventProperty.optional<A>(_:);
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveFromWantListEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_326348);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_326350);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for RemoveFromWantListEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_326348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_326350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23C2D4);
}

uint64_t sub_23C2D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_326348);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_326350);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for RemoveFromWantListEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23C490);
}

uint64_t sub_23C490(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_326348);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_326350);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_23C644()
{
  sub_23C82C(319, &qword_3263D8, (void (*)(void))sub_20D198, (void (*)(void))sub_20D1F0);
  if (v0 <= 0x3F)
  {
    sub_23C82C(319, (unint64_t *)&unk_3263E0, (void (*)(void))sub_3F58C, (void (*)(void))sub_3F5E4);
    if (v1 <= 0x3F)
    {
      sub_23C82C(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
      if (v2 <= 0x3F)
      {
        sub_6DA0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23C82C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2[7];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    }
    else
    {
      *(void *)(a1 + 16) = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 32) = a2[4];
      *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
      *(_WORD *)(a1 + 41) = *(_WORD *)((char *)a2 + 41);
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v8;
      swift_bridgeObjectRetain();
    }
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_27D7C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_27D7C0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = (long long *)(a1 + 16);
  long long v7 = (long long *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *v7;
      long long v10 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v10;
      *uint64_t v6 = v9;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
      *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1CDD8(a1 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 48);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
    *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (*(void *)(a1 + 56) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    if (v6 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CDD8(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_6:
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23CE9C);
}

uint64_t sub_23CE9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveFromWantListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23CF60);
}

void *sub_23CF60(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23D008()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoveFromWantListEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23D184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveFromWantListEvent.Model.CodingKeys()
{
  return &type metadata for RemoveFromWantListEvent.Model.CodingKeys;
}

unint64_t sub_23D1C0()
{
  unint64_t result = qword_3264B0;
  if (!qword_3264B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3264B0);
  }
  return result;
}

unint64_t sub_23D218()
{
  unint64_t result = qword_3264B8;
  if (!qword_3264B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3264B8);
  }
  return result;
}

unint64_t sub_23D270()
{
  unint64_t result = qword_3264C0;
  if (!qword_3264C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3264C0);
  }
  return result;
}

uint64_t sub_23D2C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000000002B1B40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002B1B60 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_23D490(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3264C8, &enum case for SessionGroup.default(_:));
}

uint64_t static RemoveFromCollectionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3264C8, a1);
}

uint64_t sub_23D4F0(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3264E0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static RemoveFromCollectionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3264E0, a1);
}

uint64_t RemoveFromCollectionEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromCollectionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveFromCollectionEvent(uint64_t a1)
{
  return sub_5338(a1, qword_326568);
}

uint64_t RemoveFromCollectionEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromCollectionEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveFromCollectionEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveFromCollectionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromCollectionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveFromCollectionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromCollectionEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoveFromCollectionEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t RemoveFromCollectionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for RemoveFromCollectionEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t RemoveFromCollectionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveFromCollectionEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemoveFromCollectionEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_326600);
}

uint64_t RemoveFromCollectionEvent.Model.init(collectionData:contentData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  long long v9 = *(_OWORD *)(a2 + 3);
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  __int16 v12 = *((_WORD *)a2 + 28);
  int v13 = *((_DWORD *)a2 + 15);
  char v14 = *((unsigned char *)a2 + 64);
  int v15 = *((_DWORD *)a2 + 17);
  char v16 = *((unsigned char *)a2 + 72);
  char v17 = *((unsigned char *)a2 + 77);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(a4 + 32) = v6;
  *(void *)(a4 + 40) = v7;
  *(unsigned char *)(a4 + 48) = v8;
  *(_OWORD *)(a4 + 56) = v9;
  *(void *)(a4 + 72) = v10;
  *(void *)(a4 + 80) = v11;
  *(_WORD *)(a4 + 88) = v12;
  *(_DWORD *)(a4 + 92) = v13;
  *(unsigned char *)(a4 + 96) = v14;
  *(_DWORD *)(a4 + 100) = v15;
  *(unsigned char *)(a4 + 104) = v16;
  *(_DWORD *)(a4 + 105) = *(_DWORD *)((char *)a2 + 73);
  *(unsigned char *)(a4 + 109) = v17;
  *(_OWORD *)(a4 + 112) = *((_OWORD *)a2 + 5);
  uint64_t v18 = a4 + *(int *)(type metadata accessor for RemoveFromCollectionEvent.Model(0) + 24);
  uint64_t v19 = sub_27D7C0();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);

  return v20(v18, a3, v19);
}

uint64_t sub_23DA90()
{
  uint64_t v1 = 0x44746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_23DB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23FB30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23DB2C(uint64_t a1)
{
  unint64_t v2 = sub_23DE00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_23DB68(uint64_t a1)
{
  unint64_t v2 = sub_23DE00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RemoveFromCollectionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3264F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_23DE00();
  sub_27E440();
  uint64_t v9 = v3[1];
  uint64_t v23 = *v3;
  uint64_t v24 = v9;
  *(_OWORD *)long long v25 = *((_OWORD *)v3 + 1);
  char v36 = 0;
  sub_3C2A4();
  sub_27E330();
  if (!v2)
  {
    uint64_t v10 = v3[5];
    char v11 = *((unsigned char *)v3 + 48);
    long long v12 = *(_OWORD *)(v3 + 7);
    uint64_t v13 = v3[9];
    uint64_t v14 = v3[10];
    __int16 v15 = *((_WORD *)v3 + 44);
    int v16 = *((_DWORD *)v3 + 23);
    char v17 = *((unsigned char *)v3 + 96);
    int v18 = *((_DWORD *)v3 + 25);
    char v19 = *((unsigned char *)v3 + 104);
    uint64_t v20 = *((unsigned __int8 *)v3 + 109);
    uint64_t v23 = v3[4];
    uint64_t v24 = v10;
    v25[0] = v11;
    *(_OWORD *)&v25[8] = v12;
    uint64_t v26 = v13;
    uint64_t v27 = v14;
    __int16 v28 = v15;
    int v29 = v16;
    char v30 = v17;
    int v31 = v18;
    char v32 = v19;
    int v33 = *(_DWORD *)((char *)v3 + 105);
    char v34 = v20;
    long long v35 = *((_OWORD *)v3 + 7);
    char v36 = 1;
    sub_1A1D4();
    sub_27E330();
    type metadata accessor for RemoveFromCollectionEvent.Model(0);
    LOBYTE(v23) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23DE00()
{
  unint64_t result = qword_326500;
  if (!qword_326500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326500);
  }
  return result;
}

uint64_t RemoveFromCollectionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_326508);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RemoveFromCollectionEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v34 = a1;
  sub_5900(a1, v13);
  sub_23DE00();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = v32;
  int v29 = v6;
  char v48 = 0;
  sub_3C618();
  uint64_t v15 = v33;
  sub_27E260();
  uint64_t v16 = v36;
  *(void *)long long v12 = v35;
  *((void *)v12 + 1) = v16;
  *((_OWORD *)v12 + 1) = *(_OWORD *)v37;
  char v48 = 1;
  sub_1A98C();
  sub_27E260();
  uint64_t v17 = v36;
  char v18 = v37[0];
  long long v19 = *(_OWORD *)&v37[8];
  uint64_t v20 = v38;
  uint64_t v21 = v39;
  __int16 v22 = v40;
  int v23 = v41;
  char v24 = v42;
  int v25 = v43;
  char v26 = v44;
  char v27 = v46;
  *((void *)v12 + 4) = v35;
  *((void *)v12 + 5) = v17;
  v12[48] = v18;
  *(_OWORD *)(v12 + 56) = v19;
  *((void *)v12 + 9) = v20;
  *((void *)v12 + 10) = v21;
  *((_WORD *)v12 + 44) = v22;
  *((_DWORD *)v12 + 23) = v23;
  v12[96] = v24;
  *((_DWORD *)v12 + 25) = v25;
  v12[104] = v26;
  *(_DWORD *)(v12 + 105) = v45;
  v12[109] = v27;
  *((_OWORD *)v12 + 7) = v47;
  LOBYTE(v35) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v10 + 24)], v29, v4);
  sub_23E260((uint64_t)v12, v31);
  sub_5E94((uint64_t)v34);
  return sub_23E2C4((uint64_t)v12);
}

uint64_t sub_23E260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoveFromCollectionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoveFromCollectionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E320@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoveFromCollectionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_23E338(void *a1)
{
  return RemoveFromCollectionEvent.Model.encode(to:)(a1);
}

uint64_t sub_23E350@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3264C8, a1);
}

uint64_t sub_23E388@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3264E0, a1);
}

uint64_t sub_23E3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveFromCollectionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3171C8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23EB98);
}

uint64_t sub_23EB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3171C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for RemoveFromCollectionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23ED04);
}

uint64_t sub_23ED04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3171C8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_23EE68()
{
  sub_23EFDC(319, (unint64_t *)&qword_317260, (void (*)(void))sub_3C618, (void (*)(void))sub_3C2A4);
  if (v0 <= 0x3F)
  {
    sub_23EFDC(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_23EFDC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    *(_WORD *)(a1 + 88) = *((_WORD *)a2 + 44);
    *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(_DWORD *)(a1 + 105) = *(_DWORD *)((char *)a2 + 105);
    *(unsigned char *)(a1 + 109) = *((unsigned char *)a2 + 109);
    uint64_t v10 = a2[15];
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v16 = a1 + v11;
    uint64_t v17 = (uint64_t)a2 + v11;
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    uint64_t v12 = sub_27D7C0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v16, v17, v12);
  }
  return v3;
}

uint64_t destroy for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  uint64_t v9 = *(void *)(a2 + 120);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v10;
  uint64_t v15 = a2 + v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v11 = sub_27D7C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v15, v11);
  return a1;
}

uint64_t assignWithCopy for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  int v6 = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v6;
  int v7 = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v7;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for RemoveFromCollectionEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  long long v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  long long v7 = a2[3];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23F718);
}

uint64_t sub_23F718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveFromCollectionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23F7DC);
}

uint64_t sub_23F7DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23F884()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoveFromCollectionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23F9F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveFromCollectionEvent.Model.CodingKeys()
{
  return &type metadata for RemoveFromCollectionEvent.Model.CodingKeys;
}

unint64_t sub_23FA2C()
{
  unint64_t result = qword_326640;
  if (!qword_326640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326640);
  }
  return result;
}

unint64_t sub_23FA84()
{
  unint64_t result = qword_326648;
  if (!qword_326648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326648);
  }
  return result;
}

unint64_t sub_23FADC()
{
  unint64_t result = qword_326650;
  if (!qword_326650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326650);
  }
  return result;
}

uint64_t sub_23FB30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00617461446E6FLL;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BookAnalytics::ListeningRoutedTo_optional __swiftcall ListeningRoutedTo.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9BB0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ListeningRoutedTo.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656369766564;
      break;
    case 2:
      uint64_t result = 0x79616C50726163;
      break;
    case 3:
      uint64_t result = 0x6F69647541726163;
      break;
    case 4:
      uint64_t result = 0x6E6F687064616568;
      break;
    case 5:
      uint64_t result = 0x73646F50726961;
      break;
    case 6:
      uint64_t result = 0x646F50656D6F68;
      break;
    case 7:
      uint64_t result = 0x5654656C707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23FE1C(unsigned __int8 *a1, char *a2)
{
  return sub_2EDA0(*a1, *a2);
}

unint64_t sub_23FE2C()
{
  unint64_t result = qword_326658;
  if (!qword_326658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326658);
  }
  return result;
}

Swift::Int sub_23FE80()
{
  return sub_25CEE8();
}

uint64_t sub_23FE8C()
{
  return sub_27BC60();
}

Swift::Int sub_23FE94()
{
  return sub_25CEE8();
}

BookAnalytics::ListeningRoutedTo_optional sub_23FE9C(Swift::String *a1)
{
  return ListeningRoutedTo.init(rawValue:)(*a1);
}

void sub_23FEA8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x656369766564;
      goto LABEL_3;
    case 2:
      *a1 = 0x79616C50726163;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6F69647541726163;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x6E6F687064616568;
      a1[1] = 0xEA00000000007365;
      break;
    case 5:
      *a1 = 0x73646F50726961;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 0x646F50656D6F68;
      a1[1] = 0xE700000000000000;
      break;
    case 7:
      *a1 = 0x5654656C707061;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_23FFB4()
{
  return sub_27DED0();
}

uint64_t sub_240014()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ListeningRoutedTo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningRoutedTo()
{
  return &type metadata for ListeningRoutedTo;
}

unint64_t sub_240168()
{
  unint64_t result = qword_326660;
  if (!qword_326660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326660);
  }
  return result;
}

uint64_t sub_2401C0()
{
  uint64_t v1 = 0x65726E6547627573;
  if (*v0 != 1) {
    uint64_t v1 = 0x54746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x644965726E6567;
  }
}

uint64_t sub_240228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240250(uint64_t a1)
{
  unint64_t v2 = sub_24084C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24028C(uint64_t a1)
{
  unint64_t v2 = sub_24084C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GenreData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326668);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  _OWORD v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  sub_5900(a1, a1[3]);
  sub_24084C();
  sub_27E440();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_27E2F0();
  if (!v9)
  {
    char v13 = 1;
    sub_27E290();
    char v12 = 2;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GenreData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326678);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24084C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v26 = 0;
    uint64_t v9 = sub_27E220();
    uint64_t v12 = v11;
    uint64_t v23 = v9;
    char v25 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    char v24 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v12;
    a2[2] = v22;
    a2[3] = v15;
    a2[4] = v21;
    a2[5] = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240718@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GenreData.init(from:)(a1, a2);
}

uint64_t sub_240730(void *a1)
{
  return GenreData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics9GenreDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_27E370(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6) {
        return 0;
      }
      if (v2 != v7 || v4 != v6)
      {
        char v12 = sub_27E370();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_27E370() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_24084C()
{
  unint64_t result = qword_326670;
  if (!qword_326670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326670);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreData()
{
  return &type metadata for GenreData;
}

unsigned char *storeEnumTagSinglePayload for GenreData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreData.CodingKeys()
{
  return &type metadata for GenreData.CodingKeys;
}

unint64_t sub_2409C0()
{
  unint64_t result = qword_326680;
  if (!qword_326680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326680);
  }
  return result;
}

unint64_t sub_240A18()
{
  unint64_t result = qword_326688;
  if (!qword_326688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326688);
  }
  return result;
}

unint64_t sub_240A70()
{
  unint64_t result = qword_326690;
  if (!qword_326690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326690);
  }
  return result;
}

uint64_t sub_240AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644965726E6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726E6547627573 && a2 == 0xEA00000000006449 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static AmpTreatmentData.== infix(_:_:)(void **a1, void **a2)
{
  return sub_80FC4(*a1, *a2);
}

uint64_t sub_240C4C()
{
  return 0x6E656D7461657274;
}

uint64_t sub_240C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240D1C(uint64_t a1)
{
  unint64_t v2 = sub_240F0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_240D58(uint64_t a1)
{
  unint64_t v2 = sub_240F0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AmpTreatmentData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326698);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_240F0C();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_319620);
  sub_97C90(&qword_319628);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_240F0C()
{
  unint64_t result = qword_3266A0;
  if (!qword_3266A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266A0);
  }
  return result;
}

uint64_t AmpTreatmentData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3266A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_240F0C();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319650);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_241100@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AmpTreatmentData.init(from:)(a1, a2);
}

uint64_t sub_241118(void *a1)
{
  return AmpTreatmentData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AmpTreatmentData()
{
  return &type metadata for AmpTreatmentData;
}

unsigned char *storeEnumTagSinglePayload for AmpTreatmentData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2411DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AmpTreatmentData.CodingKeys()
{
  return &type metadata for AmpTreatmentData.CodingKeys;
}

unint64_t sub_241218()
{
  unint64_t result = qword_3266B0;
  if (!qword_3266B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266B0);
  }
  return result;
}

unint64_t sub_241270()
{
  unint64_t result = qword_3266B8;
  if (!qword_3266B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266B8);
  }
  return result;
}

unint64_t sub_2412C8()
{
  unint64_t result = qword_3266C0;
  if (!qword_3266C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266C0);
  }
  return result;
}

id EventReporter.emitViewSupplementalContent(using:for:sourceIsAction:with:)(void *a1, uint64_t a2, uint64_t a3, char a4, id a5)
{
  if (a4) {
    char v10 = 1;
  }
  else {
    char v10 = 2;
  }
  if (a5)
  {
    unsigned int v11 = [a5 intValue];
    char v12 = a1;
    if (!a1)
    {
LABEL_8:
      id result = sub_103814();
      char v12 = result;
      if (!result) {
        return result;
      }
    }
  }
  else
  {
    unsigned int v11 = 0;
    char v12 = a1;
    if (!a1) {
      goto LABEL_8;
    }
  }
  BOOL v14 = a5 == 0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v5;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = v12;
  *(_DWORD *)(v15 + 48) = v11;
  *(unsigned char *)(v15 + 52) = v14;
  *(unsigned char *)(v15 + 53) = v10;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_242720;
  *(void *)(v16 + 24) = v15;
  id v17 = a1;
  id v18 = v5;
  swift_bridgeObjectRetain();
  id v19 = v12;
  swift_retain();
  sub_27D730();

  swift_release();

  return (id)swift_release();
}

id EventReporter.emitViewSupplementalContent(using:for:from:with:)(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  char v10 = *a4;
  unsigned int v11 = a1;
  if (a1 || (id result = sub_103814(), (v11 = result) != 0))
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v5;
    *(void *)(v13 + 24) = a2;
    *(void *)(v13 + 32) = a3;
    *(void *)(v13 + 40) = v11;
    *(_DWORD *)(v13 + 48) = a5;
    *(unsigned char *)(v13 + 52) = BYTE4(a5) & 1;
    *(unsigned char *)(v13 + 53) = v10;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_242720;
    *(void *)(v14 + 24) = v13;
    id v15 = a1;
    id v16 = v5;
    swift_bridgeObjectRetain();
    id v17 = v11;
    swift_retain();
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_24167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  unsigned __int8 v39 = 2;
  unsigned __int8 v38 = 1;
  sub_AA874(a3, a4, &v37);
  unsigned __int8 v36 = 0;
  sub_102DC0(a3, a4, &v39, &v38, a5, a6 | ((HIDWORD(a6) & 1) << 32), &v37, &v36, (uint64_t)&v40);
  uint64_t v12 = *((void *)&v40 + 1);
  uint64_t v32 = v40;
  char v31 = v41;
  uint64_t v13 = v42;
  uint64_t v14 = v44;
  uint64_t v29 = v43;
  uint64_t v30 = *((void *)&v41 + 1);
  int v27 = v46;
  __int16 v28 = v45;
  int v25 = v48;
  char v26 = v47;
  char v24 = v49;
  char v35 = v51;
  uint64_t v33 = v53;
  uint64_t v34 = v52;
  uint64_t v15 = sub_27D380();
  int v23 = v50;
  LOBYTE(v40) = a7;
  sub_4E04(&qword_319FE0);
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  uint64_t v19 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 104);
  v20(v18 + v17, enum case for DataEventTrait.onlyOnce(_:), v15);
  sub_24291C();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  *(void *)&long long v40 = v32;
  *((void *)&v40 + 1) = v12;
  LOBYTE(v41) = v31;
  *((void *)&v41 + 1) = v30;
  uint64_t v42 = v13;
  uint64_t v43 = v29;
  uint64_t v44 = v14;
  __int16 v45 = v28;
  int v46 = v27;
  char v47 = v26;
  int v48 = v25;
  char v49 = v24;
  int v50 = v23;
  char v51 = v35;
  uint64_t v52 = v34;
  uint64_t v53 = v33;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_285930;
  v20(v21 + v17, v19, v15);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ViewSupplementalContentEvent(0);
  sub_242970(&qword_3266F0, (void (*)(uint64_t))type metadata accessor for ViewSupplementalContentEvent);
  long long v40 = 0u;
  long long v41 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v40);
}

id EventReporter.emitCloseSupplementalContentPDFPicker(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = a1;
  if (a1 || (id result = sub_103814(), (v9 = result) != 0))
  {
    unsigned int v11 = (void *)swift_allocObject();
    v11[2] = v4;
    _OWORD v11[3] = a2;
    v11[4] = a3;
    v11[5] = v9;
    void v11[6] = a4;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_2427A0;
    *(void *)(v12 + 24) = v11;
    id v13 = a4;
    swift_retain();
    id v14 = a1;
    id v15 = v4;
    swift_bridgeObjectRetain();
    id v16 = v9;
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_241B18(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, id a6)
{
  v50[0] = 3;
  unsigned __int8 v49 = 1;
  if (a6) {
    uint64_t v10 = [a6 intValue];
  }
  else {
    uint64_t v10 = 0;
  }
  unsigned __int8 v48 = 4;
  unsigned __int8 v47 = 0;
  LOBYTE(v37) = a6 == 0;
  sub_102DC0(a3, a4, v50, &v49, a5, v10 | ((unint64_t)(a6 == 0) << 32), &v48, &v47, (uint64_t)&v37);
  long long v11 = v37;
  char v33 = v38;
  uint64_t v31 = v40;
  uint64_t v32 = *((void *)&v38 + 1);
  unint64_t v22 = v39;
  unint64_t v23 = v41;
  int v29 = DWORD1(v42);
  __int16 v30 = v42;
  int v27 = HIDWORD(v42);
  char v28 = BYTE8(v42);
  char v26 = v43;
  char v35 = BYTE5(v43);
  uint64_t v34 = *((void *)&v43 + 1);
  uint64_t v24 = v44;
  uint64_t v12 = sub_27D380();
  int v25 = *(_DWORD *)((char *)&v43 + 1);
  LOBYTE(v37) = 0;
  DWORD1(v37) = 0;
  *((void *)&v37 + 1) = 0;
  long long v38 = 0xE000000000000000;
  unint64_t v39 = 0xE000000000000000;
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  long long v42 = 0u;
  long long v43 = 0u;
  LODWORD(v44) = 0;
  BYTE4(v44) = 1;
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_4E04(&qword_319FE0);
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = (v13 + 32) & ~v13;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_285930;
  uint64_t v17 = enum case for DataEventTrait.onlyOnce(_:);
  unsigned __int8 v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104);
  v36(v16 + v15, enum case for DataEventTrait.onlyOnce(_:), v12);
  sub_E5D40();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v37 = xmmword_2A7860;
  *(void *)&long long v38 = 0x6450664F7473696CLL;
  *((void *)&v38 + 1) = 0xE900000000000066;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  v36(v18 + v15, v17, v12);
  sub_242874();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v37 = 0uLL;
  LOBYTE(v38) = 2;
  *((void *)&v38 + 1) = 0x73694C65736F6C63;
  unint64_t v39 = 0xEE00666450664F74;
  unint64_t v41 = 0;
  *(void *)&long long v42 = 0;
  uint64_t v40 = 0;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_285930;
  v36(v19 + v15, v17, v12);
  sub_2428C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v37 = v11;
  LOBYTE(v38) = v33;
  *((void *)&v38 + 1) = v32;
  unint64_t v39 = v22;
  uint64_t v40 = v31;
  unint64_t v41 = v23;
  LOWORD(v42) = v30;
  DWORD1(v42) = v29;
  BYTE8(v42) = v28;
  HIDWORD(v42) = v27;
  LOBYTE(v43) = v26;
  *(_DWORD *)((char *)&v43 + 1) = v25;
  BYTE5(v43) = v35;
  *((void *)&v43 + 1) = v34;
  uint64_t v44 = v24;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_285930;
  v36(v20 + v15, v17, v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ClickEvent(0);
  sub_242970((unint64_t *)&qword_3266E0, (void (*)(uint64_t))type metadata accessor for ClickEvent);
  long long v37 = 0u;
  long long v38 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v37);
}

id EventReporter.emitPageViewEventForSupplementalContentPDF(using:for:with:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = a1;
  if (a1 || (id result = sub_103814(), (v9 = result) != 0))
  {
    long long v11 = (void *)swift_allocObject();
    v11[2] = v4;
    _OWORD v11[3] = a2;
    v11[4] = a3;
    v11[5] = v9;
    void v11[6] = a4;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_242844;
    *(void *)(v12 + 24) = v11;
    id v13 = a4;
    swift_retain();
    id v14 = a1;
    id v15 = v4;
    swift_bridgeObjectRetain();
    id v16 = v9;
    sub_27D730();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_2421D0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, id a6)
{
  v49[0] = 3;
  unsigned __int8 v48 = 1;
  if (a6) {
    uint64_t v10 = [a6 intValue];
  }
  else {
    uint64_t v10 = 0;
  }
  unsigned __int8 v47 = 4;
  unsigned __int8 v46 = 0;
  LOBYTE(v36) = a6 == 0;
  sub_102DC0(a3, a4, v49, &v48, a5, v10 | ((unint64_t)(a6 == 0) << 32), &v47, &v46, (uint64_t)&v36);
  uint64_t v33 = v36;
  char v32 = v37;
  long long v11 = v38;
  uint64_t v31 = *((void *)&v37 + 1);
  uint64_t v22 = v39;
  uint64_t v23 = *((void *)&v36 + 1);
  int v29 = DWORD1(v40);
  __int16 v30 = v40;
  int v27 = HIDWORD(v40);
  char v28 = BYTE8(v40);
  char v26 = v41;
  char v35 = BYTE5(v41);
  uint64_t v34 = *((void *)&v41 + 1);
  uint64_t v24 = v42;
  uint64_t v12 = sub_27D380();
  int v25 = *(_DWORD *)((char *)&v41 + 1);
  *(void *)&long long v36 = 0;
  *((void *)&v36 + 1) = 0xE000000000000000;
  long long v37 = 0u;
  long long v38 = 0u;
  LOBYTE(v39) = 2;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  sub_4E04(&qword_319FE0);
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_285930;
  uint64_t v16 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 104);
  unsigned int v21 = enum case for DataEventTrait.onlyOnce(_:);
  v17(v15 + v14, enum case for DataEventTrait.onlyOnce(_:), v12);
  sub_CE394();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  long long v36 = xmmword_2A7860;
  *(void *)&long long v37 = 0x6450664F7473696CLL;
  *((void *)&v37 + 1) = 0xE900000000000066;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_285930;
  v17(v18 + v14, v16, v12);
  sub_242874();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v33;
  *((void *)&v36 + 1) = v23;
  LOBYTE(v37) = v32;
  *((void *)&v37 + 1) = v31;
  long long v38 = v11;
  uint64_t v39 = v22;
  LOWORD(v40) = v30;
  DWORD1(v40) = v29;
  BYTE8(v40) = v28;
  HIDWORD(v40) = v27;
  LOBYTE(v41) = v26;
  *(_DWORD *)((char *)&v41 + 1) = v25;
  BYTE5(v41) = v35;
  *((void *)&v41 + 1) = v34;
  *(void *)&long long v42 = v24;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_285930;
  v17(v19 + v14, v21, v12);
  sub_698C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PageViewEvent(0);
  sub_242970(&qword_3266D0, (void (*)(uint64_t))type metadata accessor for PageViewEvent);
  long long v36 = 0u;
  long long v37 = 0u;
  sub_27D2F0();
  return sub_6991C((uint64_t)&v36);
}

uint64_t sub_242674(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(void *, uint64_t, uint64_t, void *))
{
  uint64_t v10 = sub_27DDB0();
  uint64_t v12 = v11;
  id v13 = a3;
  id v14 = a5;
  id v15 = a1;
  a6(a3, v10, v12, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_242728()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 54, 7);
}

uint64_t sub_242770(uint64_t a1)
{
  return sub_24167C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned int *)(v1 + 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 52) << 32), *(unsigned char *)(v1 + 53));
}

uint64_t sub_2427A0(uint64_t a1)
{
  return sub_24285C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_241B18);
}

uint64_t sub_2427B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2427F4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_242844(uint64_t a1)
{
  return sub_24285C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_2421D0);
}

uint64_t sub_24285C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_242874()
{
  unint64_t result = qword_3266C8;
  if (!qword_3266C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266C8);
  }
  return result;
}

unint64_t sub_2428C8()
{
  unint64_t result = qword_3266D8;
  if (!qword_3266D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266D8);
  }
  return result;
}

unint64_t sub_24291C()
{
  unint64_t result = qword_3266E8;
  if (!qword_3266E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266E8);
  }
  return result;
}

uint64_t sub_242970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2429C4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3266F8, &enum case for SessionGroup.default(_:));
}

uint64_t static LoveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D38, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3266F8, a1);
}

uint64_t sub_242A24(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_326710, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static LoveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D40, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326710, a1);
}

uint64_t LoveEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoveEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LoveEvent(uint64_t a1)
{
  return sub_5338(a1, qword_326798);
}

uint64_t LoveEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoveEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LoveEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LoveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoveEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LoveEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoveEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LoveEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t LoveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for LoveEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t LoveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoveEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LoveEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_326830);
}

uint64_t LoveEvent.Model.init(contentData:suggestionData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  char v16 = *a2;
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(unsigned char *)(a4 + 96) = v16;
  uint64_t v17 = a4 + *(int *)(type metadata accessor for LoveEvent.Model(0) + 24);
  uint64_t v18 = sub_27D7C0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);

  return v19(v17, a3, v18);
}

uint64_t sub_242FD0()
{
  uint64_t v1 = 0x6974736567677573;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44746E65746E6F63;
  }
}

uint64_t sub_243044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24306C(uint64_t a1)
{
  unint64_t v2 = sub_243338();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2430A8(uint64_t a1)
{
  unint64_t v2 = sub_243338();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LoveEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_326728);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_243338();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v24 = *v4;
  uint64_t v25 = v10;
  char v26 = v11;
  long long v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  __int16 v30 = v15;
  int v31 = v16;
  char v32 = v17;
  int v33 = v18;
  char v34 = v19;
  int v35 = *(_DWORD *)((char *)v4 + 73);
  char v36 = v20;
  long long v37 = *((_OWORD *)v4 + 5);
  char v23 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    LOBYTE(v24) = *((unsigned char *)v4 + 96);
    char v23 = 1;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for LoveEvent.Model(0);
    LOBYTE(v24) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_243338()
{
  unint64_t result = qword_326730;
  if (!qword_326730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326730);
  }
  return result;
}

uint64_t LoveEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_326738);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LoveEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v34 = a1;
  sub_5900(a1, v13);
  sub_243338();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = v32;
  __int16 v15 = v6;
  char v49 = 0;
  sub_1A98C();
  uint64_t v16 = v33;
  sub_27E260();
  uint64_t v17 = v36;
  char v18 = v37;
  long long v19 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  __int16 v22 = v41;
  int v23 = v42;
  char v24 = v43;
  int v25 = v44;
  char v26 = v45;
  char v27 = v47;
  *(void *)long long v12 = v35;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v46;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v48;
  char v49 = 1;
  sub_377EC();
  sub_27E1F0();
  v12[96] = v35;
  LOBYTE(v35) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_243770((uint64_t)v12, v31);
  sub_5E94((uint64_t)v34);
  return sub_2437D4((uint64_t)v12);
}

uint64_t sub_243770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LoveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2437D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LoveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_243830@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LoveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_243848(void *a1)
{
  return LoveEvent.Model.encode(to:)(a1);
}

uint64_t sub_243860@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D38, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3266F8, a1);
}

uint64_t sub_243898@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D40, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326710, a1);
}

uint64_t sub_2438D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + *(int *)(a1 + 24);
  uint64_t v10 = sub_4E04(&qword_315DE0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v4, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for LoveEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_316770);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316F88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for LoveEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2440BC);
}

uint64_t sub_2440BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316F88);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for LoveEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_244228);
}

uint64_t sub_244228(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316F88);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_24438C()
{
  sub_244500(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
  if (v0 <= 0x3F)
  {
    sub_244500(319, (unint64_t *)&unk_317070, (void (*)(void))sub_377EC, (void (*)(void))sub_36B1C);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_244500(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for LoveEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    int v8 = *((_DWORD *)a2 + 15);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_DWORD *)(a1 + 60) = v8;
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 73) = *(_DWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 77) = *((unsigned char *)a2 + 77);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = a1 + v10;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v13 = sub_27D7C0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t initializeWithCopy for LoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  int v7 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v7;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = sub_27D7C0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for LoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  int v6 = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v6;
  int v7 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for LoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 73) = *(_DWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_244A78);
}

uint64_t sub_244A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LoveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_244B3C);
}

uint64_t sub_244B3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_244BE4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LoveEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244D50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoveEvent.Model.CodingKeys()
{
  return &type metadata for LoveEvent.Model.CodingKeys;
}

unint64_t sub_244D8C()
{
  unint64_t result = qword_326870;
  if (!qword_326870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326870);
  }
  return result;
}

unint64_t sub_244DE4()
{
  unint64_t result = qword_326878;
  if (!qword_326878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326878);
  }
  return result;
}

unint64_t sub_244E3C()
{
  unint64_t result = qword_326880;
  if (!qword_326880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326880);
  }
  return result;
}

uint64_t sub_244E90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00617461446E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_245030(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_326888, &enum case for SessionGroup.default(_:));
}

uint64_t static TabViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D48, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326888, a1);
}

uint64_t sub_245090(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_3268A0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static TabViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D50, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3268A0, a1);
}

uint64_t TabViewEvent.tabData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_3268B8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TabViewEvent.tabData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_3268B8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t TabViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TabViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_326930);
}

uint64_t TabViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TabViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t TabViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TabViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TabViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t TabViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for TabViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t TabViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TabViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3269D0);
}

uint64_t TabViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TabViewEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TabViewEvent.Model.init(tabData:eventData:timedData:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for TabViewEvent.Model(0);
  uint64_t v8 = &a4[*(int *)(v7 + 20)];
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  uint64_t v10 = &a4[*(int *)(v7 + 24)];
  uint64_t v11 = sub_27D7F0();
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_245774()
{
  uint64_t v1 = 0x746144746E657665;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x61746144626174;
  }
}

uint64_t sub_2457D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2476B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245800(uint64_t a1)
{
  unint64_t v2 = sub_245AC4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24583C(uint64_t a1)
{
  unint64_t v2 = sub_245AC4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_3268C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_245AC4();
  sub_27E440();
  v10[15] = *v3;
  v10[14] = 0;
  sub_227F18();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for TabViewEvent.Model(0);
    v10[13] = 1;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v10[12] = 2;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_245AC4()
{
  unint64_t result = qword_3268C8;
  if (!qword_3268C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3268C8);
  }
  return result;
}

uint64_t TabViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_27D7F0();
  uint64_t v21 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  int v23 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_4E04(&qword_3268D0);
  uint64_t v24 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TabViewEvent.Model(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_245AC4();
  char v27 = v8;
  uint64_t v12 = (uint64_t)v29;
  sub_27E430();
  if (v12) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v13 = v11;
  uint64_t v29 = a1;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  uint64_t v16 = v26;
  char v32 = 0;
  sub_227EC0();
  sub_27E260();
  uint64_t v20 = v13;
  *uint64_t v13 = v33;
  char v31 = 1;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  sub_27E260();
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 32))(&v20[*(int *)(v9 + 20)], v6, v4);
  char v30 = 2;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v17 = v23;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v28);
  uint64_t v18 = (uint64_t)v20;
  (*(void (**)(unsigned char *, char *, uint64_t))(v21 + 32))(&v20[*(int *)(v9 + 24)], v17, v16);
  sub_245F7C(v18, v22);
  sub_5E94((uint64_t)v29);
  return sub_245FE0(v18);
}

uint64_t sub_245F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TabViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245FE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TabViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24603C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TabViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_246054(void *a1)
{
  return TabViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_24606C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D48, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326888, a1);
}

uint64_t sub_2460A4@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D50, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_3268A0, a1);
}

uint64_t sub_2460DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for TabViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_3268B8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TabViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_4E04(&qword_315DE8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3268B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2468B4);
}

uint64_t sub_2468B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_3268B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_315DE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for TabViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_246A20);
}

uint64_t sub_246A20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_3268B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_315DE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_246B84()
{
  sub_246C88();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F)
    {
      sub_6E6C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_246C88()
{
  if (!qword_326940)
  {
    sub_227EC0();
    sub_227F18();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_326940);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TabViewEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_27D7C0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_27D7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

unsigned char *initializeWithCopy for TabViewEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

unsigned char *assignWithCopy for TabViewEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

unsigned char *initializeWithTake for TabViewEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

unsigned char *assignWithTake for TabViewEvent.Model(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_27D7F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_247178);
}

uint64_t sub_247178(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 249)
  {
    unsigned int v4 = *a1;
    if (v4 >= 7) {
      return v4 - 6;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = &a1[*(int *)(a3 + 24)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for TabViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2472B0);
}

unsigned char *sub_2472B0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 249)
  {
    *unint64_t result = a2 + 6;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 24)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_2473D8()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TabViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabViewEvent.Model.CodingKeys()
{
  return &type metadata for TabViewEvent.Model.CodingKeys;
}

unint64_t sub_2475B4()
{
  unint64_t result = qword_326A10;
  if (!qword_326A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A10);
  }
  return result;
}

unint64_t sub_24760C()
{
  unint64_t result = qword_326A18;
  if (!qword_326A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A18);
  }
  return result;
}

unint64_t sub_247664()
{
  unint64_t result = qword_326A20;
  if (!qword_326A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A20);
  }
  return result;
}

uint64_t sub_2476B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61746144626174 && a2 == 0xE700000000000000;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static RatingData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v5 = 6647407;
      break;
    case 2:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v5 = 7305076;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x6565726874;
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1920298854;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1702259046;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 6647407) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7305076) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6565726874) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1920298854;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702259046) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2479F0()
{
  return 0x676E69746172;
}

uint64_t sub_247A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E69746172 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_247A94(uint64_t a1)
{
  unint64_t v2 = sub_247C54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_247AD0(uint64_t a1)
{
  unint64_t v2 = sub_247C54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RatingData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326A28);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_247C54();
  sub_27E440();
  char v10 = v7;
  sub_247CA8();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_247C54()
{
  unint64_t result = qword_326A30;
  if (!qword_326A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A30);
  }
  return result;
}

unint64_t sub_247CA8()
{
  unint64_t result = qword_326A38;
  if (!qword_326A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A38);
  }
  return result;
}

uint64_t RatingData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326A40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_247C54();
  sub_27E430();
  if (!v2)
  {
    sub_247E64();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_247E64()
{
  unint64_t result = qword_326A48;
  if (!qword_326A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A48);
  }
  return result;
}

uint64_t sub_247EC0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RatingData.init(from:)(a1, a2);
}

uint64_t sub_247ED8(void *a1)
{
  return RatingData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for RatingData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RatingData()
{
  return &type metadata for RatingData;
}

unsigned char *storeEnumTagSinglePayload for RatingData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248090);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RatingData.CodingKeys()
{
  return &type metadata for RatingData.CodingKeys;
}

unint64_t sub_2480CC()
{
  unint64_t result = qword_326A50;
  if (!qword_326A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A50);
  }
  return result;
}

unint64_t sub_248124()
{
  unint64_t result = qword_326A58;
  if (!qword_326A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A58);
  }
  return result;
}

unint64_t sub_24817C()
{
  unint64_t result = qword_326A60;
  if (!qword_326A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A60);
  }
  return result;
}

BookAnalytics::SelectedResultSection_optional __swiftcall SelectedResultSection.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2F9C90;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t SelectedResultSection.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7972617262696CLL;
      break;
    case 2:
      uint64_t result = 0x726F74536B6F6F62;
      break;
    case 3:
      uint64_t result = 0x6F6F626F69647561;
      break;
    case 4:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2482DC(unsigned __int8 *a1, char *a2)
{
  return sub_2F580(*a1, *a2);
}

unint64_t sub_2482EC()
{
  unint64_t result = qword_326A68;
  if (!qword_326A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A68);
  }
  return result;
}

Swift::Int sub_248340()
{
  return sub_27E420();
}

uint64_t sub_24843C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_248520()
{
  return sub_27E420();
}

BookAnalytics::SelectedResultSection_optional sub_248618(Swift::String *a1)
{
  return SelectedResultSection.init(rawValue:)(*a1);
}

void sub_248624(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7972617262696CLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x726F74536B6F6F62;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    case 3:
      strcpy((char *)a1, "audiobookStore");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 7105633;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
  }
}

uint64_t sub_2486E4()
{
  return sub_27DED0();
}

uint64_t sub_248744()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SelectedResultSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedResultSection()
{
  return &type metadata for SelectedResultSection;
}

unint64_t sub_248898()
{
  unint64_t result = qword_326A70;
  if (!qword_326A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326A70);
  }
  return result;
}

uint64_t sub_2488EC(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_326A78, &enum case for SessionGroup.default(_:));
}

uint64_t static UnifiedMessageExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D58, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326A78, a1);
}

uint64_t sub_24894C(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_326A90, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static UnifiedMessageExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D60, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326A90, a1);
}

uint64_t UnifiedMessageExposureEvent.messageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_320840);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t UnifiedMessageExposureEvent.messageData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_320840);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t UnifiedMessageExposureEvent.contentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UnifiedMessageExposureEvent(uint64_t a1)
{
  return sub_5338(a1, qword_326B18);
}

uint64_t UnifiedMessageExposureEvent.contentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316770);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageExposureEvent.contentData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnifiedMessageExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageExposureEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnifiedMessageExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnifiedMessageExposureEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t UnifiedMessageExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for UnifiedMessageExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_315DE8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t UnifiedMessageExposureEvent.Model.contentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  uint64_t v4 = v1[9];
  uint64_t v5 = v1[10];
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = v1[15];
  uint64_t v11 = v1[16];
  uint64_t v12 = v1[17];
  uint64_t v13 = v1[18];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_5FA04(v2, v3);
}

uint64_t UnifiedMessageExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UnifiedMessageExposureEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_326BB0);
}

uint64_t UnifiedMessageExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnifiedMessageExposureEvent.Model(0) + 28);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnifiedMessageExposureEvent.Model.init(messageData:contentData:eventData:timedData:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_OWORD *)(a5 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  long long v8 = a2[1];
  *(_OWORD *)(a5 + 56) = *a2;
  *(_OWORD *)(a5 + 72) = v8;
  long long v9 = a2[3];
  *(_OWORD *)(a5 + 88) = a2[2];
  *(_OWORD *)(a5 + 104) = v9;
  long long v10 = a2[5];
  *(_OWORD *)(a5 + 120) = a2[4];
  char v11 = *(unsigned char *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 48);
  *(unsigned char *)a5 = *(unsigned char *)a1;
  *(unsigned char *)(a5 + 24) = v11;
  *(void *)(a5 + 48) = v12;
  *(_OWORD *)(a5 + 136) = v10;
  uint64_t v13 = type metadata accessor for UnifiedMessageExposureEvent.Model(0);
  uint64_t v14 = a5 + *(int *)(v13 + 24);
  uint64_t v15 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a3, v15);
  uint64_t v16 = a5 + *(int *)(v13 + 28);
  uint64_t v17 = sub_27D7F0();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a4, v17);
}

uint64_t sub_249268()
{
  uint64_t result = 0x446567617373656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E65746E6F63;
      break;
    case 2:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x4464656D6974;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2492F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24BD8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249320(uint64_t a1)
{
  unint64_t v2 = sub_249660();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24935C(uint64_t a1)
{
  unint64_t v2 = sub_249660();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UnifiedMessageExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_326AA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_249660();
  sub_27E440();
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 48);
  v15[0] = *(unsigned char *)v3;
  *(_OWORD *)&unsigned char v15[8] = *(_OWORD *)(v3 + 8);
  v15[24] = v9;
  long long v16 = *(_OWORD *)(v3 + 32);
  *(void *)&long long v17 = v10;
  char v20 = 0;
  sub_18E6FC();
  sub_27E330();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 72);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)(v3 + 56);
    *(_OWORD *)&unsigned char v15[16] = v11;
    long long v12 = *(_OWORD *)(v3 + 104);
    long long v16 = *(_OWORD *)(v3 + 88);
    long long v17 = v12;
    long long v13 = *(_OWORD *)(v3 + 136);
    long long v18 = *(_OWORD *)(v3 + 120);
    long long v19 = v13;
    char v20 = 1;
    sub_1A1D4();
    sub_27E2C0();
    type metadata accessor for UnifiedMessageExposureEvent.Model(0);
    v15[0] = 2;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v15[0] = 3;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_249660()
{
  unint64_t result = qword_326AB0;
  if (!qword_326AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326AB0);
  }
  return result;
}

uint64_t UnifiedMessageExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_27D7F0();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_27D7C0();
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_4E04(&qword_326AB8);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  char v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UnifiedMessageExposureEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v35 = a1;
  sub_5900(a1, v13);
  sub_249660();
  char v34 = v9;
  uint64_t v14 = v36;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v35);
  }
  uint64_t v36 = v7;
  char v27 = v4;
  uint64_t v15 = (uint64_t)v12;
  uint64_t v16 = v32;
  char v42 = 0;
  sub_18EC28();
  sub_27E260();
  char v17 = v37[24];
  uint64_t v18 = v39;
  *(unsigned char *)uint64_t v15 = v37[0];
  *(_OWORD *)(v15 + 8) = *(_OWORD *)&v37[8];
  *(unsigned char *)(v15 + 24) = v17;
  *(_OWORD *)(v15 + 32) = v38;
  *(void *)(v15 + 48) = v18;
  char v42 = 1;
  sub_1A98C();
  sub_27E1F0();
  long long v19 = *(_OWORD *)&v37[16];
  *(_OWORD *)(v15 + 56) = *(_OWORD *)v37;
  *(_OWORD *)(v15 + 72) = v19;
  long long v20 = v39;
  *(_OWORD *)(v15 + 88) = v38;
  *(_OWORD *)(v15 + 104) = v20;
  long long v21 = v41;
  *(_OWORD *)(v15 + 120) = v40;
  *(_OWORD *)(v15 + 136) = v21;
  v37[0] = 2;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v22 = v36;
  v26[1] = 0;
  sub_27E260();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v15 + *(int *)(v10 + 24), v22, v5);
  v37[0] = 3;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  int v23 = v27;
  uint64_t v24 = v30;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v15 + *(int *)(v10 + 28), v23, v24);
  sub_249C74(v15, v29);
  sub_5E94((uint64_t)v35);
  return sub_249CD8(v15);
}

uint64_t sub_249C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnifiedMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249CD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnifiedMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249D34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UnifiedMessageExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_249D4C(void *a1)
{
  return UnifiedMessageExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_249D64@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D58, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326A78, a1);
}

uint64_t sub_249D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D60, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326A90, a1);
}

uint64_t sub_249DD4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.optional<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_315DE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnifiedMessageExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_320840);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for UnifiedMessageExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_315DE8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24A7C8);
}

uint64_t sub_24A7C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_320840);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for UnifiedMessageExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24A984);
}

uint64_t sub_24A984(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_320840);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316770);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_24AB38()
{
  sub_24ACE8(319, &qword_3208F0, (void (*)(void))sub_18EC28, (void (*)(void))sub_18E6FC);
  if (v0 <= 0x3F)
  {
    sub_24ACE8(319, (unint64_t *)&qword_316868, (void (*)(void))sub_1A98C, (void (*)(void))sub_1A1D4);
    if (v1 <= 0x3F)
    {
      sub_6DA0();
      if (v2 <= 0x3F)
      {
        sub_6E6C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_24ACE8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for UnifiedMessageExposureEvent.Model(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (unsigned char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    v4[24] = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[5];
    *((void *)v4 + 4) = a2[4];
    *((void *)v4 + 5) = v8;
    *((void *)v4 + 6) = a2[6];
    uint64_t v9 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      *((void *)v4 + 7) = a2[7];
      *((void *)v4 + 8) = v9;
      v4[72] = *((unsigned char *)a2 + 72);
      uint64_t v10 = a2[11];
      *((void *)v4 + 10) = a2[10];
      *((void *)v4 + 11) = v10;
      uint64_t v11 = a2[13];
      *((void *)v4 + 12) = a2[12];
      *((void *)v4 + 13) = v11;
      *((_WORD *)v4 + 56) = *((_WORD *)a2 + 56);
      v4[120] = *((unsigned char *)a2 + 120);
      *((_DWORD *)v4 + 29) = *((_DWORD *)a2 + 29);
      *((_DWORD *)v4 + 31) = *((_DWORD *)a2 + 31);
      v4[128] = *((unsigned char *)a2 + 128);
      *(_DWORD *)(v4 + 129) = *(_DWORD *)((char *)a2 + 129);
      v4[133] = *((unsigned char *)a2 + 133);
      uint64_t v12 = a2[18];
      *((void *)v4 + 17) = a2[17];
      *((void *)v4 + 18) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(v4 + 104) = v14;
      long long v15 = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(v4 + 120) = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(v4 + 136) = v15;
      long long v16 = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 72) = v16;
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = &v4[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_27D7C0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = *(int *)(a3 + 28);
    uint64_t v22 = &v4[v21];
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = sub_27D7F0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(_DWORD *)(a1 + 129) = *(_DWORD *)(a2 + 129);
    *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
    uint64_t v11 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    long long v14 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v14;
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 56);
  uint64_t v7 = (_OWORD *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v8)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
      int v9 = *(_DWORD *)(a2 + 116);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(_DWORD *)(a1 + 116) = v9;
      int v10 = *(_DWORD *)(a2 + 124);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(_DWORD *)(a1 + 124) = v10;
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
      *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
      *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
      *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_62898(a1 + 56);
      long long v13 = *(_OWORD *)(a2 + 72);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 72) = v13;
      long long v14 = *(_OWORD *)(a2 + 136);
      long long v16 = *(_OWORD *)(a2 + 88);
      long long v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 88) = v16;
      *(_OWORD *)(a1 + 104) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    int v11 = *(_DWORD *)(a2 + 116);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_DWORD *)(a1 + 116) = v11;
    int v12 = *(_DWORD *)(a2 + 124);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(_DWORD *)(a1 + 124) = v12;
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
    *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
    *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
    *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 72);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 72) = v17;
    long long v18 = *(_OWORD *)(a2 + 88);
    long long v19 = *(_OWORD *)(a2 + 104);
    long long v20 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v20;
    *(_OWORD *)(a1 + 88) = v18;
    *(_OWORD *)(a1 + 104) = v19;
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 28);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t initializeWithTake for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 64)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 64);
  if (!v8)
  {
    sub_62898(a1 + 56);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    long long v14 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v14;
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 129) = *(_DWORD *)(a2 + 129);
  *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24B838);
}

uint64_t sub_24B838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for UnifiedMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24B978);
}

uint64_t sub_24B978(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_24BAA4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnifiedMessageExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24BC4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessageExposureEvent.Model.CodingKeys()
{
  return &type metadata for UnifiedMessageExposureEvent.Model.CodingKeys;
}

unint64_t sub_24BC88()
{
  unint64_t result = qword_326BF0;
  if (!qword_326BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326BF0);
  }
  return result;
}

unint64_t sub_24BCE0()
{
  unint64_t result = qword_326BF8;
  if (!qword_326BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326BF8);
  }
  return result;
}

unint64_t sub_24BD38()
{
  unint64_t result = qword_326C00;
  if (!qword_326C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C00);
  }
  return result;
}

uint64_t sub_24BD8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446567617373656DLL && a2 == 0xEB00000000617461;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746E65746E6F63 && a2 == 0xEB00000000617461 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24BF84()
{
  uint64_t v1 = 0x7469736F50646E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E654C6C61746F74;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736F507472617473;
  }
}

uint64_t sub_24BFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C6AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C024(uint64_t a1)
{
  unint64_t v2 = sub_24C23C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24C060(uint64_t a1)
{
  unint64_t v2 = sub_24C23C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScrubData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_326C08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(_DWORD *)(v1 + 4);
  v9[3] = *(_DWORD *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_24C23C();
  sub_27E440();
  char v12 = 0;
  sub_27E340();
  if (!v2)
  {
    char v11 = 1;
    sub_27E340();
    char v10 = 2;
    sub_27E340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24C23C()
{
  unint64_t result = qword_326C10;
  if (!qword_326C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C10);
  }
  return result;
}

uint64_t ScrubData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326C18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24C23C();
  sub_27E430();
  if (!v2)
  {
    char v16 = 0;
    int v9 = sub_27E270();
    char v15 = 1;
    int v11 = sub_27E270();
    char v14 = 2;
    int v12 = sub_27E270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_24C460@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrubData.init(from:)(a1, a2);
}

uint64_t sub_24C478(void *a1)
{
  return ScrubData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ScrubData()
{
  return &type metadata for ScrubData;
}

unsigned char *storeEnumTagSinglePayload for ScrubData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C56CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubData.CodingKeys()
{
  return &type metadata for ScrubData.CodingKeys;
}

unint64_t sub_24C5A8()
{
  unint64_t result = qword_326C20;
  if (!qword_326C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C20);
  }
  return result;
}

unint64_t sub_24C600()
{
  unint64_t result = qword_326C28;
  if (!qword_326C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C28);
  }
  return result;
}

unint64_t sub_24C658()
{
  unint64_t result = qword_326C30;
  if (!qword_326C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C30);
  }
  return result;
}

uint64_t sub_24C6AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736F507472617473 && a2 == 0xED00006E6F697469;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736F50646E65 && a2 == 0xEB000000006E6F69 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E654C6C61746F74 && a2 == 0xEB00000000687467)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24C85C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_24C87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C92C(uint64_t a1)
{
  unint64_t v2 = sub_24CD24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24C968(uint64_t a1)
{
  unint64_t v2 = sub_24CD24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LocationData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326C38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_24CD24();
  sub_27E440();
  char v10 = v7;
  sub_24CD78();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LocationData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326C50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24CD24();
  sub_27E430();
  if (!v2)
  {
    sub_24CDCC();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_24CC54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LocationData.init(from:)(a1, a2);
}

uint64_t sub_24CC6C(void *a1)
{
  return LocationData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12LocationDataV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = LocationType.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == LocationType.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_24CD24()
{
  unint64_t result = qword_326C40;
  if (!qword_326C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C40);
  }
  return result;
}

unint64_t sub_24CD78()
{
  unint64_t result = qword_326C48;
  if (!qword_326C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C48);
  }
  return result;
}

unint64_t sub_24CDCC()
{
  unint64_t result = qword_326C58;
  if (!qword_326C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *unint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24CEF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationData()
{
  return &type metadata for LocationData;
}

unsigned char *storeEnumTagSinglePayload for LocationData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24CFC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationData.CodingKeys()
{
  return &type metadata for LocationData.CodingKeys;
}

unint64_t sub_24D004()
{
  unint64_t result = qword_326C60;
  if (!qword_326C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C60);
  }
  return result;
}

unint64_t sub_24D05C()
{
  unint64_t result = qword_326C68;
  if (!qword_326C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C68);
  }
  return result;
}

unint64_t sub_24D0B4()
{
  unint64_t result = qword_326C70;
  if (!qword_326C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C70);
  }
  return result;
}

uint64_t sub_24D10C()
{
  return 0x657079546C616F67;
}

uint64_t sub_24D124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657079546C616F67 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24D1BC(uint64_t a1)
{
  unint64_t v2 = sub_24D634();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24D1F8(uint64_t a1)
{
  unint64_t v2 = sub_24D634();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GoalAdjustTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326C78);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_24D634();
  sub_27E440();
  char v10 = v7;
  sub_97C3C();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GoalAdjustTypeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326C88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24D634();
  sub_27E430();
  if (!v2)
  {
    sub_97D9C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_24D4E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GoalAdjustTypeData.init(from:)(a1, a2);
}

uint64_t sub_24D4FC(void *a1)
{
  return GoalAdjustTypeData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics18GoalAdjustTypeDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x47676E6964616572;
  unint64_t v4 = 0xEB000000006C616FLL;
  if (v2 != 1)
  {
    uint64_t v3 = 0x616F47736B6F6F62;
    unint64_t v4 = 0xE90000000000006CLL;
  }
  if (*a1) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  uint64_t v7 = 0x47676E6964616572;
  unint64_t v8 = 0xEB000000006C616FLL;
  if (*a2 != 1)
  {
    uint64_t v7 = 0x616F47736B6F6F62;
    unint64_t v8 = 0xE90000000000006CLL;
  }
  if (*a2) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  if (*a2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xE700000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_24D634()
{
  unint64_t result = qword_326C80;
  if (!qword_326C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GoalAdjustTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D75CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalAdjustTypeData()
{
  return &type metadata for GoalAdjustTypeData;
}

unsigned char *storeEnumTagSinglePayload for GoalAdjustTypeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D830);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalAdjustTypeData.CodingKeys()
{
  return &type metadata for GoalAdjustTypeData.CodingKeys;
}

unint64_t sub_24D86C()
{
  unint64_t result = qword_326C90;
  if (!qword_326C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C90);
  }
  return result;
}

unint64_t sub_24D8C4()
{
  unint64_t result = qword_326C98;
  if (!qword_326C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326C98);
  }
  return result;
}

unint64_t sub_24D91C()
{
  unint64_t result = qword_326CA0;
  if (!qword_326CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CA0);
  }
  return result;
}

void __swiftcall LinkData.init(previousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:)(BookAnalytics::LinkData *__return_ptr retstr, Swift::String previousSectionID, Swift::String_optional previousSectionName, Swift::String_optional previousContentID, BookAnalytics::LinkActionType linkActionType, Swift::String_optional previousSeriesID, Swift::String_optional previousGenreID, Swift::String_optional previousCollectionID, Swift::String_optional previousAuthorID, Swift::String_optional previousFlowcaseID, Swift::String_optional previousBrickID)
{
  BookAnalytics::LinkActionType v11 = *(unsigned char *)linkActionType;
  retstr->previousSectionID = previousSectionID;
  retstr->previousSectionName = previousSectionName;
  retstr->previousContentID = previousContentID;
  retstr->linkActionType = v11;
  retstr->previousSeriesID.value._uint64_t countAndFlagsBits = previousSeriesID.value._countAndFlagsBits;
  *(Swift::String_optional *)&retstr->previousSeriesID.value._object = *(Swift::String_optional *)&previousSeriesID.value._object;
  *(Swift::String_optional *)&retstr->previousGenreID.value._object = *(Swift::String_optional *)((char *)&previousCollectionID
                                                                                                - 8);
  *(Swift::String_optional *)&retstr->previousCollectionID.value._object = *(Swift::String_optional *)&previousCollectionID.value._object;
  *(Swift::String_optional *)&retstr->previousAuthorID.value._object = *(Swift::String_optional *)&previousAuthorID.value._object;
  *(Swift::String_optional *)&retstr->previousFlowcaseID.value._object = *(Swift::String_optional *)((char *)&previousBrickID - 8);
  retstr->previousBrickID.value._object = previousBrickID.value._object;
}

uint64_t LinkData.previousAuthorID.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousAuthorID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t LinkData.previousFlowcaseID.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousFlowcaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t LinkData.previousBrickID.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkData.previousBrickID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

unint64_t sub_24DAE8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x697463416B6E696CLL;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
    case 9:
      unint64_t result = 0x73756F6976657270;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24DC1C()
{
  return sub_24DAE8(*v0);
}

uint64_t sub_24DC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DC4C(uint64_t a1)
{
  unint64_t v2 = sub_24EC74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24DC88(uint64_t a1)
{
  unint64_t v2 = sub_24EC74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t LinkData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326CA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v1 + 24);
  uint64_t v27 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v24 = *(void *)(v1 + 40);
  uint64_t v25 = v8;
  int v23 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  v22[7] = *(void *)(v1 + 80);
  v22[8] = v9;
  uint64_t v12 = *(void *)(v1 + 88);
  v22[5] = *(void *)(v1 + 96);
  v22[6] = v11;
  uint64_t v13 = *(void *)(v1 + 104);
  v22[3] = *(void *)(v1 + 112);
  v22[4] = v12;
  v22[0] = *(void *)(v1 + 120);
  v22[1] = *(void *)(v1 + 128);
  v22[2] = v13;
  uint64_t v14 = *(void *)(v1 + 144);
  v22[9] = *(void *)(v1 + 136);
  v22[10] = v10;
  uint64_t v15 = a1[3];
  char v16 = a1;
  uint64_t v18 = v17;
  sub_5900(v16, v15);
  sub_24EC74();
  sub_27E440();
  char v39 = 0;
  uint64_t v19 = v28;
  sub_27E2F0();
  if (!v19)
  {
    char v20 = v23;
    uint64_t v28 = v14;
    char v38 = 1;
    sub_27E290();
    char v37 = 2;
    sub_27E290();
    char v36 = v20;
    char v35 = 3;
    sub_1B07C0();
    sub_27E330();
    char v34 = 4;
    sub_27E290();
    char v33 = 5;
    sub_27E290();
    char v32 = 6;
    sub_27E290();
    char v31 = 7;
    sub_27E290();
    char v30 = 8;
    sub_27E290();
    char v29 = 9;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

uint64_t LinkData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = sub_4E04(&qword_326CB8);
  uint64_t v5 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24EC74();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v56 = a1;
    uint64_t v57 = v5;
    LOBYTE(v68) = 0;
    uint64_t v8 = sub_27E220();
    uint64_t v10 = v9;
    LOBYTE(v68) = 1;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_27E1C0();
    *(void *)&long long v53 = v8;
    *((void *)&v53 + 1) = v10;
    LOBYTE(v68) = 2;
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E1C0();
    uint64_t v15 = v14;
    uint64_t v50 = v13;
    uint64_t v51 = v12;
    LOBYTE(v58) = 3;
    sub_1B0814();
    swift_bridgeObjectRetain();
    sub_27E260();
    uint64_t v49 = v15;
    LODWORD(v15) = v68;
    LOBYTE(v68) = 4;
    uint64_t v47 = sub_27E1C0();
    int v48 = v15;
    LOBYTE(v68) = 5;
    uint64_t v17 = v16;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_27E1C0();
    uint64_t v46 = v17;
    LOBYTE(v68) = 6;
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_27E1C0();
    uint64_t v22 = v21;
    uint64_t v43 = v20;
    uint64_t v44 = v19;
    LOBYTE(v68) = 7;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_27E1C0();
    uint64_t v55 = v22;
    uint64_t v42 = v23;
    LOBYTE(v68) = 8;
    uint64_t v54 = v24;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_27E1C0();
    uint64_t v26 = v25;
    char v87 = 9;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_27E1C0();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v89);
    uint64_t v29 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v58 = v53;
    *(void *)&long long v59 = v52;
    *((void *)&v59 + 1) = v51;
    uint64_t v30 = v49;
    *(void *)&long long v60 = v50;
    *((void *)&v60 + 1) = v49;
    LOBYTE(v61) = v48;
    *((void *)&v61 + 1) = v47;
    *(void *)&long long v62 = v46;
    uint64_t v31 = v44;
    *((void *)&v62 + 1) = v45;
    *(void *)&long long v63 = v44;
    *((void *)&v63 + 1) = v43;
    *(void *)&long long v64 = v55;
    *((void *)&v64 + 1) = v42;
    *(void *)&long long v65 = v54;
    *((void *)&v65 + 1) = v41;
    *(void *)&long long v66 = v26;
    *((void *)&v66 + 1) = v40;
    uint64_t v67 = v28;
    sub_35DC8((uint64_t)&v58);
    swift_bridgeObjectRelease();
    uint64_t v32 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v34 = v65;
    *(_OWORD *)(a2 + 96) = v64;
    *(_OWORD *)(a2 + 112) = v34;
    *(_OWORD *)(a2 + 128) = v66;
    *(void *)(a2 + 144) = v67;
    long long v35 = v61;
    *(_OWORD *)(a2 + 32) = v60;
    *(_OWORD *)(a2 + 48) = v35;
    long long v36 = v63;
    *(_OWORD *)(a2 + 64) = v62;
    *(_OWORD *)(a2 + 80) = v36;
    long long v37 = v59;
    *(_OWORD *)a2 = v58;
    *(_OWORD *)(a2 + 16) = v37;
    sub_5E94((uint64_t)v56);
    long long v68 = v53;
    uint64_t v69 = v52;
    uint64_t v70 = v32;
    uint64_t v71 = v50;
    uint64_t v72 = v30;
    char v73 = v48;
    *(_DWORD *)v74 = v88[0];
    *(_DWORD *)&v74[3] = *(_DWORD *)((char *)v88 + 3);
    uint64_t v75 = v47;
    uint64_t v76 = v46;
    uint64_t v77 = v45;
    uint64_t v78 = v31;
    uint64_t v79 = v43;
    uint64_t v80 = v55;
    uint64_t v81 = v42;
    uint64_t v82 = v33;
    uint64_t v83 = v41;
    uint64_t v84 = v26;
    uint64_t v85 = v40;
    uint64_t v86 = v29;
    return sub_37644((uint64_t)&v68);
  }
}

uint64_t sub_24E88C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LinkData.init(from:)(a1, a2);
}

uint64_t sub_24E8A4(void *a1)
{
  return LinkData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics8LinkDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 48);
  uint64_t v40 = *(void *)(a1 + 56);
  uint64_t v44 = *(void *)(a1 + 64);
  uint64_t v36 = *(void *)(a1 + 72);
  uint64_t v42 = *(void *)(a1 + 80);
  uint64_t v32 = *(void *)(a1 + 88);
  uint64_t v38 = *(void *)(a1 + 96);
  uint64_t v28 = *(void *)(a1 + 104);
  uint64_t v34 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 120);
  uint64_t v30 = *(void *)(a1 + 128);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v24 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  uint64_t v39 = *(void *)(a2 + 56);
  uint64_t v43 = *(void *)(a2 + 64);
  uint64_t v35 = *(void *)(a2 + 72);
  uint64_t v41 = *(void *)(a2 + 80);
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v37 = *(void *)(a2 + 96);
  uint64_t v27 = *(void *)(a2 + 104);
  uint64_t v33 = *(void *)(a2 + 112);
  uint64_t v25 = *(void *)(a2 + 120);
  uint64_t v29 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v23 = *(void *)(a2 + 144);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_27E370(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v8) {
        return 0;
      }
      if (v2 != v7 || v3 != v8)
      {
        char v14 = sub_27E370();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v8)
    {
      return 0;
    }
    if (v5)
    {
      if (!v10) {
        return 0;
      }
      if (v4 != v9 || v5 != v10)
      {
        char v15 = sub_27E370();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (sub_2B944(v6, v11))
    {
      if (v44)
      {
        if (!v43) {
          return 0;
        }
        if (v40 != v39 || v44 != v43)
        {
          char v16 = sub_27E370();
          uint64_t result = 0;
          if ((v16 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v43)
      {
        return 0;
      }
      if (v42)
      {
        if (!v41) {
          return 0;
        }
        if (v36 != v35 || v42 != v41)
        {
          char v17 = sub_27E370();
          uint64_t result = 0;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v41)
      {
        return 0;
      }
      if (v38)
      {
        if (!v37) {
          return 0;
        }
        if (v32 != v31 || v38 != v37)
        {
          char v18 = sub_27E370();
          uint64_t result = 0;
          if ((v18 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v37)
      {
        return 0;
      }
      if (v34)
      {
        if (!v33) {
          return 0;
        }
        if (v28 != v27 || v34 != v33)
        {
          char v19 = sub_27E370();
          uint64_t result = 0;
          if ((v19 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v33)
      {
        return 0;
      }
      if (v30)
      {
        if (!v29) {
          return 0;
        }
        if (v26 != v25 || v30 != v29)
        {
          char v20 = sub_27E370();
          uint64_t result = 0;
          if ((v20 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v29)
      {
        return 0;
      }
      if (v24)
      {
        if (v23 && (v22 == v21 && v24 == v23 || (sub_27E370() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v23)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_24EC74()
{
  unint64_t result = qword_326CB0;
  if (!qword_326CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CB0);
  }
  return result;
}

uint64_t destroy for LinkData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LinkData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LinkData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LinkData(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for LinkData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkData()
{
  return &type metadata for LinkData;
}

unsigned char *storeEnumTagSinglePayload for LinkData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F1F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkData.CodingKeys()
{
  return &type metadata for LinkData.CodingKeys;
}

unint64_t sub_24F22C()
{
  unint64_t result = qword_326CC0;
  if (!qword_326CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CC0);
  }
  return result;
}

unint64_t sub_24F284()
{
  unint64_t result = qword_326CC8;
  if (!qword_326CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CC8);
  }
  return result;
}

unint64_t sub_24F2DC()
{
  unint64_t result = qword_326CD0;
  if (!qword_326CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CD0);
  }
  return result;
}

uint64_t sub_24F330(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002AF7D0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002AF7F0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002AF810 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463416B6E696CLL && a2 == 0xEE00657079546E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AF840 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xEF444965726E6547 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000000002AF870 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002AF890 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AF8B0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xEF44496B63697242)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t static ReadingNowData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_81CBC(*a1, *a2);
}

unint64_t sub_24F758()
{
  return 0xD000000000000011;
}

uint64_t sub_24F774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FE28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24F7A0(uint64_t a1)
{
  unint64_t v2 = sub_24F99C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24F7DC(uint64_t a1)
{
  unint64_t v2 = sub_24F99C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingNowData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326CD8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_24F99C();
  sub_27E440();
  v9[1] = v7;
  sub_4E04(&qword_326CE8);
  sub_24FB94(&qword_326CF0, (void (*)(void))sub_2379EC);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24F99C()
{
  unint64_t result = qword_326CE0;
  if (!qword_326CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326CE0);
  }
  return result;
}

uint64_t ReadingNowData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326CF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_24F99C();
  sub_27E430();
  if (!v2)
  {
    sub_4E04(&qword_326CE8);
    sub_24FB94(&qword_326D00, (void (*)(void))sub_237994);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_24FB94(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_326CE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FC0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ReadingNowData.init(from:)(a1, a2);
}

uint64_t sub_24FC24(void *a1)
{
  return ReadingNowData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ReadingNowData()
{
  return &type metadata for ReadingNowData;
}

unsigned char *storeEnumTagSinglePayload for ReadingNowData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FCE8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingNowData.CodingKeys()
{
  return &type metadata for ReadingNowData.CodingKeys;
}

unint64_t sub_24FD24()
{
  unint64_t result = qword_326D08;
  if (!qword_326D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D08);
  }
  return result;
}

unint64_t sub_24FD7C()
{
  unint64_t result = qword_326D10;
  if (!qword_326D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D10);
  }
  return result;
}

unint64_t sub_24FDD4()
{
  unint64_t result = qword_326D18;
  if (!qword_326D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D18);
  }
  return result;
}

uint64_t sub_24FE28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002B1C20)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_27E370();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24FEB0()
{
  return 0x657A6953746E6F66;
}

uint64_t sub_24FEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657A6953746E6F66 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24FF60(uint64_t a1)
{
  unint64_t v2 = sub_25010C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_24FF9C(uint64_t a1)
{
  unint64_t v2 = sub_25010C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FontSizeData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_326D20);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25010C();
  sub_27E440();
  sub_27E320();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_25010C()
{
  unint64_t result = qword_326D28;
  if (!qword_326D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D28);
  }
  return result;
}

uint64_t FontSizeData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326D30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25010C();
  sub_27E430();
  if (!v2)
  {
    sub_27E250();
    int v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_2502C0@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return FontSizeData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for FontSizeData()
{
  return &type metadata for FontSizeData;
}

unsigned char *storeEnumTagSinglePayload for FontSizeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x250384);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FontSizeData.CodingKeys()
{
  return &type metadata for FontSizeData.CodingKeys;
}

unint64_t sub_2503C0()
{
  unint64_t result = qword_326D38;
  if (!qword_326D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D38);
  }
  return result;
}

unint64_t sub_250418()
{
  unint64_t result = qword_326D40;
  if (!qword_326D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D40);
  }
  return result;
}

unint64_t sub_250470()
{
  unint64_t result = qword_326D48;
  if (!qword_326D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D48);
  }
  return result;
}

uint64_t ClickData.TargetType.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_2F9D28;
  v9._object = a2;
  unint64_t v6 = sub_27E1B0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 11;
  if (v6 < 0xB) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

unint64_t ClickData.TargetType.rawValue.getter()
{
  unint64_t result = 0x6E61576F54646461;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D61536F69647561;
      break;
    case 2:
      unint64_t result = 0x6E6F74747562;
      break;
    case 3:
      unint64_t result = 7959906;
      break;
    case 4:
      unint64_t result = 0x6574656C6564;
      break;
    case 5:
      unint64_t result = 0x7373696D736964;
      break;
    case 6:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 7:
      unint64_t result = 0x657461676976616ELL;
      break;
    case 8:
      unint64_t result = 0x706D615364616572;
      break;
    case 9:
      unint64_t result = 0x64616F6C6572;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25067C(unsigned __int8 *a1, char *a2)
{
  return sub_2BB48(*a1, *a2);
}

Swift::Int sub_250688()
{
  return sub_27E420();
}

uint64_t sub_2506D0()
{
  return sub_27B52C();
}

Swift::Int sub_2506D8()
{
  return sub_27E420();
}

uint64_t sub_25071C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return ClickData.TargetType.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

unint64_t sub_250728@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ClickData.TargetType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ClickData.init(with:linkActionType:index:url:)@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_27D0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  char v17 = *a2;
  sub_27D090();
  sub_27D060();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t result = sub_27DF40();
  unint64_t v20 = 0xEF646165526F5474;
  unint64_t v21 = 0x6E61576F54646461;
  switch(v16)
  {
    case 1:
      unint64_t v20 = 0xEB00000000656C70;
      unint64_t v21 = 0x6D61536F69647561;
      break;
    case 2:
      unint64_t v20 = 0xE600000000000000;
      unint64_t v21 = 0x6E6F74747562;
      break;
    case 3:
      unint64_t v20 = 0xE300000000000000;
      unint64_t v21 = 7959906;
      break;
    case 4:
      unint64_t v20 = 0xE600000000000000;
      unint64_t v21 = 0x6574656C6564;
      break;
    case 5:
      unint64_t v20 = 0xE700000000000000;
      unint64_t v21 = 0x7373696D736964;
      break;
    case 6:
      unint64_t v20 = 0xE800000000000000;
      unint64_t v21 = 0x64616F6C6E776F64;
      break;
    case 7:
      unint64_t v20 = 0xE800000000000000;
      unint64_t v21 = 0x657461676976616ELL;
      break;
    case 8:
      unint64_t v20 = 0xEA0000000000656CLL;
      unint64_t v21 = 0x706D615364616572;
      break;
    case 9:
      unint64_t v20 = 0xE600000000000000;
      unint64_t v21 = 0x64616F6C6572;
      break;
    case 10:
      unint64_t v20 = 0x80000000002AD880;
      unint64_t v21 = 0xD000000000000014;
      break;
    default:
      break;
  }
  *(void *)a6 = result;
  *(void *)(a6 + 8) = v19;
  *(unsigned char *)(a6 + 16) = v17;
  *(void *)(a6 + 24) = v21;
  *(void *)(a6 + 32) = v20;
  *(void *)(a6 + 40) = a3;
  *(void *)(a6 + 48) = a4;
  *(void *)(a6 + 56) = a5;
  return result;
}

uint64_t SectionData.ComponentContained.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_2F9E50;
  v9._object = a2;
  unint64_t v6 = sub_27E1B0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 5;
  if (v6 < 5) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t SectionData.ComponentContained.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x68736F6F7773;
      break;
    case 2:
      uint64_t result = 0x756B636F4C706F74;
      break;
    case 3:
      uint64_t result = 0x6143736569726573;
      break;
    case 4:
      uint64_t result = 0x7465656873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_250AE4(unsigned __int8 *a1, char *a2)
{
  return sub_328FC(*a1, *a2);
}

Swift::Int sub_250AF0()
{
  return sub_27E420();
}

uint64_t sub_250BE8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_250CC8()
{
  return sub_27E420();
}

uint64_t sub_250DBC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return SectionData.ComponentContained.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_250DC8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x68736F6F7773;
      goto LABEL_3;
    case 2:
      *a1 = 0x756B636F4C706F74;
      a1[1] = 0xE900000000000070;
      break;
    case 3:
      *a1 = 0x6143736569726573;
      a1[1] = 0xEA00000000006472;
      break;
    case 4:
      *a1 = 0x7465656873;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_250E84()
{
  return sub_27DED0();
}

uint64_t sub_250EE4()
{
  return sub_27DEC0();
}

double SectionData.init(sectionID:name:sectionType:componentContained:exposureIndex:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X4>, unsigned char *a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  unint64_t v8 = 0xE700000000000000;
  uint64_t v9 = 0x6E776F6E6B6E75;
  switch(*a6)
  {
    case 1:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v9 = 0x68736F6F7773;
      break;
    case 2:
      unint64_t v8 = 0xE900000000000070;
      uint64_t v9 = 0x756B636F4C706F74;
      break;
    case 3:
      unint64_t v8 = 0xEA00000000006472;
      uint64_t v9 = 0x6143736569726573;
      break;
    case 4:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v9 = 0x7465656873;
      break;
    default:
      break;
  }
  *(unsigned char *)a8 = *a5;
  *(_DWORD *)(a8 + 4) = a7;
  *(void *)(a8 + 8) = a3;
  *(void *)(a8 + 16) = a4;
  *(void *)(a8 + 24) = 0;
  *(void *)(a8 + 32) = 0xE000000000000000;
  *(void *)(a8 + 40) = v9;
  *(void *)(a8 + 48) = v8;
  double result = 0.0;
  *(_OWORD *)(a8 + 56) = 0u;
  *(_OWORD *)(a8 + 72) = 0u;
  *(_DWORD *)(a8 + 88) = 0;
  *(unsigned char *)(a8 + 92) = 1;
  *(void *)(a8 + 96) = a1;
  *(void *)(a8 + 104) = a2;
  return result;
}

unint64_t sub_25101C()
{
  unint64_t result = qword_326D50;
  if (!qword_326D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D50);
  }
  return result;
}

unint64_t sub_251074()
{
  unint64_t result = qword_326D58;
  if (!qword_326D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D58);
  }
  return result;
}

unsigned char *_s10TargetTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickData.TargetType()
{
  return &type metadata for ClickData.TargetType;
}

unsigned char *_s18ComponentContainedOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionData.ComponentContained()
{
  return &type metadata for SectionData.ComponentContained;
}

unint64_t sub_2512D0()
{
  unint64_t result = qword_326D60;
  if (!qword_326D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326D60);
  }
  return result;
}

uint64_t AppAnalyticsAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_27DD00();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppAnalyticsAction.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppAnalyticsAction(0) + 20);

  return sub_2513F4(v3, a1);
}

uint64_t type metadata accessor for AppAnalyticsAction(uint64_t a1)
{
  return sub_5338(a1, qword_326DD0);
}

uint64_t sub_2513F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppAnalyticsAction.Type(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AppAnalyticsAction.Type(uint64_t a1)
{
  return sub_5338(a1, qword_326E78);
}

uint64_t AppAnalyticsAction.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_27DCF0();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for AppAnalyticsAction(0) + 20);

  return sub_2514C4(a1, v4);
}

uint64_t sub_2514C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppAnalyticsAction.Type(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppAnalyticsAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_27DD00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AppAnalyticsAction.Type(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v9 = *v10;
        uint64_t v12 = *((void *)v10 + 2);
        *((void *)v9 + 1) = *((void *)v10 + 1);
        *((void *)v9 + 2) = v12;
        v9[24] = v10[24];
        uint64_t v13 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v13;
        *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
        *((void *)v9 + 8) = *((void *)v10 + 8);
        v9[72] = v10[72];
        *((_DWORD *)v9 + 19) = *((_DWORD *)v10 + 19);
        uint64_t v14 = *((void *)v10 + 11);
        *((void *)v9 + 10) = *((void *)v10 + 10);
        *((void *)v9 + 11) = v14;
        uint64_t v15 = *((void *)v10 + 13);
        *((void *)v9 + 12) = *((void *)v10 + 12);
        *((void *)v9 + 13) = v15;
        uint64_t v16 = *((void *)v10 + 15);
        *((void *)v9 + 14) = *((void *)v10 + 14);
        *((void *)v9 + 15) = v16;
        uint64_t v17 = *((void *)v10 + 17);
        *((void *)v9 + 16) = *((void *)v10 + 16);
        *((void *)v9 + 17) = v17;
        uint64_t v18 = *((void *)v10 + 19);
        *((void *)v9 + 18) = *((void *)v10 + 18);
        *((void *)v9 + 19) = v18;
        v9[164] = v10[164];
        *((_DWORD *)v9 + 40) = *((_DWORD *)v10 + 40);
        uint64_t v19 = *((void *)v10 + 21);
        uint64_t v20 = *((void *)v10 + 22);
        *((void *)v9 + 21) = v19;
        *((void *)v9 + 22) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v23 = *((void *)v10 + 5);
        long long v24 = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 24) = v24;
        *((void *)v9 + 5) = v23;
        (**(void (***)(void *, const void *))(v24 - 8))(v9, v10);
        uint64_t v25 = *(int *)(sub_4E04(&qword_326D68) + 48);
        uint64_t v26 = &v9[v25];
        uint64_t v27 = &v10[v25];
        uint64_t v28 = sub_27D9F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v29 = *((void *)v10 + 5);
        long long v30 = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 24) = v30;
        *((void *)v9 + 5) = v29;
        (**(void (***)(void *, const void *))(v30 - 8))(v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v31 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v31;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v32 = sub_27D0A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v10, v32);
        uint64_t v33 = sub_4E04(&qword_326D70);
        uint64_t v34 = *(int *)(v33 + 48);
        uint64_t v35 = &v9[v34];
        uint64_t v36 = &v10[v34];
        uint64_t v37 = *((void *)v36 + 1);
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = v37;
        v35[16] = v36[16];
        uint64_t v38 = *((void *)v36 + 4);
        *((void *)v35 + 3) = *((void *)v36 + 3);
        *((void *)v35 + 4) = v38;
        uint64_t v39 = *((void *)v36 + 6);
        *((void *)v35 + 5) = *((void *)v36 + 5);
        *((void *)v35 + 6) = v39;
        v35[56] = v36[56];
        v35[57] = v36[57];
        *((_DWORD *)v35 + 15) = *((_DWORD *)v36 + 15);
        v35[64] = v36[64];
        *((_DWORD *)v35 + 17) = *((_DWORD *)v36 + 17);
        v35[72] = v36[72];
        *(_DWORD *)(v35 + 73) = *(_DWORD *)(v36 + 73);
        v35[77] = v36[77];
        uint64_t v40 = *((void *)v36 + 11);
        *((void *)v35 + 10) = *((void *)v36 + 10);
        *((void *)v35 + 11) = v40;
        uint64_t v41 = *(int *)(v33 + 64);
        uint64_t v42 = &v9[v41];
        uint64_t v43 = &v10[v41];
        *uint64_t v42 = *v43;
        *((_DWORD *)v42 + 1) = *((_DWORD *)v43 + 1);
        uint64_t v44 = *((void *)v43 + 2);
        *((void *)v42 + 1) = *((void *)v43 + 1);
        *((void *)v42 + 2) = v44;
        uint64_t v45 = *((void *)v43 + 4);
        *((void *)v42 + 3) = *((void *)v43 + 3);
        *((void *)v42 + 4) = v45;
        uint64_t v46 = *((void *)v43 + 6);
        *((void *)v42 + 5) = *((void *)v43 + 5);
        *((void *)v42 + 6) = v46;
        uint64_t v47 = *((void *)v43 + 8);
        *((void *)v42 + 7) = *((void *)v43 + 7);
        *((void *)v42 + 8) = v47;
        uint64_t v48 = *((void *)v43 + 10);
        *((void *)v42 + 9) = *((void *)v43 + 9);
        *((void *)v42 + 10) = v48;
        LODWORD(v35) = *((_DWORD *)v43 + 22);
        v42[92] = v43[92];
        *((_DWORD *)v42 + 22) = v35;
        uint64_t v49 = *((void *)v43 + 13);
        *((void *)v42 + 12) = *((void *)v43 + 12);
        *((void *)v42 + 13) = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v50 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v50;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v51 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v51;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)uint64_t v9 = *(void *)v10;
        v9[8] = v10[8];
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        *(_WORD *)(v9 + 25) = *(_WORD *)(v10 + 25);
        uint64_t v52 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v52;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *(void *)uint64_t v9 = *(void *)v10;
        v9[8] = v10[8];
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        *(_WORD *)(v9 + 25) = *(_WORD *)(v10 + 25);
        uint64_t v53 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v53;
        *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for AppAnalyticsAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27DD00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for AppAnalyticsAction.Type(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 1:
      sub_5E94(v5);
      uint64_t v7 = v5 + *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v8 = sub_27D9F0();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(v7, v8);
    case 2:
      return sub_5E94(v5);
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
      goto LABEL_10;
    case 4:
      uint64_t v10 = sub_27D0A0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v5, v10);
      sub_4E04(&qword_326D70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AppAnalyticsAction.Type(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *uint64_t v8 = *v9;
      uint64_t v11 = *((void *)v9 + 2);
      *((void *)v8 + 1) = *((void *)v9 + 1);
      *((void *)v8 + 2) = v11;
      v8[24] = v9[24];
      uint64_t v12 = *((void *)v9 + 5);
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *((void *)v8 + 5) = v12;
      *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
      *((void *)v8 + 8) = *((void *)v9 + 8);
      v8[72] = v9[72];
      *((_DWORD *)v8 + 19) = *((_DWORD *)v9 + 19);
      uint64_t v13 = *((void *)v9 + 11);
      *((void *)v8 + 10) = *((void *)v9 + 10);
      *((void *)v8 + 11) = v13;
      uint64_t v14 = *((void *)v9 + 13);
      *((void *)v8 + 12) = *((void *)v9 + 12);
      *((void *)v8 + 13) = v14;
      uint64_t v15 = *((void *)v9 + 15);
      *((void *)v8 + 14) = *((void *)v9 + 14);
      *((void *)v8 + 15) = v15;
      uint64_t v16 = *((void *)v9 + 17);
      *((void *)v8 + 16) = *((void *)v9 + 16);
      *((void *)v8 + 17) = v16;
      uint64_t v17 = *((void *)v9 + 19);
      *((void *)v8 + 18) = *((void *)v9 + 18);
      *((void *)v8 + 19) = v17;
      v8[164] = v9[164];
      *((_DWORD *)v8 + 40) = *((_DWORD *)v9 + 40);
      uint64_t v18 = *((void *)v9 + 21);
      uint64_t v19 = *((void *)v9 + 22);
      *((void *)v8 + 21) = v18;
      *((void *)v8 + 22) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 1u:
      uint64_t v20 = *((void *)v9 + 5);
      long long v21 = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 24) = v21;
      *((void *)v8 + 5) = v20;
      (**(void (***)(void *, const void *))(v21 - 8))(v8, v9);
      uint64_t v22 = *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v23 = &v8[v22];
      long long v24 = &v9[v22];
      uint64_t v25 = sub_27D9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      goto LABEL_12;
    case 2u:
      uint64_t v26 = *((void *)v9 + 5);
      long long v27 = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 24) = v27;
      *((void *)v8 + 5) = v26;
      (**(void (***)(void *, const void *))(v27 - 8))(v8, v9);
      goto LABEL_12;
    case 3u:
      uint64_t v28 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v28;
      *((void *)v8 + 2) = *((void *)v9 + 2);
      v8[24] = v9[24];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      uint64_t v29 = sub_27D0A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v8, v9, v29);
      uint64_t v30 = sub_4E04(&qword_326D70);
      uint64_t v31 = *(int *)(v30 + 48);
      uint64_t v32 = &v8[v31];
      uint64_t v33 = &v9[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      v32[16] = v33[16];
      uint64_t v35 = *((void *)v33 + 4);
      *((void *)v32 + 3) = *((void *)v33 + 3);
      *((void *)v32 + 4) = v35;
      uint64_t v36 = *((void *)v33 + 6);
      *((void *)v32 + 5) = *((void *)v33 + 5);
      *((void *)v32 + 6) = v36;
      v32[56] = v33[56];
      v32[57] = v33[57];
      *((_DWORD *)v32 + 15) = *((_DWORD *)v33 + 15);
      v32[64] = v33[64];
      *((_DWORD *)v32 + 17) = *((_DWORD *)v33 + 17);
      v32[72] = v33[72];
      *(_DWORD *)(v32 + 73) = *(_DWORD *)(v33 + 73);
      v32[77] = v33[77];
      uint64_t v37 = *((void *)v33 + 11);
      *((void *)v32 + 10) = *((void *)v33 + 10);
      *((void *)v32 + 11) = v37;
      uint64_t v38 = *(int *)(v30 + 64);
      uint64_t v39 = &v8[v38];
      uint64_t v40 = &v9[v38];
      char *v39 = *v40;
      *((_DWORD *)v39 + 1) = *((_DWORD *)v40 + 1);
      uint64_t v41 = *((void *)v40 + 2);
      *((void *)v39 + 1) = *((void *)v40 + 1);
      *((void *)v39 + 2) = v41;
      uint64_t v42 = *((void *)v40 + 4);
      *((void *)v39 + 3) = *((void *)v40 + 3);
      *((void *)v39 + 4) = v42;
      uint64_t v43 = *((void *)v40 + 6);
      *((void *)v39 + 5) = *((void *)v40 + 5);
      *((void *)v39 + 6) = v43;
      uint64_t v44 = *((void *)v40 + 8);
      *((void *)v39 + 7) = *((void *)v40 + 7);
      *((void *)v39 + 8) = v44;
      uint64_t v45 = *((void *)v40 + 10);
      *((void *)v39 + 9) = *((void *)v40 + 9);
      *((void *)v39 + 10) = v45;
      LODWORD(v32) = *((_DWORD *)v40 + 22);
      v39[92] = v40[92];
      *((_DWORD *)v39 + 22) = v32;
      uint64_t v46 = *((void *)v40 + 13);
      *((void *)v39 + 12) = *((void *)v40 + 12);
      *((void *)v39 + 13) = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      uint64_t v47 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v47;
      *((void *)v8 + 2) = *((void *)v9 + 2);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 6u:
      uint64_t v48 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v48;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 7u:
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
      *((void *)v8 + 2) = *((void *)v9 + 2);
      v8[24] = v9[24];
      *(_WORD *)(v8 + 25) = *(_WORD *)(v9 + 25);
      uint64_t v49 = *((void *)v9 + 5);
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *((void *)v8 + 5) = v49;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 8u:
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
      *((void *)v8 + 2) = *((void *)v9 + 2);
      v8[24] = v9[24];
      *(_WORD *)(v8 + 25) = *(_WORD *)(v9 + 25);
      uint64_t v50 = *((void *)v9 + 5);
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *((void *)v8 + 5) = v50;
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_252978(a1 + v7);
    uint64_t v10 = type metadata accessor for AppAnalyticsAction.Type(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        v8[1] = v9[1];
        v8[2] = v9[2];
        *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
        v8[4] = v9[4];
        v8[5] = v9[5];
        v8[6] = v9[6];
        v8[7] = v9[7];
        v8[8] = v9[8];
        *((unsigned char *)v8 + 72) = *((unsigned char *)v9 + 72);
        *((_DWORD *)v8 + 19) = *((_DWORD *)v9 + 19);
        v8[10] = v9[10];
        v8[11] = v9[11];
        v8[12] = v9[12];
        v8[13] = v9[13];
        v8[14] = v9[14];
        v8[15] = v9[15];
        v8[16] = v9[16];
        v8[17] = v9[17];
        v8[18] = v9[18];
        v8[19] = v9[19];
        int v11 = *((_DWORD *)v9 + 40);
        *((unsigned char *)v8 + 164) = *((unsigned char *)v9 + 164);
        *((_DWORD *)v8 + 40) = v11;
        v8[21] = v9[21];
        v8[22] = v9[22];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 1u:
        uint64_t v12 = v9[3];
        v8[3] = v12;
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        (**(void (***)(void *, const void *))(v12 - 8))(v8, v9);
        uint64_t v13 = *(int *)(sub_4E04(&qword_326D68) + 48);
        uint64_t v14 = (char *)v8 + v13;
        uint64_t v15 = (char *)v9 + v13;
        uint64_t v16 = sub_27D9F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        goto LABEL_13;
      case 2u:
        uint64_t v17 = v9[3];
        v8[3] = v17;
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        (**(void (***)(void *, const void *))(v17 - 8))(v8, v9);
        goto LABEL_13;
      case 3u:
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        uint64_t v18 = v9[2];
        *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
        v8[2] = v18;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        uint64_t v19 = sub_27D0A0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v9, v19);
        uint64_t v20 = sub_4E04(&qword_326D70);
        uint64_t v21 = *(int *)(v20 + 48);
        uint64_t v22 = (char *)v8 + v21;
        uint64_t v23 = (char *)v9 + v21;
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = *((void *)v23 + 1);
        unsigned char v22[16] = v23[16];
        *((void *)v22 + 3) = *((void *)v23 + 3);
        *((void *)v22 + 4) = *((void *)v23 + 4);
        *((void *)v22 + 5) = *((void *)v23 + 5);
        *((void *)v22 + 6) = *((void *)v23 + 6);
        v22[56] = v23[56];
        v22[57] = v23[57];
        int v24 = *((_DWORD *)v23 + 15);
        v22[64] = v23[64];
        *((_DWORD *)v22 + 15) = v24;
        LOBYTE(v24) = v23[72];
        *((_DWORD *)v22 + 17) = *((_DWORD *)v23 + 17);
        v22[72] = v24;
        v22[73] = v23[73];
        v22[74] = v23[74];
        v22[75] = v23[75];
        v22[76] = v23[76];
        v22[77] = v23[77];
        *((void *)v22 + 10) = *((void *)v23 + 10);
        *((void *)v22 + 11) = *((void *)v23 + 11);
        uint64_t v25 = *(int *)(v20 + 64);
        uint64_t v26 = (char *)v8 + v25;
        long long v27 = (char *)v9 + v25;
        *uint64_t v26 = *v27;
        *((_DWORD *)v26 + 1) = *((_DWORD *)v27 + 1);
        *((void *)v26 + 1) = *((void *)v27 + 1);
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *((void *)v26 + 3) = *((void *)v27 + 3);
        *((void *)v26 + 4) = *((void *)v27 + 4);
        *((void *)v26 + 5) = *((void *)v27 + 5);
        *((void *)v26 + 6) = *((void *)v27 + 6);
        *((void *)v26 + 7) = *((void *)v27 + 7);
        *((void *)v26 + 8) = *((void *)v27 + 8);
        *((void *)v26 + 9) = *((void *)v27 + 9);
        *((void *)v26 + 10) = *((void *)v27 + 10);
        LODWORD(v22) = *((_DWORD *)v27 + 22);
        v26[92] = v27[92];
        *((_DWORD *)v26 + 22) = v22;
        *((void *)v26 + 12) = *((void *)v27 + 12);
        *((void *)v26 + 13) = *((void *)v27 + 13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        v8[2] = v9[2];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 6u:
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 7u:
        *uint64_t v8 = *v9;
        *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
        v8[2] = v9[2];
        *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
        *((unsigned char *)v8 + 25) = *((unsigned char *)v9 + 25);
        *((unsigned char *)v8 + 26) = *((unsigned char *)v9 + 26);
        v8[4] = v9[4];
        v8[5] = v9[5];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 8u:
        *uint64_t v8 = *v9;
        *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
        v8[2] = v9[2];
        *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
        *((unsigned char *)v8 + 25) = *((unsigned char *)v9 + 25);
        *((unsigned char *)v8 + 26) = *((unsigned char *)v9 + 26);
        v8[4] = v9[4];
        v8[5] = v9[5];
        *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
        *((unsigned char *)v8 + 49) = *((unsigned char *)v9 + 49);
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_252978(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppAnalyticsAction.Type(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AppAnalyticsAction.Type(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v17 = sub_27D0A0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
    uint64_t v18 = sub_4E04(&qword_326D70);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (_OWORD *)((char *)v8 + v19);
    uint64_t v21 = (_OWORD *)((char *)v9 + v19);
    long long v22 = v21[3];
    v20[2] = v21[2];
    v20[3] = v22;
    long long v23 = v21[5];
    v20[4] = v21[4];
    v20[5] = v23;
    long long v24 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v24;
    uint64_t v25 = *(int *)(v18 + 64);
    uint64_t v26 = (_OWORD *)((char *)v8 + v25);
    long long v27 = (_OWORD *)((char *)v9 + v25);
    long long v28 = v27[5];
    v26[4] = v27[4];
    v26[5] = v28;
    v26[6] = v27[6];
    long long v29 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v29;
    long long v30 = v27[3];
    void v26[2] = v27[2];
    v26[3] = v30;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    long long v12 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v12;
    v8[2] = v9[2];
    uint64_t v13 = *(int *)(sub_4E04(&qword_326D68) + 48);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_27D9F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)(a1 + v7);
    uint64_t v9 = (_OWORD *)(a2 + v7);
    sub_252978(a1 + v7);
    uint64_t v10 = type metadata accessor for AppAnalyticsAction.Type(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v17 = sub_27D0A0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
      uint64_t v18 = sub_4E04(&qword_326D70);
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (_OWORD *)((char *)v8 + v19);
      uint64_t v21 = (_OWORD *)((char *)v9 + v19);
      long long v22 = v21[3];
      v20[2] = v21[2];
      v20[3] = v22;
      long long v23 = v21[5];
      v20[4] = v21[4];
      v20[5] = v23;
      long long v24 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v24;
      uint64_t v25 = *(int *)(v18 + 64);
      uint64_t v26 = (_OWORD *)((char *)v8 + v25);
      long long v27 = (_OWORD *)((char *)v9 + v25);
      long long v28 = v27[5];
      v26[4] = v27[4];
      v26[5] = v28;
      v26[6] = v27[6];
      long long v29 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v29;
      long long v30 = v27[3];
      void v26[2] = v27[2];
      v26[3] = v30;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v12 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v12;
      v8[2] = v9[2];
      uint64_t v13 = *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_27D9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_252DD8);
}

uint64_t sub_252DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_27DD00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AppAnalyticsAction.Type(0);
    int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AppAnalyticsAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_252EE4);
}

uint64_t sub_252EE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_27DD00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AppAnalyticsAction.Type(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_252FE8()
{
  uint64_t result = sub_27DD00();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AppAnalyticsAction.Type(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AppAnalyticsAction.Type(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        uint64_t v7 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v7;
        a1[24] = a2[24];
        uint64_t v8 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v8;
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((_DWORD *)a1 + 19) = *((_DWORD *)a2 + 19);
        uint64_t v9 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v9;
        uint64_t v10 = *((void *)a2 + 13);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = v10;
        uint64_t v11 = *((void *)a2 + 15);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = v11;
        uint64_t v12 = *((void *)a2 + 17);
        *((void *)a1 + 16) = *((void *)a2 + 16);
        *((void *)a1 + 17) = v12;
        uint64_t v13 = *((void *)a2 + 19);
        *((void *)a1 + 18) = *((void *)a2 + 18);
        *((void *)a1 + 19) = v13;
        a1[164] = a2[164];
        *((_DWORD *)a1 + 40) = *((_DWORD *)a2 + 40);
        uint64_t v14 = *((void *)a2 + 21);
        uint64_t v15 = *((void *)a2 + 22);
        *((void *)a1 + 21) = v14;
        *((void *)a1 + 22) = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v18 = *((void *)a2 + 5);
        long long v19 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v19;
        *((void *)a1 + 5) = v18;
        (**(void (***)(void *, const void *))(v19 - 8))(a1, a2);
        uint64_t v20 = *(int *)(sub_4E04(&qword_326D68) + 48);
        uint64_t v21 = &a1[v20];
        long long v22 = &a2[v20];
        uint64_t v23 = sub_27D9F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v24 = *((void *)a2 + 5);
        long long v25 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v25;
        *((void *)a1 + 5) = v24;
        (**(void (***)(void *, const void *))(v25 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v26 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v26;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v27 = sub_27D0A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = sub_4E04(&qword_326D70);
        uint64_t v29 = *(int *)(v28 + 48);
        long long v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = *((void *)v31 + 1);
        *(void *)long long v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        v30[16] = v31[16];
        uint64_t v33 = *((void *)v31 + 4);
        *((void *)v30 + 3) = *((void *)v31 + 3);
        *((void *)v30 + 4) = v33;
        uint64_t v34 = *((void *)v31 + 6);
        *((void *)v30 + 5) = *((void *)v31 + 5);
        *((void *)v30 + 6) = v34;
        v30[56] = v31[56];
        v30[57] = v31[57];
        *((_DWORD *)v30 + 15) = *((_DWORD *)v31 + 15);
        v30[64] = v31[64];
        *((_DWORD *)v30 + 17) = *((_DWORD *)v31 + 17);
        v30[72] = v31[72];
        *(_DWORD *)(v30 + 73) = *(_DWORD *)(v31 + 73);
        v30[77] = v31[77];
        uint64_t v35 = *((void *)v31 + 11);
        *((void *)v30 + 10) = *((void *)v31 + 10);
        *((void *)v30 + 11) = v35;
        uint64_t v36 = *(int *)(v28 + 64);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        *uint64_t v37 = *v38;
        *((_DWORD *)v37 + 1) = *((_DWORD *)v38 + 1);
        uint64_t v39 = *((void *)v38 + 2);
        *((void *)v37 + 1) = *((void *)v38 + 1);
        *((void *)v37 + 2) = v39;
        uint64_t v40 = *((void *)v38 + 4);
        *((void *)v37 + 3) = *((void *)v38 + 3);
        *((void *)v37 + 4) = v40;
        uint64_t v41 = *((void *)v38 + 6);
        *((void *)v37 + 5) = *((void *)v38 + 5);
        *((void *)v37 + 6) = v41;
        uint64_t v42 = *((void *)v38 + 8);
        *((void *)v37 + 7) = *((void *)v38 + 7);
        *((void *)v37 + 8) = v42;
        uint64_t v43 = *((void *)v38 + 10);
        *((void *)v37 + 9) = *((void *)v38 + 9);
        *((void *)v37 + 10) = v43;
        LODWORD(v30) = *((_DWORD *)v38 + 22);
        v37[92] = v38[92];
        *((_DWORD *)v37 + 22) = v30;
        uint64_t v44 = *((void *)v38 + 13);
        *((void *)v37 + 12) = *((void *)v38 + 12);
        *((void *)v37 + 13) = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v45 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v45;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v46 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v46;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
        uint64_t v47 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v47;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
        uint64_t v48 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v48;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for AppAnalyticsAction.Type(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 1:
      sub_5E94(a1);
      uint64_t v3 = a1 + *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v4 = sub_27D9F0();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(v3, v4);
    case 2:
      return sub_5E94(a1);
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
      goto LABEL_10;
    case 4:
      uint64_t v6 = sub_27D0A0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      sub_4E04(&qword_326D70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for AppAnalyticsAction.Type(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      uint64_t v6 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v6;
      a1[24] = a2[24];
      uint64_t v7 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v7;
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      a1[72] = a2[72];
      *((_DWORD *)a1 + 19) = *((_DWORD *)a2 + 19);
      uint64_t v8 = *((void *)a2 + 11);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *((void *)a1 + 11) = v8;
      uint64_t v9 = *((void *)a2 + 13);
      *((void *)a1 + 12) = *((void *)a2 + 12);
      *((void *)a1 + 13) = v9;
      uint64_t v10 = *((void *)a2 + 15);
      *((void *)a1 + 14) = *((void *)a2 + 14);
      *((void *)a1 + 15) = v10;
      uint64_t v11 = *((void *)a2 + 17);
      *((void *)a1 + 16) = *((void *)a2 + 16);
      *((void *)a1 + 17) = v11;
      uint64_t v12 = *((void *)a2 + 19);
      *((void *)a1 + 18) = *((void *)a2 + 18);
      *((void *)a1 + 19) = v12;
      a1[164] = a2[164];
      *((_DWORD *)a1 + 40) = *((_DWORD *)a2 + 40);
      uint64_t v13 = *((void *)a2 + 21);
      uint64_t v14 = *((void *)a2 + 22);
      *((void *)a1 + 21) = v13;
      *((void *)a1 + 22) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 1u:
      uint64_t v15 = *((void *)a2 + 5);
      long long v16 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v16;
      *((void *)a1 + 5) = v15;
      (**(void (***)(void *, const void *))(v16 - 8))(a1, a2);
      uint64_t v17 = *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v18 = &a1[v17];
      long long v19 = &a2[v17];
      uint64_t v20 = sub_27D9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      goto LABEL_12;
    case 2u:
      uint64_t v21 = *((void *)a2 + 5);
      long long v22 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v22;
      *((void *)a1 + 5) = v21;
      (**(void (***)(void *, const void *))(v22 - 8))(a1, a2);
      goto LABEL_12;
    case 3u:
      uint64_t v23 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v23;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      uint64_t v24 = sub_27D0A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = sub_4E04(&qword_326D70);
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      v27[16] = v28[16];
      uint64_t v30 = *((void *)v28 + 4);
      *((void *)v27 + 3) = *((void *)v28 + 3);
      *((void *)v27 + 4) = v30;
      uint64_t v31 = *((void *)v28 + 6);
      *((void *)v27 + 5) = *((void *)v28 + 5);
      *((void *)v27 + 6) = v31;
      v27[56] = v28[56];
      v27[57] = v28[57];
      *((_DWORD *)v27 + 15) = *((_DWORD *)v28 + 15);
      v27[64] = v28[64];
      *((_DWORD *)v27 + 17) = *((_DWORD *)v28 + 17);
      v27[72] = v28[72];
      *(_DWORD *)(v27 + 73) = *(_DWORD *)(v28 + 73);
      v27[77] = v28[77];
      uint64_t v32 = *((void *)v28 + 11);
      *((void *)v27 + 10) = *((void *)v28 + 10);
      *((void *)v27 + 11) = v32;
      uint64_t v33 = *(int *)(v25 + 64);
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      *uint64_t v34 = *v35;
      *((_DWORD *)v34 + 1) = *((_DWORD *)v35 + 1);
      uint64_t v36 = *((void *)v35 + 2);
      *((void *)v34 + 1) = *((void *)v35 + 1);
      *((void *)v34 + 2) = v36;
      uint64_t v37 = *((void *)v35 + 4);
      *((void *)v34 + 3) = *((void *)v35 + 3);
      *((void *)v34 + 4) = v37;
      uint64_t v38 = *((void *)v35 + 6);
      *((void *)v34 + 5) = *((void *)v35 + 5);
      *((void *)v34 + 6) = v38;
      uint64_t v39 = *((void *)v35 + 8);
      *((void *)v34 + 7) = *((void *)v35 + 7);
      *((void *)v34 + 8) = v39;
      uint64_t v40 = *((void *)v35 + 10);
      *((void *)v34 + 9) = *((void *)v35 + 9);
      *((void *)v34 + 10) = v40;
      LODWORD(v27) = *((_DWORD *)v35 + 22);
      v34[92] = v35[92];
      *((_DWORD *)v34 + 22) = v27;
      uint64_t v41 = *((void *)v35 + 13);
      *((void *)v34 + 12) = *((void *)v35 + 12);
      *((void *)v34 + 13) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      uint64_t v42 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v42;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 6u:
      uint64_t v43 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v43;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 7u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
      uint64_t v44 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v44;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 8u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
      uint64_t v45 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v45;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for AppAnalyticsAction.Type(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252978((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        *((_DWORD *)a1 + 19) = *((_DWORD *)a2 + 19);
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        a1[19] = a2[19];
        int v6 = *((_DWORD *)a2 + 40);
        *((unsigned char *)a1 + 164) = *((unsigned char *)a2 + 164);
        *((_DWORD *)a1 + 40) = v6;
        a1[21] = a2[21];
        a1[22] = a2[22];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 1u:
        uint64_t v7 = a2[3];
        a1[3] = v7;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        uint64_t v8 = *(int *)(sub_4E04(&qword_326D68) + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_27D9F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        goto LABEL_13;
      case 2u:
        uint64_t v12 = a2[3];
        a1[3] = v12;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        (**(void (***)(void *, const void *))(v12 - 8))(a1, a2);
        goto LABEL_13;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v13 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v13;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        uint64_t v14 = sub_27D0A0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = sub_4E04(&qword_326D70);
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = *((void *)v18 + 1);
        v17[16] = v18[16];
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = *((void *)v18 + 4);
        *((void *)v17 + 5) = *((void *)v18 + 5);
        *((void *)v17 + 6) = *((void *)v18 + 6);
        v17[56] = v18[56];
        v17[57] = v18[57];
        int v19 = *((_DWORD *)v18 + 15);
        v17[64] = v18[64];
        *((_DWORD *)v17 + 15) = v19;
        LOBYTE(v19) = v18[72];
        *((_DWORD *)v17 + 17) = *((_DWORD *)v18 + 17);
        v17[72] = v19;
        v17[73] = v18[73];
        v17[74] = v18[74];
        v17[75] = v18[75];
        v17[76] = v18[76];
        v17[77] = v18[77];
        *((void *)v17 + 10) = *((void *)v18 + 10);
        *((void *)v17 + 11) = *((void *)v18 + 11);
        uint64_t v20 = *(int *)(v15 + 64);
        uint64_t v21 = (char *)a1 + v20;
        long long v22 = (char *)a2 + v20;
        *uint64_t v21 = *v22;
        *((_DWORD *)v21 + 1) = *((_DWORD *)v22 + 1);
        *((void *)v21 + 1) = *((void *)v22 + 1);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *((void *)v21 + 3) = *((void *)v22 + 3);
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *((void *)v21 + 5) = *((void *)v22 + 5);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        *((void *)v21 + 7) = *((void *)v22 + 7);
        *((void *)v21 + 8) = *((void *)v22 + 8);
        *((void *)v21 + 9) = *((void *)v22 + 9);
        *((void *)v21 + 10) = *((void *)v22 + 10);
        LODWORD(v17) = *((_DWORD *)v22 + 22);
        v21[92] = v22[92];
        *((_DWORD *)v21 + 22) = v17;
        *((void *)v21 + 12) = *((void *)v22 + 12);
        *((void *)v21 + 13) = *((void *)v22 + 13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 7u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        *((unsigned char *)a1 + 26) = *((unsigned char *)a2 + 26);
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 8u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        *((unsigned char *)a1 + 26) = *((unsigned char *)a2 + 26);
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for AppAnalyticsAction.Type(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v12 = sub_27D0A0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    uint64_t v13 = sub_4E04(&qword_326D70);
    uint64_t v14 = *(int *)(v13 + 48);
    uint64_t v15 = (_OWORD *)((char *)a1 + v14);
    uint64_t v16 = (_OWORD *)((char *)a2 + v14);
    long long v17 = v16[3];
    void v15[2] = v16[2];
    v15[3] = v17;
    long long v18 = v16[5];
    v15[4] = v16[4];
    v15[5] = v18;
    long long v19 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v19;
    uint64_t v20 = *(int *)(v13 + 64);
    uint64_t v21 = (_OWORD *)((char *)a1 + v20);
    long long v22 = (_OWORD *)((char *)a2 + v20);
    long long v23 = v22[5];
    v21[4] = v22[4];
    v21[5] = v23;
    v21[6] = v22[6];
    long long v24 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v24;
    long long v25 = v22[3];
    v21[2] = v22[2];
    v21[3] = v25;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(sub_4E04(&qword_326D68) + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_27D9F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for AppAnalyticsAction.Type(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252978((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v12 = sub_27D0A0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = sub_4E04(&qword_326D70);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (_OWORD *)((char *)a1 + v14);
      uint64_t v16 = (_OWORD *)((char *)a2 + v14);
      long long v17 = v16[3];
      void v15[2] = v16[2];
      v15[3] = v17;
      long long v18 = v16[5];
      v15[4] = v16[4];
      v15[5] = v18;
      long long v19 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v19;
      uint64_t v20 = *(int *)(v13 + 64);
      uint64_t v21 = (_OWORD *)((char *)a1 + v20);
      long long v22 = (_OWORD *)((char *)a2 + v20);
      long long v23 = v22[5];
      v21[4] = v22[4];
      v21[5] = v23;
      v21[6] = v22[6];
      long long v24 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v24;
      long long v25 = v22[3];
      v21[2] = v22[2];
      v21[3] = v25;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = *(int *)(sub_4E04(&qword_326D68) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_27D9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AppAnalyticsAction.Type(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for AppAnalyticsAction.Type(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_254718()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_254728()
{
  int v5 = &unk_2A9028;
  uint64_t result = sub_27D9F0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    int v6 = &v4;
    long long v7 = &unk_2A9040;
    uint64_t v8 = &unk_2A9058;
    uint64_t result = sub_27D0A0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v9 = &v3;
      uint64_t v10 = &unk_2A90A0;
      uint64_t v11 = &unk_2A90B8;
      uint64_t v12 = &unk_2A90D0;
      uint64_t v13 = &unk_2A90E8;
      uint64_t v14 = &unk_2A9100;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t static ReviewTypeData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x676E69746172;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x776569766572;
      break;
    case 3:
      uint64_t v5 = 0x6E41776569766572;
      unint64_t v4 = 0xEF676E6974615264;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x676E69746172) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x776569766572;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF676E6974615264;
      if (v5 == 0x6E41776569766572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_254A0C()
{
  return 0x7954776569766572;
}

uint64_t sub_254A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7954776569766572 && a2 == 0xEA00000000006570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_254ACC(uint64_t a1)
{
  unint64_t v2 = sub_254C8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_254B08(uint64_t a1)
{
  unint64_t v2 = sub_254C8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReviewTypeData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_326EB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_254C8C();
  sub_27E440();
  char v10 = v7;
  sub_254CE0();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_254C8C()
{
  unint64_t result = qword_326EB8;
  if (!qword_326EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326EB8);
  }
  return result;
}

unint64_t sub_254CE0()
{
  unint64_t result = qword_326EC0;
  if (!qword_326EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326EC0);
  }
  return result;
}

uint64_t ReviewTypeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_326EC8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_254C8C();
  sub_27E430();
  if (!v2)
  {
    sub_254E9C();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_254E9C()
{
  unint64_t result = qword_326ED0;
  if (!qword_326ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326ED0);
  }
  return result;
}

uint64_t sub_254EF8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ReviewTypeData.init(from:)(a1, a2);
}

uint64_t sub_254F10(void *a1)
{
  return ReviewTypeData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for ReviewTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254FF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewTypeData()
{
  return &type metadata for ReviewTypeData;
}

unsigned char *storeEnumTagSinglePayload for ReviewTypeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2550C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewTypeData.CodingKeys()
{
  return &type metadata for ReviewTypeData.CodingKeys;
}

unint64_t sub_255104()
{
  unint64_t result = qword_326ED8;
  if (!qword_326ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326ED8);
  }
  return result;
}

unint64_t sub_25515C()
{
  unint64_t result = qword_326EE0;
  if (!qword_326EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326EE0);
  }
  return result;
}

unint64_t sub_2551B4()
{
  unint64_t result = qword_326EE8;
  if (!qword_326EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326EE8);
  }
  return result;
}

uint64_t DataStack.subscript.getter(uint64_t *a1)
{
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_DB90(v4, v3);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DataStackID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int DataStackID.hashValue.getter()
{
  return sub_27E420();
}

Swift::Int sub_255334()
{
  return sub_27E420();
}

void *sub_25538C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_255398(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a3[1];
  uint64_t v4 = *a1;
  v6[0] = *a3;
  v6[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return DataStack.subscript.setter(v4, v6);
}

uint64_t DataStack.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_257FB0(a1, v4, v3, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
  }
  else
  {
    sub_2570F8(*a2, a2[1]);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t (*DataStack.subscript.modify(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  a1[1] = v2;
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v8 = sub_DB90(v5, v4);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v6 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v10 = 0;
  }
  *a1 = v10;
  return sub_25555C;
}

uint64_t sub_25555C(uint64_t *a1, char a2)
{
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  if (a2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v5;
      *uint64_t v5 = 0x8000000000000000;
      sub_257FB0(v4, v3, v2, isUniquelyReferenced_nonNull_native);
      *uint64_t v5 = v9;
    }
    else
    {
      sub_2570F8(a1[2], v2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4)
    {
      char v7 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v5;
      *uint64_t v5 = 0x8000000000000000;
      sub_257FB0(v4, v3, v2, v7);
      *uint64_t v5 = v10;
    }
    else
    {
      sub_2570F8(a1[2], v2);
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_25569C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v23 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = 32;
    uint64_t v14 = a2;
    while (1)
    {
      uint64_t result = sub_258E80(v23 + v5, (uint64_t)v15);
      unint64_t v7 = *(void *)(a2 + 16);
      if (v4 == v7)
      {
        sub_5E94((uint64_t)v15);
        goto LABEL_9;
      }
      if (v4 >= v7) {
        break;
      }
      sub_258EE4(v15, &v19);
      sub_258E80(a2 + v5, (uint64_t)v22);
      void v15[2] = v21;
      long long v16 = v22[0];
      long long v17 = v22[1];
      long long v18 = v22[2];
      v15[0] = v19;
      v15[1] = v20;
      uint64_t v8 = *((void *)&v20 + 1);
      long long v9 = v21;
      uint64_t v10 = (uint64_t)sub_5900(v15, *((uint64_t *)&v20 + 1));
      uint64_t v11 = *((void *)&v17 + 1);
      long long v12 = v18;
      uint64_t v13 = sub_5900(&v16, *((uint64_t *)&v17 + 1));
      LOBYTE(v10) = sub_78584(v10, (uint64_t)v13, v8, v11, v9, *((uint64_t *)&v9 + 1), v12, *((uint64_t *)&v12 + 1));
      sub_ADCF8((uint64_t)v15, &qword_326F98);
      if ((v10 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      ++v4;
      v5 += 48;
      a2 = v14;
      if (v3 == v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t DataStack.first<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  swift_bridgeObjectRetain();
  sub_4E04(&qword_326EF8);
  sub_13C89C(&qword_326F00, &qword_326EF8);
  sub_27E1A0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_82930(&qword_326F08);
  sub_27E040();
  sub_13C89C(&qword_326F10, &qword_326F08);
  sub_27E120();
  swift_getWitnessTable();
  sub_27E140();
  swift_getWitnessTable();
  sub_27E120();
  sub_13C89C(&qword_326F18, &qword_326F08);
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_27DF70();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_258E80(v6, (uint64_t)v9);
      if (sub_255C28((uint64_t)v9, a2)) {
        break;
      }
      sub_5E94((uint64_t)v9);
      v6 += 48;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_258EE4(v9, v10);
  }
  else
  {
LABEL_6:
    memset(v10, 0, sizeof(v10));
  }
  sub_4E04(&qword_326F80);
  int v7 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v7 ^ 1u, 1, a2);
}

uint64_t sub_255C28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_258E80(v4, (uint64_t)v9);
  sub_4E04(&qword_326F60);
  uint64_t v7 = swift_dynamicCast();
  if (v7) {
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, a2);
  }
  return v7;
}

uint64_t *sub_255D24(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v16 = result[1];
    uint64_t v17 = *result;
    uint64_t v4 = (void *)(a2 + 32);
    unsigned int v19 = enum case for DataEventTrait.onlyOnce(_:);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_258E80((uint64_t)v4, (uint64_t)v24);
      sub_4E04(&qword_326F60);
      sub_4E04(&qword_326F68);
      if (swift_dynamicCast())
      {
        sub_AE174(&v21, (uint64_t)v25);
        sub_46D1C(a3, (uint64_t)&v21, &qword_316210);
        if (*((void *)&v22 + 1))
        {
          sub_AE174(&v21, (uint64_t)v24);
          uint64_t v10 = v26;
          uint64_t v9 = v27;
          sub_5900(v25, v26);
          *(void *)&long long v21 = v17;
          *((void *)&v21 + 1) = v16;
          swift_bridgeObjectRetain();
          sub_27E0D0();
          uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t, uint64_t))(v9 + 24);
          *((void *)&v22 + 1) = v10;
          uint64_t v23 = v9;
          sub_1D81A4((uint64_t *)&v21);
          v11(v20, v24, v10, v9);
          sub_E3F0((uint64_t)v20);
          sub_4E04(&qword_319FE0);
          uint64_t v12 = sub_27D380();
          uint64_t v13 = *(void *)(v12 - 8);
          unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_285930;
          (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, v19, v12);
          sub_27D2E0();
          swift_bridgeObjectRelease();
          sub_5E94((uint64_t)v24);
          sub_5E94((uint64_t)&v21);
          sub_5E94((uint64_t)v25);
          goto LABEL_5;
        }
        sub_ADCF8((uint64_t)&v21, &qword_316210);
        sub_5E94((uint64_t)v25);
      }
      else
      {
        uint64_t v23 = 0;
        long long v21 = 0u;
        long long v22 = 0u;
        sub_ADCF8((uint64_t)&v21, &qword_326F70);
      }
      sub_5900(v4, v4[3]);
      sub_4E04(&qword_319FE0);
      uint64_t v5 = sub_27D380();
      uint64_t v6 = *(void *)(v5 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_285930;
      (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, v19, v5);
      sub_27D2E0();
      swift_bridgeObjectRelease();
LABEL_5:
      v4 += 6;
      if (!--v3) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

unint64_t sub_2560F8()
{
  unint64_t result = sub_46908((uint64_t)_swiftEmptyArrayStorage);
  qword_326EF0 = result;
  return result;
}

uint64_t sub_256120@<X0>(void *a1@<X8>)
{
  if (qword_315D68 != -1) {
    swift_once();
  }
  *a1 = qword_326EF0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_25618C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_258E2C();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues._dataStack.getter()
{
  sub_E444();

  return sub_27DB00();
}

uint64_t EnvironmentValues._dataStack.setter()
{
  return sub_27DB10();
}

uint64_t (*EnvironmentValues._dataStack.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_E444();
  sub_27DB00();
  return sub_2562D8;
}

uint64_t sub_2562D8(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_27DB10();
  }
  swift_bridgeObjectRetain();
  sub_27DB10();

  return swift_bridgeObjectRelease();
}

void static DataStackID.additionalEventData.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000000002B1C40;
}

uint64_t View.appAnalyticsData<A>(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a5;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v10 = sub_27E040();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - v12;
  sub_4E04(&qword_326F20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  uint64_t v15 = (uint64_t *)(v14 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v16 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_OWORD *)(v14 + 48) = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
    *(_OWORD *)uint64_t v15 = 0u;
  }
  else
  {
    uint64_t v17 = v20;
    *(void *)(v14 + 56) = a4;
    *(void *)(v14 + 64) = v17;
    *(void *)(v14 + 72) = v21;
    long long v18 = sub_1D81A4(v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(v18, v13, a4);
  }
  View.appAnalyticsData(_:for:)(v14, a2);
  return swift_bridgeObjectRelease();
}

uint64_t View.appAnalyticsData(_:for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  swift_getKeyPath();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_27DB70();
  swift_release();

  return swift_release();
}

uint64_t sub_256654(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      sub_46D1C(v8, (uint64_t)v25, &qword_326F80);
      sub_258EFC((uint64_t)v25, (uint64_t)&v22);
      if (v23)
      {
        sub_258EE4(&v22, v24);
        sub_258EE4(v24, &v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_266A20(0, v9[2] + 1, 1, v9);
        }
        unint64_t v11 = v9[2];
        unint64_t v10 = v9[3];
        if (v11 >= v10 >> 1) {
          uint64_t v9 = sub_266A20((void *)(v10 > 1), v11 + 1, 1, v9);
        }
        void v9[2] = v11 + 1;
        sub_258EE4(&v22, &v9[6 * v11 + 4]);
      }
      else
      {
        sub_ADCF8((uint64_t)&v22, &qword_326F80);
      }
      v8 += 48;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v5 = a3;
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  v25[0] = v9;
  sub_4E04(&qword_326F88);
  sub_13C89C(&qword_326F90, &qword_326F88);
  if (sub_27DF60())
  {
    uint64_t v12 = *a1;
    if (*(void *)(*a1 + 16))
    {
      swift_bridgeObjectRetain_n();
      unint64_t v13 = sub_DB90(v5, a4);
      if (v14)
      {
        uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        v25[0] = v15;
        sub_256908(v9);
        uint64_t v16 = v25[0];
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v24[0] = *a1;
        *a1 = 0x8000000000000000;
        sub_257FB0(v16, v5, a4, isUniquelyReferenced_nonNull_native);
        uint64_t v18 = *(void *)&v24[0];
LABEL_20:
        *a1 = v18;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    v25[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_257FB0((uint64_t)v9, v5, a4, v19);
    uint64_t v18 = v25[0];
    goto LABEL_20;
  }
  return swift_bridgeObjectRelease();
}

void *sub_256908(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  unint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v1 = v3;
  if (!result || (int64_t v7 = v3[3] >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      int64_t v8 = v4 + v2;
    }
    else {
      int64_t v8 = v4;
    }
    unint64_t result = sub_266A20(result, v8, 1, v3);
    uint64_t v3 = result;
    *(void *)uint64_t v1 = result;
    int64_t v7 = result[3] >> 1;
  }
  uint64_t v9 = v3[2];
  uint64_t v10 = v7 - v9;
  if (!v6[2])
  {
    if (!v2) {
      goto LABEL_19;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v10 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v11 = (unint64_t)&v3[6 * v9 + 4];
  if ((unint64_t)(v6 + 4) < v11 + 48 * v2 && v11 < (unint64_t)&v6[6 * v2 + 4]) {
    goto LABEL_26;
  }
  sub_4E04(&qword_326F60);
  swift_arrayInitWithCopy();
  if (v2)
  {
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, v2);
    uint64_t v15 = v13 + v2;
    if (!v14)
    {
      v3[2] = v15;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    unint64_t result = (void *)sub_27E190();
    __break(1u);
    return result;
  }
LABEL_19:
  unint64_t result = (void *)swift_bridgeObjectRelease();
  if (v2 == v10) {
LABEL_23:
  }
    *(void *)uint64_t v1 = v3;
  return result;
}

uint64_t View.transformAppAnalyticsData<A>(_:for:transform:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  swift_getKeyPath();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a8;
  v16[6] = a9;
  v16[7] = v14;
  v16[8] = v15;
  v16[9] = a3;
  v16[10] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_27DB70();
  swift_release();

  return swift_release();
}

uint64_t sub_256B90(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v53 = a10;
  uint64_t v51 = a5;
  uint64_t v52 = a9;
  uint64_t v17 = sub_27E040();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = *(void *)(a7 - 8);
  uint64_t result = __chkstk_darwin(v18);
  long long v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  if (!*(void *)(*a1 + 16)) {
    return result;
  }
  uint64_t v48 = v22;
  uint64_t v49 = result;
  uint64_t v50 = v21;
  swift_bridgeObjectRetain_n();
  unint64_t v26 = sub_DB90(a2, a3);
  if ((v27 & 1) == 0) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v46 = v24;
  uint64_t v47 = v19;
  uint64_t v28 = *(void **)(*(void *)(v25 + 56) + 8 * v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  uint64_t v29 = v28[2];
  if (!v29)
  {
    return swift_bridgeObjectRelease();
  }
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  for (uint64_t i = 4; ; i += 6)
  {
    uint64_t v32 = v28;
    uint64_t v33 = (uint64_t)&v28[i];
    sub_258E80(v33, (uint64_t)&v54);
    uint64_t v34 = sub_256FD4((uint64_t)&v54, a6, a7);
    sub_5E94((uint64_t)&v54);
    if (v34) {
      break;
    }
    ++v30;
    uint64_t v28 = v32;
    if (v29 == v30) {
      return swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease();
  if (v30 >= v32[2])
  {
    __break(1u);
  }
  else
  {
    sub_258E80(v33, (uint64_t)&v54);
    sub_4E04(&qword_326F60);
    uint64_t v35 = v50;
    char v36 = swift_dynamicCast();
    a8 = v46;
    uint64_t v34 = v47;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    if ((v36 & 1) == 0)
    {
      v37(v35, 1, 1, a7);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v35, v49);
      return swift_bridgeObjectRelease();
    }
    v37(v35, 0, 1, a7);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(a8, v35, a7);
    v45(a8);
    uint64_t v55 = a7;
    uint64_t v56 = v52;
    uint64_t v57 = v53;
    uint64_t v38 = sub_1D81A4((uint64_t *)&v54);
    (*(void (**)(uint64_t *, char *, uint64_t))(v34 + 16))(v38, a8, a7);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result) {
      goto LABEL_15;
    }
  }
  uint64_t result = (uint64_t)sub_2570E4(v32);
  uint64_t v32 = (void *)result;
LABEL_15:
  if (v30 < v32[2])
  {
    sub_5E94((uint64_t)&v32[i]);
    sub_258EE4(&v54, &v32[i]);
    uint64_t v39 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = v43;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v54 = *v40;
    *uint64_t v40 = 0x8000000000000000;
    sub_257FB0((uint64_t)v32, v42, v39, isUniquelyReferenced_nonNull_native);
    *uint64_t v40 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(a8, a7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_256FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  int64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_258E80(v5, (uint64_t)v10);
  sub_4E04(&qword_326F60);
  uint64_t v8 = swift_dynamicCast();
  if (v8) {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, a3);
  }
  return v8;
}

void *sub_2570D0(void *a1)
{
  return sub_266D68(0, a1[2], 0, a1);
}

void *sub_2570E4(void *a1)
{
  return sub_266A20(0, a1[2], 0, a1);
}

uint64_t sub_2570F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_DB90(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_258494();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_270DC4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2571C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4E04(&qword_326FA0);
  char v42 = a2;
  uint64_t v6 = sub_27E170();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    long long v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_27E400();
    sub_27DDF0();
    uint64_t result = sub_27E420();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  long long v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2574F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4E04(&qword_326F58);
  char v36 = a2;
  uint64_t v6 = sub_27E170();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_27E400();
    sub_27DDF0();
    uint64_t result = sub_27E420();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_257808(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4E04(&qword_317620);
  char v36 = a2;
  uint64_t v6 = sub_27E170();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_27E400();
    swift_bridgeObjectRetain();
    sub_27DDF0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_27E420();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_257B30(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_4E04(&qword_326F78);
  char v38 = a2;
  uint64_t v6 = sub_27E170();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_27E400();
    sub_27DDF0();
    uint64_t result = sub_27E420();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_257E40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_E12C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2582DC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_2574F0(v15, a4 & 1);
  unint64_t v21 = sub_E12C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_27E3A0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_257FB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_DB90(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_258494();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_257808(v15, a4 & 1);
  unint64_t v21 = sub_DB90(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_27E3A0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

void *sub_258120()
{
  uint64_t v1 = v0;
  sub_4E04(&qword_326FA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_27E160();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2582DC()
{
  uint64_t v1 = v0;
  sub_4E04(&qword_326F58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_27E160();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_258494()
{
  uint64_t v1 = v0;
  sub_4E04(&qword_317620);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_27E160();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_25864C()
{
  uint64_t v1 = v0;
  sub_4E04(&qword_326F78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_27E160();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s13BookAnalytics9DataStackV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v4 = v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(v3 + 16)) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v10 >= v8) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (!*(void *)(v3 + 16)) {
      goto LABEL_29;
    }
LABEL_19:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v12);
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v12);
    uint64_t v19 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_DB90(v19, v18);
    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + 8 * v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (*(void *)(v17 + 16) != *(void *)(v22 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return 0;
    }
    char v23 = sub_25569C(v17, v22);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_29;
    }
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v8)
  {
LABEL_31:
    swift_release();
    return 1;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_258A48()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_258A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255AE8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_258A6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_258AAC(uint64_t *a1)
{
  return sub_256654(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_258AB8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_258AF8(void *a1)
{
  return sub_256B90(a1, *(void *)(v1 + 56), *(void *)(v1 + 64), *(void (**)(char *))(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

unint64_t sub_258B34()
{
  unint64_t result = qword_326F28;
  if (!qword_326F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326F28);
  }
  return result;
}

unint64_t sub_258B8C()
{
  unint64_t result = qword_326F30;
  if (!qword_326F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326F30);
  }
  return result;
}

void *sub_258BE0()
{
  return &protocol witness table for String;
}

unint64_t sub_258BF0()
{
  unint64_t result = qword_326F38;
  if (!qword_326F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326F38);
  }
  return result;
}

void *sub_258C44()
{
  return &protocol witness table for String;
}

void *sub_258C50()
{
  return &protocol witness table for String;
}

uint64_t sub_258C5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  v7[1] = a2[1];
  v7[2] = v4;
  v7[0] = v5;
  uint64_t result = DataStack.subscript.getter(v7);
  *a3 = result;
  return result;
}

uint64_t sub_258CA8()
{
  return 0;
}

ValueMetadata *type metadata accessor for DataStackID()
{
  return &type metadata for DataStackID;
}

ValueMetadata *type metadata accessor for DataStack()
{
  return &type metadata for DataStack;
}

uint64_t sub_258CE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_258D80()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for DataStackKey()
{
  return &type metadata for DataStackKey;
}

unint64_t sub_258E2C()
{
  unint64_t result = qword_326F50;
  if (!qword_326F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326F50);
  }
  return result;
}

uint64_t sub_258E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_258EE4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_258EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_326F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BookAnalytics::OdpSuggestionType_optional __swiftcall OdpSuggestionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  long long v3 = v1;
  v4._rawValue = &off_2F9EE8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 12;
  if (v5 < 0xC) {
    char v7 = v5;
  }
  *long long v3 = v7;
  return result;
}

unint64_t OdpSuggestionType.rawValue.getter()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6465776569766572;
      break;
    case 2:
      unint64_t result = 0x6465776569766572;
      break;
    case 3:
      unint64_t result = 0x6465776569766572;
      break;
    case 4:
      unint64_t result = 1684104562;
      break;
    case 5:
      unint64_t result = 0x64656873696E6966;
      break;
    case 6:
      unint64_t result = 0x706D615364616572;
      break;
    case 7:
      unint64_t result = 0x6573616863727570;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0x64656C706D6173;
      break;
    case 0xA:
    case 0xB:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259148(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_3067C(*a1, *a2);
}

unint64_t sub_259158()
{
  unint64_t result = qword_326FA8;
  if (!qword_326FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326FA8);
  }
  return result;
}

Swift::Int sub_2591AC()
{
  return sub_27E420();
}

uint64_t sub_259214()
{
  OdpSuggestionType.rawValue.getter();
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_259278()
{
  return sub_27E420();
}

BookAnalytics::OdpSuggestionType_optional sub_2592DC(Swift::String *a1)
{
  return OdpSuggestionType.init(rawValue:)(*a1);
}

unint64_t sub_2592E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = OdpSuggestionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_259310()
{
  return sub_27DED0();
}

uint64_t sub_259370()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for OdpSuggestionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25948CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OdpSuggestionType()
{
  return &type metadata for OdpSuggestionType;
}

unint64_t sub_2594C4()
{
  unint64_t result = qword_326FB0;
  if (!qword_326FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326FB0);
  }
  return result;
}

BookAnalytics::ContentType_optional __swiftcall ContentType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA028;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ContentType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1802465122;
      break;
    case 2:
      uint64_t result = 0x6F6F626F69647561;
      break;
    case 3:
      uint64_t result = 4605008;
      break;
    case 4:
      uint64_t result = 5527636;
      break;
    case 5:
      uint64_t result = 4276809;
      break;
    case 6:
      uint64_t result = 0x694773656E757469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259648(unsigned __int8 *a1, char *a2)
{
  return sub_2DAE4(*a1, *a2);
}

unint64_t sub_259658()
{
  unint64_t result = qword_326FB8;
  if (!qword_326FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326FB8);
  }
  return result;
}

Swift::Int sub_2596AC()
{
  return sub_25C4A4();
}

uint64_t sub_2596B8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2597C0()
{
  return sub_25C4A4();
}

BookAnalytics::ContentType_optional sub_2597C8(Swift::String *a1)
{
  return ContentType.init(rawValue:)(*a1);
}

void sub_2597D4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1802465122;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6F6F626F69647561;
      *(void *)(a1 + 8) = 0xE90000000000006BLL;
      break;
    case 3:
      *(void *)a1 = 4605008;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 4:
      *(void *)a1 = 5527636;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 5:
      *(void *)a1 = 4276809;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 6:
      strcpy((char *)a1, "itunesGiftCard");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_2598C0()
{
  return sub_27DED0();
}

uint64_t sub_259920()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259A3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentType()
{
  return &type metadata for ContentType;
}

unint64_t sub_259A74()
{
  unint64_t result = qword_326FC0;
  if (!qword_326FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_326FC0);
  }
  return result;
}

uint64_t sub_259AC8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_326FC8, &enum case for SessionGroup.default(_:));
}

uint64_t static ExitLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326FC8, a1);
}

uint64_t sub_259B28(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_326FE0, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static ExitLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326FE0, a1);
}

uint64_t ExitLinkTapEvent.externalLinkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_326FF8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ExitLinkTapEvent.externalLinkData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_326FF8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ExitLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExitLinkTapEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ExitLinkTapEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_327080);
}

uint64_t ExitLinkTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExitLinkTapEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ExitLinkTapEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t ExitLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ExitLinkTapEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t ExitLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExitLinkTapEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ExitLinkTapEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_327118);
}

uint64_t ExitLinkTapEvent.Model.init(externalLinkData:eventData:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  uint64_t v5 = (char *)a3 + *(int *)(type metadata accessor for ExitLinkTapEvent.Model(0) + 20);
  uint64_t v6 = sub_27D7C0();
  char v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_259FA4()
{
  if (*v0) {
    return 0x746144746E657665;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_259FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B7E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25A010(uint64_t a1)
{
  unint64_t v2 = sub_25A244();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25A04C(uint64_t a1)
{
  unint64_t v2 = sub_25A244();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ExitLinkTapEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_4E04(&qword_327000);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_25A244();
  sub_27E440();
  uint64_t v9 = v3[1];
  uint64_t v12 = *v3;
  uint64_t v13 = v9;
  v11[15] = 0;
  sub_25A298();
  sub_27E330();
  if (!v2)
  {
    type metadata accessor for ExitLinkTapEvent.Model(0);
    LOBYTE(v12) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25A244()
{
  unint64_t result = qword_327008;
  if (!qword_327008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327008);
  }
  return result;
}

unint64_t sub_25A298()
{
  unint64_t result = qword_327010;
  if (!qword_327010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327010);
  }
  return result;
}

uint64_t ExitLinkTapEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = sub_27D7C0();
  uint64_t v18 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_4E04(&qword_327018);
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ExitLinkTapEvent.Model(0);
  __chkstk_darwin(v8);
  int64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25A244();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v17 = v8;
  unint64_t v11 = v10;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v25 = 0;
  sub_25A5F8();
  uint64_t v14 = v22;
  sub_27E260();
  uint64_t v15 = v24;
  *(void *)unint64_t v11 = v23;
  *((void *)v11 + 1) = v15;
  LOBYTE(v23) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v11[*(int *)(v17 + 20)], v5, v12);
  sub_25A64C((uint64_t)v11, v19);
  sub_5E94((uint64_t)a1);
  return sub_25A6B0((uint64_t)v11);
}

unint64_t sub_25A5F8()
{
  unint64_t result = qword_327020;
  if (!qword_327020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327020);
  }
  return result;
}

uint64_t sub_25A64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExitLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A6B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExitLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A70C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ExitLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_25A724(void *a1)
{
  return ExitLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_25A73C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D70, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_326FC8, a1);
}

uint64_t sub_25A774@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D78, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_326FE0, a1);
}

uint64_t sub_25A7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_4E04(&qword_315DE0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExitLinkTapEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_326FF8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ExitLinkTapEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_4E04(&qword_315DE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_326FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25AD4C);
}

uint64_t sub_25AD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_326FF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ExitLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25AE60);
}

uint64_t sub_25AE60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_326FF8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_25AF6C()
{
  sub_25B034();
  if (v0 <= 0x3F)
  {
    sub_6DA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25B034()
{
  if (!qword_327090)
  {
    sub_25A5F8();
    sub_25A298();
    unint64_t v0 = sub_27D360();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_327090);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ExitLinkTapEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

void *initializeWithCopy for ExitLinkTapEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_27D7C0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ExitLinkTapEvent.Model(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ExitLinkTapEvent.Model(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ExitLinkTapEvent.Model(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_27D7C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExitLinkTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25B3D4);
}

uint64_t sub_25B3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ExitLinkTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25B498);
}

uint64_t sub_25B498(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25B540()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExitLinkTapEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B6A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExitLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for ExitLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_25B6E0()
{
  unint64_t result = qword_327150;
  if (!qword_327150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327150);
  }
  return result;
}

unint64_t sub_25B738()
{
  unint64_t result = qword_327158;
  if (!qword_327158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327158);
  }
  return result;
}

unint64_t sub_25B790()
{
  unint64_t result = qword_327160;
  if (!qword_327160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327160);
  }
  return result;
}

uint64_t sub_25B7E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000000002B1CD0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B8E0(uint64_t a1)
{
  unint64_t v2 = sub_25BDDC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25B91C(uint64_t a1)
{
  unint64_t v2 = sub_25BDDC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DragDropItemData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327168);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  _OWORD v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  sub_5900(a1, a1[3]);
  sub_25BDDC();
  sub_27E440();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_27E2F0();
  if (!v9)
  {
    char v13 = 1;
    sub_27E2F0();
    char v12 = 2;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DragDropItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327178);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25BDDC();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_27E220();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_27E220();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_27E220();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  sub_5E94((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25BDAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DragDropItemData.init(from:)(a1, a2);
}

uint64_t sub_25BDC4(void *a1)
{
  return DragDropItemData.encode(to:)(a1);
}

unint64_t sub_25BDDC()
{
  unint64_t result = qword_327170;
  if (!qword_327170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327170);
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropItemData()
{
  return &type metadata for DragDropItemData;
}

unsigned char *storeEnumTagSinglePayload for DragDropItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25BF14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropItemData.CodingKeys()
{
  return &type metadata for DragDropItemData.CodingKeys;
}

unint64_t sub_25BF50()
{
  unint64_t result = qword_327180;
  if (!qword_327180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327180);
  }
  return result;
}

unint64_t sub_25BFA8()
{
  unint64_t result = qword_327188;
  if (!qword_327188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327188);
  }
  return result;
}

unint64_t sub_25C000()
{
  unint64_t result = qword_327190;
  if (!qword_327190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327190);
  }
  return result;
}

Swift::Int sub_25C054()
{
  return sub_27E420();
}

Swift::Int sub_25C1B0()
{
  return sub_27E420();
}

Swift::Int sub_25C2D0()
{
  return sub_27E420();
}

Swift::Int sub_25C374()
{
  return sub_27E420();
}

Swift::Int sub_25C4A4()
{
  return sub_27E420();
}

Swift::Int sub_25C5C0()
{
  return sub_27E420();
}

Swift::Int sub_25C6FC()
{
  return sub_27E420();
}

Swift::Int sub_25C81C()
{
  return sub_27E420();
}

Swift::Int sub_25C978()
{
  return sub_27E420();
}

Swift::Int sub_25CAD4()
{
  return sub_27E420();
}

Swift::Int sub_25CBC4()
{
  return sub_27E420();
}

Swift::Int sub_25CCD0()
{
  return sub_27E420();
}

Swift::Int sub_25CDFC()
{
  return sub_27E420();
}

Swift::Int sub_25CEE8()
{
  return sub_27E420();
}

Swift::Int sub_25D020()
{
  return sub_27E420();
}

Swift::Int sub_25D16C()
{
  return sub_27E420();
}

Swift::Int sub_25D260()
{
  return sub_27E420();
}

Swift::Int sub_25D3A0()
{
  return sub_27E420();
}

Swift::Int sub_25D4E0()
{
  return sub_27E420();
}

Swift::Int sub_25D590()
{
  return sub_27E420();
}

Swift::Int sub_25D614()
{
  return sub_27E420();
}

Swift::Int sub_25D700()
{
  return sub_27E420();
}

Swift::Int sub_25D834()
{
  return sub_27E420();
}

Swift::Int sub_25D918()
{
  return sub_27E420();
}

Swift::Int sub_25DA30()
{
  return sub_27E420();
}

Swift::Int sub_25DB60()
{
  return sub_27E420();
}

BookAnalytics::SearchMethod_optional __swiftcall SearchMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA0F0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t SearchMethod.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7542686372616573;
      break;
    case 2:
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      uint64_t v2 = 0x736567677573;
      goto LABEL_9;
    case 7:
      uint64_t v2 = 0x636572726F63;
LABEL_9:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25DE14()
{
  unint64_t result = qword_327198;
  if (!qword_327198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327198);
  }
  return result;
}

Swift::Int sub_25DE68()
{
  return sub_25C81C();
}

uint64_t sub_25DE74()
{
  return sub_27C248();
}

Swift::Int sub_25DE7C()
{
  return sub_25C81C();
}

BookAnalytics::SearchMethod_optional sub_25DE84(Swift::String *a1)
{
  return SearchMethod.init(rawValue:)(*a1);
}

uint64_t sub_25DE90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25DEB8()
{
  return sub_27DED0();
}

uint64_t sub_25DF18()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for SearchMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E034);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMethod()
{
  return &type metadata for SearchMethod;
}

unint64_t sub_25E06C()
{
  unint64_t result = qword_3271A0;
  if (!qword_3271A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271A0);
  }
  return result;
}

BookAnalytics::UpSellVariant_optional __swiftcall UpSellVariant.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA1D0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t UpSellVariant.rawValue.getter()
{
  uint64_t v1 = 0x6E6F43664F646E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6F42664F646E65;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_25E184(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_31BE0(*a1, *a2);
}

unint64_t sub_25E194()
{
  unint64_t result = qword_3271A8;
  if (!qword_3271A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271A8);
  }
  return result;
}

Swift::Int sub_25E1E8()
{
  return sub_27E420();
}

uint64_t sub_25E298()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_25E334()
{
  return sub_27E420();
}

BookAnalytics::UpSellVariant_optional sub_25E3E0(Swift::String *a1)
{
  return UpSellVariant.init(rawValue:)(*a1);
}

void sub_25E3EC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEC000000746E6574;
  uint64_t v5 = 0x6E6F43664F646E65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F6F42664F646E65;
    unint64_t v4 = 0xE90000000000006BLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25E458()
{
  return sub_27DED0();
}

uint64_t sub_25E4B8()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for UpSellVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E5D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpSellVariant()
{
  return &type metadata for UpSellVariant;
}

unint64_t sub_25E60C()
{
  unint64_t result = qword_3271B0;
  if (!qword_3271B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271B0);
  }
  return result;
}

BookAnalytics::ViewType_optional __swiftcall ViewType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA238;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t ViewType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7368564;
      break;
    case 2:
      uint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 3:
      uint64_t result = 0x7365746F6ELL;
      break;
    case 4:
      uint64_t result = 0x6867696C68676968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E760(unsigned __int8 *a1, char *a2)
{
  return sub_2BF64(*a1, *a2);
}

unint64_t sub_25E770()
{
  unint64_t result = qword_3271B8;
  if (!qword_3271B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271B8);
  }
  return result;
}

Swift::Int sub_25E7C4()
{
  return sub_27E420();
}

uint64_t sub_25E8B4()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_25E98C()
{
  return sub_27E420();
}

BookAnalytics::ViewType_optional sub_25EA78(Swift::String *a1)
{
  return ViewType.init(rawValue:)(*a1);
}

void sub_25EA84(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7368564;
      goto LABEL_3;
    case 2:
      *a1 = 0x6B72616D6B6F6F62;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x7365746F6ELL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6867696C68676968;
      a1[1] = 0xEA00000000007374;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_25EB38()
{
  return sub_27DED0();
}

uint64_t sub_25EB98()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for ViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25ECB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewType()
{
  return &type metadata for ViewType;
}

unint64_t sub_25ECEC()
{
  unint64_t result = qword_3271C0;
  if (!qword_3271C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271C0);
  }
  return result;
}

uint64_t sub_25ED40()
{
  return 1701667182;
}

uint64_t sub_25ED50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25EDD8(uint64_t a1)
{
  unint64_t v2 = sub_25EF88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25EE14(uint64_t a1)
{
  unint64_t v2 = sub_25EF88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DebugData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_3271C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25EF88();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_25EF88()
{
  unint64_t result = qword_3271D0;
  if (!qword_3271D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271D0);
  }
  return result;
}

uint64_t DebugData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3271D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25EF88();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_25F150()
{
  unint64_t result = qword_3271E0;
  if (!qword_3271E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271E0);
  }
  return result;
}

unint64_t sub_25F1A8()
{
  unint64_t result = qword_3271E8;
  if (!qword_3271E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271E8);
  }
  return result;
}

uint64_t sub_25F1FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for DebugData()
{
  return &type metadata for DebugData;
}

unsigned char *storeEnumTagSinglePayload for DebugData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25F2C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugData.CodingKeys()
{
  return &type metadata for DebugData.CodingKeys;
}

unint64_t sub_25F2FC()
{
  unint64_t result = qword_3271F0;
  if (!qword_3271F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271F0);
  }
  return result;
}

unint64_t sub_25F354()
{
  unint64_t result = qword_3271F8;
  if (!qword_3271F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3271F8);
  }
  return result;
}

unint64_t sub_25F3AC()
{
  unint64_t result = qword_327200;
  if (!qword_327200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327200);
  }
  return result;
}

unint64_t sub_25F404()
{
  unint64_t result = 0x496E6F6974636573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4E6E6F6974636573;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x657A69536C6C6563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F4CC(uint64_t a1)
{
  unint64_t v2 = sub_25FBD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25F508(uint64_t a1)
{
  unint64_t v2 = sub_25FBD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ExposureData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327208);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  uint64_t v8 = v1[4];
  void v12[3] = v1[5];
  void v12[4] = v8;
  uint64_t v9 = v1[6];
  v12[1] = v1[7];
  void v12[2] = v9;
  sub_5900(a1, a1[3]);
  sub_25FBD4();
  sub_27E440();
  char v16 = 0;
  uint64_t v10 = v12[7];
  sub_27E2F0();
  if (!v10)
  {
    char v15 = 1;
    sub_27E2F0();
    char v14 = 2;
    sub_27E2F0();
    char v13 = 3;
    sub_27E290();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ExposureData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327218);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_25FBD4();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v31 = 0;
    uint64_t v9 = sub_27E220();
    uint64_t v12 = v11;
    uint64_t v26 = v9;
    char v30 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_27E220();
    uint64_t v27 = v14;
    uint64_t v25 = v13;
    char v29 = 2;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_27E220();
    uint64_t v24 = v15;
    char v28 = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_27E1C0();
    uint64_t v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v22 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v27;
    *a2 = v26;
    a2[1] = v12;
    uint64_t v21 = v24;
    a2[2] = v25;
    a2[3] = v20;
    a2[4] = v23;
    a2[5] = v21;
    a2[6] = v22;
    a2[7] = v18;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25FA64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExposureData.init(from:)(a1, a2);
}

uint64_t sub_25FA7C(void *a1)
{
  return ExposureData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12ExposureDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[7];
  uint64_t v16 = a2[6];
  uint64_t v17 = a1[6];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_27E370(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_27E370(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10 || (v15 = sub_27E370(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v6)
        {
          if (v11 && (v17 == v16 && v6 == v11 || (sub_27E370() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v11)
        {
          return 1;
        }
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_25FBD4()
{
  unint64_t result = qword_327210;
  if (!qword_327210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327210);
  }
  return result;
}

void *initializeWithCopy for ExposureData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExposureData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ExposureData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExposureData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExposureData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExposureData()
{
  return &type metadata for ExposureData;
}

unsigned char *storeEnumTagSinglePayload for ExposureData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25FF24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExposureData.CodingKeys()
{
  return &type metadata for ExposureData.CodingKeys;
}

unint64_t sub_25FF60()
{
  unint64_t result = qword_327220;
  if (!qword_327220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327220);
  }
  return result;
}

unint64_t sub_25FFB8()
{
  unint64_t result = qword_327228;
  if (!qword_327228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327228);
  }
  return result;
}

unint64_t sub_260010()
{
  unint64_t result = qword_327230;
  if (!qword_327230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327230);
  }
  return result;
}

uint64_t sub_260064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E6E6F6974636573 && a2 == 0xEB00000000656D61 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002ADF40 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69536C6C6563 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_260240()
{
  return 0x7079547261656C63;
}

uint64_t sub_26025C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7079547261656C63 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_260300(uint64_t a1)
{
  unint64_t v2 = sub_26071C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_26033C(uint64_t a1)
{
  unint64_t v2 = sub_26071C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClearedData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327238);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_26071C();
  sub_27E440();
  char v10 = v7;
  sub_260770();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ClearedData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327250);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_26071C();
  sub_27E430();
  if (!v2)
  {
    sub_2607C4();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_260628@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ClearedData.init(from:)(a1, a2);
}

uint64_t sub_260640(void *a1)
{
  return ClearedData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics11ClearedDataV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x796C746E65636572;
  }
  else {
    uint64_t v3 = 0x6553746E65636572;
  }
  if (v2) {
    unint64_t v4 = 0xEE00736568637261;
  }
  else {
    unint64_t v4 = 0xEE00646577656956;
  }
  if (*a2) {
    uint64_t v5 = 0x796C746E65636572;
  }
  else {
    uint64_t v5 = 0x6553746E65636572;
  }
  if (*a2) {
    unint64_t v6 = 0xEE00646577656956;
  }
  else {
    unint64_t v6 = 0xEE00736568637261;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_26071C()
{
  unint64_t result = qword_327240;
  if (!qword_327240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327240);
  }
  return result;
}

unint64_t sub_260770()
{
  unint64_t result = qword_327248;
  if (!qword_327248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327248);
  }
  return result;
}

unint64_t sub_2607C4()
{
  unint64_t result = qword_327258;
  if (!qword_327258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327258);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClearedData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2608ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClearedData()
{
  return &type metadata for ClearedData;
}

unsigned char *storeEnumTagSinglePayload for ClearedData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2609C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClearedData.CodingKeys()
{
  return &type metadata for ClearedData.CodingKeys;
}

unint64_t sub_2609FC()
{
  unint64_t result = qword_327260;
  if (!qword_327260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327260);
  }
  return result;
}

unint64_t sub_260A54()
{
  unint64_t result = qword_327268;
  if (!qword_327268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327268);
  }
  return result;
}

unint64_t sub_260AAC()
{
  unint64_t result = qword_327270;
  if (!qword_327270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327270);
  }
  return result;
}

uint64_t sub_260B00()
{
  return 0x6C616E7265747865;
}

uint64_t sub_260B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6C616E7265747865 && a2 == 0xEB000000006C7255)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_260BD0(uint64_t a1)
{
  unint64_t v2 = sub_260D80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_260C0C(uint64_t a1)
{
  unint64_t v2 = sub_260D80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ExternalLinkData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_327278);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_260D80();
  sub_27E440();
  sub_27E2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_260D80()
{
  unint64_t result = qword_327280;
  if (!qword_327280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327280);
  }
  return result;
}

uint64_t ExternalLinkData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327288);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_260D80();
  sub_27E430();
  if (!v2)
  {
    uint64_t v9 = sub_27E220();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_260F4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExternalLinkData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for ExternalLinkData()
{
  return &type metadata for ExternalLinkData;
}

unsigned char *storeEnumTagSinglePayload for ExternalLinkData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261010);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalLinkData.CodingKeys()
{
  return &type metadata for ExternalLinkData.CodingKeys;
}

unint64_t sub_26104C()
{
  unint64_t result = qword_327290;
  if (!qword_327290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327290);
  }
  return result;
}

unint64_t sub_2610A4()
{
  unint64_t result = qword_327298;
  if (!qword_327298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327298);
  }
  return result;
}

unint64_t sub_2610FC()
{
  unint64_t result = qword_3272A0;
  if (!qword_3272A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3272A0);
  }
  return result;
}

BookAnalytics::SearchSuggestionData __swiftcall SearchSuggestionData.init(suggestionsReturnedCount:searchSuggestionSummary:)(Swift::Int32 suggestionsReturnedCount, Swift::OpaquePointer searchSuggestionSummary)
{
  *(_DWORD *)uint64_t v2 = suggestionsReturnedCount;
  *(Swift::OpaquePointer *)(v2 + 8) = searchSuggestionSummary;
  result.searchSuggestionSummary = searchSuggestionSummary;
  result.suggestionsReturnedCount = suggestionsReturnedCount;
  return result;
}

uint64_t static SearchSuggestionData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2) {
    return sub_81140(*(void *)(a1 + 8), *(void *)(a2 + 8));
  }
  else {
    return 0;
  }
}

unint64_t sub_261180()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_2611BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2619E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2611E4(uint64_t a1)
{
  unint64_t v2 = sub_261420();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_261220(uint64_t a1)
{
  unint64_t v2 = sub_261420();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchSuggestionData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3272A8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_261420();
  sub_27E440();
  char v11 = 0;
  sub_27E340();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    sub_4E04(&qword_3272B8);
    sub_26166C(&qword_3272C0, (void (*)(void))sub_19DCAC);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_261420()
{
  unint64_t result = qword_3272B0;
  if (!qword_3272B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3272B0);
  }
  return result;
}

uint64_t SearchSuggestionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3272C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_261420();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    int v9 = sub_27E270();
    sub_4E04(&qword_3272B8);
    char v13 = 1;
    sub_26166C(&qword_3272D0, (void (*)(void))sub_19DC54);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(_DWORD *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_26166C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_82930(&qword_3272B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2616E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSuggestionData.init(from:)(a1, a2);
}

uint64_t sub_2616FC(void *a1)
{
  return SearchSuggestionData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for SearchSuggestionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSuggestionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchSuggestionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchSuggestionData()
{
  return &type metadata for SearchSuggestionData;
}

unsigned char *storeEnumTagSinglePayload for SearchSuggestionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2618A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionData.CodingKeys()
{
  return &type metadata for SearchSuggestionData.CodingKeys;
}

unint64_t sub_2618E4()
{
  unint64_t result = qword_3272D8;
  if (!qword_3272D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3272D8);
  }
  return result;
}

unint64_t sub_26193C()
{
  unint64_t result = qword_3272E0;
  if (!qword_3272E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3272E0);
  }
  return result;
}

unint64_t sub_261994()
{
  unint64_t result = qword_3272E8;
  if (!qword_3272E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3272E8);
  }
  return result;
}

uint64_t sub_2619E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000000002B1CF0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000002B1D10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t View.collectAppAnalyticsExposure(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v39 = a1;
  uint64_t v43 = a4;
  uint64_t v38 = *(void *)(a2 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for ExposureViewModifier();
  __chkstk_darwin(v10);
  char v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_27DAB0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = sub_27DB40();
  uint64_t v42 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v41 = (char *)&v38 - v21;
  sub_46D1C(v39, (uint64_t)&v53, &qword_326F80);
  if (v54)
  {
    sub_258EE4(&v53, v55);
    sub_258E80((uint64_t)v55, (uint64_t)&v53);
    uint64_t v22 = swift_allocObject();
    sub_258EE4(&v53, (_OWORD *)(v22 + 16));
    sub_2633B0((uint64_t)sub_262424, v22, 0, (uint64_t)v12);
    uint64_t v39 = v20;
    uint64_t v23 = v44;
    sub_27DB80();
    sub_26242C((uint64_t)v12);
    uint64_t v24 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
    uint64_t v45 = v23;
    uint64_t v46 = v24;
    swift_getWitnessTable();
    uint64_t v25 = *(void (**)(void, void, void))(v14 + 16);
    v25(v19, v17, v13);
    uint64_t v26 = *(void (**)(void, void))(v14 + 8);
    v26(v17, v13);
    v25(v17, v19, v13);
    uint64_t v27 = v41;
    uint64_t v20 = v39;
    sub_2621FC((uint64_t)v17, v13);
    v26(v17, v13);
    v26(v19, v13);
    sub_5E94((uint64_t)v55);
  }
  else
  {
    sub_ADCF8((uint64_t)&v53, &qword_326F80);
    uint64_t v28 = v38;
    char v29 = *(void (**)(void, void, void))(v38 + 16);
    v29(v9, v40, a2);
    v29(v7, v9, a2);
    uint64_t v30 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
    uint64_t v51 = v44;
    uint64_t v52 = v30;
    swift_getWitnessTable();
    char v31 = v41;
    sub_2622F4((uint64_t)v7, v13, a2);
    uint64_t v32 = *(void (**)(void, void))(v28 + 8);
    id v33 = v7;
    uint64_t v27 = v31;
    v32(v33, a2);
    v32(v9, a2);
  }
  uint64_t v34 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
  uint64_t v35 = v44;
  uint64_t v49 = v44;
  uint64_t v50 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = v35;
  swift_getWitnessTable();
  uint64_t v36 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v43, v27, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v27, v20);
}

uint64_t type metadata accessor for ExposureViewModifier()
{
  uint64_t result = qword_327358;
  if (!qword_327358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_262118(uint64_t a1, uint64_t a2)
{
  sub_258E80(a2, (uint64_t)v9);
  int v3 = (void *)(a1 + 16);
  swift_beginAccess();
  unsigned int v4 = *(void **)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unsigned int v4 = sub_266A20(0, v4[2] + 1, 1, v4);
    *int v3 = v4;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    unsigned int v4 = sub_266A20((void *)(v6 > 1), v7 + 1, 1, v4);
    *int v3 = v4;
  }
  v4[2] = v7 + 1;
  sub_258EE4(v9, &v4[6 * v7 + 4]);
  return swift_endAccess();
}

uint64_t sub_2621FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27DB20();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_27DB30();
}

uint64_t sub_2622F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_27DB20();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_27DB30();
}

uint64_t sub_2623EC()
{
  sub_5E94(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_262424(uint64_t a1)
{
  return sub_262118(a1, v1 + 16);
}

uint64_t sub_26242C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExposureViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.emitAppAnalyticsExposureEvent<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v50 = a6;
  uint64_t v43 = *(void *)(a2 - 8);
  uint64_t v44 = a3;
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v41 - v11;
  uint64_t v12 = type metadata accessor for ExposureViewModifier();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_27DAB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = sub_27DB40();
  uint64_t v48 = *(void *)(v22 - 8);
  uint64_t v49 = v22;
  __chkstk_darwin(v22);
  uint64_t v47 = (char *)&v41 - v23;
  if (a1)
  {
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v44;
    v24[2] = a2;
    long long v24[3] = v25;
    uint64_t v26 = v45;
    v24[4] = a4;
    v24[5] = v26;
    v24[6] = a1;
    sub_2633B0((uint64_t)sub_262C24, (uint64_t)v24, 1, (uint64_t)v14);
    sub_27DB80();
    sub_26242C((uint64_t)v14);
    uint64_t v27 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
    uint64_t v51 = a4;
    uint64_t v52 = v27;
    swift_getWitnessTable();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v28(v21, v19, v15);
    char v29 = *(void (**)(char *, uint64_t))(v16 + 8);
    v29(v19, v15);
    v28(v19, v21, v15);
    uint64_t v30 = v47;
    sub_2621FC((uint64_t)v19, v15);
    v29(v19, v15);
    v29(v21, v15);
  }
  else
  {
    uint64_t v31 = v43;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    id v33 = v41;
    v32(v41, v46, a2);
    uint64_t v34 = (uint64_t)v42;
    v32(v42, (uint64_t)v33, a2);
    uint64_t v35 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
    uint64_t v57 = a4;
    uint64_t v58 = v35;
    swift_getWitnessTable();
    uint64_t v30 = v47;
    sub_2622F4(v34, v15, a2);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v36(v34, a2);
    v36((uint64_t)v33, a2);
  }
  uint64_t v37 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
  uint64_t v55 = a4;
  uint64_t v56 = v37;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v54 = a4;
  uint64_t v38 = v49;
  swift_getWitnessTable();
  uint64_t v39 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v50, v30, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v30, v38);
}

uint64_t sub_2629F0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v15 = sub_27D0A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v28 = *a2;
    uint64_t result = BATracker.copy()();
    if (result)
    {
      uint64_t v20 = (void *)result;
      uint64_t v27 = a9;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v15);
      sub_46D1C(a3, (uint64_t)v31, &qword_316210);
      unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v23 = (char *)swift_allocObject();
      *((void *)v23 + 2) = a6;
      *((void *)v23 + 3) = a7;
      uint64_t v24 = v27;
      *((void *)v23 + 4) = v30;
      *((void *)v23 + 5) = v24;
      *((void *)v23 + 6) = v29;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v23[v21], v19, v15);
      *(void *)&v23[v22] = v28;
      sub_E0B8((uint64_t)v31, (uint64_t)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8]);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_267070;
      *(void *)(v25 + 24) = v23;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_27D730();
      swift_release();

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_262C14()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_262C24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2629F0(a1, a2, a3, a4, v4[6], v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_262C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_27D2D0();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_2754FC(v14, (void (*)(void *, uint64_t))sub_267178);
  swift_bridgeObjectRelease();
  return sub_262D14(a1, a2, a6, a7, a8, a9);
}

uint64_t sub_262D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  memset(v12, 0, sizeof(v12));
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  _OWORD v10[3] = a4;
  void v10[4] = a5;
  v10[5] = a6;
  sub_27D2F0();
  swift_release();
  return sub_ADCF8((uint64_t)v12, (uint64_t *)&unk_320320);
}

void sub_262DDC(uint64_t a1)
{
  uint64_t v2 = sub_27D2C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v30 - v7;
  uint64_t v9 = sub_27D4B0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)v30 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v30 - v11, a1, v9);
  int v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for EventSubmitResult.success<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v8, v12, v2);
    if (qword_315678 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_27D9B0();
    sub_4BD4(v14, (uint64_t)qword_3187C0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v15 = sub_27D990();
    os_log_type_t v16 = sub_27DFC0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      v30[1] = v17 + 4;
      uint64_t v18 = sub_27D2B0();
      uint64_t v31 = sub_12D450(v18, v19, &v32);
      sub_27E050();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v20(v6, v2);
      _os_log_impl(&dword_0, v15, v16, "Reported %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v20(v6, v2);
    }
    v20(v8, v2);
  }
  else if (v13 == enum case for EventSubmitResult.failed<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v21 = *v12;
    if (qword_315678 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_27D9B0();
    sub_4BD4(v22, (uint64_t)qword_3187C0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v23 = sub_27D990();
    os_log_type_t v24 = sub_27DFA0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v26 = sub_27E470();
      uint64_t v31 = sub_12D450(v26, v27, &v32);
      sub_27E050();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v31 = v21;
      swift_errorRetain();
      sub_4E04(&qword_31FBB8);
      uint64_t v28 = sub_27DDC0();
      uint64_t v31 = sub_12D450(v28, v29, &v32);
      sub_27E050();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v23, v24, "Unable to submit %s: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_2633B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v26 = a3;
  uint64_t v7 = sub_4E04(&qword_320080);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v25[-v11];
  LOBYTE(v27) = 0;
  sub_27DBF0();
  uint64_t v13 = v29;
  *(unsigned char *)(a4 + 24) = v28;
  *(void *)(a4 + 32) = v13;
  uint64_t v14 = (int *)type metadata accessor for ExposureViewModifier();
  uint64_t v15 = sub_27D0A0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  sub_46D1C((uint64_t)v12, (uint64_t)v10, &qword_320080);
  sub_27DBF0();
  sub_ADCF8((uint64_t)v12, &qword_320080);
  uint64_t v16 = a4 + v14[7];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a4 + v14[8];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a4 + v14[9];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 40) = 0;
  uint64_t v19 = a4 + v14[10];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a4 + v14[11];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  id v21 = [self standardUserDefaults];
  LOBYTE(v28) = 0;
  sub_27D8C0();
  uint64_t v22 = (void *)(a4 + v14[13]);
  uint64_t v27 = sub_27DBA0();
  uint64_t result = sub_27DBF0();
  uint64_t v24 = v29;
  *uint64_t v22 = v28;
  v22[1] = v24;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v26;
  return result;
}

uint64_t View.emitAppAnalyticsExposureEvent<A>(_:attaching:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v20[1] = a8;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  type metadata accessor for ExposureViewModifier();
  sub_27DAB0();
  sub_27DB40();
  uint64_t v13 = sub_27DBE0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v20 - v15;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = v20[0];
  uint64_t v28 = a1;
  uint64_t v17 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
  uint64_t v32 = a6;
  uint64_t v33 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = a6;
  uint64_t v18 = swift_getWitnessTable();
  sub_27DBD0();
  uint64_t v29 = v18;
  swift_getWitnessTable();
  View.appAnalyticsData(_:for:)(v21, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_263854@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  type metadata accessor for ExposureViewModifier();
  sub_27DAB0();
  uint64_t v10 = sub_27DB40();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  View.emitAppAnalyticsExposureEvent<A>(_:)(a1, a2, a3, a4, v21, (uint64_t)v14);
  uint64_t v17 = sub_266F4C(&qword_3272F0, (void (*)(uint64_t))type metadata accessor for ExposureViewModifier);
  uint64_t v25 = a4;
  uint64_t v26 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = a4;
  swift_getWitnessTable();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v18(v16, v14, v10);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v18(v22, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_263A68@<X0>(char *a1@<X8>)
{
  return sub_263854(v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_263A78()
{
  return swift_getWitnessTable();
}

uint64_t sub_263B54()
{
  return swift_getWitnessTable();
}

uint64_t sub_263C34()
{
  return swift_getWitnessTable();
}

void *sub_263DBC(void *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_264100();
    *uint64_t v4 = v7;
    v4[1] = v8;
    *((unsigned char *)v4 + 16) = v9;
    *((unsigned char *)v4 + 24) = *((unsigned char *)a2 + 24);
    v4[4] = a2[4];
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_27D0A0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = sub_4E04(&qword_320080);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v18 = sub_4E04(&qword_3272F8);
    *(void *)&v11[*(int *)(v18 + 28)] = *(void *)&v12[*(int *)(v18 + 28)];
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(void **)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    swift_retain();
    sub_264108(v22, v23);
    *(void *)uint64_t v20 = v22;
    v20[8] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = *(void *)v26;
    char v28 = *(unsigned char *)(v26 + 8);
    sub_D328(*(void *)v26, v28);
    *(void *)uint64_t v25 = v27;
    v25[8] = v28;
    uint64_t v29 = a3[9];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    if (*((unsigned char *)a2 + v29 + 40))
    {
      uint64_t v32 = *(void *)(v31 + 24);
      if (v32)
      {
        uint64_t v33 = *(void *)(v31 + 32);
        *((void *)v30 + 3) = v32;
        *((void *)v30 + 4) = v33;
        (**(void (***)(char *))(v32 - 8))(v30);
      }
      else
      {
        long long v34 = *(_OWORD *)(v31 + 16);
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        *((_OWORD *)v30 + 1) = v34;
        *((void *)v30 + 4) = *(void *)(v31 + 32);
      }
      v30[40] = 1;
    }
    else
    {
      *(void *)uint64_t v30 = *(void *)v31;
      v30[40] = 0;
      swift_retain();
    }
    uint64_t v35 = a3[10];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = *v37;
    char v39 = *((unsigned char *)v37 + 8);
    j__swift_retain();
    *(void *)uint64_t v36 = v38;
    v36[8] = v39;
    uint64_t v40 = a3[11];
    uint64_t v41 = a3[12];
    uint64_t v42 = (char *)v4 + v40;
    uint64_t v43 = (uint64_t *)((char *)a2 + v40);
    uint64_t v44 = *v43;
    LOBYTE(v43) = *((unsigned char *)v43 + 8);
    *(void *)uint64_t v42 = v44;
    v42[8] = (char)v43;
    uint64_t v45 = (char *)v4 + v41;
    uint64_t v46 = (uint64_t)a2 + v41;
    swift_retain();
    uint64_t v47 = sub_4E04((uint64_t *)&unk_3203A0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[13];
    uint64_t v49 = (void *)((char *)v4 + v48);
    uint64_t v50 = (uint64_t *)((char *)a2 + v48);
    uint64_t v51 = v50[1];
    void *v49 = *v50;
    v49[1] = v51;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_264100()
{
  return swift_retain();
}

id sub_264108(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_264118(uint64_t a1, int *a2)
{
  sub_2642D0();
  swift_release();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_27D0A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  sub_4E04(&qword_3272F8);
  swift_release();
  sub_E120(*(id *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_D334(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v7 = a1 + a2[9];
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      sub_5E94(v7);
    }
  }
  else
  {
    swift_release();
  }
  j__swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_2642D0()
{
  return swift_release();
}

uint64_t sub_2642D8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_264100();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = a2[4];
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_4E04(&qword_320080);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = sub_4E04(&qword_3272F8);
  *(void *)&v10[*(int *)(v16 + 28)] = *(void *)&v11[*(int *)(v16 + 28)];
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = *(void **)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  swift_retain();
  sub_264108(v20, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t)a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_D328(*(void *)v24, v26);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t)a2 + v27;
  if (*((unsigned char *)a2 + v27 + 40))
  {
    uint64_t v30 = *(void *)(v29 + 24);
    if (v30)
    {
      uint64_t v31 = *(void *)(v29 + 32);
      *(void *)(v28 + 24) = v30;
      *(void *)(v28 + 32) = v31;
      (**(void (***)(uint64_t))(v30 - 8))(v28);
    }
    else
    {
      long long v32 = *(_OWORD *)(v29 + 16);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 16) = v32;
      *(void *)(v28 + 32) = *(void *)(v29 + 32);
    }
    *(unsigned char *)(v28 + 40) = 1;
  }
  else
  {
    *(void *)uint64_t v28 = *(void *)v29;
    *(unsigned char *)(v28 + 40) = 0;
    swift_retain();
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  uint64_t v36 = *v35;
  char v37 = *((unsigned char *)v35 + 8);
  j__swift_retain();
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = v37;
  uint64_t v38 = a3[11];
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = (uint64_t *)((char *)a2 + v38);
  uint64_t v42 = *v41;
  LOBYTE(v41) = *((unsigned char *)v41 + 8);
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = (_BYTE)v41;
  uint64_t v43 = a1 + v39;
  uint64_t v44 = (uint64_t)a2 + v39;
  swift_retain();
  uint64_t v45 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = a3[13];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)((char *)a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2645D0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_264100();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_2642D0();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_27D0A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_4E04(&qword_320080);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = sub_4E04(&qword_3272F8);
  *(void *)&v10[*(int *)(v18 + 28)] = *(void *)&v11[*(int *)(v18 + 28)];
  swift_retain();
  swift_release();
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  id v22 = *(id *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_264108(*(id *)v21, v23);
  uint64_t v24 = *(void **)v20;
  char v25 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  sub_E120(v24, v25);
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t)a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_D328(*(void *)v28, v30);
  uint64_t v31 = *(void *)v27;
  char v32 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v30;
  sub_D334(v31, v32);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v33 = a3[9];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = (long long *)((char *)a2 + v33);
    sub_ADCF8(a1 + v33, &qword_316208);
    if (*((unsigned char *)v35 + 40))
    {
      uint64_t v36 = *((void *)v35 + 3);
      if (v36)
      {
        *(void *)(v34 + 24) = v36;
        *(void *)(v34 + 32) = *((void *)v35 + 4);
        (**(void (***)(uint64_t, long long *))(v36 - 8))(v34, v35);
      }
      else
      {
        long long v37 = *v35;
        long long v38 = v35[1];
        *(void *)(v34 + 32) = *((void *)v35 + 4);
        *(_OWORD *)uint64_t v34 = v37;
        *(_OWORD *)(v34 + 16) = v38;
      }
      *(unsigned char *)(v34 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)((char *)a2 + v39);
  uint64_t v42 = *v41;
  char v43 = *((unsigned char *)v41 + 8);
  j__swift_retain();
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v43;
  j__swift_release();
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  uint64_t v47 = *v46;
  LOBYTE(v46) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(v45 + 8) = (_BYTE)v46;
  swift_retain();
  swift_release();
  uint64_t v48 = a3[12];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t)a2 + v48;
  uint64_t v51 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  uint64_t v52 = a3[13];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = (uint64_t)a2 + v52;
  *(void *)(a1 + v52) = *(uint64_t *)((char *)a2 + v52);
  swift_retain();
  swift_release();
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2649B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  char v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_27D0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_4E04(&qword_320080);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = sub_4E04(&qword_3272F8);
  *(void *)&v7[*(int *)(v12 + 28)] = *(void *)&v8[*(int *)(v12 + 28)];
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = (_OWORD *)(a1 + v19);
  id v22 = (_OWORD *)(a2 + v19);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  *(_OWORD *)((char *)v21 + 25) = *(_OWORD *)((char *)v22 + 25);
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  uint64_t v32 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_264BD8(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_2642D0();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v7 = a3[6];
  char v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_27D0A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_4E04(&qword_320080);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = sub_4E04(&qword_3272F8);
  *(void *)&v8[*(int *)(v16 + 28)] = *(void *)&v9[*(int *)(v16 + 28)];
  swift_release();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  uint64_t v21 = *(void **)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = (_BYTE)v19;
  sub_E120(v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = (_BYTE)v25;
  sub_D334(v27, v28);
  if (a1 != a2)
  {
    uint64_t v29 = a3[9];
    uint64_t v30 = (_OWORD *)(a2 + v29);
    uint64_t v31 = (_OWORD *)(a1 + v29);
    sub_ADCF8(a1 + v29, &qword_316208);
    long long v32 = v30[1];
    *uint64_t v31 = *v30;
    v31[1] = v32;
    *(_OWORD *)((char *)v31 + 25) = *(_OWORD *)((char *)v30 + 25);
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  j__swift_release();
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;
  swift_release();
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = a3[13];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (void *)(a2 + v45);
  *(void *)(a1 + v45) = *v47;
  swift_release();
  *(void *)(v46 + 8) = v47[1];
  swift_release();
  return a1;
}

uint64_t sub_264EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_264F0C);
}

uint64_t sub_264F0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_3272F8);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_4E04((uint64_t *)&unk_3203A0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[12];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[13]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_265024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_265038);
}

uint64_t sub_265038(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_3272F8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = sub_4E04((uint64_t *)&unk_3203A0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[13]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[12];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_26514C()
{
  sub_265248();
  if (v0 <= 0x3F)
  {
    sub_2652A4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_265248()
{
  if (!qword_327368)
  {
    sub_82930(&qword_320080);
    unint64_t v0 = sub_27DC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_327368);
    }
  }
}

void sub_2652A4()
{
  if (!qword_327370)
  {
    unint64_t v0 = sub_27D8B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_327370);
    }
  }
}

uint64_t sub_2652FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_265318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v47 = a2;
  uint64_t v46 = type metadata accessor for ExposureViewModifier();
  uint64_t v3 = *(void *)(v46 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v46);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_3273C0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_4E04(&qword_3273C8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_27DC30();
  uint64_t v15 = v14;
  sub_266544(v2, (uint64_t)v5);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  uint64_t v43 = v16 | 7;
  uint64_t v44 = v17 + v4;
  uint64_t v18 = swift_allocObject();
  sub_2665AC((uint64_t)v5, v18 + v17);
  uint64_t v19 = sub_4E04(&qword_3273D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v45, v19);
  uint64_t v20 = (uint64_t (**)@<X0>(BOOL *@<X8>))&v9[*(int *)(v7 + 44)];
  *uint64_t v20 = sub_265724;
  v20[1] = 0;
  void v20[2] = (uint64_t (*)@<X0>(BOOL *@<X8>))sub_266610;
  v20[3] = (uint64_t (*)@<X0>(BOOL *@<X8>))v18;
  v20[4] = (uint64_t (*)@<X0>(BOOL *@<X8>))v42;
  v20[5] = v15;
  uint64_t v21 = v46;
  uint64_t v22 = v2;
  LOBYTE(v18) = *(unsigned char *)(v2 + *(int *)(v46 + 44) + 8);
  uint64_t v23 = swift_retain();
  uint64_t v24 = sub_D340(v23, v18);
  swift_release();
  uint64_t v48 = *(void *)(v24 + 40);
  sub_4E04(&qword_31E0E8);
  sub_13C89C(&qword_31E0F0, &qword_31E0E8);
  uint64_t v25 = v21;
  uint64_t v26 = sub_27D9E0();
  uint64_t v27 = v22;
  swift_release();
  sub_266544(v22, (uint64_t)v5);
  uint64_t v28 = swift_allocObject();
  sub_2665AC((uint64_t)v5, v28 + v17);
  sub_46D1C((uint64_t)v9, (uint64_t)v13, &qword_3273C0);
  *(void *)&v13[*(int *)(v11 + 60)] = v26;
  uint64_t v29 = (uint64_t (**)(uint64_t))&v13[*(int *)(v11 + 64)];
  *uint64_t v29 = sub_266860;
  v29[1] = (uint64_t (*)(uint64_t))v28;
  sub_ADCF8((uint64_t)v9, &qword_3273C0);
  uint64_t v30 = sub_27DC30();
  uint64_t v32 = v31;
  sub_4E04((uint64_t *)&unk_3203A0);
  sub_27D890();
  uint64_t KeyPath = 0;
  uint64_t v34 = 0;
  if (v48 == 1)
  {
    uint64_t v35 = (uint64_t *)(v27 + *(int *)(v25 + 52));
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    uint64_t v48 = v37;
    uint64_t v49 = v36;
    sub_4E04(&qword_3273E0);
    sub_27DC00();
    uint64_t v34 = sub_27DBC0();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
  }
  uint64_t v38 = v47;
  sub_46D1C((uint64_t)v13, v47, &qword_3273C8);
  uint64_t v39 = v38 + *(int *)(sub_4E04(&qword_3273D8) + 36);
  *(void *)uint64_t v39 = KeyPath;
  *(void *)(v39 + 8) = v34;
  *(unsigned char *)(v39 + 16) = 0;
  *(void *)(v39 + 24) = v30;
  *(void *)(v39 + 32) = v32;
  return sub_ADCF8((uint64_t)v13, &qword_3273C8);
}

uint64_t sub_265724@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_27DA70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CoordinateSpace.global(_:), v2);
  sub_27DA30();
  double v6 = *(double *)&v13[3];
  double v7 = *(double *)&v13[4];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_27DA40();
  double v9 = v7 / v8;
  uint64_t result = sub_27DA40();
  double v12 = v6 / v11;
  if (v12 >= v9) {
    double v12 = v9;
  }
  *a1 = v12 > 0.5;
  return result;
}

uint64_t sub_265858(unsigned char *a1, uint64_t a2)
{
  if (*a1 != 1)
  {
    int v9 = 0;
    return sub_26597C(v9);
  }
  sub_4E04(&qword_3273E8);
  sub_27DC10();
  char v3 = *(unsigned char *)(a2 + *(int *)(type metadata accessor for ExposureViewModifier() + 44) + 8);
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_D340(v4, v3);
  swift_release();
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 16);
  swift_release();
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  char v7 = sub_27E370();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_7:
    int v9 = 1;
    return sub_26597C(v9);
  }
  return result;
}

uint64_t sub_26597C(int a1)
{
  LODWORD(v76) = a1;
  uint64_t v1 = sub_27D0A0();
  uint64_t v73 = *(void *)(v1 - 8);
  v74 = (void (*)(void, void))v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v71 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v72 = (uint64_t)&v63 - v4;
  uint64_t v5 = sub_27DC40();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  __chkstk_darwin(v5);
  uint64_t v67 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_27DC70();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  double v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = (int *)type metadata accessor for ExposureViewModifier();
  uint64_t v65 = *((void *)v9 - 1);
  uint64_t v10 = *(char **)(v65 + 64);
  __chkstk_darwin(v9);
  uint64_t v11 = sub_27DC90();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  int v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = sub_4E04(&qword_320080);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v63 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v63 - v24;
  if ((v76 & 1) == 0)
  {
    uint64_t v40 = v72;
    uint64_t v41 = v75;
    sub_4E04(&qword_3272F8);
    sub_27DC00();
    uint64_t v42 = v73;
    uint64_t v43 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, void (*)(void, void)))(v73 + 48))(v20, 1, v74) == 1)return sub_ADCF8((uint64_t)v20, &qword_320080); {
    (*(void (**)(uint64_t, char *, void (*)(void, void)))(v42 + 32))(v40, v20, v43);
    }
    uint64_t v44 = v71;
    sub_27D080();
    sub_27D020();
    if (v45 <= 1.0)
    {
      sub_2663B8(v41);
      uint64_t v56 = *(void (**)(char *, void))(v42 + 8);
      v56(v44, v43);
      return ((uint64_t (*)(uint64_t, void))v56)(v40, v43);
    }
    uint64_t v46 = v42;
    uint64_t v47 = *(void (**)(void))v41;
    if (*(unsigned char *)(v41 + 16))
    {
      uint64_t v48 = v41 + v9[7];
      uint64_t v49 = *(void **)v48;
      char v50 = *(unsigned char *)(v48 + 8);
      sub_264100();
      sub_264108(v49, v50);
      uint64_t v51 = (void *)sub_D754(v49, v50);
      sub_E120(v49, v50);
      uint64_t v52 = v41 + v9[8];
      uint64_t v53 = *(void *)v52;
      char v54 = *(unsigned char *)(v52 + 8);
      sub_D328(*(void *)v52, v54);
      sub_D0D8(v53, v54, v78);
      sub_D334(v53, v54);
      sub_D968((uint64_t)aBlock);
      uint64_t v55 = v40;
      ((void (*)(void *, uint64_t *, void *, uint64_t))v47)(v51, v78, aBlock, v40);
      sub_2642D0();

      uint64_t v44 = v71;
      sub_ADCF8((uint64_t)aBlock, &qword_316210);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v57 = v41 + v9[10];
      uint64_t v58 = *(void *)v57;
      char v59 = *(unsigned char *)(v57 + 8);
      sub_264100();
      j__swift_retain();
      uint64_t v60 = sub_D548(v58, v59);
      j__swift_release();
      if (!v60)
      {
        sub_2642D0();
        sub_2663B8(v41);
        long long v62 = *(void (**)(char *, void))(v46 + 8);
        v62(v44, v43);
        return ((uint64_t (*)(uint64_t, void))v62)(v40, v43);
      }
      v47(v60);
      swift_release();
      sub_2642D0();
      uint64_t v55 = v40;
    }
    sub_2663B8(v41);
    long long v61 = *(void (**)(char *, void))(v46 + 8);
    v61(v44, v43);
    return ((uint64_t (*)(uint64_t, void))v61)(v55, v43);
  }
  uint64_t v71 = v10;
  uint64_t v72 = (uint64_t)&v63 - ((unint64_t)(v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v16;
  uint64_t v76 = v8;
  sub_27D080();
  (*(void (**)(char *, void, uint64_t, void (*)(void, void)))(v73 + 56))(v25, 0, 1, v74);
  uint64_t v27 = v75;
  sub_46D1C((uint64_t)v25, (uint64_t)v23, &qword_320080);
  sub_4E04(&qword_3272F8);
  sub_27DC10();
  sub_ADCF8((uint64_t)v25, &qword_320080);
  sub_4E04((uint64_t *)&unk_3203A0);
  uint64_t result = sub_27D890();
  if (LOBYTE(aBlock[0]) == 1)
  {
    sub_1037D4();
    uint64_t v29 = (void *)sub_27E000();
    sub_27DC80();
    uint64_t v30 = v26;
    sub_27DCB0();
    v74 = *(void (**)(void, void))(v64 + 8);
    uint64_t v31 = v11;
    v74(v14, v11);
    uint64_t v32 = v27;
    uint64_t v33 = v72;
    sub_266544(v32, v72);
    unint64_t v34 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v35 = swift_allocObject();
    sub_2665AC(v33, v35 + v34);
    aBlock[4] = sub_266ED4;
    aBlock[5] = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1788EC;
    aBlock[3] = &unk_30D640;
    uint64_t v36 = _Block_copy(aBlock);
    swift_release();
    uint64_t v37 = v76;
    sub_27DC60();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_266F4C((unint64_t *)&qword_31FB98, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_4E04((uint64_t *)&unk_320070);
    sub_13C89C(&qword_31FBA0, (uint64_t *)&unk_320070);
    uint64_t v38 = v67;
    uint64_t v39 = v70;
    sub_27E090();
    sub_27DFE0();
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v68);
    return ((uint64_t (*)(char *, uint64_t))v74)(v30, v31);
  }
  return result;
}

uint64_t sub_266294(unsigned char *a1)
{
  if (*a1)
  {
    char v1 = sub_27E370();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0)
    {
      int v2 = 0;
      return sub_26597C(v2);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_4E04(&qword_3273E8);
  uint64_t result = sub_27DC00();
  if (v4 != 1) {
    return result;
  }
  int v2 = 1;
  return sub_26597C(v2);
}

uint64_t sub_266350()
{
  return sub_27DC10();
}

uint64_t sub_2663B8(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = sub_27D0A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = type metadata accessor for ExposureViewModifier();
  sub_46D1C((uint64_t)v7, (uint64_t)v5, &qword_320080);
  sub_4E04(&qword_3272F8);
  sub_27DC10();
  sub_ADCF8((uint64_t)v7, &qword_320080);
  sub_4E04((uint64_t *)&unk_3203A0);
  uint64_t result = sub_27D890();
  if (v16 == 1)
  {
    uint64_t v11 = sub_27DBA0();
    uint64_t v12 = (uint64_t *)(a1 + *(int *)(v9 + 52));
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    v15[1] = v11;
    sub_4E04(&qword_3273E0);
    return sub_27DC10();
  }
  return result;
}

uint64_t sub_266544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExposureViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2665AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExposureViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_266610(uint64_t a1)
{
  return sub_266878(a1, (uint64_t (*)(uint64_t, uint64_t))sub_265858);
}

uint64_t sub_26662C()
{
  char v1 = (int *)type metadata accessor for ExposureViewModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_2642D0();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  uint64_t v7 = sub_27D0A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  sub_4E04(&qword_3272F8);
  swift_release();
  sub_E120(*(id *)(v5 + v1[7]), *(unsigned char *)(v5 + v1[7] + 8));
  sub_D334(*(void *)(v5 + v1[8]), *(unsigned char *)(v5 + v1[8] + 8));
  uint64_t v9 = v5 + v1[9];
  if (*(unsigned char *)(v9 + 40))
  {
    if (*(void *)(v9 + 24)) {
      sub_5E94(v9);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v2 | 7;
  j__swift_release();
  swift_release();
  uint64_t v11 = v5 + v1[12];
  uint64_t v12 = sub_4E04((uint64_t *)&unk_3203A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v10);
}

uint64_t sub_266860(uint64_t a1)
{
  return sub_266878(a1, (uint64_t (*)(uint64_t, uint64_t))sub_266294);
}

uint64_t sub_266878(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ExposureViewModifier() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

void *sub_2668FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4E04(&qword_327408);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_267180(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_266A20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4E04(&qword_3273F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2675A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_266B48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4E04(&qword_3273F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_267290(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_266C58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4E04(&qword_327400);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_267384(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_266D68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_4E04(&qword_320058);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_267490(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_266E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_27DAC0();
  *a1 = result;
  return result;
}

uint64_t sub_266EA4()
{
  return sub_27DAD0();
}

uint64_t sub_266ED4()
{
  type metadata accessor for ExposureViewModifier();

  return sub_266350();
}

uint64_t sub_266F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_266F44()
{
  return swift_release();
}

uint64_t sub_266F4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_266FBC()
{
  uint64_t v1 = sub_27D0A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v5 + 24)) {
    sub_5E94(v0 + v5);
  }

  return _swift_deallocObject(v0, v5 + 40, v3 | 7);
}

uint64_t sub_267070(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(sub_27D0A0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_262C54(a1, v1[6], (uint64_t)v1 + v8, *(void *)((char *)v1 + v9), (uint64_t)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8), v3, v4, v5, v6);
}

uint64_t sub_267140()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_267178(uint64_t *a1, uint64_t a2)
{
  return sub_255D24(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_267180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_4E04(&qword_327410);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_267290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_267384(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_4E04(&qword_320388);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_267490(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t sub_267584()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_267594(uint64_t a1)
{
}

uint64_t sub_2675A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_4E04(&qword_326F60);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_27E190();
  __break(1u);
  return result;
}

uint64_t destroy for ExposureViewModifier.ExposureHandlerKind()
{
  return sub_2642D0();
}

uint64_t _s13BookAnalytics20ExposureViewModifierV19ExposureHandlerKindOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_264100();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ExposureViewModifier.ExposureHandlerKind(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_264100();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2642D0();
  return a1;
}

uint64_t assignWithTake for ExposureViewModifier.ExposureHandlerKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2642D0();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExposureViewModifier.ExposureHandlerKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExposureViewModifier.ExposureHandlerKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_26783C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_267844(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ExposureViewModifier.ExposureHandlerKind()
{
  return &type metadata for ExposureViewModifier.ExposureHandlerKind;
}

unint64_t sub_267864()
{
  unint64_t result = qword_327418;
  if (!qword_327418)
  {
    sub_82930(&qword_3273D8);
    sub_13C89C(&qword_327420, &qword_3273C8);
    sub_13C89C(&qword_327428, &qword_327430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327418);
  }
  return result;
}

uint64_t sub_267928(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_327438, &enum case for SessionGroup.default(_:));
}

uint64_t static SeriesDetailsViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327438, a1);
}

uint64_t sub_267988(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_327450, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static SeriesDetailsViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327450, a1);
}

uint64_t SeriesDetailsViewEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_4E04(&qword_317A38);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SeriesDetailsViewEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = sub_4E04(&qword_317A38);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t SeriesDetailsViewEvent.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesDetailsViewEvent(uint64_t a1)
{
  return sub_5338(a1, (uint64_t *)&unk_3274E0);
}

uint64_t SeriesDetailsViewEvent.seriesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316320);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesDetailsViewEvent.seriesData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesDetailsViewEvent.altSeriesContentTypeExposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_327468);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesDetailsViewEvent.altSeriesContentTypeExposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_327468);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesDetailsViewEvent.altSeriesContentTypeExposureData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesDetailsViewEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A20);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesDetailsViewEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 28);
  uint64_t v4 = sub_4E04(&qword_316A20);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesDetailsViewEvent.linkData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesDetailsViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesDetailsViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 32);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesDetailsViewEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesDetailsViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesDetailsViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent(0) + 36);
  uint64_t v4 = sub_4E04(&qword_315DE8);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SeriesDetailsViewEvent.timedData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t SeriesDetailsViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.optional<A>(_:);
  uint64_t v3 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SeriesDetailsViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = enum case for EventProperty.required<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  uint64_t v9 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  uint64_t v11 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  uint64_t v13 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v6, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_4E04(&qword_315DE8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v6, v15);
}

uint64_t SeriesDetailsViewEvent.Model.exposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_4EC48(v2, v3);
}

uint64_t SeriesDetailsViewEvent.Model.seriesData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  __int16 v4 = *(_WORD *)(v1 + 88);
  char v5 = *(unsigned char *)(v1 + 90);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 64);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 26) = v5;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t SeriesDetailsViewEvent.Model.altSeriesContentTypeExposureData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[14];
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  uint64_t v5 = v1[17];
  uint64_t v6 = v1[18];
  uint64_t v7 = v1[19];
  uint64_t v8 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2683A4(v2, v3, v4);
}

uint64_t sub_2683A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *SeriesDetailsViewEvent.Model.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_4ED08(v1 + 168, (uint64_t)v4);
  sub_4ED08((uint64_t)v4, a1);
  return sub_4FB64(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1F4E8);
}

uint64_t SeriesDetailsViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent.Model(0) + 32);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SeriesDetailsViewEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_327588);
}

uint64_t SeriesDetailsViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SeriesDetailsViewEvent.Model(0) + 36);
  uint64_t v4 = sub_27D7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SeriesDetailsViewEvent.Model.init(exposureData:seriesData:altSeriesContentTypeExposureData:linkData:eventData:timedData:)@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v27 = a1[1];
  long long v28 = *a1;
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v9 = *((void *)a1 + 7);
  uint64_t v10 = *a2;
  char v11 = *((unsigned char *)a2 + 8);
  uint64_t v12 = a2[2];
  __int16 v13 = *((_WORD *)a2 + 12);
  char v14 = *((unsigned char *)a2 + 26);
  uint64_t v15 = a2[4];
  uint64_t v16 = a2[5];
  long long v25 = *a3;
  long long v26 = a1[2];
  long long v23 = a3[2];
  long long v24 = a3[1];
  uint64_t v29 = *((void *)a3 + 6);
  sub_4ED08(a4, (uint64_t)v32);
  *(_OWORD *)a7 = v28;
  *(_OWORD *)(a7 + 16) = v27;
  *(_OWORD *)(a7 + 32) = v26;
  *(void *)(a7 + 48) = v8;
  *(void *)(a7 + 56) = v9;
  *(void *)(a7 + 64) = v10;
  *(unsigned char *)(a7 + 72) = v11;
  *(void *)(a7 + 80) = v12;
  *(_WORD *)(a7 + 88) = v13;
  *(unsigned char *)(a7 + 90) = v14;
  *(void *)(a7 + 96) = v15;
  *(void *)(a7 + 104) = v16;
  *(_OWORD *)(a7 + 112) = v25;
  *(_OWORD *)(a7 + 128) = v24;
  *(_OWORD *)(a7 + 144) = v23;
  *(void *)(a7 + 160) = v29;
  sub_4ED08((uint64_t)v32, a7 + 168);
  uint64_t v17 = type metadata accessor for SeriesDetailsViewEvent.Model(0);
  uint64_t v18 = a7 + *(int *)(v17 + 32);
  uint64_t v19 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a5, v19);
  uint64_t v20 = a7 + *(int *)(v17 + 36);
  uint64_t v21 = sub_27D7F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a6, v21);
}

uint64_t sub_2686F0()
{
  uint64_t result = 0x657275736F707865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6144736569726573;
      break;
    case 2:
      uint64_t result = 0xD000000000000020;
      break;
    case 3:
      uint64_t result = 0x617461446B6E696CLL;
      break;
    case 4:
      uint64_t v2 = 0x44746E657665;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x4464656D6974;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2687C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26C1E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2687EC(uint64_t a1)
{
  unint64_t v2 = sub_268C04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_268828(uint64_t a1)
{
  unint64_t v2 = sub_268C04();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesDetailsViewEvent.Model.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_4E04(&qword_327470);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_268C04();
  sub_27E440();
  long long v8 = v2[1];
  long long v20 = *v2;
  long long v21 = v8;
  long long v9 = v2[3];
  long long v22 = v2[2];
  long long v23 = v9;
  v19[0] = 0;
  sub_4F4B0();
  uint64_t v10 = v29;
  sub_27E2C0();
  if (!v10)
  {
    char v11 = *((unsigned char *)v2 + 72);
    uint64_t v12 = *((void *)v2 + 10);
    __int16 v13 = *((_WORD *)v2 + 44);
    char v14 = *((unsigned char *)v2 + 90);
    *(void *)&long long v20 = *((void *)v2 + 8);
    BYTE8(v20) = v11;
    *(void *)&long long v21 = v12;
    WORD4(v21) = v13;
    BYTE10(v21) = v14;
    long long v22 = v2[6];
    v19[0] = 1;
    sub_11514();
    sub_27E330();
    uint64_t v15 = *((void *)v2 + 20);
    long long v16 = v2[8];
    long long v25 = v2[7];
    long long v26 = v16;
    long long v27 = v2[9];
    uint64_t v28 = v15;
    char v24 = 2;
    sub_FF314();
    sub_27E2C0();
    sub_4ED08((uint64_t)v2 + 168, (uint64_t)&v20);
    sub_4ED08((uint64_t)&v20, (uint64_t)v19);
    v18[7] = 3;
    sub_1FF00();
    sub_27E2C0();
    type metadata accessor for SeriesDetailsViewEvent.Model(0);
    v19[0] = 4;
    sub_27D7C0();
    sub_5F38(&qword_315E08, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_27E330();
    v19[0] = 5;
    sub_27D7F0();
    sub_5F38(&qword_315E10, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_268C04()
{
  unint64_t result = qword_327478;
  if (!qword_327478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327478);
  }
  return result;
}

uint64_t SeriesDetailsViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v36 = sub_27D7F0();
  uint64_t v33 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D7C0();
  uint64_t v37 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_327480);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SeriesDetailsViewEvent.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v41 = a1;
  sub_5900(a1, v13);
  sub_268C04();
  uint64_t v40 = v9;
  uint64_t v14 = v48;
  sub_27E430();
  if (v14) {
    return sub_5E94((uint64_t)v41);
  }
  uint64_t v32 = v6;
  uint64_t v48 = v10;
  v43[0] = 0;
  sub_4FB10();
  uint64_t v15 = v39;
  sub_27E1F0();
  long long v16 = v45;
  uint64_t v17 = (uint64_t)v12;
  *(_OWORD *)uint64_t v12 = v44;
  *((_OWORD *)v12 + 1) = v16;
  long long v18 = v47;
  *((_OWORD *)v12 + 2) = v46;
  *((_OWORD *)v12 + 3) = v18;
  v43[0] = 1;
  sub_11A3C();
  sub_27E260();
  char v19 = BYTE8(v44);
  uint64_t v20 = v45;
  __int16 v21 = WORD4(v45);
  char v22 = BYTE10(v45);
  *((void *)v12 + 8) = v44;
  v12[72] = v19;
  *((void *)v12 + 10) = v20;
  *((_WORD *)v12 + 44) = v21;
  v12[90] = v22;
  *((_OWORD *)v12 + 6) = v46;
  v43[0] = 2;
  sub_FF2BC();
  uint64_t v31 = 0;
  sub_27E1F0();
  uint64_t v23 = v4;
  uint64_t v24 = v47;
  long long v25 = v45;
  *((_OWORD *)v12 + 7) = v44;
  *((_OWORD *)v12 + 8) = v25;
  *((_OWORD *)v12 + 9) = v46;
  *((void *)v12 + 20) = v24;
  v43[159] = 3;
  sub_20940();
  sub_27E1F0();
  sub_4ED08((uint64_t)&v44, (uint64_t)v43);
  sub_4ED08((uint64_t)v43, (uint64_t)(v12 + 168));
  char v42 = 4;
  sub_5F38(&qword_315E28, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v26 = v32;
  sub_27E260();
  uint64_t v27 = v48;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v12[*(int *)(v48 + 32)], v26, v23);
  char v42 = 5;
  sub_5F38(&qword_315E30, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v29 = v35;
  uint64_t v28 = v36;
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v17 + *(int *)(v27 + 36), v29, v28);
  sub_269394(v17, v34);
  sub_5E94((uint64_t)v41);
  return sub_2693F8(v17);
}

uint64_t sub_269340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_269394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeriesDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2693F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeriesDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_269454@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesDetailsViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_26946C(void *a1)
{
  return SeriesDetailsViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_269484@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D80, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327438, a1);
}

uint64_t sub_2694BC@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D88, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327450, a1);
}

uint64_t sub_2694F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.optional<A>(_:);
  uint64_t v5 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = enum case for EventProperty.required<A>(_:);
  uint64_t v8 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  uint64_t v10 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  uint64_t v12 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  uint64_t v14 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v7, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_4E04(&qword_315DE8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v7, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesDetailsViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_4E04(&qword_317A38);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_4E04(&qword_316320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_4E04(&qword_327468);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_4E04(&qword_316A20);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    uint64_t v23 = sub_4E04(&qword_315DE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = sub_4E04(&qword_315DE8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SeriesDetailsViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_4E04(&qword_315DE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_4E04(&qword_316320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_4E04(&qword_327468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_4E04(&qword_316A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_4E04(&qword_315DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_4E04(&qword_315DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26A2F8);
}

uint64_t sub_26A2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_4E04(&qword_317A38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_4E04(&qword_327468);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for SeriesDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26A554);
}

uint64_t sub_26A554(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_4E04(&qword_317A38);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316320);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_4E04(&qword_327468);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_4E04(&qword_316A20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_4E04(&qword_315DE0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_4E04(&qword_315DE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_26A7A8()
{
  sub_26AA40(319, (unint64_t *)&unk_317AD0, (void (*)(void))sub_4FB10, (void (*)(void))sub_4F4B0);
  if (v0 <= 0x3F)
  {
    sub_26AA40(319, (unint64_t *)&qword_3163B8, (void (*)(void))sub_11A3C, (void (*)(void))sub_11514);
    if (v1 <= 0x3F)
    {
      sub_26AA40(319, (unint64_t *)&unk_3274F0, (void (*)(void))sub_FF2BC, (void (*)(void))sub_FF314);
      if (v2 <= 0x3F)
      {
        sub_26AA40(319, (unint64_t *)&unk_316B18, (void (*)(void))sub_20940, (void (*)(void))sub_1FF00);
        if (v3 <= 0x3F)
        {
          sub_6DA0();
          if (v4 <= 0x3F)
          {
            sub_6E6C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_26AA40(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_27D360();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      uint64_t v9 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v9;
      uint64_t v10 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      long long v13 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v13;
    }
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_WORD *)(a1 + 89) = *(_WORD *)((char *)a2 + 89);
    uint64_t v14 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v14;
    uint64_t v15 = a2[16];
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      long long v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(void *)(a1 + 160) = a2[20];
      uint64_t v17 = a2[22];
      if (v17)
      {
LABEL_8:
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v17;
        uint64_t v18 = a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v18;
        uint64_t v19 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v19;
        *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
        uint64_t v20 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v20;
        uint64_t v41 = v6;
        uint64_t v21 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v21;
        uint64_t v22 = a2[33];
        *(void *)(a1 + 256) = a2[32];
        *(void *)(a1 + 264) = v22;
        uint64_t v23 = a2[35];
        *(void *)(a1 + 272) = a2[34];
        *(void *)(a1 + 280) = v23;
        uint64_t v24 = a2[37];
        *(void *)(a1 + 288) = a2[36];
        *(void *)(a1 + 296) = v24;
        uint64_t v25 = a2[39];
        *(void *)(a1 + 304) = a2[38];
        *(void *)(a1 + 312) = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        uint64_t v32 = *(int *)(v6 + 32);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = (uint64_t)a2 + v32;
        uint64_t v35 = sub_27D7C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        uint64_t v36 = *(int *)(v6 + 36);
        uint64_t v37 = a1 + v36;
        uint64_t v38 = (uint64_t)a2 + v36;
        uint64_t v39 = sub_27D7F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        return a1;
      }
    }
    else
    {
      *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v15;
      uint64_t v26 = a2[18];
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = v26;
      uint64_t v27 = a2[20];
      *(void *)(a1 + 152) = a2[19];
      *(void *)(a1 + 160) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = a2[22];
      if (v17) {
        goto LABEL_8;
      }
    }
    long long v28 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v28;
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(void *)(a1 + 312) = a2[39];
    long long v29 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v29;
    long long v30 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v30;
    long long v31 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v31;
    goto LABEL_11;
  }
  uint64_t v11 = *a2;
  *(void *)a1 = *a2;
  a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for SeriesDetailsViewEvent.Model(void *a1, uint64_t a2)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[16] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[22])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_27D7C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_27D7F0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  if (v13 != 1)
  {
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v13;
    uint64_t v24 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v24;
    uint64_t v25 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = *(void *)(a2 + 176);
    if (v15) {
      goto LABEL_6;
    }
LABEL_8:
    long long v26 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v26;
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    long long v27 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v27;
    long long v28 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v28;
    long long v29 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v29;
    goto LABEL_9;
  }
  long long v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 176);
  if (!v15) {
    goto LABEL_8;
  }
LABEL_6:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  uint64_t v39 = a3;
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  uint64_t v20 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v20;
  uint64_t v21 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v21;
  uint64_t v22 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v22;
  uint64_t v23 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  uint64_t v34 = *(int *)(a3 + 36);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

uint64_t assignWithCopy for SeriesDetailsViewEvent.Model(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_51BEC(a1);
      long long v7 = a2[3];
      long long v9 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v8;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a2 + 90);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (_OWORD *)(a1 + 112);
  long long v14 = a2 + 7;
  uint64_t v15 = *((void *)a2 + 16);
  if (*(void *)(a1 + 128) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = a2[8];
      long long v18 = a2[9];
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(_OWORD *)(a1 + 128) = v17;
      *(_OWORD *)(a1 + 144) = v18;
      *uint64_t v13 = v16;
    }
    else
    {
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_26B7EC(a1 + 112);
    long long v20 = a2[8];
    long long v19 = a2[9];
    long long v21 = *v14;
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(_OWORD *)(a1 + 128) = v20;
    *(_OWORD *)(a1 + 144) = v19;
    *uint64_t v13 = v21;
  }
  else
  {
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(void *)(a1 + 144) = *((void *)a2 + 18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (_OWORD *)(a1 + 168);
  uint64_t v23 = (long long *)((char *)a2 + 168);
  uint64_t v24 = *((void *)a2 + 22);
  if (*(void *)(a1 + 176))
  {
    if (v24)
    {
      *(void *)(a1 + 168) = *((void *)a2 + 21);
      *(void *)(a1 + 176) = *((void *)a2 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *((void *)a2 + 23);
      *(void *)(a1 + 192) = *((void *)a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *((void *)a2 + 25);
      *(void *)(a1 + 208) = *((void *)a2 + 26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
      *(void *)(a1 + 224) = *((void *)a2 + 28);
      *(void *)(a1 + 232) = *((void *)a2 + 29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      *(void *)(a1 + 248) = *((void *)a2 + 31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *((void *)a2 + 32);
      *(void *)(a1 + 264) = *((void *)a2 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *((void *)a2 + 34);
      *(void *)(a1 + 280) = *((void *)a2 + 35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *((void *)a2 + 36);
      *(void *)(a1 + 296) = *((void *)a2 + 37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = *((void *)a2 + 38);
      *(void *)(a1 + 312) = *((void *)a2 + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23648(a1 + 168);
      long long v25 = *(long long *)((char *)a2 + 184);
      *uint64_t v22 = *v23;
      *(_OWORD *)(a1 + 184) = v25;
      long long v26 = *(long long *)((char *)a2 + 248);
      long long v28 = *(long long *)((char *)a2 + 200);
      long long v27 = *(long long *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = *(long long *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 248) = v26;
      *(_OWORD *)(a1 + 200) = v28;
      *(_OWORD *)(a1 + 216) = v27;
      long long v30 = *(long long *)((char *)a2 + 280);
      long long v29 = *(long long *)((char *)a2 + 296);
      long long v31 = *(long long *)((char *)a2 + 264);
      *(void *)(a1 + 312) = *((void *)a2 + 39);
      *(_OWORD *)(a1 + 280) = v30;
      *(_OWORD *)(a1 + 296) = v29;
      *(_OWORD *)(a1 + 264) = v31;
    }
  }
  else if (v24)
  {
    *(void *)(a1 + 168) = *((void *)a2 + 21);
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    *(void *)(a1 + 200) = *((void *)a2 + 25);
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    *(void *)(a1 + 224) = *((void *)a2 + 28);
    *(void *)(a1 + 232) = *((void *)a2 + 29);
    *(void *)(a1 + 240) = *((void *)a2 + 30);
    *(void *)(a1 + 248) = *((void *)a2 + 31);
    *(void *)(a1 + 256) = *((void *)a2 + 32);
    *(void *)(a1 + 264) = *((void *)a2 + 33);
    *(void *)(a1 + 272) = *((void *)a2 + 34);
    *(void *)(a1 + 280) = *((void *)a2 + 35);
    *(void *)(a1 + 288) = *((void *)a2 + 36);
    *(void *)(a1 + 296) = *((void *)a2 + 37);
    *(void *)(a1 + 304) = *((void *)a2 + 38);
    *(void *)(a1 + 312) = *((void *)a2 + 39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(long long *)((char *)a2 + 184);
    *uint64_t v22 = *v23;
    *(_OWORD *)(a1 + 184) = v32;
    long long v33 = *(long long *)((char *)a2 + 200);
    long long v34 = *(long long *)((char *)a2 + 216);
    long long v35 = *(long long *)((char *)a2 + 248);
    *(_OWORD *)(a1 + 232) = *(long long *)((char *)a2 + 232);
    *(_OWORD *)(a1 + 248) = v35;
    *(_OWORD *)(a1 + 200) = v33;
    *(_OWORD *)(a1 + 216) = v34;
    long long v36 = *(long long *)((char *)a2 + 264);
    long long v37 = *(long long *)((char *)a2 + 280);
    long long v38 = *(long long *)((char *)a2 + 296);
    *(void *)(a1 + 312) = *((void *)a2 + 39);
    *(_OWORD *)(a1 + 280) = v37;
    *(_OWORD *)(a1 + 296) = v38;
    *(_OWORD *)(a1 + 264) = v36;
  }
  uint64_t v39 = *(int *)(a3 + 32);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t)a2 + v39;
  uint64_t v42 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = *(int *)(a3 + 36);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = (uint64_t)a2 + v43;
  uint64_t v46 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t sub_26B7EC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 128);
  long long v12 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  long long v13 = *(_OWORD *)(a2 + 296);
  long long v14 = *(_OWORD *)(a2 + 264);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v13;
  *(_OWORD *)(a1 + 264) = v14;
  uint64_t v18 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_51BEC(a1);
  }
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128) == 1)
  {
LABEL_9:
    long long v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)(a2 + 128);
  if (v13 == 1)
  {
    sub_26B7EC(a1 + 112);
    goto LABEL_9;
  }
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
LABEL_11:
  if (!*(void *)(a1 + 176))
  {
LABEL_15:
    long long v26 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v26;
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    long long v27 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v27;
    long long v28 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v28;
    long long v29 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v29;
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(a2 + 176);
  if (!v17)
  {
    sub_23648(a1 + 168);
    goto LABEL_15;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v20 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v25;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v30 = *(int *)(a3 + 32);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_27D7C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = *(int *)(a3 + 36);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_27D7F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26BC6C);
}

uint64_t sub_26BC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_27D7C0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_27D7F0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 36);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SeriesDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26BDB8);
}

uint64_t sub_26BDB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_27D7F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_26BEE4()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_27D7F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeriesDetailsViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26C0A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesDetailsViewEvent.Model.CodingKeys()
{
  return &type metadata for SeriesDetailsViewEvent.Model.CodingKeys;
}

unint64_t sub_26C0DC()
{
  unint64_t result = qword_3275D0;
  if (!qword_3275D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3275D0);
  }
  return result;
}

unint64_t sub_26C134()
{
  unint64_t result = qword_3275D8;
  if (!qword_3275D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3275D8);
  }
  return result;
}

unint64_t sub_26C18C()
{
  unint64_t result = qword_3275E0;
  if (!qword_3275E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3275E0);
  }
  return result;
}

uint64_t sub_26C1E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657275736F707865 && a2 == 0xEC00000061746144;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144736569726573 && a2 == 0xEA00000000006174 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000000002B1DA0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static NotificationOptInLocationData.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v3)
  {
    case 1:
      unint64_t v5 = 0x6553656369766564;
      unint64_t v4 = 0xEE0073676E697474;
      break;
    case 2:
      unint64_t v5 = 0x656D6F636C6577;
      break;
    case 3:
      unint64_t v4 = 0x80000000002AC9F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xEE0073676E697474;
      if (v5 == 0x6553656369766564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x656D6F636C6577;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000000002AC9F0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_27E370();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_26C644()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_26C65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_27E370();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_26C6F4(uint64_t a1)
{
  unint64_t v2 = sub_26C8B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_26C730(uint64_t a1)
{
  unint64_t v2 = sub_26C8B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t NotificationOptInLocationData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_3275E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5900(a1, a1[3]);
  sub_26C8B4();
  sub_27E440();
  char v10 = v7;
  sub_26C908();
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_26C8B4()
{
  unint64_t result = qword_3275F0;
  if (!qword_3275F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3275F0);
  }
  return result;
}

unint64_t sub_26C908()
{
  unint64_t result = qword_3275F8;
  if (!qword_3275F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3275F8);
  }
  return result;
}

uint64_t NotificationOptInLocationData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327600);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_26C8B4();
  sub_27E430();
  if (!v2)
  {
    sub_26CAC4();
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_5E94((uint64_t)a1);
}

unint64_t sub_26CAC4()
{
  unint64_t result = qword_327608;
  if (!qword_327608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327608);
  }
  return result;
}

uint64_t sub_26CB20@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return NotificationOptInLocationData.init(from:)(a1, a2);
}

uint64_t sub_26CB38(void *a1)
{
  return NotificationOptInLocationData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInLocationData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26CC1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInLocationData()
{
  return &type metadata for NotificationOptInLocationData;
}

unsigned char *storeEnumTagSinglePayload for NotificationOptInLocationData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x26CCF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptInLocationData.CodingKeys()
{
  return &type metadata for NotificationOptInLocationData.CodingKeys;
}

unint64_t sub_26CD2C()
{
  unint64_t result = qword_327610;
  if (!qword_327610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327610);
  }
  return result;
}

unint64_t sub_26CD84()
{
  unint64_t result = qword_327618;
  if (!qword_327618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327618);
  }
  return result;
}

unint64_t sub_26CDDC()
{
  unint64_t result = qword_327620;
  if (!qword_327620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327620);
  }
  return result;
}

uint64_t BATracker.transaction(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_27D730();

  return swift_release();
}

Swift::String_optional __swiftcall BATracker.contentPrivateID(for:)(Swift::String a1)
{
  unint64_t v1 = sub_26CED4(a1._countAndFlagsBits, (uint64_t)a1._object, (SEL *)&selRef_contentPrivateIDForContentID_);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v1;
  return result;
}

Swift::String_optional __swiftcall BATracker.contentUserID(for:)(Swift::String a1)
{
  unint64_t v1 = sub_26CED4(a1._countAndFlagsBits, (uint64_t)a1._object, (SEL *)&selRef_contentUserIDForContentID_);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v1;
  return result;
}

void *sub_26CED4(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v5 = sub_27DDA0();
    id v6 = [Strong *a3 v5];

    swift_unknownObjectRelease();
    if (v6)
    {
      uint64_t Strong = (void *)sub_27DDB0();
    }
    else
    {
      return 0;
    }
  }
  return Strong;
}

id BATracker.chain(with:)()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = sub_27D7A0();
  swift_beginAccess();
  swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v3 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
  sub_4E04(&qword_319FA0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v2[v3] = v4;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = v1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v7.receiver = v2;
  v7.super_class = ObjectType;
  swift_retain();
  id v5 = [super init];
  swift_release();
  swift_unknownObjectRelease();
  return v5;
}

id BATracker.optedIn.getter()
{
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result isDiagnosticSubmissionAllowed];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t BATracker.pop<A>(type:)()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_26EF08((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return sub_27D760();
}

uint64_t BATracker.push<A>(data:traits:file:line:)()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_26F03C((void **)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  swift_bridgeObjectRetain();
  sub_27D780();
  return swift_bridgeObjectRelease();
}

uint64_t BATracker.submit<A>(_:completion:)()
{
  return sub_27D7B0();
}

uint64_t BATracker.time<A>(_:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_4E04(&qword_320080);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_27D0A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_15ADB0(a2, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_ADCF8((uint64_t)v5, &qword_320080);
    return sub_27D790();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_27D740();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

id BATracker.__allocating_init(tracker:sessionOperationDelegate:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = (char *)objc_allocWithZone(v2);
  uint64_t v5 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
  sub_4E04(&qword_319FA0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v4[v5] = v6;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = a1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v9.receiver = v4;
  v9.super_class = v2;
  swift_retain();
  [super init];
  swift_release();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_26D608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t BATracker.copy()()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_27D710();
  if (v3)
  {
    uint64_t v4 = (void *)sub_27D720();
    sub_27D370();

    uint64_t v5 = sub_27D7A0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = (char *)objc_allocWithZone(ObjectType);
    uint64_t v7 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
    sub_4E04(&qword_319FA0);
    uint64_t v8 = swift_allocObject();
    *(_DWORD *)(v8 + 24) = 0;
    *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
    *(void *)&v6[v7] = v8;
    swift_unknownObjectWeakInit();
    *(void *)&v6[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = v5;
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
    v12.receiver = v6;
    v12.super_class = ObjectType;
    swift_retain_n();
    uint64_t v3 = [super init];
    swift_release();
    uint64_t v9 = swift_unknownObjectRelease();
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory);
    __chkstk_darwin(v9);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
    sub_26F1F4((uint64_t *)(v10 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
    swift_release();
    swift_release();
  }
  return v3;
}

uint64_t BATracker.sessionOperationDelegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t BATracker.sessionOperationDelegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*BATracker.sessionOperationDelegate.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC13BookAnalytics9BATracker_sessionOperationDelegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_178F20;
}

id static BATracker.mock.getter()
{
  uint64_t v0 = sub_27D460();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_27D250();
  __chkstk_darwin(v4);
  v12[1] = sub_27D430();
  sub_27D210();
  sub_27D200();
  sub_27D550();
  swift_allocObject();
  v12[0] = sub_27D540();
  sub_27D200();
  sub_4E04(&qword_320020);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_298970;
  sub_27D240();
  sub_27D220();
  sub_27D230();
  uint64_t v15 = v5;
  sub_2714DC(&qword_320028, (void (*)(uint64_t))&type metadata accessor for FlushEvents);
  sub_4E04(&qword_320030);
  sub_13C89C((unint64_t *)&unk_320038, &qword_320030);
  sub_27E090();
  sub_27D3A0();
  swift_allocObject();
  sub_27D390();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for TimestampJitter.disabled(_:), v0);
  sub_27D690();
  swift_allocObject();
  sub_27D680();
  sub_27D3C0();
  uint64_t v6 = sub_27D420();
  swift_release();
  uint64_t v7 = v13;
  uint64_t v8 = (char *)objc_allocWithZone(v13);
  uint64_t v9 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
  sub_4E04(&qword_319FA0);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v8[v9] = v10;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = v6;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v14.receiver = v8;
  v14.super_class = v7;
  return [super init];
}

id BATracker.init(tracker:sessionOperationDelegate:)(uint64_t a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC13BookAnalytics9BATracker_operationHistory;
  sub_4E04(&qword_319FA0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v2[v5] = v6;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC13BookAnalytics9BATracker_aaTracker] = a1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v9.receiver = v2;
  v9.super_class = ObjectType;
  swift_retain();
  id v7 = [super init];
  swift_release();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_26DE00(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_26DE28()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_26DE60()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t BATracker.time<A>(_:submitAndRestartWithSession:)()
{
  return sub_27D790();
}

void BATracker.timeRawEvent(_:properties:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_320080);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v63 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  Class v13 = (char *)&v58 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = sub_27D0A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v60 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v61 = (char *)&v58 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v66 = (char *)&v58 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v58 - v24;
  uint64_t v64 = a1;
  unint64_t v65 = a2;
  long long v26 = (void *)sub_270F9C(a1, a2, a3);
  sub_15ADB0(a4, (uint64_t)v15);
  long long v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v27(v15, 1, v16) == 1)
  {
    sub_ADCF8((uint64_t)v15, &qword_320080);
    long long v28 = (void *)sub_27D720();
    [v28 timeRawEvent:v26];

    return;
  }
  long long v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  long long v62 = v25;
  uint64_t v58 = v29;
  char v59 = v26;
  v29(v25, v15, v16);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v31 = [Strong sessionStartTime];
    swift_unknownObjectRelease();
    if (v31)
    {
      uint64_t v32 = (uint64_t)v63;
      sub_27D070();

      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v33 = 1;
      uint64_t v32 = (uint64_t)v63;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v32, v33, 1, v16);
    sub_271474(v32, (uint64_t)v13);
    uint64_t v34 = v17;
    if (v27(v13, 1, v16) != 1)
    {
      long long v38 = v61;
      uint64_t v39 = v58;
      v58(v61, v13, v16);
      uint64_t v40 = v62;
      char v41 = sub_27D040();
      unint64_t v37 = v65;
      if (v41)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v16);
        uint64_t v42 = v60;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v60, v40, v16);
      }
      else
      {
        uint64_t v42 = v60;
        v39(v60, v38, v16);
      }
      uint64_t v35 = v66;
      v39(v66, v42, v16);
      uint64_t v36 = v62;
      goto LABEL_14;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
    uint64_t v34 = v17;
  }
  sub_ADCF8((uint64_t)v13, &qword_320080);
  uint64_t v35 = v66;
  uint64_t v36 = v62;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v66, v62, v16);
  unint64_t v37 = v65;
LABEL_14:
  sub_2714DC(&qword_327640, (void (*)(uint64_t))&type metadata accessor for Date);
  p_weak_ivar_lyt = &BAAnalyticsController__classData.weak_ivar_lyt;
  if ((sub_27DD90() & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v36, v35, v16);
    if (qword_315650 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_27D9B0();
    sub_4BD4(v44, (uint64_t)qword_318748);
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_27D990();
    os_log_type_t v46 = sub_27DF90();
    if (os_log_type_enabled(v45, v46))
    {
      long long v47 = (uint8_t *)swift_slowAlloc();
      v69[0] = swift_slowAlloc();
      *(_DWORD *)long long v47 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_12D450(v64, v37, v69);
      uint64_t v35 = v66;
      p_weak_ivar_lyt = (void **)(&BAAnalyticsController__classData + 56);
      sub_27E050();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v45, v46, "Analytics: Timing %s attempted to use a date earlier than the sessionStartTime.", v47, 0xCu);
      swift_arrayDestroy();
      uint64_t v36 = v62;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  if (p_weak_ivar_lyt[202] != (void *)-1) {
    swift_once();
  }
  uint64_t v48 = sub_27D9B0();
  sub_4BD4(v48, (uint64_t)qword_318748);
  swift_bridgeObjectRetain_n();
  uint64_t v49 = sub_27D990();
  os_log_type_t v50 = sub_27DF90();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    v69[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_12D450(v64, v37, v69);
    sub_27E050();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v51 + 12) = 2048;
    swift_beginAccess();
    sub_27D060();
    double v67 = v52 * 1000.0;
    sub_27E050();
    _os_log_impl(&dword_0, v49, v50, "Analytics: Timing %s with startTime: %f", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v35 = v66;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v53 = (void *)sub_27D720();
  swift_beginAccess();
  Class isa = sub_27D030().super.isa;
  uint64_t v55 = v36;
  uint64_t v56 = v59;
  [v53 timeRawEvent:v59 startTime:isa];

  uint64_t v57 = *(void (**)(char *, uint64_t))(v34 + 8);
  v57(v35, v16);
  v57(v55, v16);
}

uint64_t BATracker.sessionStartTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_4E04(&qword_320080);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = [Strong sessionStartTime];
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_27D070();

      uint64_t v7 = sub_27D0A0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
    }
    else
    {
      uint64_t v10 = sub_27D0A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
    }
    return sub_271474((uint64_t)v4, a1);
  }
  else
  {
    uint64_t v8 = sub_27D0A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

void BATracker.pushRawDataEvent(with:data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9 = objc_allocWithZone((Class)sub_27D510());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_27D500();
  uint64_t v11 = (void *)sub_27D720();
  id v12 = v10;
  NSString v13 = sub_27DDA0();
  [v11 pushDataEvent:v12 traits:a4 file:v13 line:a7];
}

void BATracker.submitRawEvent(_:properties:endTime:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_4E04(&qword_320080);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_27D0A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = (void *)sub_270F9C(a1, a2, a3);
  sub_15ADB0(a4, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_ADCF8((uint64_t)v12, &qword_320080);
    uint64_t v21 = (void *)sub_27D720();
    [v21 submitRawEvent:v20];
  }
  else
  {
    uint64_t v35 = v20;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    if (qword_315650 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_27D9B0();
    sub_4BD4(v22, (uint64_t)qword_318748);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_27D990();
    os_log_type_t v24 = sub_27DF90();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v34 = v5;
      uint64_t v26 = v25;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v37 = v33;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      double v36 = COERCE_DOUBLE(sub_12D450(a1, a2, &v37));
      sub_27E050();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2048;
      sub_27D060();
      double v36 = v27 * 1000.0;
      sub_27E050();
      long long v28 = *(void (**)(char *, uint64_t))(v14 + 8);
      v28(v17, v13);
      _os_log_impl(&dword_0, v23, v24, "Analytics: Submitting %s with endTime: %f", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      long long v28 = *(void (**)(char *, uint64_t))(v14 + 8);
      v28(v17, v13);
    }

    long long v29 = (void *)sub_27D720();
    Class isa = sub_27D030().super.isa;
    id v31 = v35;
    [v29 explicitSubmitRawEvent:v35 submitTime:isa];

    v28(v19, v13);
  }
}

uint64_t sub_26EE40(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[0] = a2;
  v10[1] = a4;
  void v10[2] = a5;
  char v11 = 1;
  id v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v6 = sub_266B48(0, v6[2] + 1, 1, v6);
  }
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    id v6 = sub_266B48((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  uint64_t v6[2] = v8 + 1;
  uint64_t result = sub_15AD54((uint64_t)v10, (uint64_t)&v6[8 * v8 + 4]);
  *a1 = v6;
  return result;
}

uint64_t sub_26EF08(void **a1)
{
  return sub_26EE40(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_26EF28(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  uint64_t v10 = sub_1D81A4(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v10, a2, a4);
  v15[6] = a3;
  char v16 = 0;
  char v11 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v11 = sub_266B48(0, v11[2] + 1, 1, v11);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    char v11 = sub_266B48((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  v11[2] = v13 + 1;
  uint64_t result = sub_15AD54((uint64_t)v15, (uint64_t)&v11[8 * v13 + 4]);
  *a1 = v11;
  return result;
}

uint64_t sub_26F03C(void **a1)
{
  return sub_26EF28(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_26F0D4(uint64_t *a1)
{
  uint64_t result = *a1;
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_271A5C(v3, (uint64_t)&v6);
      if (v7)
      {
        BATracker.pop<A>(type:)();
      }
      else
      {
        sub_258EE4(&v6, &v4);
        sub_5900(&v4, v5);
        BATracker.push<A>(data:traits:file:line:)();
        swift_bridgeObjectRelease();
        sub_5E94((uint64_t)&v4);
      }
      v3 += 64;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_26F1F4(uint64_t *a1)
{
  return sub_26F0D4(a1);
}

uint64_t BATracker.onSessionChange(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_27D750();
  swift_release();

  return swift_release();
}

void BATracker.init()()
{
}

id BATracker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t BATracker.name.getter()
{
  uint64_t v0 = (void *)sub_27D720();
  uint64_t v1 = sub_27D370();

  return v1;
}

uint64_t BATracker.path.getter()
{
  sub_27D770();
  sub_4E04(&qword_319620);
  sub_13C89C(&qword_327648, &qword_319620);
  uint64_t v0 = sub_27DD80();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Void __swiftcall BATracker.timeRawEvent(eventNameValue:propertiesValue:startTimeValue:)(JSValue eventNameValue, JSValue propertiesValue, JSValue startTimeValue)
{
  uint64_t v6 = sub_4E04(&qword_320080);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v24 - v10;
  if ([(objc_class *)eventNameValue.super.isa isString]
    && (id v12 = [(objc_class *)eventNameValue.super.isa toString]) != 0)
  {
    unint64_t v13 = v12;
    uint64_t v14 = sub_27DDB0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  if ([(objc_class *)propertiesValue.super.isa isObject])
  {
    id v17 = [(objc_class *)propertiesValue.super.isa toDictionary];
    if (v17)
    {
      uint64_t v18 = sub_27DD70();

      id v17 = (id)sub_26FA34(v18);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v17 = 0;
  }
  if ([(objc_class *)startTimeValue.super.isa isDate])
  {
    id v19 = [(objc_class *)startTimeValue.super.isa toDate];
    if (v19)
    {
      uint64_t v20 = v19;
      sub_27D070();

      uint64_t v21 = sub_27D0A0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
    }
    else
    {
      uint64_t v23 = sub_27D0A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    }
    sub_271474((uint64_t)v9, (uint64_t)v11);
    if (!v16) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v22 = sub_27D0A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
    if (!v16) {
      goto LABEL_18;
    }
  }
  if (v17)
  {
    BATracker.timeRawEvent(_:properties:startTime:)(v14, v16, (uint64_t)v17, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_ADCF8((uint64_t)v11, &qword_320080);
    return;
  }
LABEL_18:
  sub_ADCF8((uint64_t)v11, &qword_320080);
  swift_bridgeObjectRelease();
}

unint64_t sub_26FA34(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_4E04(&qword_326F58);
    objc_super v2 = (void *)sub_27E180();
  }
  else
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v27 = (unint64_t)(63 - v4) >> 6;
  uint64_t v6 = (char *)v36 + 8;
  uint64_t v7 = (char *)v33 + 8;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v26 = v1;
  while (1)
  {
    if (v5)
    {
      uint64_t v14 = (v5 - 1) & v5;
      unint64_t v15 = __clz(__rbit64(v5)) | (v9 << 6);
      int64_t v16 = v9;
    }
    else
    {
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v27)
      {
LABEL_36:
        sub_271A54();
        return (unint64_t)v2;
      }
      unint64_t v18 = *(void *)(v28 + 8 * v17);
      int64_t v16 = v9 + 1;
      if (!v18)
      {
        int64_t v16 = v9 + 2;
        if (v9 + 2 >= v27) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v28 + 8 * v16);
        if (!v18)
        {
          int64_t v16 = v9 + 3;
          if (v9 + 3 >= v27) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v28 + 8 * v16);
          if (!v18)
          {
            int64_t v16 = v9 + 4;
            if (v9 + 4 >= v27) {
              goto LABEL_36;
            }
            unint64_t v18 = *(void *)(v28 + 8 * v16);
            if (!v18)
            {
              int64_t v19 = v9 + 5;
              if (v9 + 5 >= v27) {
                goto LABEL_36;
              }
              unint64_t v18 = *(void *)(v28 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v16 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_41;
                  }
                  if (v16 >= v27) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = *(void *)(v28 + 8 * v16);
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v14 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_E394(*(void *)(v1 + 48) + 40 * v15, (uint64_t)v35);
    sub_46D80(*(void *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v33[0] = v36[0];
    v33[1] = v36[1];
    uint64_t v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_E394((uint64_t)v32, (uint64_t)v31);
    if (!swift_dynamicCast())
    {
      sub_ADCF8((uint64_t)v32, &qword_327678);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_271A54();
      swift_release();
      return 0;
    }
    sub_46D80((uint64_t)v7, (uint64_t)v31);
    sub_ADCF8((uint64_t)v32, &qword_327678);
    sub_4E04(&qword_323928);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_E12C(v29, v30);
    unint64_t v20 = result;
    if (v21)
    {
      uint64_t v10 = v7;
      char v11 = v6;
      id v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v12 = v29;
      v12[1] = v30;
      uint64_t v13 = v2[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v13 + 8 * v20) = v29;
      uint64_t v6 = v11;
      uint64_t v7 = v10;
      uint64_t v1 = v26;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v22 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v22 = v29;
    v22[1] = v30;
    *(void *)(v2[7] + 8 * result) = v29;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_39;
    }
    v2[2] = v25;
LABEL_8:
    int64_t v9 = v16;
    unint64_t v5 = v14;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Void __swiftcall BATracker.submitRawEvent(_:properties:)(Swift::String _, Swift::OpaquePointer properties)
{
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v5 = sub_4E04(&qword_320080);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_27D0A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  BATracker.submitRawEvent(_:properties:endTime:)(countAndFlagsBits, (unint64_t)object, (uint64_t)properties._rawValue, (uint64_t)v7);
  sub_ADCF8((uint64_t)v7, &qword_320080);
}

Swift::Void __swiftcall BATracker.submitRawEvent(_:properties:endTimeValue:)(Swift::String _, Swift::OpaquePointer properties, JSValue_optional endTimeValue)
{
  Class isa = endTimeValue.value.super.isa;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v7 = sub_4E04(&qword_320080);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v18 - v11;
  if (isa && [(objc_class *)isa isDate])
  {
    id v13 = [(objc_class *)isa toDate];
    if (v13)
    {
      uint64_t v14 = v13;
      sub_27D070();

      uint64_t v15 = sub_27D0A0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
    }
    else
    {
      uint64_t v17 = sub_27D0A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
    }
    sub_271474((uint64_t)v10, (uint64_t)v12);
  }
  else
  {
    uint64_t v16 = sub_27D0A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  }
  BATracker.submitRawEvent(_:properties:endTime:)(countAndFlagsBits, (unint64_t)object, (uint64_t)properties._rawValue, (uint64_t)v12);
  sub_ADCF8((uint64_t)v12, &qword_320080);
}

Swift::Void __swiftcall BATracker.submitRawEvent(_:properties:onlyIfTimed:)(Swift::String _, Swift::OpaquePointer properties, Swift::Bool onlyIfTimed)
{
  uint64_t v4 = (void *)sub_270F9C(_._countAndFlagsBits, (uint64_t)_._object, (uint64_t)properties._rawValue);
  id v5 = (id)sub_27D720();
  [v5 submitRawEvent:v4 onlyIfTimed:onlyIfTimed];
}

Swift::Void __swiftcall BATracker.pushRawDataEvent(with:data:traitValues:)(Swift::String with, Swift::OpaquePointer data, Swift::OpaquePointer traitValues)
{
  objc_allocWithZone((Class)sub_27D510());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_27D500();
  id v5 = [objc_allocWithZone((Class)sub_27D5A0()) init];
  if (sub_27064C(0x65636E4F796C6E6FLL, 0xE800000000000000, traitValues._rawValue)) {
    sub_27D590();
  }
  if (sub_27064C(0x657571696E75, 0xE600000000000000, traitValues._rawValue)) {
    sub_27D580();
  }
  uint64_t v6 = (void *)sub_27D720();
  id v7 = v4;
  id v8 = v5;
  NSString v9 = sub_27DDA0();
  [v6 pushDataEvent:v7 traits:v8 file:v9 line:0];
}

uint64_t sub_27064C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_27E370();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  NSString v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_27E370() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall BATracker.popRawDataEvent(with:)(Swift::String with)
{
  uint64_t v1 = (void *)sub_27D720();
  NSString v2 = sub_27DDA0();
  [v1 popDataEventByName:v2];
}

id sub_270A60(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_27DDB0();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);
  uint64_t v11 = v10;

  swift_bridgeObjectRelease();
  if (v11)
  {
    NSString v12 = sub_27DDA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }

  return v12;
}

void BATracker.performAfterPrivateDataFetched(completionHandler:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    aBlock[4] = a1;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1788EC;
    aBlock[3] = &unk_30D960;
    uint64_t v6 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v5 performAfterPrivateDataFetchedWithCompletionHandler:v6];
    swift_unknownObjectRelease();
    _Block_release(v6);
  }
}

id BATracker.newSessionAssertion()()
{
  return sub_270CAC((SEL *)&selRef_newSessionAssertion);
}

id BATracker.newSessionExtendingAssertion()()
{
  return sub_270CAC((SEL *)&selRef_newSessionExtendingAssertion);
}

id sub_270CAC(SEL *a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v3 = [Strong *a1];
  swift_unknownObjectRelease();
  return v3;
}

id sub_270D30(void *a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v6 = (void *)Strong;
  id v7 = a1;
  id v8 = [v6 *a3];

  swift_unknownObjectRelease();
  return v8;
}

unint64_t sub_270DC4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_27E0A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_27E400();
        swift_bridgeObjectRetain();
        sub_27DDF0();
        Swift::Int v9 = sub_27E420();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          NSString v12 = (_OWORD *)(v11 + 16 * v3);
          id v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *NSString v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_270F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v51 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  Swift::Int v9 = &_swiftEmptyDictionarySingleton;
  uint64_t v50 = v4;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v8 << 6);
LABEL_21:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19
      && (unint64_t v20 = sub_E12C(0x6465726975716572, 0xE800000000000000), (v21 & 1) != 0)
      && (sub_46D80(*(void *)(v18 + 56) + 32 * v20, (uint64_t)&v53), (swift_dynamicCast() & 1) != 0)
      && (v52 & 1) != 0)
    {
      if (!*(void *)(v18 + 16)) {
        goto LABEL_30;
      }
    }
    else if (!*(void *)(v18 + 16))
    {
      goto LABEL_30;
    }
    unint64_t v22 = sub_E12C(1701869940, 0xE400000000000000);
    if ((v23 & 1) == 0)
    {
LABEL_30:
      long long v53 = 0u;
      long long v54 = 0u;
      goto LABEL_31;
    }
    sub_46D80(*(void *)(v18 + 56) + 32 * v22, (uint64_t)&v53);
LABEL_31:
    swift_bridgeObjectRelease();
    if (*((void *)&v54 + 1)) {
      swift_dynamicCast();
    }
    else {
      sub_ADCF8((uint64_t)&v53, (uint64_t *)&unk_320320);
    }
    id v24 = objc_allocWithZone((Class)sub_27D600());
    uint64_t v25 = sub_27D5F0();
    if (v25)
    {
      uint64_t v31 = v25;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v53 = v9;
      unint64_t v34 = sub_E12C(v16, v17);
      uint64_t v35 = v9[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_54;
      }
      if (v9[3] >= v37)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          Swift::Int v9 = (void *)v53;
          if (v33) {
            goto LABEL_46;
          }
        }
        else
        {
          char v43 = v33;
          sub_25864C();
          Swift::Int v9 = (void *)v53;
          if (v43) {
            goto LABEL_46;
          }
        }
      }
      else
      {
        char v38 = v33;
        sub_257B30(v37, isUniquelyReferenced_nonNull_native);
        unint64_t v39 = sub_E12C(v16, v17);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_56;
        }
        unint64_t v34 = v39;
        char v41 = v38;
        Swift::Int v9 = (void *)v53;
        if (v41)
        {
LABEL_46:
          uint64_t v42 = v9[7];

          *(void *)(v42 + 8 * v34) = v31;
          goto LABEL_50;
        }
      }
      v9[(v34 >> 6) + 8] |= 1 << v34;
      uint64_t v44 = (uint64_t *)(v9[6] + 16 * v34);
      uint64_t *v44 = v16;
      v44[1] = v17;
      *(void *)(v9[7] + 8 * v34) = v31;
      uint64_t v45 = v9[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46) {
        goto LABEL_55;
      }
      void v9[2] = v47;
      swift_bridgeObjectRetain();
LABEL_50:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v50;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_E12C(v16, v17);
      char v28 = v27;
      swift_bridgeObjectRelease();
      if (v28)
      {
        char v29 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v53 = v9;
        if ((v29 & 1) == 0)
        {
          sub_25864C();
          Swift::Int v9 = (void *)v53;
        }
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void **)(v9[7] + 8 * v26);
        sub_270DC4(v26, (uint64_t)v9);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v12 >= v51) {
    goto LABEL_51;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v12);
  ++v8;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v8 = v12 + 1;
  if (v12 + 1 >= v51) {
    goto LABEL_51;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v8);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v8 = v12 + 2;
  if (v12 + 2 >= v51) {
    goto LABEL_51;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v8);
  if (v13)
  {
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v51)
  {
LABEL_51:
    swift_release();
    sub_27D530();
    swift_bridgeObjectRetain();
    sub_27D520();
    id v48 = objc_allocWithZone((Class)sub_27D450());
    return sub_27D440();
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v51) {
      goto LABEL_51;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  uint64_t result = sub_27E3A0();
  __break(1u);
  return result;
}

uint64_t sub_271474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_320080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2714DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_271524(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_271550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_271560()
{
  return swift_release();
}

uint64_t sub_271568@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_2715C0()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for BATracker()
{
  return self;
}

uint64_t method lookup function for BATracker(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BATracker);
}

uint64_t dispatch thunk of BATracker.__allocating_init(tracker:sessionOperationDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for Operation(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 56);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 != 1)
  {
    sub_5E94(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Operation(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v5;
    char v6 = 1;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 40);
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    char v6 = 0;
  }
  *(unsigned char *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for Operation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1)
    {
      sub_5E94(a1);
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for Operation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1)
    {
      sub_5E94(a1);
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Operation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Operation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2719A0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_2719BC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Operation()
{
  return &type metadata for Operation;
}

uint64_t sub_2719F8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_271A08()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_271A40()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_271A54()
{
  return swift_release();
}

uint64_t sub_271A5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_271AA4(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_327680, &enum case for SessionGroup.default(_:));
}

uint64_t static HideBookEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327680, a1);
}

uint64_t sub_271B04(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_327698, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static HideBookEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315D98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327698, a1);
}

uint64_t HideBookEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HideBookEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for HideBookEvent(uint64_t a1)
{
  return sub_5338(a1, qword_327720);
}

uint64_t HideBookEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HideBookEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*HideBookEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t HideBookEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for HideBookEvent(0) + 20);
  uint64_t v5 = sub_4E04(&qword_315DE0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t HideBookEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HideBookEvent.Model(0) + 20);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for HideBookEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_3277B0);
}

uint64_t HideBookEvent.Model.init(contentData:eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  long long v6 = *(_OWORD *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  __int16 v9 = *(_WORD *)(a1 + 56);
  int v10 = *(_DWORD *)(a1 + 60);
  char v11 = *(unsigned char *)(a1 + 64);
  int v12 = *(_DWORD *)(a1 + 68);
  char v13 = *(unsigned char *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 77);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v4;
  *(unsigned char *)(a3 + 16) = v5;
  *(_OWORD *)(a3 + 24) = v6;
  *(void *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v8;
  *(_WORD *)(a3 + 56) = v9;
  *(_DWORD *)(a3 + 60) = v10;
  *(unsigned char *)(a3 + 64) = v11;
  *(_DWORD *)(a3 + 68) = v12;
  *(unsigned char *)(a3 + 72) = v13;
  *(_DWORD *)(a3 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a3 + 77) = v14;
  *(_OWORD *)(a3 + 80) = *(_OWORD *)(a1 + 80);
  uint64_t v15 = a3 + *(int *)(type metadata accessor for HideBookEvent.Model(0) + 20);
  uint64_t v16 = sub_27D7C0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);

  return v17(v15, a2, v16);
}

uint64_t sub_271F00(uint64_t a1)
{
  unint64_t v2 = sub_27218C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_271F3C(uint64_t a1)
{
  unint64_t v2 = sub_27218C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HideBookEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_3276B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __int16 v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_27218C();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v23 = *v4;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __int16 v29 = v15;
  int v30 = v16;
  char v31 = v17;
  int v32 = v18;
  char v33 = v19;
  int v34 = *(_DWORD *)((char *)v4 + 73);
  char v35 = v20;
  long long v36 = *((_OWORD *)v4 + 5);
  v22[15] = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    type metadata accessor for HideBookEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_27218C()
{
  unint64_t result = qword_3276B8;
  if (!qword_3276B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3276B8);
  }
  return result;
}

uint64_t HideBookEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v31 = sub_27D7C0();
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  char v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_4E04(&qword_3276C0);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HideBookEvent.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_27218C();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)a1);
  }
  uint64_t v27 = a1;
  uint64_t v12 = v30;
  uint64_t v11 = v31;
  uint64_t v13 = v5;
  char v47 = 0;
  sub_1A98C();
  uint64_t v14 = v32;
  sub_27E260();
  uint64_t v15 = v34;
  char v16 = v35;
  long long v17 = v36;
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  __int16 v20 = v39;
  int v21 = v40;
  char v22 = v41;
  int v23 = v42;
  char v24 = v43;
  char v25 = v45;
  *(void *)uint64_t v10 = v33;
  *((void *)v10 + 1) = v15;
  unsigned char v10[16] = v16;
  *(_OWORD *)(v10 + 24) = v17;
  *((void *)v10 + 5) = v18;
  *((void *)v10 + 6) = v19;
  *((_WORD *)v10 + 28) = v20;
  *((_DWORD *)v10 + 15) = v21;
  v10[64] = v22;
  *((_DWORD *)v10 + 17) = v23;
  v10[72] = v24;
  *(_DWORD *)(v10 + 73) = v44;
  v10[77] = v25;
  *((_OWORD *)v10 + 5) = v46;
  LOBYTE(v33) = 1;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v10[*(int *)(v8 + 20)], v13, v11);
  sub_27256C((uint64_t)v10, v29);
  sub_5E94((uint64_t)v27);
  return sub_2725D0((uint64_t)v10);
}

uint64_t sub_27256C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HideBookEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2725D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HideBookEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_27262C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HideBookEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_272644(void *a1)
{
  return HideBookEvent.Model.encode(to:)(a1);
}

uint64_t sub_27265C@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D90, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327680, a1);
}

uint64_t sub_272694@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315D98, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327698, a1);
}

uint64_t getEnumTagSinglePayload for HideBookEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2726E0);
}

uint64_t sub_2726E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_4E04(&qword_315DE0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for HideBookEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2727F4);
}

uint64_t sub_2727F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_4E04(&qword_315DE0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for HideBookEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_272914);
}

uint64_t sub_272914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HideBookEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2729D8);
}

uint64_t sub_2729D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_272A80()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HideBookEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x272BE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HideBookEvent.Model.CodingKeys()
{
  return &type metadata for HideBookEvent.Model.CodingKeys;
}

unint64_t sub_272C20()
{
  unint64_t result = qword_3277E8;
  if (!qword_3277E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3277E8);
  }
  return result;
}

unint64_t sub_272C78()
{
  unint64_t result = qword_3277F0;
  if (!qword_3277F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3277F0);
  }
  return result;
}

unint64_t sub_272CD0()
{
  unint64_t result = qword_3277F8;
  if (!qword_3277F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3277F8);
  }
  return result;
}

uint64_t sub_272D24(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_327800, &enum case for SessionGroup.default(_:));
}

uint64_t static PortraitOrientationLockEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315DA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327800, a1);
}

uint64_t sub_272D84(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_327818, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static PortraitOrientationLockEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315DA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327818, a1);
}

uint64_t sub_272DE4(uint64_t a1)
{
  unint64_t v2 = sub_272FBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_272E20(uint64_t a1)
{
  unint64_t v2 = sub_272FBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PortraitOrientationLockEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_4E04(&qword_327830);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_272FBC();
  sub_27E440();
  sub_27D7C0();
  sub_1AB30(&qword_315E08);
  sub_27E330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_272FBC()
{
  unint64_t result = qword_327838;
  if (!qword_327838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327838);
  }
  return result;
}

uint64_t PortraitOrientationLockEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v14 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_4E04(&qword_327840);
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PortraitOrientationLockEvent.Model(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_272FBC();
  sub_27E430();
  if (!v2)
  {
    sub_1AB30(&qword_315E28);
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_27329C((uint64_t)v11, v15);
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t type metadata accessor for PortraitOrientationLockEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_327930);
}

uint64_t sub_27329C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PortraitOrientationLockEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_273300@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PortraitOrientationLockEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_273318@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315DA0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_327800, a1);
}

uint64_t sub_273350@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315DA8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327818, a1);
}

uint64_t getEnumTagSinglePayload for PortraitOrientationLockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_27339C);
}

uint64_t sub_27339C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PortraitOrientationLockEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_273420);
}

uint64_t sub_273420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PortraitOrientationLockEvent(uint64_t a1)
{
  return sub_5338(a1, qword_3278A0);
}

uint64_t getEnumTagSinglePayload for PortraitOrientationLockEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2734C8);
}

uint64_t sub_2734C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PortraitOrientationLockEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_273548);
}

uint64_t sub_273548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for PortraitOrientationLockEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x273654);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PortraitOrientationLockEvent.Model.CodingKeys()
{
  return &type metadata for PortraitOrientationLockEvent.Model.CodingKeys;
}

unint64_t sub_273690()
{
  unint64_t result = qword_327968;
  if (!qword_327968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327968);
  }
  return result;
}

unint64_t sub_2736E8()
{
  unint64_t result = qword_327970;
  if (!qword_327970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327970);
  }
  return result;
}

unint64_t sub_273740()
{
  unint64_t result = qword_327978;
  if (!qword_327978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327978);
  }
  return result;
}

uint64_t sub_273794()
{
  uint64_t v0 = sub_4E04(&qword_3279A0);
  sub_7CA8(v0, qword_327980);
  uint64_t v1 = sub_4BD4(v0, (uint64_t)qword_327980);
  uint64_t v2 = sub_27DCE0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_27382C@<X0>(uint64_t a1@<X8>)
{
  if (qword_315DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_4E04(&qword_3279A0);
  uint64_t v3 = sub_4BD4(v2, (uint64_t)qword_327980);

  return sub_273ABC(v3, a1);
}

uint64_t EnvironmentValues.pageMetrics.getter()
{
  sub_2738F0();

  return sub_27DB00();
}

unint64_t sub_2738F0()
{
  unint64_t result = qword_327998;
  if (!qword_327998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327998);
  }
  return result;
}

uint64_t sub_273944(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_3279A0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_273ABC(a1, (uint64_t)&v9 - v6);
  sub_273ABC((uint64_t)v7, (uint64_t)v5);
  sub_2738F0();
  sub_27DB10();
  return sub_273B24((uint64_t)v7);
}

uint64_t EnvironmentValues.pageMetrics.setter(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_3279A0);
  __chkstk_darwin(v2 - 8);
  sub_273ABC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2738F0();
  sub_27DB10();
  return sub_273B24(a1);
}

uint64_t sub_273ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_4E04(&qword_3279A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_273B24(uint64_t a1)
{
  uint64_t v2 = sub_4E04(&qword_3279A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*EnvironmentValues.pageMetrics.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(sub_4E04(&qword_3279A0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_2738F0();
  sub_27DB00();
  return sub_273C44;
}

void sub_273C44(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_273ABC((*a1)[3], (*a1)[2]);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    sub_273ABC(v3[2], v3[1]);
    sub_27DB10();
    sub_273B24((uint64_t)v6);
  }
  else
  {
    sub_27DB10();
  }
  sub_273B24((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t sub_273D14()
{
  return sub_27DB00();
}

ValueMetadata *type metadata accessor for PageMetricsKey()
{
  return &type metadata for PageMetricsKey;
}

unint64_t sub_273D68()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_273DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2743F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_273DD0(uint64_t a1)
{
  unint64_t v2 = sub_273FB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_273E0C(uint64_t a1)
{
  unint64_t v2 = sub_273FB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingGoalsDurationData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_3279A8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  sub_5900(a1, a1[3]);
  sub_273FB4();
  sub_27E440();
  char v11 = 0;
  sub_27E350();
  if (!v2)
  {
    char v10 = 1;
    sub_27E350();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_273FB4()
{
  unint64_t result = qword_3279B0;
  if (!qword_3279B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279B0);
  }
  return result;
}

uint64_t ReadingGoalsDurationData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_3279B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_273FB4();
  sub_27E430();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_27E280();
    char v13 = 1;
    uint64_t v10 = sub_27E280();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_2741AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReadingGoalsDurationData.init(from:)(a1, a2);
}

uint64_t sub_2741C4(void *a1)
{
  return ReadingGoalsDurationData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ReadingGoalsDurationData()
{
  return &type metadata for ReadingGoalsDurationData;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoalsDurationData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2742B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoalsDurationData.CodingKeys()
{
  return &type metadata for ReadingGoalsDurationData.CodingKeys;
}

unint64_t sub_2742F4()
{
  unint64_t result = qword_3279C0;
  if (!qword_3279C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279C0);
  }
  return result;
}

unint64_t sub_27434C()
{
  unint64_t result = qword_3279C8;
  if (!qword_3279C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279C8);
  }
  return result;
}

unint64_t sub_2743A4()
{
  unint64_t result = qword_3279D0;
  if (!qword_3279D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279D0);
  }
  return result;
}

uint64_t sub_2743F8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000000002B2010 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B2030)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::BackgroundColor_optional __swiftcall BackgroundColor.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA2D0;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 11;
  if (v5 < 0xB) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t BackgroundColor.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574696877;
      break;
    case 2:
      uint64_t result = 0x6169706573;
      break;
    case 3:
      uint64_t result = 2036691559;
      break;
    case 4:
      uint64_t result = 0x6B63616C62;
      break;
    case 5:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    case 6:
      uint64_t result = 0x7465697571;
      break;
    case 7:
      uint64_t result = 0x7265706170;
      break;
    case 8:
      uint64_t result = 1835819363;
      break;
    case 9:
      uint64_t result = 0x7375636F66;
      break;
    case 0xA:
      uint64_t result = 1684828002;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_274668()
{
  unint64_t result = qword_3279D8;
  if (!qword_3279D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279D8);
  }
  return result;
}

Swift::Int sub_2746BC()
{
  return sub_27E420();
}

uint64_t sub_274704()
{
  return sub_27BD88();
}

Swift::Int sub_27470C()
{
  return sub_27E420();
}

BookAnalytics::BackgroundColor_optional sub_274750(Swift::String *a1)
{
  return BackgroundColor.init(rawValue:)(*a1);
}

uint64_t sub_27475C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BackgroundColor.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_274784()
{
  return sub_27DED0();
}

uint64_t sub_2747E4()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for BackgroundColor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x274900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundColor()
{
  return &type metadata for BackgroundColor;
}

unint64_t sub_274938()
{
  unint64_t result = qword_3279E0;
  if (!qword_3279E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3279E0);
  }
  return result;
}

uint64_t ActionModel.instrumentingAppAnalyticsClickEvent(using:refId:dataStack:sizeProvider:clickData:additionalData:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v42 = a8;
  uint64_t v41 = a6;
  uint64_t v16 = sub_27DD00();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_27DD20();
  __chkstk_darwin(v17);
  __int16 v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a3;
  long long v22 = a5[1];
  long long v46 = *a5;
  long long v47 = v22;
  long long v23 = a5[3];
  long long v48 = a5[2];
  long long v49 = v23;
  if (a1)
  {
    uint64_t v40 = v18;
    id v24 = a1;
    sub_27DCF0();
    sub_46D1C(a4, (uint64_t)v45, &qword_316210);
    sub_46D1C(a2, (uint64_t)v44, &qword_3279E8);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    long long v26 = v47;
    *(_OWORD *)(v25 + 24) = v46;
    *(_OWORD *)(v25 + 40) = v26;
    long long v27 = v49;
    *(_OWORD *)(v25 + 56) = v48;
    *(_OWORD *)(v25 + 72) = v27;
    *(void *)(v25 + 88) = v21;
    sub_1F78C((uint64_t)v45, v25 + 96, &qword_316210);
    *(void *)(v25 + 136) = v41;
    sub_1F78C((uint64_t)v44, v25 + 144, &qword_3279E8);
    id v28 = v24;
    sub_274F48((uint64_t)&v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_27DD10();
    uint64_t v30 = v42;
    uint64_t v29 = v43;
    sub_27DCD0();
    sub_4E04(&qword_3279F0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_283E30;
    *(void *)(v31 + 56) = v17;
    *(void *)(v31 + 64) = &protocol witness table for ClosureAction;
    uint64_t v32 = sub_1D81A4((uint64_t *)(v31 + 32));
    uint64_t v33 = v40;
    (*(void (**)(uint64_t *, char *, uint64_t))(v40 + 16))(v32, v20, v17);
    *(void *)(v31 + 96) = a7;
    *(void *)(v31 + 104) = v30;
    uint64_t v34 = sub_1D81A4((uint64_t *)(v31 + 72));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(v34, v29, a7);
    a9[3] = sub_27DD40();
    a9[4] = (uint64_t)&protocol witness table for CompoundAction;
    sub_1D81A4(a9);
    sub_27DD30();

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v20, v17);
  }
  else
  {
    uint64_t v36 = v42;
    a9[3] = a7;
    a9[4] = v36;
    uint64_t v37 = sub_1D81A4(a9);
    uint64_t v38 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16);
    uint64_t v39 = v43;
    return v38(v37, v39, a7);
  }
}

uint64_t sub_274D28(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = BATracker.copy()();
  if (result)
  {
    uint64_t v12 = (void *)result;
    sub_46D1C(a4, (uint64_t)v18, &qword_316210);
    sub_46D1C(a6, (uint64_t)v17, &qword_3279E8);
    uint64_t v13 = swift_allocObject();
    long long v14 = a2[1];
    *(_OWORD *)(v13 + 16) = *a2;
    *(_OWORD *)(v13 + 32) = v14;
    long long v15 = a2[3];
    *(_OWORD *)(v13 + 48) = a2[2];
    *(_OWORD *)(v13 + 64) = v15;
    *(void *)(v13 + 80) = a3;
    sub_1F78C((uint64_t)v18, v13 + 88, &qword_316210);
    *(void *)(v13 + 128) = a5;
    sub_1F78C((uint64_t)v17, v13 + 136, &qword_3279E8);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_2754AC;
    *(void *)(v16 + 24) = v13;
    sub_274F48((uint64_t)a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_27D730();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_274E98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120)) {
    sub_5E94(v0 + 96);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 168)) {
    sub_5E94(v0 + 144);
  }

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_274F18()
{
  return sub_274D28(*(void *)(v0 + 16), (_OWORD *)(v0 + 24), *(void *)(v0 + 88), v0 + 96, *(void *)(v0 + 136), v0 + 144);
}

uint64_t sub_274F48(uint64_t a1)
{
  return a1;
}

uint64_t sub_274F94(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v8 = a2[1];
  long long v42 = *a2;
  long long v43 = v8;
  long long v9 = a2[3];
  long long v44 = a2[2];
  long long v45 = v9;
  uint64_t v10 = sub_4E04(&qword_319FE0);
  uint64_t v11 = sub_27D380();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_285930;
  unint64_t v32 = v13;
  unsigned int v31 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v30 = *(void (**)(unint64_t))(v12 + 104);
  v30(v14 + v13);
  sub_2428C8();
  sub_27D2E0();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_2754FC(v15, (void (*)(void *, uint64_t))sub_267178);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a5 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)(a5 + 32);
    swift_bridgeObjectRetain();
    uint64_t v28 = a4;
    uint64_t v27 = v11;
    while (1)
    {
      sub_258E80((uint64_t)v17, (uint64_t)&v42);
      sub_4E04(&qword_326F60);
      sub_4E04(&qword_326F68);
      if (swift_dynamicCast())
      {
        sub_AE174(&v36, (uint64_t)v39);
        sub_46D1C(a4, (uint64_t)&v36, &qword_316210);
        if (*((void *)&v37 + 1))
        {
          sub_AE174(&v36, (uint64_t)&v42);
          sub_46D1C(a6, (uint64_t)&v33, &qword_3279E8);
          if (*((void *)&v34 + 1))
          {
            long long v36 = v33;
            long long v37 = v34;
            uint64_t v38 = v35;
            uint64_t v19 = v40;
            uint64_t v20 = v41;
            sub_5900(v39, v40);
            uint64_t v21 = v10;
            long long v22 = *(void (**)(long long *, long long *, uint64_t, uint64_t))(v20 + 24);
            *((void *)&v34 + 1) = v19;
            uint64_t v35 = v20;
            sub_1D81A4((uint64_t *)&v33);
            v22(&v36, &v42, v19, v20);
            uint64_t v10 = v21;
            uint64_t v11 = v27;
            uint64_t v23 = swift_allocObject();
            *(_OWORD *)(v23 + 16) = xmmword_285930;
            ((void (*)(unint64_t, void, uint64_t))v30)(v23 + v32, v31, v27);
            sub_27D2E0();
            a4 = v28;
            swift_bridgeObjectRelease();
            sub_E3F0((uint64_t)&v36);
            sub_5E94((uint64_t)&v42);
            sub_5E94((uint64_t)&v33);
            sub_5E94((uint64_t)v39);
            goto LABEL_5;
          }
          sub_5E94((uint64_t)&v42);
          id v24 = &v33;
          uint64_t v25 = &qword_3279E8;
        }
        else
        {
          id v24 = &v36;
          uint64_t v25 = &qword_316210;
        }
        sub_ADCF8((uint64_t)v24, v25);
        sub_5E94((uint64_t)v39);
      }
      else
      {
        uint64_t v38 = 0;
        long long v36 = 0u;
        long long v37 = 0u;
        sub_ADCF8((uint64_t)&v36, &qword_326F70);
      }
      sub_5900(v17, v17[3]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_285930;
      ((void (*)(unint64_t, void, uint64_t))v30)(v18 + v32, v31, v11);
      sub_27D2E0();
      swift_bridgeObjectRelease();
LABEL_5:
      v17 += 6;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  type metadata accessor for ClickEvent(0);
  sub_2756A0();
  long long v42 = 0u;
  long long v43 = 0u;
  sub_27D2F0();
  return sub_ADCF8((uint64_t)&v42, (uint64_t *)&unk_320320);
}

uint64_t sub_275434()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112)) {
    sub_5E94(v0 + 88);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 160)) {
    sub_5E94(v0 + 136);
  }

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_2754AC(uint64_t a1)
{
  return sub_274F94(a1, (long long *)(v1 + 16), *(void *)(v1 + 80), v1 + 88, *(void *)(v1 + 128), v1 + 136);
}

uint64_t sub_2754C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2754FC(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v16 + 1;
      if (v16 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v4 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v16 + 2;
        if (v16 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v4 + 8 * v10);
        if (!v17)
        {
          int64_t v10 = v16 + 3;
          if (v16 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v4 + 8 * v10);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    unint64_t v13 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = v13[1];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    v19[0] = *v13;
    v19[1] = v14;
    v19[2] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v19, v15);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_2756A0()
{
  unint64_t result = qword_3266E0;
  if (!qword_3266E0)
  {
    type metadata accessor for ClickEvent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_3266E0);
  }
  return result;
}

uint64_t sub_2756F8(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, qword_3279F8, &enum case for SessionGroup.default(_:));
}

uint64_t static DislikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315DB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3279F8, a1);
}

uint64_t sub_275758(uint64_t a1)
{
  return sub_4C34(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, qword_327A10, &enum case for TimestampGranularity.jitter(_:));
}

uint64_t static DislikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_4CF8(&qword_315DC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327A10, a1);
}

uint64_t DislikeEvent.suggestionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DislikeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DislikeEvent(uint64_t a1)
{
  return sub_5338(a1, qword_327A98);
}

uint64_t DislikeEvent.suggestionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DislikeEvent(0) + 20);
  uint64_t v4 = sub_4E04(&qword_316F88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DislikeEvent.suggestionData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DislikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DislikeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DislikeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DislikeEvent(0) + 24);
  uint64_t v4 = sub_4E04(&qword_315DE0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DislikeEvent.eventData.modify())()
{
  return BridgedContentAcquisitionType.rawValue.getter;
}

uint64_t DislikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_4E04(&qword_316770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for DislikeEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = enum case for EventProperty.optional<A>(_:);
  uint64_t v7 = sub_4E04(&qword_316F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  uint64_t v9 = sub_4E04(&qword_315DE0);
  int64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v2, v9);
}

uint64_t DislikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DislikeEvent.Model(0) + 24);
  uint64_t v4 = sub_27D7C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DislikeEvent.Model(uint64_t a1)
{
  return sub_5338(a1, qword_327B30);
}

uint64_t DislikeEvent.Model.init(contentData:suggestionData:eventData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 60);
  char v12 = *(unsigned char *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 68);
  char v14 = *(unsigned char *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 77);
  char v16 = *a2;
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v5;
  *(unsigned char *)(a4 + 16) = v6;
  *(_OWORD *)(a4 + 24) = v7;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(_WORD *)(a4 + 56) = v10;
  *(_DWORD *)(a4 + 60) = v11;
  *(unsigned char *)(a4 + 64) = v12;
  *(_DWORD *)(a4 + 68) = v13;
  *(unsigned char *)(a4 + 72) = v14;
  *(_DWORD *)(a4 + 73) = *(_DWORD *)(a1 + 73);
  *(unsigned char *)(a4 + 77) = v15;
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a1 + 80);
  *(unsigned char *)(a4 + 96) = v16;
  uint64_t v17 = a4 + *(int *)(type metadata accessor for DislikeEvent.Model(0) + 24);
  uint64_t v18 = sub_27D7C0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);

  return v19(v17, a3, v18);
}

uint64_t sub_275D04(uint64_t a1)
{
  unint64_t v2 = sub_275FD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_275D40(uint64_t a1)
{
  unint64_t v2 = sub_275FD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DislikeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_4E04(&qword_327A28);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_275FD0();
  sub_27E440();
  uint64_t v10 = v4[1];
  char v11 = *((unsigned char *)v4 + 16);
  long long v12 = *(_OWORD *)(v4 + 3);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __int16 v15 = *((_WORD *)v4 + 28);
  int v16 = *((_DWORD *)v4 + 15);
  char v17 = *((unsigned char *)v4 + 64);
  int v18 = *((_DWORD *)v4 + 17);
  char v19 = *((unsigned char *)v4 + 72);
  char v20 = *((unsigned char *)v4 + 77);
  uint64_t v24 = *v4;
  uint64_t v25 = v10;
  char v26 = v11;
  long long v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  __int16 v30 = v15;
  int v31 = v16;
  char v32 = v17;
  int v33 = v18;
  char v34 = v19;
  int v35 = *(_DWORD *)((char *)v4 + 73);
  char v36 = v20;
  long long v37 = *((_OWORD *)v4 + 5);
  char v23 = 0;
  sub_1A1D4();
  sub_27E330();
  if (!v3)
  {
    LOBYTE(v24) = *((unsigned char *)v4 + 96);
    char v23 = 1;
    sub_36B1C();
    sub_27E2C0();
    type metadata accessor for DislikeEvent.Model(0);
    LOBYTE(v24) = 2;
    sub_27D7C0();
    sub_1AB30(&qword_315E08);
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_275FD0()
{
  unint64_t result = qword_327A30;
  if (!qword_327A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327A30);
  }
  return result;
}

uint64_t DislikeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_27D7C0();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4E04(&qword_327A38);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DislikeEvent.Model(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v34 = a1;
  sub_5900(a1, v13);
  sub_275FD0();
  sub_27E430();
  if (v2) {
    return sub_5E94((uint64_t)v34);
  }
  uint64_t v14 = v32;
  __int16 v15 = v6;
  char v49 = 0;
  sub_1A98C();
  uint64_t v16 = v33;
  sub_27E260();
  uint64_t v17 = v36;
  char v18 = v37;
  long long v19 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  __int16 v22 = v41;
  int v23 = v42;
  char v24 = v43;
  int v25 = v44;
  char v26 = v45;
  char v27 = v47;
  *(void *)long long v12 = v35;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *(_OWORD *)(v12 + 24) = v19;
  *((void *)v12 + 5) = v20;
  *((void *)v12 + 6) = v21;
  *((_WORD *)v12 + 28) = v22;
  *((_DWORD *)v12 + 15) = v23;
  v12[64] = v24;
  *((_DWORD *)v12 + 17) = v25;
  v12[72] = v26;
  *(_DWORD *)(v12 + 73) = v46;
  v12[77] = v27;
  *((_OWORD *)v12 + 5) = v48;
  char v49 = 1;
  sub_377EC();
  sub_27E1F0();
  v12[96] = v35;
  LOBYTE(v35) = 2;
  sub_1AB30(&qword_315E28);
  sub_27E260();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[*(int *)(v10 + 24)], v15, v4);
  sub_276408((uint64_t)v12, v31);
  sub_5E94((uint64_t)v34);
  return sub_27646C((uint64_t)v12);
}

uint64_t sub_276408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_27646C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2764C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DislikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_2764E0(void *a1)
{
  return DislikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_2764F8@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315DB8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)qword_3279F8, a1);
}

uint64_t sub_276530@<X0>(uint64_t a1@<X8>)
{
  return sub_60E4(&qword_315DC0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)qword_327A10, a1);
}

uint64_t getEnumTagSinglePayload for DislikeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_27657C);
}

uint64_t sub_27657C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_4E04(&qword_316770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_4E04(&qword_316F88);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_4E04(&qword_315DE0);
  __int16 v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for DislikeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2766E8);
}

uint64_t sub_2766E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_4E04(&qword_316770);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_4E04(&qword_316F88);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_4E04(&qword_315DE0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t getEnumTagSinglePayload for DislikeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_276860);
}

uint64_t sub_276860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_27D7C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DislikeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_276924);
}

uint64_t sub_276924(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_27D7C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2769CC()
{
  uint64_t result = sub_27D7C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DislikeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x276B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DislikeEvent.Model.CodingKeys()
{
  return &type metadata for DislikeEvent.Model.CodingKeys;
}

unint64_t sub_276B74()
{
  unint64_t result = qword_327B70;
  if (!qword_327B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327B70);
  }
  return result;
}

unint64_t sub_276BCC()
{
  unint64_t result = qword_327B78;
  if (!qword_327B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327B78);
  }
  return result;
}

unint64_t sub_276C24()
{
  unint64_t result = qword_327B80;
  if (!qword_327B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327B80);
  }
  return result;
}

BookAnalytics::AudioPlaybackSpeedData __swiftcall AudioPlaybackSpeedData.init(playbackSpeed:previousPlaybackSpeed:)(Swift::Float playbackSpeed, Swift::Float previousPlaybackSpeed)
{
  *uint64_t v2 = playbackSpeed;
  v2[1] = previousPlaybackSpeed;
  result.previousPlaybackSpeed = previousPlaybackSpeed;
  result.playbackSpeed = playbackSpeed;
  return result;
}

BOOL static AudioPlaybackSpeedData.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

unint64_t sub_276CAC()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t sub_276CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_277388(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_276D14(uint64_t a1)
{
  unint64_t v2 = sub_276EF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_276D50(uint64_t a1)
{
  unint64_t v2 = sub_276EF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScrollData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327B88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_276EF4();
  sub_27E440();
  v8[15] = 0;
  sub_27E320();
  if (!v1)
  {
    v8[14] = 1;
    sub_27E320();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_276EF4()
{
  unint64_t result = qword_327B90;
  if (!qword_327B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327B90);
  }
  return result;
}

uint64_t ScrollData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327B98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_276EF4();
  sub_27E430();
  if (!v2)
  {
    char v16 = 0;
    sub_27E250();
    int v10 = v9;
    char v15 = 1;
    sub_27E250();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_2770F4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollData.init(from:)(a1, a2);
}

uint64_t sub_27710C(void *a1)
{
  return ScrollData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ScrollData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScrollData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScrollData()
{
  return &type metadata for ScrollData;
}

unsigned char *storeEnumTagSinglePayload for ScrollData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x277248);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollData.CodingKeys()
{
  return &type metadata for ScrollData.CodingKeys;
}

unint64_t sub_277284()
{
  unint64_t result = qword_327BA0;
  if (!qword_327BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BA0);
  }
  return result;
}

unint64_t sub_2772DC()
{
  unint64_t result = qword_327BA8;
  if (!qword_327BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BA8);
  }
  return result;
}

unint64_t sub_277334()
{
  unint64_t result = qword_327BB0;
  if (!qword_327BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BB0);
  }
  return result;
}

uint64_t sub_277388(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ELL && a2 == 0x80000000002B20C0 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000000002B20E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unsigned char *MessageData.init(messageType:messageIdentifier:hasActionable:actionIdentifier:placementName:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(unsigned char *)a8 = *result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t MessageData.hasActionable.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MessageData.hasActionable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

unint64_t sub_2774A4(char a1)
{
  unint64_t result = 0x546567617373656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6F69746341736168;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6E656D6563616C70;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_277580()
{
  return sub_2774A4(*v0);
}

uint64_t sub_277588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_278288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2775B0(uint64_t a1)
{
  unint64_t v2 = sub_277D6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2775EC(uint64_t a1)
{
  unint64_t v2 = sub_277D6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_327BB8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v16 = *((void *)v1 + 2);
  uint64_t v17 = v9;
  int v15 = v1[24];
  uint64_t v10 = *((void *)v1 + 4);
  v13[2] = *((void *)v1 + 5);
  uint64_t v14 = v10;
  v13[1] = *((void *)v1 + 6);
  sub_5900(a1, a1[3]);
  sub_277D6C();
  sub_27E440();
  char v24 = v8;
  char v23 = 0;
  sub_277DC0();
  sub_27E330();
  if (!v2)
  {
    uint64_t v11 = v14;
    char v22 = 1;
    sub_27E290();
    char v21 = 2;
    sub_27E300();
    uint64_t v18 = v11;
    char v20 = 3;
    sub_4E04(&qword_319620);
    sub_97C90(&qword_319628);
    sub_27E2C0();
    char v19 = 4;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MessageData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327BD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_277D6C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v30 = 0;
    sub_277E14();
    sub_27E260();
    int v9 = v31;
    char v29 = 1;
    uint64_t v10 = sub_27E1C0();
    uint64_t v13 = v12;
    uint64_t v23 = v10;
    int v24 = v9;
    char v28 = 2;
    swift_bridgeObjectRetain();
    LOBYTE(v9) = sub_27E230();
    sub_4E04(&qword_319620);
    char v27 = 3;
    sub_97C90(&qword_319650);
    sub_27E1F0();
    char v22 = a2;
    uint64_t v14 = v25;
    char v26 = 4;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_27E220();
    uint64_t v17 = v16;
    int v21 = v9 & 1;
    uint64_t v18 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v19 = v22;
    *char v22 = v24;
    *((void *)v19 + 1) = v23;
    *((void *)v19 + 2) = v13;
    v19[24] = v21;
    *((void *)v19 + 4) = v14;
    *((void *)v19 + 5) = v18;
    *((void *)v19 + 6) = v17;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_277BE4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MessageData.init(from:)(a1, a2);
}

uint64_t sub_277BFC(void *a1)
{
  return MessageData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics11MessageDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  int v2 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  int v9 = *(void **)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if ((sub_32AC8(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (!v15)
  {
    uint64_t result = 0;
    if (v7) {
      return result;
    }
    goto LABEL_11;
  }
  if (!v7) {
    return 0;
  }
  if (v14 != v6 || v15 != v7)
  {
    char v13 = sub_27E370();
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
LABEL_11:
    if ((v2 ^ v8)) {
      return result;
    }
    goto LABEL_12;
  }
  if (v2 != v8) {
    return 0;
  }
LABEL_12:
  if (!v4)
  {
    if (!v9) {
      goto LABEL_15;
    }
    return 0;
  }
  if (!v9 || (sub_80FC4(v4, v9) & 1) == 0) {
    return 0;
  }
LABEL_15:
  if (v3 == v10 && v5 == v11) {
    return 1;
  }

  return sub_27E370();
}

unint64_t sub_277D6C()
{
  unint64_t result = qword_327BC0;
  if (!qword_327BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BC0);
  }
  return result;
}

unint64_t sub_277DC0()
{
  unint64_t result = qword_327BC8;
  if (!qword_327BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BC8);
  }
  return result;
}

unint64_t sub_277E14()
{
  unint64_t result = qword_327BD8;
  if (!qword_327BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BD8);
  }
  return result;
}

uint64_t initializeWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessageData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageData()
{
  return &type metadata for MessageData;
}

unsigned char *storeEnumTagSinglePayload for MessageData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x278148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageData.CodingKeys()
{
  return &type metadata for MessageData.CodingKeys;
}

unint64_t sub_278184()
{
  unint64_t result = qword_327BE0;
  if (!qword_327BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BE0);
  }
  return result;
}

unint64_t sub_2781DC()
{
  unint64_t result = qword_327BE8;
  if (!qword_327BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BE8);
  }
  return result;
}

unint64_t sub_278234()
{
  unint64_t result = qword_327BF0;
  if (!qword_327BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327BF0);
  }
  return result;
}

uint64_t sub_278288(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002B2100 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69746341736168 && a2 == 0xED0000656C62616ELL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002B2120 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED0000656D614E74)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2784F8()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x6B63616279616C70;
  }
}

uint64_t sub_278544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_278B98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_27856C(uint64_t a1)
{
  unint64_t v2 = sub_27874C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2785A8(uint64_t a1)
{
  unint64_t v2 = sub_27874C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioPlaybackSpeedData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5900(a1, a1[3]);
  sub_27874C();
  sub_27E440();
  v8[15] = 0;
  sub_27E320();
  if (!v1)
  {
    v8[14] = 1;
    sub_27E320();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_27874C()
{
  unint64_t result = qword_327C00;
  if (!qword_327C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C00);
  }
  return result;
}

uint64_t AudioPlaybackSpeedData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327C08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_27874C();
  sub_27E430();
  if (!v2)
  {
    char v16 = 0;
    sub_27E250();
    int v10 = v9;
    char v15 = 1;
    sub_27E250();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_27894C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return AudioPlaybackSpeedData.init(from:)(a1, a2);
}

uint64_t sub_278964(void *a1)
{
  return AudioPlaybackSpeedData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AudioPlaybackSpeedData()
{
  return &type metadata for AudioPlaybackSpeedData;
}

unsigned char *storeEnumTagSinglePayload for AudioPlaybackSpeedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x278A58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioPlaybackSpeedData.CodingKeys()
{
  return &type metadata for AudioPlaybackSpeedData.CodingKeys;
}

unint64_t sub_278A94()
{
  unint64_t result = qword_327C10;
  if (!qword_327C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C10);
  }
  return result;
}

unint64_t sub_278AEC()
{
  unint64_t result = qword_327C18;
  if (!qword_327C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C18);
  }
  return result;
}

unint64_t sub_278B44()
{
  unint64_t result = qword_327C20;
  if (!qword_327C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C20);
  }
  return result;
}

uint64_t sub_278B98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B63616279616C70 && a2 == 0xED00006465657053;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002B2140)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_278CB0()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0xD000000000000020;
  }
}

uint64_t sub_278CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_279650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_278D18(uint64_t a1)
{
  unint64_t v2 = sub_279250();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_278D54(uint64_t a1)
{
  unint64_t v2 = sub_279250();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CellularData.encode(to:)(void *a1)
{
  uint64_t v4 = sub_4E04(&qword_327C28);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  sub_5900(a1, a1[3]);
  sub_279250();
  sub_27E440();
  char v15 = v8;
  char v14 = 0;
  sub_1AEE94();
  sub_27E330();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_27E330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CellularData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327C38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_279250();
  sub_27E430();
  if (!v2)
  {
    char v15 = 0;
    sub_1AF038();
    sub_27E260();
    char v9 = v16;
    char v13 = 1;
    sub_27E260();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_5E94((uint64_t)a1);
}

uint64_t sub_2790F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CellularData.init(from:)(a1, a2);
}

uint64_t sub_279110(void *a1)
{
  return CellularData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics12CellularDataV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0 = CellularRadioAccessTechnology.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == CellularRadioAccessTechnology.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  uint64_t v7 = CellularRadioAccessTechnology.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 == CellularRadioAccessTechnology.rawValue.getter() && v9 == v10) {
    char v6 = 1;
  }
  else {
    char v6 = sub_27E370();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_279250()
{
  unint64_t result = qword_327C30;
  if (!qword_327C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CellularData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 65295 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65295 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65295;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65295;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65295;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CellularData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65295 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65295 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 241;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27940CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularData()
{
  return &type metadata for CellularData;
}

unsigned char *storeEnumTagSinglePayload for CellularData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x279510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularData.CodingKeys()
{
  return &type metadata for CellularData.CodingKeys;
}

unint64_t sub_27954C()
{
  unint64_t result = qword_327C40;
  if (!qword_327C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C40);
  }
  return result;
}

unint64_t sub_2795A4()
{
  unint64_t result = qword_327C48;
  if (!qword_327C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C48);
  }
  return result;
}

unint64_t sub_2795FC()
{
  unint64_t result = qword_327C50;
  if (!qword_327C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C50);
  }
  return result;
}

uint64_t sub_279650(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x80000000002B2160 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000000002B1580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BookAnalytics::OsInstallVariant_optional __swiftcall OsInstallVariant.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA3F8;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

uint64_t OsInstallVariant.rawValue.getter()
{
  uint64_t v1 = 0x6C616E7265746E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C616E7265747865;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_2797EC(char *a1, unsigned __int8 *a2)
{
  return sub_30B7C(*a1, *a2);
}

unint64_t sub_2797FC()
{
  unint64_t result = qword_327C58;
  if (!qword_327C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C58);
  }
  return result;
}

Swift::Int sub_279850()
{
  return sub_27E420();
}

uint64_t sub_2798E8()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_27996C()
{
  return sub_27E420();
}

BookAnalytics::OsInstallVariant_optional sub_279A00(Swift::String *a1)
{
  return OsInstallVariant.init(rawValue:)(*a1);
}

void sub_279A0C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6C616E7265746E69;
  if (v2 != 1) {
    uint64_t v4 = 0x6C616E7265747865;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_279A60()
{
  return sub_27DED0();
}

uint64_t sub_279AC0()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for OsInstallVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x279BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OsInstallVariant()
{
  return &type metadata for OsInstallVariant;
}

unint64_t sub_279C14()
{
  unint64_t result = qword_327C60;
  if (!qword_327C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C60);
  }
  return result;
}

void __swiftcall SectionData.init(sectionType:exposureIndex:name:cellSize:componentContained:subSectionID:subSectionName:subSectionPosition:sectionID:)(BookAnalytics::SectionData *__return_ptr retstr, BookAnalytics::SectionType sectionType, Swift::Int32 exposureIndex, Swift::String name, Swift::String cellSize, Swift::String componentContained, Swift::String_optional subSectionID, Swift::String_optional subSectionName, Swift::Int32_optional subSectionPosition, Swift::String sectionID)
{
  retstr->sectionType = *(unsigned char *)sectionType;
  retstr->exposureIndex = exposureIndex;
  retstr->name = name;
  retstr->cellSize = cellSize;
  retstr->componentContained = componentContained;
  retstr->subSectionID = subSectionID;
  retstr->subSectionName = subSectionName;
  retstr->subSectionPosition.value = subSectionPosition.value;
  retstr->subSectionPosition.is_nil = subSectionPosition.is_nil;
  retstr->sectionID = sectionID;
}

unint64_t sub_279CB0(char a1)
{
  unint64_t result = 0x546E6F6974636573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657275736F707865;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x657A69536C6C6563;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
    case 6:
      unint64_t result = 0x6974636553627573;
      break;
    case 8:
      unint64_t result = 0x496E6F6974636573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_279DDC()
{
  return sub_279CB0(*v0);
}

uint64_t sub_279DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_27B128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_279E0C(uint64_t a1)
{
  unint64_t v2 = sub_27AA7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_279E48(uint64_t a1)
{
  unint64_t v2 = sub_27AA7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SectionData.encode(to:)(void *a1)
{
  uint64_t v3 = sub_4E04(&qword_327C68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  int v30 = *((_DWORD *)v1 + 1);
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v28 = *((void *)v1 + 2);
  uint64_t v29 = v8;
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v24 = *((void *)v1 + 5);
  uint64_t v25 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v22 = *((void *)v1 + 7);
  uint64_t v23 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v20 = *((void *)v1 + 9);
  uint64_t v21 = v12;
  uint64_t v13 = *((void *)v1 + 10);
  uint64_t v18 = *((unsigned int *)v1 + 22);
  uint64_t v19 = v13;
  HIDWORD(v17) = v1[92];
  uint64_t v14 = *((void *)v1 + 13);
  uint64_t v26 = *((void *)v1 + 12);
  uint64_t v27 = v9;
  sub_5900(a1, a1[3]);
  sub_27AA7C();
  sub_27E440();
  char v42 = v7;
  char v41 = 0;
  sub_27AAD0();
  uint64_t v15 = v31;
  sub_27E330();
  if (!v15)
  {
    uint64_t v31 = v14;
    char v40 = 1;
    sub_27E340();
    char v39 = 2;
    sub_27E2F0();
    char v38 = 3;
    sub_27E2F0();
    char v37 = 4;
    sub_27E2F0();
    char v36 = 5;
    sub_27E290();
    char v35 = 6;
    sub_27E290();
    char v34 = 7;
    char v33 = BYTE4(v17);
    sub_27E2D0();
    char v32 = 8;
    sub_27E2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SectionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_4E04(&qword_327C80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5900(a1, a1[3]);
  sub_27AA7C();
  sub_27E430();
  if (v2)
  {
    sub_5E94((uint64_t)a1);
  }
  else
  {
    char v53 = 0;
    sub_27AB24();
    sub_27E260();
    int v9 = v54;
    char v52 = 1;
    int v10 = sub_27E270();
    char v51 = 2;
    uint64_t v41 = sub_27E220();
    int v42 = v10;
    char v50 = 3;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_27E220();
    uint64_t v44 = v13;
    uint64_t v39 = v14;
    int v40 = v9;
    char v49 = 4;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_27E220();
    char v38 = a2;
    uint64_t v17 = v16;
    char v48 = 5;
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_27E1C0();
    uint64_t v43 = v19;
    uint64_t v22 = v21;
    uint64_t v36 = v20;
    char v47 = 6;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_27E1C0();
    uint64_t v25 = v24;
    uint64_t v35 = v23;
    char v46 = 7;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_27E200();
    char v45 = 8;
    uint64_t v33 = sub_27E220();
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v28 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v30 = v38;
    *char v38 = v40;
    *((_DWORD *)v30 + 1) = v42;
    *((void *)v30 + 1) = v41;
    *((void *)v30 + 2) = v28;
    *((void *)v30 + 3) = v39;
    *((void *)v30 + 4) = v17;
    *((void *)v30 + 5) = v37;
    *((void *)v30 + 6) = v29;
    *((void *)v30 + 7) = v36;
    *((void *)v30 + 8) = v22;
    *((void *)v30 + 9) = v35;
    *((void *)v30 + 10) = v25;
    char v31 = BYTE4(v34);
    *((_DWORD *)v30 + 22) = v34;
    v30[92] = v31 & 1;
    *((void *)v30 + 12) = v33;
    *((void *)v30 + 13) = v27;
    sub_5E94((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_27A76C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SectionData.init(from:)(a1, a2);
}

uint64_t sub_27A784(void *a1)
{
  return SectionData.encode(to:)(a1);
}

uint64_t _s13BookAnalytics11SectionDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v39 = *(void *)(a1 + 40);
  uint64_t v37 = *(void *)(a1 + 48);
  uint64_t v31 = *(void *)(a1 + 56);
  uint64_t v35 = *(void *)(a1 + 64);
  uint64_t v29 = *(void *)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 80);
  int v22 = *(_DWORD *)(a1 + 88);
  char v27 = *(unsigned char *)(a1 + 92);
  int v7 = *(_DWORD *)(a2 + 4);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v38 = *(void *)(a2 + 40);
  uint64_t v36 = *(void *)(a2 + 48);
  uint64_t v30 = *(void *)(a2 + 56);
  uint64_t v34 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v32 = *(void *)(a2 + 80);
  int v20 = *(_DWORD *)(a2 + 88);
  int v26 = *(unsigned __int8 *)(a2 + 92);
  uint64_t v24 = *(void *)(a2 + 104);
  uint64_t v25 = *(void *)(a2 + 96);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  char v12 = sub_326C8(*(unsigned char *)a1, *(unsigned char *)a2);
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v2 == v7)
  {
    if (v4 == v9 && v3 == v8 || (v14 = sub_27E370(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v5 == v11 && v6 == v10 || (v15 = sub_27E370(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v39 == v38 && v37 == v36 || (v16 = sub_27E370(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (v35)
          {
            if (!v34) {
              return 0;
            }
            if (v31 != v30 || v35 != v34)
            {
              char v17 = sub_27E370();
              uint64_t result = 0;
              if ((v17 & 1) == 0) {
                return result;
              }
            }
          }
          else if (v34)
          {
            return 0;
          }
          if (v33)
          {
            if (v32)
            {
              if (v29 != v28 || v33 != v32)
              {
                char v18 = sub_27E370();
                uint64_t result = 0;
                if ((v18 & 1) == 0) {
                  return result;
                }
              }
LABEL_26:
              if (v27)
              {
                if (!v26) {
                  return 0;
                }
              }
              else
              {
                char v19 = v26;
                if (v22 != v20) {
                  char v19 = 1;
                }
                if (v19) {
                  return 0;
                }
              }
              if (v21 == v25 && v23 == v24) {
                return 1;
              }
              return sub_27E370();
            }
          }
          else if (!v32)
          {
            goto LABEL_26;
          }
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_27AA7C()
{
  unint64_t result = qword_327C70;
  if (!qword_327C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C70);
  }
  return result;
}

unint64_t sub_27AAD0()
{
  unint64_t result = qword_327C78;
  if (!qword_327C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C78);
  }
  return result;
}

unint64_t sub_27AB24()
{
  unint64_t result = qword_327C88;
  if (!qword_327C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C88);
  }
  return result;
}

uint64_t destroy for SectionData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SectionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SectionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SectionData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for SectionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionData()
{
  return &type metadata for SectionData;
}

unsigned char *storeEnumTagSinglePayload for SectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27AFE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionData.CodingKeys()
{
  return &type metadata for SectionData.CodingKeys;
}

unint64_t sub_27B024()
{
  unint64_t result = qword_327C90;
  if (!qword_327C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C90);
  }
  return result;
}

unint64_t sub_27B07C()
{
  unint64_t result = qword_327C98;
  if (!qword_327C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327C98);
  }
  return result;
}

unint64_t sub_27B0D4()
{
  unint64_t result = qword_327CA0;
  if (!qword_327CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327CA0);
  }
  return result;
}

uint64_t sub_27B128(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079;
  if (v2 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xED00007865646E49 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69536C6C6563 && a2 == 0xE800000000000000 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002B2190 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6974636553627573 && a2 == 0xEC00000044496E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6974636553627573 && a2 == 0xEE00656D614E6E6FLL || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002AE540 || (sub_27E370() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_27E370();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_27B52C()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27B6C0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27B7E0()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27B910()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27BA40()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27BB24()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27BC60()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27BD88()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27BEE4()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C000()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C0FC()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C248()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C394()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C514()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C624()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C744()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_27C854()
{
  sub_27DDF0();

  return swift_bridgeObjectRelease();
}

BookAnalytics::DialogType_optional __swiftcall DialogType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2FA460;
  v8._object = object;
  unint64_t v5 = sub_27E1B0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 10;
  if (v5 < 0xA) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t DialogType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x76616E556B6F6F62;
      break;
    case 3:
      unint64_t result = 0x6C70704177656976;
      break;
    case 4:
      unint64_t result = 0x63694E7265746E65;
      break;
    case 5:
      unint64_t result = 0x6976655274726F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000021;
      break;
    case 9:
      unint64_t result = 0x6F53736569726573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_27CBEC()
{
  unint64_t result = qword_327CA8;
  if (!qword_327CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327CA8);
  }
  return result;
}

Swift::Int sub_27CC40()
{
  return sub_27E420();
}

uint64_t sub_27CC88()
{
  return sub_27C854();
}

Swift::Int sub_27CC90()
{
  return sub_27E420();
}

BookAnalytics::DialogType_optional sub_27CCD4(Swift::String *a1)
{
  return DialogType.init(rawValue:)(*a1);
}

unint64_t sub_27CCE0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DialogType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_27CD08()
{
  return sub_27DED0();
}

uint64_t sub_27CD68()
{
  return sub_27DEC0();
}

unsigned char *storeEnumTagSinglePayload for DialogType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x27CE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogType()
{
  return &type metadata for DialogType;
}

unint64_t sub_27CEBC()
{
  unint64_t result = qword_327CB0;
  if (!qword_327CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_327CB0);
  }
  return result;
}

uint64_t sub_27CF10()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27CF20()
{
  return type metadata accessor for Notification();
}

uint64_t sub_27CF30()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t sub_27CF40()
{
  return URLComponents.url.getter();
}

uint64_t sub_27CF50()
{
  return URLComponents.path.setter();
}

uint64_t sub_27CF60()
{
  return URLComponents.query.setter();
}

uint64_t sub_27CF70()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_27CF80()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_27CF90()
{
  return URL.isFileURL.getter();
}

uint64_t sub_27CFA0()
{
  return URL.pathExtension.getter();
}

uint64_t sub_27CFB0()
{
  return URL.absoluteString.getter();
}

void sub_27CFC0(NSURL *retstr@<X8>)
{
}

uint64_t sub_27CFD0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27CFE0()
{
  return URL.init(string:)();
}

uint64_t sub_27CFF0()
{
  return type metadata accessor for URL();
}

NSData sub_27D000()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_27D010()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27D020()
{
  return Date.timeIntervalSince(_:)();
}

NSDate sub_27D030()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_27D040()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_27D050()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_27D060()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_27D070()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27D080()
{
  return static Date.now.getter();
}

uint64_t sub_27D090()
{
  return Date.init()();
}

uint64_t sub_27D0A0()
{
  return type metadata accessor for Date();
}

uint64_t sub_27D0B0()
{
  return UUID.uuidString.getter();
}

uint64_t sub_27D0C0()
{
  return UUID.init()();
}

uint64_t sub_27D0D0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_27D0E0()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_27D0F0()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t sub_27D100()
{
  return Locale.Region.identifier.getter();
}

uint64_t sub_27D110()
{
  return type metadata accessor for Locale.Region();
}

uint64_t sub_27D120()
{
  return static Locale.current.getter();
}

uint64_t sub_27D130()
{
  return Locale.Language.languageCode.getter();
}

uint64_t sub_27D140()
{
  return Locale.Language.region.getter();
}

uint64_t sub_27D150()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_27D160()
{
  return Locale.language.getter();
}

uint64_t sub_27D170()
{
  return type metadata accessor for Locale();
}

uint64_t sub_27D180()
{
  return TimeZone.secondsFromGMT(for:)();
}

uint64_t sub_27D190()
{
  return static TimeZone.current.getter();
}

uint64_t sub_27D1A0()
{
  return type metadata accessor for TimeZone();
}

void sub_27D1B0(Swift::Double timeout)
{
}

void sub_27D1C0()
{
}

uint64_t sub_27D1D0()
{
  return AppSessionManager.createSessionManager(with:)();
}

uint64_t sub_27D1E0()
{
  return AppSessionManager.init(accessQueue:trackingConsent:crashDetector:)();
}

uint64_t sub_27D1F0()
{
  return type metadata accessor for AppSessionManager();
}

uint64_t sub_27D200()
{
  return static AccessQueue.background.getter();
}

uint64_t sub_27D210()
{
  return type metadata accessor for AccessQueue();
}

uint64_t sub_27D220()
{
  return static FlushEvents.didEndSession.getter();
}

uint64_t sub_27D230()
{
  return static FlushEvents.didLeaveGroup.getter();
}

uint64_t sub_27D240()
{
  return static FlushEvents.didStartSession.getter();
}

uint64_t sub_27D250()
{
  return type metadata accessor for FlushEvents();
}

uint64_t sub_27D260()
{
  return SessionData.init(key:data:)();
}

uint64_t sub_27D270()
{
  return FlushManager.__allocating_init(appSessionManager:client:endpoint:contentType:config:clientFactory:)();
}

uint64_t sub_27D280()
{
  return dispatch thunk of FlushManager.flush(_:)();
}

uint64_t sub_27D290()
{
  return type metadata accessor for FlushManager();
}

uint64_t sub_27D2A0()
{
  return ProcessEvent.json.getter();
}

uint64_t sub_27D2B0()
{
  return ProcessEvent.name.getter();
}

uint64_t sub_27D2C0()
{
  return type metadata accessor for ProcessEvent();
}

uint64_t sub_27D2D0()
{
  return AccessTracker.explicitTime<A>(_:startTime:)();
}

uint64_t sub_27D2E0()
{
  return AccessTracker.push<A>(data:traits:file:line:)();
}

uint64_t sub_27D2F0()
{
  return AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
}

uint64_t sub_27D300()
{
  return static CrashDetector.shared.getter();
}

uint64_t sub_27D310()
{
  return type metadata accessor for CrashDetector();
}

uint64_t sub_27D320()
{
  return static DataEventType.requiresDiagnosticsConsent.getter();
}

uint64_t sub_27D330()
{
  return DataEventType.toDict(dataEventFormatter:)();
}

uint64_t sub_27D340()
{
  return DataEventType.toDict(timestampGranularity:)();
}

uint64_t sub_27D350()
{
  return DataEventType.toDict(timestampConfiguration:)();
}

uint64_t sub_27D360()
{
  return type metadata accessor for EventProperty();
}

uint64_t sub_27D370()
{
  return BridgedTracker.name.getter();
}

uint64_t sub_27D380()
{
  return type metadata accessor for DataEventTrait();
}

uint64_t sub_27D390()
{
  return FlushProcessor.init(flushEvents:flushInterval:)();
}

uint64_t sub_27D3A0()
{
  return type metadata accessor for FlushProcessor();
}

uint64_t sub_27D3B0()
{
  return SessionManager.processorManager.getter();
}

uint64_t sub_27D3C0()
{
  return SessionManager.__allocating_init(accessQueue:sessionGroupManager:flushProcessor:timestampJitter:privacyValidationProvider:)();
}

uint64_t sub_27D3D0()
{
  return SessionManager.end(endDate:completion:)();
}

uint64_t sub_27D3E0()
{
  return SessionManager.push<A>(_:traits:file:line:)();
}

uint64_t sub_27D3F0()
{
  return SessionManager.start(for:identifier:startDate:timestampJitter:)();
}

uint64_t sub_27D400()
{
  return static SessionManager.Options.gracefulNoSessionEventSubmission.getter();
}

uint64_t sub_27D410()
{
  return type metadata accessor for SessionManager.Options();
}

uint64_t sub_27D420()
{
  return SessionManager.tracker.getter();
}

uint64_t sub_27D430()
{
  return type metadata accessor for SessionManager();
}

uint64_t sub_27D440()
{
  return BridgedRawEvent.init(name:sessionGroup:timestampGranularity:properties:)();
}

uint64_t sub_27D450()
{
  return type metadata accessor for BridgedRawEvent();
}

uint64_t sub_27D460()
{
  return type metadata accessor for TimestampJitter();
}

void sub_27D470()
{
}

uint64_t sub_27D480()
{
  return static TrackingConsent.shared.getter();
}

uint64_t sub_27D490()
{
  return type metadata accessor for TrackingConsent();
}

uint64_t sub_27D4A0()
{
  return ProcessorManager.add(eventProcessor:)();
}

uint64_t sub_27D4B0()
{
  return type metadata accessor for EventSubmitResult();
}

uint64_t sub_27D500()
{
  return BridgedRawDataEvent.init(name:dictionary:)();
}

uint64_t sub_27D510()
{
  return type metadata accessor for BridgedRawDataEvent();
}

uint64_t sub_27D520()
{
  return static BridgedSessionGroup.default.getter();
}

uint64_t sub_27D530()
{
  return type metadata accessor for BridgedSessionGroup();
}

uint64_t sub_27D540()
{
  return SessionGroupManager.init(accessQueue:)();
}

uint64_t sub_27D550()
{
  return type metadata accessor for SessionGroupManager();
}

uint64_t sub_27D560()
{
  return LoggingEventProcessor.init(logFormat:subsystem:)();
}

uint64_t sub_27D570()
{
  return type metadata accessor for LoggingEventProcessor();
}

uint64_t sub_27D580()
{
  return dispatch thunk of BridgedDataEventTraits.unique.setter();
}

uint64_t sub_27D590()
{
  return dispatch thunk of BridgedDataEventTraits.onlyOnce.setter();
}

uint64_t sub_27D5A0()
{
  return type metadata accessor for BridgedDataEventTraits();
}

uint64_t sub_27D5B0()
{
  return UploadBatchEventConfig.with(maxEventsPerSessionBatch:)();
}

uint64_t sub_27D5C0()
{
  return UploadBatchEventConfig.with(debuggingEnabled:)();
}

uint64_t sub_27D5D0()
{
  return static UploadBatchEventConfig.default.getter();
}

uint64_t sub_27D5E0()
{
  return type metadata accessor for UploadBatchEventConfig();
}

uint64_t sub_27D5F0()
{
  return BridgedRawEventProperty.init(dataName:requirement:)();
}

uint64_t sub_27D600()
{
  return type metadata accessor for BridgedRawEventProperty();
}

uint64_t sub_27D610()
{
  return UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)();
}

uint64_t sub_27D620()
{
  return type metadata accessor for UploadBatchEventProcessor();
}

uint64_t sub_27D630()
{
  return type metadata accessor for LoggingEventProcessorFormat();
}

uint64_t sub_27D640()
{
  return SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)();
}

uint64_t sub_27D650()
{
  return type metadata accessor for SessionManagerConfiguration();
}

uint64_t sub_27D660()
{
  return URLSessionUploadClientFactory.init()();
}

uint64_t sub_27D670()
{
  return type metadata accessor for URLSessionUploadClientFactory();
}

uint64_t sub_27D680()
{
  return DisabledPrivacyValidationProvider.init()();
}

uint64_t sub_27D690()
{
  return type metadata accessor for DisabledPrivacyValidationProvider();
}

uint64_t sub_27D6A0()
{
  return dispatch thunk of JSON.toData(options:)();
}

uint64_t sub_27D6B0()
{
  return Client.__allocating_init(bundle:)();
}

uint64_t sub_27D6C0()
{
  return type metadata accessor for Client();
}

uint64_t sub_27D6D0()
{
  return Session.identifier.getter();
}

uint64_t sub_27D6E0()
{
  return Session.sessionData.getter();
}

uint64_t sub_27D6F0()
{
  return type metadata accessor for Session.Kind();
}

uint64_t sub_27D700()
{
  return type metadata accessor for Session();
}

uint64_t sub_27D710()
{
  return Tracker.parentTracker.getter();
}

uint64_t sub_27D720()
{
  return Tracker.bridgedTracker.getter();
}

uint64_t sub_27D730()
{
  return Tracker.transaction(block:)();
}

uint64_t sub_27D740()
{
  return Tracker.explicitTime<A>(_:startTime:)();
}

uint64_t sub_27D750()
{
  return Tracker.onSessionChange(block:)();
}

uint64_t sub_27D760()
{
  return Tracker.pop<A>(type:)();
}

uint64_t sub_27D770()
{
  return Tracker.path.getter();
}

uint64_t sub_27D780()
{
  return Tracker.push<A>(data:traits:file:line:)();
}

uint64_t sub_27D790()
{
  return Tracker.time<A>(_:submitAndRestartWithSession:)();
}

uint64_t sub_27D7A0()
{
  return Tracker.chain(name:identifier:)();
}

uint64_t sub_27D7B0()
{
  return Tracker.submit<A>(_:onlyIfTimed:completion:)();
}

uint64_t sub_27D7C0()
{
  return type metadata accessor for EventData();
}

uint64_t sub_27D7D0()
{
  return static EventType.timeDurationGranularity.getter();
}

uint64_t sub_27D7E0()
{
  return static EventType.requiresDiagnosticsConsent.getter();
}

uint64_t sub_27D7F0()
{
  return type metadata accessor for TimedData();
}

uint64_t sub_27D800()
{
  return type metadata accessor for LibraryBookInfo.BookType();
}

uint64_t sub_27D810()
{
  return LibraryBookInfo.type.getter();
}

uint64_t sub_27D820()
{
  return type metadata accessor for LibraryBookInfo();
}

uint64_t sub_27D830()
{
  return BookInfo.isIBA.getter();
}

uint64_t sub_27D840()
{
  return type metadata accessor for BookInfo();
}

uint64_t sub_27D850()
{
  return ContentInfo.libraryData.getter();
}

uint64_t sub_27D860()
{
  return ContentInfo.id.getter();
}

uint64_t sub_27D870()
{
  return ContentInfo.storeData.getter();
}

uint64_t sub_27D880()
{
  return UserDefault.wrappedValue.modify();
}

uint64_t sub_27D890()
{
  return UserDefault.wrappedValue.getter();
}

uint64_t sub_27D8A0()
{
  return UserDefault.wrappedValue.setter();
}

uint64_t sub_27D8B0()
{
  return type metadata accessor for UserDefault();
}

uint64_t sub_27D8C0()
{
  return UserDefault.init(_:defaults:defaultValue:)();
}

uint64_t sub_27D8D0()
{
  return static Capabilities.isInternalBuild.getter();
}

uint64_t sub_27D8E0()
{
  return type metadata accessor for AudiobookInfo();
}

uint64_t sub_27D8F0()
{
  return type metadata accessor for LibraryPDFInfo();
}

uint64_t sub_27D900()
{
  return type metadata accessor for BooksFeatureFlag();
}

uint64_t sub_27D910()
{
  return dispatch thunk of LibraryContentInfo.storeID.getter();
}

uint64_t sub_27D920()
{
  return type metadata accessor for LibraryAudiobookInfo();
}

uint64_t sub_27D930()
{
  return dispatch thunk of MAsset.isAudiobook.getter();
}

uint64_t sub_27D940()
{
  return MAsset.seriesResource.getter();
}

uint64_t sub_27D950()
{
  return MSeries.isOrdered.getter();
}

uint64_t sub_27D960()
{
  return type metadata accessor for PDFInfo();
}

uint64_t sub_27D970()
{
  return AssetInfo.isPartOfSeries.getter();
}

uint64_t sub_27D980()
{
  return OSAllocatedUnfairLock.valueWithLock.getter();
}

uint64_t sub_27D990()
{
  return Logger.logObject.getter();
}

uint64_t sub_27D9A0()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_27D9B0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_27D9C0()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_27D9D0()
{
  return PassthroughSubject.init()();
}

uint64_t sub_27D9E0()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_27D9F0()
{
  return type metadata accessor for ScenePhase();
}

uint64_t sub_27DA00()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_27DA10()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_27DA20()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_27DA30()
{
  return GeometryProxy.frameClippedToScrollViews(in:)();
}

uint64_t sub_27DA40()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_27DA50()
{
  return static EnvironmentKey._valuesEqual(_:_:)();
}

uint64_t sub_27DA70()
{
  return type metadata accessor for CoordinateSpace();
}

uint64_t sub_27DA90()
{
  return static DynamicProperty._propertyBehaviors.getter();
}

void sub_27DAA0()
{
}

uint64_t sub_27DAB0()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_27DAC0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_27DAD0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_27DAE0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_27DAF0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_27DB00()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_27DB10()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_27DB20()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_27DB30()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_27DB40()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_27DB50()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_27DB60()
{
  return View.environment<A>(_:_:)();
}

uint64_t sub_27DB70()
{
  return View.transformEnvironment<A>(_:transform:)();
}

uint64_t sub_27DB80()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_27DB90()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_27DBA0()
{
  return static Color.red.getter();
}

uint64_t sub_27DBB0()
{
  return static Color.green.getter();
}

uint64_t sub_27DBC0()
{
  return Color.opacity(_:)();
}

uint64_t sub_27DBD0()
{
  return Group<A>.init(content:)();
}

uint64_t sub_27DBE0()
{
  return type metadata accessor for Group();
}

uint64_t sub_27DBF0()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_27DC00()
{
  return State.wrappedValue.getter();
}

uint64_t sub_27DC10()
{
  return State.wrappedValue.setter();
}

uint64_t sub_27DC20()
{
  return type metadata accessor for State();
}

uint64_t sub_27DC30()
{
  return static Alignment.center.getter();
}

uint64_t sub_27DC40()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_27DC50()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_27DC60()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_27DC70()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_27DC80()
{
  return static DispatchTime.now()();
}

uint64_t sub_27DC90()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_27DCA0()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_27DCB0()
{
  return + infix(_:_:)();
}

uint64_t sub_27DCC0()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_27DCD0()
{
  return dispatch thunk of ActionModel.actionMetrics.getter();
}

uint64_t sub_27DCE0()
{
  return type metadata accessor for PageMetrics();
}

uint64_t sub_27DCF0()
{
  return static ActionMetrics.notInstrumented.getter();
}

uint64_t sub_27DD00()
{
  return type metadata accessor for ActionMetrics();
}

uint64_t sub_27DD10()
{
  return ClosureAction.init(actionMetrics:body:)();
}

uint64_t sub_27DD20()
{
  return type metadata accessor for ClosureAction();
}

uint64_t sub_27DD30()
{
  return CompoundAction.init(actionMetrics:subactions:)();
}

uint64_t sub_27DD40()
{
  return type metadata accessor for CompoundAction();
}

uint64_t sub_27DD50()
{
  return BaseObjectGraph.inject<A>(_:)();
}

NSDictionary sub_27DD60()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_27DD70()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27DD80()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_27DD90()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_27DDA0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_27DDB0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27DDC0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_27DDD0(Swift::String pathComponent)
{
  return String.append(pathComponent:)(pathComponent)._countAndFlagsBits;
}

uint64_t sub_27DDE0()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_27DDF0()
{
  return String.hash(into:)();
}

void sub_27DE00(Swift::String a1)
{
}

uint64_t sub_27DE10()
{
  return String.init(cString:)();
}

Swift::Int sub_27DE20()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_27DE30()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_27DE40()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_27DE60()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_27DE70()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_27DE80(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_27DE90()
{
  return String.init<A>(_:)();
}

uint64_t sub_27DEA0()
{
  return String.subscript.getter();
}

uint64_t sub_27DEB0()
{
  return RawRepresentable<>.isEnabled.getter();
}

uint64_t sub_27DEC0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_27DED0()
{
  return RawRepresentable<>.init(from:)();
}

NSArray sub_27DEE0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_27DEF0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_27DF00()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_27DF10()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_27DF20()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_27DF30()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_27DF40()
{
  return Double.description.getter();
}

uint64_t sub_27DF50()
{
  return static Double.defaultJitterDeviation.getter();
}

uint64_t sub_27DF60()
{
  return Collection.isNotEmpty.getter();
}

uint64_t sub_27DF70()
{
  return Collection.first.getter();
}

Swift::UInt64 sub_27DF80()
{
  return NSFileHandle.seekToEnd()();
}

uint64_t sub_27DF90()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_27DFA0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_27DFB0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_27DFC0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_27DFD0()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_27DFE0()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_27DFF0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_27E000()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_27E010()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_27E020()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_27E030()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_27E040()
{
  return type metadata accessor for Optional();
}

uint64_t sub_27E050()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_27E060()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_27E070()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_27E080()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_27E090()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_27E0A0()
{
  return _HashTable.previousHole(before:)();
}

Swift::Int sub_27E0B0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_27E0C0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_27E0D0()
{
  return AnyHashable.init<A>(_:)();
}

void sub_27E0E0(Swift::Int a1)
{
}

uint64_t sub_27E0F0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_27E100()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_27E110()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_27E120()
{
  return type metadata accessor for LazyMapSequence();
}

uint64_t sub_27E130()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_27E140()
{
  return type metadata accessor for LazyFilterSequence();
}

uint64_t sub_27E150()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_27E160()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_27E170()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_27E180()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_27E190()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_27E1A0()
{
  return LazySequenceProtocol.compactMap<A>(_:)();
}

Swift::Int sub_27E1B0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_27E1C0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_27E1D0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_27E1E0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_27E1F0()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_27E200()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_27E210()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_27E220()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E230()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E240()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E250()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E260()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_27E270()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E280()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_27E290()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_27E2A0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_27E2B0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_27E2C0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_27E2D0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_27E2E0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_27E2F0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E300()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E310()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E320()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E330()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_27E340()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E350()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_27E370()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_27E380()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_27E390()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_27E3A0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_27E3B0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_27E3C0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_27E3D0()
{
  return Error._code.getter();
}

uint64_t sub_27E3E0()
{
  return Error._domain.getter();
}

uint64_t sub_27E3F0()
{
  return Error._userInfo.getter();
}

uint64_t sub_27E400()
{
  return Hasher.init(_seed:)();
}

void sub_27E410(Swift::UInt a1)
{
}

Swift::Int sub_27E420()
{
  return Hasher._finalize()();
}

uint64_t sub_27E430()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_27E440()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_27E470()
{
  return _typeName(_:qualified:)();
}

uint64_t BUOnboardingBooksBundleID()
{
  return _BUOnboardingBooksBundleID();
}

void CCHmacFinal(CCHmacContext *ctx, void *macOut)
{
}

void CCHmacInit(CCHmacContext *ctx, CCHmacAlgorithm algorithm, const void *key, size_t keyLength)
{
}

void CCHmacUpdate(CCHmacContext *ctx, const void *data, size_t dataLength)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return _SCNetworkReachabilityCreateWithAddress(allocator, address);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int uname(utsname *a1)
{
  return _uname(a1);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_base64EncodedDataWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedDataWithOptions:];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedStringWithOptions:];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 dataUsingEncoding:];
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 dataWithBytes:length:];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_eventBody(void *a1, const char *a2, ...)
{
  return _[a1 eventBody];
}

id objc_msgSend_fetchPrivateDataForKey_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchPrivateDataForKey:completion:];
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:encoding:];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isStarting(void *a1, const char *a2, ...)
{
  return _[a1 isStarting];
}

id objc_msgSend_last(void *a1, const char *a2, ...)
{
  return _[a1 last];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_privateDataChanged_(void *a1, const char *a2, ...)
{
  return [a1 privateDataChanged:];
}

id objc_msgSend_publisherFromStartTime_(void *a1, const char *a2, ...)
{
  return [a1 publisherFromStartTime:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setUserDataValue_forKey_completion_(void *a1, const char *a2, ...)
{
  return [a1 setUserDataValue:forKey:completion:];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sinkWithCompletion_receiveInput_(void *a1, const char *a2, ...)
{
  return [a1 sinkWithCompletion:receiveInput:];
}

id objc_msgSend_userDataManager(void *a1, const char *a2, ...)
{
  return _[a1 userDataManager];
}

id objc_msgSend_userDatumForKey_completion_(void *a1, const char *a2, ...)
{
  return [a1 userDatumForKey:completion:];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _[a1 workQueue];
}